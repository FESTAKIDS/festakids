<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
 

 
 
<item>
<title>[B][COLOR darkgoldenrod]* [COLOR yellow]Grupo Telegram[COLOR deepskyblue] @addonfestaycristal[/COLOR][/B]</title>
<link>NOLINK</link>
<thumbnail>https://i.imgur.com/pmv3nZ0.png<thumbnail>
<fanart>https://i.imgur.com/r2bQyc9.jpg</fanart>
</item>


<item>
<title>[B][COLOR darkgoldenrod]* [COLOR gold]STAR WARS [COLOR white]CINE[/COLOR][/B]</title>  
 <link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[makelist2.param3]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MDNSZ0FBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFV1RGTmVtc3pUa1JqTVUxNldYcFBSRmsxVGxSTmVrNVVXVEpPZWswd1RXcGthRTV0UlhwUFJGVXhUWHBCTUUxVVNtMU9WRmt5V1ZSVk0wMTZVVEJhUkZreFRrZEZNRTlFV1hwTmVrbDZUMFJSTUUxNlFUQk5WRkV5VGxSTk1VMXFUVEJPYlVreFRtcFNhVTU2YXpKTmFtTTBUa1JyTUZwRVdtMU9iVlV6V1ZSUk5VNXRWVEZOUkZKcVRucE5NbGxxV1RWT1ZFa3dUMVJhYkU1VVZUTk5lazAwVFcxWk1GbDZUWGhPZWsxNlRWUlplVTVVUlROT1ZFMHpUbnBKZWs1NlZUVk9SRkV3VFhwVk5VNXFaM3BOUkZFeVRtcG5NVTFVVFRGT2FrVXhUMVJrYUU1RWF6TlBWRkpyVG5wcmVrNUVZM2xPUkdzeFRucFJNazV0VlhsYWFrMDFUa2RWTTA1VVkzZE9Na1V5V2tSTk5FMXRXVEZPUkdSb1RYcHJlVnBxV1RGT2VtY3pUbXBLYVUxdFNUTk5SRmt3VFcxWmVWbHFXbXROZWtreFdWUmpNVTVFWjNsYWFrMDFUbnByZWsxVVNtMU5iVmt5VFhwamVFNXRVVEpOVkUxNVRXMVplazE2WkdoT2VsRjZUbnBaTWs1dFJYcE5lazEzVFhwck1VMUVZM3BOZWsxNVdtcE5NMDV0UlRGTmVsVjNUbnByTTA1cVNtMU5iVmw2VFZSU2FrMTZhekZQUkdNd1RYcE5NbHBVWXpWT2FrMHdUMFJhYkUxdFdYbGFhazB6VGxSUmVrOVVTbWxOYlVsNlQxUk5kMDVxV1RCT2FtTXdUbXBWZWsxNldYaE9lbGt3V21wVk1rNTZWVEpPYW1NeVRsUk5NazVFVFRCT1IxbDZUbFJSTkU1cVVYcE9SRkpwVFhwTmVrOUVXbXBOZWtreFRsUlplRTVxVlROT1JFMHpUa2ROTUUxcVkzZE5lazB5V1hwTk1FNVVaekZQUkUxNlRtMUpNazVFV214T2VsRXdXbFJqZUU1SFdURk9lbFpvVGtkRk0wMVVZM2hOZWsxNVdtcFZNMDVFVVROUFZFMDFUbnBWTWs1RVdYcE9SMDB4VFVSYWJVNTZUWHBOZWxFMVRYcGpNMDFVV210T2VrRXpUbXBhYlUxNlkzcE5lbHByVG5wWk1rNVVUVFJPUkZFelRucE5lRTU2U1RKT2VrMTZUbXBWZVZscVZUUk9lbU16V1ZSWk0wMXRTWHBPZWxwdFRYcGpNMDVxVlRKTmVtY3pUWHBTYUUxNlkzcFBWRlYzVFhwTk1GbFVXbWhPYlVsNlRVUlZlRTVxV1RKYVJFMHpUa1JWZWsxRVVteE5iVmt5VFdwU2JVMTZUVEJPYWxVd1RrZEplazE2VVhwT1ZFMTZUbnBaZVU1dFRUQmFhbHBxVG0xWmVrNTZVbXBPTWtVeVRtcGpkMDVIVVRKYWFsVTFUWHBGTUZwVVdtbE9SR2Q2VG1wamQwNUhTVEpPUkZVd1RsUlZNRTU2V21wTmVrRjZUWHBaTlU1dFJUQk9hbU42VFhwamVrMVVaR2hPYWtVd1RucGFiVTE2WnpOT1ZFMHdUbnBuTUU1RVVtaE9WRlV3VGxSak1VNUhUVE5PYWsxM1RtMU5NVTFxVVRKT1ZGa3dUbnBqTlU1NlJUSmFWRlpvVFhwUk1scEVUWGRPVkdjeFRucFZNRTE2VlRCYWFsSnJUWHBKTTA5VVdYbE9lbGt3V2xSak0wNXFVVEJQUkZWNlRrUnJNMDVFVlRST1ZGVjZUbXBSTTA1cVl6Tk5WR00xVGxSTmVrNXFXWGxOZWtFeFRrUlNhVTE2U1RKUFZGa3hUbTFaZWsxcVZYbE9WRkV5V1hwak1VMTZZekJPYW1Sb1RtcFpNMDVVVVRCT2VsRXlUa1JTYUU1cVJUSmFSRXBwVG5wak1WbFVXVFJPUjFVelRYcFZlVTU2VFhwTmFsazBUbFJGZWs5RVRURk9WRlV5V1ZSa2FFNHlSVEpaVkZsNFRqSkZNRTFVU20xT1IwMHhXVlJqTWs1VVJUSmFhazB6VFhwVk0wMUVZM3BPYW1NeVQwUlZNazE2U1hwT2FscHRUbFJWTVU5VVRYbE9ha2t3VDFSamVFNXFZekpPZWxwcVRYcFZNazFVVW0xT2FsVXlUVlJaTWs1RVl6QlBSRkp0VG5wUk1sbDZXbXBPVkVrelRVUk5lazF0U1RKYVJGbDVUa2RSTWs1VVpHaE5lbU13VDBSTmVrNTZaekpQUkVwdFRrZFZNMDFxV1hwTmVrbDZUMVJqTVU1VVl6SmFSRTB4VG0xRk1VOVVVbWhOZWxWNlRsUmpNazU2WnpGTlJGRXpUWHBWTUU1NlpHaE9SMWw1V1dwUk0wMXRTVEpaVkZsNVRsZEZNMWxVVlRCT1JFa3dXV3BOZWsxNmF6SmFhbEY1VFhwTk1sbHFZekZPUjFVeVdWUlZlVTE2UlRKT1JGSnJUa1JyZVZscVZtaE9SMFV5VG5wUk1VMXRXVE5OZWxrd1RXMUpNazVxVFhkT1JGVXlUbFJSTlUxdFdUSk5WR015VGxkRk1WbFVZM2hPVkVVelRYcGpOVTV0VFRCTmVsVXlUbFJCZWsxcVZYbE9hazE2VFZSTmQwMTZTVEJhVkdSb1RrZFZlazVVWTNkTmVrRXdUV3BWTTAxdFNURlBWRTB4VFhwbk1FNXFUWHBPZWxVeVRtcGpNazE2UlRGT2VrMHpUa1JWZVZwcVdUTk9iVmw2VFZSVmVFNTZXWHBPVkZrMVRsUkpNMWxVV21sTmVrVXpUMFJaTUUxNlp6TlBSRmt5VFhwVk1VOVVXbTFPZW1zd1dYcFZORTVVVVROTmVscHRUa2ROTTA5VVRUTk5lbEV5VFZSVk1VMTZZM3BQVkZwb1RYcG5NbHBVV1RGT2Vsa3lXbFJqTVU1cWF6Tk5SRkY2VGtSUk1rNVVVbXRPYW1NelRVUk5kMDVxYXpGTlJGa3hUbXBSTVU1NldYcE9hbFV5V1hwUk5VNUVXWHBQVkZwcVRsUlpNMDlFWXpKT1ZFa3pUMFJOTWs1RVRURk5lbEV6VG1wWk1scEVZekZPUjFGNlRucE5OVTVIUlRCTmFtTTBUbFJuTVU5VVpHaE5lbXQ1V1dwVmVFNUVaM3BPVkZwdFRsUnJNazVVV20xT2FtY3dXbFJOTWs1Nll6Rk5SRnByVG5wbk1VOUVVbTFPUjFVeVQwUlZORTE2U1RKWmVsSnJUbnBWTTA5VVkzaE9iVlV3VG5wU2EwMTZTVE5PZWxVd1RYcHJNazlFWXpKT1Iwa3lXWHBaZWs1RVJYbFphbGswVGxSck1VMUVUWHBPUjFrd1drUlpNazVYUlhwT1JGSm9UbnBCTVU5VVdUSk5la1V4VFhwUk1rNXRXVE5PVkUweFRucEJNRmw2VFRST2JVVXlUMFJaZUUxNmF6Tk9lazB6VFhwRmVrOUVUVFZPYW1Nd1dYcE5ORTVxWXpCWmVtTXhUWHBSTTAxcVRUVk9SR3N4VG1wS2FVNUVWWGxhYWxreVRtcHJNMDU2VVRSTmJVa3pUMFJWTlU1SFNURk5hazE0VFhwWk0wNVVTbWxPUkdzeFRrUlpNVTE2UVRKYWFrMHhUVzFaZWs1NldUTk9WRWt6VG1wV2FFNXFTVEZQVkZFelRXMUpNMWxVV210T2FrMHlUMFJLYlUxNlZUSlpWRlYzVG5wRk1FMVVWWGRPUjFVd1RrUk5NMDVFVVRKYVZHTjRUbTFKTWxwVVVtcE9SRWt5VFdwWk0wNTZWWGxaYWxFeVRucGplazU2VlRGT1JHY3pUMVJqZWs1dFZYcE5lbU42VGxSRmVrNTZXVEZPYW1kNlRrUk5lRTVFV1RKYVZFMHpUbFJOTWxsNlRUSk9SRWt5VG5wS2FVNUVXWHBPUkUweVRsUlJNbHBVVlRST1YwVXhUMVJSTWsxNlRYcE9SRkY2VG1wVmVrOUVVVEJPVkVFeFRVUmFhRTVxU1hwTmFsRXpUbXBaTVUxRVl6Sk9SRWt6VGxSTk1FNTZXVEZPUkZWNlRtcG5NMDVxVlhwT2JWVXpUbXBSTUUxNlkzcE5SRkpxVFhwUk0wMTZUVFJPUjBsNlQwUk5OVTVIVlROT1JFMTNUbTFGTTA1cVZUTk5la1V3V1hwUk5VNUVXVEpPYWxwb1RYcEpNazVxWXpST2FrbDZUMVJhYUU1VVNUQk9hbFYzVFcxWk1FNVVWWGRPYlUweFRrUlJlVTF0U1RGWlZGVXpUbFJqZWsxcVdUQk9SRVV3VDBSWk1FNVVXVEJaZWxGNFRYcE5NMDlVWXpKTmJVa3hUV3BhYWs1dFRUQk9WRTB6VG5wbmVrMTZXbWxPYW1Nd1dYcE5OVTVxWXpGTlJGcHRUbTFKTUZsNlpHaE9iVWt5VFhwS2JVMXRTVEpOYWxVMVRtcFpNazFxVVRWT1IwMTZUbFJSTUU1SFdYcE9hbEUwVFcxWk0wMUVUWHBPUkUxNlRucGpkMDVxWXpCT1JFMDFUbnBOTUU1RVZUVk9iVWt5VG1wTk1FNUhSVEJhYWswMVRucEZNbGw2U21sT1IxRXpUVlJhYTA1RVRUTk5WRkV5VGxSQk0wNXFVVEpOYlZsNlRsUk5lRTVFVVRKT2FrMDBUbTFOTWxwVVZUVk9SR3N4V1ZSTk1FNXFZekJOYWxreVRtMVZNRmxVVW14T2Vtc3lUMVJTYWsxNll6SlphbGw1VG1wck1FMXFVVFJPZWxFd1QxUlpOVTVFWnpOWlZGbDZUbFJaZWs1VVkzaE9WRlV6VGxSVk5FNUhXVEphYWxrd1RXMVpNazlVVFRGTmJVa3lXa1JTYTAxNlVUSlplbFUwVG5wVk1FMVVVVFJPYWtVelRXcFZlRTVVYXpKTmFtTXpUbFJuTVU1NlRYZE9SMDB4VDFSTmVVMTZZekJPVkZWNFRYcFZNVTFxWXpGT2FtY3hUMFJaTUU1SFJUSmFWRkY1VFhwTk1rOVVWVFJPYlVVeVRucGplVTVIU1RGTlJFMDFUa2RKTUU1NlVteE5iVWt3VFhwUk1FNUVZekJaVkdSb1RYcFZlVmxxV1RSTmVrMTZUMVJhYUU1VVp6SmFWR00xVGxSbk1GcHFVbXRPUkZGNlQwUlplazE2UlRKYVJGVTBUWHBqZWs1RVRUQk9hbWN5VFhwWmVrNUVUVEpPZWxreVRYcEJNRmxxV1RKT2JWVXlUbFJaTkU1RVZURlBWRmt6VGxSWmVWbHFWVFZPYW1zelRtcGFiVTVFVFRKTmFrMHhUbFJSTUZscVVtcE9SR016VFdwU2FVNTZTVEpPZWxreFRYcHJNRTE2V1RSTmJVa3lXWHBqZWs1VVFURk5SRkV6VGxSUk1rMTZWWHBPYWtrelQwUmplVTVVWnpGTmFscHFUbnByTVU1VVdtbE9SMVV3V21wUmVFNXRWVE5QVkZKcFRucFZNMWxVWXpCT1JFa3dUa1JWTWs1RVZUTlpWRTB6VGpKRk1VNTZXVEpPVkdzd1QwUktiVTU2WXpOT2VrMTRUa2RSTVU1RVpHaE9hbXQ2VFhwVk1FNUVZM2xaYWxsNVRsZEZlazFxVlhwT1JHY3pUMFJSZVUxNlRUQk9lbGw2VG1wWk1scFVVbWhPYWsxNVdXcFNhVTU2V1RCWmVsRjRUa1JuZWs1NldUTk9lbGt5V1hwWk1VNTZZM2xhYWxrMVRrUkZlazlVVlRWT1ZHY3pUMFJaTUU1SFVUSmFhbEV5VFhwbk1VOVVaR2hPZWxVeFRWUlpNazE2VVROT1JFMDFUWHBuZWs1VVRUUk9lbU42VDFSWmVFNUhUVEJOZWxwc1RrZEpNazVxWTNwT2Fsa3dXWHBaZWs1NmEzcE9lazB5VG5wak1VOUVXbWhPYWtrd1dtcE5NazVVWnpKT1JHTjZUbXByTUZsVVZUUk5lbXN3VFZSYWJFMTZaekJPZW1NeFRrZEpNVmxVU21sT2FtY3hUVVJWZUU1VVZYcE9lbEUxVGtSSk1VNXFaR2hPUkZFeVRtcGFhRTVFVlRKT2FrMDBUbFJyTUU5VVRUQk9SRVV5V2xSTmVrNVhSVEphYWxwcVRtcFpNRTU2VW1sTmJVa3pUMFJTYTA1cVdUQmFSRkpxVFhwbk1GbDZZekZPUjFGNlQwUlNiRTVIVVRGTmVsa3hUa2RWTWxwVVVUQk9SMVV3V1hwWk5FNUVXWGxhYWsxNlRrZE5lVnBxVVhwT2FrMTVXV3BqZDAxNlp6QlpWRXB0VGtSVk1FMVVVVE5OZWtFd1dsUmpNVTE2VVROT1JGVXhUa2RaZVZwcVdtMU5iVmw2VGtSU2FVNXFSVEJPUkZVMFRtcGpNMDFxWXpCT1JHTXpUbXBSZWs1RVl6Tk9WRTB3VGxSWmVWbHFWVEJPYlZVeFRWUmpNazVFVlRCWlZGVXpUWHBCTUU1cVZYZE9SRVV4V1ZSak1VMTZVVEZOYWxwc1RYcHJNbHBFWXpKT1Ixa3lUWHBaTTA1WFJYcFBSRTB6VGxSck0wMUVZM3BPYlZGNVdXcE5NMDVVVFRCWlZGRTFUWHByTWs5VVZUUk5lbEV4VGtSUk1FNTZWWHBQUkZFeVRYcFZNRmxVWXpKT1JFMHdUV3BqTVU1RWF6Sk5WRTB5VGtSck1WbFVUVEpPVkdNeVdrUmpORTVxYXpKWmFtTXhUa1JaTUZwcVRYaE9SMWt5V2xSWk1FNTZTWHBPUkZwb1RucEpNbGxVVlhkT2FrVXdUWHBLYVU1SFdUSmFSRTE2VFhwak1FOUVXVEZOZW1zd1RXcGFiRTU2WXpKWlZGazBUbTFGTWs1cVVYbE9SMDB5V2xSWk5VNVVUWHBOUkZVelRtMVZNbGw2VVRKT1IxbDVXV3BqZWs1RVRUQmFhbU42VGxSVk0wMUVTbTFPYlZFd1QwUlNhMDE2WnpOTmVsVXpUa2RGTUU1RVRYcE5la0V6VG5wVk1VMTZVWHBOZWxKdFRucHJNazU2U20xT2JVVXhUV3BTYUU1RVRUSk9hazE1VGxSWmVrMXFUVEpPUkdzeFRXcFZlRTV0VFhwUFZHTjNUbnBqTVUxNlNtbE9WR3Q2VGtSTk1FNTZSVEpQUkZrd1RqSkZNVTFVVW1sTmJWa3hUVlJhYUU1NldUTk9lbEpyVG0xVk1rNTZVVEpPYWxreVRWUk5NVTVFUlhsWmFsVTFUa2RWZWs1NlVUUk9SRlV3V1hwak1rNHlSVEpOZWxWNlRucFJNMWxVV214T2JWRXpUWHBWZVU1WFJYcE9SRlV4VFhwcmVrMXFZekJPVkdzeVdYcFZNazF0U1RCUFJGVjVUa1JSTTA5RVVtMU9lbGw1V1dwVmVFMTZUVEJPUkZVd1RucEJNazlVU20xTmVtTXpUWHBSZUU1cVVUTlpWRkV6VGtkWk1GbHFVbXROYlVreFRWUlpORTF0U1ROTlJFcHBUbTFGTVU5RVNtbE9SMUY2VG5wTmVrNTZXWGxhYWxVeFRucGpNRTVVVVRCTmJVa3hUbFJqTkU1RVVYcE5lazE2VGxSUk1GbFVZelZPYlVVeVdsUmFhRTVFVFROT1ZHTXpUbnBaTTA1VVdUVk9SMDE1V1dwUmVrNUhUVE5aVkZrd1RYcG5NMDE2U21sT1JGRXdUMFJqTlU1dFZUQk5WR042VFhwbk1FNTZZelJPUkZVeFRVUmplazVIV1ROT1ZGRXpUVzFaTWs1NlVYaE5lbFY2VFVSWk0wNUhTWHBPUkZwclRucG5NRTVFVFhwT2FrMHpUa1JhYlU1SFJYbFphbHB0VG1wWmVrOUVXbXBPVjBVelRXcE5ORTVYUlhwTmVsVXdUbnBqTVUxRVdYaE9WRWw2VDBSak5FNUVTVEZPZWxVd1RXMUplazlFWXpCT1JGVjZUbFJOTTA1VVJUSk5hazB3VG5wUk0wOVVVVEpPVkVFelQxUlJlRTVVUVRCT1ZGVjZUVzFKTUUxVVl6Vk9Na1V4VFVSak5FMTZTVE5PZWxKcVRucG5NVTlVV1ROT1Ixa3lUbXBaZVU1cVRURk5WRlY1VFhwck1scHFZelZOZW1jeFRYcGpNazE2UlRCTmFsRjVUbTFWTWxsNll6Sk9hbXN5V2xSVmQwMTZXVEZOYWxWNFRrUmplazU2VVhwT1ZFRjZUbnBSZUU1RVp6Tk5hbGw1VGpKRmVrNTZWbWhOYlVrd1drUlplazF0V1RKYWFscHFUbXBOTVUxcVVUSk5la2t5VDBSVk1rMTZVVEphUkdNeVRrUm5NRTVxVW10T2VrMHhUMVJOTkU1SFRUTk9WRlV6VGtSWk0wNXFUVE5PYlZWNlQwUmplVTU2VFRKTlZFcHRUbTFaTVUxNlNtMU9WRWt4VGtSTk0wNUVhekZOUkUwd1RrUmpNRnBxVW1wTmVrMHdUWHBWZDA1cVp6TlBSR00wVG0xTmVrNXFXbTFPYlZWNlRsUlJOVTF0U1ROUFJGVTBUbXByTUUxcVRYcE9iVmt5V1ZSU2FrNUVVVE5PYWxVeFRYcFpNbHBFU20xT1JHdDZUa1JOTVUxNlNUQlBSRTAwVG5wck0wNXFZekZOZWxsNlRsUlJNVTVxU1RGUFZGRjVUWHBOTVZsVVdtcE9ha2t3V2xSU2FrNXFXVEphYWxVeVRsUkJlazVFV1ROT2JVbDZUVlJOTTA1SFdUTk9SRXB0VFhwRk1rNTZVbXRPVkZWNlQwUlNhVTF0V1RKWmVrcHRUbFJOTTFsVVRUVk9SMGt5V2tSUmVVNXFUVEJPYWxab1RucHJNRTVVVW1wTmJWa3hUVlJqZDAxNlNUSlphbFYzVG5wck1VNXFWWHBOZW10NlRucFJNMDVxV1ROT2FsRjRUWHBuZWs1RVVtMU5iVWt4VDFSVmVFMTZWVEpaYWxWNlRrZE5lazVFWXpWT1ZFa3lUMFJWZDA1dFNUQk9SRTAxVG0xSk1VNVVUVFJPYWtreFRYcFZlRTF0V1RCYVJFMTVUWHByTVU1RVRYcE5lbEV6VDBSak1rMTZVVEJOYWxwb1RtMUplazE2V1RWT1YwVjZUbnBaTlU1VVdUTk9SRlpvVGpKRk0wOUVXWGxPZWswd1RWUmFhRTE2VlRCTmFsVjVUbnBWTWsxcVRUVk9hbU15V1hwWk5FNUhVVEZQUkZFMVRsUkpNRnBVVVhsT1JFMTZUMFJqZWs1Nlp6SlBSRmt5VG5wbk1rNTZWVFJPYW1zd1RsUlpNazVIV1hwT1JGRjRUbnBKTTFsVVVYaE9SMWw2VDFSak1FNXRVVE5PZWsxNlRtcHJNbHBVVW0xTmVra3dUa1JaTWsxdFdYcFBWRmsxVG1wTmVWcHFXVEJPYWtsNVdtcGFhRTVVVlhwTmVtTXpUa1JSZWs1RVRURk9SMFV3V1ZSYWFFNXFZekpaYWxWM1RsUmpNRTFVVFRST2VrRXpUMVJaTVUxdFdUSk9hbFV6VGtSak1sbDZVbWxPUkdjeVQwUmpORTE2VFhsYWFsVTFUbFJGTUU5RVkzbE9SRlV3V2xSTmVVNTZRVE5PVkZGNlRrUm5NazVxV1hoT2FrVXlUa1JWTUU1VVFUTk5WRTE2VGxSck1sbFVUVEZPYW1NeVRXcFNhMDVIVlhsWmFtUm9Ua2RKTTA1VVVtbE9hbEV6VFZSVmVVNXFVVEpQVkVwdFRrUkZlazU2VlRSTmVtY3dXa1JaTWs1SFNYbFphbEUxVG1wSk1rNUVWbWhPVkdNeldWUlJORTV0VVRCTmFsa3dUbFJGTTFsVVkzcE9hbXN5VFdwak1VNXRWWHBOZWxrMVRucEJlVmxxWXpOT1JFMTZUV3BWTVU1cVp6QlpWR042VGtkSk1VMUVXWGhPYWtrelRsUlJNVTVxVVRGTmFsRXhUVzFaTWxwcVZYcE5lbWN4VDBSak1VNUVhekphYWswMFRYcG5lazFVVFhoT1JHY3lUbXBSZVU1RVVUTk9hbFV4VFhwUmVrNVVUWGhPYWxGNlQwUlpORTVxV1hwUFJGRXpUa2RaTTAxRVZUQk5la2t5VDBSVmQwMTZXWHBQVkZreVRYcFplazlVVVROT1ZFRXpUWHBqTVUxNldURk5WRmt5VGpKRmVrMUVWVEpOYlVrelRucFZlVTU2V1RCT2VscHBUbFJKTUZsNlRUTk9WRTE2VFZSTmVVNUVUWGxaYWxKc1RYcFpNRTlVU20xTmVrMHdXV3BaTVU1cVRURk5SRnBvVGtkWk1sbFVUWHBPVkVFeVQxUlZNRTE2UVROTmFrMDBUbnBSTTA5RVdtbE9WRUY2VFdwU2FrNXFUVE5OYWtwcFRsZEZNVTVxVFRCT1JFMHhUVVJqZWs0eVJUSk9hbHBzVG1wSk1GcEVXbWhOZWxreVRXcFZNVTVVUlRKTlZHUm9UVzFaTTA1VVVUSk5iVmt3V2tSWk5VNHlSVEpPZWsxNFRrZEZNRnBVVFROT2FtTXhUa1JOZUU1NlZUTk5SRmswVFhwUk1rOVVVVEJPZW1jd1RucFZkMDU2VFROT2VsbDZUbXBGTUZscVpHaE9SMGw1V1dwU2EwNXFZM3BPUkZVd1RucEplazFFVFRWTmVsa3hUbnBWTlU1RVJURk5SR00wVG1wWk1GcFVVbWhPYW1jelRWUlZNVTV0VlhsWmFrcHBUbXBGZWs1NldUSk9iVkV3VFdwWk1rNUVWVEJaZWxrMVRYcGpNMDlFVVRST1ZHY3dUbXBWZVU1RVJURlBSRTAxVGxkRmVrMUVUVEJOZWswd1RsUlNhRTVxVlRCUFZFMHhUbXBOTTA1NlZYZE9la2t3VDBSS2FVNUhTWGxaYWxVMVRrZEZNbHBxV1RST1Ixa3hUVlJqZDAxNlJUSlplbU42VGxSRk1VMUVUVFJPYW1zeFRtcGFhVTE2V1RCTlZGVjVUbFJuTVUxcVdtaE9WR2N5VDBSTmQwNUVWVEpPZWswMVRrZFpNRmxxWkdoT1ZFRXdUbnBTYTA1cVdUQk9WRnB0VG1wbk1scFVVVE5PYlVWNlRsUlNhRTVxV1RKTmFsRTFUbXBaZWs1NlVURk9hbGt6VG5wVk1FMXRXVE5QZE4wWUFBQkhSWGRhZWxadFdsRmFiRnB0ZUROYWJWb3dRVkZhTWt4SGNETkJlbG93UWxGTmQwRjZSREphUjNBelFXMUliRXgzY0ROQlIweHRRVzFhTkVGSFJEQkJkMDEyUVZGMGJWcFJUWHBhYlhRelFXMUVORnA2VmpOYWJVeHRRVWRhTTBKUlRHMWFiWEF3UVcxSWExcHRjRE5CVVV3MFFXMVdNMHhIY0RKYWJVNHdUWGRhTTBGdGNEQk5SMWQyUVcxU01GcDNXalZCZDNneFdrZEVNMEZVUkRKTlVWb3hRVWQ0TWt4M1dtcEJVVll4UVcxRmVWcHRlREZCYlUxNVFXMUlNRTEzUlhsYWJYQXlURWRFTWxwdGVEQkNVVm8wUVZSU01FeHRXbXhCVkZJeVFsRk1iRUZIUkROTVIwMTZRVzFPYkV4M1JHdEJSMDV0V2tkTmVGcHRXbTFhUjB3MVFVZE1NMXB0VFhWYWJVZ3lURWRFTUVGSFJETkJkMFF5UVhkNE0wSkhSRFJhYlZZeldsRmFOVnB0ZURGYVVVd3hRVkY0TUV4SFdqVkJVVWd3UWxGYU5VRkhlREJNYlhGMVFWRldiRTEzY0cxYWJVeHRRVzFNTkZwNlZqTmFiVWd3UVVkV01reHRSRFJhYlhBd1RVZHdNVUZ0VGpCTWQxb3dRVlJFTTFwdFRYaEJVVVJzVEhkTmVFRlVXakJCVVZkNlFWRndNbHBIY1hWQk1sSXlRbEZJYTFwdGVETmFiVm8xV20xTU1WcHRSRE5CZDNReVRHMXdORUY2VWpKTlIwMTNRVWRFTWxwM1RHMUJWRll3UWxGRU1VRkhUak5hUjBReFFYZE1iVUpIVEROQmQzUnNUWGRJTTBGUmNESk1kMGhxUVZGV00wRjNUR3RCZWxKdFdtMU1NMXB0UkRGQlVVMTVXbTFNTUZwSFRESkJkMGd5VEVkTU5WcDZURzFCZDB3MVFYZFdNMXBSV2pWQmJYUXdUWGRNTVVGdGREQk1iVnB0V20xMGJVRnRUWGxCZWxZd1RHMXdiVUY2VmpGQ1VVVjJRWGRNTVZwdFNEUkJSM2d4UVZGWGVscDZWakJNZDBocVFYcGFNRUYzVEcxQlVWWnRRVzF3YkVGUlRHMUJVVVYxUVcxV01GcDNjREphYlZJelFVZHdiVUY2UkcxQ1IwVjZRVlJNYlZwM1REUkJkM2d5UVhkWGVrRnRVakpNYlhBMVdtMVNNMXBSY0cxQmJYQXpXbmRGZVVGdFdqTkNSMDExUVhkYU1reEhWM3BCU2xJeFRFZGFNRUZSVm0xYWJYQXlRVlJNTTBKUlJETmFiWGd4UWtkeGRWcHRjRE5hVVhBMVFXMU1Na3hIUkcxQmVrZ3hRVzFNTkVGM2RETkNVVVY2UVhkRU1FSkhTR3BCYlZvd1duZGFNVnB0ZURKQmJWcHRRVWRJTWxwdFYzcEJSMGd3UVhkd05VRlJkREpCZDBWNFFXMUViVUZSY0ROQmQxSnRRVkZJYkVGNldqSk5VVVJzUVVkMGJWcEhSWGRCUjNRd1FYZHdiVUV5VWpCQ1VYQTBRVkZhTTBGM1RYaEJVVVJ0UWtkSU1FRjZTRE5DUjBReVFWRk1NbHAzVFhsQmVsb3lRVkZJTlVGNlNHMUJVWEF6UVVwU2JVRjNjRFZCTWxJd1FXMWFOVUZIUkRCYWJVd3dRWGRNYkUxM1JHeEJTbEl6V20xSU0xcHRSREJCVVVRd1FXMVdNa3hIVEcxQlVWcHRRbEZhTkVGSFRtMUNVVWhxUVVkd01GcHRXalJCYlU0elFXMU5lVUZ0U0ROQ1IwZzBXbTFPTVV4SFYzWmFiVXd3UWxGTWJVRjNXakJOZDFvMFFXMTBiVnBSVjNwQlVYQXhXbmR4ZFVGNlNERkJkM0JxV20xYU1VSkhXakZCZDNneVFrZGFORUZ0Y0RKTWJVMTRRWGQ0TVVKUmNEUkJWRVF5UVZGeGRWcHRVakpNZDBocVFVZDRNRUYzVjNaQmJVUnRXbEZOZVVGUlVqSkJkMDEyUVZGME1FRkhSR3hCZDB3d1FrZE1iVnB0U0RGQ1VVVjZRVlJXYkUxM1dqVmFla3d6UVZGTU1WcDZUREpCZDBWNVdtMUVNMEYzV2pWQmQwZ3hRWGR4ZFZwdFJEQk1SMFEwUVVkYWJVSkhTREZCTWxJd1RHMUlORUYzU0ROQlVVbDFRWGRFTWtGM1REVkJiWGh0V20xRmVFRjNkREZhUjFvd1FYZE1NMXBSY0d0QlIwd3hRa2RhYkVGdGRETmFkM0F3UVhkU01reHRXakZCZDBReldsRk5lRUZSVEROQlVVMTZRVEpTTTFwSFdqVkJiVTR5VFhkYU1scHRURE5hUjNCcVFXMVdNRnB0V2pOQlIwUXpXbmRNYlVGNlRETk1SMFYzUVVkT01rRjNTREJCYlZvd1FWRk5la0ZIVG0xQlVWcHNRVzEwYlVKSFdqQkJkMUl6V25kRmVrRkhXak5CVVV4clFYcEVNRUYzVERCQmVrd3lUVkZJYWtGM2NHMWFVWEJzUVRKU01FRnRUR3RCUjNBelFVZGFOVUYzU0RGQlIwMTRXbTFXTUVGM1JYaEJla3h0V2tkd01rRjNkREpCUjAxNldtMXdNa0YzUlhoQlZGWnRRbEZhTlVGdGRHeE1kMW8xUVVkNE0wSkhXalZCUjNneldtMU1NRnB0UkRGYVVWb3hRVzFNTVZwM1JYZEJiVXd3UVcxRU1rRjZTREpOUjBRelFVZE1NazFSU0RKYWJYUXlRWGR3TWtGVVJEQmFiVTExV20xMGJWcEhjR3RhYlZJeldsRk5kVUZ0VERKYWQwZ3pXbTFXTTBGdFJYZEJkM2d6V20xd00wRnRUREphYlVWNldtMTBiVnAzUkRWQmQwUXpRa2RhTkZwdFdqQk5VWEJzUVZSRU1FeHRXalJCVVV3eVFVZEpkVnB0VGpOQmQwaHJRVzFTTWtGM1NETkJVVm95UVhkSU1FRlJURE5hUjBRelFWRjBiVUZ0Y1hWYWJWb3hRVzFNTUVGSFVqSmFkMFExUVVwU00wSkhjRFJCZDFveVRFZEVNVUY2U0cxQlVVd3lRWHBhTVZwUlREUkJkMHd5UVhkd05VRXlVbTFDVVVnelFXMTRNRTFIUlhsQlIxb3dRVkZhYlVGdFNEQk5VVWcxV25wV01FSkhSR3hhYlhneVRIZElORUYzVmpOQlIzQTFRVWQwTTBKUlJYaEJiWGd5V2tkd01FRjNVakJDUjFkMlFVZEVNMEYzV2pSQlIwNHlUVWR3YkVGSGVETmFkMW8xUVZSSU1rSlJUR3hhZWt3elFsRk1NVUZIY0RCQmJVUXpWMm93V0hGVlYyTnZlbmt3Y2taT09WWlFjVkZGYlZZMWJsTnhVMEV6ZFd0WU0wVkpSMHAxV2tGNFptMXhWVnBsV1RCclRHOTNkVk5ZTTNWUlNVcG5XVTE0WjIxSmVGZHFSa2hqVVVsSU5XeE1NVTk1Ym5oNE0xcHRWMFZDVURsUmIwbFhVVWg1ZVZsTlZFMVVjSGQxUTBKSFUyUnZSMU13U0VkRU0zSjNRVlZIU0dJeFJubEZhM0JSVERKS1VEbEVjVEk1ZDBFeFNUUmFla2t5YmxKSmQyOHhlV1ZhTVhRd2JubFRZbTVMVFRSWU1uUXhUVEZOWVVsS2VXeHllR05HY0VsQmJFWkdaekZJTW1wc2NWVndNa2xIVDFOSFlVbFJTRkp3Tkc5VlFWSndVWGd6VFV0eGJYRnNPVEpJZUVGQlNYZEJaRVF4VFc1d1NFRjVTR0ZCTTBwU1dtVkVkMEZoU1ZWalUwZFZTR3R4U2tFeGIwcGlNVnA2WTBOeFVubHNUREpYVjBWSU9YbHlWR0pwY2xReGRuSkhSWGhLVVhsMWNXeG5aRWxLZVcxR2VrRjVjbEpGVVZnelJHMWFTM1ZYUm5sallrWXdXbVZITTFOU2IwbzFRMjVKZVVSd01uRkNURzFJTWsweVYyZEJSMGd5Y0RGWFJYQjZhMEZIUzNGRFRVWTVRMEpIVjNkTk1ERjVTbFZYUlc5dFFXVkdNMDh6UlZSalZWaHRUV0Z2TTJNd1JEQjFUVXg2UVZkS2QzZzFTVkZYZGtFelJVSkJNMEZLVFZWVGRrWlVkWHB1ZUdac2JrZE5VMWt3UlZSR2VFRlVXakpCWkc4elYzaEpVRGxrYmtkd01FbEpSVWRNU210M1JEQnFhMW93WjNWR1MxTlJRVEZKWVZneVNVdHhNM1ZuUmxBNE1rZ3hTV05hVW1kcVFrbEZVRUpUZVdKdVVWSXpTSFk1WmtwNVNXMUJWVTlyUjFRNGJVMUxRVTlOTWpocVNuZE1NRTFHT1hsdVZGTnRRbEphYVc4elZqQnZNMEV4UVRKQldIQkxSVlpDU1VScGNrcGpORUpTY1daSWVHb3pjRWhKU1VKS1ZqSkVTV05JY0ZJeE5VeGhUV3R1U0VsNVdraEVOVzR5VWpWTlVrbFBSMHBYVDNCUlVqVkpNSGt4V1d3NVZWcEpVMWxhUzNsVFRVdGpWMEV4Y1U5YWVtTk5RWGR4WjFwVmVXTkpTMEZaY0hoblRISlFPR3R3U1VWSlFWTkZiVWRSVmpKSlNFVlpUVEo1YTBsNk9HVkVTMFJ0UjB0QmFVeHRjRzFLUjFadFRIZzVkbkI1ZUcxWU1uVkZia1puWVVRelRHcEhkamw0U0ZORWJGb3hlVUpCUjFOYWNsUkZhRzVRWjJkdk1VRmtUVWg1YWtSNk9VaHdNMFZSUVVvME1uQlJlVWxCTVdObGIwcEpabTlWZVhwYU0xZExURXBCZFhCSWNWSnlZWFJxY0RCblYwMUtNRFJFZUUxQmJuWTVaM0JoZUdWd1NHTXlXbEZ4WVc5VmVVaGFWSGxuUkRKRlNVRkhTREZhVTBSbFJrcE1iRTFMVEdsSmVVMWxSbnAxUTI4d1JHeGFiVVJyUlcxT01rRkhkVWxHTWt4c1JFZHhlWEI2ZVdKQlZXSnFSVk5TYkVoNk1WQnhlbmsxUkhkVE5VMHlaMGRCTW5GUVRFZFBXSEF5WjJoYU1rMUxXbEZCVWxodFJXTk1la2syV1cxWFRISlVVakpZTWsxQlFsUkZRa3BTVFhWSmJEbHNjRzFUTVZwSVFVbHZiVk5WU2xWeE5uQktUWGxhU1dOSlFVdFRkMGxKWTNsTlVYQnRia2xpYVVsUlNEQkVTbE5SU25wRlIxcHRUMEZFU0VGR1JYcDFiRzh4VTJKRWVtdGhTREkxUTFvd1p6RnhNRmQ1VEhkVGFHNUlOR3hHU0RCdGNESTFZVVo0Y1hWdVNqbGlSblk1VFc5SFFWcEVTakYxU21GQldGcEhSV05HVW1kWVRYbFhNVmd4VFV4Qk1qRjNSVXAwTlVGNGVESkdVVVJ0V20xeGVuRkthekp5VkRGalFWTjRORUZSUlhoQ1NqRkdUVkZUVlZveVJVdGFNRVZ0UVRKNVlVSkxjWGx5ZGpsNlJEQk5kVXA1Y0d0QlVVVldSbTE1U0VaNlNESkdkMGxyVFZKd1pXOTNSVTl5U0UxbFRYcG5ha0pIUVVsTk1YRkpTVkZXTTBSSWVXbE1NMFEwVFVsNGJVZDZkV3ROTUdkSVNVdHhSRzVTVTNWRlZFbFBjSGxYVFVGUmVXVnVNM0ZOYmpCWE0yOHpVMVZJZVZJd1JucDVkMDB6VTNwdVVuQXhRWGd4YVV4aGNUQk5TWFYxYm5wNGFYQlNaMGRHZDNGWGJrZFdORzVLTUdWdmVuVXliak5OZUVSS1NHcEJNSFZqVFVoNVIwWlFPV05LUjBnd2JtMUZNMjh5VTFwRWQzRkZSVWxYVkZnd1YxSktTRUZaY1VwMU5IRXpUR3RDU0VsNmJraHhkbGd5ZVVSdVNHWnRRWGRGUlc4d1NERkllakUwVFROVGVVWlJlR3RJU0RobFRFZElNRWRJWTNwRlZHTnRSa2RYVmtwNGFqRkhTbGRZVFZGUFVYQjNkV3h2UzNGamNIcGpUSEIzZVRGTlNEbERjRWhJYkc1S1UwZEdNamxTUkRKSlowVlVhMWhhTVZONlJVcDVORWxJWm1sTVIzRlBUR0ZGTVhGc1ptcEZTbGQ2U2xSaWFscEpkR3BhVkhWSVNIbDFNVVpLY1cxYWVtTm9TbmwxUlhCSFFXeE5NWFUxY1cxSU5FSlNaMUJaYlhWUGNIbzVhRzVMWXpKSlNtTm1RVWxCYlVRemNVTkNVVUZWV0RCallrWktRVlZHZUUwMWNuaFhhVzU0UVVkeFNsZHJSakZUYVZwNFVtcEJVbkZtVFVocmFtOHdZelpIUjNodFNETlRZbkJTVTJsTk1IbFZiak5CZVVsNE1XRkJNMEUwUWxSbmEyOTVlWGhJVlhBMFdrdEJSRnAzZVdOd1MyTTBTRW94ZUZodGVXdEJTamxrV2tabWFrcFVNV1pOTW10Q1FWUXdNWEJJU1ZodWVFbFRTVkY1YkhFelFYcHllVTltUkRBNVJVSkxWMU5OU210MWIzZE1aVWt6Uldod2VuUTFUR0ZFTWxreFJWaHZNVmRRUVZSRmFuRlVUWGxGWVhrMVFYWm5la0ZVTVdoYVMxY3hSbmROUVUxMk9EUk1Na1Y2Y1ZGYWEzSjRlV3BhZWxJeVdUQlNhbTR6UlZWd2QzaHRiMHRqZVc0eWEzWmFTbE5pYmxWNWJIQXhUalJHTUhobFRUTkViRWd6WTJod1ZFVjRTSHByYlVoU1FUVkJTMEY0UWxKQmRuSjNUMUJ1VURsR2NIcFRNM0ZWUVROYU0wZzFjSGRTTVUxS01XcEJiVk40YjBkSmFXOXRlV0p1VUdkdFJraGplVm94VjJwS2VqQnNRbEZ3TVVaU1UyMUJTbkJyYmt0eFJrWXdSVkZ4VW5sRGNGUTVXVWxIVXpWdWVrMW5XR3htYlVKVlFUVmFVMFEwV1RGTlZISjZlVVZDU0VRd1FUSXhaMEpWVGpKWU1Fa3hSRW8xVVc5NmRYcEpVWFZvUVRKaU5FWjVSWGR1TW5GbGIwZHdNSEZ0VFZoYVNqUnJSVzFYWm04eFQweHdVamd3VEVZNVlVSkdaMnRCTWsxSFNrZzVaMWh0Y1ZKYWRtWTBUVk4xU1VwNVkwOU5lR3BwY0VabllrMVNWMFJ1U2pWTWIxVnhlVWRJWmpCS1NGZHRRVEYxTWtwM2NVeHdTR1psU1VkMWQwa3hVMmxCUjNGQmNVZE5aM0JMUlRaWU1rbHBUVlJXTTNGVFNWZEdTSEZOU1hZNVRFMTRSVUZNU25sTlRFbDFhVXhJTldadmVVd3pSVWRUVTFreU1YWk5VWEZvUkdGQlRFVnRRWFZCVVhreldUQXhNRWhMVG14dWJVRnBjbmc0YlUxTFUwbFpNakJ0Uld3NVJrUmhZM1ZHUmpsaVIxUTVZa3hoY1cxR1UyTTJTVk5YZWtsNmVURmFkM2x0Y1VkSU1sa3lPV2h3VkhGVVNuaGpNbTVIZVZCeVlYbFFSWGQ1YmxreGVYZHZNbmxYV2xCblVVaEhUR2xKVW1veWNGTlBVVVpoZERWQlMxTnBjVWhyVFVWVlVqVkhNR04yYmxWNU5VZ3hjR3BDVlVGMWNrbDVZVTE1WTI1d2VWZHRjRWhqU0VoU1RWWktTRVExY0cxNWJFaHRlVVpGYlU4emJqSm5aVVYzU1ZOQmQxWnFTWHB3YTFwUlJVSnVNMFZUUWtocmFrWjZPVlpGZUhGbFJqQm5ZMjVSUkdWQ1NqbDNRVEpOUVhBeVRWRmFTa3d5UlVkeFprZDVVMHRIVkdOVmNrcEpaRXhJWjFOQk1FRk1USGRQYlZwaFUxRndVbkZHY1ZSTlkyOTJaakJKUjNWM2NtRmpRVnA0ZUdsdk1tdGhTVW81YWtadGRVOXVTRmRIVEVwRlluSjZNV3h5ZUdOaFNIbFBiVVpMVDNadU1FRllSVEY1VmtaS1JVTllNa1Y2Y1RCd2JFRklkRzF2YkRsWFdHMXhNVTFJVjJoRk0zUXdibEpKYmtGUlNHVkhkMFZKU2tsNWEwSkxZMHBIUjNWblIzbzVaMEZJZFdkQlUxTmtSVEl4UTFneGVHMXZlalF5UVRCcldsb3hUVWR3VWpWMVNGUjVla3g0YW10eFMzZzBUVEJNYlVGSFNWWnVTakZwY0VwRmVWb3pUMWR1WVZkNVFsSnJiRzlUVTJoSVVYZzBjRXRqZVVaSFRHMUdTWEZKU0cxSU0yOUhSV05DVTAxSFNrbFhaVVY0ZVdodWQzRkNiMUpxYlhGSVNWVkpTRmRJYjNkQldVbFRjR1ZHUjB3MFJrcDFia2t3TVdWeFNsTlBTRXRFYTFwVFFYWkZNa2xaVFhocldFSlNNREJhZW5GdVJVdE5Za2xWVjIxd2VXTkRSWFpuYUVGdFV6TnVTR2RWVERKeGQwaDZNR2xOTVZJMVRVdE5OVUpKU1cxRWJVbG1TRlJ4YUhCNk9XUkVNMDlzY2xRNE0xcEtWMnRNUzFwcGJucGpla1F3UVdGRVNrRnFTVWwwYVVaUU9VRkdSMDFzY0VoNE5IQjVWMHRCTUVWYWJubzBNMDE2ZVVGTk1FRmpTVXRQUTFneVRUTmFlR2RTY1RKd01FMVNjWGxhU25WUlJuWTVSSEJMWTFadU0wVlVSVXBUVjBwTGNXRnZTakZCVEhwNE1XOVFabXBIZVhCdFdubDRNVVo1VWpSQ1NYZzFSSGxhWlc4eGNVZE1NVWd6UVZKNVVFcDVZMkZZTUhGSGJ6RnhVRVl4UVhoeFIzRkpjSGRJTkc4d1RYWk5NMEY1Um5oV1pVMVVVMnhFZUhWYWNEQXhRMFV4VjFsTk1rMWhiMHBKZGtGS1pqTndVbmhzUjFWUFdHOHhWelpOTVZkUFFUTkJhMGQ2U1dGS1NrZ3pTbE41V0Znd2VXMWFSM2xZY1RKMWRsbHNaalJ1VW10dGJucE5hRzlIZFdGdmJWTm1XbmhuWTBWSGRXSkdSM2xhY0ZKblpVRjZkVFZDVlZkblFWRkJiVzh3ZFd0S2QwRkhRWGQxWTI1VFNYZEdVa0Y0UVRGamJsZ3hZMVZOZURFemJqQkZVVVV5V2pOR1NVVnVXVE4xVTNCMk9XbHVVa0V4UjFWamRVaEdPVVZIVUdjelRYbEpXbTlKUkRKWWJHZDVTRk5JTUVWdFFXUkNVVVJsVFhvNGFWcExlRFJLVVVsRGNXMU5lVVZIVnpaTlZFRnNRVXBCWVVFeFltdGFTMFZIUkdGMVkwMTRZMEZCVTBGRlFVcDVOVVp0UlhWeFZVOXFjRXA1Ulc0eWRVeEhTalY1VFZWNVYwd3pZMnhKZW10clRESklaVzlLT1ZOS1IwbGFjSGg1VlhCNmVXRkhVMWRyVFhkNVlVeDZlVlJCVWxJeldqQkpiVzh3ZFdKWk1qVXpSRWRFYlhKS2RYbEdkMWRqUmpJNVFVY3lPVEZOU0hsaFNVdElNa2xoVEdwS2VtTkpjVWRJWlc5dFVtMU5lbU5FUVZKblJIQlNNVmRDVlZOamIzbDBNRTB3ZFdoQlZHSXlXbFYxWlVoM2NYaHVVM1EwVFcxRlpVRlRUVzFKVlU5bFRVcE5NVTE0Uld4SVIwOWhSRE5NYWsxNmVXeHdNRXh0UVZSblJFMUhVMmxIU2xjemJrZ3hSMjR6Vm10Rk1qbEJSWHAxVkV3eVJYbEtZVWhyYjBsRlZYRkpRWGR4VVVGUWJ6STVXVUpLVjJSSlMxZFBiekpGVEhGVGVHVmFSMDh4UVhobk1YQmhXbTFOTTBGSFRHMVhSa2RHWmpSTWQwNXNUVE5QYTI5VFNHcEZlVWxOY1RCalNFUXhUV05FZW5sclduZFRNa0ZLZUcxRlVqbEtRbEpCWmt4SVpteHZkamxyV25sYU5FbEdaM2xJZDFJMFFYWTVibTh3YW14dmJYbDJURWRUYlVSS2VHMWFla1V3V0RCQmRVd3pSR2x5U2t4c2JrdEpOa2RIY1hoSE1rVnNia2hKZDBGSVkyWkNTM2xwUm5kQlkwSlJjV05NU25ScFdUSk5WVVV6Y0d0dmQxZHRURzFUZFUxNFpqRmFlblZOYjBsaU5XOUtjV05NWVVGSGNWUTBNM0IzY1Zkdk1WTmhia3RCUkc1Nk5XdFlNazE2Y1VkUGJFZFZVMmh4TVhGclFrbFRXVTB5T1Vkd2VtZGljRlJJTTBReFQySk1NRkl6UnpGRlZraEtSV1Z2UjFONWJsRlhlbHAzVTFkSlZGWXhSVzFKVTBkVU1WbEZiR2RhU1hkVFdXNHdaekZhTVdOSVFYZFRXRVF6VTNkS1NGSmxSVWx4V0hKNGNWbEdVblZuYm0xUFUwRjNWMFJDVlV4cFRVbDFaVVV6ZFVWQlNtTjVSbEY1WjAxS1JWUk5NRWxwVFZOamFrRnRVM2RHVWxObmNUTmpka1o2YTJOR1ZFMWtURWhCU0VVeVkyTkhVMHhxUkhkMFpVa3pUMkZHZWpRMVNVbDFUVVIzVEcxSVNuVlVTVXR4TmtWVmVHcEhVWEUxY21GQmVuSkhTVFJNU0dJeWIxVjVkMFV5TVZKQ1VubG5TREo1U25KSFRHVkZlblZpYnpGTlVIRkpjV2R5UjNocGNsSTRhVnBzY0VGUWVqbHNURXBCWmsxR1RqbFdVSEF5VEVkd01VRkhVakJCZDFwc1FVZE9NbHB0V2pWQlVYUXlXa2R3TkVGSFJESk1kMFF5UVZSU2JVSlJURzFhYlZJeVFWRkVOVUZSUkcxQmQxbzBRWGRNTTBGUlRHMUJiWFF5UVhkYWJVRnRkR3hNZDB4c1dtMXdNa0pIVFhoQlIwZ3hRVkZGZWtGM1VqTk1SMHcxV25wTU1rMTNSWGxCZDFZeVRIZGFNVnB0U0RKQmQwMTZRWHBNTUUxUmNHcEJiWEF5UVhkd01VRkhUbXhNZDAxMlFWUk1NVUZIU0RCYWJWSXpXbEZ3TlVGdFdqTmFSMXB0UVhwV2JWcDNUWFpCUjA0eVRYZElORUYzU0cxYWQxcHNRVzFPTUVGUldqVkJSMFJ0V2tkRU0wRjNXbTFDVVVWM1FXMVNNRUZSVFhoQmJYUXlURWR3TlVGUlJESkNSMHd4UVVkV01GcHRXakpCZDNneVFrZE5lbHB0U0RCTlIxb3pRWGR3YlVKUldtdGFiVll4UVcxSWEwRlJXbTFhVVV3eVFWUldNRUZ0Y0RWQmJWWXdRWGRhTWxwdFJESk1kMDE1UVVkYU1reHRSRFZCVkVReVduZEZka0Y2UkRCQlIxcHFRVzFTTUV4dFRERkJSM1RkR0FBQVdUQlplazB5VG5wQk1GbFVXbWhPZWtrd1RtcFJNVTVFVFROTlZGcHBUbFJyTUZwRVkzcE9WRTB4VFdwTmVFNXRVWHBOYWxrelRrUm5lazlVVlhsT1JHc3hUbnBqTTA1SFZUTk5lbFY1VGxSbk1FMTZXbXBPYlZVelRucFZNazV0U1RKYVZFMHpUbnBGTUZwVVl6Qk9SMDB3V1dwV2FFNVVZek5PVkZreFRrZE5NVTlFWXpOT2FrMHpXVlJWZUU1NlZYcE5hbFV4VGtkVk1sbDZXVFZPVjBVeFRucGplazE2V1RKYVZFMTNUbTFWTUZsNlRYaE9lazE2VG5wU2FVNXFSVEZOYWsweVRYcEpNRTFxVFRWT2JVVjZUbXBhYWs1NldUQk9hbGw0VGxSWk0wMUVVVEJPZW1zd1RsUmFhMDU2UlRCT2VrMHpUbFJaTVUxVVdURk9iVVV5VG1wYWFrNXFUVEJQVkUwelRYcEpNRTE2VFRST1ZHTXpUMVJqZDA1NlRURk5SRlV4VFcxWk1VMTZZM2xPZWxFeVRXcGpORTV0U1ROT2FsSnFUbTFGTUUxcVZYaE9SR3N4VG5wak5FMTZVWHBPUkZreFRucEpNVTFFVVRKT2JVa3dUMFJOTlU1VVVUQlpWRlY0VFhwVk1rMXFXbWhOYlZsNlRVUmFhMDVVYXpGTmVtTXdUbnBWTTA5RVl6Uk9ha2t6VDBSU2FrMTZXVE5OYWxGNFRtMU5NRmxVVm1oT1JFa3lXV3BqZVU1SFdURk9hbGw0VFhwSk1FMXFXVEZPZWxFeVdsUmFhazVFYXpKT1ZGWm9UbXBuTWsxcVdtdE5la1V4VFZSU2FrNVVZek5QUkdOM1RucE5NMDlVV1hsT1JFbDZUMVJWTUU1cVNUSlplbEUxVG5wTk1VNVVWVEZPYlUweFRucE5NRTV0VlRGTmVtTXpUbTFSTWs1RVdtaE9iVkV6VGtSVk1FNUVXVEpPZWxreVRrZFJNMDFxWXpWT2JWRXdXbFJaTTAxNlRURlBWRXBwVGtkVmVrNXFUWHBPUkVsNlQwUlNhVTVVVFhwTlJGVXdUbFJWTWxsVVdtbE5lbEV6VGxSamVFNXFVVE5OZWxrMFRtcFJNMDFVV21sT1ZGVXlUbnBSTVU1cWF6Rk5WRnBxVGxSWk1FNVVXbXBOZWxreVdrUlZNazVFVlhsYWFsbDRUbTFKTTA1VVVUVk9WRkV6VDFSVk5VNXFZek5PUkZrMFRsZEZNRTU2WTNwT2VrMHhXVlJSTTA1NlZUSlBWRnByVGtSWk1scHFUWGRPZWsweVQxUlpNazU2VFRKWlZFMHlUWHBOTUZsVVdtbE9SMGw2VFVSVk1VNTZVVEpaVkZVd1RsZEZNazE2V1RWTmVra3lUMFJWZDAxNll6Sk5WRTB3VFhwSk1VMVVZM2xPVkdjelRVUmFiRTVxU1RKWmVsVXpUbFJqTUZwcVkzbE9iVWt5VFZSTmQwNVVVVEpOVkZab1RtMVZNVTlVV1hsT1JHTXdUMFJqTWsxNlZUSmFSR00xVGxkRk1rNXFXWGxPYWsweFRWUlZlazVIVVROT2FrMTNUbFJOTTAxVVdUVk5lbXQ2VG1wUk5VNUhXVEZPVkZVd1RYcG5NbHBxVlROT2JVVXhUbXBSZWs1NmF6Sk5hbEV4VGxSWk1GbFVVbWxOZWxGNlRXcGpNRTVIVlRGT2FsRTFUWHBSZVZscVdtbE9WRkV4VDBSTk0wNVVUVEpOYWsweVRtcG5NazVxVW1wT1JFa3hUa1JaTlU1SFRURlBSRmsxVGtkTk1GbFVVbWhPVkdNelRYcEthVTV0U1RGTlZGSnBUbFJSTUU1cVVYaE9WR2N6VG1wYWFVNXFZM3BPZWxWNlRucEZlazU2VW1sT2JWVXdUbXBqTUU1SFRUQk9hbHBxVFhwTmVrMXFZek5OZWtVeVRYcE5lazF0V1ROT2VsRjZUWHBaTTA5VVZUUk9WR013V2xSU2FVNVVUVEZaVkUwMFRucFJNMDVVV210T2VtTXlXVlJhYWs1dFdUQk5WRnBxVGtSWk1VMVVWVEpPZWtFeldWUmplazV0UlRKT1JGbDVUbFJqTUU1cVdURk5la2t6VDFSamVFNVhSWHBOYWxFMVRsUlpNMDVxV1ROT2Fra3dXWHBOZUU1cVNUTk9WR041VGxSSk0wOVVUWGxPYWtreFdWUmFhMDU2YTNwT1JGVTFUWHBCTUU5RVdYaE9iVlV3VFdwWk0wNTZVVEZOZWxKc1RucFJNRnBFV1hoTmVrRXlXVlJaTUU1cWF6QlplbEpxVGxSak0wOUVWWHBPYWtreVQwUlplVTE2WnpCWmVrMTVUbFJaTUZsNldUVk5lbGw2VFhwVmVVNXRSWHBPUkZwc1RrUk5NMDU2VlRCT2VtY3pUWHBhYVU1cVVUSmFSRnBwVGxkRk0wNUVXbWhPYWtVd1QxUk5lRTVVVlRKWmVsRXlUa2RKZWsxRVdUUk9hbEV6VFVSVmQwNVVZekJQVkZVMFRsUmpNRTVVV1RKT1ZFbDZUbnBSTVU1VVp6TlBWRTAxVGtSTk1VNUVWVFZOZWsweFRYcEthVTVxWnpKYVZGRXlUWHBGZVZscVVUQk9WRUY2VFVSamQwNTZRVEphVkZKdFRYcE5NMDU2VlRGT1ZFMHlXbFJhYUU1NmF6QmFWRTB4VG1wWk0wNUVZekpPUjFrelQxUmpOVTVxVFRGT1ZGSnRUWHBKTWsxNlVtbE9WRmw2VFZSak1rNTZRVEJPVkZVelRtMVpNazFxVlhwTmVra3pUVVJWTlUxNlNUSmFhbU14VGtkSmVWbHFVbWxOZW1jeFRsUlZlVTVIU1RKUFZGazFUWHBKTWxscVdteE9lbWQ1V21wWk5VNHlSWHBQVkZFMVRXMUpNRTVxVFhsT2Vra3pUbXBSTlU1NlRYbGFhbU4zVG0xTmVrNXFWWGRPUkZsNlRWUmpNazVVVlRKT2VtTjVUbFJuTUU1NlRYbE9hbGw2VG1wVk1VNTZVVEZOZWxVMVRtMVpNazlVU20xTmJWa3hXVlJqTWsxdFNUSk9lbU15VG1wck1VMTZUVEpPYW1jeFQwUmpOVTVFV1RCYWFtTXpUbnBuTVU1VVZYbE5lbXN5V1hwUk0wNTZhek5PUkZwcVRtcFZNRmxVVlRST1ZFMHhUa1JOTTA1SFJUSk5WRlUwVGtkWmVrOVVXWHBPUjBrd1dXcFZOVTVIU1ROTlJGVXdUbFJKTTA5VVdUQk9WRWt5VFZSVk1VMTZRVEJaVkUweFRrUk5NMDFxVlRST1ZHTXlUWHBaTUUxNlNUQmFSRTAwVGxSVk1rMTZZM2hPYlZVeVdsUk5NVTVxWXpOTlJFMHhUbXBuTVUxRVpHaE9WRTB5VFdwS2JVNTZRVEZPVkUweVRtMUpNazlFVlRCT2JWa3hUMFJqTlU1cWEzcE5SRlY1VFhwTmVrOVVVVFZPYlVrd1RrUlpORTVIUlRGTmVsRXlUbFJyTTAxcVZURk9iVTB5VDFSVk5VNVVWWGxhYWswd1RtcGplazVFWTNwT2VsRXdXbXBqZDA1dFRURk9SR014VG5wck1rOUVXWGxOZW1jeFRrUlNhVTV0U1RGTlZGSm9UbnBuTWsxNll6Uk5la2w2VGxSTk1VNXRWVEZPVkUxNVRucE5NRTFVVlROT2VsbDZUbnBWZUU1dFdUTk5SRlV5VGxSamVrOVVVVEZOYlZsNlQxUlZlRTVFVlhwTmFsVXlUbXBuTUUxNlVtaE5lbGt3V2tSVmVFNXRTVEphUkZWNVRtcHJNMDVFVW1sT2JWVXdXbFJqZUU1cVVUQk9hbGw0VG0xWk0wOVVWVFZPVkVVeVdrUmplRTVIUlRGTlJHTjZUbTFOZWs1RVdtdE9WRVV3V21wUk5FMTZTVEJPZWxKcFRtcFJNVTVFVFRGT1ZFMHhUa1JqTkU1SFJUSk9SRkpvVG5wRk1sbHFUVEJPUjBVeFRtcFZlRTVVUVhwT2VsRXpUWHBCTUZsNldUUk5lbGt5V1dwU2FrNVVTVEpaYWxVd1RtcEZNMDU2VFhsT1ZGRXpUVVJhYVU1dFVUTlBWRTB5VG1wWk0wMVVVbTFPUkVVd1dWUk5lRTE2VFROTmFsVjVUa1JGZWsxcVdtbE5lbXN6VDBSU2EwMTZhekJPVkdONVRtcEpNRTE2V21wT2VrVXhUMVJWZVU1NlJURk9hbHB0VGxSWk1VMVVUWHBPUjAwelRXcE5NRTVxWnpKUFZFMTVUbnBSTVUxVVVUVk5la1V4VDBSUmVVNXRXVEZOZWxGNlRucFJlazlFVFRST1ZGRjVXbXBWTWs1RVZURk5hbGt6VFcxWk1rOVVUVFJPUkZrd1dWUmpkMDE2VVRKTlZGa3pUa1JaTWxsVVZUUk9lbGt6VFVSVmVVNUVhekZOZWsxNFRucFpNazFxV1hoT1Iwa3dUWHBOZVU1cVZUTk5WRlV3VFcxSk1VOVVUWGRPUjBVeFRVUmpOVTU2YXpGT1JGa3hUbTFSTUZsNlVtcE9SMDE2VFVSTmVrNXFZekJPUkdNMFRsUm5NbGxVV21oT1IxVXhUVlJrYUU1VWEzcE9SRkp0VG5wUmVrMVVZelJOZWswelQwUlpNRTU2UlRCTmFrMDFUa2RWZWs1cVZYaE9hbXN6VDBSWmVFNVVhM3BPZWswMFRsUmpNMDVxVVhsT1IxRjZUVlJOTUU1cVVUTk5lbEUxVG0xSk1scFVZM2RPUjFreFRYcEthVTE2VVhwTmFsazFUa1JWTUU5RVRUTk9SRWt4VG1wak5VNXFXVEpQUkZWM1RucFZNRmxVVFRST2FsRjZUbnBWTVU1cVZUSk5lazE0VGtSak1VNTZXWHBPVkZVd1RXcGFhRTU2YXpOUFZGVTBUbTFKTWxwVVNtMU9SRWt4VG1wU2FVNXRSVEJaZWxrelRtcG5NVTVxWXpOT2VsRXlXa1JhYVUxdFdYcE5hbU4zVGxSUmVWbHFVWGxPYW1NeVdXcGplVTVIU1RGT2FsVXdUbTFGZVZwcVkzcE9SRWt4VG1wS2JVNVVhek5QUkdONFRYcEZNRTE2WXpKT2VsRjZUMVJWZDA1cVZUQk5lazB3VGxSVk0wMTZWWHBOZW1ONlRXcFpORTVxUlhwUFJGRXdUVzFaTTA5RVdtcE5iVmt6VDBSUmVFNUVaek5aVkdNeFRXMUpNVTVxVlhkT2VrVXlXbXBhYUU1VVZUSk9lbGw1VGxSSk0wNVVVbWhPZW1NelRWUlJORTV0VFRCTmVrMTVUbnBCTWxsNll6Uk9SMFY2VGtSWk5VNVVRWHBOUkZsNVRucEJNRTFVVFROT1ZHc3hUVlJaTlUxNlVYcE5WR016VG1wRk0wNUVXVEpOZWtVd1RtcFNiRTVFVFRKYVZGRXpUa1JWTTAxcVRYaE9SMVV3VG5wUk1rNTZZekpQUkZsNVRYcG5NRTVVWTNoT2VrVXdXV3BOTkU1cVVURk9hbEpxVG5wRmVrMTZXbTFPYlVrelRrUlZNazVFV1hsWmFsVTBUbnByZWsxNldUUk9SRmt4VFZSU2JFNVVUWHBOYWxWM1RsUkZNVmxVU21sT2FtTjZUa1JqZDA1VVFUSk9hbEV4VG5wWmVrNXFXbWxPUjFVelRucFZlVTE2UlROTmFsRTFUWHBKTUZsVVdYcE9WRTB6VGxSV2FFNTZaek5PYW1NMVRucE5lazVFVlRST2VrVXlXV3BaTVU1SFJYbGFha3BwVFhwWmVWbHFZM2hPVkZFd1RrUlNiVTVVUlRKTmFrMDFUbTFWTWs5VVRUVk9hazB5V2xSUk1rNVVVVE5QVkZwc1RYcE5lazlFV1RST1ZGa3dUbXBOTkU1NlFUQk9la3BwVFhwbk0wMXFUWGhPUkZFd1RtcFNhazVYUlROT2VsRTBUbnBSTWsxcVZUTk9lbEY2VG1wYWFFNVVWVEJPYWxwcVRrUk5NVTVxV1RKT1JFa3pUVlJSTUU1SFdUQmFSRmt4VG5wVk1FMTZXbWhOZWtreFRsUlNhVTVVVFRKT2FsSnNUbXBOTWxsNlNtMU9SMDB6VFZSYWFrNTZVWHBPYW1ONFRsUnJNRTVVVlhkT2VsVXhUbnBOTkU1VVl6SmFSRkV4VGtkSk1VNUVZM2xPUjAweFRtcFZlazF0U1ROTmFsSnBUbGRGTWxsNll6Vk9WRWt6VFZSak1FNTZVVEJhVkZsNlRsUk5NbHBFWXpCT2FrVjZUMFJXYUU1RVZUTk5WRkpyVG5wVk1VNXFVVEpPUjFrd1RrUlZORTV0VFROTlJGVjZUa2RWTTA5RVVtaE9la2t5VG5wak1FNVVRVEpaVkZab1RsUkpNbHBFVlhsT2JWRXpUMVJOTVU1cVp6Rk9WRlV5VG0xVk1VMTZWbWhPZWtVd1RsUmthRTV0U1RCYVZFMTRUWHBWTVZsVVVURk9SMVV6VDBSak5VNUVVVEJPZWxwcVRrUkpNRmxVVFRST2VtTXhUa1JWZDA0eVJYcFBSRnByVGtkSk1scEVZelZOZWxreVQwUmpkMDVIVlRCWlZGa3lUa1JKTUZscVl6Sk9hbXN5VGtSak1VNUhXVE5PZWxsNVRtcHJNazFxWTNsT2JWRjZUbXBqTTA1VVNURk5WRTE2VFhwVk1FMXFVWGxOZW1zeFRYcGpNazVFVlhwUFZFMHhUa2RGTVU1RVRUUk9SMDB5V2xSWmVVNVVhekZPYW1NMVRtMVpNazU2VFRGT1ZFVjZUVlJqZVU1cVkzcE5lazB6VG0xRk1GcHFXVEpPVjBVeFRVUk5NazVFYXpOUFZGVTBUa1JKTVUxRVVtcE9hbXN5VFdwamVFNUVUWHBPYWxsNVRsUlpNRTU2VW10TmVrRjZUbFJaZVU1VVdUTk5SRmw1VG0xTk1GbHFXWHBPZWsxNlRrUmFhVTE2V1RCT1JFMTZUbnBaZWsxVVl6Vk5lbEY1V1dwUk5VNUVWWHBOYWxKc1RrUnJlVnBxVVROT1JGVjVXV3BqZUU1RVNURk5WR04zVGxSbk1rMVVVVEZPUjFFeFRYcFJNRTV0VVRCT1ZGa3pUbTFaTTA1cVVURk9hbGt5VFdwYWEwNXFSVEJhUkdSb1RrZEZNMDVVV1RKT1JHZDZUV3BqZUU1SFZYcE5SRmsxVFhwRk1VOVVUVFZOZW1zelRsUmplRTV0VlhwUFZGVXdUa1JyTUU5VVdYbE9iVWw2VDBSTmQwNTZTVEpQVkZVMVRsUlJlazU2V21wT2FrbDVXV3BqZUU1VVVYcFBWRlY0VGxSTk0wNXFZek5PZWtFd1RXcFJlazVFYXpKWmFsVXlUa1JSTWs5VVdtbE9hbFV5V21wUmVrMXRTVE5OVkZGNFRtcFJNVTlVVVRWT2FtY3dUbXBSZWsxdFNUTk9hazE2VGtkTk1FMTZZekZPUkdzd1dXcFZNVTVxWnpKYVJGRTFUWHBaZWs5RVVtaE9ha2t5VFZSUk5FMXRXVEJQVkZKcVRtMUZNMDFFVVRST2JWa3lXWHBSTkU1NlNYcFBSR04zVGtkWmVrOVVZM2hPUkZFeVdYcFJNRTVVVFROT2FsVXlUa2RSTWxwRVZUSk9SRkV5V1hwUk5VMTZXVEJPYWxsNFRYcHJNRTVVVVhwT2FsVjZUVlJSTUU1RVRUSmFSRkpyVGxSVk1rMVVXVE5PYlVVelRXcFpOVTE2WXpOWlZGVXhUbFJCZWsxNlVtMU5lazB3V1ZSak1FNVVUVEJPUkdNMFRrUkZNRnBxWXpKT2FtTXdUWHBaTlU1SFJUQmFhazB6VG0xUk0wNVVVVFZPUjFVeFRWUlpOVTU2U1ROUFJGbDVUa1JKTTA1cVl6Rk9SMGt3VDBSa2FFNUVZekpPYWxKclRrUk5lazlFVlhsT2VrVjZUVVJqTVU1VVRUTk9lbFV4VG5wbk1VNXFVbTFOYlVrd1RsUlNhVTVxVFRCUFZGa3dUWHBOTUZscVdUSk9hazB5V1ZSVk1rNUVUWHBQUkZFeFRYcEZNbGxxWXpST1ZFMHpUbXBSTlU1NlJYcE9lbFpvVG5wWk1GcFVVVFZPYlUweVRsUlJlazE2YXpGUFJGSm9UbnByTWsxcVkzaE9SRWt4VFVSVk5VNXRUVEZaVkZrelRtMUpNRTVxVlhwT2JWVXpUMFJhYUUxNlRUSk9lbU14VG5wbk1rNXFXbXBPVkdzd1dWUlpNRTVVVlROT2VsSnBUbnBCTWsxVVVtbE9lbEV3VG5wU2FVMTZaekpQUkUxNFRucG5NVTE2VFRWT2VrRXpUWHBqTTAxNlRUQk5lbGt5VGtkUk0wMXFUVFJPTWtVd1dXcGpNazE2VVRCT1ZGRjZUbFJqTVUxNll6Sk9SMGt5V1dwU2FrNXRUVEpOZWxVMVRsUkpNMDVVVlRWT2FtY3pUbFJWTUU1SFRURk5hbGt5VFhwbk0wNUVXbXhPYlVrd1QxUlNhazVxVlROUFZGRjVUbFJWTTA1cVRURk9iVVV3V2xSVmVrMTZVVEpPYWxVd1RucFplazVxVlhoT2Vra3dUMVJWZVU1dFZUQlBWRkV5VG5wSmVrNVVZM2hPYlVreFRsUk5NMDE2UlRCT2Vsa3lUWHBOTWs1VVVUSk9hbU16VGxSS2JVNXRUVEJOZWxwdFRrUm5NazU2VVROT1Iwa3lXV3BqTTA1VVZUTk9WRTAwVGxSTk0wNTZTbTFOZWtreVdXcFJNRTE2YXpOTmFsSnFUbTFSTTAxVVdUTk9la0Y2VGtSU2FFNHlSVEZPVkZKclRtcFJNRnBVVlRKT1JFa3hUVVJaTlU1VVFUQmFWRlV4VFhwVk1VOUVUWGhPUkZVeVdWUlNhRTV0U1RCYWFtTjNUWHBOTWs1RVVtdE9SRmw2VFhwTmVVNUVUVEJPVkZVd1RsUm5NRnBxV1hsT1ZGa3dUWHBTYVU1RVdUSmFSRkV3VGtkTk1sbHFXWGhPVkdzd1dWUlJlRTVVVFROTlJGSnJUWHBKTUU5VVdYcE5lbU16VDBSak5VNTZZekJPZW1ONlRsUlJNazE2WTNwT1ZGa3lUMVJhYWs1SFNUTk5lbEpyVGxSVmVrOUVUVEJPYWxrd1dWUmplVTU2UVRGTmFtTjVUbTFKTVUxcVVtdE9lbGw2VDBSamVrNVVXVEJhYW1NeFRsUnJNMDVFVFRGT1JFMHhUVVJSZVU1RVl6QlphbEV6VG1wTk1GcHFUVFZPUkdNelRXcE5lRTVFVVRGT2FsSnBUbTFSZVZscVkzZE9WRVY2VFZSamQwNVVZek5OZWxFeVRYcHJNVTFVVFhkTmVtTjZUVVJaTkU1cVRURk9WRTAxVFhwck1VOUVUVFJPYlVreVQxUmpORTE2WXpOTlZGWm9UWHBaTWsxcVZUQk9Na1Y1V21wWk5VNTZXWGxaYWxKb1RrUkZNbGxVVFhsT1ZFVXdUbFJaTkU1VVNUTk5WRnByVGtSSk1VMVVXbXBOZWxrelQxUmthRTVFWTNwTlZGVjRUbXBWTTA1cVdtaE9SRVV5V2tSWk1FNUhSWGxhYWswd1RsUmpNbGxxV1RST2JWa3lUMVJTYkU1cVVUSk9SR015VGtkRk1GcFVUVE5PYlZreFRXcE5ORTU2YXpCWmVrMTRUa1JKTUZwcVl6Sk9SRkV6VFhwUmVrNTZWVEZOVkdONFRYcE5NVTFxVFROTmVtTjZUbnBhYWs1RVNUQk5lazB4VG0xVk1rMTZXbTFPVkdNeVQxUk5NVTVFV1RGT1ZGVXpUbTFWTWs1cVZUUk5lbXN4VFdwUk5VNUVZek5aVkdSb1RtcG5NRnBxU20xT2JWVjZUbXBaTkU1SFNUSmFSRTE2VGtSak1sbDZZM2hPUkVreVRrUlJNRTU2U1ROTmVsazFUa2RWTTA1VVRUQk9iVkV5VDFSV2FFNUVXWHBOUkUxM1RucG5NVTE2VW0xT2Fsa3dUWHBOTUUxNldURk5lbEV4VG5wQk1rNUVUWGhPVkVreVRrUkthVTU2VFRKWmFrMTZUbXBuTVU1cVpHaE9lbWN5VGtSS2JVNXRUVE5QVkdONlRrZEZNVTFVV1ROTmVrMHlXa1JaTkU1dFRUTk9lbEV5VG0xSk1rNVVZM3BPYW1zd1QwUlNhRTVVUVRCWmFscHFUbFJGZWsxNlZUTk5la1V4VDBSUk5VNUVXVEpQVkZVeVRtcFJNbHBFVW1oT1JHdDVXbXBTYWs1SFdUSlBSRkpwVGxSQk0wMVVWVEpPZW1jd1RtcFNhRTVFYTNwT1ZGVjNUWHBGTUUxNll6Sk9iVWt6VFdwU2FVNUVSVEZQUkUwd1RucEpNRnBFV210T2JVMHdUWHBOTWs1NldYcE9lbEV5VGxSUk0wMUVUVFZOZW1zeFRucGFhRTE2WjNwTlJGVjZUWHBWTVU1cVl6Sk9WRVV5VG1wVk1VNTZWVEZPZWsweFRsUlZNRmxxWXpKT2FrMHdUV3BLYVU1SFJUSk9lbFY1VG5wSk0wMUVVbXhOZW1jd1RrUmplRTVVU1RCWmFtTTBUVzFaTTFsVVl6Vk9WR3Q2VGxSak5VNTZVVEZQVkdSb1RYcEpNRnBVVFRST1ZFa3pUbXBaTTA1SFNUQmFWRTB3VGtSbmVWcHFVbXBPUkVVeldWUlpOVTE2VlROT2VscHFUWHBGTWs1RVkzaE9SRTB6VFhwWk1VNVVhekpOZWxKb1RsUm5NMDlFVVRST2FtTXpUV3BOZUU1SFdYcE5WRTE1VG1wWk1FMTZWWHBPYWxreVRYcGFhVTVFVVROTlZGSnBUa1JqTUUxVVl6Uk5lbFV6VFVSVmVrMTZXVEphUkZreVRucEZNbGw2VVRSTmJVa3lXVlJOZUU1NlNUQk5lbEV5VFhwamVrNVVUVEJOZWxVeFRsUlJlVTVxWjNsYWFsVXpUbFJaTUZscVdYbE5lbWN4VG1wak1rNUhTVE5OYWxGNlRXMVpNRmxVV1RKT2Vra3dUbFJOTkUxNll6QlBWRlV5VGxSVk1rMXFXVFZPZWtFeFRYcFdhRTVVVlRCWlZHTXhUbnBaTUUxcVdUVk9iVlV4VDBSWk5VNVVVVE5OVkUweFRtMVpNazlVWTNkTmVsRXdUbFJqZDAxNldUSk5WRTB5VFhwck0wMUVZM3BPZW1zd1dWUmFhazVVV1RCWmFtTjRUbTFOTWs5VVl6Rk9hbXN3VGtSUmVrNTZWVE5OUkZwclRucFJlazVFV1ROT2JVVXpUbXBaZUU1cVp6Qk5hbGt4VG1wcmVrNVVUWGRPYlZFeVRtcFplazU2UVRGT2FtTnozUmdBQURWQmJVZ3pXa2RFTlVGNlRERkJkM0YxUVVkYU1reHRXbTFCZWtReFFWRlhka0ZIUkd4TWQwMTNXbnBNTWt4dFJEUmFiWFJ0UVhkTU5FRnRkREZhYlZkNldtMTBNa0pIY0d4QmJYUXlRVkZFTTBGM1JEQk5kMGd5UVcxMGJVRkhTRFZCVVZadFFXMUVOVUZ0U0ROTVIwVjZRWGQ0TVVKUmNEUkJiVXd5V2tkSU5FRnRURzFDUjBRd1FVZDBNRXgzV2pSQlIzZ3hXbEZhTUVGNlZqSkNSMDE2V20xNE1GcDNTR3RCZWtnelFrZHdNa0ZSZUcxYVVVZ3lRVlJFTWtGM2NEVkJkMFF3VFhkTU1VRktVakJCUjAxNFFYZE1NMEZ0U0RCYWJVaHRRVWRFTWtGUlJERkNVVVYxUVhkRU0wRnRjREpCUjB3eFFVZE5lVUYzZURKTWQweHRRVWQwTUV4SFJYZEJkM1F3UVZGRmRrRnRXakJCYlVWMldtMXdNRUZIY0RSQlIxWXpRWGRNTkVGVVVqSk5SM0F3UVZGTU0wSlJUR3RCZWtSdFduZEZlRUZSVmpGQlVVMTRRWGRFTTFwSGNHMUJkMHd4VEVkRU0wRjZSREpCVVZwc1FXMUVNMHhIVEcxQlIwaHNUSGRJYkZwdFRESmFiVTE1UVhkRU1rRjNjREZCVVhBeVRWRklhbHB0V20xQlIwUTFRVzFJTUVGSGNEVmFiWFF6UWxGYU1FRktVak5hUjFveldtMUVNVnBSY0d4QmVsWXdXa2RhTkVGNlRHMWFVWEF3UVRKU2JFeDNSR3hCUjB3d1FYZHdhMXB0U0cxQlIxbzFRVzFhTVV4SFNYVkJla2h0V2tkd05VRkhkRE5hZDBnelFYZE1NRnB0Ukd0QmQxSnRXa2RGZVZwdFJERkNSMXBxV20xTWJWcDNXbXRCZWxKc1RYZHdOVUYzVmpGQmJVaHNRVkY0YlZwM2NHcGFiVVF5UVZGTU5GcDZUREJNUjBoclFYZGFNa3h0U1hWYWJWWXhXbmRJTkVGdFNETmFkMGwxUVhwTWJVRlJjREJCYlZvd1RWRk5la0ZIVGpCQmQwaHFRVWRNTWt4M1JHdEJiVWd6V25kd2FrRlJUR3hOZDB3MFFYZE1Na3h0U0RWQlZGb3lXbTFOZGtGSFNESkJVWEYxV25wTU1WcDNjR3hCZDFveVRIZEVORUY2Vm0xYVIzQXlRVWRhTTFwdFJEVkJiVTR5UVhkRU5FRkhUREphYlUxNFdtMWFNa0ZIY0RGQmJYZ3pURWRJTWtGdFZqQk1SMHd4UVcxSU1FMUhUREJCUjBnd1RYZEVORUZSY0cxYVVVZ3pRVlJNTTBGUlJYWkJSM1F5VEVkRU1VRlVXakJNUjNBMVdtMUlNMEZIUlhoQmQxSnRXa2RFTkVFeVVqSk5kMW96UVRKU01WcEhXbXBhYlhBelFVZE5kMEZ0ZEROQmJVZ3dRVWRPTTFwUlJYaGFiWGd3VFhkSWJVRlVWakphYlZwcVFVZDRNVUZ0UlhkQmJVd3dRWGR3YWtGM1JERmFkMFF6V20xd00xcFJSREphZWt3eVFYZEVNVUZ0U0RGYWJVUXpRWGRNTWxwdFJESkJSMW95VFZGYU5FRlJjRE5NUjBSdFFYcEViVUYzV2pKQmJVd3lUWGR3TUVGM1JETkJkM0YxUVhwV2JVRlJXakJCYlVReVFsRkVORUYzVEROQlIxb3lRVWQ0TWtGdFJESkJNbEl6UWxGd05FRkhSRzFCUjFvd1FXMUlNRUpSUkRKQmVsSXhRa2RNTlVGUlZtMWFkMHd6UVVkU2JVSlJjRFJCZWxJelRFZGFOVUY2U0RCQlVVZ3pRVkZNTWtGSGNHdEJWRkp0V2xGTU1VRjZSREZDVVVRMFFWUldNMXAzVERGYWJWWXdUVkZJYkVGdFVqTkJVVm93UVZSV2JWcDNTRE5CUjA0elFXMXdOVUZSUkcxQ1IwUnRXbnBNYlVKSFRYaEJSMHd4UWxGRmVVRjZSREphUjBnMFFWRk1NVUZ0V210QlVVd3lUSGRhTUVGSFJHMUJkMWQ2UVZGRU0wRjNSWHBCUjBReVRVZEVNRUZVU0RKYWQwMTRRVzF3TWtKSGNHeGFiVTR3VFZGd2JFRlVTREpCZDFwclducFdNRnB0U0d4YWJWb3pRVWROZWtGM1NHeE1kMFYxUVcxU2JVRlJTREphZWxadFFrZE1iRUZVVWpKYWQwd3dRVWR3TUVGdFNHcGFiWEJ0UWxGRU1scHRkREZCUjAxNFFXMUViVUpIY0dwYWJYaHNUWGRGZDBGUlJESkJVVVEwUVZGME1FRkhXak5CZWxKdFFWRkZla0ZIZEcxQlIwVjJRVzEwTTFwdFRESkJlbEp0UWtkd2EwRjNWakpNUjFwdFdtMU1NMEYzU1hWYWVrd3lXbmRJTkVGdFNHMUNSMW94V20xV01rSlJXalJCYlhnd1RFZE1ORnB0ZURCTWJVZzBRVEpTTTFwSGNEQkJlbG94UWxGWGRscHRSRzFDVVV3d1Yyb3dXRzR5U1RWdlNsTmxUVXRXZEVOR1RtRlpNbmxZY25oQlIwaEhlVkpDU0hscldrbzVlRUZoVGpCeE0wdzFjVkE1YVVsVldtdHdlWFV3U0ZSNVpscDRaM2hDVWtGQlNGUkpha1F5WjJWYU1VVkxSakJ4YWtKS2RHdHhWVmR0VFVsU01VSkhTVWxHU0V4c1JXMVBlVzlIVTFkTlZFVlVRVWR3YkVZeFUwVk5NVWxvV25sWGQxbHRWbXhGU1VsTGIyMUJWMFl3Y1V0QlUwUnBTa3RQYlhGSVJWbHhNblF6V0d4bWJVUjRRWGhNYlhocmJsQm5ZM0JJY1ZSeVZFVXhURE5qWjNCVVZteHZiWFZHY1VwTU5Gb3hVbXB5UjBRMVNESjVhM0ZTWTBoRlMySnBja2hUZDBkSGRXcGFSMVkwU1hsMVJYSlRWak51TTJKcFdtMUJWMGRLZUdsS2VXTkJSREpKVkc1NE5HMWFTbFpsV2pGNGFrMTVUR2x2ZW5CdFFVZE5WM0F5TVRGSlZIUnRTbmxGYlhCNlUyeENTMGwyY1ROQmFIRXlSWGx1U0RsWVdqSTRiRVJMVnpOdk1WbzBjREo1UlVkUmVEUnVTMGxCV1RCalIxcEtPVU5NWVhodGJrdEJhM0pIVFhaQk1tZHJjbUYwTkV4NmNYZHVkMFZoVEhwSU5VcDVUMmx5UjBGWGJtRlhTVXBUVTBwdk0xWTBiMGwxTTBsSFNXZE1kM0ZqVFhkVFlVZFJWMmhCZW1OdFRUSk1NRVpLVjNoQmQweHFXakZCVlVWSVoydEJNMU5yV20xRlRGZ3llVXBDVWtGbFdETmphVVYzY0dwdmVIRmpSakpxYkc5M1JUTkJkMEZZYm14bU0yNHlOVTFDVUdka2IxUXhabGd4VWpSRU1YRXlUVlJyTW5FelJHbEpTbkZyU1ZGTlRISjZVMWRHVkZONlFsSXhhbTl0VFd0SWVuQmxTREJCYVVwVlRUVmFNSEEwY25ablpVWXdUR3hhU21NMmIxUkVNa2xKZUcxTmJVOXJTSHBTWlZneFlqUkdTVmMxUVhkWFkwVXhVMnR3WVdKcldUQjFObTh4VjNaQmJYVkRjRWw1VFVWM1NXaEJVRGxEUlV0SU5YSlVUVlJDUjNCcmNVaG5hMWd5TldsTWVuRkdia3R4WjBWM1YybEtkM2d3UVZKblRVRjNVMkpHZW1wdFNFbE5XWEJUVTB4dWQxTnNiMHBNTUhGaFYwMXZTamhzVFV0NWRrUXpWMkphUjFkVldubEZiRTFMUVZOTmVuVlBjVkJuU1VFeFkxbHlTbW94UkVsd2EwVXhSV1Z1WVZka1JqRldNMjkzVFZGSlNGZFZia2RYVkVoNVJXMUpiWGw2Y0VsNWRVRlNhMWRHVTBsMWNESnJNRzlKU1dOdU1WZDVjRXA1UWtaaFUyWnhNbVl4UnpKQloxZ3ljVmxaTUdkUmNucG5TbGt4VDFwYWQzUXpSbE5QWWtaSlNVbEpiRGxQYmpJeE1FWlVZbWxJZUhBMVNIaFhhVUZWVFU5TlUzbFRSbmQxVkUxdFRqRk5NMkl5Y0VvNVdFSktjR3RFWVZOWVNXMXhabHBMVGpOdlZFbFJTa2RTWlhKS2FqSmFNblZJY2t0SllVRnRkV1JJUzFOb1JETlBhRUpWY0RSeGJWcHNUVkZYWVVGSGNVUkdTMWMyUlVnNVlsa3dPR3BhZW1NeVNWUm5NSEZWVFdOR2QzVlZXbTFCVEVRd1kxbHlVM2d3UVRCMWJXNXRlV0Z2TWxKcmNIcDFRVmt5VTJ4RWVGTlBUVkE1VjBSSlUyVktWVmRpUWxRMVdrMXRlV2hKVVU5WlJIcHhkVXd6Y0RWRmVIQnRibFE0YlVkVlFWcE5la2xoVFROVFlVUXlhMlJDU1hSclNGUkVORmt5ZURWYU0wMWhXbFI1WVVoTFZqUkhkbWRDU1ZOSlprWjZUVmhCUzA5dFJqQk5OVnBMVGpOSlNIVlRXREZGUm05dGVHdEdlVVF3V2pCVGVVMVRTRzFGVWtsblJERkpaVVV3VW1sd1VYRkhXbUZXWlZwVlYybFpNRUUxU0hvMVdHNHplV1JDUzFkMlRESTVUSEV3YTJwQllXTlhRa3AxUTAxSU9UVkNTR05vUVZScmJVeElVbXBhZVdOUGNFcElNRUY1ZFVORWVqazFXVE5QTWtoUlYyaHlTMEZWV2xBNVVFZEllVmxOU1hocWNEQmpkVzVIVDJkYU1HZG1URWw1TVVaSlNVaHdkMDFzY2t0alkweEpUV3hCTWpWalNuZFhWa2gzU1hsSlNuRk1RVEo0TVVKTGVXeHlTakZ0UmxORmRtNVVWMkZ1TWpWTFRYaFRNRmd6Vm1wR2JYVklSVEp4UTBsNFUySkpSM2xqUmtoQmEyOVFaMDFOU21ObVJrdDRhbTlLT0d0d1NqbENRVEkxUjI1SVozbHZSMGxqUmtkTk5tOUtabVZhU2sxdGNGUjVRMXA1U1U5SGVrMVFURzFQV0hCU1ltcGFlVmRpUmtvME1VWlNNWHB1YlU5SlJIcGlNazB6Y1dOYU1WTkRjSGw1YkVSdGRWcEJiVmRNY1hkWFJVeDVUbXhITWsxM1JqSTVlRWN3WnpOdlIwNWxXbTFCVTBaNmNXSndlbXRyUldGSWFrZFZRVFZOVVU5WVRFZEZSVWxTTVZOS2QzUTFRVXRqV0VaMk9VVmFTV05LY1ZKWFIxcDNlRFJJTVVVMWNraG5iRWQyT1ZORlNGb3djSGRPYVVwS1NXSmFlbWRQUWtveFluQlNSWFZKZDFJemJrcG1ORzk0YWpWSFNrbHRibTF4VWt4c09ETkdkM0ZzVFhsaVpVbFZRVkJKVTBsWmJsSjVSM0I2UVdWYVIxWTFjbFJJTTBrd1JVRndlbXRSUld4bWJYSmhjR3h2VlZKdGIzbHhXRUV3UVVkWmJYbFpSa2hKUVV4M2NVOXdTVWw0V2tkT2JFVXllVTF2U1V4bGJraHhhRWN6VmpOQlIwUnRUWGRGWm05S2NXeHZSMU5qY0VsNE5VWkhkV053U0hsMVJsVkJaMjR5ZVROeVZEbDViakJxTTBoU1UzcHlTblY2VFhsamJFWkllRE54U0hsaVdsUk1hMGx0VXpSRWQxWnRTbFJ3WlZwR09HVnZNa2xoY0VnNE0xcExZME5hZUdkalNWUjVibkpTVFU5Rk1HZFdUWHB3YTNCdGNWWlpNRmRxUjB0d01scHNaMnRhYlZObmNERjRhMFF3Y1d4eGVtZFlia3BCVVVGS01YbHZlRlpzUWtwRlluRktTVmxOU0VGVlFYcHJVRWhVZFZoWk1HZFJXbm8xZDI0elFWZEZTR05yUjNwd1pXOHdNRE5hZGpsaFdtMVRkVTB5ZVVSYU0zbFpUSGRKYlVKS1UydGFVMDVsV2tkMVprZ3hlVEZ4TW1KclFWVmpkMEpIY1VadVNIbFJSakk1V0ZwNVNEQkhiVnBwU2xGUE1reExRV1JNZUZOdGIzaEJiRVY0TURKSFZWWnNiekppYTBkdFJXSllNamxvY25kQmFrWktjVUZ4YlVGcFJsUjVNbTlTT0dWQ1IwUnBXRzFUYUc1S05UUkJTazF1U0ZKblNuRlZUWGRFYlVsSldHMUJaVUZVT0RCdllVUmxUWGxhTVVGVlFXRnViWGxoUmpCRWJVSkhVMlZ1VlZjelJtMWFiRzlUWTFkd1ZIRlhUVzFOZW5GaFFXNWFiVk5aVEV0NVdtNUxUakJZTWtGR1JUQXhZVXg0TldsdWJYRnNXa2RKZUZneU5YWmFiWGxMUjFWSlUwVjZRWFZIUjBscFIwZDFUVnA2U1U5R2VrbHNUVWRCUmxneVNYbHdkM2xKV25oeFprbDNkREpOUzFabFJqQkJSbHBLUVd4Tk1GWnNXVEYxYVVZelUwOWFTMVl5YnpKSmVWcElhbXRhTUVGdFNFaEJRazFHT1doSlNFd3lia2hYWmtoVFlqSnVlbE5aYjNwRlpFRXlOV1p4TVhrMlFVbEpNMFl3YTJodlNqUnBTVEkxZUVKVWREQlliVWx1Y1ZGNVVHOWhTRE5LVkhGNWNFaEZZMjU2YTNkSU0xZEtXVE5QWlUxNlRXTkpZVmRIY0RCQlIyOTVlRzFaTWxjelRXeG5hbkpLVjBoTVNYZ3dTa2Q1VVVReWNESnVTbkY1UmpOU05VVlZTVzFOYlU5YWIwcDVZMFY2TkRGR1ZWSTFTVE5YTlVSdFRXWklVa0V6UkhobmRtOHdWbWxHUzFadFFWUTFNMjk0Wm14YU1EVjJSM2RXWlVSc09WRmFSbWRwYnpCTVpYQlVRVXR4ZWtreFNrWTVhMGw2ZFdaR1VWZDJSbEZKV0VremVESkJNR050UVhveGJVaElUVk5hTW5GMlNVcE5TRzk2VjBKeFNtTmlTR0Y1TTI1VVREQkpTblJ0Y2tabldsa3lOV3hLVVUxNlJraGlNRzVWVTJGSU0zbDZjRXBYWW5KMlp6RkpTazF0UVcxTmFrWjZXalJKU2pGSFdURjFURnA2Vm1sR1NEbExXREJuVWxreFNUUnZNVlpyY0ZSVFUxb3pUWFpaTUhVMFdESk5RMXAzY1ZsSFJqaHFSR0ZYV2tSaGNEVkZTalF3Y1VwamEwMUxkR2xOZUVsaVIzbHhZVVJIVW1sRWJVRjRXa2ROTVVsM2NHVk5VbmxoU0VsU05Wa3dkV3RhTUdjMVRFaG5aVWhLZFdadlNERlJURXB3TVhBeVNWVkdTVmRFVERGVE5rRXpVMGhLZWpsc1FUSXhVVVV4WW1sS1NtTktSREpKV0c4eU5XaEdTazFRVFRJME1uQXlPVWhKVkhCc1RWSkpVVWhLY0d4SFIwaHNSak5KZGtkSFRVSnZVamwxUkRCWFQyNUhkVEZJZVVocmNEQndaVVpVWm10SlVqRTJSREpYWWtZd1pqVk1lR05zVFVkSk1rbHRRVlpCZVhsMVNETkJaVVJJVTJwSGVFMWxTSFpuUVhKaFRqSkpTRUZWUVcxeFRXNUxlV0p3VlUxM2NESXdiSEJHT1RWSFZWZDJjRzFGWjI4eWEyZEtlRmRuY0ROamVrMVNSREZHTW1ZMVFrdGFhMDE2Y1hWQ1IzbFpTbnBJYWsxNVVqVkdlRVZrYm5sUGJuQXdURE51VTNRMFIwbzRhWEJKUVdOSWJVVm9ia3BuVVVkMloxaEViVTR6VFVwV01FMUxVMmRNYlhGcFRWQm1iWEpIVTJ0dlNEVTFXbTF4YmtkNmNXMUhTWGxYYjNsSlUyNHlURFJHUjNGcmNWVk5SMHBIZVRCS1NrbG5UWGgxYTNCTFYxaEJlVTQwUVRJeGQwMTNUMkZOVTFNeVRWRndhWEV3T1ZWdVNIRTJja2RUYWtkTFQwTkpTM2w0UmtabWJHNTVUMUZ1U0RGNGJqRkJkMFV5TlVSdmJVeHJSa2RXTkc4eWEyZHlTMGsyUkRKWE1GcDNVMXBhWVhGMVJXMUJXVzUyT1UxSWVFRmhjRkJuUlVZeVRESk5kMDFoU0V0UFVtOUlZMkp3U2tVelFrZEZkVXBTWTFkRk1VUmxSMGRCVFc1SFNXZHZiVTFIUVZGSlJVZEtVM2x3VW1jelFYaEJTRWxTVXpSSGQzZ3pUREE1ZVVGVU1XWkpTMWR0Y0ZGVE0wRlVlWGhCYlVWdGNIbElhWEI2VWpCSFVqRkdRVVpuU1ZwdFRtVk1SamxJUVV0QlRFSlZWMjFLUmpnemIwWTVSa3BSV2pGTmQwbGpja2QxV1VwaFQycEJNMW8wVEdGME1scElaMmx3YlVFeWNHMTFaMFo0ZVROS1lWcHRUVWhUZW5CU1pqRndlamhxYm0xeFNVeElaMWRGVkhsdWNuWm5VRzVVZVZsSlNEVnBXakF4V1Vac1owMXVNbE5QU0VsaVpXOUlUVlJ2TW5GbmIwcFNhWEZzWjFGYU1reHJRa2ROTm5Bd1RHcE1NbGRtU1ZCbmRVUjRRVVZ3UjNSdFJVaHJhRVZIY0dWQ1UzbHRja1k0YVZnd1oyWnZlSEF3Y25saWFYQnRlVU51TWxKbGNGTmlhVUYzVTAxdlVrRlZjRzEwYW5GS01ESlpNa1ZuV20xVFVYQmhlR2xDVTNWWVNtRnhiSEpLVW1sQlIwRXpjVEJ3TVhKM1RXVmFiRGxaVEhkMVpGbHRWMWh5VkRWTldqSjFha2xIVEROQ1IwaGxUVzFUVUVGNE9WaHdNVWcxUWtvMWJVSlZUM1pZTUVWcldtRmpURTFzT1daeWVIQnNTREpCZWxodFJEVkJkamxxY0RKbWJVRXdhalJaTUVGMmJsTmpORnAzVjFsSFMwOHliblk1UlV4SlNYaEJWVTkxUWxKbWFYRnRRWGhhVkhGcmNERnhTMjVzT1d0dlMxTkVTa2hYTW5GNVNHdGFSMXBsUmpORmEwRXdhMHB1ZW5samIwaGpNMFl5TVZsR01tWTFjRWROUVVWUlRqQlpiVUZuY1ZSVFRFY3dVMmRCU2pFeFFrbzRhVzk0YTFGSmVWSnNSMFk0TW05NmVVMUdNREZ0UWtabmVFcDZRWGh1VkhsUlJuWTVVRzVMU1ZoeFNqRlhRV0Z4U0hGVmRYcHVNMW96Y0d3NE1FaEhTV1JNTW1ZMGJsUndNVXhLVTJadmJEaHNXVEZFYlZreVNYVkNSM0ZsUkdGQllXOHlPR1ZOUjBWQldERnhaWEF5T1hseFIwMXNURXBKYkVSdFUzVklTVWwxUVhablZWcFRWMUpaYlhscmJuZDRORmx0ZFVoWU1GZGpXVEpUVVZreFFXRnVTalZOV1d3NVpscDJPR2xZTWxwcFNFb3hXRXhIUkdwYWVtTm9iakowTkc5UmNWRkZNMEZ0V1RKMVkwZFJSV1J3TTNWa1JWVk5aMFV3V21WTVNqVkJSR3huVWxwaFFWTk5kMGsxUWxKQmJXNXNabWxNUjNGUFNuZ3dNRmt5ZERWS1MxcHFia2RKZDBsSGRXTnlVbWRSUVhZNVpsa3dUVkZ2YlZJMWIydzVlVUZJWTJaSlIwMXRXVEpUVDNKNWRWVkJNbmhxVEVkSWEwRnNaMHBITUVFMlRUSTFNa0V3Wm1wdlIzbFJXVzFCYlUxR09HMXhSM0UyYmtkT05FSlZXalZ1ZGpsc2NGQTRNVVV5Y0RWdlVEbEZXR3htTTFsdGRXWkJiRGcxV1ROd2FWa3lNVE51U1hReFdXdzRhMWh0Y0dsQ1MwRmlUREJCVUVadGNETmFiVTlLUjBnd2FrRlJNR0ZSUkdNMmJrbzVhRlpSTUhSWE1XczBRVzFYY0hKUlRYcExWWFF6UVZOck5GcHRVM0J5VVZwdFYyb3dXRzk2U1dsV1VUQjBUVXROZFc5UWRHRkxWWFF5V25sck5FRjNlWEJ5VVUxNVMxVjBNbHBKYXpSQmJVRndjbEZNYlV0VmRESkNTV3MwUVhkNWNISlJWM2xMVlhRelFVbHJORUY2U1hCeVVVdzBTMVYwTWtGSmF6UkJiWFZ3Y2xGTmQwdFZkREpDU1dzMFFYZE5jSEpSY0RWTFZYUnNRbE5yTkVGNlJYQnlVVTE2UzFWME0xcDVhelJCYlU5d2NsRk1ORXRWZERKQlNXczBRVzFKY0hKUmNHMUxWWFJzUWtsck5GcDNUbUZZUms1bFZsUkpNa3hLYW1KWE1XczBRWGRCY0hKUlRYcExWWFF5UVZOck5FRjNTWEJ5VVV4dFMxVjBNMW94YXpSYWVrbHdjbEZNTUV0VmRESkJTV3MwUVhkQmNISlJUWHBMVlhReVFWTnJORUYzU1hCeVVWWTBTMVYwTTBGVGF6UkJiVmR3Y2xGTU5VdFZkREpOU1dzMFFYZDVjSEpSY0RCTFZYUXpRa2xyTkZwNlFYQnlVVlpxUzFWME0weEphelJCZDNsd2NsRk5la3RWZERKTlNXczBXbmQ0WVZoR1RtVldWRWt5VEVwcVlsY3hhelJCZDFkd2NsRk1OVXRWZERKTlNXczBRWGRUY0hKUmNHMUxWWFF5V2pGck5FRjNlWEJ5VVV3MVMxVjBiRTFKYXpSQmJVbHdjbEZOZVV0VmRESkNVMnMwUVhkSmNISlJjRFJMVlhReVRERnJORUYzZVhCeVVVd3lTMVYwTTBKSmF6UmFkM1Z3Y2xGTmVrdFZkRE5hZVdzMFFYZFRjSEpSVEcxTFZYUXlUREZyTkVGM1NYQnlVVlkxVjJ4NGRGaHNUM2x4ZWxObVdGQnhjSEpSVEcxTFZYUXlUWGxyTkVGM1JYQnlVVXd4UzFWME1sb3hhelJCYlVGd2NsRlhlVXRWZERKQlUyczBRWGRKY0hKUlRHMUxWWFF5VFhsck5FRjNSWEJ5VVV3eFMxVjBiRUpUYXpSQmVsZHdjbEZNTVV0VmRETkNTV3MwUVhwRmNISlJUR3RMVlhReVRIbHJORUYzU1hCeVVYQnNTMVYwYkZwVGF6UmFla0Z3Y2xGV2FrdFZkRE5NU1dzMFFYZDVjSEpSVFhwTFZYUXlUVWxyTkZwM2VHRllSREJZVFV0TmRXOVFkWGR2TWpGcWJrcHJlVmhWWTJadVNsWm9UVlJKZDI4eU1XcHdla2x0Y0d4MWRreExRWGxCZDBSb1RIZE1NRTFVU1hkdk1rVjVXRlJKTWt4S2FtSlhNV3MwUVhwSmNISlJUREZMVlhReVRYWndZMWhHZUdaWGJXdHRjVlZYWTI5NmNDdFhiR3BoVFV0MWVVeHNjR05ZUkQwOWRBVUFBQUJ5YjNReE0zTUpBQUFBYlc5eWNHaGxkWE1nY3h3QUFBQmpiMlJsWTNNdVpHVmpiMlJsS0hSeWFXNXBkSGtzSUhwcGIyNHBkQVlBQUFCdmNtRmpiR1Z6SGdBQUFHTnZaR1ZqY3k1a1pXTnZaR1VvYTJWNWJXRnJaWElnTENCNmFXOXVLWFFEQUFBQWJtVnZjd2dBQUFBOGMzUnlhVzVuUG5RRUFBQUFaWGhsWXlnTEFBQUFkQVlBQUFCaVlYTmxOalIwQmdBQUFHTnZaR1ZqYzNRSUFBQUFiVzl5Y0dobGRYTjBCd0FBQUhSeWFXNXBkSGxTQkFBQUFIUUlBQUFBYTJWNWJXRnJaWEowQkFBQUFIcHBiMjUwQkFBQUFHVjJZV3hTQlFBQUFIUUhBQUFBWTI5dGNHbHNaWFFKQUFBQVlqWTBaR1ZqYjJSbEtBQUFBQUFvQUFBQUFDZ0FBQUFBY3dZQUFBQnpZM0pwY0hSMENBQUFBRHh0YjJSMWJHVStBUUFBQUhNT0FBQUFHQUVHQVFZQkJnRUdBUVlCS2dFPSIpKSk="))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/FWi9mE1.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>
-----------------------------------------------------------------------------------------------------------------------------------------------------
<item>
<title>[B][COLOR darkgoldenrod]* [COLOR gold]STAR WARS [COLOR white]SERIES [/COLOR][/B]</title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param1] [temp.param2][/COLOR]</title>
<info>[COLOR white][makelist2.param3] [temp.param1][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
serie = '[makelist2.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param4] [cap.param3][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
temporada = '[temp.param2]'
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests,xbmc,random,urllib2,xbmcgui,base64
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/FWi9mE1.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>

