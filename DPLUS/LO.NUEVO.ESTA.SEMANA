<?xml version="1.0" encoding="UTF-8" standalone="yes"?>


<item>
   <title>[B][COLOR deeppink]Actualizado[/COLOR][COLOR yellow] $doregex[lou][/COLOR][/B]</title>
    <link>$doregex[lou]</link>
 
 <regex>
<name>lou</name>
<expres><![CDATA[<span id="currentTime">(.*?),.*]]></expres>
<page>https://24timezones.com/es_husohorario/barcelona_hora_actual.php</page>
<referer>https://24timezones.com/</referer>
</regex>
<genre>@addonfestaycristal</genre>
<year>2019</year>  
<thumbnail>https://i.imgur.com/kaTrYgP.jpg</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
<info>Para dudas, errores y sugerencias unete a nuestro grupo de telegram [COLOR gold]@addonfestaycristal[/COLOR]</info>
<urlsolve>https://drive.google.com/file/d/15ZW99A3jGRNtkM_TvNogVUW1nBnbWtnA/view</urlsolve>
</item>
</item>



<item>
<title>[COLOR white]** ** ** ** ** ** ** ** ** ** ** ** ** ** ** ** **[/COLOR]</title>
<link>http://ignorame</link>
<genre>Categorias</genre>
<thumbnail>https://i.imgur.com/kaTrYgP.jpg</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
<info>[COLOR yellow]@addonfestaycristal[/COLOR]</info>
<externallink>http://ignorame</externallink>
</item>
-------------------------------------------------------------------------------------------------------------------
LO NUEVO 					LO NUEVO 					LO NUEVO 				LO NUEVO 			  LO NUEVO 
-------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------

-----------------------------------------------------------------------------------------------------------


<!--
<item>
<title>[B][COLOR gold]*[/COLOR] [COLOR gold]Lo nuevo D+ [COLOR white]Series [COLOR gold]Disney Jr[/COLOR][/B]</title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR gold][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR gold][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MHd4c0FBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFV1RKT1JGbDZUV3BWZDA1NlJYcFBSRmsxVGxSamVrNVVWVFJPZWxFd1dWUk5OVTVVU1hwUFZGSnBUWHBaTWxwcVdUSk9la1V4VG1wamVVNXFVVEJPZWxreVRrZFZNbGxVVm1oT1YwVXhUbnBhYWsxNldUTk5SRlYzVGtSRk1FMXFWWGhOZWtrd1RrUlJlazVVVVRKT2VtUm9UbFJyTWsxVVZUUk9WRWt5VG1wYWJFNUVTVE5QVkZwc1RYcEJlazFxVVhoT2VtTjZUbFJSTVUxNlFUSmFWRkUwVFhwamVrOVVTbWxOZWtVeVRucGplRTU2YXpOTlZHTjVUbnBWTTA1cVZYbE9la1V3V2xSTk1VNUVZekJPYWsxM1RtcFJNRnBxVlROTmVra3dUWHBaTlU1VVFYcE5hazAxVG1wUmVWbHFZelZOZWtVeVRXcEtiVTE2VFRGT1JGbDVUVzFKTWsxNlRUSk9lbGw1V21wTk5FMTZaM2xhYWtwdFRqSkZNMDVFV1RCT2Fsa3lXVlJOZUU1dFRYcE5la3B0VFhwWk1rMXFWbWhPVkZsNlRrUmpNazF0V1hwT2VtTTFUWHBaTTA5VVNtMU9WR2N6VFZSamVVNXRUWGxhYWxreVRsUkJlazU2VFhsT2FsVXpUbXBqZVUxNlkzbFphbFV6VG0xVmVrMXFXWGxOZW1ONlQxUmpORTVVU1RKT2FrMHpUWHBOTVU5RVRYcE5iVWt6VFVSTk0wNXFaM2xhYWxKc1RXMUplVnBxV214T2VtZDZUMVJOTlUxdFdYbFphazB3VFhwak1rNXFXVEpOZWxVeVRXcFJlazE2WnpOT2FsVXlUbXBGTWsxcVkzbE5lbWN6V1ZSWmVVNXRUWHBQVkZFMVRrZE5lazVVV21sTmVsVjZUVVJTYWsxNldURk5lbGw1VG5wQk1rMXFZekpPUjFreFRucFJNRTU2VVRGTmFrMTNUWHBqTTA5VVNtbE9SMDB3V1hwS2JVNTZhekJhYW1ONVRtMVpNazE2WTNoTmVtc3hUbnBWTlU1SFJURk9WRmw2VG0xRmVWcHFVbXBPUkZsNlQwUlpNVTU2V1RGT2FtTXhUbFJaZWsxNll6Tk9WR016VFdwTk5VNXFTVE5PVkZrd1RucEpNVTVFVlRKTmVrMTVXbXBSTWs1cVZYcFBSRTB3VG5wSk1scFVWWGxOYlVrelRtcFZNMDE2VVRCWlZFMTZUbFJCTVU1cVpHaE9lbGt5V21wVk1FNTZVWHBPZWxreFRqSkZNRTFVV1RGT2VtY3lXV3BSTUUxNmF6TlBWRmw0VFhwVk1VMUVZM3BOZWsweVdWUlpNRTV0UlRKTlZGVXpUVzFKTWsxNlRYaE9SMVY2VG1wU2EwNXRTVEZQUkZVeFRtcE5NazE2VFhoT1Ixa3dXbFJOZDA1cVJUSlBWRmw2VFhwUmVrMTZZelZPVkZGNlRrUlJORTV0VVRGTmFscG9UbnBGTTAxVVZYcE5la1V5V2tSVk5VNUhVVE5OVkZwcFRYcEZNVTFxVVROT2JVMHlUbnBrYUU1cVNUQk5WR041VG5wTk1VMUVVWGxOZWxVeVdsUmFhMDR5UlRCT2VrMTRUa2RWTWxscVRURk9iVWt5VFdwak5FNUhSVEpQUkdONFRrUk5NVTFVV1RCT1IxVXpUWHBhYkU1RVdUQmFhbEY1VG1wSk1WbFVXWGxPVkZreFRVUmFhVTVVU1RKWmVsWm9UbTFKZWsxVVRUQk5la0V5V1ZSVk1FNVhSVEZQUkZwcFRYcFJlazVxV1hoT1ZFMTZUV3BSTkUxdFNUQlBSRTB6VFhwWk1VNXFUVEZPVkZFd1dYcFNhRTU2UlhwT1JHTTFUbTFOTWsxcVVtMU9WRkV5V1ZSVk5FNXFhek5QVkdNMVRucE5NRmxxWXpST1ZGRXhUVVJTYWs1VVp6SlBWRXBwVG5wak1VMUVWWGRPUkd0NlRrUmpNVTF0V1RKTmFsSm9Ua1JSTVU1VVRYbE9hbXN5VFhwU2FrMTZUVEZOUkZreFRtcHJNVTVFWXpST2JWVXdUbXBWTVU1NldURk5hbHB0VG5wWk0wNTZUVE5PUkZreFRWUk5NVTVxYXpGWlZHTTBUakpGTWsxNlRYaE5lbEV3V2xSU2JFNVVSVEJQVkdNeFRtcG5NMDU2VFhoT1ZGRXdXWHBWZVU1dFZUQlpWRmt5VG1wSk1scFVXVEJPZW1jeFRVUlpNazV0UlRGT2VsSnRUbFJOZWs5VVkzZE9lazB5V1dwU2JFNXFTVEpPVkZKb1RucE5NbGxVV1hwT1ZGa3lUbFJTYTA1RVVYbGFhbFY0VGtSTk1rNXFUVEJPVkZVeVdtcFplRTU2UlRKWlZGcHBUa2RWTVU1NlZUVk9WRUY2VDFSU2FVNXFZekpOYWswMVRtMVpNMDlFVVRKTmVtTXlUbnBOTUU1cVZUSk9WRTB6VFhwVk0wMUVWWGROZWtFeVRsUk5lRTVxWnpKTmFsRTBUa2RSTUU5RVpHaE9WMFV4VG1wVmVFNUhSVE5aVkdONlRsUlplazVxV214T1JGRXpUWHBSTkU1VVp6Sk9WRmw0VG0xUmVrMXFVbXBOZWtVeVdWUlNhazE2VFROUFZHTjRUVzFKTWs1cVZYaE5lbU42VFZSWk5VNVVZM3BPVkdNeFRsUm5NVTVxWXpWTmVrRXdUWHBaTWs1NlVUQlBWRXB0VFhwak1rNVVVVEpPUkdjd1dWUlplRTVVWnpOUFJHTTBUa1JKTVUxNlpHaE5lbU16VGtSVk1rNXFXVE5PZWxFeFRrUm5NMWxVV21wTmJVbDZUWHBqTkU1VVZYcE9SRnBvVFcxWk1VMXFVWGhPYlVVeVQwUlplazVFVVROWlZFMTNUa1JSTVU5RVl6Uk9WR3N5VFdwU2EwNUhUVEJhYW1NelRYcE5NazFxV1RWT1JFbDZUWHBTYkU1cVZUSk5WRnBvVGtkSk1rOVVVWGxPZWxrd1dYcE5ORTVVWTNwT2VsRXhUVzFaZWsxcVZUQk5iVmt3VFhwUk1VMTZUVEpPYWxwcFRrZEpNazFxVVROT2FsVXlUbnBSTWsxdFdURk9hbHBvVGxSQmVrNVVUVEpPVkVVeVdWUmFiRTE2U1ROT1JGa3dUa2RGTWs1RVVURk9SMUY2VG5wTk1FNUhVVEpPYWxGNVRsUlplazFVVW1oT2Vsa3dUVlJaZWs1cVVUSlpWRmt6VGtkTk0wOVVUWGxOZWtWNlRYcE5NVTVIV1hsYWFsVjZUa1JWZWs1VVRUUk9la2t3VDFSUk5VNUVUVEpPUkUwMFRsUmpNMDVFVVhoT2JVVjZUbXBTYVU1cVNYbFphazAwVFhwSk1FOUVXbWhPVkUweFRWUmpNRTE2WnpKT1JGSm9UbnBWTUU1VVNtbE9lbFV3VFZSTk1VMTZRVEpaVkZwdFRtMVJNazU2V1RCT1ZHc3lUV3BaTUU1RVVYcE5lbEV3VFhwamVrOVVXVFJPUkdjeFRVUmthRTVxVlhwTmFsRXdUbnBWTVUxcVdUQk9lbFV3V1ZSV2FFNUhTVEZOZWxWM1RrZFpNRTVxU20xT1Ixa3dUV3BOTkUxNll6Qk9WRnByVFhwcmVrNUVXbWhOZWtreFRtcFJlVTVIU1RCTmVsSnRUWHBaTTFsVVVtMU9hazB4VFhwTk0wNTZXVEJOYWtwcFRucGplazU2WXpCT1IwMHhUWHBqZWs1cVp6RlpWRTEzVGtkUk1VNXFUWGhPUkZVeVQwUmpNVTVYUlRGTlZFMHpUbnBOTUZscVVYbE9SR2Q2VGtSWk1rNVVSWGxaYWsweFRrUk5NbGxxWTNwT1ZGa3hUV3BLYVU1cWEzcFBWRkY1VGtSbmVrMVVUVFJPVkVGNlRucFpNVTE2VFRCTmVsa3hUbFJaTUZsNlVUUk9WR014VDBSTk1rNUhXWHBOZWxrMVRtcE5NMDU2VlhoTmVsRXlUMFJqZWsxNlVUSlpWRTE1VGtSTk0wMXFUVE5PVkZFd1RrUmFhRTVFYTNwTlJHTXdUa1JSTTA5RVVYbE9lbGt6VDFSamQwNTZhM3BQUkZFMFRtcE5NazE2VFRST1ZGbDZUbXBLYlUxNlVURlBSR041VGxSck0wNTZZM3BPVjBVelQxUlZOVTVVU1RKT1ZGa3pUa2RWZWs1cVVUUk9hbEV5V1dwYWFVMXRTVE5PUkZsNlRXMVpNMWxVVVRCT2VsVXhUVlJWTkUxNlVYcFBSRlUxVFhwWmVrMUVZelZPZW1zelRtcGplazVFU1RGUFJGRTFUVzFaTVU1VVdUTk5lbWQ2VGtSUk1rMTZZekpOYWxrMFRtcGpNVTFxU20xT1ZHc3dUbFJWZDA1VVNUSlphbHBwVGpKRmVrNTZZM3BPYWtsNlRXcGplRTVxV1RKT2VsRTBUWHByTWs1NldYbE9ha2t5VGtSak5FNVVaekJQUkdNeVRucHJNRTVVV1RGT2JWa3lUWHBOTlU1dFJUQmFWR00xVG0xVmVrMXFXVE5PUjFreVRsUlZNVTVFVlRGTlJHTXhUWHBWTTA1VVRYbE9ha2t6VG5wWk1rNTZXVEJQUkZWNlRrUk5NbHBVVVhoT2Vsa3hXVlJWTlU1VVp6Qk5lbEV3VG5wWk1FNXFVbXBPVkVVd1dXcGFiRTVIVFhwTmFrMHpUWHBSTWs1RVZYZE9SR3N3VGxSak1FNUVUVE5PUkUweFRsUkZlazlVVFRKT1JHY3hUbFJhYTAxNll6TlBSRlpvVFhwUk1VOUVZekpPUkdzeVRtcGthRTVIU1hwT2FrMHpUbTFOTWs1VVZURk9hbGt5VFZSTk5VMTZZek5PVkZVelRtcE5lazE2VW1wT1ZGVXlUWHBaTTA1VVNYcFBWRTB3VGtkWmVrOVVVWHBPYWxreFRWUk5lRTVxUlROTmFsa3pUWHBqZWs1VVdUTk9ha2w2VGxSUk0wMXRXVE5OUkUweVRrUk5NRTVFWXpGT2VtTXdUMFJaTlU1VWF6Qk9lbGt5VG1wak1rNXFZM2xPVkUweVRYcGFhVTU2VVROUFZHTTFUa2RGTVZsVVRYbE9hbFV6VFZSUk1VNXFWVEJQVkZVeVRtcFZNVTlFV1RGT2VrRjZUMVJqZVUxdFNYcE5SR013VFhwUk1VNXFXbWxPVkZGNVdXcGpNVTV0V1RKWmFsa3hUVzFKTWxsNlZURk9SMFV5VGxSYWEwNUVXVEphVkUwMFRrUlZNVTFFWTNwT1IxRXpUMVJaZWsxNmF6Qk9la3B0VG5wSk1VNUVZek5PYWsweFQwUkthVTU2VlhwT1JHTjNUWHBaTVU1VVdUTk9WR2Q2VGxSWk0wNUhSWHBQUkUwelRYcEpNRmxVWXpGTmJVa3pUVlJWTTAxNlJURk5SRnBwVGtSSmVrNXFXWGxPYWxVeVdYcFNhMDV0UlhwT1ZGVjZUbnBKTTA1NlVtMU5iVmw2VFZSVmQwMXRTVE5QVkZab1RtMU5NRTVFVFROTmVsVXdUV3BTYkUxNlRUSlBWRkUwVGtSbmVWbHFVbWhPVkZFeFQxUlJlazE2VFRGUFJGcHBUbFJWZVZwcVRUSk9SRWw1V21wVk0wNUVhekpOZWswd1RucFpNVTVVVFhkT2JWVXhUVlJWTTAxNll6Tk5WRnBvVFhwTk1VNUVUWGhPTWtVd1RsUlJlazF0U1ROTlJGbDRUWHBuZWs1RVRYcE9WRUV3VG1wVmQwNXFSVE5OZWxwc1RYcEpNRnBFU20xTmJVa3dUV3BqZVU1dFNUTk5hbEp0VFhwTk1VNUVXVE5PZW1ONlRYcFJlVTVVU1hsWmFsazFUbnBaTWxscVVYbE5iVmw1V1dwa2FFNXRVVEJPZW1NeVRtcHJNbGxVWXpST2VrVjVXbXBOTlU1VVZYbFphbU4zVGxSak1scEVVVEJPYlVVelQxUlZlazE2UVRGUFZFMDFUbXBqTTFsVVRUTk9ha2t6VDBSak5VNVVTWHBQUkUxNFRtMVZNRTFVV1hsTmJWa3lUMFJLYVU1cVdUQk5la3B0VG1wSk1VNVVVbWxOYlZreVdXcFZNRTVxWnpKT2FtTTFUWHBuTUU5RVdtdE9WR2N6VFVSYWJVNTZWWGxaYWxGNVRtMVZNRnBxVlRWTmVrVXpUMVJqZVU1cVJUQk5la3BwVG5wak1FOUVTbWxPYlZreVRXcE5ORTVVVFhsWmFsRjZUWHBOTUU1VVdtbE5lazE2VDFSUk1rMXRTVEZOYWxVeVRucFJNRTFxVlRKT2JVMHdXbFJqZVU1VVp6Sk9WRkUxVFhwWmVrMXFWWGROZW1jeVdtcFJNMDE2WTNwTmFscHJUbXBSTUZwRVdUQk5lbFV4VG1wTk5VNUVZek5PYWxWNFRsUlJNazVxWTNoTmJWbDZUbnBWTTA1dFRUQlpla3B0VGxSUk1VMUVXVEZPUkZrelRXcFJlazV0VlROT2VscHBUbFJWTWsxNlVUVk5la0Y1V1dwVmVVNTZRVEpPYWxwcFRrUk5NRTlFVlRCT2FtTXlUbXBqTVU1dFdUQlphazE1VGtSak1VOUVUVFZPZW1jelQwUmpNRTVYUlRCWlZFMHhUWHBqTUU1RVpHaE9WRTB5VGtSTk1rNUhXVEZaVkZKc1RucHJNazlVVW1wT2FtY3lXWHBhYkU1dFdUSk5WRmt3VFhwQk0wMTZXVE5PZWxreFQxUlJORTF0U1RCUFZGVjZUWHBqTUUxVVRYcE5lbGt3VG5wYWJFNXFVVEZPUkZWM1RrZEpNRTlFU20xT1Ixa3lUbXBWZUU1RVozcE9lbEpvVFhwRk1rMTZXWGhPUjFVeVRsUlNhMDU2WTNwT1JGcG9UbXBaTWxscVVUVk5lazB5V2xSak0wNXRTWHBPZWxwdFRrUlJlazVVVlhoT1JHY3pXVlJhYlU1cVZUSk5lbEV6VG1wUk0wNVVXbXhPUkdNd1RWUmplazE2YXpGT2FtTTBUa1JuZWsxVVZUQk9SR2N5V1hwUmVFNXFXVE5PUkZFd1RucFpNVTU2VVRKT2VrVXlUVlJhYkUxNlVUQlplazEzVGxSVk1GbDZTbTFPUjFFd1RucEtiVTVVUlRKTmFscHNUa2RSZWs1NlRYcE9SRlV5VDBSTmVVNTZXVEJPUkZGNVRYcEpNRTlFWTNoT1ZHZDVXbXBqTTA1NlVYcFBWRlUwVG5wbmVrOUVXWHBPUkd0NlQwUk5kMDV0VVROT2FrcHRUbFJKTVZsVVl6Tk9hbXN3V1hwVk1rNTZXVEZQVkZFMVRtcFplazFVVlRWTmVsVXpUbnBOZVU1NlVYcE5WRTB4VGxSSmVrNVVVWHBPVkdjeFdWUlJOVTF0U1hwTmFsbDRUVzFKTVU5VVZUUk9lbXN3VFhwTmVrNHlSVEphVkdNelRrUk5lazlVWTNsT2Fra3pUVlJSTUUxNmF6Tk9SRkpxVGxSWk1GcHFVVFJPYWsweFRtcFplVTVIVlRCWmFsRXpUbXBaTWxwcVkzZE9hbGt5VDFSU2FrNVVRWHBQUkZWNFRtMUZlVmxxVVROT1ZGa3dUV3BLYVUxNlp6SlplbEY0VGtSUmVWbHFVbTFOZW10NlRVUmFhRTVVVFRCTmFsbDVUbnBuZWsxVVZUUk9SR3N3V1dwWk1VNUVUVEpPUkZKcFRtcFpNRnBFV1hsTmJWa3hUVlJTYWs1NmF6QlpWRTE2VFcxSk1rNTZZekpPYW1jeFQwUk5kMDVFVVhsWmFsWm9Ua1JWZWs1cVVYbE5lazB4VGtSS2FVNXFUVEJPUkUweFRrUnJlazlFVVRWT01rVjZUbXBSTVU1cVdUSmFWRkUwVG5wUk1sbHFVVFJPUkdzeFRYcFpNazVIU1ROTmVtTjRUa1JSZWs1VVRYaE9SR2N3V21wYWFFNXFaek5OVkUxNlRXMVpNRmxVWTNwTmVtY3dXa1JhYWsxNldUQk9SRlV3VG5wVk1VMVVVbXBOZW1jeVRucFJNazE2VlRCUFZGa3dUWHBaTVUxRVRYaE9SRkV6VG1wYWFFNVVXWHBQUkZWNFRYcFJNMDlFVFhwT1IxRXhUVlJOZUU1Nlp6SmFSR1JvVG0xWk0wNVVUVFZOZWxFd1dYcGplVTV0U1RCYWFrMDBUbTFSTVU1cVdURk9SRVY2VG5wS2FVNUhXVEJOZWsxNlRXMUpNRTVFV214T2JVa3lUbXBSTTA1RVZYbFphbFpvVGxSWmVrNXFXVFJPZWxrelQxUmFiVTVYUlhwTlJFMHlUWHBaTVU1RVVYcE9lbEY2VFdwTk1VNVVZM3BOUkZKdFRXMUpNMDFVVVRKTmVtY3hUV3BWZVUxdFNURk9lbHB0VGtkTk1scEVVbWxPYWtsNlQwUmFhRTE2WXpKUFZGSnBUbFJCTVU5RVVYbE9iVTE1V21wVk5VNXFXVEpPVkZKclRqSkZlazlVV1RWT1JHY3pXVlJOTlU1VVdUSlpha3B0VFhwQmVrNVVVbWxPVkVGNlRtcFZNVTVxV1RCYVJHTXpUWHByTVZsVVRURk9SRWt6VG1wTmQwNUVhM3BOVkUwd1RtcHJNbHBVWXpST2FrVXdXa1JrYUUxNlVUTlBWRkpxVFhwTk1GbDZZekZPYlVrelRtcE5lazVFV1hsYWFtTTFUa2RGTUZwVVRYZE5lbFY2VGtSak5FMTZZekZOUkZreVRYcE5lazVxWXpWT1JGa3lXVlJhYUU1NlZUSk9WRkY2VG1wWmVrOVVXVE5PUkdkNVdtcFNhVTVIU1RKUFJGVjNUWHBCTTAxNlZUSk5lbWN3VFhwTk5VMXRTVEphVkdNeVRsUlJNMDFxVW10T2FrbDVXbXBWZVU0eVJYcE9hbEV4VGxSQk1scFVZelJPYW1NelRtcE5OVTVYUlRCYVZGRjVUbnBuTUZscVZUSk9SR013V2tSYWJFMTZWVEJOYWxwb1RucEpNMDVVVFhkT2FrVjZUMVJSTVUxNmEzcE9WRlV6VG1wTk1rMTZVbTFOZWtreVRucGpNazE2UVRKUFZHTXlUbnByTUU5VVZtaE5iVmt3VFZSa2FFNUhXVEpPVkZVeVRYcEZNVTFxVFRWT2FrMHpUVVJqTWs1cVJYcE9WRkpxVGtSbk1VMUVZM2hPVkdzeFRWUmFiRTU2WnpCUFZFcHBUWHBaTWxwRVVtMU9WRTB4VFhwTmVrNVVUVE5PUkUwMVRsUm5lVmxxV20xT2VsVjZUVVJaZVUxdFdUQmFhbHBwVFhwUk1VMTZWWGxOZWtFelQwUlZNRTE2UlhwTmFscHNUbnBWTUU1VVVYbE5lbU13V1dwVmVrNXRTWHBOZWxVeFRXMUpNazVxV21wT1ZGVXlUWHBqTVU1VVJYbFphbFUwVFhwSk0wNVVUVEJPZW1NeVRrUmFhRTVFYXpCYVJFMDBUbnBKTUU1cVZYZE9WRTB4VG1wVk1FMXRXVEJPVkZGNVRYcG5NVTVxVW10T2VtY3pXVlJLYVU1NlRYcFBSRmt6VFhwcmVrOUVXWHBOZWtVeVRucEtiVTVIVVhwT2FrMHhUbFJGTUU5RVRUUk9lbXQ1V21wamVrNXRTVEZQUkZVelRsUkZNMDFxV21wT1ZHY3pUMVJWZUU1cVRUSk5lbU41VFcxSk1FNUVVbXhPZWtGNlRYcGFhRTVFYXpCT2VsVXlUa2ROTUUxcVkzZE9lbXN3VDBSVk0wNTZSVEpaVkUweFRtcG5NVTVFVVRWT2Vsa3lUbnBaTUU1cVZUSk9WRkp0VFcxWk1GbHFXWGxPYWxFelRtcFpNRTVVVVhwTlZGRXhUVzFaTVUxNlVYcE5iVWt4VG5wVmQwNUVTVEJQUkZFMFRsUkZNazE2VVRGTmVsVXdUV3BSTUU1WFJUTlpWRkpzVG5wWk1VOVVWbWhOZWtFd1RrUk5ORTVVYXpCTmVtTTFUbXBOTWs1cVRUUk9hbEV3VDBSWk5VMXRXWHBPYWxreFRrZFJNVTVxVlRWTmVsVXpUV3BTYTAxdFdUQk5WRnByVFhwTk1GcHFZelJPZWxFeFRVUk5kMDV0VVROTmFtTjRUa1JuTTAxcVVYcE9SRmw2VFhwVk5FNTZUVEJhYWswd1RsUk5lazlVVW14T1ZFRjZUbFJXYUU1RVNUSk9hazB4VGxSbk1GcFVXVEJPVkVFeVQwUlplRTE2VVROTmFsRTFUa2RKTUZwRVkzZE5iVmw2VFdwU2EwNXFVWHBPUkdONVRucFpNRnBxVFRST2VtY3lUV3BhYUU1SFNUTk9WRTE0VG1wUk0wOVVUWGRPUkdjeVdsUldhRTVFWnpCT1JGazFUbFJGTUU5VVNtbE9iVmt5V21wTk1FMTZVWHBPYW1ONVRYcEJNRmw2U20xT1Ixa3lUMFJLYlU1dFNUTk5SRkUxVGtkUmVWbHFVbXhPYWxFeVdYcFJNazVxWXpGUFJGcHRUa1JOZVZscVZUSk9WRkV3VDBSUk1VNVVSVEpPYWsxNFRrUm5lazFxV1RWT1JGVXhUMFJTYUU1dFVURk5SRlY1VG1wbmVrMUVXbXhPVkdzeFRVUkthVTVIU1RKT1JGVjRUa1JuTTAxVVVYbE9SRmw2VFZSak1rNXFSVEJPUkUxM1RucG5lazU2V21sT1JGa3pUbFJTYlU1cVkzcFBSRmt5VGpKRk1VNVVXbXhPUjFsNlRrUlJOVTVVV1ROUFZGa3dUbFJOTVU1RVRUQk9WMFV5V1ZSTk1VNUVWVEZOUkZKc1RrUlJlazU2VW10T1ZFVjZUbFJWZUU1SFRYcE9hbFY0VG1wWk1rMTZWWGxPYWxrelQwUlpNVTU2UlROT2FscG9Ua1JOTWs1VVVtdE5lazE1V21wVk1FNXFaekJOZWxwc1RtMVpNRTlFVFRWT1ZFVXdUMVJOTTA1SFVUQlBSRTB6VGxSSk1VMUVWVFJPVkZVelRrUmFiVTVIV1ROWlZGcHJUbnByTUU5RVdtaE9SRWw2VFZSTmVrNXRVVEZPZWxreFRtcFJNVTFxVVhoT1JHY3hUbnBSTTAxdFdURk5lazB6VG5wck0wMXFXWGhPUkdjeFRVUlZNVTVVUVRKYVJFMDFUbFJyZWsxcVl6Uk9iVlV5V21wa2FFNUVaM3BPZWtwdFRucEpNbGw2VFRGTmVsVjZUV3BaTVU1VVNUTlBSRkpvVGtkTmVWbHFUWGxPYWsxNlQxUlpOVTVIU1RKYVZFMDBUakpGTTFsVVZURk9la0Y2VGtSWk0wNXRWVEpPVkZFelRYcGpNMDFVVW0xT2JWa3dXWHBOZUU1cWF6Tk5WRkpzVFhwRk0wOVVZekpPUjFreVRucGFiRTE2VlRCWmVrMHhUa1JKZVZwcVVUTk9iVWt3V1ZSUk1rMTZUVEZPZWxKb1RrUkZNazVxWXpWT2FsRXpUVlJWZVU1cVdYcE9SRTE2VG1wWk0wOVVVWGhOZWsxNlRWUmplRTF0V1hwUFZGRTBUWHBCZWsxRVVtMU5lbXN3VG5wamQwNXFWVE5OZWxGNFRucG5NRTFxU20xT2VtTXpUV3BLYlU1SFdURk5hbVJvVG1wck0wMTZUVEpOZWsxNVdXcFJOVTVxV1hsYWFsVXhUbnBuTUZwRVRUUk9la1V4VDBSU2JFNTZUVEJhVkUweFRtcHJlVnBxVVRGTmVtTXlXbXBaZWs1Nlp6Sk9SRkpxVFhwbmVrNUVWWGROZWxFeVdXcFZlVTVVWjNwTlJGbDZUWHBKZWsxNlZUUk9hbFV3VFZSWk1FNTZhekZaVkZrd1RYcEpNMDFxU20xT1ZFa3dUa1JOTWs1VVNUSlplazE1VG5wUmVWcHFXWHBPZWxreFRXcE5OVTVxVlRCYVZGSnJUWHBGTTFsVVdtcE9SRmt4V1ZSUk1VMTZZek5QUkZrd1RrUlpNazVxVlhwT1ZFRjZUbXBaTVUxNldURk9lbEUxVGtSRk1VMUVVVFJPYWxWNVdtcGpORTF0V1ROTlJGRTBUWHBGTWs5RVRYZE9SR2N5VFZSamQwMTZZekpPZWxKclRtcFZlazVFVVhoT2FsRXhXVlJSTVUxNlkzcE5SRlUwVG1wSk1rNUVWWGhPTWtWNlQwUmthRTR5UlRKUFZGSnJUa2RaTUZwRVl6Rk5lbWN5V2xSYWFVNVhSWHBOUkZreVRtcEZNRTlVVlRST1ZFRXdUV3BqZDA1RVVYbGFhazB5VGtSVk1rNXFWWGxPZW1zelRrUlNhazE2WXpOWlZHTjVUbXBGTVU5RVRYaE9la2t3V21wVk5FNUVUWGxaYWxKclRYcEZlazVxV1RKT2VrMHlUbXBOTWs1dFJYcE5lbVJvVGxSck1VNVVZelJOZWtVd1dWUlpNazE2UVRKT1ZGa3dUbnBuTWs1cVl6Tk9SR3N5VGxSTk5VNUVXVE5QUkZrd1RtMVJNVTVFVFRWT1ZFMHlXWHBLYVU1dFVYVERHd0FBTWt4SFdqRkJWRWhzVEhkYWJFRjZSREZCUjFveVdtMU1NRXh0Y0dwQmVrUnRRVWRGZDFwdFZqSk1kMDE1UVZSTU0weEhUREJCYlhneFdtMU1NRnB0Y0RGTVIxcHRXbTFTTUZwSFJYcGFiWGd3UWxGd05FRjZTRE5hZDFvMFFUSlNiVUZIY0d4QlVVZ3dUWGROZDFwdFRERkJVVXd5V20xT01FRlJTRE5CZDNnelRFZE1NMEZ0U0cxQ1VVUXlXbnBXTWt4dFdqUkJVVkp0UVcxTmQwRlJSREZDVVhBeldtMXdNa3h0V2pWQlVYQnRXbmROZVVFeVVqQmFiWEF4UVhwTU1rSkhjWFZCVkZvd1RIZEVNRUZIUkRCTWJVZzFRWGRTTWsxSGNHMUJkM1J0V20xYU0wRnRkREJDVVhCdFFVZDBiVUZ0VjNwQlZFUnNUWGRhTUVGdGNETk1SMDEzUVZSU01rRkhUR3RCZWxJeVduZElNa0Z0ZERGQ1IzRjFRVzFXTWt4dFdqSkJlbFpzVEhkd2EwRktVakpNUjFwdFFWRjRNVUZSVERKQlIzQXlUSGRhTWtGdGVHMUJiVm93UVZSRU1rRlJSRFJhYlZJeVFrZE1OVUY2VERCYWQzRjFRVWRPTWxwSFJHdGFlbFl6UVhkSU5FRjNjRE5CZDBsMVFWRldiRTEzY1hWQmVrZ3dUWGRGZFVGdFRHMUNSMDExV20xYU1FeDNUREpCZDB4dFdsRklhbHA2VmpKTmQwZ3lXbnBXTVVKSFJYZEJiWFF5VEcxYWJVRlJlREJhZDB3eVFVZHdNMEZSU0RWQmVsSnRXbmROZVZwdGNERmFkMFY1V20xU01GcDNTRE5hYlZvd1RYZGFha0ZIZERGQmJYRjFRVzFNTTBGUldqUkJkM1F6VEVkYWEwRlVVakpCZDBWMVFXMU1NRTFIUkRGQmJYUXpRWGR3TVVGSFRqSk1SMHcxUVcxSU1FMVJTREJhZWxZeFdtMUZlVnB0ZUROQ1IwUXdRVzFTTWtGdFRESkJVWEF3VFZGTU1FRkhkREZCVVVRelducE1NRnBIUkRWYWJVZ3pXbEZJTUVGNlRHeE1kMHhyUVhkRU0wRjNTRzFhYlhodFFYZE1ORUYzV20xYVIzQXpRWGRJTUUxUlRYcEJkMW96UWtkTU1scHRWak5CVVZvMFFVZDRiRTEzV2pGQmVrUXlRWGRFYlVGdFRESk5kMFYzV20xTU1FMUhUREphYlVneVRVZE1NVUYzV2pKQlIzQXlXbnBNYlZwSFJYZGFiVWd6UWtkYWJVRkhlREpNZDFkNlFXMUVNMEZSV2pWYWJVd3pRa2ROZFZwdFJEQk1iVXd4V20xTWJWcHRjREJCVVVSdFdrZGFNVUZVV2pKQmQxbzFRVzFPTVVKUlRYVkJWRXd5UVhkRU5FRnRTREpDVVhBeVFYZDRNa0Z0UkRSYWVrd3lUVkZhTWtGdGNERmFVWEF3UVZGRWJWcDNXakJhYlV3eFFsRndNMEYzZEcxYWJVaHRRVzFTTVVKSFdtdEJla1F3UWxGTU1WcHRlREJhZDNGMVFXMXdNVUZSY0RWQmVsb3dURWR3YkVGNlZqTkJiVVY1UVcxRU1FeHRUREZCVVVnelduZGFha0ZIVG0xQ1IwVjRRVzFTTWxwSFREUkJVWFF3UVcxRmQxcHRlREZCZDBWMVFVZHdNa0YzVEcxQmQxb3dRbEZhTWtGUmVHMUJiVm96UVZSRU1GcDNXakZCYlZZelFYZGFNRUZSVEcxQ1IxcHFXbnBXYkV4M1RYVkJSMUl5UVVkTmVWcHRjREJCUjNBeFFWRjRNVnB0V2pOQlVVd3pURWRNYkVGdFZqRkJSMGhxV20xd01VSkhSREJCYlhneVRVZHdNa0Y2UkRKTlVYRjFRVlJTTWtGSFNESkJSMW94V2tkTmVGcHRURE5hYlhBMVFXMTBNazFIU0dwQmJWb3dXbmRYZWxwdFJHMUNVVVEwUVVkU2JVSkhSWGhCU2xJelFYZE5ka0ZSUkROQ1VYQnNRWGR3YkUxM2NYVkJiVkl3VFhkYU1FRnRSRzFCUjBSclducE1iVUpSUlhaYWVsWnRRa2ROZVVGSFJERmFVWEF4UVZSSU1rSkhTREZCVVZwc1RIZE5lRUZSZERGYVVVUnRRVzEwTWtGUlRERmFlbFl6UVZGYU0wRjZUREJNUjNGMVdtMTBNRTFIVERGQlVYUnRRVWRFTTBGM1RHMWFVVVF3V20xTWJWcDNUWFpCVVhRd1RHMU5kVnB0ZURCQ1VWb3lRWHBXYkUxM1RESkJTbEp0V20xRU5FRlJkREZCZDBWM1ducE1iRTEzVjNaQmJWb3pRWGROZVVGdGRHMUJiVWd6V25wV01rRjNURE5hYlVneldtMUVNa0ZIVERGQlVVVjVRVWRFTVVKUlNHMWFlbFl3UVVkSU5FRkhlRE5CUjFwdFFYcElNRTFSY0cxQlIwZ3hRVkZJTWtGUlRERkJkM0F5UVVkME1FRnRXbXBCYlU0d1RWRklhbHA2VERKQ1Ixb3dXbTFNTTFwUldqUkJVWGd5VFVkTU1rRnRXbTFDUjNCdFducE1NRUZ0V2pGQmVrUXhRbEZOZWtGVVRHeE5kMFY1V20xSU1scEhSWFphZWt3d1FYZEZkVnB0VG14TWQxcHFRVzFPYlVGUlRYVkJiVTR4UVhkSU1rRjZVakphZDAxNVdtMU9NRUpSUkcxQlZFUXlXbmR3TTFwdFRqTmFVVVF4UVhwTU1VSkhSREphYlhnelRFZEZlVUZSUkRCTWJVaHRRVzFhTUVGM1dqVkJla3d6V2tkd00wRkhVakpOUjAxNFducFdNRXgzY0d4QmJVNHlUSGRGZDFwdGNHMUNSMFY1UVhkU01rRkhjR3BCVVZZd1RHMWFNVUZIVmpKQ1VWb3dRVWRPTWtKUlRESkJWRkl6VEVkd2JWcHRSREpDUjFwdFdtMTBNVXhIV2pOYWJWWXdUVWR3TVVGM1RHMUJkMXBxV25wTU1WcFJSWGhCUjBneFFsRk1OVUZIUkRCTmQzQXhRVkZFTWsxSFRHMUJlbG95V2tkRWExcDZURE5CVVV4c1FVZDRNa0ZIVERKQlIwNHhXbmRJYWtGSFRERk1SMGwxUVVwU01FRjNXakphYlVRd1FsRmFhMEYzVm0xQ1VVaHFXbTFXTTFwSFJHeEJiWFJ0V20xYU1GcHRlREJDVVhBMFFYZFdNa0ZSUlhaQmJWWXdURzFGZGtGdFVtMUJVVVEwUVhkTU1rRlJXak5CVkV3d1FVZEVNa0ZSVEcxYWQwUXhRVzEwTUVGSGNEVkJSMW96V2tkTWJVRlJjRzFhVVVWNFFXMU1iVUpIUkRCQlVWSXdRbEZNYTBGdGNETkNSM0JzUVZGSU0wRkhTRzFCVVhSdFFWRmFNRUZSVm0xQlVVeHNRWGRTTTBKUlRYaEJVVXd3UVhkd2FscHRjREpDVVhBeVFYZGFNRTEzUkRWQmQwd3hXa2R4ZFVGSFdqQk1iVm96UVcxNGJFeDNURE5CZDNRelRFZEVhMEZ0ZUcxQ1VWb3dRVlJXTTBGM1RHMUJWRXd4UWxGTU5VRlJSRzFCZDNBMFFXMU1iVUpIY0RKQmQzUXpRVWR3TkVGUlRERkJiVXcxUVZGSU1rSkhTREpCZDFadFduZElOVUYzUkcxYWJYQnRRVlJFTWtGSFRYcEJVWFJ0UWxGTmVFRlJTRE5hYlV3MVFYZDBNa0Z0V2pOQmJYQXlRVzFFYlZwNlZqRkJSMW94UVhkYU0wRnNjRUZRWVVWc2JrbzFZM0ZWZUhSRFJrNWhTREYxTlhGSlZtVk5lSEExV0RGME5FaDNXakZIVWtRMVNucE5lRWh0U0d0R2VFVktRVzFJYVZwaGVUUkpSbWRXUlhoRk5sZ3pVMWxhZWprelNVWTVZWEpUWTJkYWQwOVRRVko1Wlc1TGNHMUdWSEExVFcxUFdrMVVWMUJDVkVsQlduZDRhVWd3UVdKSVlWZFNSVzE1YTNGNWVESmFNalZXY0ZSak5FRjZkV3BCZVU5SlNsRlhla1pSVW1WRlZFZ3lTVWRKU0hFd1UybEJkMWRFY2xOSk1XOUpkR3hOZUVneVRFbGpTVzVMVjBKQlIza3hja2ROUlVGSFNWTklNREUxUnpOV01FZDJPRE54UjBsM2NucDVTa0pIVTFGdVMwbGxTWGxXTlVKU2VUTnVTazEzV0RKVGRVUXllVEZDU1ZJelRFZzVVM0ZJT1hkeFMxZHRXbUYxUlZveVYwUkpVWGt5V2pCVFkwVlJlV1JhYlU5cVJrZDVUWEV3UVROYVUwVjZjVXR4TTFrd1UwSnViWEV5U1VoQlJFY3lNR3hIZUhsMmJsVjFSMW96ZFVOdVMzVjFRbE5QTmtRd1dtVkpVbkExU0VwNVNFRXdSV052VTBWU1ducHJVMGhIZFZkSFNEbHBXa2xGUTBKSlQxRmFla0ZWYmxSNVRYRlVaakJNZUdKbFFYaEJNa2R0UVRKSVMwVkNRV0ZYVFVGSVVtVnlVMk5SU25wRU1VeDZPREJCZUdOblFrbE5UVUpWV2pKTVNFbHBia3BTTTFwVVRWRndNVWxZY1ZWRWJXOVNRV0ZIZDBGNmNWRlBkbG95VmpOYU0wVm5Ta2c1WjBoSVFVcEZVblUxUVhoRllsa3hkVEJKYlhsMmNFZ3hRWEZJTld0YVNWZEZSSGQ0YVVkUmVVSkVlazExV2pKalNHNUpUVlJhVlhRd1JXMTBha3h0Y1VwS1JtZFhSeko1V2taS01YVkhkbWRvUmpCVE1FeElNVlpJVVhGb2NWUXhaRVl6VTBwWU1rMXBjR0Y0TTNCS2VVVmFiVk5IYmtoeFNVMVZTVmxHZWt3MVducDVVbkJzWnpKRWJVVXdjVEpyWm05U2VESk5WVTlSVEdGUGEwSktSV3h2ZVUxclNGRjFaSEIyT1VwR1IwRmFjRVpuZFVjeFUyWktSMFZYUVhoSU1rRmhlVVZGTUdkWFNWSm5ZMDFSV2pGYVZVRmhTRkp4TVZwSGVXcHhVRGd4V0RKVE1VUjZkREpGVlZkdVRUTkZRVUpLVjBkS2VFUTBXVE41VUhCSlQxVkhlbWMxY2tabmJrVjJabTFIUjNCcVNtRmphRWQ1VWpGdU1GSmxSbFZYWkVkM2VYZEZTVUZIU2xOSk5Gb3lZekZ4ZG1kWGIwbE1NVUZJV2pOTlVVOVFRVXBUTm05dGVYZENVRGxYVERKeFZVaDZZMlZ1UzJOWFFrbEZZWEIzVjFCQ1IzbFJjVEpKVmt4TFUybEVZV0pwU1ZRMVlVZDZlVmxhYlU5QlRWVmlNbTV0VTJ0d1NtZFljRkE1U0VsdGNXSndTa2xoV2pKNWFrcDZaMVJ1YlUxVFNWRjFXRVF4UVZsQk1YazBUVXRUVkhKNVYyNUdla0Z1UkV0UFpVbDNRVFZITW5WWWJqSkZVMEV3WjJ4TVIwOWFja2Q0TVhGSFVtbEZiVWxWVEcxQlprbEhjVlp4U1VreVRYWTVZMEpLTVVOQlVVOXFjWG80WlZwUlJYaEJTbGN4VEVsalkwVXhWMEpGZDNsVlNWSnhaa1o0T0RSRVNGZHJSWGR3YVVoSFYwWkZNSEZvUnpCamFFUXdWMlZNUjAxaFNsRkZaVUZIVTFWQlZIaHRUVWxUV1Uwd2RHcEVNRVF4YmtsUFZVeDVlREJhZWxkRFNWUm1iRzU2U1dkdU1GZGpURXRGVmxnelV6UmFNMGxYUlRGeFprRklWMDlFUzFOalNsVk1aVzVJT0RKRWJWcHNTRlZTTlhBeGVWVk5VMWQzVEhabWJHOVVUVzFKTUVsbGNrcDFkM0ZVY1RGTU1rRllRbEZGTlVkSmRVOU5VbU5CYmxSVFIzQlZRV2haTTBGNFRETmFNVTB5ZFdsdVVYVkRibFI0TkhGSFYySmFNR3RWV2xGMVpIRXlOVmR3Vkd0SmNVaFdiRzVVUVRWSU1FMWxSMUE1ZW05SlVqTkJNRWwyUkhwRlUwMXRUMVpGZVhGTVNIbEJhVzl0UkROSmJEbHJUVWRUYUUxNVNHbEtVbGRFUlRCQlJWb3pZalZNUjFacFJsRkJZbTR4U1VwR1NubExiMjFUZUhBd1lqUk1ZVnBxUjBabmJrZExUbVZ1UzNSbFFsRkZhWEpIUVZWQlZFMDJiMVZNYkVwNlUxRkJNMEZMY0RJNVdrRXljR3hOVkVWRVdXdzVVVVZJUVZKeE1IbHRTRzFUVDFnd1oxZEhTbkZxVFROaWEwWnRWbVZHZUdJeWNrcEZOa1V5WTJaSWVIQnFjSHBqV1V3d2NVRndVMEZIVFZSRlNHNXNPVkZJZUVGNGJqTjVNMW95WW10eFZHb3hSMHByU0VjeFNVVkNTR050VEROQk1sb3hkVE5CTTB4cGNHRlhRVzVSVXpKdmVYbGhXa2huZWtsNlNWQmFVbEpsU1V0eE0waElUVkJ5ZDA0d1FsSXdNa1JLTVdkd1NqVmhTWGR4ZDFnemVYaEdTbVpyUWtwSmFXOVVWbXB3ZDFOcldsTk5Na0pVT1dwRU0wVlljRXBFYkUxTGNEUktTVXd5YmxKNVZuQkxSV3RCVVVRelRVcHJORVI2TkRSQmVrMXFXbEZNTlVGSlFVRndkM1ZVY25keFZrSlJRV2xOZDAxc2NraDROSEZTYW0xTk0zbFBSbmgwYkVwS1YyWkJiVkl6VFVkYU1ra3hVMU5HTTBsaGJ6SlRXRVpVUlZWSGVsSnBjRlJFYWxrd1RUWkpTVWhzUVRKTU1YRlRSRE5HTWtoc1FsSm5XVnBUZEdsYU0zUXpjbE40Ylc5NmRVWkVTMWRWVERKSWFVRlJlR1ZGUjFJeFRWRkpNM0I0VTNodVZVOTJTa2RKZUZwaFUySk5SamxaYjBkSmFVbDZhbTFJTW1NMmJub3hUVUV3WXpOeFZIaHJjVEpyWVhBd01VbHdNREZVYjFWNVUwbEtZMlZKUjBWc1duaDFlRzVMWTJoYU1VRnJRVEI1ZG05SlkyUndTazExY1VwU2JWb3dZMWxDUzA4MWJsTk5UVWR0UVd4SFNVNXBXakJyTm5GVlFYaGFTVWxpVEV0VFkzRmhWMWhHTWxNMFIwbDVhVmd3UlcxdlVubFVXak41TWxwSVFVZEZiVkl3V2t0WGJuQXlSWHBFTW5GS1IxSnJZMDFJTVdKQlNIbERXVE5KUkVaNk1WbFliVWxhYmtwblprRXdaMHh2VVUxM1JXMUlORzV0VFdKSVVEbFhiekphTVVkTFRHcEtSMFZwUjBwVFFWaHRUV05NUzBGcVNYZFhUVTFJVjFsYWVtdFlSa28xV1c1NFRXNXVTMEZHV25sd01rSkhjVE5IZGpsWVRFbDVhVWt5VEcxTmVVMWxTREYxVjNCS2RXZENWSEYzUjNwclNGcFVWelJOVTNGV2NURjFiRXd3ZFUxSVMxSnFRVlZXYlVSaFFXTnlkamsxYjBkQlFXNVJWMjFhZWtsSFNXMUZkVVZTTVZGSmVYVTJSSHBuVlZodFRWbEhlRmQ1Y0cxV2EwaEtkVUpKTW5RemNEQXhNVm93Y1UxYVUwVjNRa3AxYlc5NFUyeFlNbU5NUjFKaU5FRXdXakZHTW5sNFNGTjFiRTFoWTBSSmQzRmliM3AxWWt3eWVXbEZSM2x1UWtoMWQwWlJkVTF5ZVVGa1NWTjVaMXBLY1RaQlUwOXNiek4xZFhGNk1VWkhWWFZUUVdGWFRWcFZVMlZ3ZDNGalNUTlhRMGN3TVdGYVIxTkRSMGQ1YTNGVU1VSnZTbFl3Y0VoRk5ISmhRVWR1TVZjMmNsSnJNa2hMVjFOSlNrVlZSakk1V201SlJXcEpVWEV4YmxOSk1YSlRUREpNTUVsSVdqRkJaa1F6VXpORllYQnFSa2R4YWt4R09WaEJVVTFMYmxJeFJFRjZhMVpGUjFOR1JtMUpWRWRJVTFKdlZVbExiakpxTVVwUlRWaHZWRUZEU0ZKSk0wUjNTVXRHWVU4emJtMTFNa3g1VG1wQlNFMDJjRWw1VVVGUmVXaHZNR0pzV2tkeFJGbHRTWGhNZUVsWVJYZHhOVXA1UVdKeFZWY3dXakpKUTFveWVYWkdNakZ0Y25sNU5FeEtaMUZHYlZKcVJFZEJWVmd4U1RCd01VNHpia1puWW5GS1pqVmFTVk5oV2tsTmVFMTRaM1phVVVGcVRYbzVNa0YyT1dKR00yTjFTVW94YW00d1JEQllNamxSY0cxTmFrWjZRVU5CZG1kRWJsRlRkbGt3VjNsRlIweHRURE41VDBkTGRETnhNVk5SY0RKRmFrY3pXbXRDVVVGWFRVcG5ZbTlMUld0SFVsZHNTWGc1VVVsUlZ6VnVSMFZ0UmtoTk0yOUlNRE53VkhsMVdsTjVUVzVMVWpKQk1ubDJSM3A1YVVKSFUySkZVbG94UVZGWFVGb3pSWFZIZVdKcGNrcFRhMGhJWjJ4RlIwd3lRWHA0YTBsNFlqSklTVWxOU0RKeGJWb3dVMUZ4U2pGdFJHMTFlbTVTV2pCR2VWTlhUWGg1VDNKNFNXRnVWRm94U1hkNWFYSktRVlJFTWsxUFRIbEZhazFWVjNwSVNVMXFibFYxVkVKU1JWZFlNbmxvU1ZSSmFIQjNSVlZCVVVGVGNrZHhiRTFSVDA5d01rRmtRVEpyYTFwSlJYZEVNMFJwUWxKQlkwRjZSV3RhZWpWbFdqQldhMFJHT1VoQlUwVjNRa3RYWjBodGVVTnlZVWxKU1RCU05IQklRVzFJU2pSbFJIZE5WVUZIZVd4RU1VMWFUVWhUZW01UU9VbE5WRGxoUmxKclNrbEhTVlZNTWpWM2JqRkpVMWt3VTJSSVNVRkJXVE41UTFodGVHVkhNVWxNUVZKNVMwcEllRFZCZUhGUFRVcEZVVWRLUVVKeVMwVm1ia3BOTUVKTFl6UnVkMWRoY25wNWQyOTVUVEZ3ZUZOSldsSlRZWEI1VjNwd1NERnRXakpUVDFwVWNESkhlbE0wYnpGV01rWnRRWFpZYlVGdWJrdFBSMEpLT1dKSFNuUXpibmRYVDBaS1ltVllNVkkwY0RGWGVFbDJaMU5HTTFZd1JHRlBkMEV4VDJOR2VuRm9iakZCVEV4c09VaEVNSGxvU0ROTllVMUhUMnB1UjFOV1NFaHdOWEozZUcxTmVFbFFUVWxQVVV4Mlp6WlliVTB5V1RGQmVrZEtSVlpKZUdkMlNIaHhZMFpzWjIxTlNVRlJTR0ZOVTBZd05YbEllbE5WUkRCQlJVUkxXak5hWVZwcVdsUmpUSEF4VDNoQlNFMTRRbFJhTUVZd1ZqUndWRVZxUjFBNVRFWXdZMWx1U21zelREQkphVnBSVDJaSWJVMWhUSGxFTUc1TFJXcHdWRVZVYmtnME1VWjVUbXRGZWpCbFIwcHhlVzlLTlhaR2VuVldjRzFPTUc1U2VYWkpVMGxQVEVsRmJrRXhUelJFZUd0SlJURldhVWhoVjJ0d2JVMHpXbFZGV2tWUmNVdEtlR015UmtoV1pVRjZRVTlCVVZONmNFZ3habTh5YW14SFVEbGtTVEZpTW01VGRWZFliWFY2UlRGRldGa3pZM3BHUzNGMVdUTlBXRTB6ZFZwTWVHZEpRVkJuVWtsTFFWZHZTbmxsUmxSclFYSkxjVE51TW5WTlIxTmpNWEpHT0RCSE1EQnJXVEJYYTFveWNHMXdVVWxRV25sQlRIQlZTR1ZDUzNGaGIxUlRhVUpMVnpaTk1GWnNRVXQ1TTBsSWEyWkdTWGxyYjNnNWJVcEhUbXhNZGpsU2NGUklNVUpIU1dOR01VRjVjREJUTWtWNFUxVndNblZtUm5sU01uQkxlV2RHUjAxVGJ6QjVlRUZVTVVaS1ZWcGxSMHBuYVZwTFVtVkJNRk5uVEVocmQzSklRVkpCTUdjMVJVcGpSRVpUVFd4dk1tTmlSakZCTkVGM2VHeEpkM1ZXYjBZNVVVZFZUMU5FZVhsNVNVcDVXVWd5YTNWSFNFRnJjRWhFWlhKaFkwSmFZVkpxYm0xSlUwMUthakJ4U25ocmNrcEVha0Y0UVRORU0wRXlSa2hKUzBFeVJUSlpNbE5FU1hwd01VUjNUek5IVkRCbFNFdFhSVVpzT1dKYWQzVXpXVzFUWWtaSlFYVkZVWEZzV2pCNVMwUXlPVzFLVW10NVJYcEVNVVZVZERKdlNubHNSMjFUTTNGS1FUTmFlalF3Um5wVGQwaFVlREZ3VkVWYVdubzVTMEV6VFV0R00xTjRjVXBGWlVkSmVWaEVkMW94Y0VwalduSklSVE5LUjAxamNFZEpWRVZIVnpGQk0zbGFiMVJtYVZwSlkwOXVlRVZVV2tnNVdVeDVUREZ2ZVVocWJucDVWa3BJTlU5d1VubFpjbmRQU1hKUmNHVkdZVWw2UWtkNGJXOUplRE5LZDAxcVRVdFNhMEpUUVdodVZIbFJRVWRXYlVGaGVVbGFNMDQxV1RGSllscDVVMnRLWVVGRlFraGpNa3BVY0ROTmVrRjVRWGRYWTBoVmVXcEVlSEEwV2xSQlRXOUhWM2RNWVVsdFNFdHhSMjh5U0RWTWVqZ3lRVkZTYWtsUmRXaEdlRWw2UmpGV2JVVjZlRFJFZVZOcVRWRlBSMjl0Y1cxd1MwaHBTVzF4UjAxVU9EQkdVVmRpUkcxWGJFeGhZMGhCTVUxYVIwbFhiVVl3TlZOTlZXTkJXREoxVVVFeWEyRkJNWFZCU0ZWSmJXOUhUbXB2ZW5VMVJYaFhWMDFIUVZOYVUwVkpXakIxWmxreFQybGFSMFZpYm5wRlJVY3pjVEpZTW5sRmJtRlRkbkZWUVdKSWJWY3pSRXBhTWxvd1JETk5lRUYyU0hkMGJWb3dNVE5GZWpScGNGUkpXVUV5YTNaRlNYbG5iMGR4ZUVwSVltVndlakV6UVhkMGJXNTRjWFp3VVhscVREQjVWa2hoY1ZoeVIwMUJjVEJUYkc1SlQxZEpiVWxwV2pGNWVFRklaakp3TWpWV1JuaGlNa2RWY1Zwd01IQnRSa2h3TVc5VlJEUkZTbXRDUmtwSk1FZHRTVk5CTVU5b1FXMUZhVnBTVTAxTWJWZHRSREEwTWxwSVdqRnhNbXRMU1VwTWJYQlVURFZ4ZDBsbFJVZ3hWazE2WTJwdmJWZHJRVE5UWTBFemVUTkdNRUYyYmpCd2EwRjRWak53TVUxTlNraGFNRWhUVjJkSWVqUTBSRXBOZVVwM2VERnZNMDlwUlVoTmVVZFVTVk51YlVWUWNUSjVXVUZSUlZaR01uUXpjVzFGYkV4S1RVMUZiWFZLUVVkMWQzSktOWFZ1TWpGa1NraHhVRVV6V21WSWQwOVFia3RKV0VwNlNXTnVTRWxpYjNoNVdreDZPREJKZDBsTlFWTndiVXBUVjJWeFIzbFJTbFIxUkc5S2VXVnllRk5XUWxWQlJVaEtUVzF2TUhsNFRFdFNhVVJKVTIxR1ZVMWlSRE5OWlV3elRXTkdTa0ZqU0d3NWVVeElPV05GVVhoclJIaFhZVWx0VTNoQmVsZGFXakI0Tlc5S09XSk5WVWh0VFRCQlpVUXlUVEpCYlVGR1FXMVRZVTE2TUcxSllWTlRRVVpuVEhCaFJWRk1NREJyUWtabU5IQkhUMWRaYlVGNlRUSmpZMWd5V2pCTlIzVkZRa2cxWTNCNFZqTlpNMWQ1U1ROV05VMXRRV3RCVW1NMWIyMU5SVUpTV2pKSlVHZGhia3RJYVVZd2NVaEVZWEV6VFV0UFRWZ3hlWHB1VURnelNuaFdNSEJLVFVsWk1HTm1Xak5OU0VKSFFVRkNWRGxqUkV0WE1FbEtlWGRGVVhsc1dXeG5kVUY1WTFCSU1HZGxjREJUWlV4S1JYcHZTSFExV2xGQldHOVJjVEJFTW1OQldUSlRZMGg0UVhkd2VqRlJjSFp3UVZCNk9XeE1Ta0ZtVFVaT09WWlFjREZDVVV3eVFWUldiRXgzV21wQmJVZ3dRVzFNTVVGdGRERkNVVVY1UVVkNGJWcHRXak5CUjA1c1RIZEViRnB0VW14TWQwbDFXbTFJTTB4SFdqTkJVVkl3V25kWGVrRjZVakZCVVZvMVFUSlNNVUpSVEcxQlVYUnRXa2RJYTBGSFRteE1kMDExUVVkRWJVSkhUWGhCZDFKdFFXMUlNRUZIY0RKQmQxZDZRVzFXTWtGSGNEUkJkMHh0V25kRWEwRXlVbXhNZDFvd1FWUlNiVnBSUkRGYWVsWnRRVWRFTVVGUmRERkNVVm8wV25wTU1rSkhjREJCYlhBeVRFZGFhMEZIV20xYWJYQTBRVlJJTUZwM1JEUmFiWGd5V2tkTmRVRkhUak5CUjFvMVdtMVdNa3gzUkcxQmQwd3lUSGRFTVVFeVVqSk5VWEJ0V20xT2JWcEhSRFJCUjA0eVduZGFha0V5VWpKQlIxcHFXbTFPTVVKUldtMWFlbFp0UVhkWGRscDZURzFhYlVRd1dtMTRNRTEzVjNaQmQwaHRXbTFGZUVGSFJESk1kMFEwUVZSU01FMUhjREZCUjA0d1drZHdNRUZ0VGpGQmQwVjJRVkZhTUVKSFYzWkJlbG95V25kRU1GcHRkTU1iQUFCTk1VMUVXVEJPUjFFelRrUlZORTU2VVhsWmFrMHhUbFJOTVUxVVl6Rk5lazB4VG5wTmVFNUhSVEJaVkZKcFRtcFZNMDU2VFhkT1ZGa3pUWHBWTUU1VVdURk9SR042VGxSSmVrMTZVVE5PUkZreVQwUlpNVTVxWnpOT2FrMTZUbnBuTTAxVVkzcE9WRTB4VG1wamVrNUhXWHBOUkdNeFRYcEplVnBxVVRGT2VrRjZUMFJhYkUxNlJUTk5WR042VG1wbk1GcFVWWGxOZWtVelQxUk5lRTVVVlRGTmFsSnRUbTFGTUU5VVRYbE9lbFV6VG1wTmVVNXFWVE5OZWxwb1RsUlpNbGxVVFRKT1IxVXhXVlJWTVU1Nlp6RlpWRmw0VFhwbk1rOUVXVFZOZWxFd1QxUlJlRTVxVlROTmFscHNUbXBKTUU1NlZUSk9lbGt4VFVSUk0wNXRUVE5OYW1ONFRrZFZNRTlFVFROT2FtY3pUbFJqTTA1VVVUSk9hbEV4VFhwbmVrNUVXWGhPZWswd1RrUmthRTE2U1RKTmVsRTFUbTFKTTA5RVVUUk9SRlV5V1dwVk5FNXFSVEZaVkdNMVRYcEZNRmxVWXpOT1ZFVXlXVlJhYTAxNll6TlBSRmt4VGtSck1VMVVWVEJPUkZrd1dsUktiVTV0VlRKT2FscHJUakpGTUUxcVdtaE9ha2t6VFdwVk1rNVVaM2xaYWxWNVRucE5NMDU2VlhsT2Ftc3lUV3BaTTAxNlNUTk9SR042VGtSTk1rMVVUWHBPZWtVd1RtcFpORTVYUlRKTmFsa3pUbTFaTVU1RVRUQk5la2t3VDFSTk1VNXFZM3BPYWsweFRucEplazU2VW1sT2JWRXpUbFJaZVU1WFJUQmFhazAwVGxSUk1rNUVVVEZOZWsxNlRtcGpOVTVxVFhsWmFsVjVUa2ROTVU1RVdteE9lbU13VFdwYWJFNXRTVEpaYWtwcFRsUm5NazVxV1hsT1ZGa3lUbFJSTVUxNlp6Qk9SRmt4VG0xUk0wNTZVbXhPVkZVeVdsUlJOVTVxVVRKYWFsSm9UbXBWZWsxcVZYZE9la2t5VDFSUmVrNUVSVEZQUkZwcVRucG5NVTFxVlRWT2FrMHlXbXBWTTAxNlVUQmFWRTB5VG1wSk1sbHFXWGhPVkVVeVdYcFNhMDE2VVRKWlZFMTRUa1JSTVU1Nll6Uk9iVkV3VGxSU2FrNXRSWHBQVkZGNFRYcEplazFVWXpST1IxRXlUMVJOZUU1RVRYcE5WR013VG5wUk1scHFVVFJPVjBVeFRucGFhRTVIVVROTlJFMHhUbnBqTWxscVRUSk5la1V5VFdwak0wNUhXVEpOYWxGNFRucFJNbHBFVVRCT2VrVXdUbnBqZUUxNlRUQlpWR1JvVGtkWk1VNUVXWHBOZWtVelRtcGpOVTVIVlRGTlJGVTFUbXBOTTA1RVZYbE9hbXN6VG1wUk1VNTZaekZOVkZKc1RucFZNVTE2WXpOT1JHTXlUVlJhYVU1SFRURk5WRnBvVGtkUk1rMVVWVE5PZWtreFRucFNiVTVFWnpCUFZGVXhUWHBSTTA1VVVtaE9SRkV5VG1wUmVVNUhWVEZQUkdONFRucFJNMDFxV21wT1JGRXlUMVJSTWs1cVVUQk9SRlUwVFhwak0wMXFUWGhOZW1zd1RYcE5lazV0VlRKT2FscHJUbnBCTUZsNldYcE9Na1V6VDFSUmVrNUVWVEJOZWxrd1RrUm5NRmw2VVRWT1ZFMHpUVVJOTTA1VWF6Qk9hbFY0VGxSck0wMUVVVEZPVkUweVRucFpOVTVIV1hwTlJGWm9UbXBWTWxsNlRYbE5lbEV5VGtSVmVVNXFhekJQUkUxNlRsUmpNRmw2WXpGT2Ftc3dXV3BhYVU1VVVUTk5lbGt6VG1wbk0wMUVWWGhOZWxFd1dWUlZkMDVVV1RCT2FsRXpUbFJCTWsxVVVURk9iVkV3VGtSWmVrNXRUVE5OVkZrMVRrZEZNVTlVWXpCT1IwMHlUV3BaZVUxNlFUSk9SRmt4VG5wTk1GcHFUVFZPYW1jd1RXcGpkMDVFVFRGTlJGWm9UbXBKZVZwcVdtcE9la1Y1V21wWmVVNUVhekpaZW1OM1RrZEpNRTVxVFhsT1ZFRXdUMVJqTVU0eVJUSk9hazE1VG1wUk0wMXFVbXhOZWtrd1QwUmFiVTVxVFhwTmFsVjRUbnBKTWxsNlNtbE9WRWt5VG1wamVFNXFSVEpOVkZab1RtcEplazlFVVROT2VtTXhUV3BTYUUxNmF6Rk9SRmw2VFhwak1scFVUWGRPYWtVd1RWUlplazV0U1hwTlZGRjVUa2RKTUZsNlRYZE9ha1V3VFZSUk1rNUVaekJPVkZwcFRrUkZNbHBVU21sT1IxVjZUbFJqZUU1NmF6QlBWRkpxVG5wUk1rMVVVVEZPUkdzd1RucFpNMDU2UVRCT1JGcHRUa2RaZWsxVVl6Sk9hbGt3VG5wTk5VMTZSVE5OVkUxNFRrZFZNRTE2VlhkT1ZFRXhUbFJSTkU0eVJUQlphbGt4VFhwSk1FNUVVbXBPYWxFeVdYcGpkMDU2VVRCUFZGSnNUbnBqTUU1VVdYaE9SRlV5VFZSYWFFNTZSVEJQVkZVeFRtMU5lazFVVVRST2Fra3dUbXBLYVU1dFZURk5lbU41VGxSUk1rNUVZekJOYlZsNlRrUlNiVTVFWXpCYWFsa3pUbXByTTA1RVVUSk5iVWt5V2xSTmVrNUhTVEJQVkZVelRtcE5lazU2VW10TmVrMHhUa1JOTkU1RVJYcE5WRnBxVG5wbmVrNVVXWGhOZWtFeVdtcFZNazU2VVhwT2FsRXpUbnBWTUZsVVVtcE9la2t5VFZSa2FFNVVSWHBOUkZKcFRucGpNMDlFWXpCT1YwVXlXV3BSTWs1RWF6Rk5hbVJvVG1wUmVrNVVZM3BOZWtsNlRVUlZkMDU2WnpCTmFsazFUbTFGTVU1NlZUVk9ha1V3VFZSamQwNXRTVEpPZWsweFRucEZNbHBFVlRKT1ZHY3pUV3BSTWs1VVdUSmFSRnBxVFhwQk1scFVVWHBPUkZGNlQwUmFhazVFV1RGTlJFMDBUa2RWTUZwVVZURk9lbFV3VGtSYWFVNUhWVEJQVkZFeFRYcE5NVTFxWXpST2JWVXlUV3BSTkU1dFZUTk5WRlV5VG1wcmVrMTZUWGxPTWtVelRucGFhRTE2VFRGT1JGRjZUa2RSTUU5VVVURk5la1V6VDFSYWEwNVVZM3BPVkZsNFRrUlZNazlVVVROT2Ftc3hUVVJaTkU1RVdUTlpWRlUxVGtkSk1scEVXVEpPZWtreFRsUmpNVTF0V1RCUFJGcHFUbnBaZWs1VVZUSk9WRVV6VG5wak1VNUVWVEphYWxwc1RsUkZNMDFxVVRKT1JHZDZUa1JOTkU1NlVURk9WRlV4VGtkRk1rMXFWVEpPZWsweVRWUmFhMDU2VVRKT1JGVjRUa1JyTTA1cVZURk9hazB4VGtSWmVFNUhVVE5QVkZFeFRucGpNVTVFV1RGT1ZGRjZUbXBOZUU0eVJYcE5SRmsxVG5wTk1rOUVWWGxOZWtFd1QxUlZNMDVxWnpCYVJHTTBUbTFaTWs1cVl6Vk5lbU15VDBSVk1FMTZRVEJQVkUweVRtMVplazU2V1hsT2Vra3dUVlJLYlU1dFNUQk9lbEUwVFhwUk1VMTZTbWxPUkZWNVdXcE5kMDE2WTNwT1JHTXpUbFJKTTAxRVZYbE9hbGt3VFdwVk5FMTZXVE5OUkVwdFRYcEpNMDFxVlROT1IxRXhUVlJLYlU1cVJUSk9SRnBvVG5wVmVrMVVZelJPUkZFd1dsUlJOVTE2V1RCT2VrMTZUa2ROTTAxcVVtaE9iVlV6V1ZSYWFrNTZWVEZOVkdSb1RXMUpNazlVU20xT2Fra3dUbnBSTWs1dFVYcE9lbEpvVG0xTk1GcHFUVEJOZWswd1dtcFJORTVFWnpGTmFtTjVUbXBaTUZscVRURk9lbEV4VDFSTk1rNVVUWHBQVkUxM1RrUlZlazVFVVRWTmVtc3hXVlJWTkU1dFVUQk5hbEUwVG0xVk1rOVVVVFJPUkVVeVRrUmpORTVVYXpGT2VsVjVUa2ROTWxwRVRUSk5lazE2VGxSUmVrMTZSVE5PYWxsNVRtcG5NRnBxV21sT1IxRXdUMFJWTTAxNlozcE5SRkV5VGtkRk0xbFVXVEJOZWxrd1dsUlplazVxUlRGT1ZHTjRUbGRGZWs5VVdYaE9WRVV5VDFSak1rNUhWVEJaZWxVd1RtcFZNRTlFVVhoTmVrMHlXWHBSTVU1SFNUQlplbHBxVGxSTk1FMVVZM2xOZWtFeVRYcFplVTVVUlRGT2FsVXpUVzFaTUU1VVdYaE9SRVV6VFZSVk5FNXFVVEZOZWxFMFRrZFJNazFVVFhwT1ZFMHdUVlJOZDA1VVRYcE5lazB5VFhwQk1VMUVWVFZOZWxFeVRWUlZNVTV0VVRCT2FsbDZUbnBGTVUxcVdUVk9SMDB3VG5wUk1rMXRTVE5OUkZVMFRYcEJNRmxxWkdoT2FtY3dUbXBWZWsxNlFYbGFhbU15VGxSSk1VOVVVWGhPZWxVeFRtcE5lVTVIVFRCT1JGazFUbXBGTTA1NldtbE5iVmt5VFZSUk1FNVVUVEJQUkUweVRYcHJNRnBFVFRWT1ZHTXlUa1JqTWs1RVZUQmFWRlV6VG1wVk1sbFVWVE5PZWxreFQxUk5NazR5UlRCUFJGcHJUa1JaZWs5VVVUQk9WR013VG1wak5VNVVTVEJPVkdNeFRsUkJNbGxxV1RST1JGRXlUMVJOZUU1SFRUQk5lazAwVGxSQk1scHFXVEpPVkVVd1QxUmpNVTVVWnpCTmFsRXhUbFJOTUU1VVRUVk5lbXN5VG5wUk1VMTZhekZPUkZVeVRrUk5NMDVVVFhkT2VsRXdUVlJWTWsxdFdURlpWRnBzVG5wbk0wNTZUVFZPVkdjeFRWUmFiRTVVWTNwT1ZFMHhUbXBOZWsxcVZYaE9SRWt6VGtSYWJFNUhUVEZPVkZwdFRYcEJNRnBFV1hwTmVrVXhUbnBSZVU1cVZUQk9WRkpzVGtSRk1GbDZUVFZPUkVVd1RucE5NazU2VVRKT2FrcHRUbnBKTWs1VVVURk5iVmt5V21wTmVVMXRXWHBOUkZreFRXMUpNVTE2VVRWT1ZGVXpUV3BOTWs1RVdUQk5WRlY0VFhwbk1rNVVXVEJPYW1jd1QwUlJNMDVFU1hwTlJGSnNUWHByZWsxNlVtbE5lbXN6VFhwWk5VNUhWVEJOVkdONVRYcFZNRTVVVFROT2JWa3lXVlJqTkU1SFdYcE5SRlY1VG0xTk0wMVVWVEpPVkVGNlRVUlpORTE2VVRGUFZFMHpUbnBqTWxsNldUSk9SR2N6VG1wTk5FNXFUVEJOVkZVelRrUkpNazE2Vm1oT2VrRjZUbnBWZVU1cVRURk5hbFY2VG1wTk1rNTZZek5OZW1ONlRYcFJNMDF0U1RCUFZGcG9UbXBSTUU1VVVUUk5iVmt4VFhwYWFFNXRWVE5OVkdNelRsUkJNazlFV210T2FrVXlXbXBaTlUxNlkzcE9SRkUwVGtkVk1FMTZUVFJPUjAweFRWUktiVTVVUlRKWmFsRXpUa1JWZWsxRVVUQk9iVkY2VG1wWmVrNXFhekZOYWxwcFRsUlJNMDlVV1ROT1ZFMHlUWHBhYTA1SFRUQlplbHBzVG1wWk0xbFVZekpPYWtreVdsUmFiVTVVVlRKWlZGVjZUa2RSTVZsVVl6Vk9WR3N4VGxSYWFFNVVRVEpPUkUxNVRtMUpNRTlVWXpOTmVrMHpUa1JWTUU1NldUQk9lbGswVGxSck1FNUVaR2hPYW1Nd1dXcFNhRTVVWnpGT1ZFcHBUbFJGTTA1RVl6Vk5iVWt6VFhwTk1VNXFXVEpPVkZrelRsUlJNazlFWXpST2FtY3dUbnBWTTA1cVJURk5hbFY1VGtSRk1VNUVZekpPVjBVd1RrUmFiRTE2YXpCWmFsVjRUa2RaTVU1Nll6Uk5lbGw1V21wU2JFNVVhekZOUkZFMVRsUmpNbHBVVVRGT1ZFVXhUVlJOZDA1SFZYcE9hbEY1VGtSVk1rNUVUVEpPYlVsNVdtcGplRTVVVlRGTmVtTjZUa2RWTUZsVVNtbE9lbFV4VFdwWk5VMXRTVEJhUkZwcFRucG5lazFFVlhsT1JGRXpUVlJLYlU1VVNYcE5lbFY2VFhwbk1rNVVXbXBOZWxFelRtcFNhVTVxVVRCTmFrMTZUbFJuTWsxNldtdE9SRlV4VDFSYWJFNUhWVEJPUkZVd1RrUkZNVTFFVVhoT2JWVjZUbFJOTWs1cVNUQk9WRmt6VG0xRk0wMVVXWGhPVkZVeVdtcE5NRTVxUlRGUFZGRjZUa2RSTUZwRVRURk9SR015VDBSamVFNTZZekJaVkZwcFRtcHJNazFVVFRST1ZFa3dUa1JLYVU1NlNUSk9WRlUwVGtSVmVrOVVUVEpPVkUwd1RucGplVTVFUlRKWmVscHFUbXBaTTA1VVdYcE9lbGt4VGxSTk5FNXFWVEJaVkZab1RrUkpNMDFxVW14TmVra3lXa1JaTlU1dFdUQlpWRTB4VG5wQk1rOVVVVEJPYWxVd1dtcFZNMDVxWnpOTmFsWm9UbnBCTWxsNlRUQk9WRWt3V21wTk5VNTZWWGxhYWxVd1RucFZNVmxVVVROT1JHTXlUa1JSTUU1VVp6SlphbHBwVG1wbk0wOVVXbXhOZW1jelRucGFhVTE2YXpGT1JGRTBUbnBuTUUxNldYbE9lbWN6VDBSWk5FNVVSVEZQUkdSb1RsUm5lazFFVW1sT2VtY3dXWHBhYTA1RVp6Qk5lbEY2VGtSUk1rNTZXbXhPYWxFeVRYcFJNMDVVVFRCUFJFcHBUbFJKTWs1Nll6Uk5lbXN5VDBSak1rNXFSVEJPZWxsNFRtcE5lazVFVlhwT2Ftc3lUMFJWZWs1dFJYcE5WR1JvVGxSRk1GbDZXbWxPYWxrelRWUlpORTU2YXpCYVJGSm9UbXBuTUU5VVZUVk5lbEV3V1dwYWFVNUVVWHBPZWsxNFRrUm5NazFxVVhsT2JVa3hUa1JOZWs1cVJURlpWRlUwVGtSak1WbFVVVFZPUkZreFRtcFJlazVVWTNwT1ZHTjNUbnBaZWsxVVdUTk9SR014VFdwYWJVNXFXWHBOVkdOM1RrUmpNbGxxVlROTmVrRXpUVVJhYkU1dFJURk5SRlV4VGxSSk1VMUVUVEpPUkVVd1RYcFJNazVFVVhwT1ZGazBUa1JWTWs1RVdUUk9lbU15VGtSUmVrMTZSWHBOUkZsNlRYcHJNazlVWTNkT1ZGVXhUWHBrYUU1NlJUQmFha3B0VGtkUk1rOVVTbTFPVkdzeVQwUlJNMDVxYXpGT2FrMDFUbXByTTA1cVZUUk5la0V3VDBSUk1rNVVTWHBOYW1NMFRXMVplazlVVFhsT1YwVjZUVlJOZDAxNldYbFphbGt6VFhwUk1scHFXbWxPYWsweVQwUlZNMDVFWTNwUFZGcHRUbFJCZWsxRVRUTk5la0Y2VG1wUmVFNVVaek5aVkdOM1RYcFplazE2VFRWT1ZFMHhUMVJOTlU1VVl6QmFSRmt3VFhwWk1FMXFTbTFPYlZrd1dXcFZlRTVIUlROUFZGRTBUa1JqTWs5VVpHaE9iVlV4VG1wVk1FNVVZekJaYWxWNlRrUlplVmxxWXpOT2JVVXhUWHBOTUUxNll6Sk9hbU42VG5wUk1VOVVXbWhPYlVrelRrUlpNMDV0VlRKYVJFcHBUbnBuTWsxNlRUSk5lbFY1V21wak5VNVVSVEJOYW1NMFRrUm5NVTlFVlRWT1ZFRjZUVlJqZWsxNlNUSlphbEV4VG0xRk0wNVVXWHBPVkVsNlRrUmpNRTVVWXpGTlZHTXdUbXBGZWsxNlVUUk9WMFV6VG1wTk1rNUVWVEJhVkZGNVRrUm5NRTlFWTNwTmVrRXdXVlJSTUU1VVVURk9SR1JvVG1wWk1scFVVVEZPVkdzeVdtcGFhMDVIUlROTmVsVTFUbnBaTTFsVVVteE9SRTB5VGtSTk1rNUVVVEpaVkZKdFRrUm5lazVxVlhkTmVtTXdUVlJqTlU1VVVUSk9hbU0wVGtkVk0wMVVUWGhPYWtVd1dsUk5OVTVFWXpKWmFtTjNUbFJqTTA1RVVtMU5iVWt4VFdwYWJVNTZhM3BPZWsxM1RsUkplazlVVlRWT2Vra3pUa1JSZUU1VVp6Qk9lbFY0VG5wamVrMXFWVEpOZWtFeVRXcEthVTE2UVhwTmVtTTBUWHBKTVZsVVZYZE9lbWQ2VFdwU2JVNTZWVEJOYWxGNVRrZEpNVTFFVW14T1IwMHhUVVJWTTA1RVJYcFBWRkpyVFhwQk1FMXFUVEZPUkdjelQwUlJlazVxUlRCUFZGcHJUa1JuTWxsNlVUUk5lbGw2VFZSUk1rNTZRVE5OVkZFeVRtcG5NRTVFVFRWTmVsa3dXbXBSTTAxNlNUSmFhbU40VGtkUk1scHFaR2hOYlVreFRucFJORTU2V1RKWmVtTTFUa2RaTUUxcVVtcE9SMGt6VGxSamQwNUhUVE5QUkZFeFRYcE5NRmxVV21oT1ZHY3lUWHBTYWs1VVNUQlBSR042VG1wRk1FOUVWWGxPUjFFelRtcFNiRTE2UVRKUFZGSnNUakpGTTA1RVVYcE9SMVV3VFhwWk1VNUVSVEZQUkdNd1RrZFZNRTVFVlROT2JWRXdUbFJWTVU1VVZUQmFWRlYzVGxSVmVrOUVXbWhPVkZFeFQxUlZlVTVVVVRKT1JGVTBUWHBKTVUxcVdUSk5lbEY1V21wamVrNUVhekZPVkUwMVRucG5NazVxVVRWT1IxRXhUVlJqTVU1RWF6RlpWRTB5VG1wTmVWbHFXWGxPZWtrelRWUlplVTE2VVRKTlZGcHJUbFJSZWs5VVZYcE9lbWN6VFVSWk1FMXRTVEpPZW1NeFRucEZlazVFV21wT2VtY3lXVlJOZUU1SFNUQk5hazAxVG5wRk1FNXFXbWhOZWtVd1dXcGplRTV0VlhwTmVscHRUbnBGTVUxRVZYZE9WR042VDFSS2FVNXFZekJaYWswelRtcFJlazU2VlhwTmVtc3lUVlJTYVU1NlZURk9SRTE0VGtSbk0wMXFXWGhPZWtsNlQxUmFhazVxV1RGWlZGRXhUbXBGZWsxcVdtaE5lbU42VFVSWk1VNXFUVEpPVkdOM1RrZE5NMDVVVlRGT1JHc3dUWHBWTkU1SFZURk5lbU4zVGxSbk1VMUVXbTFPUkZrd1dWUk5ORTVFYTNwT1JFcHBUbnBOZWs5RVdteE5lazE1V1dwVmQwMTZVVEpOVkZWNVRsUlJNVTFFVVhwT1Iwa3lXV3BqZDAxdFNUQmFSRkY0VFhwVk1rMTZWVEJPVkVreFRtcGplazVxYXpOT2FsVTFUa2RWTTFsVVdteE9SMFY1V1dwU2EwNXRUVEphVkdNMFRrZFJNbHBFVm1oT1ZGRjZUVlJSTUU1NlZURk9SRkV5VG5wWmVrNXFXbWhPYW1jelRtcFplazE2WnpGTmFtTXhUbnByTWxscVVtMU9iVTB6VFVSWk1VNTZUVE5OUkZwb1RtcHJNVTVFWTNoTmJWa3dXa1JSTTA1Nlp6Tk5WRkUwVGxSTk1VOVVUVFJPZWtrd1RucFJNMDV0VVhwT2Fsa3dUWHBSTTAxVVRYZE9hbEY2VFdwVk5VNVVSWGxaYWxsNFRucEplazFVVlRCT1JHY3hUbXBqTkUxNlFUSk9hbHByVGxSWmVrOUVWVEJPUkZFeVRYcGFhMDVVVVRCT1JFMDFUbFJyTWs1RVRURk9lbGt5VGxSUk5VNUVZek5OVkZFeVRsUlplazVxWkdoT2Vsa3pUbXBhYWs1SFJUTk5ha3BwVGxSck0wMTZZM2RPVkVFd1RucGplRTVVYXpOT2FrMDBUbTFSTWxwVVZURk9la1V6VDFSU2FFMTZRVE5OVkdONlRtcFZNVTU2VlRCT1JFVjZUV3BhYUU1SFdYcE9hazB5VG5wVk1rNXFTbTFPVkUwd1QxUlNhRTE2UVRKT1ZGa3pUbTFSTUUxVVRUUk9hazB5VG1wVk1rMTZhekJOVkZFMFRrUlpNRTVFV1RCTmVsVXdUbFJWZDA1SFVUQmFSRTB4VGxSSk1WbFVWbWhPUjFreVdrUk5ORTV0V1ROT1ZFMDBUbFJCTWs1VVdtcE9WRkV5V1hwUk0wMTZXVEJaVkZVMFRqSkZNRnBxVW0xT1JGRXpXVlJqTWsxNmEzcE9hazB6VGtSVk1VNTZWWGRPZWxrd1dWUlpNMDVxUlROTmVtTjRUbGRGTUZwcVl6Qk9SMVV6VDBSVk1FNTZaekpaYWxFeVRtcFJlazVxVFRST1JHdDVXbXBTYkU1RWF6Rk5lbU14VGxSSk0wOVVXbWhOZWtFeFRYcFJlazVxVVhwUFZHTjNUa1JyTVUxcVRUVk9ha1Y2VFVSWk5FMTZaM3BOVkZGNlRrZFZNVTE2VFhwT1JGbDVXbXBSTkU1NlZURlBSRkpwVGtSTmVrOUVXVEpPVkZrd1QxUlJlVTVVVlRKT2FscG9UWHByTUZwRVdtaE9iVmt3V2tSUk5VMTZUVEpPZWxsNlRrUkZNVTVFVFhsT1ZHc3lXV3BqTkUxNlp6Tk5SRTE0VGtkUk1rNUVXVFJPTWtVeVRucFJNazVxVlROTlZHTXdUbnBCTUU1cVVUVk9WR2Q2VFVSTk1rNVVTVEJPZWxab1RtMVZNbGxVVlhsT2VsRXlUa1JWTkUxNlRUQk9hbFYzVGtkSk1rMVVXVFJPVkdjd1QxUlNiVTV0UlROTlZGVjVUbFJCTUU1VVpHaE9lbGt6VDBSUk0wNTZWVEZQUkZFd1RYcEJNVTFVV20xTmVtY3lUMVJqZWs1dFRYcE9lbGsxVFhwcmVrNVVZM3BPYWxVelRXcFpNVTVFVlRCUFZGa3pUbXBKZWs1NldteE9WRlV3VFhwTk1FMTZaekJPVkUwelRrZE5lazFFWXpKT2JVa3lUbXBOZUU1VVl6Qk9SRXB0VG5wQk1rNXFVbWxPUkZsNlRVUlZkMDVxUlRKWmVsRTBUbXBOTUZsVVVUSk9iVlV5V2tSUk5VMXRXWHBOUkZrMVRrUlZlazE2VVhsTmJVa3dXa1JqZUUxNldUSlplbEY2VGtkWk1sbFVXVEZPZWtrelQwUlZlazV0UlhwTlJGbDVUbFJSTUU1RVpHaE9SMUV3V2xSak5VNXFSVE5PVkdOM1RrZE5NMDVVVVRCT1ZHc3dUbFJqTVU1Nlp6Sk9SRTB5VGxkRk1FNTZVbXhPVkdjeFRVUmpNRTE2UlRCYVZHTXdUbFJaTVUxRVdUUk9hbWQ2VGtSU2JFNXFUWHBPZWswelRYcHJNbGxVVlhkT1ZGVXdXbFJOTVU1VVdUSlBWRkY1VGtSbk1rNTZUWGhOZW1zd1QwUmthRTV0VlRKUFZGVXpUWHBCZWsxNlRYaE9SMUY2VFdwU2EwNXRTWHBPUkZrelRsUkJNMDFxV1RGTmVtc3pUVlJTYkUxNmF6Sk9lazAxVFhwTk1FNTZZM3BPYlZWNlRsUk5lRTU2V1RCYVJGcHBUbFJuZWsxNlpHaE5lazE2VFhwU2EwNXRVVE5PYWswMVRrUkZNazlVVW1wTmVrVXlUbnBWZDA1NlFUQmFSR040VG1wUmVrNTZVWHBPUjFrelRrUmFhMDVVUVRGT2VtTjNUWHBWZWsxRVNtMU9hazB4VGxSYWJFNVVUVEJhVkUxNFRsUm5NVTU2VW1wT2VrRXdUbFJXYUUxNlJUTk5SRlV5VGtkWk1rOUVUVE5OZWtVd1RYcFNiVTVxUlhsWmFsSnRUbXBSTWxwcVdtdE9SRWw2VG1wVk1rNVVhekpaZWsxNlRrZFZlazFFVlhwT2JVVXdUbnBhYTA1NmF6SmFWRXBwVGxSUk1VNTZVbXRPVkZVelQwUkthVTV0VVRKT1ZGVXhUVzFKTWs1NlZYbE5lazB3VGxSTk0wNUVaekphUkdNMVRtMUpNVTFFVlROT2FsRXdXa1JhYlU1VWF6TlpWRlV3VG1wUk1FOUVZelJPUjBWNlRYcFJNMDVxWXpGT2VscG9UVzFaTUZscVdtbE5iVmt4VDBSVk1rNUhWVE5QUkdNd1RrUlZNRTlFV1hoT1Ixa3pUa1JaTUU1SFZURk9WRlYzVFhwQmVrMUVZelJPYlVVeVQxUlNiRTV0VFROT1JHTjRUWHBaTUZsNlkzZE5lazB3VG5wUk0wNHlSVEpaVkZsNFRrZFJNazFVWTNkT2VrRjZUbFJSTWs1dFZUSk9hbEpxVFhwWk1rNUVUVEJPVkUweVdWUmpNVTVVUVROTlJHTjVUbnBKTUZsVVRUQk9lbXN5VDBSUk5VMTZTVEpaYWtwdFRucHJlazFFVFROTmVtTXdXbFJTYlU1NlFUTlBSRnBzVFhwWk1FMXFVVEpPUkZreFRVUlpNazU2U1RCUFZHTXlUa1JWZVZwcVRURk9SRmw2VFdwamVFNTZSVEJhUkVwdFRsUkpNVTl6d3hzQUFFZEZkbHA2VmpOQmQweHJRWHBTTUV4M1JYbGFiVm95VEhkWGVscHRSREpCVVhBMFFXMU1NRUpSU0RGQmVrUXhXbEZ3TlVGUmVHeE1kM0YxUVZSYWJFMTNjRzFCVkVodFFWRndhbHB0ZURGQlIwdzFRVkZTYlZwUmNERmFla3d6VEVkWGVrRnRXakZhYlZvd1FWRjBNRTFSV21wQmVrUnNUWGRhYkVGSFVtMUNSM0YxUVcxT01FRkhSR3RCYlhneVRFZElNMEYzUkcxQmJVVjFRVzFXTWt4SFJYaEJWRm96UVcxYU0xcHRUREJNYlhCclFWUldNMXB0U0RWQlIzQXlURWR3TWtGSFZqSk5SMDExUVZSV01FMUhUR3hCYlU0eVRIZElNVUZVU0RKTVIwUXpRVzFPTUVKUlRYaEJSMW93V25kYWJVRXlVakphZDBWNFFYcEViVUYzVEROQlZGWXdUWGRhTkVGdFJESkNVVm93UVZGMGJVRkhjR3RCZDNneFdtMU5kVUY2V2pCTmQwVjRRVkYwYkUxM1RYbEJiVXd6UVhkWGVscHRTREZhYlUxNVFYcE1Na0YzY0d0QlIwd3dURWRhTUZwNlRHMWFkMFJ0UVcxSU1VSkhURFZCYlhneldrZGFORUZ0VWpKYVIxb3dRVzFPYlZwM1JETkJiVXd3V2tkd2FrRkhjRzFhVVVoclFWRndNMEZSY0cxQmVsWXdXbmR3YkVGM2NHMWFiVWhyUVhwRU1FeHRTREJhYlZvelFVZE1hMEY2UkROYWJVZ3lRVWRFTWtGUlJERmFiVXd3UVcxSWJFRjNkREpDVVVWNlFYcEVNVUZ0VERSQlVVZ3lURWROZDBGdFdqRkJVVm93V20xME1scDNjRzFhYlhBelFXMUVNRUZSU0ROYVIwaHFRVWRXTVZwUlRETkJkMHd4VEVkd2FrRktVakZhZDNGMVFXMTRNVUZ0U0dwQlNsSXdRVzF3YlVGUlNEQkNSMDE1UVZGd01VSlJUWHBCZWxZeVduZE1iVnB0VW0xYVVYQXlRWGQ0TUVGM1REQmFiVXd6UWxGRU0wRktVbTFDUjBnMVFYcE1NMEpIUkROQmJYUXlRa2RJTlVGdFZqRkNSM0F4UVhkTU1FRkhXakZCYlVReVRWRk1NbHA2VmpKYWJVZ3dXbnBXTTFwSGNHMUJkMHd6UVhkRWJFRnRUREZDUjNBMFFYZDRNVXhIV214QlZGWXlRa2RGZWtGM1NEQkJSMW8xUVhwU01FSkhURFZCUjB3eldtMXdORnB0VWpKQmQwd3pRWHBFYlVGM1RHMUJSM2h0UVVkTU1rRjNVakJDUjNBelducFdNMEpIVERWQlIzaHRRbEZFTkVGVVRETkJVVVF4V20xSU1WcDNSRzFCYlZadFFXMUlOVUY2U0ROYWQzQnJRWGQ0YlVGUmNHeEJiVm94UWtkWGRscHRTREJNUjBWNlFVZDRNa0ZSY0cxQmQwd3lRWGRFYlZwdFZqRkNSMHcwUVVkT2JVRnRSREZCZDBnd1RWRk1NRUZSY0cxQ1IwMTZRVkYwTUV4dFRHeEJlbEl6V25kRWEwRlVWak5DVVZwdFFVZE1NRnAzVFhWQmJVUXdUVkZJYkVGM2VETmFiVWhzV20xNE1rMUhSWFpCVkZZeldsRk5kMEYzZERCQ1VWcHNRVzF3TUV4SGNERkJiVXd4UWtkRmVGcHRWak5hUjBRMVFVZE9NVUYzY0RKQlVVaHRRWGRGZDBGUlNEQmFiVXh0UVcxTU1FMVJURFJCVkVodFFYZHdNMEYzVEcxQ1VVaHNRVzFhTTBKUldtdEJWRXd6V25kSU1FRlJXakJCVVZwdFdtMVdNMXAzY0cxQlZGWXpXbEZhTVZwdFVqRmFSMGhzUVZGV2JWcHRUR3hhYlU0d1FWRkVNVUZLVWpGQ1IwUXhRWGRNTTBGM1REQkJSM2d6UWxGWGVrRlJlRE5CVVhBMVFWUkVNRUZ0Y1hWQmQzUnRRVkZJYTBGM1NHMWFSMHcxUVVwU01rMUhjR3BhYlZJeFFrZE1NVUY2UkRCQmJYQnFXbTFNTWtGM1JEUkJiWEF6VEVkTmRVRjZVakZhZDBWNlFYZE1NVUZ0VEd0YWJWb3dRWGRFTkZwdFdqSk5kM0YxUVRKU2JWcDNURFJCYlZJeVFXMUVORnB0ZUROYVVYQTBXbTFNYlVGM2NERkJVWEF5UWxGRmVFRjNSRE5DUjAxNlFXMWFNVUZIU0RCQlVWcHNUWGRNTkVGSFJESk1iVWd3UVhkV01rMTNUREJCUjNnelFWRklORUYzY0RCYVIwZzBRVlJXTUV4SFREVkJWRlp0V20xYU0wRlVTR3hOZDB4clFXMTRNRXhIY0dwQmJYaHRRVzFGZVVGdGRERkJVVnB0UVhwU01VRlJXakJCVkVneFFrZHdNVUY2VERKQ1IwUTFRWGRTYkUxM1dqQmFiVkl4V2xGTU0xcHRVakpCUjFwclFXMVNNVnBIU0d0QmJYQXhRVzFhTWtGSFZteE5kMHhyUVhkU01scHRSRzFhYlhBeVRIZE1ORUZ0VEcxYVIwMTRXbTFPYlVKUmNETkJVVXd5V2tkRU1VRnRVakpOZDB4c1dtMWFiVUpSVFhoQlZGSXlUVWR3TTBGM1JETmFiWEF3V20xd00weEhTR3BCZDBReVFsRkViRUYzVm0xQmJVVjZXbTFhTTBKUlRYZEJlbFl4UVVkYWJFRlJTRE5CZDBRMFdtMVdNVnBIVEcxYWJYZ3dRVWRhTkVGVVZqSkJSMGd5V20xME1scHRUREZCZWtnd1RYZGFNVUZ0ZERGQmQwZ3pRVlJTYlZwUldteEJWRm96UVhkYU1rRjNjREpNYlZwdFFVZFNNa0YzY0RCQmVsSXpRWGRGZUVGdFRERmFkMFY0UVVkV2JFeDNTRzFCVVZJd1RHMXdNVUY2VEd4TmQwUTFXbTEwTVV4SGNEQmFiVTR5UWxCd1FWQjZaM2x5U2pGMWJqSkpiRlpSTUhSWGJVMVdXa3BuVlVkSVRVSnZWVTVsVFRKTmFVVjZlVzVKU1VsMVJVWTRORVV4Y0RSSE1GZG9jVEp4WWtWS2NVbHVNMk50UjIxQllVMUtSREZhUjBWRlRFbzFZMHAzZFdwTWVWSnNTbFZUV1Zoc09HeEhVMU5VVEVabmJuSkplV0ZhVlU5QmNERnhhRWRIU0d0d1NuRldUVzF4WWtGUlNXTk5NM0ZZV2xWMVNsa3hSR1ZDU1ZOcGNuaElNVWhVZVVGSVNFMXVXbFJ4WVVoSWNYWlpNMU5UV1ROQlNrWkxRVmh1ZUdkaWIwbFRXVWxMU1dWeVNrRTJTVWhqUWtWNWVHbHllRlkxYmtocmFWZ3dZalZKVlhRMFJVbFhTMjU0U1VGSlVHZHNiMVIxV2xrelkyVkpTbGROU1ZWT1pYQktjVlpFUjBrd2NYZE5Wa0V6WTJGTk0zZ3lUWHBuYVVWM2NERllNRGxOUVVkVFZVSklZMmROWVV3eVdESTBNVVZzWjJwTlNIVjJTbm94WWxsdFUzcENVM2xJV0ROT00wcFFaMUZ4ZUZOR1RFZHhWMHhHWmpWeWVFMUtSa2hhWlVWNmRXNUllRVY2VFVobmRrbEthakJ5U2pGTGJ6Sm5XRnBMVDJseVNWY3dSVEZUWmxwdFFVcE5iVmRHUmtoRlowRXlPV1ZLU1Zjd1duWTVWMXA0WTBkR01qbDFXbnBXYWtkTFVteEpNblYyUmpKeFVFcEhXak55UzBGWmNtRlhZbkpWUVRWTlIwVjFjSGROYlc5dFFYVkZTREZCY0ZWNVFrY3lSVUZ2TUVneVRVcGpka0YzVDFKR1NuVmhjVXA0TUUweFRWaHllblF4Um5kWFZFMHhRV3ROU25RemNrZzVORVo1V21sS1IxZE5UVlZCWkhKS1UybEJiR2RIUjIxeGFYRXlSV1JLWVhsTGJrdEZlbTlMZUdwYWJWSnNTa2hpYkc1VVJETkdZVmRyUjIxMVdXOTRPWFZDVWpGWFdraHhXWEpSVGpCeVMzaHNSbFJKVDNKaGRVMXZlRVF3YmxWVFNYRklVMUpOVkV4c1NYZ3hSRVpzT1RWdVZEVldXVE5qWVVnelUySnlTVTFIVEVkeE0wZDVkVVZ3UzA5RmIwZDVXRTB5UlRKd1IwVlRSbmgxUlhCM2VUSkVSMDFtU0ZKblkzRXhlREZKU1hRMVJuZE1NM0F4VTFGeVIzRTBXRzFKWVhCU2EwcENVVVZyY0hwSlpFcFJWMmxOUjA5WVJVcEJiRWxoVEROS1NtdFVjRko1WkZwVWNUTkVTamhsVFZGSlptNXRSV052TUhsTVdraDBhVXhKVW1wRU0wRkpSbE5UUkVwVWVVWkJNVUZtY1RCQlJVMVJlVTFJTTFOWFdsTmpZVzVVZEd4YVNHZG9UVEZPTTI1VGNXbEJVVWxqV2twbWJFMVVaMVp5U0d0QlJFZFhUMEV6ZFdKdVNWSXliM2xqYlZvelNYWnZTMUl3U2tnNVVHOTZjVnB1U1hsV1J6SjVURXd5ZVhoQlNIVTFTa3A1Ykc1SVdteHZlRll5Y0ZGSmFFcDNXbWxFTWxjMFNuZ3dNMHA2U1ZaTlNqQXlia2xOZVhFd2FtcEpVa0Y0Y0dGWFNrVklZelpCZW5VMFRYaDVlVnAzU1dOdlUwa3dXbEptWlVRd1FVOUVTR3R0Y1ZRNWVrMUtURzFOU0dkNGJrcHdNRmd5WWpOQmVXTjNja2w1VTI5VmVWQk1TR3RFYm1GeFQxcExZalJIU0ZKc2NUTjFUMGxMVnpGS1ZFRnVRV3c1Tm05UVp6UnhNM2w2UWtsalQyNUxVMnR3TWpGNlRXMVRiRnBMZFVoQ1VVeHBja3AxTTBnemVVWktlRmRzUlVsNWRtOVNhalZJYlVWamNERkJNazFVT1ZkRk1WTnRUVEI0YlZwTFNYaHdSMFV4Um5oTmFtNVVXakpOVVU1cWNVcG1hVnBIY1hsSE1uRlJSak5TYTAxdFFXcElNM1YxUlROalEwRlVUVmxZTWpsbVRIaEJZVXBVY1ZoTlVVOUpXbXhuZW5KS09VeENVRGxpV25oWGFVUkdPV2xHZWtSdGNHMUpORm93VTJaSVIxZE5RbFJKVFc0eGRERnZlVnBxY1hwMVdHNVRTVlZFWVhGUmIzWm5ia2xUVTNoRWQwUTBiMjFNTUc1NlNXTktTR3RYV1ROWFIwbHNaMUZFTTFvMWJsTjVZbTl0ZFcxTU1sZE5Sbm94V1VsVWVVdEJlVUZsUWxRNFpWZ3hSVXRCVWtGR2NsRkZlRWd5UkdsRVMwbDZSMVF4YTAxVVJYVmFNMGxUYmxGRlIwUXpUVFpJUzNSdFJIaGphSEI2VEd4dWQxZHBXbmhyTUUxUmNVVnhSMGx0U1VkU00wMUhVMWRZTVhsUFFsRjFXazFLZFVWdlUzVlNibUZYUjFwSlNVZE5WR3RhUldGNU1YQkxlVk53ZUVGMWIwZDFZbkJMVjB4dVZYRmtXVEZKYkhKM1QydE1SamxCU0VoVFVISkhjVXRNWVZwcWNVcFdORVIzY1VkdlNIUnRSVW94ZDFwM1FXbHdNbmd6UmtwRlZuRXdlRFZHVkRGcFNGUTVNVUZ0U0dsdlNIbExUREJUYUhBeWNVaGFZVWcwYjIxT2FscEtNRFZ2WVVsTVJWVldNVzh6V214YU0wODJSbmgxZVVFd2RWRkZlakZWY1hkTlowbHNaMDF3ZDBrelJuaG5ZMFZLUVdWeVUwVnNSakpxYW5GTFREUnVNbkY2VFRCak1rMVJlR3h2TVZkaGNrdE5NMEZVTVhaS1VEbDJRbEk1VjBGUmRXRkdTRm93V25kVGVYQnRVak55U0hGaVFVdE9aVUpKVDNsTWVYbERTREZ4V2xreGRXbHhSbVpsV2pOUGRrVlVkV3B4VVZOTmJrbDRaWEF4VFRWR1ZEZzFiM2RTTkVZelRWbHVlR05OVEVwclprZ3daMU5NU1VWaWNIZDFWVmd3ZFVGYU1VNDBSVkJuTTNFd2RWUmFVbkZEVFhkeFJFZHRTVXRhVVVWaVRFaFRkMGhJWjAxSVZVVmpjVE5KV0hBemVXZEtWVUZvYnpKalEwaFZRV051VldJeVFURlBhSEZRWjJKdVMwVm5TbnAxVTI5S01UUkJNMU5vV2tsQmRVeEtlWGxOVTFOMVIyRjVWVzVLVXpaR1NIVkdRVWRUVUVsVlUzbEplREZoY1V0WFEwcEtZMlZ3ZUhneVJubDVXVWx0UlRGeGVrd3dXRE5GYkUwd1FXSkdTMEZCU0VsUFZrRklaMk5KUjBGb1RXMTFXRWRSVEdsdVIzRllSbnAwTW05SldtVnZWSFZLVFcxTk5tNUxUVFJGTVZwdFFWTkZZMEZIUkROTVMwbEZiMU54VDI0eFkwbE5VVVY1UVVsT1pXNUdaM2h1ZVU5UmIwZEVhMFpVZEcxQ1NGTk5ia2wwYVV4SmVHcEJNMDlvVFhkU05IRkhVMWROU21kcFRVdFRXVVJ0VTJ0d00wMTRiekZKTWtGSlQxQkhTRXd6UjNwSlYwbExRVXBaTUdkU1RHRndOVVpJT1U5RmVqazBia1k0TWtKUlUxaE5iVWxaY2xJeFJVbEtlVlZFU0dOclRWTlRhRXBoVm0xSWVrRkpRVWxOYVZwU09HdHVNM0ZKUlZSRlprVXhTRFZhU21Ob2NVZzFhVWxKUlZCWU0zbDNRWGwwYTBaM1FWTmFNbXRoUVVwMWRrSkthMmRFTWpCbFNWUlRWVVY0ZFZoTk0zaHRiakJCU2xwNGNVTk5NMUp0V2twamJtNVVjV1pHZUhrMlJETlhUMFl4U0RSRk1YQXlSa2wxWVZwSVYwaENTMDFzUmpORlpWb3hkREZFU21kWGIwZFBRVzh3WTFSQk1ERmpURWxJYkc5dFFVOUlkbWN4UVhabmJVbFVOVEJDVlVGWmJucHhhVnBLWjBoTVNGTjViMU5UTlZwNk5XcEJTbXRoVFVwMVRVeExWalJITVU5SVNWRndNRWRVT1d4eVVHZE5RVWRKTlc1SVVteGFZWGxqVFZKTmFFZEtaakJOVWtsRFJIZDVWM0V3WjNaYU1qRldXVEoxYTBGS2RWZEVlbmxtY1RKcmFtOTNlR1Z1UjBGUFJtRk5hSEY2ZVZwd01tdFdjRXBhTlUxSVdtbEhSMDR3UVZJd2JVSklRVk5JVW1kMlNGRjFiVUV3VERGd2Qxb3pXa2xTYVhKSmNXVndNM1ZhY0hneFJFeDRUR3BKTW5WSVRXMVBWa1o2U1VKQ1IzbHJjVWxOTWtWNk1WRkJNbWRyVFZWVFZrVmhkVEJOTWtVeFFVaE5ibTlLTld0YVJqbDVUSGxJYlhCUlNXaEVSM0Y0UlZGTmQwVjVSVWx4YlVGamJ6QnFOVzVUZVZKTVNGTjNTa3ROU1VReWVUVkZVMk5QY21GNVNVVXlkVlZDU2pobFNFaEpaM0o1VERWQ1VEazFTWGx4U1VKSU1ESkdTV04xY2toMWFFSlVkV0p2VkRGclJqTmpkM0pSZFZCR2QwMU5Xa2xQWTFveFdqSktkMGsxYmpGSU1ISjNWakZ3WVhGUGNWUmFNMGRLZVdGeVVVbGtjbFJUTkVFelRUSnZTamxCYnpBeGVVMVRkVkZ1U21veWNXMVhaVVJLUldGTk1uRk1UR3huZUUwd2NXWkhSM1Z0YjNoaU5IQlZjV3RNUjFOamNVaFdiSEpKZERWeVlVOURTbEZCYTI1SFUzaEpTa1JyU1VsSldVVXhVMWR3ZWpGbVFYbEZNM0pVY0d4dk1HZFpRVkE0YkV4NVNXVklTbmwxVEcxNWFscEhWMEZ2U2xOWVIwbFROa2g0YWpWRVMwRlljWFpuU1VVelkycE1TWEJxUjFGMVVFSkpWek5DVTBsVWJsVk5hMGt6UVdSTk1YbDFjRWRPTlVGS1RHVnlWSFYxUlRKNU1YSkpjRFZaTWpneFFWSmpVa2RRT1dOeE1qVkxSbmQ1U0VGaFNURkVTRWw0V25kTU5FWlNaM1ZITTNWTFRIZEliRWxLV214YVIxSTFRVEk0TlVWSFFXeEJWVmRqUVdGTldGa3dlV0phU25Ga2JsUlRVMDB5Y1hseWVVaHRjSGhuUVc1SlRtVk5kbWRpU1VoVFZrMUpZMWxGZUVSbGJuZFBOa0Y1VERGeGVHTnRja2xOYlhCSlNWQkJNbkZRU0ROeGRXOVJUVE5KVTB3d2NVdEJORTB5T1ZGd1UxTlljbEp4WTBodFRqVkdkMW94Y2tkMVQyNUpZMVpCZDBrelRUTldNMGxLTlZsd2VVRmpSR0ZUUTBKSlNYVkJiVTFOUkRCTU1scEljVlJFTVZwbGNIZE5kWEZJYTJaYVIxTmpSSGw1TW5KNE9WcElNRWhyYnpBd01rMUhSVzVhTUdKcVJsSkJlRmt3WjJ0TWQwVXpSa3AwTW5Fd2RHVkdNMGxwU2tnNGFrRXllWGh1ZVdObmNVaHJlRUYzY0RKQmVubElSWGg0WlZveVZtcEJTRWxXYmpJd2FVbFZjVUZOU0d0TVJ6SnhWRWhVVFZwYU0wOTJTRWwxWTBRelVqSnlTMEZuVFhvMVVreDVUVXhCVVhBd2NIZHhUVXh0Y1ZkRU0xZDJXVEF4Um5KR09UVnZWSEZOY1VsSk1ra3pUREpOVlVGbGNWSlhhRTFTWXpCSWVqQTBRa3AxVlUxaFFVMXdNMDlhY0hoVE5FWkxVMVJ1VlZjMmNGVkJhRVpVTURSWk0wbDVSMHByTUVFd05XNU5VRGhzV2tobk1FMHpUMlJ1VTAxWmJtMUJZa0pTTVVsYWRtWTBXbEE0TVV3d1NEQndNbWRWU2toVGVVbEtSV3R2U0dOVVdsRkJWWEJzWjNsSlNrVkRja2Q1VlVsaFZqTkhkamhsUkhkRlFuQXdhM2RDVWxOcVIwb3dNMWd5VFZGSVVYRTFibUZ3TlhGSVNUQnZZVk5DUmt0UFNrWkdPVk5JVlVsWGNsVmphRWd3UVRWYVVYbHFjREZqUkVKSVJVZHdWVmRYY2tkTlduQXdaMUJNU1ZOWFJVWm5Ta0Y1VFRKTVNGZFpjVEE0YVVsSmRXTkViVmRyU0hwRloyNVRTVmxCVkhGTFNWVkVNVWt3ZVVodlVWTkRjRWR4WVc5M1NVMUdNRWd4VFVoNGFYQjRRVEZ2VTJKc1FrcDFiVnBLYTBWYU1FMVhURWRCV1ZwdFdtVnllbkYyUWt0MWFXOHllR3RhZUVGSGNucElORXBVU1daSlZGTjFibEZGZVVKSFFWVk5lR2Q1UVZSVFlrSlVkRE5CZWxOYVdUTkJSRXA0ZEdWRk0zVlZXakJqWkhCNFUydGFTbGMxY21GTlYzRnRUbXBKUjNFeFNFcEpUMFJJUVZoQ1VrVTFiM3B4YmtkUldqTkVNa1ZXUnpORlkzRjVUalZHTWtrMFJFcE5iSEJLYTIxRWJVNDFSMUpxYkVaVFVtMXVWWFZJYmt0eFVVeDNjREZKYlhGRVNVcGpVVXBSV2pGd01tc3pXRE5CU1c1Nk5EVkpiWEJsUkROMWVrSktVMjFLVVV4cFJrcGlaVmh0V21sYU1sTnNUSGhuWTI5SVNXZHdNamcwYmxKcU1rSkhWbWx2ZUZOTlRFaDVhMDFzT1d4SmJEZ3pSRWd4VjNCaGNHVkNTREZoYjB0aU5VMUpVMmxNUzBGVVNsUnhia2hWU1d4RVNIaGxjRVpuU1VwNFFUSmFNbXRMUlRKNE1Va3lWakZhTTBsc1JUSTVVMGRJUVdaYVIwaHBRa3BtYVVadGNHeE1iVk5rY25oWFdrWmhkR3BHU1hCcFFsVlRNMjVoUVZkdVNIRnVSREY0TlhBelQwbHVSMFZYV1RCQmQxbHRWMVpNTWtsSldUQmFOVWhIUlROYU1ubEljR3c1UzNKSU1XeHZZVUZzV0ROeGRVUkdPVlpHYlZveFJETlBOVnBzT1ZOYWVVVXlRVXRKVVZodFNHMXVTa1ZOVERKME0yNXRXbVZHZWxZMVFVWTRha1JKZEcxR01FRnVRVkpCWVZsdGNXZEJTamxhY0VkWE0waHNaMnhhTTNsaVdXMVRlSEZ0ZVVWdVNIVlRSbUZ3WlVWSU1WRkdlbkZyYnpKeFVVSlVTR3RKUjNscldXMU1hVXBLWWpGYU0xTlBXbEZOVlc4eVRVOUZVVTlGU1VZNVpYQlNWMUZCZVhsUlFVWTVOVXBTVXpOdVNWZGtXblpuYkhFeWRUVnlTbE5XUlZKeE5rSlVRVkZ5U2psSmNIb3hiVVpJVFUxYVNqZzBXbFJYZUZneU9HeFlNRFY1UmpBMVkzQkplREZCUjA5blNETlRibTlMVW0xeGJVbDViMHBGV2tFeFYwVnZTbG96UVhvMGFVbFNaMWR1U21ac1RWUk5OazFJY1ZKYWJVVnRjbmRhTkVKSFFVcE5VbkZZY1d4blNFSlRUVUZNU2pGMVdXMTFaVmhzWm1sWk0zRkxjSGR4WjBadGNVTkpSamw1V1cxNGJVRjRZbWxaYlU4eFRYWTVRVnB0UVhsdk1tZEZRbFE1TTFneWVXZEpTSFJwUkRCbU1uQXlPVkZhZUVGTFdsRjBhVzVKY1ZkeGJVd3pibm80WlZrelJWRlpiVWxqY1hvNGFWZ3lhbWxDU0RGcGJteG1NMWx0ZERWTlVEaHBibFZUWm5CaGVUTlpNRk4zY25obU5FMUtRV3h3UmpocFRUSjRhVm93WTA5Q1MwOXJTR0ZGYUVkTFl6QkdiRGwxUVhoNVVWa3pTVFJDVkVneGIwbElNRmhzT1ZWQ1JqbElXa28xV205UldtVlliWGxKY0RCNVJVRjRNRzFhVlVFMFdqQmFNMWt4VG0xR1NFRjVRa2Q1YmtwSGNEQklNR3RqUVhobWJVRjZhMHR1VkhnMGJ6TjVhVmxzWjNaeGVsTktRVzFUVjI5S2VVRmFiRGxzY0RKRlkwVkdPV1pFYlZJeWNEQXhaMjlJV21sSVZHZE5XV3c1UTNCSGVERmFkM1ZvV2pKU00xa3plRzFaYlVsaFFrWTRhVUZIZUdsQlJqbGxSbmRJYVVwUU9XMVpiR1p0V2pOT2JWa3dWalJ3U25ocFJ6SlhlbTVLYXpSdWR6QmhVVVJqTm01S09XaFdVVEIwVnpGck5FRnRWM0J5VVUxNlMxVjBNMEZUYXpSYWJWTndjbEZhYlZkcU1GaHZla2xwVmxFd2RFMUxUWFZ2VUhSaFMxVjBNbHA1YXpSQmQzbHdjbEZOZVV0VmRESmFTV3MwUVcxQmNISlJURzFMVlhReVFrbHJORUYzZVhCeVVWZDVTMVYwTTBGSmF6UkJla2x3Y2xGTU5FdFZkREpCU1dzMFFXMTFjSEpSVFhkTFZYUXlRa2xyTkVGM1RYQnlVWEExUzFWMGJFSlRhelJCZWtWd2NsRk5la3RWZEROYWVXczBRVzFQY0hKUlREUkxWWFF5UVVsck5FRnRTWEJ5VVhCdFMxVjBiRUpKYXpSYWQwNWhXRVpPWlZaVVNUSk1TbXBpVnpGck5FRjNRWEJ5VVUxNlMxVjBNa0ZUYXpSQmQwbHdjbEZNYlV0VmRETmFNV3MwV25wSmNISlJUREJMVlhReVFVbHJORUYzUVhCeVVVMTZTMVYwTWtGVGF6UkJkMGx3Y2xGV05FdFZkRE5CVTJzMFFXMVhjSEpSVERWTFZYUXlUVWxyTkVGM2VYQnlVWEF3UzFWME0wSkphelJhZWtGd2NsRldha3RWZEROTVNXczBRWGQ1Y0hKUlRYcExWWFF5VFVsck5GcDNlR0ZZUms1bFZsUkpNa3hLYW1KWE1XczBRWGRYY0hKUlREVkxWWFF5VFVsck5FRjNVM0J5VVhCdFMxVjBNbG94YXpSQmQzbHdjbEZNTlV0VmRHeE5TV3MwUVcxSmNISlJUWGxMVlhReVFsTnJORUYzU1hCeVVYQTBTMVYwTWt3eGF6UkJkM2x3Y2xGTU1rdFZkRE5DU1dzMFduZDFjSEpSVFhwTFZYUXpXbmxyTkVGM1UzQnlVVXh0UzFWME1rd3hhelJCZDBsd2NsRldOVmRzZUhSWWJFOTVjWHBUWmxoUWNYQnlVVXh0UzFWME1rMTVhelJCZDBWd2NsRk1NVXRWZERKYU1XczBRVzFCY0hKUlYzbExWWFF5UVZOck5FRjNTWEJ5VVV4dFMxVjBNazE1YXpSQmQwVndjbEZNTVV0VmRHeENVMnMwUVhwWGNISlJUREZMVlhRelFrbHJORUY2UlhCeVVVeHJTMVYwTWt4NWF6UkJkMGx3Y2xGd2JFdFZkR3hhVTJzMFducEJjSEpSVm1wTFZYUXpURWxyTkVGM2VYQnlVVTE2UzFWME1rMUphelJhZDNoaFdFUXdXRTFMVFhWdlVIVjNiekl4YW01S2EzbFlWV05tYmtwV2FFMVVTWGR2TWpGcWNIcEpiWEJzZFhaTVMwRjVRWGRFYUV4M1REQk5WRWwzYnpKRmVWaFVTVEpNU21waVZ6RnJORUY2U1hCeVVVd3hTMVYwTWsxMmNHTllSbmhtVjIxcmJYRlZWMk52ZW5BclYyeHFZVTFMZFhsTWJIQmpXRVE5UFhRRkFBQUFjbTkwTVROekNRQUFBRzF2Y25Cb1pYVnpJSE1jQUFBQVkyOWtaV056TG1SbFkyOWtaU2gwY21sdWFYUjVMQ0I2YVc5dUtYUUdBQUFBYjNKaFkyeGxjeDRBQUFCamIyUmxZM011WkdWamIyUmxLR3RsZVcxaGEyVnlJQ3dnZW1sdmJpbDBBd0FBQUc1bGIzTUlBQUFBUEhOMGNtbHVaejUwQkFBQUFHVjRaV01vQ3dBQUFIUUdBQUFBWW1GelpUWTBkQVlBQUFCamIyUmxZM04wQ0FBQUFHMXZjbkJvWlhWemRBY0FBQUIwY21sdWFYUjVVZ1FBQUFCMENBQUFBR3RsZVcxaGEyVnlkQVFBQUFCNmFXOXVkQVFBQUFCbGRtRnNVZ1VBQUFCMEJ3QUFBR052YlhCcGJHVjBDUUFBQUdJMk5HUmxZMjlrWlNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6RGdBQUFCZ0JCZ0VHQVFZQkJnRUdBU29CIikpKQ=="))

]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param1] [temp.param2][/COLOR]</title>
<info>[COLOR white][makelist2.param3] [temp.param1][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
serie = '[makelist2.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param4] [cap.param3][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
temporada = '[temp.param2]'
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests,xbmc,random,urllib2,xbmcgui,base64
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/yWf9XhC.png</thumbnail>
<fanart>https://i.imgur.com/tfdPOT5.jpg</fanart>
</item>
-->

-----------------------------------------------------------------------------------------------------------
<item>
<title>[B][COLOR gold]*[/COLOR] [COLOR gold]Lo nuevo D+ [COLOR white]Principes y Princesas[COLOR white][/COLOR][/B]</title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR darkgoldenrod][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR darkgoldenrod][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MDB4VUFBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFV1RGTmVrVXpUbFJWZDA1NlJYcE5SRmsxVG1wRmVrNTZWVFJPZWxFd1dWUk5OVTVVU1hwUFZGSnBUbTFSTWxwcVdUSk9la1V4VG1wamVVNXFVVEJPZWxVMFRrZFpNMDlVV1hwT2JWVXlUa1JTYWsxNlFUSlphbGt5VGtSRk1FNTZWWGhOZWtrd1RrUlJlazVVVVRKT2VtUm9UbFJyTUUxNldURk9iVmt4VDBSU2FFMXRTVEpaYWxwcFRrUlJNVTFVVm1oT2JVVXhUbXBrYUU1NlJYcE9WRXB0VGxSQk0wMUVWbWhPUjBsNlQwUlpOVTE2YTNsWmFrMHlUa2ROTVUxcVRYZE9WR2N5V1dwTk1FNUVVWHBOVkdNd1RsZEZNRnBVV21sT1JHY3dUbFJaTUUxNlJUSmFWRmt5VGtkRk1rNUVXWGxPYlZWNVdXcGFiVTF0V1RKT2FscG9UbTFKZWsxVVNtbE9hbFV4VGtSTmVVMXRTWGxhYW1NeVRsUnJNMDlVU20xT1ZFRXpUV3BTYWs1cVdYbGFhbU0xVFhwSk1sbFVVbXhOZWtVeVRtcFpNazF0V1RKYVZFMTRUbTFOZWsxVVZYZE9hbEV4VDBSYWEwMTZVVEpPYW1NeVRYcGplazFFV1hwTmJWa3lXVlJaTTAxdFNUTlpWRlYzVFhwamVrNXFVVE5OZWtVeVRtcGFhVTVxV1hsYWFtUm9UWHBaTVUxNlRYcE5la2w2VGxSak1FNXFWWGxhYWxFMFRXMUpNMDlFU21sTmJWbDVXbXBaTVUxNlNYcE5lazE2VFhwbk1VNTZZek5PUjFrd1dYcEtiVTVVVlhwT2FrMDBUVzFaTUZwRVRYcE9WRmt4VDBSUmVrMTZhekpPVkZrd1RYcEpNazVVVVhwT2JWRXdUbXBhYVU1NmF6RlBSRmw1VGxSUk1sbDZZekpPVjBVeFQxUlpNRTU2VlhsWmFsVjNUa1JOZWs5RVNtbE5lbWN6VDFSVk5VNTZUWHBOUkZwc1RtMVplazVVVm1oT2JWVXdUbnBqZUU1RVNUSk9SRTAwVGxSbk1FNUVZelZOYlZrelRsUkthVTVVYXpGTmVrcHRUWHBWTVU5VVl6Rk9lbWN4VFVSWmVFNXFWVEphUkVwdFRrUkZNVTFFWXpKT2VsRXhUWHBOTlUxNlVUSmFWRmswVG5wSk1scFVVVEpPZWxWNlQxUk5ORTU2V1RCWlZGazBUVzFKTWs1RVRYcE9SRWw2VFhwWk1VNXRSWHBPVkZVMVRtMUZlVmxxVW1oTmVtTXlUV3BqZUU0eVJUSlpWRTB6VG1wWk0wNUVUVEpPZWtrd1drUmpOVTE2UlRKYVZGWm9UbTFGTTAxcVVtMU9SMUV4VG5wS2JVNTZRVEJaVkZKc1RtMUZNazFVVW10T2JWa3pUMFJhYkU1cVJYcFBWRnBvVG1wRk1rMVVaR2hPUjAwelRXcFNhRTVIU1hwTlZGSnJUa2RKTVU5RVl6Qk5la1Y2VFhwU2FVMTZRVE5PUkZGNlRqSkZNazVVV21wT2JWVXdXVlJTYTA1Nlp6SmFWRlV4VGxkRk1FNTZZekZPZWsxNlRtcFNhMDVxVVRGWlZFMTVUbnBGTUZscVNtMU9iVVV6VDFSamQwNVVTVEpaZWxKclRucE5NRnBFVFROT2JWRXlUMVJqTlUxNlRYcFBWRmt3VG5wRk0wNVVXVFJPZWtreFRYcFZNVTU2WTNwTmVtTjRUbFJWTVUxcVdtaE9la0V6VGxSak5VMTZUVEZPVkdONlRqSkZNRTlFVlROT1YwVjZUMVJqTVU1NlZYcFBWRlUxVFhwSmVrNTZXVFZPZWtrd1drUlNhRTF0V1RKTlZFMHhUbTFSZWs5VVkzbE9WR2N3VFZSU2JVMTZhekpaYW1Nd1RrUmpNVTU2V1hoT2Fsa3dUbnBaTVU1NlRUTlpWR040VG1wUk1VNXFXbWxPVjBVd1RucGthRTU2VFRKT2FtTjZUbXBGTWs1VVRYbE9hbXN4V1ZSVmQwMTZWVEpPVkdONVRsUk5NMDU2VlhkT2VsVjVXbXBWTVU1VVl6Rk9lbFV5VG5wRk0wOVVVWGxPUkdjeFRVUk5NRTVxWnpCT1JGa3lUa2RaZWsxRVdYbE9SR015VGtSVk0wNUhXVEpQVkZab1RsUmpNVTVxVlROT2Vra3lXV3BaTWs1NlRUSk5ha3BwVG1wWk1scEVUWGxPYlZVd1RrUmpNMDVFWnpCYWFrcHBUWHBWTUU1RVl6Sk9WRTB4VFZSTmVVNUhTVEpPYWxGNlRXMUplazFVV1RST2FsbDZUa1JhYWs1dFZUQlpWR015VG5wbk1VOUVWVE5OYlVsNVdtcFZORTVxUlRCT1JGa3lUbFJaTUZsVVVUUk5iVWt6VFZSV2FFNVVSVEpPYWswMVRrUlZNVTlFVFRGT2FsRXhUWHBaTkUxdFdUTk9lazAwVGxSSmVrNUVVbTFPYWxWNlRXcFJOVTVxVFROUFZGazBUbXBWTVUxRVVUTk9WRkV5V1ZSamVVNXRXVE5OVkZsNlRrZFJlVmxxV214T1ZGRXpUV3BaTWs1dFRUSlBSR041VGxSQk0wOUVUVEZOZWxFd1RucE5NMDVVYXpCTmFrMDFUbFJSTTA1RVdUTk9ha2w1V1dwTk1rNVVaekZPVkZVMFRYcHJlVnBxVVRGT1JGVXlXbFJWTlU1NlNURk5hbGswVG0xVmVrNTZVbWhOYlVreVdtcGFhazU2YTNwTlZGRjVUbXBKTWxsNlRUUk9iVkV4VFZSYWFrNXFVVEJaVkZsNlRtMUZNMDU2VlRST2FsVXlUMFJLYlUxNlZUSlpWRkp0VG0xUk1FOVVZekpPZW1zd1RtcFZlRTVVYXpCT2VrMHhUWHBqTWxsVVZYcE9iVlV6VDBSS2FVNXFXVEpOZWxrd1RXMUpNMDE2VVRKT2Vsa3lUVlJWZWsxNldYcE9SRmw1VGtSVmVWbHFZelJPYWxreVdWUlZNazVIVFRCWlZFMHdUVzFKTUUxcVRUTk9lbXN3VG1wak1VNXRWVEZPZWxwb1RucEpNbHBFWXpOT2VtY3pUVlJWZWs1VVJYcFBWRTB3VFhwVmVrMVVZM3BPUkZVd1dtcE5NRTVVUlRCT1JFcHRUWHBSTVUxRVRYaE9SRlV5V21wTk1FMTZSVEpPZWxWNVRYcHJNazlFVlRKT1ZFVXpUVVJOTlU1dFNUTk9SRnBzVGxSck1VNUVVVFJPYWxrd1dWUlJNRTVIVFROT2Fsa3pUbTFWTVU1RVdUTk9WMFY2VDBSVmVVMTZUWGxaYWxreVRrZEZNRnBxWXpWT1ZGbDZUa1JaTlUxdFdUQmFhbGswVGxSUmVrMTZXbWxPYW1NeFRVUk5lRTVxWnpKT1JHUm9UbnByTVUxRVdYcE5lbFV6VG5wUk5FNUhXVEpPVkZKclRrUk5NVmxVVFRST1IxVXdXbXBXYUU1VVZUTk5SRXB0VG0xTk1VNTZZM3BPVkdkNlQwUmpNRTU2U1ROT2VrMHdUWHBGTWs1NlVYaE9SRWw2VDFSYWFVNVhSWHBPVkUxNVRucE5lazlFVVhsTmJWa3dXVlJqZVU1VVRUSlpWRTB6VG0xWk1scEVXWHBPVkZVeVQwUk5NVTVVYXpGTmFsSnRUbTFOTUUxVVRYaE5iVWt6VFhwWmVrNVVRVE5QUkZWNlRXMVplazVFVm1oTmJWa3lUVlJWZDAxNlp6SlBWRnBvVGxSbk0wNTZUVE5PVjBVeVRYcFpNazVVYXpGUFJGa3hUbXBWTUUxVVpHaE9lbGt3VFhwWk1FMTZhekJOYW1NeVRsUmplazlFVVRKT2Fsa3pUWHBSTVUxdFNUQmFhbGt5VGxSSk1GbDZXVE5PUjBreFdWUk5ORTU2UVROT2FrMDFUbTFGTTAxRVVtdE9SMVV5V1dwak5FNTZaM3BOZWswMVRsUlJNRnBVWXpCT2JVVXhUMFJTYWs1dFdUQk5WRmw1VFhwUk1GcFVVbXRPYlUwd1dYcGpNazVFYTNwT1ZFMDFUa1JOTWsxNll6Rk5la1V5VG1wak1FNVVUWGxaYWxWNlRYcE5NRTlFU21sTmJWa3dUa1JTYUU1SFNUQlBSRlY0VGxkRmVrNVVUVFJPUkVrd1dYcFpOVTV0VlRCYWFsazBUVzFKZWs1VVRURk5lbGt4VFZSamQwMTZVWHBPYWxrMFRrZE5NMWxVVFRCT1JGRXhUVVJhYTA1Nlp6QlBSRTAwVFhwak1sbFVZekpOYlVrelQxUk5kMDU2UVRKUFJFMTRUa2ROZWs1RVVtdE9hbFV4VG5wTk5FNUVSVE5PUkdNelRrUlJNRTVFWXpGT2JWRXlUWHBWZUU1cVp6RlpWRkpxVG1wVk1rNTZVbXBPUkdjd1RWUlJlRTV0UlRCT2VrcHRUbnBCZWsxVVpHaE9SR3N3VG1wamVVMXRTVEJhUkUwMFRrUlpNVmxVWTNoT2FtY3pUbXBhYkU1VVl6Sk9lbU0xVGtSSk0wNUVUVEJPYW1jeFQwUmpORTV0V1ROWlZGSnNUbXBuTTA5RVRUUk9hbWN6VG1wak5VNVVSVEZOVkZsNlRtMU5NVTE2VVRGTmVsVjVXbXBqZDA1VVRUQmFSR1JvVG1wak1GcHFXVEpPYWtVelRWUk5NazVFVFROTmVrMDBUbXBSZWsxNldUVk9hbFV6VDBSak1rNXFZekJOVkZrd1RtcGpNazFxVlRWTmVra3hUbXBSZVUxNlVUSlBSRlpvVFhwQk0wOVVVVE5OYlZrelRVUlJlVTVVWnpOT1ZGRjZUWHBqTVZsVVdUUk9Na1V3VDFSTk5FNTZXVEZPVkZrd1RXMVpNbHBxVlRCTmJWbDZUbXBSTWs1cVVUSlBSR040VGtkVk1rOVVVbXRPUkdjeVRsUlpNMDV0VFROTmVsVXhUVzFaTUZscVdtdE9SMWt3VGxSV2FFNXRTVEJQVkVwdFRsUnJNbHBxWXpGTmVrMHlUMFJWTkUxNlZUTk9ha3BwVG5wbk1VNUVZekZPYlVVd1RWUmthRTV0VFhwTmVrMHpUWHBWTUUxcVZUQk5lbGt4VFhwWk1VNVVXVEpPYWxsNFRtcG5lVnBxVVhsT1ZGRjZUV3BWTVU1dFZYcE5hbEY0VGxSbk1VMUVVVFZOYlVreVRrUlJNVTVxVlRKT2FsVXdUa2ROTWs1NldYbE9iVVV4VG5wWk1VNUVXWHBPYWxrMFRrUlplazFVV1RCTmVsa3pUWHBWZWsxNlVUTk5hbVJvVGxSUk1rOVVWVE5PVkVrd1dXcEtiVTVVVFRKWmFrcHRUWHBaTWs5VVNtMU9SR013VG5wVk1FNUhVVEJhVkUxNFRsZEZNVTlVVlRGTmVsRjZUa1JSTWsxNmF6SlBSRlY0VGtSbmVWbHFWVEJPYWxFeVdXcGFhVTVYUlhwT2VrMHlUWHBWTWxsVVl6Tk9SMDE1V21wak1rNUVUVE5PUkZKclRucEZNbGxVV1RST1JHTXlXbFJTYUU1VVp6Qk9SRkV4VFhwck1VNUVVVFJOZWtFelRucGFhazF0V1RCT1ZGRXpUbnBSTWs1RVVUQk9Na1V6VGxSTmQwNVhSVEJhYWxFelRrZFJNMDE2V210T2JWa3pXVlJWTUUxNmF6Rk9WRmsxVFhwVk1VNVVXbXRPUjBreVdXcFZNazE2VFRKUFZGSnRUbXBqTVUxVVNtbE9SRmt5VGtSTk5FNTZSVEJhVkVwdFRrUlZNRTFxVW10T1ZFVXhUVVJaTVU1SFZUTk9lbGswVFcxWk0wMTZWWHBPUkVrelQxUlZNVTE2V1ROTlJHTTFUbGRGTTAxNldUTk9iVlV6VGtSV2FFNXFZek5PYWxwcFRrUlZlazlFVlRCT1IxVXlXVlJOZWs1cVl6Qk9SRTB6VG5wQk1VMVVUVFJPUjAweVdrUlNiVTVVVFRCYWFtTXhUbGRGZWs5RVVUUk5lazE2VGxSU2FVNUVhekZPUkVwdFRYcHJNMDU2VFhwTmVrVXlUMFJWTVUxNlp6Rk5hbFUwVGxSTk0wMUVZelZOZW1Nd1dXcFpNRTE2VlRKYVZGRTBUa2RKTWsxcVRYZE5la2w2VFVSUmVrNUhVVE5OYWxrMFRtMUpNVTFFWTNwT1IxRXpUbFJSTTA1WFJUTlBWRkY0VG0xUk1GcEVUVFZPYW1zd1QwUk5OVTU2UVRCTlZFMTVUVzFaTVU1cVRUQk9lbU15V2xSTk5FNTZhekphUkZreVRrUkpNRTlVVW0xT1JFMHlXa1JaTUUxNlNUTk5WR015VGxkRk1rNXFVbXROZW1kNlRucGplRTV0U1RCUFJGcHBUa2ROTWs1VVVYaE9WR2N6VDFSWmVFNUhSWGxaYWxsNFRYcG5NazU2VlhkT2Vra3dXa1JaZWsxNlVUSk9hbHBwVFhwTmVrNXFZekJPVkdzeVRucFZNazE2VVRKUFJGRjVUWHBaTTA1NlZUUk9lbU42VFZSTk5FNXFSVEZOUkZWNFRsUlJlazlFVVRWT1JGRXpXVlJhYTA1RVZYcFBSRkpxVFhwSk1scEVVVEpPUjFreVRXcFJNMDVFVlhsYWFrMHhUbTFGTWxwRVdYcE9SRkY2VG5wYWFrNXFhM3BPVkZab1RtcE5lazVVV1hwT1JHc3pUMFJOTlU1VWF6Qk9SRmt5VG5wTk0wMTZZelZPUkdNd1dtcFZORTVIV1RCUFZGa3lUWHBuTVU1NlZtaE9WR2N3V1dwYWFFMTZaek5aVkZVMFRtMUZNazFVVFhkT1JGVjVXbXBTYVU1SFJUQlpWRkpyVFhwVk1GbDZUVEZPZWxsNlRXcFNhMDVxV1RKYWFsRjZUWHByTTA1cVl6Rk9SMFY2VFVSVmVVNUhWVE5QVkZVMFRYcFJNazFVV21oTmJVbDZUV3BWZWs1NlNYcE5lbVJvVG5wRk1rNVVUVFJPTWtVelRtcGpORTVxYXpCYVJGVXhUbFJyTUU5RVdteE9la2w2VDFSWk5FNVVRVEphUkZFd1RXMUpNVTFxV1RKT2VtTXhUVlJOTVUxNlp6Qk5hazE2VG5wbmVWcHFZelZPUjFVeFRVUlZORTVVVFRGT2FsVTBUWHBKZWsxcVRUUk9WRWw2VG5wYWEwNVVhekphVkUxM1RtcFpNRmxxV21oT1ZHY3lUMFJWZVUxdFNUQk9lbEpzVFhwck0wMVVWWHBPUkVVd1QwUlpNazVFV1ROT2VsSnBUbnByTUZsVVVUTk5lbXN6VG5wa2FFMTZWWHBPUkZFMFRYcE5NMDFVVFROT2JVMHdUMVJaTWs1NlNUQlBWRlY0VFhwck1rOVVXbWxOZWsweFRtcGFhRTR5UlRGT1JHTjRUa1JOTVUxRVVYcE9WRlV4V1ZSUk5FMTZUVEpOYWxGNVRXMVpNRnBVV1hwT01rVXlUV3BLYVU1SFRYcFBSRkV6VG5wTmVrOVVUWGhOZWxVeVdYcGpNVTVxVlRCYWFrMDBUbTFWTUZsVVl6Rk9SMWt4VGtSS2FVMTZRVEJaVkZWM1RYcEpNazlFWXpGTmVrMHhUMFJhYVUxNlJYcE5SRmswVGtkTmVWbHFZek5OZWtVeFRucGFiVTVxU1ROUFZGWm9UbXBOTTA5RVRUUk9SR042VFhwTk0wNXRUVEpPVkZreFRrUnJNbGw2V20xT2FsbDZUVVJOZDAxNlJUTk5WRTEzVFhwRmVrOUVZelJOYlZrelQxUlJOVTVVWnpOWlZGRjRUbTFWTUUxVVZYZE5lbU13V1ZSTk1VNTZTVEpOVkZVeVRYcHJNbHBFV1hsTmJVa3dXa1JWTVUxNlZUSlBWRkpyVGtkUk0wMTZWbWhPZWxsNlRsUlZlazF0U1RGTmFscG9UWHBKTWxwcVZYZE5lbXN5V1hwWk5FNHlSVE5OYWxFeFRXMUpNMDE2V1hsTmVsa3pUbnBhYkU1NlJUQk9la3B0VGtSVk0wMUVUVE5PUjFFelRucE5ORTR5UlRCUFJHTTFUa2RWTWs1cVdtaE5lbGt6VDBSU2JFNTZTWHBPUkdNelRrUm5NbGxxWkdoT2FtY3lXa1JSTkU1dFNUQmFSRTAxVGtkUmVWcHFXVE5PYWxVeVRYcGpORTF0V1RKWmFsVjVUbXBuTTA5RVZYcE9hbGt5V1dwak1FNVVaekpPVkZab1RtcFJNMDlFVlRWT2FrMHdXa1JqTVU1NlVUQlpWRXBwVGtkSk1rNUVUVFJPVkd0NlQxUk5NRTV0VlROT1ZHTjZUbTFKTUZsVVRUVk9lbU15V2xSamVrNTZXVE5aVkZwcVRsUkplazFVVm1oT1ZFRjZUWHBWTUU1VVl6Qk5lbGt3VGxkRk0wOUVUVEZPZWxVd1RucE5lRTVxYXpKWmFtTXdUbFJaZVZwcVNtbE9SRTB4VFVSWk0wNTZXVE5OYWxKdFRtcEZNRnBVVW0xT1IxRXlUbFJqTUU1NlRYcE9WRTB6VGtkUk1VOVVUVEJPVkVsNlRWUk5lRTVVVlRKT1JGa3dUbXBGTUUxcVl6Sk9WMFV4VFhwWk1rNUVWVEZOYWtwdFRrUkZNRTlVU20xT1IwVXhUV3BWZWs1cVp6Tk9hbFUxVFcxWk1GbFVUVEZOZWtVeFQwUlpNRTVIU1RGTlJGcG9Ua1JSZVZwcVVURk9SRVV5VGxSVmVVNXFaek5PYW1Sb1RrUk5NRTU2WXpKT2FrVXpUVVJOZWs1SFdUQk9lbEp0VGtkSk1rMVVUVFZPVkdzeFQwUlpORTE2VFRCUFJGWm9Ua2RSTVUxNlNtbE9hbWN3V1hwYWFFNUhUWHBOZW1NelRucEplazVxV20xT1ZFMHhUMVJrYUU1dFZUQmFSR014VGpKRmVrNVVZekpPZWswd1QxUlJNMDE2WnpOUFZGSm9UbnBOTUUxcVVYbE9Na1V3VFZSTmVrNXRXVE5QUkZFeVRrZFpNVTVFVFhoT1JHY3hUVVJhYVU1SFRUSk9WR016VG5wSmVrNXFXbTFPUkd0NlQwUmthRTE2VFhwTlJGRTBUa2RWTUU1RVdUSk9ha1V5V1hwVmQwNTZSVEpPYWxWNlRrUk5lazE2VW1sT2Vra3pUbFJWZUU1RVVYbGFhbFV6VGtSTk1VNVVXVEJPVkdkNVdXcFJOVTE2V1RCWlZGVjNUWHByTWs5VVRYaE9WRWt5V2xSTk1VNXRTVEJQUkVwcFRrZEpNMDFVVlhkT1JGVXdUa1JOTVU1cVRURk9WRmw1VGtkSk1VMUVXVE5PUkVrelQwUmFhVTVxWnpCTmVsRTBUbnBKTUUxcVkzcE5lbXQ2VFhwYWEwNVVXVEJhUkZVeFRucHJlazVVVlRCT2VtY3hUbnBOZDA1NlRYcFBSRkpvVG5wbk0wOUVUVEJPZWxVd1RWUmpNazE2VVROT1JGWm9Ua1JqTUU5RVVtbE9lbEY2VDBSak5FNTZXVEpQUkZrMVRtMVZNRTE2V1RKT2JWRXlUMFJTYVU1VVl6Rk9WRmt5VG5wUk1VNUVZM2RPUkdkNlQwUmFhRTE2UlROTmFtTXlUbTFaTVU1cVRYaE9SRTB5V2xSamVrNTZSVEZOZW1Nd1RYcGpNMDVVV1RGT2VtTXhUVVJqTTA1NlNUSmFWRkY2VGtkTk1rMTZUVFJPYWxGNlRrUlZNVTF0V1RKYVJGRXdUa2RaTVUxVVVUQk5la2t3V1hwak1VNUVaekphVkdNMFRrUm5NMDVxWTNsT1JHdDAweFVBQUROQlIwZ3hRVWRXTWtGUlNESkJiVXh0UVVkTU5FRnRXakJOUjFwdFdtMU9iVUpIV210QmJYUXhXbmRNYTBGUmVERmFSMHd4UVVkNGJWcEhXak5CVVVRd1RYZHdhMXA2VERKTmQwUnNXbTFTTUVGdFJEUkJSM0F4UWxGWGVrRjZXakZCUjFwclFYcFdNbHAzUlhaQmQzQXlURWR3YkVGUlNESkJSMFYxUVhkV01WcEhTRFJhYlhRd1RIZEZkMEYzU0ROQmJWcHRRWHBFTUVKSFRETmFiVWd5UVcxYU1FRlJVakpOUjFveVdtMUlNVUYzV2pSQmJYQnRRbEZNTkVGUlJHMUJkMFJzUVhkYU1WcDNXakJCUjBReFFXMVhka0Z0ZUROTVIweHJRVlJFTWxwdGNEQmFiVVF6UWxGSU1scHRWakpDVVVWMVdtMU1NVnBIU0RGYWJYZ3hRWGRhTlVGdFNHeE5kM0JyUVcxNE1FeHRWM1phYlZZd1RVZHdNVUYzY0ROYVIweHRRVzFPTUV4M2NHeGFla3d4V2tkRmQxcHRWakpNYlV3eVFVcFNNa0pSUkRSYWJVd3hRVWRNTWtGM2NERk1SMHh0UVZSSWJVRjNjRFZCYlU0elFrZEZkMEZIVGpCQlVWb3pRWGQwTWsxUlYzcGFiVll3UWtkSmRVRjNSREJCVVZkMldtMXdNRTEzY0RCYWJVUXhXbEZ3YkZwdFJHMWFiVnBzUVZSRWJFeDNUWHBCZDB3d1duZE1ORUZIUkRCQ1VYQXhRVkZhTWtGUldqUkJkMUp0UVcxd05VRkhXakphYlhCc1dtMTBNRnBIU1hWQk1sSXhXbTFNYkVGdFdqRmFSMXByV20xME1rMTNXbTFCVkVodFduZE1NMEZVUkcxQ1VVaHJRVWRNYlVGSFJYVkJSMDR3UVZGRmQwRlVUREJCZDB4dFdtMU1Na0ZSY0d4YWVreHRRVkZ3YkZwNlREQk5VVVYyUVZGV01rMTNWM1pCYlZJeVFWRmFha0Z0VWpOQlVVZ3hRWGRJTVV4SFdtMWFlbFl4V2xGYU0wRlVTRE5CUjNBeldtMUliVUYzY0cxQmVsSnRRWGR3YWtGSGRESk1kMFExUVRKU01reEhUWFpCYlV3d1FsRkZlbHB0V2pCTVIwMTZRVWRTYlVKSFdqUkJlbEpzVFhkTU1VRjNVbXhOZDNBMVFYZGFNRXgzY1hWYWJVd3dUVWRYZGtGM2NESk5SMHcxUVVkd01rRjNXbXhCVVZZeFFsRklhbHB0VmpGYWJVeHRRVzFXTUUxM2NHeEJiVm96V25keGRVRnRXbTFCZDAxMlFXMUlNMEZ0UkRSYWVrd3lUWGRNYlZwdFJESk1iVVEwV20xU01scDNUREZCZWt3elFYZEVOVUYzUkRKYWJVUTBRWGQ0TTBGSFdqVkJiVXhzVFhkd2FrRkhVakJhYlZvelFWRndNa3gzV20xQmVrUXlRVWRYZWtGSGVEQkJSM0YxV20xNE1GcEhUWFZCZWt3elduZE5lVUY2VWpCTmQwdzFRWHBJTTFwUlNETmFiVTR5UVhkYWFrRjZURzFDVVhCdFdtMXdiRTEzU0cxYWJWSXpXbmRJTTBGNlVtMUJVVTEzUVcxTWJWcEhUR3RCUjFveFdsRndNMEZIU0cxQmQzQnNXbTFNTTBKUlNEQkJla3d3VFhkWGRrRkhWakJNUjBWNVdtMVNNbHBIUkROQlIxWXlRVWRJYkVGSGNHMUJSMGcxUVVkTU1VRlJjR3hCYlZJeFFVZHdNRUZSZEd4TmQwZ3dRVlJhYlZwUlRHMWFiWEF3V2tkRU1scHRkRzFhUjFwc1FXMUVNa0ZIVFhkQlVVd3hRWGRJTUZwdFVqSk1kMDE1UVVkd01VRjNjRzFCYlZJelduZHdhbHB0ZURGYVVWZDJRVWRhTTFwUlRYZEJiVXd4UVcxSWJFRnRSRE5hVVVocVdtMTBNVnAzUkRKYWJYUXhXbTFNTkVGNlNEQkNVVVJ0UVZGYWJFMTNUREJCVkZveVFYZE1NbHA2VEcxYWJVMTNXbTFFYlZwdFNYVkJiVkl4UVZGTU5GcHRkREJCVVhCc1FXMTBNMXBSY0RGQlIzZ3dRWGRNTkZwdFVqRk1SMDEzUVcxT2JWcEhSWGhCVkZveFdsRndhMEY2U0RGTVIweHJXbTFJYlVGUmNHcGFiWEF4UVhkTU0wRktVbTFCYlVneVdtMVdNbHB0Y1hWQmJWSXhRVzF3YlZwdFRqQk1kMW8wUVVkYU0weEhUREZhYlV3eFFYZE5lVUZSZURKQlVVZ3lRVzFFTUUxSGNERkJkM0J0UVcxYU1scHRlREZhUjBSc1ducE1iVUpSU0RCQk1sSXpXbTFFTUVGM1NESk5VVnBzUVcxRU1VRjNTRE5CYlV3eVRFZE1hMEV5VWpCTWJVVjJRWGQ0TTBGUmNHMUJiVVF4UVVkSU5FRjZURzFDUjBReVFYZDBNazFIU1hWQmJWSXdRVWRhTlVGdGVHMUJiVVJ0UVhkTU1rSlJTRFJCUjB3eFRFZHdNa0ZIUkRGQmJYQnRRVEpTTTBGUlNEVkJiVVF4UVcxRWJWcHRjREpOZDBocVFWRlNNVnBSY0RKQlVYQnRRVkZ3TWtGSFVqTkJiVmQ2UVcxTU1VSkhjRzFhYlZvd1RWRlhka0ZVV2pGQ1VVd3dRWHBJTVV4SGNHeEJSM0F6UVZGSU1GcHRlR3hNZDFwdFFVcFNiVUYzY0RKQlVYQXpRWGROZDFwdFVqSmFkMGd6UVcxU01FMUhUWGxCU2xJeldsRmFhMEYzUkRGQmJYQTFRVkYwYkUxM1JHdEJSM0F3VFVkTU5FRkhUREpNYlhBd1FYZEVNMXBSVFhkQmJVUXlRVkZ3YkVGdGNHRlJSR013Y0hwNWFHNUxSVFZXVVRCMFZ6QjVZbTkyWjBSdlNWTjVjbEpUZVhGUU9XcFpNalZyUmtwd05FZEpUMjF3ZDNreFdtMVBabTlLWnpCdU1tdFFjRWcxU1VSNlNUQkhiVUZqV2pBMVVVMHpUak5hU25WaVNraDFTVUZLTkRCRlZVRTBiM2hqYkVaNlRXdEdlbXN6Ymtwd05HOTVjVUpIYlVoc1dXMVRNVWRLZFd0S1VuUmxTVkY1WjBsdFV6RnhTakZXY0ZGQmFsa3pUMkZDVWpSbGNuZ3hNMHg1UVRWd2JYQTBTVk5GTlhCNGVHVmFTRk5DU2t0WFkwVXdkVWxhTW5WaFIxSk5iVWwzUkd0SmJEaHNTRlJUYkVaU1pqVkNWSGcxUmpCMWJYSjVSVFpLUzFOa1IyRlRZVXhJZVVod2VtZHVibEZQVVZneWF6VkpiVmRHU1V0QlRXNXRjWFpGVVVoc1NIWTVaa2Q0VWpWSGVuRXdTRXRhTkVwaFYydE1lamcxUVhveFYwMTVVMmR1VVVrMlIwZE1NVVI0TkdsRWJWTnNjRXBuTWxrd1oxSk5kMDFRV1RCclMzQklWbVZHVldOblFWVk1iVVF5U0d4eFNubDRXakJxWlVwU2EyMUZlazFwYjNseE1FZEtXbXh1TUZNMlFYaFRha2xoUVdGSE1GbzBTRXR4ZW05NmNVeHVWR3ROUWxGMWRVbExjWGhFYkdacFIzZ3dNVWxoVm1sRWQzbGpTbmhuU2t4SGVWaHlSMEZCVEd4bmVrWktRV05IZURBMWNYbEJiRWRUY0dWRWQxbzFibEZQWjI0emVXWkJWWEZVYjJ4bU5FZDZValJFTTBGMmIzaDFTWEJLTVRaSWJVRnRSSFk1UTFrelNETnVNSFZXU1d4bmRVaFNRV05JZDA0eGNWUkpaWEV5VXpGSWQwVkpSSG81UWxnelkxQktZVTl1V2pGVFlVbFZWMVJ5U1ZOM1IzbEpiVzVWVTNWSFNHTlJjVkpNTVZwS1owdEhSMDFsU0VkQlozSktTVFp5ZGpsUWNESmpSa1J0VTB4dVMwVkpRa2RTWlhKVVV6RnlVWGcxV2pOTlNrcDNSVzV2VWsxa2J6RkJSbkJ0UlRGSGJHYzBTRk5KYkVGNk1VMUhVVk5XU25kMVpFcGhWMjFOUzBGWFdsVlBia0Y0VTFGQ1VHZGpSV0ZhYVc0elFXbHlVR2RzUkRGRWJYQjZOWGxNUzBGalIwaDFkMGN6VDJOdlNqQnJXVzFhYlc1S09WRktlblJxV0RCME1rMWhVM1p2TW5GVFJuZHhNRTB6VTNkTk1GTnNSVWhYU1VGSVoyRkplalExY2xJeFpGcDJaMGxCU0dkQlFWTkZNMjVVTlRWYWQxSnRia2R4UVVKU01HdEtZWEUwUkVvd01uQXlOVFZ3VVhVeFRFaDRiWEJVTVdkQ1ZERXhRVkpUVlVWSFRXNUZWREF3V0RGeFdYSjNWMmxOU1U5RFNVcFROVXhKVTBkQmVVVXhiM281V0hKVlRXTkNVbWRaYmpOSlVVWjNRV3haYlZKdGJrbE5VMFZ0U1hsdVVqRTFUWHBKYTBoS1pqVk5NblZuUm5oNVUyOHpWMlZZTWsxQ1RYbzVka2N5VXpGdVNGZFhURWQxWVVReFRqVlpNVUUxYmxSbldFVlJjVUp4VkdvMVJucHhZWEJoVnpWQmVqVnFTa3RYWVVFeU5VbEdlamxMV2xBNWFVWkxZbXBhYkdkTFFYZEZTVnBIVDJORmVubG1RVkpOZGtWaFkwaHdTbE14V0RKMWVFbEtNVFJIVkRWa1RYWTVha0pLTldWYVNGTmxia2hhYlVWaFZteEJNM1ZUUkVsQlRWcFRlRE5hYlVsYVNWUjVhMFF3TUdseWVuQTFSSGhUZGtGTFFUWkNTRGsxVEVoWE5WaHRRVE5KU0RGTGJ6TmpiRWRUVjJaYU1FRmxXVEJKZVc1SVoyZEtWWEJyYjBwclkwUjRWME5FZDFOUGNrbEZhVTFJY1VWQk0yTlZUREJGV0VaVlUxRk1kMFZaU1hkSmQzQXpjVTlNU0VsSFJubHhZa2hVTlVoYVNEbDVTRWhyWm05VGNXbEJNSEZzV20xVGFXOXRWbWx3ZWsxcGJ6RnhNVWRLWTJkYWQxTXpSRWRCYWtsSVJXMUtSM1ZyVFhod05FZ3llVnBOVURsaGNGVmpZMjVKUld0dlMwOVJTRkZhTkhCdFZ6UkhTRWxRY0ZRMVNVRjRhMjFOUjAxNWIzZE5TWEZUZVdGTmVHZHRjVEk0YVUxSlFVaEpVa2t6UmpORmFsa3hlWGRCZUdZelRVaDVkM0V6VDBoQlIzbFFTa2R4YVVZd09XeEtlbVpxV0cxTmRraDRlV2xHUm1kTWJsVndiRnB0UlRaR1ZIVmhjbEoxWWtoNlRWVnhWRVV6UmxScWJVWXplRE5FUzNnelRWRlRZWEIzZVZoQlNtSnBXR3c0TVhGdFRXRkdlamxEV2twTldVVnRSVWx4U2pGcFNraGFNSEY0WjNaSlNXTlZUSGRKWVZveVFXcENVVnByY1VkNVEyOXRjVmhNZW5sTmNrbElNMEpRWm1WdVVqQnFSa3B3YVVsSmVHeElSbWRLY1ZKcllrSkxkREpaTTNsTmNucHJRMXBoUVZGSlMzVnNRbE5qTUhGU1oyVk5SbVl5YjIxSWFVMVJUREpKU1hsb2NuaFRRMEY2Y1ZOeVMwZ3ljRkZGTUhKUmVWSktSbWRtV2xReFRVVkdPVE52U210c1RFZFROVWRJWjNwRU1IQmxSbFJGYVhCM1UyRktWRFZqYjNwMVNVcEthekZ2ZW1OdFJVbDVOVzh6WTB0QlNHTlpTWGRCYm5GUmRXdEVkM0YzVFcxV05VUktaak51TVU5QlIxUXhkMXBIUkRCTlNERnFXbTFhYlUxNmVVbHZNMWRUU1Vwd05VcDZkWGhFUjNsblRXMVhaMGg0YTFodlVVRmtUVWhUV1VSS2VETkJSMFUwUlRKak1FMUhRVlJhTWpsaldUTlBOa1JKU1ZCYVVrZ3lTa2RUU2tWM2RURkNVVm8wUVZWRU1ISklhMk5FTTNWTlRVWm5hMHBJZVd4WU1EbFhUVkJuYVVkSmRWbEdVVTFEY0cxYU1XOWhTVkJLU2psclFrbzVZa2w2U1daWWJWWmxSVEZOVFhCSlkyeHZWSEYxY0RKNVFuRXdTV3hCVUdkQ1RHRlRSVWg1VmpGTVIzRnBTVXRGVFc5SlRYaHVlbXRxU0ZGU05VRlNkVzFNUjBsWVNIaHFiRXd3ZVdkSWJYbGpRbFJGVlVaNVFUUkpWRGxzUlhsRWFuQjRVakpFU2pBMVNYbzROVVZWUVhsSFUwdzFja2cwTlc1SFNEUkpTMVpwUVVsTmVFRkthbVZ1TVU4MVRUSmFaWEF5ZVZSSlNYVkJiMjFPTVUweFNHeHVSMVl4V2xKNVRVZEplVEJOTVVsRFJVZHdhMGh0UVhkSVIwMDBjWGwxWTFwdFRHeE1NMEZOUVROQlprY3pRVUZLU1VSbFduZE1OVzlUWTJWd1VYRnBTWHA0YVV4aFUydE5NbkZKY2twTk0wcElNRzFhVW10Q1FsSldNVVJIZUdwWU0zbE1RVEZOYVVSM1RqSkdNa2xrY1dGMWFHNUhlVzF3WVhWUlRUSTFiWEpIUldKS1NsTnNjSGcwYVVjeWNYVkhWRk0xVEhweFJVRlNTVmhKU0hWU2NsRnhaM0JVWjBsSmJVMVBjSFpuYmxneFFXdEdNRTFuU1ZSd2FYRXhXakp2U0RGQlNVbzVabHBWVm1sSlNFVlZjWFpuVEZwS1JUTndlbmxyUVRKMFpYRjNjVzF2ZUZadFJrcHhWRTFLZERGdVVtTXdXREpUZDBWaFdtcHZTVTQxUkhwcWFVY3pWMDFOZUhsa1FsUnhaVUV6VDFadVZVOWljVWhuVTAxUVpqVkpWRGh0UVV0TU1VVlVjVkZ3YlhGS1NucHFiRzR3WjBodlMwOXBiak5CVVVneU1EQkJlbkZaUWtveFpVWXdUVmRJTUZONVFrWm5VVTFIVERCSFVVRkNSblk1YTBGSlYyZEpNa0ZRU1hwd00yOTNVMXBOWVVsbFRXRkJNVWxoWTFWdVMyTlBjbFJOVWtReU1VVklVVTFXV2xSeFNVUjNjV05HTWtsaWIzcFNOWEJWVjAxeVJtZElSVlExTTFvd1kzaHlkM2hyY2toMWVIQXhTVXB2ZWtWYWJrcDBNVm96VjNsRU1rRlZSMU5OTWtkSFNXZE5VWEZUY1hwMWVVSktTVTl1ZDBGTVNIbEpOVXh0VTFCYVMzbEhXRzFUYlVVeWEwOU1la1V5UVhobldHNXRkVkZHTUVRemNEQnJkVUZTYTJOWWJVMWlRVlE0YTBwS2EwbEpNMGxCYmpJME5HNTRRVEJIVTBRd1FsTlhVMXBKUkRCdVNVMXFiM2Q0TW5CNlowVndNbEl6Um5obmFIRjVRV3h3U0ZkMWNFaG1NVzl0VTBkR01sSmxXVE5OWjBSS05EQkdZWFZYY1hkeFQwMVJlR3RCVlhsNWIwZElhVVl4UlZOYU1VRnNibmg1YkVKVmRXZHhiWEZwUVRKRmQyOHdWMjV1TW5sS2NYZDVhRmx0Vm10WU0wMWxRbFZJTTFsdFdqVkNTbmwxUVZKclJFUXhTRzFOU2pneGNYZE5WM0F6Vm1WRmRtZFNiMHBNWlZneVNESnVlbkZYYjNwSlJVY3hWakZ2UzA5WVFrWm1iRm93WmpKdU0wRkdiMGxQV0VGNWVUSnZWWEUyU2tweFVYRnRTWHBhZDAxcWJrbEZZMEpLZEcxSFVuaHBSMVZKTlc5dGNVTmFZVmRYV0ROVFdFRXdZMGhhZVhWQlRFb3hWa1o2Y0d0QmVrMWpURE5TTVhBd2VUSndVbWRJYmtabU1rMTRPVEZFTTBoc1FVZ3hka0pIZFhwSVIzbG9SREo0TWtKU2EwdHZZVk40Y2t0NE1HOHhjVkZCZW5sQlNUSkJZVTF0VFVoQ1NuRm9USGRNYVVReWEwWmFWRk5sUkcxQmJrVXdNVUp2VVVScmIwdFdNSEo1ZVVwQ1NVOHhjRlJYWTAxUlVteEVTMEZtV25kQlVYRlNaelZDVkhBMWIwcEpURUV5T0d0YWVqVjFTVkJuYUc1S2NVeEJlVWxhU0RGSWJFWkplVkZhYkRsTWIwbFRaMXBWU1ZaSGJVNHljbEZYZVVWSFNXbE5lVTE2Y0ZScWJFeEpkREZ4TUhWcGNsUlRUMGg1ZVhsR2VFVkJSVWR4UjNCSGNERllNMWRGUm1GUE5YRktPVmRNZW5sTlRYbEliRzVoUVUxYVVrVTJjRWhFYVVWNWRXMUpkMGd6UjFGSU0wRjNkVlZCVWtsRFFraHdNa3d4ZEd4SVVrUnJUWGR3YW04d01XWnVkMDVzYjJGWGJVcDNjV2h4VTFZeWNVZFhTRVl5VjIxQ1VsZGpSREpOZDBoM1FXTnhTalZ1UmpOVFVGZ3lZak51VkdkNlNGTkZiRzVKU1V0eFNFMW5RWGQ1VVhFelJVZEJSMUl5V2pCalptNVNaMlJZYlhGM2NEQkpaVUV5WWpGd2VVbFBUVVpuWjBsUU9UTkVNMU5FUWtsTVpYRkxkR3BGZUdOMldUSmpXa1ZMVTJoTWQzaGxjVk5qVlVwNGNEQmFWSEZHY0ZWV1pVaDJPVTlNTTNsVFNraE1aWEV3U1VSQmJEbFFSM2xOWjI5UlUzcE1TMVkwUlhsUFNXNUxTRE53U1ZOc1FXRjVTMGxIVTBaeFMwZ3pXakJhWlVwVWVWUk5kbWN3U25abU0weDVVMmRLU0RsTlJrbEpNa2xJVFVGSmVWTm9RWG8xU0hCSlFXeEdlR05wV0cxd00xcEtVMU5GYlZOaldUTlhiVVpUZFdOSlNtWnRSRE5GV0ZwM2VXWnVVbVl6Y0ZKQmFVWjZWakZCWVhGaFRWVk1OVWd5TUdWRlNuVm9XVEJKTVVGNVYwOU5kM2xDU1VwV2ExcElSR2x4U1ZJd1REQXhURmt4ZFcxeFZIZzFTRlI1ZWsxSFUxSkNTVXcxVFZSeFduRnNPREJNUjBGTlNVWTVia1JKU1ZGQmVYVjVXVEZQWjFsdFJHbEZTM2hwV2xKMVltNWhXbXBJZUZORlRURkVhVXg0UVd4RlZFVjNRa3RJTTBGVVFXeEhTMk5UV1RKWGJVeDZZMnhJU21JelRIZE1hVWN5ZVhWdmVIbDZjRzExVEVaSU1HVkplbmxuUjB0NGFrRmhUbVZIU0dwc2IwZFhSMEpIU0RKS1MwRmFSa1k1YlV4NFRHeGFlblJxUlZKYWJIRkxRVlpKUm5CQlVIbzViRXhLUVdaTlJrNDVWbEJ3YkV4M1RYVkJSMDV0V2xGTWJGcDZWakJCZDBWNlFVZFNNMEZ0U0ROQmJVUXlURzFGZDBGdGVESkNVVXd6UVRKU2JVRnRTRFJCZDNCdFFrZHhkVUY2VERKTWQxb3pRVkZhTWtGM1dqTkJWRWd5UVcxRU5FRnRXakpNUjFkNlFWRk1NRTEzVFhsYWVsWXdURzFYZWtGM1JEQmFSMDE1UVVkU01VRkhXakphYlhReldsRlhla0ZIV2pGQlIxb3lRVlJTTVZwUlNYVkJWRm96UVcxTWJFRnRXak5CVVZvMVFWRndiRTEzVFhwQlIxWnNUSGR3YkVGUmVEQmFkMHd5UVVkT00xcEhSWGRCZDNCc1RYZGFiVUY2VWpGYVVVaHJXbTE0YlVGM1JEQmFla3d4V2tkSmRWcDZWakpNZDB3eFFYcGFNMHhIU0RKQlVYUnRXbEZGZFZwNlRHMUNSMFF4UVhkYU1rSlJWM1phYlU1c1RYZE5lbHB0Y0RGQ1VWb3hRWGR3TUVKUldqTkJiVVF4UVcxWGVrRkhjRE5DVVUxNVFUSlNiVUZ0UlhoQlIxWXhRWGRhTUZwdFdqQk1iVm96UVVwU01GcHRUREpCZWxKdFduZHdhMEY2VERGQ1IwbDFRVkYwMHhVQUFFVXdUWHBOTUU1VVNURk9WR016VFhwUk0wOUVWVEpPYWsweFRsUlpNazVFWTNwUFJFcHBUbTFOTVU1NlRUQk9WR3N5V2tSWmVVNVVVVEpaZWxVeVRsUlpNVTFxV1RKTmVra3dXV3BaTlUxdFdUQlBSRkY0VFhwRk1sbHFZM2hPVkVVelQxUlZOVTV0VFhwT2VrMTRUbXBOTWsxNlZURk9la0V5VFhwTmQwNUhWVEpPUkZwc1RsUlplazFVVlhwTmVtc3pUVlJWZVUxNlNUSk9WRkY1VFhwTk1sbDZWVEpPVkdzeVdYcFZNVTU2VVRCYWFtUm9UbFJuTUZwVVZUTk9iVTB4VG5wVk5FNXRWVEZPVkZVeVRrUlpNVTVVV1RST1Iwa3lUbnBSTWs1VVNUTk5lbU41VFhwWmVrNXFXbWxPZWtFd1dYcFpORTU2WXpKWmVsWm9UbFJCTTAxVVRUSk9hbXN4VG1wUk5VNUhVVEpPYWxreFRtMUpNMDVVVFRKT1ZGRXdXbFJOTWs1NmF6Qk9lbU4zVGtkTk1VOUVaR2hPYlZFd1RtcFdhRTU2UlRKWlZGRXhUa1JSTVUxcVZURk9hbXN5V21wTk1rNUVhekZOZWxsNlRrUmpNRTU2VVRGT01rVXhUbXBTYlU1NmF6Tk9SRlYzVG0xUk1rNUVWWGxPYW1jeFQwUkthVTVIUlRCUFZGVXhUa1JOTUZscVRUVk9la0V3VGxSak5FNVVZekJaVkZKcFRYcFpNbHBxVFhsT1ZGVXlUWHBTYVU1SFNUSlphbU14VG1wbmVrNUVWVEpPVkZWNlRucFZNazV0VFRGUFZFMTRUbFJWTUU1RVl6Qk9ha2t6V1ZSWk1VNXFUVE5QUkdONVRsZEZlazFxV1ROT2JWa3lUMVJqTVU1dFVUQlplbEV6VG1wck1rMXFXbXBPZWxrd1RYcFplVTVFV1RGTmVrMTNUbnBGTUZwcVdUQk9hbXN3VFZSYWFrNVVZekpQVkdONVRrZEpNazE2VFRKT1IwVXlXbXBWZWs1SFRURk9hbU0wVG1wSk1VOVVZelZPZW1NeVdtcGpNRTU2WTNwTlZGSnBUbFJuTWxwVVVtbE9la0V4VFhwWk0wNVVWVEZOVkUwd1RYcEZNRTE2VFhoT1JFVXlUMFJSTkUxNlFUQlpWRTB5VFhwbk1FNTZXbXRPUjBsNlQxUmFiVTU2UlROUFZHTXpUa1JSZWs1cVdtcE9iVWt4VDBSamVVNXRUVEJaVkUxNVRsZEZNRTlFVW1sTmVsRXhUbXBWTTA1VVVYcE5WRkpxVFhwRmVWcHFXVE5PZWxsNlRVUk5kMDVVU1RKTmFsVTBUbXBGTUZscVZURk9hazB3V1hwU2FFMTZUVEZQUkUxNFRsUlplVnBxVlhwT1JHTXlXbXBqZVU1dFdUQk9lbFpvVGxSamVrOVVVVEpPVkVreFRYcFpNVTVFWXpKYWFtTXdUbnBCTUU5RVZtaE5iVmt3V1ZSVmQwNXFTVEJPVkUxNlRsUlZNRnBFV1hoT2JWRXlUbFJTYlU1RVNUTk9lbFV5VFhwck1VNXFUVE5PVkUwd1dYcE5NazVVU1RCUFZGVjZUbFJaTUU1VVRUTk9lbFV6VGtSU2FrNXFXVEZPUkZVd1RtMUZlazVxV1RGT1ZFMHlUbXBqTUU1dFZUTk5WRnBxVGpKRk1rNVVWWGRPVkZVeVdrUldhRTVVVlRCT2VrcHRUWHBuZVZscVkzbE9WRUV3V1dwa2FFNUVZek5OUkZVMVRXMVpNRTVxVVRKT1JFa3pUbnBaTkU1VVRURlpWRnByVG1wUk1FNXFUVFZPVjBVd1dtcFZlazVFYXpCTmVsVXpUbTFSTTAxVVVURk9hbEV5VGxSTk1rNVVWVEpaZWxWNVRYcFZNMDFVVW0xTmVsa3lUbXBqZVU1NlZURk5WRmt6VFhwRk1rNXFTbWxPZWxVd1RtcFJNRTE2UVRCUFJGVjZUbTFKTWs5VVVUTk9hbEV3V2xSWk1VNTZRVEJPYWxWNVRucEJNazlFVFRWT1JFMHhUMVJqZVU1NlVUSk5hbEV5VGxSSk1FNTZUWGhPUkVVelRtcGpkMDVVVVRKYVZGbDZUbnByZWs5VVdUTk9hbU13VG1wVmVrNUhTVEZPYWxKc1RsUkZNVTE2VW1sT2FrVXlUV3BqTUU1cVJUSk5hazE0VFhwTk0wNUVVVE5PYlZVelRYcFZlVTVxVFROTlZGVXhUbTFaTTA5VVZYbE9WRTB5VDFSak1rNTZaek5OZWxVd1RsUlJNazU2V21sT01rVXhUbFJqTkU1SFNUSk5WRkY2VGxSTk1sbDZaR2hPZW1zelRYcE5ORTE2UlRKUFZGcHNUa2RKTWxsNlNtbE9hbGt5VG5wak5VNXRTWHBPZWsweVRtMVJNazVxWTNwT2VrRXhUWHBaTlU1RVZURlpWRkV5VGtSTk1VOUVVVEpPVkZVeFQxUlplVTU2YXpCT1JGVTFUbTFKZVZscVZURk9la1V6VFVSVk5VNUVXWHBPVkZKclRucHJNazU2WXpCT2VtTjZUV3BrYUUxNlVUQmFWRTAxVG1wak1FOVVVbTFOZWtFeFRrUlNhazVVVFRCWlZGVTFUbXByTUUxNlZUSk9iVmt3VG5wWk5VNUhTVEJPZWxsNFRtMUpNRTVVVm1oT1ZHTXlUbXBWTlU1cVRUSk5WRkpvVFhwWk1GcHFWbWhPYWtVeFRYcGpkMDVFVFhwT2FrMTRUWHByTUU5VVl6Qk9lbXN5V1hwTk1rNVVVVEpQVkZWNVRucFJNMDFVVVRSTmJVbDVXV3BWTUU1RVZUSk9hbFV4VG1wUk1GbHFXbXRPVkUwd1drUlNhazVVVlRKUFJHTjRUbFJOTWxsNlVYcE9WRTB6VFVSWk1VNXRWVEZPZWtwcFRtMVpNazU2V1hsT2VtTXpUbXBqZUU1SFZURk5SRTE0VGtSRk0wMXFZelJPUkVsNlRucE5lRTU2UlROUFZGa3lUWHBGZWsxRVRUQk9hbXN6VFhwYWFrNVVTVEZPYWxVMVRYcFpNMDVVWTNoT1JHc3lUbFJqTkUxNlFUTk5SRlUwVGxSck0wOVVUWHBPUkZVeVdrUmFhMDVVU1hwUFJHTTBUbGRGTUZsVVZURk9iVVV5VFhwU2FrMTZhekZOYWxwcVRrUlpNRTFVVVRST1JFa3hUbXBWZWs1NldUSlBWRXBwVG5wRk0wOVVWWHBOZWxWNVdXcFZNVTVIU1ROT2VsSnBUWHBCZWs1RVdtMU9ha1V4VG1wUk1FNVVUWHBOYWxWNVRtcEplVnBxVW0xTmVrVXdUMFJaTlU1VVJUSk5lbFY1VGxSWmVWcHFUVEJPVkZWNlRWUlZlVTU2VlRCT1JGazFUbFJuTWxsNlVYbE9SMVV3VDBSU2EwNUhVVEZOYWxab1RucEZNazFVV1ROT2FrbDZUV3BSTVU1RVl6QmFWRkpxVGtkVk1VNUVXbTFPYW10NlQxUlZlVTV0UlROTlJHTXhUa2RKZWs1RVZUVk9la0V6V1ZSamVVNTZRVEJhYW1NelRqSkZNVTVVV21oTmVtZDZUV3BOZWs1NlJUSk5lazAxVG1wRk1sbDZVbWhPYlZsNlRVUlJlRTVxVVRGUFZFMTZUa1JaTUUxVVdUSk5lbEV3VFZSU2FVMTZVVEZPVkUwelRsUlJNRnBxV1RST2FtY3hUV3BaZWs1dFJURk5SRmt5VGxSWk0wMVVVVFZOZWxFeFRsUlJNVTVVVlRKT1JGVTFUbnBCTUZwVVZUQk9lbXN6VGxSWmVFNUhTVEJhYWxwdFRrZFZNazE2VFhkT1IwMHlUMVJTYlU1NlZUSmFSRkY0VFhwbk1scEVWWHBPYW1zelRrUlZNRTE2WnpKTmVscHNUbFJKTWxscVl6Sk9SR3N6VG1wTk5FNUVSVEZOVkUwMFRrZEpNMWxVV20xT1ZHc3lUbFJqZWs1VVRYcE9WR040VG1wRk1rOVVUVE5PZWsweVdrUlJlazF0U1RCT2VsRjZUbXBKTUZscVVUTk9hazE2VDFSamVFNUhWVEZPZWxwdFRtcEpNRTVxVlRST1ZGVXlUV3BhYVU0eVJUQlphbHBvVFcxWk0wMVVWWHBOZWxreVQwUlNhVTVFWnpKYWFsSm9UWHBGTWs1RVl6Vk9WRWt3V2xSamQwMXRXVEpaVkZVeFRucHJNRTFVV1RKTmVtY3hUMVJWZVUxNmEzbFphbEpyVG0xWk1rNTZZekpPVkVVeFRsUlplRTVVVVROT1ZGSnRUbnBSTUZsVVdtaE5iVmt4VFhwUk1VNVVXVEJaYWxWNVRsUk5lazE2VlhsT1ZFRjZUbXBWZWsxNldUSmFSRmw1VG1wUk1VNVVaR2hPUkVVd1QxUmplVTVFWTNwTlJGVTBUbXBaTUU1VVZYaE9hazB5VFhwVk1FNVVUVEpQVkZsNFRtcFpNMDE2Vm1oT2JWVXdUbFJqTlU1VVl6Tk9hazB3VG5wQk1WbFVZelJPVjBVd1RsUk5NRTE2VlRKWmFsbDVUbXByTWxwVVVUUk9hbWN5VFdwWk1rNXRWWHBOUkUwMFRtMUZNRmxVVW14T2Ftc3hUVVJLYVU1WFJUQlBSRTB5VG5wRk1VNUVXVFJPUjAweFRtcFNhVTE2V1RGT1JGbDRUbTFOTVUxNlVtbE9SMWt3V21wVmVrNXRXVEZPUkUweVRYcEJNbHBVV1RCT1ZGVXhUWHBLYlU1NlJYcFBWRkV4VG5wQk0xbFVZekJOZWtsNlQxUmplRTE2VFROUFJHTjNUbTFKTTA5VVVtcE9SMWt3V21wWmVVNUhTVEJPYWxwc1RrUnJNMDFFWTNoT1JHY3pUVlJaTVU1VVNUQk9la3B0VG5wak1VMXFWWGhOZWtsNlRucFJNMDV0UlRGT2FrMTRUa2RSTWxsNlVYbE9iVlV6VDFSak1FMTZaek5OVkdNeVRucFJNazE2WTNkT01rVXlUMFJqZWs1dFdUTk5hbEpvVGxSTk1sbDZXVE5PYW1jeVRYcFNhMDVYUlhwUFJHTTFUbnBKTTAxNlVtdE9la0Y1V1dwYWJVNVVUWHBPUkUweVRsUkpNazE2VFhkT1IxVXhUV3BqZUU1dFVUTk5WRkV4VG1wbk1rMXFTbWxPZW1NeFdWUmthRTU2UlRCYVZGVXdUbTFSTWxwRVRYcE9WR3N5VFZSU2FrNUVWVEJaYWxFd1RucFZNMDlFWTNsT1ZGVXhXVlJOTVU1VVozcE9WRlY0VG0xRmVrNXFZek5PVkdkNlQxUlZlazVxVFROTlJGVXdUbTFGTVUxVVdUTk9WR3N4VGtSak5VNXFXWHBPYWxVelRYcFpNMDFVVFRST2VtY3pUV3BqTTA1RVVYbGFhbGw2VG5wVk1FMTZWVEpPUjAweVdXcEthVTE2V1RGWlZGcHFUbFJCZWs5VVl6Rk9ha1V3VDFSWk5VNUVTVEZOVkUxNlRYcG5NazlFVlRCT2VrMHpUMFJOTlU1RVZUQk5WRXB0VGxSVmVWcHFUVE5PYlZWNlRYcFpORTVIV1ROUFJHTXdUa1JqTTA1cVpHaE9ha2t6V1ZSU2FVNXFWVEJaYWxVMVRYcG5NMDFFVVRKTmVsRjZUbFJaTTA1cWF6Qk9WRXBwVG5wVk1WbFVXWGhPYlVVeVRWUlJNRTV0VlRKWmVsVXdUbXBWTVUxVVdYbE9SRmt5VG1wU2JVNTZWVEZOVkUwelRYcEpNRmxVVlhkTmVsRjZUbFJTYVU1cVJUTlpWRlUwVGtSak1VNVVVbWxPUjFVelRYcGFhRTV0VFRCWmFsVTFUa2RGTTA5RVVtbE9SMWt5VGxSYWFVNXFZek5PUkZwb1RYcEpNMDFVVFhkT2VrVXlXa1JaTkU1VVZUQmFWRmt4VGtkTk1VNUVZM2ROZWxVd1RtcGplRTU2YXpKYVZGSnRUbFJyTUU5VVl6Uk9WRWt6VGtSVk1FNXRSVE5QVkdOM1RucFpNRmxxVW14T1JHTXhXVlJTYUU1VVNURk9SRlY0VGtSWmVrNVVWVEpPUkVreldWUmFiRTVxYXpOTlZFMTRUbFJuTWs1VVZURk9hbGt5V2tSU2FVNXFVVEZPYWxVelRrZFZlazlVVW14T1ZFMHlXbXBhYWs1cWF6Rk5SRkpwVG0xRk1rMVVZM2hPVjBWNlRWUmplRTVxWnpCT2VsRTFUbTFSTVU5RVVYbE9SRlV4VFdwUk0wNTZRVEZPYWxrd1RtcEZNVTFFVW1wTmVrMHpUMFJrYUU1WFJUQlBWRkUwVG0xVmVrMVVVWGhPUjFreFdWUlZlRTE2YXpGT2FsVjNUbnBuTUZsNlVtdE9ha1V5VG1wTk5VNVVVVEpQUkZKc1RrUlpNMDFFVlhsTmVrVXdUa1JTYkU1NlFUSk5lbHB0VFhwUk1rMTZZM2hPUkZFeFRVUmpORTU2WXpCYVZGRXhUbFJSZWs1RVdtdE9hbWN3V2tSUk0wNVVWVEpPVkZwcFRsZEZNbHBFV1RCT2FsbDZUMFJaTUU1Nll6Tk5SRkp0VG0xTk1GbHFVbXhPUkZVd1dYcFJNMDVxVlRCUFZFMDFUbnBOTTA5VVZUSk9lbWN4VFZSak5FMTZWVEJPYWxWNVRYcEZNVTE2VVRKT1JHTXlUbnBaZUU1dFZUTlBSRlV6VG1wTk1VOUVWVEJPUkUwd1RsUldhRTVFVVRCYWFsSnRUbnBOZWsxVVl6Uk9iVlY2VDBSamQwMTZUVEJPVkUwelRsUlZlVnBxV214TmVrRXlUV3BqTUU1NlNUQk5WRkpzVGxSUk0wNXFXVEZPVjBWNlRrUlplazVVUVROTmFtTjNUa1JGTVUxRVVtdE9WR2Q2VDFSS2FVNUVXVEphYWxrelRtcEpNazFxVFROT1ZGVXlUVlJOTkUxNlVURk5lbGsxVGtkUmVWbHFXVFJPUjBsNlRsUlJNMDVIV1RGT1JGRTBUakpGTUZsVVRYbE5la1V3V21wVmQwMTZWVEZOUkdONFRucEJlazE2VFhoT1IwVjZUbFJWZVU1SFNUSmFWRnBwVGtkRk1VMUVUVEZPUjFFeFRtcFZOVTV0UlRGTmFsRXhUa2RaTUZwVVdtbE9iVWt6VFdwWk5VNXRTVEpPYWsweFRucHJNVTVVVVhwT2FsRXpUVVJrYUUxNlVUQlplazB3VG0xUmVrMTZUWGhPVkVsNlRrUlJlRTVVUVRGTlJGcHFUWHBSTTA1NlRYcE9lbWN3V21wVk1rNUVZekphVkZVeFRrZFpNMDE2VFhkTmVtdDZUbnBTYUU1SFZUQlplbEUxVG1wbk1VMXFXWGhPZWxFd1RucGFhazVFWXpOTlZGVXhUbnBCTUU1VVZUVk5lbWN6V1ZSU2FrNUhVVEpOZWxsNlRYcFZNRTE2VVhwT1ZFa3hUa1JrYUU1NlJUQk5lbHBxVFhwbk1sbDZWWGxOZWxrd1RucGFhVTU2WnpKWmFscHNUa1JaTUZwRVdUUk5lbFV4VFdwU2FFMTZhekZPVkZFMVRtMVJNazVxVFhoT1JFa3pUbnBqTWs1NlNUQk9WRnBwVGxSbmVrNTZWWGROZWtFeFQxUlNhazVIU1ROTmFtTTFUbFJCTTAxcVVtcE5iVmw2VFhwUmVVNUhXVE5OUkdNeFRtcFJNMDFFV21wT1JGVXpUbFJWZVUxNll6Sk9lbEp0VGpKRmVWbHFXVEJPVkdzeFRsUlZNazE2YXpGTlJGVjNUWHBqTUU1VVZUVk5la1V4VG5wWk5FMTZaekphYW1ONVRrUnJlazVVV1ROT2JVa3hUV3BaTVUxNlZUSlBWRmsxVGtSRmVrOUVXWGhPUjFVd1RucEthVTU2UlRKTmFtTjRUbnBCZWsxVVZUQk5iVWw2VGxSVmVFNXFhekpOZWswMFRtMU5NRTVxWXpGTmVtc3lUa1JTYlU1RVZUSk5lbGt3VG0xWk1VMUVXVEZPUkZrd1RrUmpOVTVVUlRKTmFrMDFUbXBGZWsxVVZYcE9lazE2VFZSYWEwNXRUVEpOVkZwb1RsUk5NVTVxVlRGT2JVVXhUbFJaTkU1VVdUQlBSRnBwVG0xVk1FNTZZM3BOYlVreVQxUlpNazE2UlhwUFJHTXpUWHByTVU1RVRUQk9WR014VFhwamVFNUhTWHBPYW1NelRsUlplazFFVW1oT2JWVjZUMVJWTWs1dFJYcE9lbGswVG5wSk1VNTZXWGxPUjFVeFQxUmpNRTU2WXpKYVZGVTBUWHBOZWsxVVZUQk9SMWt6VG1wVk1rNVVaekZOUkZFMVRYcG5NVTlVVFRGTmVtc3lUMVJWTWsxNmF6RlpWR014VFhwck1FNXFVbTFPZWsweFdWUlZlVTU2WjNwT2FtTjRUVzFaZVZscVVUTk5lbFV3VDBSU2JVMTZTVE5PZWxFd1RYcEpNVTVFU21sT2Vtc3pUVlJaZWsxdFNUSlBSRkUwVG0xTk1rNXFUWGxPVjBVeVRrUmpOVTVFUlROUFZGVjNUWHBuTUZscVZUVk9SR3N6VGtSVk1rNVVVWGxaYWxVelRucEZNVTlFV21oT2FtY3pUMVJSTlUxNlZYcE9WRlV3VGtScmVrMVVWVEJPVjBWNlRrUmpNMDVVWnpCYVZGbDRUa2RGTVU1cVVUVk5lbFV5VFdwamQwNTZRVE5QUkZWM1RrZFJNVTE2VFRKT01rVXhUa1JaZWs1dFRURk9SRnBvVG1wUk1FNUVWVEZPYW1zeVdXcFNhVTU2UlRKT1ZGSnBUbnBOTTAxRVdUQk9iVlY2VDBSWmVFNXFaek5QVkZVd1RsUkpNazlVVlRKT01rVjZUMVJqTUU1VVZURk5SRTEzVGxSSmVrNUVUWGxPUjFFeVRWUmpNazVVU1RCT2FsRTBUa2RGTWs1cVVUUk9SMUV5V2xSak5FNTZRVEZPVkdONFRucFJNVmxVVVRWTmVrVXlUa1JOTlU1Nlp6Tk9SRkV4VGtkTk1rMTZZelZOYlZrd1QwUlNhazE2WXpOT1JHTjVUbFJWTVU1cVRUTk5lbU41V1dwTk1rNUVWVEJhVkUxNFRucFJNVTlVVFRCTmJWa3lUa1JaZUU1dFVUQlpWRkpyVFhwck1scEVZM2xPZWxrd1RsUlNhMDVxU1RGT1ZGRXlUWHBqZWsxVVRYZE9lbU42VFdwU2JVNXRWVE5OUkZFeFRucFpNazlVVVhsT2FsbDZUV3BWTVUxNldUSk9lbFV3VGtkSk0wMUVTbWxPVkVFeVRWUmFhVTE2YXpCT1JGcG9UbFJaTWxwcVRURk9hazB6VFZSYWEwNVVXVE5PYW1NeVRsUkZNMDFFVFRCTmVsa3lUMVJaZVU1VVNUSlBSRnB0VG1wTmVrOVVWWGhPYW1jd1dsUk5lRTVVWnpOT1ZGSnRUbFJWTVUxRVdtcE9Na1V3VGxSU2JFNVVhM3BOUkZKc1RsUk5NMDFFVlRSTmVtc3lUV3BSZVU1VVozcFBWRnBxVGxSck1sbFVVVEpPYWxFeFdWUlNiRTE2U1RCT1ZGcHJUa2RWTVUxVVVYbE9SR041V21wU2FVNXRWWHBPVkZwcFRrZFZlazlVVlRKTmJVbDVXV3BaTlU1VVZUTlBSRTE0VGxSck1rNTZaR2hPZWtFeVdsUmthRTVFVlRCTmVsa3lUa2RSTWxwRVdYbE9hazE2VFhwak1rNVhSVEZPUkVwcFRrZFZlVmxxWXpCT1ZGa3hUVVJTYTAxNldUSk5hbFY1VG1wbk1GcHFXbTFPVkVGNlRrUlplVTVxVFhwUFZFMDFUbFJWTUZscVNtbE9iVVV4VFVSYWEwNVVVVEJPUkZKc1RsUk5NVTFVV210T2Ftc3hUVVJWZWsxNlZUQmFhbU42VG0xVk1FMTZZM3BPVkVVelRtcE5NazF0U1RCT2VsVXpUa1JyTTA5ejB4VUFBRWR3YTBGVVRETkJSMFF6UVcxSU1VRjNXbXBhYlhneFFXMUVOVUZSVmpCQ1VWb3pRWHBFTTBKSFJYZEJla3d5VFZGSWFrRnRTREpNYlVnMFdtMVNNVXhIV2pWQlIwUXdRbEZ3TVVGSGVETmFkMWQ2UVcxTU1WcHRSRzFCZWt4dFdrZEliVUZIUkRKQlIwZ3pRWHBFTTBGUlYzWkJla1F6V25kTmVFRlJkREphYlhCcVFXMVdiVnBSU0d4YWJVZ3dRVWRGZUVGVVRETmFiVm93UVhkV01rSlJjR3hCUjB3eVdtMU1hMEYzY0RGYVVWcHJRWGRNTUVKUlJETkJiVWh0UVZGTWJFRlVVakJOZDFvMFFYcElNRnB0VEd4QlIzQXlRVkZJTTFwdFdqRk1SMDE2V20xRWJVRnRSREZhYlVnelFVZE1NVUYzV2pCQlIxb3pRVWRJYlVGdGNYVkJSMFF6V20xTmVscHRjREphYlVWNVducFdiVUZIUkd4YWJYQXpXbTFJTUVGdFRqRkJiWEJxV20xT2JWcHRjRE5hYlhodFdsRklha0YzUkROQ1VYQXlRWGRhTTB4SFRERkJWRll6UVZGd01VRkhVakpCYlZveFFYZDRiRXgzVERSYWJVZ3pXbEZhTlVGSFRqQk1SMFY1UVVkSWJVSlJURzFhZWt3eVFXMU1Na0Z0U0RKQ1IwZ3lXbTFNTUUxSFREQkJSMUl5V25kYU1VRjNWbTFDUjNBelFYZEVNVUZSU0RGQmJVd3pRVkZhTkZwdFRqQkNVVVY2V20xV01rSkhTRzFCVVhReVRFZElORUZ0UkRGYWQwZ3dRWGRJYlVGM1REQkJkMHd4V2xGSWFscHRUakpOUjBWMVFXMTRiVUpIY0d4QlNsSXdUVkZ4ZFVGdGRESkNVWEJzUVcxYWJVRjNTR3RCYlhBeFFXMWFNMXB0U0RCTmQxbzBRVzFhYlVGdFRYZEJiVll6V25kRU1rRjNTRE5NUjBSdFFYZElNMHhIY0RCYWJYZ3dURWR3TlVGM1JEQmFkMFYyV20xRU0weEhTWFZCVVVReFFsRndNVUYzVERKTlVWb3lRVlJhTWxwdFdtMUJla1JzVFhkYU1VRkhUakpCUjB4dFFVZFdNa0ZIY0RSQlVYUnRXbTF3TUVGSFNERkJiVVExUVhkSWJFeDNTWFZhYlVneFdsRndOVUYzUkRKTWQwZzBRWGRFTVVGM2NHdEJkMGh0UVhkTU0wRlJkRE5CUjFveFdtMTBNazFSU1hWQlVYQXdUVWRGZWxwdGRETmFkMFF5UVcxSU0wSkhjR3hCZWxZd1FWRmFORUYzZURCQlVWb3dXbTEwTTBKSFdqVkJSM0F5UWxGTWJVRjZURE5NUjNCcVFXMVdiVUYzY0RWYWJYUXdRWGR3TlVGUlVtMUNSM0YxUVVwU01rRnRUWFZCZWtnelFYZHdiRUZSVWpOYWJVZzBRWGRFYlVGdFdqSkJSMUl3VFZGd05FRlJkRE5hYlV3MVdtMWFNMEZIVFhoQmJWb3lURzFNTVZwdFdtMUJVVnBzUVcxd01FRkhXakphYlZveVFXMUlhbHB0U0RCQlIzQTFRWHBTYlVGSFRERkJiWGd3V25kYU5WcHRVakZhZDB3d1FYZGFNa0ZIVERKQlVYQXlURzFOZFVFeVVtMUJiVVEwUVZGME0xcDNjR3hCZDFJeVFXMUpkVUZIUkcxQlVWb3lXbTFNYlVGSFdqRkJSMDV0V25kYU1rRlJjREJCYlZveVducFdNa0YzVFhoYWJYUXdUVkZNYlVGM1JHMUJkMFF5V20xV00xcHRUREZhZWxac1RYZE5kVUYzZERKTlVVaHJXbTFJYlVGSFRERmFla3d4UWtkWGVrRjZVbTFhUjB4dFFYZHdiVnB0UkRKQmJYaHRRbEZhTWtGVVdqQk1iVXd5UVZGYU1scDNSREJhYlVReVFYZHdhMEV5VWpKYVIwVjZRWGRJTTFwSFRYZEJiVXd4VEVkd01FRlVXakphZDBRMFFXMU9Na0YzY0ROQlIwd3dRbEZ3YlVGdFNHMWFiVTEzUVcxNE0wRjNjRFZCYlU1aFVVUmpaVTFMZVdkTVNtZDVjSFpPT1ZaUWNXRnViWEZoV2pOUFNrWjZUVzVhZVVGRFNIbE5ZbTVLVTNkR2VHSTBiM2d4YTBaSVp6SnZTVTlvU0ZKWFNYQXljREJ5ZG1kc1NHMVdiRWwyT1d4R2VXSXdibFJXYVVGSFRESlpNMEZFUVhvd01VUjNjVlJJTW10TlFYbEJOVVl5VjFwTlNWZDZUVkZUWmtsS01YVnVTMUp0YmxSSlZrZFVPVVZOUzBGUlIzcGFNVXh0ZVZaR01tdHVSVXRYZVVGVU5UUkNTR2RLYmxWNVRYSlJjV0ZDU25sSVRUSkphWEIzVFZGd1VVVjRiMHBtWlVSNmFqVk5WRVV3Y25sSmJXOVNaakZHTUdJMWJrZElNazB5VmpGeFMzbFBRVEZ3WlhKUmNWTmFTbmxOUVcxSmJVRlRTVE5hU2tsbGIzcDFaM0F3TVhWd1NIbDNUWG8xYTFneU9WVkpNRXd4UkhvNWFVcFVPVXBhTTBWWlduaHhhVzkzUVVadk1GTnJSM2RUVTI1UU9VbHVkMDFhY0RCWFQyNVVkWHBCVVhsWVFrZzVZVXBTYTFkR1NYRmpSRW81UmtaTGRWaGFVWFZSY1ZKSlNFUktUV0pLZDNsaGJqSjFhM0JUWTA5TlNIbHJXVEZ4VmxwM1FXdGFSMDFIUVhoWGJXNVFaMGxKU1hWbFJIbzBORUZJTlZKSU0yTkNjVzExWmtsVWEwOVliWFZHYjFSRmVWcEhUMEZ3U0hWUWIzZE9iRXBVU1ZOSlVrVktibTFOTWsxM2VHMU5TMk5vY1V0NGFVWkthMDFCVWtsMlFVdEliSEF5Y0ROeE0zbExUVEZ4UzI0elYybHVlR3QzUm5vNWVWZ3lPV1JKYlhnd1JsUTVVMFo0TVZWQmJVbHRSREpCZVVoVU9HVkpSM0ZtYm5ablNVbHRjVFpGUm1ac1IxUkJSVUYzY0d4SFMzaHBUVWxUUlVsS1lqVndTMDlzUVRGRldYRjZOVnBGUjFNMFNYaDBhMDFIU1ZOTVNHZERRWGxYUTBWMk9ERmFTM1ZSVFVsNGFVcEpkV1p2U25GTVJURndNM0IzY1ZkQ1IwMTJja3BqWTBZd1Z6VkJTVTlXYnpGQlEyNUthMU5GU1VWRWJtRkJSRUpLZVcxYWJWWmxRa2xQU2tWSVNHdEpSM0F3UjFKTlprSlVlVXRJU1U5RVJURnhXVVJKZVd0d1lWbzBUSGROVm5CS1JVbEVNR05SUmxRNVVFcFNRV3hNZVZwc1NYbFRibkIzVGpWdk1HWTFTbEo1WWt4SGVYWkhVbkZCUlhkeGVrWlNkV3B5VlZOMWJubEphMFJIU1hweE1HZHJjbEZPWlVReVJWZHhTMU4xV25walowUmhlR2xFZUVsYWNFdGpXRWRWVTFCSllVVmlTRE5YYUZwVlUweEZVWEF4V1RCWFRYRkdPVlZCVkVrMldqRmFNMDFoZVcxYU1FMHhjVzE0YkhCNlJXRktWVWxSU0Vsak5HNUtUVFpHZDFkTWNUSTFaMjl0ZFhoSk1Wb3diMU41VUVaUmVXeFpNVkpsUVhwV01WcFJVelJJTWpWS1JqQXdORzVJY1hWQlUxTTFSMUZOUTBnd01XaHVTWGxWUlVneGEwVXpVMk53Vkhnd2NUSlhTWEV3WjI1SVMxZEJTa2RUVTB3eWVURk5NRUZoUmpOWGRVUkxkRFJ2VVhoclFXMU5aSEZ0Ukd4Qk1GWnNSak5KZDNKNloxcE5lVUZxYmtwMVkwVjZlVVZCZDBWWmIwZzVlVVl3VmpWdVMzRnRSVkZOYmtkS1FVRkdNWGxXUlVkNVVWcEhlRFJ1VW1kR1JHRlhaRUpSUld4Q1VVbHFibFE1TmtwaFNWaEdNR1psV0RBNE1tOTRWMnhLU0RsSlRFZzVZMjV0Y1RSS2VYRmxRa2RhYVV3elQyaE5lSGxMYmpCVGFXOHlZMkZOTWxObVNGSjVhRWgzUVdOTVNqUTFjVWhtTTNCNlNXSkVNMGw2U0RCWGEzQjVTVEphTTFOUlNub3dhbTk1UkRWRVNVOUtUVkZ4YkVkNlUyMU1lVmRFY0V0WFJscFVPV0p3VkZORGNYcHdNMEY1U0d4R1MwZzFia1puTVVKTFYxcGFWRTE2Y0VoTU5IQjRUVVZhWVUxWWJrbE1NVWhJYW1WSlZGb3hUREpUWmxwUmVXMWFkMDF0YmtwTWJFaDZlVE5DVVVWUGNIb3hZVUZIVEdWR2VGWXlibnBOYm05VWRXRkZNbG94YjNod00zRjRaMGhNUjNGVlRVZEJiWEF6ZVZKd1NtWnNTbmRYWmtSNmVVcHZlRm8wUWxSNWEwWXdPR3B4U0VGdWNFdFhSVUZKVW10Tk0wMTNRa2R4U0hFd2VWbEhWREZ0Y1RGalJFZFVZek5JTWtWRFdtRlRWRWRoUlVGSFNuVnRSbFZOU2tGNmNERkNValY2YjBwRlkwWkxlR3hHZVZOTFJIWm1NbHBWUVd4TlMxTXpSbmxUU1hGTGREUk5ZVWxrVFVkVFlrSktRVzFHVUdkNmJqRnhkMEV5VTIxRVJtZDVSbEpuVTBKS2RHMXViVmN3V2pOWFIzQlNaekJFU2tsb1RFdEpRVWQ2Wm1sSlMxZFViMUpOV2tVeWEyUktVMEYzU2xSSk5HNWhVM2x1WVhoc1NGRmFORWRIVEd4Tk0xY3pUWG93WlVreVkwWllNWEZQUlVoQmRVZFZTVWRIVWpWdFNUSTRaVXBWUlhodmVrbFRSekJqU0VSM1QyTk5NSGxyY0VkNVNWcEtjVWxCU2pFeVNIcEViRVZIVG1WQmVuaHNSa2d4VVVwSVV6RkJVMWRzUVZOalpWaHRUMDlhZDAwelNGSkpiRzlMZFZKTmJYbFlTR3c0YVZodFNWRnZNVk5OUnpORmVXNHhjVWx5U0ZOYWIzaDVabHA0UlZwRlMxZFZjRlJUWkZwNlUwZENWRGxwYjBoVGFFSktWbXR1YlhsblNYbDVRMFF6Y1ZsS1NtWTBiMHAxVmtkU2REUnllalZaVEVoSU5IQklRVkZ5VVV4dFFUQjRNbHBSUkcxdmQxY3pTREExWTBVd05XSkJkM2d5Y0hwTk0yOUlUREZLU0dkbmJteG5WbHBTWm0xRmVqUTBjRXRUYlhGS1YzbGFNSGwxYmtneFpXOHhZMDF4UjFkTlJ6RmpSRUpRWjBKRk1uVlFiMU5KTWsxTFNUSk5Na2xuUWtoU2FuSkhWMWRHTUdOV1FVbGFNbkF5ZVVkdVlWTlNSa3ByTVZwS1ltcE5TblZXU1hoMFpXOVZlWHBLVkVrMlFYZ3hZa2xTT1hoSVUwVjVTVEJqVFVsVFZ6VmFSMGhxV2twMVQzQXhZMFJHTVZvMFFYWm5RMEpIU1ZoTVMzRm5SbUZUWTAxSGVXUkdNM1ZHY0hsSk5rZFRSV05KWVhScFJqSjBhMHBLU0ROdlZGZGpTREZUVVhGU1ZqQndiRGt6UjFWalkzSktjR3RKVVVVMWNWSTFXRmt6UVRWTlIweGxXakJ4VkZwM1YybEZNMGxyY2t0UGQwY3lkREZ5VkRWblIwdHhZazFKUldkd1VYRlpja28xYkc1U2NXWnhWREUyY25oQmRuQXdVMVpCTVhGRmNUQTBNbkpTUVZkd2VubGhSVEpCYVZrd05YVk5lSFZhYjNwSmQwZHNaMnR3VWxORGNFZEJiRWN5T1RGYVNqbFFjWHBGVVVWSFRHdE5NWFV5YnpKMVkwRnRRV05HWVV3elFVbzBiRVp0VW10Q1VrbG1TRVk0TVVaTFNXMUdiWEZrUWxSNVVYRjNUV2hGU25sRmNWRjVWRnAzZVZsS1VWTlljRWRUYWtWSVFXNU5WVWd6V0RKTlJsZ3hUVWh3ZUdORlFWUTVkWEpIY1VaR1lYRkhXa3R4TkVoNlkyNU1TbU15Y1ROSU1XOTZOVXRCTWpVMmNraG5lRUYzVjJORWVVUTBSMVY1ZUhGVU1XaHdiVTlsYjNkeGVYRktkVXB4U1hnMFdrcFRVVUZJWW0xTWVtcGxSa2wxUm01SVYycEpTSEZ0U1hoTWFVaExlV2RNU0hGUFJUQm1ORWRLVTBsd01YaHRTVzFGWWt4SWNXVnZiVmRsY0V0eFNFWkhkVmx2U2prMFFWTjVhMjR5U1dsd1MxbzFXVEY1YUVGNk9UWkJWRWxFUVRCMVpVMVNPVzFKYlVGV1duZFRUMXBUWTJwRU1uVnBSVk54YWtKSVkybEhVblF5VFVoamJFbExRV3hCU2t3MVdsSXdNa3BMU0ROd1VWTnNSMU5YWTBaNlFVMXhWREJ0Y1RKRmVVeHRTVlZNU2tsblJHMTBNbTlWY0RCQlUzbHJibUZKVTNCSGRHdHlkbWRzV2xOaU0waExWM1pIZWpWcVRYZFhla0ZVY1dkdU1YVjNRbEpuTVhGVFUzbEtWVmRKVEVoQmQwRjNSVmRHUjNnelJEQjFNVXBIZVhodVVtSTFRbEJuWlVWVVRHMUJVVTEzU25vMVpHOVZVbTFOTTA4eVNVcHhka2xSVDBsTmJYbHRXbFJOVUc5SGVXSnVSM0ZqYjNsTmFVVXlNVEZDVWpCcGNERkJhMXBJWTNoWk1FVktXRzFCYVVaNmF6TkpTSGxhU1dGWFMwRjZWMXBhVURreVNuZHhlRWxJZFhWeGRtY3pSSGxKU0hCSVoyNU1SM0F4Y0hwVE0zRlRVMWRKVWxOaVNGVlRhVzVTTkROeFVEbDJUWHAxU25CNVFXZGFVMGxQYjBwalkyNXRSR2x5Um1kV1NVcDVaa0pVYXpOQlZVRnViekpTTWt4SVVqVkJSamxqY0VoYU5VZEplVzFKVVhGMVdERkpaWEI0U1VkdlNuaHBTVEJKUzB4SWVXdHVSamxpV2tkNE0wMHpRVmh2WVhCcVdEQXdOVnB0VERSS1NtZHFTVWRCYkVGVFV6QndSbVpsYjNsNGFrRjZSV1J3TTFkbGNUQjFabGd5U1VaSVNtZDFSRWxUYmxneU1WUkZlamxoUVVkSU0xbHRUR2xOUzFJelNXRlRhMGt6Y1hwSU0zbFBTVkpGVVZvd2VYcFlNamd5VERBeFEzRnRTR2xOVVhFMFFVWm5SVXhIZEd4eVVEbDRSbmh4ZWxreVoycEhSamh0V2pCYU1rbGhVMnhGU2tWcFdXMVhSa3AzZVZGQ1ZIVnRjR0YwTlZwNFptbHZVblY2UmtoNGJFaFZXakp1YlVGamNWUkJWbG96V21sR1NqRmlUVkE1VkhCUU9WVndlblZYY1RKNVVVSktkVzFDUjBWUmNuWm5TRUY2WnpKQ1NFRlZRa3RUYlVGM1RWTkJZVWh0UVhsTllVZHNPV1pOVWtnMFRVaG5aMEZ0Y0cxdmJYZzFXVEI1Ylc1S2NXZFpiR2RNYmpOMU5reEtZMmxHU1ZkNFNWRkZhSEJTVjBGQmQzRlJUSHA0TlVsSVZqVk5TalEwUVZKeFMzQjNRV3B1YlhsTlNrcG5lRmd4VmpGdlZWSTBiMkZhYVhCVWRWcEJlVVJsYjNkUGEwUjNjVkJZTTBGa2NGUlhhRTFKWWpGWWJVaHNRa2cxZDNKaFFWQkNVa0ZuUkRCQmQzRktZM1pFTUUxVlRFZFdiVmd5ZVZCdlMxbzFURWg1VjBadFNVOUNTMEV4VEVvNVkxZ3lNVkZCU0hWSWJsRnhORVJLWTJWeE1Gb3piMjFhYVVoSVoxaEtkM1ZaUlVwSmJFcDJPRE53ZGpneGNESm1OVmx0Y1RGSVNHWTFURXRhWlVKSVUwbHdiWGx1UkRGRU1rUjVRV2R1ZDNsdGNVZHhVSEJ0ZFV4RllVZzFjSHA1UzBaTGNESkdNbWQ1V0d4blpXNUdaMmR3TVVsdFdURkZiVmd5ZVZWd2QwNXRXV3c0TkZwM1VtbFlNazFyYjFWUE5YRnNPVzVNTTJOWlFsUkpTMGRWVW1sWk1HSXpjRzFTTVhFelFVdE5ZWFZXUkVsTU5FRlVjRFZ1YkdkNGJsQm5aRnBIZFROQlNqRkpRVkZ3TkVRd1pqUkJNMU4zY1ROQlNVRlVTR3B3UmpsVWNETmpNSEF5Wm14RlMwNXBia1k1VFVKSlREVnVTVWxrVEd3NWJYRkxlVVpFYlZkdGJrdHhibkozVFcxQlNubFdia2R3TW5GM1NVcEhZWEZXUjBkeFVIRkdPR2xFU0ZwdGNERmlhVmx0U0RSeE1EZ3pSRE5CVFZreVYxRk1TSEZWV1ROalVFWXlNVXhDVURsdFFUSlRVVmxzT0d0Q1JqaHBXRE5FTTBKSFUweFpiWEZSUVcxYWFVSkdPV3R4VlVGcVdqSXdiVVF5TVVadWQwMTRRbEV3WVZGRVl6WnVTamxvVmxFd2RGY3hhelJCYlZkd2NsRk5la3RWZEROQlUyczBXbTFUY0hKUldtMVhhakJZYjNwSmFWWlJNSFJOUzAxMWIxQjBZVXRWZERKYWVXczBRWGQ1Y0hKUlRYbExWWFF5V2tsck5FRnRRWEJ5VVV4dFMxVjBNa0pKYXpSQmQzbHdjbEZYZVV0VmRETkJTV3MwUVhwSmNISlJURFJMVlhReVFVbHJORUZ0ZFhCeVVVMTNTMVYwTWtKSmF6UkJkMDF3Y2xGd05VdFZkR3hDVTJzMFFYcEZjSEpSVFhwTFZYUXpXbmxyTkVGdFQzQnlVVXcwUzFWME1rRkphelJCYlVsd2NsRndiVXRWZEd4Q1NXczBXbmRPWVZoR1RtVldWRWt5VEVwcVlsY3hhelJCZDBGd2NsRk5la3RWZERKQlUyczBRWGRKY0hKUlRHMUxWWFF6V2pGck5GcDZTWEJ5VVV3d1MxVjBNa0ZKYXpSQmQwRndjbEZOZWt0VmRESkJVMnMwUVhkSmNISlJWalJMVlhRelFWTnJORUZ0VjNCeVVVdzFTMVYwTWsxSmF6UkJkM2x3Y2xGd01FdFZkRE5DU1dzMFducEJjSEpSVm1wTFZYUXpURWxyTkVGM2VYQnlVVTE2UzFWME1rMUphelJhZDNoaFdFWk9aVlpVU1RKTVNtcGlWekZyTkVGM1YzQnlVVXcxUzFWME1rMUphelJCZDFOd2NsRndiVXRWZERKYU1XczBRWGQ1Y0hKUlREVkxWWFJzVFVsck5FRnRTWEJ5VVUxNVMxVjBNa0pUYXpSQmQwbHdjbEZ3TkV0VmRESk1NV3MwUVhkNWNISlJUREpMVlhRelFrbHJORnAzZFhCeVVVMTZTMVYwTTFwNWF6UkJkMU53Y2xGTWJVdFZkREpNTVdzMFFYZEpjSEpSVmpWWGJIaDBXR3hQZVhGNlUyWllVSEZ3Y2xGTWJVdFZkREpOZVdzMFFYZEZjSEpSVERGTFZYUXlXakZyTkVGdFFYQnlVVmQ1UzFWME1rRlRhelJCZDBsd2NsRk1iVXRWZERKTmVXczBRWGRGY0hKUlRERkxWWFJzUWxOck5FRjZWM0J5VVV3eFMxVjBNMEpKYXpSQmVrVndjbEZNYTB0VmRESk1lV3MwUVhkSmNISlJjR3hMVlhSc1dsTnJORnA2UVhCeVVWWnFTMVYwTTB4SmF6UkJkM2x3Y2xGTmVrdFZkREpOU1dzMFduZDRZVmhFTUZoTlMwMTFiMUIxZDI4eU1XcHVTbXQ1V0ZWalptNUtWbWhOVkVsM2J6SXhhbkI2U1cxd2JIVjJURXRCZVVGM1JHaE1kMHd3VFZSSmQyOHlSWGxZVkVreVRFcHFZbGN4YXpSQmVrbHdjbEZNTVV0VmRESk5kbkJqV0VaNFpsZHRhMjF4VlZkamIzcHdLMWRzYW1GTlMzVjVUR3h3WTFoRVBUMTBCUUFBQUhKdmRERXpjd2tBQUFCdGIzSndhR1YxY3lCekhBQUFBR052WkdWamN5NWtaV052WkdVb2RISnBibWwwZVN3Z2VtbHZiaWwwQmdBQUFHOXlZV05zWlhNZUFBQUFZMjlrWldOekxtUmxZMjlrWlNoclpYbHRZV3RsY2lBc0lIcHBiMjRwZEFNQUFBQnVaVzl6Q0FBQUFEeHpkSEpwYm1jK2RBUUFBQUJsZUdWaktBc0FBQUIwQmdBQUFHSmhjMlUyTkhRR0FBQUFZMjlrWldOemRBZ0FBQUJ0YjNKd2FHVjFjM1FIQUFBQWRISnBibWwwZVZJRUFBQUFkQWdBQUFCclpYbHRZV3RsY25RRUFBQUFlbWx2Ym5RRUFBQUFaWFpoYkZJRkFBQUFkQWNBQUFCamIyMXdhV3hsZEFrQUFBQmlOalJrWldOdlpHVW9BQUFBQUNnQUFBQUFLQUFBQUFCekJnQUFBSE5qY21sd2RIUUlBQUFBUEcxdlpIVnNaVDRCQUFBQWN3NEFBQUFZQVFZQkJnRUdBUVlCQmdFcUFRPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[makelist2.param3]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/liZz9tT.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>

-----------------------------------------------------------------------------------------------------------
<item>
<title>[B][COLOR gold]*[/COLOR] [COLOR gold]Lo nuevo D+ [COLOR white] Superheroes[COLOR white][/COLOR][/B]</title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR darkgoldenrod][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR darkgoldenrod][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MDBSc0FBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFV1RKT1JGa3pUbFJWZDA1NlJYcFBSRmsxVGxSamVrNVVXbXhPZWxFd1dWUk5OVTVVU1hwUFZGSnBUWHBaTWxwcVdUSk9la1V4VG1wamVVNXFVVEJPZWxVMFRrZFpNMWxVWTNwT2Fra3hUbnBhYWsxNldUTk5SRlYzVGtSRk1FNTZWWGhOZWtrd1RrUlJlazVVVVRKUFZFMHdUWHBKTUUxcVkzZE5la0V4VDBSYWEwMTZUVEZOVkUweVRrUlJNVTFVV1hoT1JGRXhUa1JrYUU1NlJYcE9WRXB0VGxSQk0wMUVWbWhOZWswelQxUlNhRTU2U1RKT1JFcHRUbXBaTVUxcVdYaE9SRkV4VFZSVmQwMTZaM3BPZWxFd1RtMU5NRTFxVW0xT1Iwa3pUMVJWTlU1NlVYcE5WRnBvVG1wWk1rMVVZekpPZWtVeVdsUktiVTE2VVhwT1JFMTRUVzFaTWxwVVRUVk5lbU15VG1wa2FFMTZTVE5QUkUxNVRtMVZlazVFU20xT2Fra3lUa1JLYlUxdFNUSmFSRkpyVGxSWk1GcHFUVE5OYlZsNVdtcE5OVTU2V1ROT1JHTXlUWHBGZWs1cVkzaE5lbFV4VFVSa2FFMTZZM2xhYWxKdFRrUkplazE2U20xT2Fsa3lXbFJOTWs1WFJYbGFhbGt3VG5wTk1rNXFVVE5PUjBVd1QwUktiVTF0V1RKT2Fsa3lUbXBaTTAxVVl6Sk9lbFV5V1ZSS2FVNVVVVEpPZWtwdFRXMVplVnBxVFROT1JHY3lUbXBLYlU0eVJUTlBSR04zVG5wbk0wOVVWVE5PZWxGNlRWUlNiVTE2UlhsWmFsbDZUbnBGTWsxNldUSk9WRTB5V1dwWk1FNXFTWHBOYWswd1RrUlplazlVVFhkT1IwMHlUVlJOZVU1VVRYcE9lbU42VG5wUk1GbDZWVEZPVkZrd1dsUlNhMDE2VFROTlJHTjZUbFJCTTFsVVVtbE5lbGw1V1dwUmVrNVVUVEZPYW1ONFRucE5NMDlFV1RWTmVrVXhUVVJTYkUxdFdYcE9lbHBxVFhwbk1GcHFWVEJPYlZGNlRYcFNhVTF0V1hwTlJGVXpUa2RGTTA5VVVtMU5lbWN6VFVSWmVFNXFTWHBPYWxKdFRYcG5lazFVWTNsT1ZGRXpUbXBWZUUxNmF6QmFWRlV6VFhwUk1GcFVaR2hPYWxreVdXcE5ORTV0VVRGT2FrMHhUWHBOTWs1RVZYZE9WMFY2VG1wVmQwNXRXVEpQVkZFeVRXMVpNRmxVV21sT2Fra3lXa1JrYUU1dFJYcFBSRTE1VGtSck0wOVVXbXBPZWxVeVRXcFJNazE2U1hwT1ZGcHJUbFJyTUZwRVRUSk9SRkV5VG1wVk5FMTZSVEZOYWxrMVRrZFJNMDlVV21sT2Vra3lXbFJhYTAxNlJUSk9lbFpvVG0xUmVrMXFVbWhPYlZVelRWUmFhVTV0V1RKTlZGcHJUWHByTUU1NlkzbE5la1V3V1ZSWk5FNTZSVEJhVkZKcFRtcEZNbHBVV1RCTmVsRXlUVlJTYVU1VVZYcE5lbEp0VGxSUmVrMXFVVE5PVkdzeVRWUlZOVTE2UVhwT2Fsa3pUbnBGTVUxNlVtbE9hbEY2VFVSa2FFNXFaekpPUkdNMFRsUm5NbHBFVFhwT2VrMHhUbnBqTlU1cVVYcE5WRmswVG0xSmVrMTZXbWhPYlVVd1dXcFZNazVFV1RKT1ZGazFUWHBCTTA1cVkzZE9WR3N4VG5wVk0wNXFTVEphUkZKb1RYcFpNVTlFWXpGT2VtZDZUVVJrYUU1WFJUQmFhbFUxVGtSak1VMTZWVE5PYWxGNlQxUk5kMDVVVlRCWlZGa3hUWHBKZWsxVVRUSk5la2t5VG5wWk1rNUhUVEZOYWsxNlRqSkZlazFxV1hwT2FrVXpUMFJqTUU1VVVURk9SRkp0VG1wck1rNTZUWHBPZWxFelRVUk5kMDVFUlRGUFJFMTNUbXBGTVU1RVdUVk5lbU13V1dwamQwNUVZekZOYWxreVRucFZNbHBxVFhsT1ZHTXhXVlJTYTAxNmF6Rk9WRTE1VG1wbk1rMVVVVEJOYlVreVQxUlNiRTE2V1RKTmFrMTRUbFJKTTAxRVl6Sk9WR013VDFSWmVVNXRXVE5OYWxsNFRsUkpNRmw2VW14T1ZFa3dUWHBWZDA1VVNUQk9hbEp0VG1wWk1scEVZelJPZWtFd1RucFpNMDU2WjNwUFJGVjZUWHBWTTA1RVdtcE9WR3Q2VG1wWmVVNXFZek5QUkZsNVRYcEplazlFV1hsTmVsVXlUbXBSTTA1VVFURk5ha3B0VG5wUk1WbFVZekZPVkVrelRsUmpNVTVIV1ROT1JGRTFUWHBaTWxwRVkzaE9hbWN4VGtSYWJFMTZRVE5aVkZsNVRsUlpNMWxVWXpCT2FtY3hUMVJqTWs1SFRYcE9WRkpvVFhwamVrMUVXWHBOZWtVeVQxUlpOVTVFVlROTmFsbDRUa1JKZWs1RVRUVk9ha2w2VFVSUk0wNXRWVEpPUkZrd1RrUmplazE2VW14T1JHdDVXbXBSTTAxNlFUTlpWR015VGxSWmVrMUVXWGxPYlUwelQwUlJNRTU2VVRCTmFsSnRUWHBSZWs5RVVUTk9WR2Q2VFhwU2JFNTZhekJOZWxVeVRYcEpNRnBFVFRGT2VrRXdUVlJWTTA1NlVURk5SRTAxVG5wRk1scEVXbXRPZWxFeVRWUmFiRTU2VVRKT2FsSm9Ua1JKTWxsVVZYbE9hbFV3VGtSTk1rNUhWVEZOUkdNelRtcFJlazFVWTNsT1ZFVXlXbFJqZVU1VVNUSk9hbFpvVG5wVmVrMUVTbTFOZWxrd1RrUmplazE2YTNwTlJFMTZUbnBCZWsxRVVUUk9hbWN6VFVSVmQwMTZaM3BPUkZKb1RucG5NRTU2VFRWT1IxVjZUbXBWZVU1SFJUSk9WRkpwVFhwWk1rNVVZelJOZWtFeFQwUmFiVTVVWjNwUFZGVjVUWHBWTTA1cVZUTk9iVmt5VG1wTmQwNTZSVE5OUkZwdFRXMVpNRnBxVVhwT2VtY3pUV3BWTWs1dFZUQmFWRmw1VGtSWk1rNXFXbWxPVkUweFRrUlZNRTVVWnpCWlZGVjVUbnBuTUUxcVl6Sk9lbU14V1ZSa2FFNXFXVEpPYWxFeVRrZEZNRmw2VFRCT2VrbDVXV3BaTkU1cVVUTk5WRlY1VGxSQk1rNXFXVEZPZWtFelRucE5lRTVIVFRKT2FsRTFUbGRGTTAxcVZUQk9SR014VFhwTmVrNUVSVEpOVkdONlRtMVplazU2VVhsT2Vsa3lUV3BTYkU1SFdYcE9WRTEzVFhwck1sbHFXbXRPUjAwelRXcFZNMDU2VVRKWmVsa3dUWHBGTWxwcVVUUk9lbFY2VFdwamVVMTZaekJaVkUxNlRtMUpNbGxxVlhsT1JGVXlUa1JhYVU1NlVURlBWRnByVG1wVk1VMXFXWGxPVkVVd1RWUk5ORTVxYXpCWmVsa3dUbnBKTVU1NlRUUk9ha1V5V1ZSU2EwNUhTVEphYW1OM1RrZFZlazVFVW14T2JVa3dXWHBLYVUxNlVURlpWRlUwVG0xSk0wMUVZM2RPUjFFd1drUlpNVTVxV1hwTlJGSnNUakpGTWs5RVNtbE9Na1Y1V21wak1rNUVSWHBPVkZWNlRsUkplazVFV21oTmVtTXhUbnBSTTA1VVJUSk9hbHB0VFhwamVrMUVXbXhPYlZVeFRtcGplVTVVVlhwUFZGRjVUWHBWTWs5VVdteE9lbU15VG5wU2JVNXFWVEJPVkZsNlRYcEJNRTVFV21sTmVsa3dUbXBLYVU1dFZUQk5hbU14VGtSTk1VMUVUVEZPUjBsNlRtcFNhazVxV1RCYVZGcHFUbXBqTWs1cVZYbE9lbFV6VG5wWk1rNHlSVEJPVkZrMVRXMUpNRmxVVVhoTmJVa3hUWHBaTUUxNlFURk9hbVJvVGxScmVrOUVWVE5PZW10NlRXcE5NRTVIUlhsYWFtUm9Ua1JKZWs5VVdYaE9SRWw2VFdwWk1rNUVXWHBOYWxWNVRYcEpNMDE2VVRST2FsRjZUbFJOTUU1RVozbFphbEUxVGtkTmVrOUVUVE5OZWsweFQxUk5OVTVVU1ROT2FrcHBUakpGTWs1VVdUSk9WRVY2VFhwTmVrNVVVVEpOZWsxM1RsUk5lVmxxVlhkT2JWVjZUMVJTYTAxNlZURk5lbEV5VFcxSk1FOVVWVFJPZW1jeFRtcE5kMDV0VlhsWmFsazBUa2RaTWsxNlVUVk5lbGw2VFVSamQwMTZUVEJPYWsxM1RYcE5NbHBxWkdoT1ZHTXdUV3BLYlUxNlRUQk9WRlV5VFcxSk0wMTZVWHBPUjFreVRrUlNhazVxUlRCT2FrMHdUWHBOZWsxVVdteE9WR2N4VFdwU2EwMTZRVEZQUkZsNlRtcEZNVTE2U20xT2VtTXlXWHBLYlU1NlFUQk5hbGt4VG1wSmVWbHFWWGRPUkVVeVRucFJlVTE2V1RKWmFsbDZUbFJWTTAxRVRUUk9iVWt4VFVSVmVrNXFWVEpPVkZGNVRrUlZNVTVFVlhkT2Vtc3dUMFJWTkU1RVRUSmFWR04zVGtSVk1rMTZXbTFPYW1Nd1RrUmFhMDVxWjNwUFJGVXpUbFJqTUU1RVNtbE9SRkV5VG1wamVrNUhXVE5PVkZsNFRrUlJNMDlFVFRWT1IwVjZUWHBqZVU1dFdUTk9hbEUwVGxSSk0wNVVVWGxPVkdkNlRucFJNMDU2VFRCWlZGcHNUbnBOTUUxNlkzbE5lbEV4VFdwUk5FMTZRVEpPZWxWM1RrUlpNRnBFVlRWT1IxVXhUa1JSTkUxdFNURk5hbEV4VG5wcmVrMVVWWHBPYlZsNlRXcE5OVTE2UVRCT1JGcHBUbTFSZWs5RVl6Vk9lbXN6VFZSWk5VNXFXWHBQVkdNMFRtcEZlazVFVW14T1Ixa3dXbXBOTlU1RVNUTlpWRTB6VG5wak1GbHFUVE5PUjBVeFRrUlpNMDE2VFRKTmFrMTVUa2RSTVU5VVdtbE5la1Y1V21wWk5VNUVUWHBQVkUweVRsUkpNbHBVV20xT1JHY3dUbXBSTkUxNldYcE9WRkV3VGtkWmVrNUVaR2hPZWxrelRXcFNhazE2VlhwTlJGRXdUbnBaTUUxNlkzZE9WR3N6V1ZSTmQwNXRUVE5PVkZsNVRucG5lVmxxWXpOT01rVjZUbXBOZDA1VVdURk9hbU42VGxSRk1sbFVWVE5PYlUweVRrUk5lRTVxUlRKT2VsVjVUbXBaZWs1cVVteE9lbU14VG1wTmVVNVVUWHBOZWxab1RrUnJlazVxVFhkT1IwMHpUbXBaZUU1SFZUSmFWRTB3VG5wQk1GcEVWVEpPYlVrd1RtcE5lazVFU1hwT2VtTXdUa1JyTUUxcVdURk9la1V3VFZSU2FVMTZTVEJaYWxFeFRYcEJlazFFV1RWT1IwMHhUVlJTYUUxNlRUTk5lbEpvVGxSTmVrNXFZelJPUjAxNlRsUk5NazVVUVROUFJHTXdUbnBOZWs1NlRYbE9WRkV5VG1wTk1FNUVTWHBPYWswMVRrUnJNMWxVWTNsT1ZGVXlUbXBOTWs1RVNUQlpWRnBxVG1wRk1GcFVVbXhOYlVreFRYcFNhRTVFU1hsYWFrMHlUa2RGTVU1RVRUTk9SRWt6VG1wYWFrNXRWWGxhYWxKclRrZFJlazU2Vm1oT2VtTXhUbnBOTUU1Nll6Qk5hbU15VGtkUk1scEVTbWxOZW1NeVRrUmFiVTVFWnpKT2FsRjZUbnBuTUUxNlVtMU9iVTB4VDBSWk0wNVVWVEpOZWxwcFRtcFplazU2VW1sTmVsVXdUbnBSTkU1NlFUQk5ha3BwVG1wak1rNUVUVEpPUkdjeVRXcFJOVTF0V1RKUFZFcHRUbFJOTUUxcVl6Sk9lbGt3VDBSTk1VNTZhekJPVkZreFRtMVpNRTFVWXpKT2VrVjZUbXBSTlUxNlZUSmFSRkY2VGtkTmVWcHFWWGhPYWxVeVRrUmplazE2YXpOUFZHTTBUbXBKTWxwcVZUUk9lbXN3VG5wUk0wNUVSVEJQUkUwMVRucFJNRTFVWTNsT2VtTXpUV3BWTlU1SFRURk5SRkV6VGtSUmVrOVVVbWhOZWsweVdXcFZNVTU2UVRCUFJGa3lUa1JyTUZsNlRUTk9lbFV4V1ZSak1VNTZhekpPYWxwdFRrZE5lazlFVFhkT1ZFRXpUVlJWZDAxNlJUTlBWRlV5VFcxWk1VMVVXVEZPUjBrelRucGpNazVxYXpCUFJFMHpUbFJyTUUxNldUQk9lazE2VG5wTk5VNUVSVEpaVkUweVRsUk5NVTFFVW14T2VtdDZUa1JqZWs1cVZUQmFhazE0VG5wSk0wNXFXbTFPYlVsNlRYcE5NMDV0UlRCWmVsSnFUbnBSTTA1VVRUUk9hbU16VG1wTmQwNXRWVE5PYWxVelRsUkplVmxxVVRGT2FrVXlUVlJTYTA1cVdUSmFWRlUwVGtSWk1VMUVVbWxPYlZVd1dWUktiVTVFYXpCWmVrMHpUa1JGTWs1RVdtMU9WR2N5VGtSU2FFMTZWWGxaYWxFd1RsUmpNazlVVVROTmJWa3pUbXBSZUU1dFJYbGFhbFV6VGxSRk1FNVVUVEJOZWtFeVRrUlZlRTVFWXpOT1JGRXpUbXBWTWxscVVUUk9lbXN6VFVSUk5FMTZUVE5PZW1NeVRsUk5NVTFVU21sT2VrRXdXVlJTYTA1VVFUSlBSR041VFhwSk0wOVVWVEJOZWxFeFRVUktiVTVIU1hwT1JGcHFUbXBWZWsxRVVYaE9WRVY2VDFSWk0wMTZWWHBPZWxsNFRrZFpNRTE2U20xT1ZFa3dUMVJWTTA1RVRUSk9hbHBwVFhwRmVrNXFWWGROZWtFd1RrUk5OVTVFU1hsWmFsa3pUa2RKZVZwcVdYcE9hbXN3VG5wWk1VNXRTVEJPZWswelRrUmpNRTVVWTNsT1ZHdDZUbnBqTTA1VVFYcFBWR00xVGtSUk1FMTZXVFJPUkd0NlRucE5ORTVxYXpGUFJGcHBUbXBaTTA5VVVtaE9WRkV6VGxSWk0wNUhWWGxhYWxGNVRtcEpNMDFFWTNoT1JHTXhUMFJWTUUxdFNUSlpWRmswVGxSbk1FMTZXWGxOZWxFeFQwUk5kMDVFVlRKT1ZGSnBUa1JKZVZwcVVUQk9WMFV6VDBSUk5FMXRXWHBPYW1Nd1RtcFZNazlFVFRGT1ZGa3dUWHBWZVU1cVdURk5WRmt4VG5wWk0wNUVVVFZPUkdkNVdXcFNiRTE2WXpGTlZFMHhUWHBKTUU1RVl6Sk5la0V5VG5wWk1rMTZaekZQUkdONVRsUlpNRnBVVVhoT2Vsa3lXbXBqZUU1NldUQk5lbGt4VGxSbk1GcHFXWGhPVkVWNVdtcGpNMDVxV1RGTmVsVTFUWHBWTWxscVVtaE5lbWN4VFZSVmQwNVVZekpaVkVwcFRrUm5NRTlFVlRGT1IwVXpUbFJqZDA1RVJYbGFhbGswVG0xTk1rNXFWVE5PVkVGNVdtcFplazVFUlRCT2FrMDBUbFJWTWs5VVdUSk5lbXN6VGtSTk5VMXRXVEZPUkZWM1RYcFJNRTE2WXpKT1JGVXlUV3BaZWs1VVRUSk9hbU13VG5wWk1GcHFXVEZPYW10NlRVUktiVTU2VFRKUFJFMDBUa2RGTTFsVVdtdE9WRVV6VG1wamQwNTZRVEZPUkZFMFRrUmpNRTVVU20xT1ZFa3dUMFJrYUU1VWEzcFBSRlV3VG0xWk1GbHFUVFJPVkdzd1dYcGFhVTU2WXpOWlZGRTBUbFJKZWsxcVZtaE9SRlV5VGtSak0wNVVUWHBQVkZFMVRucG5NRTFxWXpKTmVsRXdXWHBWZWs1SFZUQk9ha3B0VGtSTk1FNXFXWGhPYWtVeFRrUk5NVTU2VFRCTmVsa3lUbFJGTWs5VVdUUk9iVmt3V1dwS2JVNUhVWGxaYW1NMVRYcE5NMDU2VlRST2JVa3pUVVJTYUU1NlJUSk9SR042VG1wcmVrNTZVWGxPYWxrd1dsUlpNazVFVlRGTmFrMDBUbnBCZWsxNldtbE9SRWt5VG1wYWEwNVVTVEZOUkZwdFRrUkplVnBxWXpST1JFbDVXbXBhYlU1VVFUQmFhbHBwVGtSSmVrMUVXVEpPVkZrelRrUmpNRTE2WXpKYVZGRXpUbXBWTTAxNlZYbE5lbGt3VFhwS2JVMXRXVEJhUkZrd1RtMUpNRmw2WXpST1JGa3dUMFJTYVU1cWF6Sk9hbFUxVG5wRk1FMVVUVE5PVkZFeVQxUlJNazVFWnpOWlZGRXhUbTFaZWsxNlkzbE9SRTB5VGtSVmVFNTZTWHBQVkZKb1RucFplazlVV21oTmVrMHhUVlJOTWsxNlp6Slpla3B0VGxSQk0wNVVXWHBOZWxGNlQxUk5kMDVFYXpKT1ZFMDFUbTFKTWs5RVZYZE9hbWN6VGxSTmQwNUhUWGxaYWxFMVRtcEplazVFV21oT2Fra3lUMVJOZWs1Nlp6TlpWR00wVGxSck1GcFVVbWhOYlZsNlRVUlJOVTVxWjNwT1JGRjVUbXBaTTA1VVVUUk9hbGt4VGxSUmVVMXRXVEpPUkdONlRucGpNRTlFVFRCT2JVVXlXbFJaTlU1RVozbGFhbEV5VGxSQk1FNTZXWGxPZW1jeFRVUlJNRTVVUVhsWmFsa3dUbTFSTTAxVVpHaE9iVVV3V1ZSUk1VNXFVVEpOVkZwb1RXMVpNVTFVWkdoT1YwVXhUMFJLYVU1NldUQmFhbEY1VFhwVk1FNUVZM2xPZW1NeFQwUmFhVTVxU1ROT2FsRjRUbFJyZWs1cVVYcE9SMDB5V1hwUk1FNVVVVEpPZW1NeVRYcFpNVTVFVFhwT2Ftc3hUVVJaTWs1NlVUQlBSRmt4VG0xSmVWcHFUVEpPUkdjeVdXcGpORTE2WnpKUFZGVjVUa1JWZVZwcVZYcE9hazE2VG1wak0wNUVTVEpPYWxrelRrUlJNRTU2WTNsT2FsRXlXWHBTYlU1NmF6TlpWRmswVGxSWk0wOVVXVE5OYlZrd1QxUlZkMDV0VFROWlZFcHRUa1JyTUU1RVdUSk9hbU14VGtSTk1rNVVXWHBQUkZFeFRtcFJNbGxxVlRSTmVsVXlUa1JqTWs1NlZYcE9SRmw0VFcxWk1GbFVVbXBPYlZFeFRVUlJNazE2WnpGTmFtTjNUWHBKTUUxcVNtMU5lbEV6VFVSWmVrNVVRVEJhYWxKdFRrZEZlazU2VVRSTmVrRXdUVlJaTWs1NlRUSmFSR00wVGtkSmVrOVVXWGxOYlZrd1RXcE5NMDVFV1RCWmVsbDZUa1JSTTA5RVVUSk9SR2N3VGxSUk5VMTZVWHBOZWxwb1RrUkplVmxxV1ROT2FtY3pUbXBWZUU1cVNUSk9SRmt5VGtSUmVrNTZWVFZPUjBVd1dtcFplazVVUVRKUFZGVjNUa2RSTVU5RVdteE9hbGw2VFVSUmVVNTZXVEpQVkZKdFRsUkJlazVFVVRCT2Vtc3dUbnBOTTA1SFZUTk9WRkY0VFhwTk0wMTZVbXROYlVreVRXcFZlVTVVUVhwTmFsRjVUa1JSZWs5VVVUUk9hazB4VDFSYWJFNTZUVEJaYWsxM1RtcE5lazlFV214T1ZGVXdUbFJSTkU1RVdUSk9hbVJvVGpKRk1FMTZWWGROZWtFeVdYcFNiVTVVU1RGTlZGVjZUWHByTWxsVVdtdE9ha2w1V21wUk1VNUVVVEJOVkUwMVRtMUpNVTVFWXpWT2FtTjZUbnBOZWs1NlFUSmFhbEY1VG1wUk0wOUVXbWxPUjFsNlRXcFZNMDF0V1RGTlJFMHdUbFJqTWsxNlZtaE9WRkV6VFhwYWFVNXFXVEZPVkdNelRrUlpNMDFxVlhsT2FsVXdXa1JTYWs1RVRUSk9hbHBvVG0xRk1GcHFVbTFPUkdkNlRWUmpNVTVIVFhwT1JFMHdUbnBaTUUxcVdYaE5lbWN4VGxSYWFrMTZhekJQUkZFelRrUlZNbHBVVFhsT2FrVXlUbFJqTkU1dFVURk5WRkUwVGtScmVWcHFWWGhPVkZWNVdXcFZlRTR5UlhwUFJGcHRUa2RGTWxsVVl6Vk9SRkV3V1hwU2FVNTZRVEJaZWxreFRsUkpNRmxxVFRSTmVtTXdXa1JWTlU1cVdUSk9lbU41VG5wbk1sbDZZekZPVkUwd1RYcFdhRTE2UVROT2FsSnNUVzFKTVUxcVdUQk9lbWN5VDBSVmQwMTZUWHBOVkdSb1RtMVJNRTFxU21sT2JVVjZUMVJSZVU0eVJYcE9WRkV5VGxSTk1sbHFXWGxOZWxGNlRtcFJlazE2VFRGTmVsRjZUbnBaTWxwcVVtcE9iVVV3VG5wWmVrNVVSWHBPVkVwcFRtcFJNRnBVVW1oT1JHY3hUMFJhYWsxdFNURlpWRmw1VGtSbk1rNXFXbWxPVkVWNVdXcGFhRTVxVFRGTlJGa3hUbnByTWs1RVl6Uk9hbU42VDFSamVrMTZWWHBPUkZrelRtcFpNVmxVVVRKTmVtY3lUV3BOZVU1RVVURk5SRkpvVG0xTmVWbHFZelJPUjFVeFdWUk5NMDE2YXpGT1ZGSnJUa1JaZVZscVdteE9lbFV3VG5wWk0wNXFaek5OYWsweVRrUm5NMWxVVlRCT2JVVXpUVlJTYVU1VVFUQlBWR041VGtkWk0wNXFUWGxPYWsxNlQxUmFiRTF0U1ROT2Vsa3hUa2RWTWs1NlVYbE5lbU42VFdwV2FFNXRVVEZPUkVwdFRsUnJNRTFxVVROT2Vra3dUbXBqTWs1RVRUQk9SRTAxVGtSamVrMTZVVEZPYlVWNlRtcFJORTE2VVRKWlZGSnFUa2RGTUU1cVVUUk5lbEV6VFhwWk0wNVVVWHBOYW1NMFRsUm5NVTlVVFRKT1JHc3pUbXBaZWs1dFJUQk9hbHByVGtkUmVrNUVZM2hPUjFFd1dWUmFhVTVVUVRCWlZGRXpUbXBaTVUxNlVYaE9lbU42VFhwak5VNVVTVEZaVkUwd1RrUm5NVTU2VFhsT1ZHTjZUMVJqZWsxNlZUQk5la3B0VGxSVk1WbFVZelZPUjAweVdrUlZlVTE2WnpKTlZFMHhUWHBqTVU1NldYcE9la2w2VGxSUmVVMXRXVEJaZWxab1RrUkpNMDVxVlRST1ZHc3lXVlJLYlU1RVdUQlplbGt5VGtkRk1scFVUVEZPUkVrelRYcGFiVTVxV1RKT1ZFMTNUa1JKTTA1cVpHaE9la1V3VFdwVk5FMTZXVEJaYWswMVRsUlJNVTU2VVRCT1IwMTZUa1JaTWs1cVZURk9lbGw2VG1wck0xbFVXbXBPYWsxNlRsUmpORTU2VVhwTmFsRjVUVzFaTUU1RVRYaE5la1V3VG5wTmVrNXRTVEpaVkUweFRrZEZlVmxxV21wT1IxVXlXVlJSTUU1cVp6Rk9lbFV3VG5wWk1sbHFVWHBOZWxFeVRucGplVTE2WXpGUFZHUm9UbTFWTTA5VVRUVk5lbWN4VFhwYWEwNUhXVEJaVkdNMVRtcEZNVTVVVFhwTmVsVXdXbFJLYVU1dFNYcE9SRXBwVGtkTk1FOVVWVE5PYWxreVQxUmFiVTVVWnpCWlZGa3dUbnBOTTAxcVRURk9SMVV5VFhwYWEwNVVTWHBQVkUweVRtcFplazVVVVRCT2VsVXhUbFJhYUU1RVdUSlpWRXB0VGtSUmVrNVVXbWhPYW1kNVdtcFJOVTVxV1RKWmVsVjVUbFJCTWs1NlNtbE5lbU42VFdwYWEwNXRVVEpOZWtwdFRYcG5NRTlFU20xT1JGa3pUbFJSZUU1cVdYcE9lbEUxVGtSUmVrOUVVbXBPVkVFd1dXcGplVTVxWXpOT2FsVTBUakpGTUUxcVdteE5lbEV4VGtSUk5FNTZaekJOVkZsNVRucE5NRTU2VFRST1ZFRXhUVVJOZDA1SFRUTk5hbU16VG5wak1rNVVWWGhOYlZreVRtcE5NazVVV1ROTmFrMTVUa2RSTTA1RVpHaE9iVkV5VG1wU2FFNXRWVE5PZWxsNVRucE5lazlVU21sT1JHZDVXbXBWTVUxdFNURk5lbHBzVGtkUk1rNXFZelZPYlVWNlRrUmpNRTVxYXpOUFJGazBUbFJaZWs1VVpHaE9ha2t5V1dwa2FFNXFXVEJQUkZsNlRsUkplazlVVFRST2JVa3lUWHBSTTAxNlZYbGFhbHBwVG1wWmVrNUVVWGxPVkVFeVdsUk5NazE2UVRGT2FsSm9UVzFKTWs1NldUSk9hbFV5V1dwUk5FMTZVVEpaVkZFeVRucE5NVTlVVlRSTmVra3dXbXBhYlU1cVRUTk9WRmw1VG0xUk1GbHFUWGxPZE5FYkFBQjNUR3hNZDBsMVFYcFdiVUZIV2pSQmQzQnNUSGRhYWtGS1VqTkJSMGhzUVZSTU1rRjNUWGhCUjNRd1FsRkpkVUZSU0RKYWQwUXhRVkZXTWtGSFJHeEJWRnB0UVcxSWEwRjZTREZDUjBnd1FXMWFNazFIU0dwYWJVNHpRVkZhTVVGSFZqQkJSMGwxV20xSU0wSkhURzFhYlZadFFWRk1NMEYzVEROQlIwUnNRWGRNTWtGdFdtMUJSM2hzVFhkYWJVRjZWakJOZDBRMVFYZHdiVUpIVEcxYWVsWXhXbTF3YWtGNlZteE5kMW96UVZGYU0wRlJjRzFCUjNnd1drZE1Na0Y2VERKYWQxb3dRVzEwTWtGM1RHMUJTbEl6UWtkRU5VRlJkRzFhZDAxNlducE1NMXB0UkRCYWJVd3pRa2R3TUZwdGREQkJkMWQ2UVZSU00weEhUWFZCZWtSdFFsRkVNRnB0VG0xYVVVUTBXbnBXTUZwdFNHcEJlbFl5UWxGd05VRkhlREpCZDFvMFFWRjRNRUpSY0ROQmQzZ3lXbmRGZUVGVVRESkJSMWQ2UVZSU01rSkhjWFZCUjFKdFFrZGFNVUZSV20xQ1VYQXdRWHBJTTFwUldtMWFla3d5VEhkSU1GcHRkREpOUjNGMVFYcFdNRUZSVFhsQlIxSXlRVWR4ZFVGVVdqTkJkMFJyUVhkV2JVRkhTRzFCUjBReVRVZE1OVUZVVEd4TmQwaHNRVkYwYlVGUlJYbEJSM1J0V2tkd2JVRjNVak5hZDBWM1FYZGFNa3hIV2pCQmVsWXdUVkZFTTBGdFRETk1SMFYzUVcxNE0wRkhUWFphYlhBd1RIZGFORUZ0UkROQ1VYQXpXbTF3TUZwSFdtdEJWRm95VEVkTmVGcDZUREJDUjAxMldtMU9Na0Z0U0dwQmVrd3lXa2RFTkVGVVJETk1SM0F6UVZSU2JVRjNUWGxCZDFvd1RYZHdNbHB0UkRCTVIxb3hRVkZXYkUxM1RYaGFiVXd3UWxGTU1rRjNVakphUjFvMFFYcFNNRUpSVFhWQlVVUXpURWR3TkVGSGRETk1SMFF3V25wTU1FRjNURFJCZWtnd1RWRmFNa0ZSVEd4TWQxbzBRWGRFTTBGSGNYVkJla2d6UWtkRWExcHRXakZCZDBRelFYZElNMEpIU0dwQmQxb3lUWGRhYTBGNldqSkJkMGh0UVZGYWJVSlJjRzFCVVhBeVFYZGFORUZSUkRGYVVVMTJRWGRNTUUxSFNERkJkM2d6UVVkSU0wRlVWbTFDVVhBelFVZDBiVnAzVERWQk1sSXpXbmRNYkVGUlRHeE1kMDEyUVhkTU1VeEhSWGhCU2xKdFFYZElNa0ZVUkRCQmQwd3lRVkY0TVV4SFdqTkJla2d6UWtkRU1FRjNSRE5DVVUxNVdtMUlNazFIY0RWQlIwNHdRa2RhTUVGVVdqSkNSMFJzUVVkSWJVRlJSREJhZWxadFdtMUlhbHA2VERKTlVVVjZRVlJXTTFwdFYzWkJiWEF6UVhkSWJVRktVbXhOZDBnMVFVZEVNa0pIY1hWQmVrd3dRVzFYZGxwdFJESmFkM0F4V20xYU1FSlJSWFpCVVVRelFrZE5lVnA2VERKTVIwUXlRVWRPTWsxM1JHdEJkMHd6VEVkSU5FRlJUREZDVVVWM1FYZEVNVnBIUkRCYWJYUXpXbEZFTkZwdFVqQk1iVWd3UVhkSU1scHRUWGRCYlV3elFXMU1NMXB0UkRKQmJVd3dXbTEwYlVGUlJEQkJla3d4VEVkYU5FRXlVakpOUjNCdFFYZE1iVnAzVERSQmVrZ3pRVzFNYkVGM1JESk1iVWwxUVcxU01VRkhjWFZhYlVodFdtMUlhMEZIZEcxQlIxcHFXbTFFYlZwdGNHMUJTbEp0UVcxTmRscHRUak5hYlVRMFducFdNVnAzY0d4QlVYUXdUVWRNTVVGSFVqRkJkMW94UVZSRU1rRkhSRFZCZWtSdFFrZEVNa0ZIZEROYWJWb3pXbTFJTUVGM1RESkJVWEF4V2xGYU1VRlJUREpDVVhBelducE1Na3hIY0RCQmJYQXlURWROZGtGNldtMUJkMDE2UVVkME1rSlJXalZhYlhRd1duZEVNMXB0U0RKQlIwaHFRVWQ0TTBKUldqRkJSM2h0V25kSWEwRjNVbTFDVVUxNVdtMUlNRnBIU0RSQmQzUXdRa2RGZWxwdFRqTk1SMXBzUVcxME0wRjNUREpCZDBneFFrZEZla0ZSZURKQmQxbzBRWHBhTVVGUlRYcEJWRWd4V2xGTmQwRjNWak5hYlUxM1FXMU1NbHB0Ukd0YWJYUXdXbTFOZVVGM2NESkJkMXBxUVZSTWJFMTNSWFpCYlhReVRHMUlOVUV5VWpOTVIwMTVRWGQ0YlVKSFJYbGFiWGd5UWxGTmVFRnRlREZDVVZvMFFXMXdNMHhIU0cxQlVVeHNUSGRJTlZwdFVqTk1SMHd4UVVkTWJVSlJURE5CVkVReVduZFhlbHA2VmpKQmQzQXdRVzFNTWsxSFdqQmFiWGd6V25kTU1rRjNURzFhVVV4dFFVZElNRnB0VFhwQlVYZ3pXbTFOZDBGVVVqRkJSMDExUVVkYWJVRjNXakpCUjBRd1RWRlhka0Z0VWpOTVIwUXlRVzF3YlVGM1dteEJSMFF6UWtkd2JFRjNUREJDVVZwdFFXMU9iRXgzUlhaQlIzZ3dRa2RJYWtGdFVqTkJVVTEzUVhwV01FMUhXbXRCVVVneldtMUZlVUYzUkRGQlIwMTJRVkY0TTBGdFREVkJiVm93VEcxSWJVRnRXak5hYlZwcVFYZEVNVnAzY0RGQmQxWXpXbEZ3TTBGM1REQkJSMGhxUVZGSU1rRkhXbXhCVkV3d1RFZGFOVnB0VW0xYWQwMTFRVlJhTVVKSFJYcEJla1F3UVVkd01FRkhUREpCUjNGMVFXMXdNRXh0U0RKQlVWb3lXa2RNTVVGdFRETmFiWEJ0V20xTU1rRjNSRzFCZDFZeVRYZEZkVUZLVWpOQmQwaHJXbTE0TTFwSFdtdEJiWGd3VFZGWGRrRnRkREJNUjBSc1FXMVdiRTEzVFhaQlIweHNUWGRJTlZwdFRERk1SMW94UVhwSU1rRjNTWFZCVVhReFdsRkZla0Z0ZURCTWJYQXdRVlJJTWsxM2NHeEJSMGd5VFhkYU1FRnRWakpNZDBRMFdtMXdNbHBIU0RKQmVsb3lURzFhYWtGM1JHMUNVVXhzUVVkRU1VRnRSR3hhZWxZelFWRk1NRUZSVERCQmQxcHFRVlJJTTBKSFJERkJVVXd6UWxGd2JGcHRUakZDVVVoc1FWUk1NMEpSY0dwQmQwUXdRbEZNTVVGM2RESk1SMFJzUVZGYU1WcEhXbTFCUjNCdFdsRk1NbHB0VmpKYWJVbDFRWHBFTWxwSFJYbGFiVXd5VFhkd2FscHRXakpOVVZwc1FWRk1iVUpSVERWQmQwUXlUSGRhYWtGM1VqRmFkMW96UVVkV2JVSkhTREpCZWxJelRFZElhbHB0ZERGQ1IwMTRRWGRJTWt4SFJYbEJTbEp0V2tkTU5VRkhSRzFCUjB3eVFYcE1iVnB0VFhkQmVrUnRRVWROZUVGSFVqQkJkMDE1UVhkV01rRlJUR3RCUjNnelduZFhla0ZVVERCTlIzRjFRVlJNTUUxUldqSmFiVm96V25kTWEwRXlVak5DUjBnMFducFdNMEZIU0RGQlIxSXhXbEZOZVVGSGNESkJkMHh0UVhkU00wRnRSWGRCZWtneldsRk5kVUZVU0RKTlVVUTBWMm93V0hGVlYyTnZlbmt3Y2taT09WWlFjV3R2WVhCcFJVcG5hRXh0ZVhsRmJHYzBSVXRhTUVsVGNXdE1TMDlvUjBoSmJrcGhUak5CTVhWUVdqTnhia1J0VFZkdVNIazJTWGx4TW01S1JUTk1lR2RMV20xNVEwaEhlRFZ4Umprd2NGSmliVVY0VjJWeGVEUXhjbmgxWTI1NlUyMXZNbU5xUlZGTk1uSlZRVEZ4VVVWM2NESlhOa2w2ZFZOWU1EaHBSVk5GZFVsSlJXMUtlbE4yY25vNE1rWXlZMkZNU0hGUWIzcGphVXhJZVc1R01VRnRSMUpCVWtWUU9XRlpiVTkxVFVwclJIQXpkVFZCVTFkUlJVbFRVVVJKZURCeGRqaHNTWFk1TkZwS1owVlpNRTFxUjFWeFptOHdjVVZ1VlVGcFIxVjBOVWRWWTNWeFVuRXdURWRCVjBVeVUydGFVbkYxUlRCSlVFaElNVUpGYlhWWWNsTkZZa1o0WjFKSGVtTnRSREZ4VFhCS2RWVllNMU42UlhwTk0wbEhjR3h4WVU4d1dqQkJNVnA2TkdwdlZFRm1TVkZOYUhCSFQxQkhTbU5xYmtoRlRVSlRXbWxGTVVnd1NVbE5SMFJ0V2pCTVMyTXlibFZGTVVReWVUSnhWWEZZUmpKeE5VeElSR1ZCVlhCcGNuZHhTSEpWUVd4dU1EbHJSWGxpYVVkSWNVbEZZVUZsU2xWVE5ra3lWek5hTTBFMlJtMWFha2g1WWpKdVIwVkJXa2xqWW5GSWNHdEZTRk5oUkRKeFNVRklUVlZLU1hWNlNFZHhORXd6ZFU5R00za3dTVXBuWkc4eFFVcE1SMXBwUlVoTldVMHplVXRJYkRreVJYZFhSRVZHT1hsRlNFRldSbTFUV0c0eFUxRnllWFEwVFhkeGEzRXdZMGRDVVVWQ1JETmpibkJ0VFZKS1NtTnNSWG80TWxwVGNYWmFWWGsyY2tkU05FeHRWMnhGZURSbFJVdFhXRVl3Y1d4Rk0wOVpRWGROWTBkdFNWVkVTWEZaV2xWNVVIRjZOR2xGU0RscldsVlRkVnBSU1ZwTmQzaHJRVlZ4VVhGSVUydEpWVUZHU0d3NVFuRktRVWxaTWtWaGNEQkJlRzVWVFZGQ1IzbFBjRXRqVlVWdFFXVnZVakExU25vd01uQlZUMHBKU0UxQlFYbHhZMEY0VFVsTU1WZHFSM3A1TkVaU1JWSnhkM2xKUVRGMVRFRXhUMUJIZVZOcFNWRjVORzVIUVdKRk1ERm1SVzFCTVVSc09WUkhkbWRMVFVvd01tNUlTR2xNZUVsU1NsRkZXRmt5T1hkSFZYZzBSMGd3YWtwaFQweFlNMFEwUVhoNVVFaElUVkJGTWpocVRFcE1NRVZJUkdsQmVGTm5ibEpYUzBsdFYxSkpTa0V3V0cxeFJXOUhTVTlOTTNsalIxTldhVVV4ZFVSSlZGSTFjVXAxWjBVeVdtbGFTWEZGYjBwRlZFaFFaekpOU0VGaWNuZDFNazFVYTJkRVIzQnBUVE53WlVWSmVHVnhSMEY2UWt0WFYwMUpUR3RCZUZvMVRWRmFiRUZLVXpaQmJVMW5Ra1k1ZVhFeU9VbEdTMEZYUWxOQmFVbEhlVFpNZDBGaFFYZEJTbHB0VFVSdVVqRm5SbnBCYTAxS2RXRllNSFZvV0RGRmRtOHpTRE52ZWtWb2NGUm5VVVZSVFdGd01IRnFjVWhuTWtGU1RWUndTMWRIYm1GV01YRjNjWGROZDNWTVdHeG5hRUpMVm1wYU1tdDFUVXBNTTBSS2NEVk5Va1JwUmxRNWFrcFVRVTFOZVdOMlFWUndiVzh4V21WR1NGWmxXVEpXYlVsVlYxRkhTWFZVY0ZGVGVVUjNURE5LVkVWUVdHdzVUVVZJV21Wd1NVNXNjWFk1VDNCNWVYWmFTMFZCV2t0MVpWaHRWM3BOUzNsNVNVZE1Na1V3TVdWS2QwRnFRWGQ1V0hKSGVXMUZVbkZtUmxSWFdXOHpTWHBGZDNCcFJFdGpSa2g2VXpOTlVrbHJXVE5OUjBGS2NWVnZTRmRwUmpKd05FcEplREZNZVhGS1FsUkpSa0YyWjFaTVIzRkhSVlZUZFZwMloxaEpVakZCY1dGQlIwcExZMDlLU2pGc1RWRk1hMFJ0VnpGdVZFRjVRbEpqYVVSSVJESnhNblF6VFZGMVlVbFNXakZNU2sxWWIzcE5hMHBWY1haRlMzVklia2RTTTI1SU1HMXdZWEZWY0hwQk0yOXRWMUpCTVdOclFVZFRVRm93Y1VWd1VsWXlSRzEwTWtsdFVqVnZVbkF6Y2xGU01rVnRVMkZHUzNBMVNWTjBNMFJzWjFwRU1uVXpjbmRQTkVVeGRXbGFSMFZoVERGVFZVbHRRVkp2VW1OcFJqTkVNMGRLTVRKQmVrMVNSakpuTkVwNmNWVnVTR2R0UlZWaU1rbFVPRFJ4ZVUxcVdqSkliRTF0V2pWR1NrRm9SVWxqWTBWTGVHbEJkM1V5YnpCbmVFWlRWelp4UjNsUVdrZFhTSEF5VjJkYWVqaHBSRzF3YWtsSFQwdE5SMWQxUVhkMWFVRjRZbXRhVlhsc1drZDBaVVZ0Y0RGSlZWWTBSakl4WVhBelVqSkZlSEZNVFRKeFNrVlJTRE5JZWxOblRVcHFNMFZLTlVOeWVYbHBjbmhpYkVsdGVXdEVTbWRNUkhobU1YSlVSV2R4Vkd0bVJsSm5lVnBIY0RGTlVVVjFSWG94VjBoM2VXSkVlbGRwVFZGeFUyNUxlVUpOZUdadGJsUkpWRUpKVG1WS1NsZFNSVEY0TWtsdGNHdENVVTFaVEdGYU0yOUtlVEpIUjNsclJWUjBOVWhJWm1sS2QzRTBSRWR4WmtFeVNEVnhNWFZsV0RKNVlVeGhlVmhGTWprMFNHMTVObHBMZVVKdVNGZGlXa2hyYlVWNFFXeHdlVm8xYmtsTlZVRjNUelp2UmpsWGJqSTRiRVV5TlVweGVHTm9jVlJUWW5GVVNYVktWVkpyU0ZSSlZuQlJkRFJGTWpBelRYcG1hMGwzZFdWd01tb3ljRWgxUjFsdFVqRkhWSFJ0U1ZBNWFIQjNWakZGZURFMVFsQTVZbkV6Y1hoS1UzVlJXREF4YUV4S2VEVktlSFYzVEROVGFFeDJaMmhFTWtGb1RVdFRZWEZ0Y1ZKYVIzRmlXbEYwWlVaS1RVOUpNbkZrY0VkVFdVcEtRWGhNU0VrMVNFbDFZVnBIU1VwdVNIRlBSVE5CVkhKUU9HMWFTSFJ0U2twNWRVSklTVWhHTUdJMWNGSkpabTk2UlZWRlVtSnJTSHBGYlc1UlUzcEtSMWRsYmt0VGFFaElWM1pOTTFkalNERjFZbHBTZVdOSlJqbE1SRXRYWVVGSVoxUnVNRk5IY0RCSlpYQXhlR3BKTTFabFNVbElNMEY2WW1sRVIwbFBXVEJTTlVkUmNXbHVSM0YzU0ZWYU1rRjJPVTF4Um1kblRXMUlhazFKZUcxdWRqbElTbmRYWWtoS1RXNXhlV0pwY0VveFkwSktTWGhLWVhReVRVaDRiSEpTVTNoTk1uVmpSbmhpYTI1NFFWZHdTblZMUWt0QmFVMHdhMUZ1ZW1OTVJIcE1NRVI2Y0cxWU1YVXlja2RXYTBsNk5ESnhlblZFVEcxWFdFaDZkVWx1VkhsMWNUQnhaMFYzVnpOdk1WTTJXbnA1WW5Fd1RWcEtlWFZCUjFCbllVRlVWekpCZVVoc1FsUjVTWEV5U0RGSk1HdEhjbmRCVFhKTFRXNUlTRWh0U2twVFkwWXdSRE5HZVdOcVRIZDVTRVp0UVd0QlNqVkZSa1puZVVjeWRWZE1NMU5GV2twTllrVnRUVWhhTUZOcmNrcEZWRzVoVFV0TVlYRnJSMHBqU1VRd2VWQkJiVXd5V2tsQlRGa3pkWHBCTWpWUVJIbzFaRzk1WW10Q1NsTjFSWHBtTlV4dGVHeGFSMHcwV2xSTlFscDJPVEpZTUhsc1FrcHFNa1o2VjNWdVZWZEpja2R3YVVFeVFYcE5VWGwyU2toblluQlVPVk5hZWxkaVdqQkJaVUpMUlZsdk1IRkVSbFZTTTBSM2VWaHlTa0ZwUkhsRlQwRkpjVlJDUzNVeWIxSTBNWEIzZUROeGVFRlVSRzFJYTNFeWNWZEVTVmRRUlhabmJFcDRRWGxGTWxNMlRXMXhkMjVJTVZOSFVrRjJURWhuVFUweFNVZEllamt4YmtweFYzSjZSVk5HU0VsaWNETkpXbkY0Y1dSSFNVbG1XVEZKUlc4eU5ESk1lRUZhV2pJNWFrWklORzFNTWxOclNrbDFhMEZMV21WSWVsZFJRbE5YZW5CSVVqSkdNbE0xUm5oV2FXOTVXak5KVkRBeVFraE1ha0V3ZVZSYU1qbHJibE53YWsxNmExZE5TbWRwUVV0QlNISlZZMnRGTUd0S1dsQm1OVzk0YTJ4TmJWWXhSVE5OUzI1VFkycEtSMU5vUVZSMWQwSklkV0pOZWtWbWJtMXhRVVZSV20xdlZGTkZTa2RYWVZwdGRXbEJlV05CU0ROUGFVVlJlVEpGVkZJeFJYaDFVbTh3VFVodmRqbDVjVEpCYlVVelQzcE5Va3d6Y1dGV1pVMHdXbTFHUmpsRVNXRjRiRVIzVTBseE1WSXpUREZhTW05aFkweHllbkUwYjFOeFIxa3dURE5CZW5BeVRFbzRaVVYzUVd4TVNYVk1Ra1puV0UxaFUwTkliVUZOVFVoTWFVWXhRVTF2UzFjelRYbzFia1l3ZVZoRmQxTmljbmd4WTBkVmVYaEJVbGRWY1VoalQwZHRVbXRIVVhsMVNIZHhiRTFTVjJKR2VqbDVRa3RQWlhKM1ZteGFWRFV6U25oNWQzRjZSR2xHVVZkWFdqRkJRMDE0TVdaeGVubGxjRlZUZFVSTFYwZGFTMWRsUmxONVdtNWhTWGh4YlZkaGNFbDVlVnBoZVcxS1ZVOXFiMVExU1hKSFJWQmFlbmxuUjBoWGJuRXlNVWhKTURsQlJraGlNMFV3VjJwSE1YRTJTbEZKYTNCaFlqTnVWRWxsY0hkRVpVRjZTR3BIVkdkRGJrbHdNa3BIVG1WdlZFRlJjRXBTTkVGdFYwcElkamxtY25sRlZVcFJjVzFHTWpWc1NsSnJlVVF3YW1WdllWZFFTVlI0YTNGSVRETkhNblZKY0RGSmJFZ3pZMWxCUzFObVFVaE1NRVY0ZUdWdVNGb3hSREZCZUVkSGVUSnZNM0UxU1VoWE1rVXlkVXRKZUZwcWNraFhVMjlVYTJoRU1uUXlUSHBUTVc5U1pqRkllRmRJUVVsQmVFMVJWMjFOTUVsNGNESXhUSEZJYTNsRmVuVlBXbEY0Ylc4d1NVbE5TbmwyUmxONVlrWXlTREpHZDBGdVIyMTVSWEF5VTB4Q1VsZHNSa3BKV0ZvemRXUklNa2xHV2pGNWQwVlNjV2RhWVZkaFNIaHJOSEo0WjBWdWVuRTFXREYxTTFveVFYbEhTblZQY1ROQmVGZ3pWelZLWVZjd1RXRkJhSEZKZVdsWmJVMTZSVkJuUzBwSVVqSkZSMXB0YjNZNVlrSlVlVTl2WVZabFdrbEpiVVpLVFZaQ1NHTXlSVEpJTUV4TGRXNU1TMDE0V2t0NU0zQlVVMDFJU0VVMVdESjVZVVF4ZEd4R1VYVkZibTFUVjBaR09XTkJTRTF1UmxKbU1GcFJRVmx2UzFjMmNucHhXVUpLUVdsSE1YRmxjVEkxWVVFd1JHeElSM0ZaUlVvNVYwZFFPVVZ3VUdkWFNUSm5aVTFLVERCSVUwVkpSM2RJYlVneWRWaE5NblZzUjFCbmJIRkljV2RhZWtGRldubFRUVTB5TldKTk1rVjViM2Q0YVc1U2EwbFpNakZsV25oTU5Wb3pWak5FYkdabGNrbEphbG95TldWd1ZFbDFSRE5UUkhCS2VWWmFWSGwzUjBwQmVHNUtVMXBCTUVVelFYaDVUWEJWVFVod1NqRlFUV0ZCVlVsUmVWSnhSMU5YVFZBNVNVVlZXakJCTUdJeFdrbHhTbGt6V214R1ZGTmhRVWhqZVVaSGVWWkhTWFZSVFhnMVpuQXdkVkZJTUhVelJtRkpWa3BJWTI1QlNrRlNjVW8xYVVaaGRHbEVTR3RUUkVablNVMVJkR3RNZUZkSFFVbDVTVTE1Y1ZORWJVaGxRVXRYYlUxVVFYWndVVXd3UVROaWFVVlZTR3RJTWpsVVJIcDVZVzlWVDJaR2RqbGhiekJOYmtKU1FXUkplVTFoVFROVGFWcFJlVkJLUjFZMVJFZ3haRTF0Y1ROSmVtYzJXVEJUVkc5S1RXaHZTa1ZaY1RKQk5FbFFPVkZ2WVZZelFsRlRibkZoVTIxTU1GZHFXbnBuVlVZeGRXbE5TSEZvVFdGU2FXNUhlVkJ4ZWpsU1dqQndhVzVWVFZOR2VGcHRiakF4TTB4SFUyWnViR2N5U2tZNWJrd3hjVlJ3TW5GcmNIcE5VRWxMVTJ0dlZIUXpjbEZFTTBwVFNXdHVNamxFY1hZNWEwZDRWMHhCTURCdGJubzVSM0JVTVVoeWVGSmxSRE5YTVVsdFNWcFpNblZZUlRORlJFSlNZMnRKVlU1clFsUnFNMFpWWTFOdk1qVXpjbEJuWW5KNmNXTkVZWEZtUVhseFQzSlNVMWhOU0djMWNFbGpURUZVVjBod2VGZHJTVkl4Ym5Fd1RXdHZNVk5VVEdGU05FUjRTVXBOTVZJMGJrdDVkMGRVUVVaRWVHTkxjRkptTkc4eWVWcEliVUZhUlRGTWFVRlVUV05HVkVsTGJ6QnhRWEo0TVRSRVNYUnFjVzFKWTBGSVJXcE5iVUZtU1RONWVVMTZTR3RhZW5sRGIxVjVla1V6VFdKRk1FRmhTSFk1ZUc5VlkyaEliR1pyUlVveFdFWXpkV3h4VlZjd1JqTk1hVUpHT1doTlZVMUJRa2d3YTB4NGRUWkJWRUZHYjNkNVFVa3pURE5IVVZNeWJrcFRUVXh0UVhsYVNqVlpSbnBKTVVoTFFUVnZWWGd6V1RCaWEwVXhUbXBGVW5sS1NsVnhiRWRWVHpSQk1XSnBja3RKVTBVeVVtVkNSMEZyUVcxSlkwVktWbTF2VVhWaWNEQm5aRWRMY1hWRk0zbGtUVkY1V1UxUlNHMXdVa0ZzUWxONGJXOVVZMlJOTVUxQlFrZEJkVzh6VjNWdmVHWXhjbUZJTlUweGNYbEZVWGhsUlVweE5XNHhTVTlhTWsxaFdtMVhZa2RKY0dWRmVsTjFURWRGVjI1TFVtVmFSMFZvY0ROeFkzSklXbXhIUzA1c2IwdFRhVUY2ZERCYWVFVjFjVE5pTW5KTFV6SkJTREZTVEVwNVMzRXlVak5HU1ZOM1RUSkpSa0ZWY1d4dVZYaHNXRzF4ZDFveU5VRkJNa2xyVFcxRU0wVjNjR3RKZG1kamNFdFhSMHhMU1hWYVlVMWlTbEpUYlc1TFFYWklTM1ZGUVVkSk5FbFNjV3B1VW5sVGJraFhZMEpSVHpCQlNVRmFSRWhCYTBGS09VbEtTbmhzYmpGSlVVWkhWMnR2ZVVFd1RUTlBZVTF0ZURGeWVrbHJTVkZNYWxwM2VVdEJlamx0UkV0NWEzQjJPVUpOU0RGb2IzbEZhVVo0ZVROeVZGZDRjV3c1V1c5SlYyWkhWRWxtY2t0VFRVVkhWelZ5UjNGdFIzZEZlVVZIUlZoTk1WWTFRVEoxWlZreFUzcElSMU5qY1V0WFRXOHdlVFJKYlVGdFNFaG5iVVpoU1RaYWJVRXlTWG8wTVhFeGRXNUdNWEExVEhvNWFVZEhkVUZGTWtWdFNXRlRlVzh5T0RWTWVuRm1iakJuUjI1dGRXZGFNbWQ1Y2tvMWFXNHpXakphU21OWldrcEJaMHhMVTBodVNrUTFXREZOTVZrd1ptVkZTbE5qUVhneGRXNVVUVUZHZVUxcVIxQm5NRXhKUkd0YVVVMVpRVWxTTlVGTFJEQk1NVWw2VFcxSmFrUXdPV055VTNCbFNraE5lVUZoY1hWdVUxSnFRVWhYWTB3d1FYcEdiVUZhUWxScWJVcGhUMnB1VkVsNlNHRjVUMW93UkcxYU1FVkpTbnBUU1ZreWExRnhVR2RhUkhsRmJFVXhlWFZDUjBodFJVWTVhbTlHY0VGUWVqbHNURXBCWmsxR1RqbFdVSEF5V2tkYU1FRkhWbTFDUjFveVFYcEVNRTFSVEd4QlIxSnNUSGRhYlVGM1REQk5VVVF4V20xd01rSlJTREZCZWxKdFFXMU1ORnB0V20xYWQwdzFRVWRPTTBKUlRESmFiVVF3VEcxYU1rRlJjRE5CZDBoclFVZE9NRXgzVFhWYWVrd3lUVkZNTVVGM1ZqQk5VVnBxUVZGSWJVRnRUWGxCU2xKdFFWRkliRnB0ZEcxQ1IwUXhRVkZNYlVKSFJESkJiVll5V20xSmRWcHRTREJOUjFvMVFXMTBiVnAzVERWQmQzQnNUWGRGZFVGNlVqQk1iVm95UVVkU2JVSlJSRE5CYlVneVFYZEpkVUZSY0RCYWJYQnNRVkZTTVZwUlNHeEJlbEp0V2xGd2EwRjNkREJDVVZwdFFWRldiVUpSUkRSYWJWb3lRVzFJYkVGUlJHMWFiVVF4UVhkRU0wSlJTR3BhYlV3eFduZGFNa0ZSVW14TWQzRjFRWHBTTTBGSFRYZEJkMW95VEVkTU1rRkhUak5NUjBneFFYZE1iVUpIV21wQlVYQnRRWGRNYkZwdGVEQmFiVm93UVZGSU0wRjNUREJCUjNRd1FYZE1hMEY2VWpKTlIwd3dRVlJFYkV4M1RETkJkM1RSR3dBQVZUTlBSRlV6VG1wUk1VOUVUWGxPUkVreVRsUlZNRTVIV1hwUFJGa3dUbnBCTTAxRVZYZE5la2t6VDBSWk1rMTZRVEZPVkUwMVRucG5NMDVxVFROT2Ftc3lUbFJOTlU1WFJURk5hbFV3VG5wQk1FOUVXVEZPYW1NeldWUlplRTVVU1RGTlJGRXdUbTFWZWs1NlRUTk5iVmt5VGtSUk5FNTZaekZOYW1NMFRqSkZlazVxV1ROT1ZGVXdXa1JSZWs1VVJUQlphbU14VGtSSk0wOVVXbXBPUkVsNlRrUldhRTVxUlROT1JHTTBUbFJyTWs1NlZYaE9SRlV3VFdwYWEwNUhTVEJQVkZVelRsUlpNRTlVWXpWT1JFMTZUVVJhYUU1VVl6QmFhbHBvVGxkRk1FNUVUVE5PYWxrelQwUlJlazVxYXpKUFJGRjRUbXBWTTAxVVZURk9SMGt3VDFSVk1rNVVXVEJhVkZGNFRYcFpNMDU2VVhsT2JVa3dXbFJOTkU1VVp6Rk5SR041VG0xSk1VNVVXVFZPZWsweVRucFZkMDVVVlRCTmVsSnJUbXBqTUZsVVRURk9WRVV6VDBSYWFVNUVSVEJaVkZGNVRrZEpNVTVxVFRCT2VtTXdUMVJqTVU1dFRUTlBWRmw0VFhwQk1FNVVWWGxPVkVVd1RXcFJOVTU2UVRKTlZGa3dUbnBaTVU1VVl6Tk9iVkV6V1ZSVmVFNXRVVEpaYWsxM1RYcFZlazlVVW1sT1IxVXlXa1JaTlU1RVJURlBSRnBxVGtSak0wMUVUWGhPYlUwd1QxUmthRTE2VVRCT2FrMTRUa1JKTWs1VVdtMU9WRVV4VDFSak1VNVVZekZOYWxWM1RrZE5NVTVVVVhsT1IwMHlXV3BhYVU1dFJUTlpWRkpwVGxSak0wNTZZelZPUkVreVdtcGpNVTVVVVRCT1ZFMTNUa1JSTWs5VVl6Qk9hbU42VFZSUk5VMTZSVEZOZWxwcFRucEZNRTFVVVRWT1JGa3dUbFJSZWs1RVVUSk5WRmw0VGxSTk1FNUVWVEZPZWtreVRsUmFhazV0UlRCWlZFMHdUbFJuZWs5RVVYbE9hbWN3V1dwUk1VNXRTVE5QVkUxNFRrUnJNRTlFVlhwT1JHTXdXV3BSZWs1SFJUQmFWRTB4VGxSTmVrOUVXbWhPUkUxNlRWUlJNRTU2U1RKUFZGVXpUbXBSTUUxNldYaE9WRmt3VFdwWk5FNTZXVEpQVkUwd1RrZEZNRTVFV21wT1JFa3pUVlJOTVU1cWF6Rk5SR014VG1wSk1scFVVbWhPZWtFeVRtcFpNazVVYXpCYVZGazBUbTFGTWs5VVkzbE9SRmt3VDFSTk1rNVVRWHBQVkZFeVRucEZlazFxVlhwT2FtTXhUMFJrYUU1NlNUSlBWRkV4VGtkVmVrNUVVbWhPYWxrd1dtcE5lVTVIVVROTlZGcHRUbXBWZWsxVVZYaE5iVmt5VG5wVmVVMTZaekZOUkdNeVRrZE5NazVxVlRST1Ixa3pUVlJhYWs1cVRYcE5WRkUwVGtScmVrNUVWWGxPUjAweVRYcFZNMDVIU1RCWmVsRXhUbXBGZWs1cVVUQk9iVTB5VG5wWk1rNXFSWGxhYWxKclRsUlplazlFVVhsT2JWVjZUbXBWZDA1NlRUSlBWRTAxVGtkSk1VOVVVWGhOZWtVeVRucFJlRTVIUlRGTmVsbDRUa2RGTUZwRVdtaE9hbFV4VDBSTk1FNXFaekZPVkZrelRtMVplazVxV21sTmVrVXlXbXBhYTA1SFNYbFphbFV3VG5wSk1GbFVVWGhPUjBreVRXcFZNazVFVFRKYVJGWm9UbTFaTWs5RVVUTk9hbEV3VGtSUk1rNXRTVEJOZWtwcFRtcGplazVFVVhoT2JWVXdUWHBWTWs1Nll6TlBSRkpvVG0xWk1VMUVWWGxPUkZWNlQwUk5lVTVIUlRCTlZGVTBUbFJyTUUxNldURk9WRlV3VFhwU2FFNXRUVEJOZWxFelRsUm5NazE2V1hwT2FtTXlXa1JTYkUxNlZURk9WRlV6VFhwQk1FMVVUWHBPUjBVd1RtcGpOVTU2WXpGT2FsSnBUbnByTUU1NlVUTk9SRWt5V1dwak1FMTZaekJPZWxVeFRrUnJlazVFVlRKT1ZGRXdXVlJSZUU1cVJUSlplazB5VG0xSk1FMVVZekJPYWsweVRucFNhRTV0V1ROTlZFMHdUa1JOZWsxcVdUTk5lbXQ2VFVSak5VNUVSVEpaZWxKdFRYcFJNMDFFVVRWTmJWa3dUMVJSZUUxNldURk9WRnBzVGxSRk1FNXFWWGxPUkVWNVdXcGplRTVFVVRKT2FtTjRUa1JuTWxscVVtMU5la0V3VDBSU2FFNVVWWHBOYW1NeVRrUm5NVmxVVlRWT1IwVXhUbFJSTVUxNmF6Sk5WR015VGtSamVrOUVVbXhPYlUweVRucFJlVTE2V1hwT1ZGRXlUa1JWZWsxNlkzbE9SMWt3VFhwYWFFNXRUWHBPZWxVd1RYcHJNVTlVV21oT2JWRXlUbnBSTWs1SFNUQk5lazB3VG0xWmVrOVVWVFZPUkZVeVRtcFpNMDVIVVhwT2VscHJUa1JSTUUxVVVUTk9iVVV4VFdwVk0wNUVaekpaYWswMFRtcHJNbHBFVlRST1ZHTXpUa1JWTVU1RWF6Sk9WR041VGtSWmVWbHFZek5PUkZrd1RrUmFhVTVVV1RCTmVsSm9UbFJCTTA5RVl6Tk9iVWt6VDFSVmVFNXFWVEphUkZKdFRXMUpNRnBFV21oT01rVXdUbnBWZDA1SFRURk5WRlV6VGxSWmVrNVVWVE5PYW1zeFdWUlNhRTR5UlRKUFJFMTZUWHBCTWxwRVdYaE9SRVV3VDBSTk1rNUVTVEJaYWxrMVRrZFJNRTlVVlRKTmJVa3lUWHBSTVU1NmF6RlBSRlY2VG1wak1VNVVZekZPUjFWNlRrUmpNMDVVUlRKWmVtTjZUbXBuZWsxcVdUTk5la1V3V2tSWmVrNXRUVEZPYW1OM1RsUk5lazU2VlRGT2Fra3dXVlJhYVU1cVZUTlpWRkpwVFhwVk1rNUVXWGhPVkVFd1QxUlZNRTVVYXpKTlZFcHBUbnBKTWs1RVRYZE5lazB4VDBSUmVFNUVTWHBQVkZab1RtcFZNazlVV1RGT1JHc3lUbXBWZUU1SFJYcE5SRmt6VG0xWk1VOVVUVFJPZWxVd1drUlZNMDV0VFRCTlZGcHNUbFJOTUUxVVl6Sk5lbXN3VG5wWk5FNXRTVEZQVkZKcVRtMU5NRTU2VW1oT1IwMHlXVlJWTkU1VVZURk9lbEpvVGxSbmVWcHFXbXRPUkVrelQxUlJlRTF0V1RKWmVsRjRUbXBKTTA1RVkzaE9ha2t4VG1wWk0wNXFZekpQUkZKb1RrUmpNVTFVVVRWT2FtTXdXa1JhYVU1VVdUSk9SRnB0VFhwak1VMVVVWGhPVkVFeFRsUlNiRTVFYXpCT2VsWm9Ua1JqTTA1RVkzbE5lazB3VGtSWmVVNUVSVEpaYWxGNFRtcEpNVmxVVVhsTmVtTjZUVVJhYUU1cVdURk9WRkpzVG5wQk1VNTZZekJPZWxGNlQwUmplVTE2VVRCYVJHTTFUa2RKZVZwcVZYaE9hbU14V1ZSVk1FNXFaekJPYWsweVRrZFZNMDlFV1RWT1JFVXpUbnBaTTA1RVkzcE5SRkV5VG5wVmVrMVVWVFZOZW10NlRWUlJlazVxUlRGWlZFMDFUbXBKTVUxRVVUSk9SRTB5VFZSYWFFNUVSVEJPZW1OM1RrZFJNazVFVlhwT1JFVXdXa1JqZVU1dFZUQk5hbFV4VGtSak1FOVVVbXRPUjBrd1RWUmplazVVUlRCYVZFMDBUbnBGZWs1Nll6Uk9SMWt5VFhwU2FVMTZXWHBPYWxKb1RYcEJNVTlFVVhoT1IwVXhUWHBOTVU1SFZUQlpla3B0VG0xTk0wMVVVVEpPYlZrd1RXcFpNazE2U1RCTmVsa3lUbFJGTUZscVl6Vk5lbEV3VFdwVk5VNVVUVEpQUkdONVRrUk5NRmw2VVRGT2JVVXdUV3BSTUU0eVJYcFBWRkY0VG5wQk0wOVVUVEJPYlUwd1dYcGFiVTVxYXpCYWFsa3pUbTFKTTA5VVRYZE9hbU16VFVSU2FFNUVZekpQUkdONVRqSkZNbGw2VW1sT2Vtc3pUa1JrYUU1SFNUTk9lbFV6VGxSWk1scFVTbWxPUjBsNVdtcFZlazV0VVRCTmVsRXdUbFJSTWs1cVVtcE9SR3Q2VG5wUmVVMTZWVEJOYWxKdFRYcEpNbGxxU20xTmJVa3dXVlJqTVU1cVdURk9lbEV5VG1wak1VNVVUVE5PYWsxNlRXcFJlRTVVUVRGUFJGRXlUa1JyZWsxNlkzZE9hbWN3V1dwS2JVNVVSVE5PVkZwcFRtcFZNRmw2VlhoT2FrVXpUbnBhYlU1Nlp6Tk9WRmt6VGtkSmVrMXFUVEJPUkVreVdrUmFhVTU2U1hwT2VsRXpUbnBaTTFsVVVUQk9WRmt3VG1wU2FVNUVZek5PYWxVelRrZFZNRnBxU20xT2VrbDZUVVJSTkU1RWF6QlplbEpvVG1wUk1GcFVTbWxPYlVreFRVUk5NMDVFUlhwUFJHTXpUbXBuTVU1NlVtaE5iVmt5V1dwVk1VMTZUVE5QVkZGNFRtMUZlazlFVVhoT1ZFRXhUV3BWZDA1cVdURk9WRmt3VG5wQk1FNXFVWHBPVkVsNlRsUk5ORTVFU1RKUFJGVXdUa2RWTTAxcVZURk9la1V3VFZSU2JVNXRVVEpOYW1ONlRXMVplazU2V1RST2JVa3dUa1JSTlU1cVl6SlphazB3VGtkRk1VOVVWWHBPZWxFeVdXcEtiVTE2VVRCT2VrMHdUbXBKTVUxNlVYaE9WRkV4VDBSUmVFMTZUWHBOUkZrMFRtcFZNazlFVFRKT1JGa3pUa1JaTkU1dFZUQlpWRkpxVFcxSk1GbDZUVEJOZWxWNlQxUlJlazVFYXpKT1JHTjNUWHBGTUZsNlRYZE9iVTB5V1hwak1VNXRSVEZOZW1ONVRsZEZNVTlFVlhoT1Iwa3lUa1JXYUU1SFVURk9WRkV4VGxSUk1FNUVVVE5PUkZVeVdXcFNiRTU2V1RGWlZGRXlUbXByZWs1VVZURk5lbFV4VFZSVmVVNUhUVE5OZW1NelRXMUpNazU2VFROT1JHc3dUMFJSZWs1VVZUTlBWRnB0VGxSbk1GcHFTbTFPZWxGNlRtcFJlVTE2VFRKYVJGRXpUbFJCZWsxNlZYaE9WRTB3VFdwWmVrNUVWVEpaYWsweVRrUkplazVxVlRCT2VtTXlUV3BaTVU1cVVUSmFhbU4zVG1wTk1sbHFVWGhPZWtVeFRXcGpkMDVxVFRKYWFsazFUbFJyZWs5VVRUQk9WMFV3V1hwTk5FNUVUVEJPVkZrelRsUmplVnBxVW10T2FtTXlXbFJqTlU1SFNURlpWRkY2VGtSTk0wOUVXVFJOZW1jd1RtcGpNVTU2WXpCYVJGVXhUa2RGTUZwcVdYcE5lbEV5V21wYWFVNUVVVE5PYWswMFRYcHJNVTFVVW10T1ZFRXpUbnBSTVU1NlVYbFphbFV3VGxSRmVWbHFZekJPUkVVeVdWUmFiVTU2UVRCYVZGbDVUbXBuTTFsVVZYcE9SR015VG1wWk5VNTZaM3BPZWsxNlRrUkZNRmxVVVhwT1ZHc3hUVVJaTTA0eVJUQlplbEpwVG1wTk1VNTZXVE5PUjAxNlQwUlpNMDVYUlRCYVJGRjRUbXBWTUZscVZtaE9hbGt6VDFSU2FFMTZaekpPZWxVMVRrUlZNRTFxV1RCT2JVa3hUV3BqZVU1SFJUSlBSRXBwVG5wck1FMVVUVEZPUjBVd1QxUlJlVTVxVlRKYWFsSnFUVzFaTUZscVdteE9SRTB3VFZSUk1FNVVSVEJaZWxFd1RucGpNVTVxVlhoT2Vtc3hXVlJOZWs1SFRUSlpWRTE0VGtSSk0wNXFUVEJPYWxGNlRucGthRTV0VlRKT1ZGSnJUa1JWTVUxNldUUk9WRkV5VG1wTk1FNUhSVEJPVkZGNFRrUlJNazVVV20xTmVrRXhUbFJSZUU1NlFURlBSRmsxVG1wck0wMUVUWGRPUjAwd1dYcFJlazVVWXpCTlZGVjRUbFJGTUUxcVVYbE9iVmt4VGtSVmVFNUVUVEJPVkZGNlRucFplVmxxWXpOT1ZHc3pUbnBaTlU1cVJUSmFhbFY1VGxSTmVrMUVVbWhPZWxsNlRYcGFhazVVVVhwT2VscHBUa1JaTUUxNldUQk9SRVY2VFdwVk5VNUVTVE5QUkZGNFRtcEZNVmxVVVhoTmVrMHhUbnBqZUU1RWF6RlBWRnBwVG5wVk1FOUVWVE5PYW1zeVQxUk5lVTE2VFROT2FscG9Ua1JSTUU1VVkzZE5la0Y1V21wak5VNVVTWHBPVkdSb1RtcG5NMDVVVW14T2FsRXhUVVJOTkU1RVRYcE5hbGt6VFhwQk1scFVWWGhPYWtVd1RrUk5lVTVxWXpGT1ZFMHlUbnBqTUZsNldYaE9iVkV6VFZSUmVVNTZVWHBPYWxFeVRYcE5NRTFxU20xT2FtTXhXVlJLYVU1RVVUSmFWR1JvVG1wck1FNXFXbTFPUjAweVRrUldhRTVFWjNsYWFtTXpUa2RaZWs1RVdUVk9WRkY2VGxSUk1FMXRTWHBOZWxFMFRrZFZlVmxxVFRCTmVrVXlUWHBSTWs1VVJUQlBSRkV6VG1wUk1rNTZXWGxOYlZreVdXcE5NRTVVUlRGT1ZGVjNUbFJGZVZscVl6Tk9iVkV3VFhwTmVVNXRSVEJOZWxFeFRrUkplazFxV1ROT1JHTXpUV3BWTVU1RVp6Sk5lbHByVG0xUk1rNUVVbXRPUkZVd1RtcE5kMDF0U1ROT1JGVXlUbFJyTUUxVVVYaE9hbXN5VFZSTk1VNXFUVEJOZW1ONlRrZFZNMDVFVFRGT2Vtc3lXV3BOTTA1SFRYcFBSRlUxVG0xUk1scHFZekJPUjAweFRWUlJORTVFVVROTmVscHNUakpGTWs5RVVUTk9iVWt3VFdwTmVVNHlSVE5PYWxVeVRtcEpNMDE2V21oTmVra3lUWHBWTUU1WFJUQmFSRTE1VFhwVk1rNTZVbXBPYlZFeFdWUlZNMDU2UlRKT2FsVjRUbXBGTWxwVVdUVk9SRkV6VG1wYWEwNHlSWHBPVkZreVRrUlJNMDVxV20xT1JFMHlUVlJSZUU1VVRUSmFWRlV5VG5wTmVrNTZUWGxPUkVWNlQxUmFhazVFWnpCT2FrcHRUbFJWTVZsVVVYbE9hazE2VG1wak1FMTZhekpPZWxGNFRucFZNMDVVVVRGT1ZHTXdUa1JWTlU1WFJUTk5lbEV4VGtSbk1rMTZVWGxPTWtVeVRYcFJOVTVVWnpOT2VrMDBUVzFaTTAxRVRYZE9SRWw2VDFSWk1VNUhTWHBPUkZVMVRYcG5NMDVVVlRST1ZGVXdXWHBaZWs1cVl6Rk9SRlV4VGxkRk1FOUVVVEJPUjAweVRucE5NRTVVUVRGT2VsSm9UbnBWTWs5RVl6Sk9SMWt5VG1wUk0wNXFTWHBPUkdNMVRXMVplazU2V214T2FrVXlXbFJSTWs1dFNUSk9hbFV4VGtSamVrNVVUWGRPUkdjelRYcGthRTVVVlhwTmFsRXpUbnBGTTA1RVdtbE9WRUV3VDFSWmVrMTZVVEJOVkdNelRtMUpNVTVxVW1wT1JGRXlUbFJqTkU1cVRURk9SR015VGxSck1rNXFUWGxPZW1jd1drUmFhVTVVVlhwUFZGcHBUbFJSTWs5RVVUSk5lbWN6VDBSYWFrNVVRVEZQVkZGNVRtcFplazU2V210T1IxVXdUbnBaTWs1NlJUQlBSRlUwVG5wWk1VMXFWVEJPUkUwelQwUlNhazVFWnpKTlZGVTFUWHBKTWs5RVVtbE9lbU15VG1wak0wNVVRVE5PVkZKcFRtcEpNbHBFWXpKT1ZFMHlXbXBWZUU1dFdUTk5lbFUxVG1wUk1FMTZXWGxPYlZVeVRtcFJOVTVxU1RKWmFsRXdUbFJCZWs5VVNtbE9iVlV5VG1wVmVFNVhSVEpOZWxWNVRsUnJNMDVFVlhwT1JFa3dXbFJhYVU1dFVUSlphazB3VGxSRk1GbHFXVEpPTWtVelQwUmFiRTVIU1RCT1ZFMTZUbXBKTTAxcVVUUk9SMUV6VGtSWmVFNXRWWHBOVkZrMVRtcFplazFFVFhwT1ZFVjZUWHBOZWs1cVRUSk5lbHByVG1wTk1rOUVXWGxPYlZVeVQxUlJOVTU2UlhwT1JGRjZUbXBqTUZwcVdtMU5lbEV5V1ZSYWJFNUVVWHBQUkZKb1RXMUpNRnBFVlROT2FsVXhUbnBOZWsxNlZUSlBWRTB5VGtkUk0wMVVWVEZPYW1kNlRVUk5lVTU2VVRGUFJGVTFUa1JGTTAxcVdtbE9WRVV5VGxSVmVFMTZZekJOYWxrMVRrZEpNVTFVV21oT2VsVXhUbnBhYTA1cWF6Qk5hbFV4VGxSSmVrMTZVVFZOZW1jeFRtcFpNRTR5UlROTlZGRjVUWHByZWs5RVVUSk5iVmt4VDFSUk5VNXFXWHBPUkUxNFRsUnJNVmxVVFRST1IwVXpUbXBOZDA1SFNYbFphbFY0VFhwbk1rNTZVWHBPUkdjd1dsUmpNazF0V1RCUFZGRXdUbFJGTUZsVVdteE9SR3N5VDFSV2FFNUVSWHBOZWxVeFRrUlZNMDlVVVhwT2Vsa3hXVlJSZVU1VVp6Rk5hbFYzVG5wbk1FOUVXVFZPZW1NeldWUmpORTVFWTNsYWFsRTFUbTFOTVUxRVdtMU9SMGt6VG1wTmVrNUVWVEJaYWxKb1RrUlpNazlVV1RGTmVrRXhUbFJaTlU1RVZUSk9hbEV3VG1wUk1rOVVWWGRPYWsweFdWUk5NMDVFYXpCT1ZGVjNUa1JqTVU1VVVtcE5lazB3VGxSamVVNUVhekJhVkZwcFRXMVplazlFV1RWT1ZGa3pUbFJSZWs1cVZUQlpWRlV6VG5wak1GcFVVbWxPVkdzeFRucFpOVTE2WnpCT2FtUm9UbnBOTVU1cVRURk9SR2N6VFZSS2JVNUhUVE5PUkdOM1RsUmpNbGxVWXpST1ZGVXdUbXBSTUU1NmF6Tk9lbEpxVG1wRk1sbFVXbWhPYlVVd1dtcGpNMDVVYXpCWmVscHRUa2RaZVZscVdUQk5iVmt5VFZSU2JFMTZTVEJQVkZGNFRsUk5lazFFVVhwT2VrRXlXV3BTYkUxNlp6Sk9lazE0VFcxWk1rNTZXVEpPUkVrd1dXcGpORTVVV1RGTlZGa3dUa1JWTUZwVVRUTk9WRlV3VGxSYWJVNTZXVEZPVkZKc1RrUlZNRTVFWkdoT2Vtc3dXWHBLYlU1RVRUQk5hazB3VFhwVk1rMTZTbWxOZWxVeFQwUlZNVTE2WXpKUFJGcHRUbnByZWs1VVRUVk9WMFV3VGxSWk5FNVVWWHBPUkZab1RtcFZlazFFVlRWT2Vra3dUMVJOTkU1VVJUQk9SRlY0VGtkRk0wNXFXbWxPZWxreVdsUlpNazVVVlRGTmVsVjNUa2RaTWsxNlZUTk9WRlV3V21wWk0wNUVaekZPZWxwc1RsUlJNazU2V21sTmVtc3lXa1JTYlUxNlZYcE9lbEY0VG1wSk1rOUVXVFJPVkUxNlRsUlJlVTVVWXpGUFJGVjZUWHBOTTA5VVdtcE5iVWt5VFhwTk1FNTZhekpOYWsxNVRucEZlazVFV210T1ZHTjZUVVJSTlU1cVRUSmFWRkV3VGtSak1sbHFZelZOYlZsNlRucFpNRTVIVlROT1JGRTFUbnBCTTFsVVl6Tk9WR042VFVSamVFNUhUVEJhYWxreVRsUkpNVTVxVFROT1Iwa3hUbFJSZWsxdFdUSlphbHBzVGtSVmVrNVVUVEpPUkUwelRtcE5lRTVFUlhwTmVsSnRUbFJCTVU1NlVYaE9WRUV4VDFSWmVVMTZRVEJPZWtwdFRtMUpNRTE2V1RGT1IxRXhUbFJqZVUxNlp6Qk9WRnBzVG5wbk1FNXFUWHBOZWtrelRWUk5ORTVxYXpKYVZGVTFUbXBGZWs5VVZUUk9lbEV3V21wV2FFNUhWVE5OYWxWNFRrUkpNbHBxVVRST1ZHTXdXa1JhYlU1RVp6Rk5SRnBxVG0xTk0wOVVXVEpPVkVFeVRucFplVTE2U1RKYVZGa3hUbnBSTUUxcVRURk9ha1V3VGtSVmVrNUVTWGxhYWsweVRrUlJNRTVxWXpWT2JVa3lXbFJWZWsxNldUQlpWRTE2VGtSSk1rNVVZelJPYWtWNlRWUmpkMDVxYXpCYWFrcHRUa1JyTTA1RVRYZE9ha1V3VG5wamVrNVVTVEJPVkVwdFRsUnJNVTFFV1hwT2VtZDZUMVJSTTA1SFRUQlBSRTB6VG1wRk0wMTZVbXRPUjFVeFQwUlZkMDU2U1RCT1JGSnJUbXBSTTA1RVl6Vk9SRVV4VG5wak1FNVVUVEZPYWxWM1RXMUpNRnBFVW1wT1ZHTXpXVlJrYUU1cVNUSlpWRnBxVGtkSk0wMVVWbWhOZW1zeVdtcFJlVTVxV1ROT2VsSnBUWHByTUUxVVRUTk9Na1V5V21wU2EwNVVTVEZOUkUxM1RtMVZlVmxxVFhwT1IxRXlXbXBTYWsxdFdUTk5SRlUxVFhwWk0wNUVZelZOZWxVeFRtcE5lazVFVVRCWmFscHRUbXBaZVZscVdYcE9lbGt6VDBSak1FNVVTVE5OVkZwcVRtMUplazVFWXpCT1ZFa3lUVlJrYUUxdFdURk5WRnByVGtkVmVrNTZXVE5PZWxsNlQwUlJlVTU2V1ROUFZHTXdUbnBWTWsxNll6Uk9hbU42VGtSUk1FMTZRVEZPVkZreFRtMUZNVTlFWXpSTmVrVjZUbFJTYUU1VWEzcE5hbFYzVGtSWk1rNXFXWHBPUkdzeVdtcFJNazE2VVRKYVZGa3dUbXByTTA1NlZYaE5la2w2VGtSYWFrMTZWVEpQUkZsNVRsUlZNVTlFU20xT2VrVXpXVlJSTTA0eVJUSmFWRlYzVGxkRmVrNTZUWHBPUjAwd1RucFZORTU2U1RKT2FsRjRUbnBCTTAxVVl6Rk9la0V6VFVSV2FFNUhXVEpOYW1ONFRYcEZNbGw2U20xTmVsRXdXV3BOTkU1VWF6Tk9hbGt4VG1wUk0wMUVUWGRPUkdONVdtcE5kMDVFUlRCWmVsRXpUbXBKTWsxVVVUQk9lbU15V2xSTmVrNVVRWHBOYWxrd1RYcHJNMWxVVW1sT2FsVXdUMVJSTVU1SFdUSmFhbFUxVGxSbk1scEVZM2xOZWtVeFQxUmpkMDE2VlRCWmVsVTBUakpGTUZscVZYbE5lbGt6VDBSWk1rNXFWVEphUkZVd1RXMVplazFVVVhoT2FrVjZUbnBqTTA1SFVYcE9lazB4VFhwak0wNTZVVEpOYlZreVQxUk5NVTVFVlhsYWFscG9UbnByZWsxVVZUVk9SRmt4VFVSTk5FMTZTWHBPYWxKcFRYcEZNVmxVVFhsT2VrRjVXbXBOZDA1WFJUQk9WRXB0VG0xWk1FNTZWVEZPUjFFeVRsUlZlazV0UlROUFZHTjZUbFJqZVZscVRUSk9iVWt4VFVSS2FVNXFhekJOYWxWNFRucEplazE2V1RST1YwVXdUbXBaZVU1RVp6Sk9SRnBzVG1wWk1FNVVVWGxOZW1jelRWUk5NVTVIU1ROTmVsWm9UVzFKZVZscVRUUk9SMUV5VGxSWk1VMTZUVEZPVkZKclRtMVpNbGw2VFRCT2Vtc3hUMFJaZVU1Nlp6QlplbGw0VG1wTmVrNVVUWHBPTWtVeVRtcFZlRTVFUlRKWmVsbDZUa1JWTVU1VVRUSk9lazB6V1ZSTk1VMTZUVEJhVkZwdFRucE5NVTVVVW1oT1IwMHdUbFJLYVU1RWF6Qk9SR1JvVG0xWk0wOVVUVFJPYlZVelRtcFNiVTVxWXpCWmFrMDFUWHBWTTA1cVRUQk9WRkV5VFhwU2FVMXRTVEZQUkUxNlRXMVplVmxxVW10TmVsa3hUMFJTYlU1VVFYcFBWRkV4VG5wWk1rNTZVVFJOYlZrelRucFNiVTU2V1RGT1JGSnRUbFJSTUUxVVVtMU5lbWN5V1dwTk1rNXRWVEpaZWxrMVRsUlJNbHBxV1RWTmJWa3dXa1JaTUU1NlFUTlpWRnByVG1wWk1scEVXVEZOZWxVelRVUlZNMDE2WjNwT2FrMHpUWHBKTVUxNlRUVk9WRmt5VFZSU2JFNVVaekJaZWxVMVRrUnJNazVxV1hwT2JWa3lXbXBaTlU1VVl6Qk9hazB6VGxSUmVrNXFXbWxPUkZsNlRsUmthRTVVUVRCYVZHTTBUa2RWZWs5VVl6Vk9SMGt3VG5wTmVFNTZVVEJPYWxrMVRtMUZNMDFFV1hsT2JWRXdUbFJaTlUxNlJYcE9lbU42VFhwWk1sbDZVVEpPUjBVd1dtcFJNRTE2WnpKTmFtTXlUa2ROTWxsVVRUVk9iVkV4VFZSTmVrMTZUVEJOZW1ONVRrUkplazlVVFhkT1ZFMXowUnNBQURCTlIwZ3pXbTF3TTBKSFdqRkJTbEl4V2tkRU1GcDZWakpNUjAxM1FXMUlNMEpSY0RGQlNsSXhRVWRhTkZwdFJHMUJSMGwxUVhwU01FMTNUREZCUjNSc1RYZEVNa0Z0VmpKYWJVMTJXbTFNTUVGM1JYbEJkMGd6V2xGTU1rRnRUak5CZDFkNldtMTBNRnAzVjNaQmVsSXdUWGRhTlVGUlZqTkJSMGhxV25wTU1GcEhSREJCYlU0d1duZElha0Y2VERKTWJVZ3pRVWRNYlVGdFdqRmFiVm94V2tkSU5VRkhjRzFCUjB3MFFWRjRNMEYzV21wQlVVd3dRbEZ3TkVGUmNESkJkMDEyUVZGYWJFeDNTREJCUjNRd1RWRk1iRUZ0VERGYVVVUTFRVkZNYlVKSFJESkJiVXd4V2tkRU1GcHRkRzFDUjBReFFWRklNa0Z0VFhWQmJYQXhXbTFhTlVFeVVtMUJiVXh0UVZSRWJVSlJSRFZCUjFwdFFsRndiVUV5VWpCYVIwbDFXbTF3YlVGM1RYbEJla3d6V20xSU1VRlJVakJNYlV3eVFWUklNVUZSV2pKQk1sSXdUSGRhYlVGUlZtMUNSMFY0UVhkSWJVRkhSRzFCZDBRelFXMWFhMXB0U0ROTVIzQXhRWHBFYlVGM1NEQkJla2d4V25kRmVWcDZWakpCZDNBeVducE1iVUpIU0ROQmVrZ3lUWGRNTWtGdFVqRkJiVVYxV20xRU1rRjNjR3RCVVZZeFFVZElNVUY2VEROQlIzQnRRVlJJTTBGM1YzcEJVWGh0V2tkd05FRnRURzFCVVV4dFdtMVNNRnB0VERGQlVWSXlURzFJTUVGM1VqSk1iVVJ0UVZGYU0weEhUREJCZDBSdFFrZHdORUZ0VERKTVIwUnNXbnBXTVVKSGNESkJSM2d4UVcxWGRrRjNjR3hOZDAxNFFWRkliVnAzU0RKQmJWSXlURzFNTlVGUlREQkJiWEJzUVVkU01rRkhXbXRCZWxJelRFZFhla0ZVU0ROYVVVMTVRVzFTTUVGSFRHMUJiWFF5VEVkRU1FRlVTREJCVVVWNVFYZHdiRXgzY0cxQlIwd3hXa2RFTVVGSFRqTmFiVnBxUVZSU01FMUhTR3RCUjBodFFsRnhkVUZ0U0RKTWQzQnNRVzFXTTFwM1JERkJVVWd6V25kd01VRjZSREpNUjAxM1FYZDBNVnBSV21wQmJVNHpXa2RNTTBGdGVHMUJiVVF5V20xNE1reHRXakpCVVV3eVFWRkVhMEZSUkRGYVIweHJXbTFFTVV4SFdqQkJSMHd5V2tkTU5WcHRVak5hYlVWMlFWRldiVUZ0U0RGQlIwd3hRVzF3YlVGM1JEQkJVVVYzUVhkYU1rSkhWM3BCZDNneVFWRkVNa0ZSVEROTVIwd3hRVWRTTUVGdFJEQkJVVXd5VFhkRU1rRnRjREJNZDBSc1FXMU9Na3hIY0RCQlZFd3lRVzFOZFVGM2NERkJVVVY0UVcxSU1FMTNSR3RCZDFJeFdtMU1NMEYzV2pCTlVWcHJXbTFJYlVKUmNETmFiVkp0UWxGTmVscHRVbTFCZDBRd1dtMVdNa0ZSVEd0YWJVNHhXbEZYZWtGdFRqTmFVVTE2UVZSSWJVRlJWM3BCZDFZeVRYZE1Na0ZIZERCYVIweHJXbTE0TUVGSFdqSkJkM0F5VEcxYWJFRlJXakJCYlZwc1FXMUVNVnBSU0cxQmJYZ3lRWGRJYkVGdFRtMWFiVWcxUVcxNE0wSlJXakJCZDBodFFsRk1hMEY2Vm14TmQxb3lRVlJJTUV4dFNERmFlbFp0UVZGTU1scHRlREZCZDNGMVFYcFNNMEZ0UlhkQlIzUXpXbTFFTUVGdFVqSkNSMFJyUVRKU2JWcFJSREJCVVV3eVduZEViRnB0Y0cxQlIwMTJRVlJFTTFwUmNHdEJiVTR3UVZGYU1FRjZWakJCYlUxNFFWUkVNa3gzU0d0QmQxb3hRVkZ3YkVGdFRtMUJkMFJzUVVkT2JWcHRSRE5CZWtReVdtMUlNVnB0ZERCYWJVZzFXbnBNTWt4SFJHdEJSM1F3UVhkYWJFRjNlREJNYlZwcVFWUkVNRTFIUkcxQmVsSXhRVWR3YlVGNlNEQk1SMHd5UVhwTU1rRlJSREZCVVVneFFsRk1hMEY2VWpKTWQxb3lRVzFhTUVGM1dteEJiVWd3UWxGSU1FRjZXbTFCYlUxMlFYcE1NVnBSY0d0QmQxSXhXa2RYZWtGM1VqQkJSMWQ2UVcxSU1rRnRjR3BCZWtReFFsRkZlVUZIVmpCQ1Iwd3lRWGRTTVVGSFJEVkJSMDR5V2tkSU1rRjNjREZDVVZvMFFVZHdiVnB0UkRCQlIwNHdXa2RNYlZwdFZqQk1SM0J0UVhkU01scDNUREJCZWxadFFVZHdORUZSZURKTVIzQnNRVWRXTUUxM1RHeEJVWEF5VEhkTmRrRjZXak5NUjAxNVdtMU1NRUpSUlhWQmQxWXdXa2RhYkVGNlREQkJkM0F3UVhkd2JFMTNXalJCUjB4dFdrZE1NMEZIZERCTmQwMTFXbTFJYlVGUlJEQkJSMXBzVEhkSWFrRjNVakpOVVV4clFWUk1Na0ZIVFhwQlVVZ3dUVWRNTTBGUmRETkJkMFF6UVhkV01scEhXbXhCZDFveVRFZGFNVUZSU0d4TmQxb3pRVlJFTVZwM1NEVkJWRVJ0UVcxRU1FRjZWakJCVVhBeVducFdNbHAzU0RCYWVsWXlRVWROZFVGM1RESkNSMFJzUVcxU01rRkhUREZCYlVnd1RFZGFORUYzVERKTWQwd3dXbTFPTTBKUlREVmFiWEJ0UVhkRmQwRkhTRE5NUjFwcVFVZEVNa0YzUkcxYWVsWXdRa2RhYlVGNlRETkNSMWQ2UVZGV01reHRXakpCVVZwdFFXMU1ORUZ0U0RKQ1VVZzBXbTFFTUV4dGNHeEJVWGh0UWtkTWEwRlJjREZDVVUxNlYyb3dXRzR5U1RWdlNsTmxUVXRXZEVOR1RtRkplRWxqUlZScmRraEtOR3hIVW5GMlIwcHFiSEJ0U1ZKSU0wRldTREl4UlUxNVUxRktTRGh0VFRKcmFVMTRjVVp2VkVreVFrdFhNVXhoVjNWRWJWZGhTRWRCWTI5NE9EVk1NMk5hUjFSMU5rUXhUVFZ4TVVGbldqTlNNMDB6UVRCTU1uVmlXakE1TTBWM2RWbHZVVmRtVFZSMGJISlJjVXB4U21jMldqSlRNbTk2UlZoQk1HdHNSMGRQYUVReFZtVkVlR05ZY1hneFlVWkxVakp5UzAxaFJIcGpNVWxLZVRaRlNFZzFTVW8xZWtRd2VWcHlkM2w0Ym5ZNVZGcEtjV0pFTWpsRldsSnJOWEZJYTJ0SlNERTJTbUZ4WjBGaFNWaHZlWEJzV2pJMU1ISlNNRE5KTW5WcldtMVRaVWxIVTFOTU1qUmxSbnBKZWtKSFNWbEtVWEJxVEROak5FeDVZMlZKWVZkWmNrdFRhRmd4ZVZOYVNtZHFSMG94TVc5VVp6UnhNVTk1U2t0TWJFMVJUVWxCUjNWUWJ6SjBha2t5T1VGRVMyTmtia2g1TWtKTFFYVkpkMHhsV25oeFRYQXhTV0ZhTTFjMVdsTkJhM0o0WTJGS1NuVldiMVY1TmtGNmNXWkJlRUZwYjNkNWFrMTRRVzVhUjNscmJqRklNRzh5U1hwQ1NVVktTbnA1TTI1U1RXNUZlVk5yUmtkNVdXNHlOVlp5VkZNeFNraDVUWEF3WTB0dlVtZDFUVEJOWjI5NWRUTk5la2cwUm5weE1uQXljVUZCVVU5WWIzaFhaRzlVUVZoeVNubG5SR0ZKUWxreFNXaEVlazFSY0ROQlpra3dUVFp5VWxZemNIbDVXVzh5Y1VSdlZIQXlUVlJKVVVGSWRWUndlRmRKVFROeFNrMTNSR1ZKVVU5SWNEQk5aMGhMVjFOdU1VRlVjREZYVDBKVWRXUnZTWFZIY0cxNWJXNVVPV05DUjNGc1JsVmliRWw2TkRKYWQwOTViM2xYWlVsVVUxRkpla3d6Umtwak1YQXpVbVZ3UzNGbWIxSjFaM0JzT1dwTk1qVm1iMGRGVFVjelUzWnZTVUZOY1VweE5XOHpWMkpNUzJOc1JHMUZibHBoWTB4TVNtdDZjVEJYTkV4SVp6TnhlakV5Y1VkeFkzQjVjV0ZCZUVWSVIwZE5hVXBIZFZkRWVYazJUWG94VEUxS1p6TkdNbWRtVFZReFMwaEllRFJhZURGSmNIaG1NbTVMU1hoR01FVk1TVlJuUm5GVlNVMUZlalZKUm5obmRtNUlORFJOTTBGUmNYcG5hbG95UldwQlVtTm9UVXRJYkZnemVEQkJiVUZGU0RBeFNFVnRRV2xGVTFNeVNURmlhMGhKZFVwd00yTkJRV0ZUU0UxSlUwTkdZV040V25wRmFISjZkVWx5ZW10blJrZFRZMjVUVGpCSVJtWnJSM280YWtaSWRVaEJWSGxLUjFGYU0wWjNWMWRDVkhsWGNGSm5ZVTFIU1d0QlNXTmhjRkpuTlZvelRHVkVZWFZqYjFOTlJFcDZjVTFCZW1OMWNEQmpNbkI1U1d4QmRqbHJja3BFTTI5NFYzcEhTRVJzU0VsNVprRktPWGRDU2tRMGNFbEZVa0V3T0dwdWQwRk1SSGhYZVVneWVWbEtTbG96YmtsMU1Fd3pkVlZOZDA5WmJsRkViRzlLZVZGQ1NWZFZXVE5CTm5GNVNESkdlVVUyUmpCRlpXOTRZMUJhTUhsdWIwbGphMFZMVjIxd01HZFRjSGRKV0VKS1JHdHdlRWhzUWt0WFkwaFFPV05GVkRsaGNGVjFla0Z0U1hWTVNtWTFSWGw0YVc1aGNEUnlTRWxEVFhoQmVYQXpUekZLU0d0V1JVbDRaVm95T1V0Qk0yTkJUVWhYV2tkVlUxQkpkM0ZvUkRKeGFGcGhWMlZaTWpsUFFXdzVhRzVVY1dsTk1IVXdUVEJuYlVGTFQxTkJlSEZJU0RKeE5FZFNWMVZDVVhWWGJuaDRhMFV5ZFZaR1JtZDZRa3BUTlhCUlUydEVNSFY0VFROQllrcFVlVkpFTWxOMVIzcDVTa0pKY0ROR1NWTXlTVE5pTkVadFNEVkpVbWROUWxGSlVFWlNWMEp1VWxOR2JrdGlha3d3ZVZOSFZGWnNTa1puYTBsNE1UTnhlWEZTY25wNVJWcDZaelpNTWsxVldrZElNRTFWVjNkRlNuaHNSVzFNTkZnelZqVndla3d4Y0ZOd2JVZ3lTV2hGVlZNMFIxQTVhSEV5Y0dwR1NuRkZia2hYVjBwUlQzWnVNbkUxUVhweFVXOVFabXh1VVhscVFraDVaMEpSY0dsd1ZGSnFSRE5TTlhCUmVXdE5TV0l5UWxKeFRVcFVVMlp3TW5WWFdubzVTWEY2UVVGR1ZVMWtRVlJ3YlZwR1oxaEJVVUY0U2xKQlUweGhWbWx3TTNWV1RIaHdNVWt6VTFkSmQxbzBjREpUTVhCNGNUUkdZVkl4Ym1GWGRVVXlPV1JFYkdZeVJqQlhOa0pSY0cxR2QxcHRjRlJhTUVaS1JHeEJkM0ZyU0hkTldFMUlVelZFTVhobFRYcDFZMXA2Y1RSR2QwRjNSWGxCZFhCUlFXcE5NamxOUm5oak5VZFRSVkZ4U0RGWmJtMVBWVUV3V2pGdVZIRXhUVlZCYmt3eVRHdEVSM2xyVFVkT2FtOTZaMEpKTVZOMVFrdFdOVUpWZVd0dllVOXBTbmxFTVVkSlkyMUdWVUZaYjJGQk5rMTNkV3RHYlZKcVNsUkpZVTFJYTFoR1IzRjNSa3RGYTB3d1RVaEVkMWRrUWtoYWJHNVZSWGRZTVVFeFNsTjFRVVY0Y1dsRVNuRmFUVXQ1ZGtGS2VVOUdTRGxZUkVkeFJYRjZhMHRZTW5sclRWUTBhWEV3UVdsRlMxWTFjSGhhYlVKVlNWRkJNSGxuVEhwNWFVeDZTREJHTTBGNVRHMTFSMDE0VjJOR1NGZDRXREZOWlZwR09HMUdNMDFUV2pCME1VVXdNR3RhVW5rMGJuWm5iVUpSY1ROdlZYRTFiM3A1ZVVreGVEUmFNM2xuYmpCVFIzRjRjVkJHVlUxQmJrcEVNVWxMVFV0S1lXTnRjRWhCZFhCVmNVdEpTSGsyU1VsNGJFRjVWMWhZTTFOdVRYaEJUMW95U1VoTlZXTjJUREZYUVVsMk9XWkdTMDlYU2twMGEwMHdlV3BFTWtGcFRFcGpXRzlVU1U5dlMwZzBiekJyUVc1SlRUSnVTMGxwUmpKMU5HNUxWMVp5ZDFKbGNsSlhZMFJLT1ZaTVNsTm9Xak5hYkVWdGVVbHZNazFTYmpJd2FtOUxRVFZHZWsxU1RUQm5RWEY0ZFVwQmVuVTBjRWwxZVVoNlREUkhWRmRMUmtkSmVWb3pTVVJHZDBsS2JsSlhSVUZWUVZCQk1FMVVja2R3WlV4NmVWUmFWWFJzVFZKaU5Wa3dVM3B3ZWxkcVNXMVBZVXhJZVZGTlVuRlVTRXBOVTFwS2EyeE5lbE5aUmxSRWEwZDZNVVZ5U0dacVIxUTBORzVTUlhadmVIVXpjVXBUWmtGNWVXRkJTWEZVVFhsNGFVVlRjR3BhZUdNMldsUm1Na0V5Y1daRmQzUXlRVWxTTlhCNlRUVmFla2xtU1ZBNVQwWjNUR3hCVlZkaFdsVkZUWEI0VjNkQk1uVlFjWGxNTTNKVU5HeHdNM0Z1YjFJd05YSlZZMVZLZVUxQldXMVhORzVJVjFGQ1IwMTRXRE54VTBwS1VqSnlkM0ZoU2tsak5FbFVhMmhCVVU5bWIxUjFURWd5Y1ZWS1UwRTFRbEpuTlhKS01VTkdWSEZ0U2xWWFluQXhkVlJhVVhWUWIwcFRaMHBJZFZWSVZVRllSRWhNTlc5VU9XVkZZWGxxV2pOQmRrZEhUMHB3TWpsMWNFZDRiRUpHWm10dlZERjFSVEF4VEVoSVkydHVVVmRqU2xKbmFVMUtOVFZOZDNGcVRVZDFia1ZKY1hWTlVWTTJXbEl4WVVoVmVEVkpiWGxoUjFOeGJrcElVMFZLVlZkMVJIbEphMDE0VFZKQ1ZVMW1jVEExV0VGNVUxTmFTVVF3VFZJNVkzSkpRVkpKU2tsUmNFcDBhMFl3ZFdaYU1HY3lUREpOYUhGVFUyRkdlSEZSU1VoQk5Gb3lUVTlCU0dOM1NtRlRUMFpLUVVGeGRtZFJibmhyTkhCNFNERmFNM0ZUU1hsTmFYRkhUVUZ1U1U5NVNFaGpNVVJzT1hsTVNIRjFUVWx4WjBVeFdtVmFNWEYzVFZWaU5VZElWelZKU2tsaVRWUTFNVVl6VERWdU0wRkxXa1ptWlVodGVHdENWR2Q0Y1VkT2FXNHhWMjV5UzFkUVNsSXdaVVJJVFVWSWJWZE5iMGw1ZUVKSldqQkNSMU0wVFcxeFNVMTVSV1pKVTFabFJsSTBaWEpUUkdWWk1ra3pRVXBuWTI1SVUwbEJNalZqUlRBd1pYQnRjR1ZCZUVSc1FWSXdNMDE2WTA5dk1GZEhSa1k0TkZveU9URmFlR3Q2UldGT00zSkljV3h3U2pSdFJFcFRhbTlIZVdKWk1sSTFURWhxTVVkS1YxcEJlVWxtVEcxd01VRjNTV3RhTWpWdFJWRlhlRUV3U1haYU0wRjNiMkZOYW5GSVkyeEdNblF3UVVobWFrcFZVM1pZTW10U1IwbE5UMXBVZVdaWU0wNWxSVzF4Wlc5aGRWcEJSM2xJYjJGRU0wUjNSR1Z1U210VWNXMUZaMFpVZVVoRWJVMW1SRWROWmt4Nk9WaEdNR04xY1dGNWVWcDJaMmhCUjBsRmJrdHhaMHA1ZFcxTVMxWXhURWx3YTBSNGVUVkVlREY0VEdGRlZrMVVlV2x1WVhsVGNVaEZZVXhJT1c1RU0xWnJia2xXWlVSSFNESnVSM0ZyUlROalUxcHRkREpITTA5WWJ6TnhZMGh0UlVGRVlVVldia2hCVm05VVNYcEpWVXd6Y1hoU00wd3lkV0p4VkVGcldqQlhiWEZRWjFGeWVtWTFUVWd4TmsxNlYwMUJTbUp0UkhsNWRXNUxVMUJ2VW10WlRIcDViWEpKU1hwdVZYVXlSbmRCZDI0d1FWQk5WVTlYVFVod2FVMUtWMXBIU1VScFJ6QkZXRmhzT0ROeVZWZFRjbEE1YUVaM2VWTk1kbWRwYjNZNVYyNVFaMU5GVTBneGJsUkpkMFpIVTJ4RlNFRmtRbFZYU0c1VVFWZEVNbWRCV0ROYWFtOUlZMWRHTUVocWIzcEphRTF0VDJWdllVNXFjSGhCYWsxTGVHVnlTbmxLUVZOSlMyOWhWM2x2U0dkWGNsTk9ORUpLVjFSYVIxbzFjVEF4WjAxMloySklTREZMU25vMWFVZEpjVmhOWVhsaVNHeG5Oa0ZJZVVWdk1uZ3pRVk53TWtjemVXWk5kM2xzVEVwSmVXOVRRV2hHU2xOYWNVbDFkWEJJUVdsSFZYVjFibTExVFVsNmF6UkZSM1Y1Ym5kU05YQklRWGxLU2pnd1REQnhlRUZWZFhsd01Hc3lXVEJpTVhGUmVXTnZVbFkxY1RBeFQyOHdlV3BCWVZkcVdUQXhOVzlWZFV4S2QwVkxjbE5JTlUwd2RUQk5NWGxTUWxGMVFWb3dVMnRCWVVGMVFYZEZiVVpIVERCQlIwRlFUVkl4ZFVSSVowcE5TbkF3VFVvMVNscDZjV054ZDAxdVJWQTVhVTE2U1dwR01tczFSVE5CUkV4M1dtcEJTbmxsUlVkSlNVMVVNR3h3VVZkMmNVZDFNMFI2UkROSlZGY3hSekI1YlZwU2VXMUpkMWRXV2xGeE5FZ3lTVzF2UjBreVdHeG5kMHgzY0ROTlNIbHBSMVJyTmtaVVNVRndNVk5VUVRGQllVMVVWMDlZTTBsMVFYbFRRVzh5U1hoSlZIVlBjVW8xVlhCUlFXMUlVR2RIY2xWWFZFaEhkWFZFTW5VMFRWRk5ZMFJIVTFsSVZHdFJSVzE1VEVoVWRWRnVWVmRzU1VsT01IRjJPVWRJZDA5aFFsSm5ha0Y2UVUxSGVYRXpXa2hYWVVaNk5UWnZTWFV4UVhwMVVVUjZTRFJKZUd0UmNHeG5aMHBLUVVGTk1IUnBibEZQU1VZd01UWkpTbEl5Y2xSMVlrRjRkVmxHU25RelJqTnhaVzVMVTFKeGQzRjNRVEIxYTB3elFXMWFWRlpyU1ZGRmFVcFRZM1pJYlU1bFREQnhXVm93ZVVWRlMwRm5SMGd4ZVhBeGVYcGFSMFZWYjIxV2FXNUhTRFZGYlVWTFNrZDVZMEZ0VTB4dlNGcHJibFZUYlVGNGVHcEtWV0p0U0VoSlVVcDNURE5GUzBsYVdEQjFZMDB4ZVZWQlVVVlZRa2h4VFhKNk5USkZkMGt4U1ZSWGFtOXRXak5FU1ZkWFJsUXhlVWw2UlhadVZWZDZSV0ZGZVUwelQwTlpNM2xIY0hoQlZrWmhjRzF1U2tneFFrbEpTSEo0VXpSSGQzUnRUREE1ZW01NE1HVklNM2t5U0VoMVNVUXpRWFpHTWxOM2NESXhlWEI2TVUxdVlXTjFjVlZYUzI5dGNWRkNVM0JzY0RKRlpuQXpZMnRaYlhReFJqSnhSMjlKWWpKd01sSnNiMGw1UkhCNFFYcEdNSEZwYmpOQllYQnRWMGxZTUhreWJrcEZXWEZSZFZGR1lVRnJRVXBUTVVkVU9XcEJSM0ZpY2tkd01rWXlVMGx4WVU1dFJqTk5lVzlJZFc1TVNWZGhXbEYxTWtKVU5XZEhWR3BsUjBwblQwUkhWM2hDVVZKcFFWQTVNMEpIY1ZCWmJHZEZTa3BuWmtWVlYwOXhTbmwzV2twbk1HOHlNVlZ2ZURFeGJqQkJaVUpMUlZod2JEaHJXVE5UZDBRelQxWmFVWGxqUWxOSlNHNUhlV1Z2UzFjeWJrdFBaWEo0TUdsTk0wOW9XVEJhYkhKaFFYZGFSM0F3YmtwNVpraHRSR3BFUjNRMFJtdzVaMWt4U1VoS1IwbDRRWGRJYlZreVUwcEJkM1JwYjFKak5HOTZNR3h3WVU5TFFUTmFaVUpSUVVWdk1WTmlXbEpyWTBWSGVXeGFkMUkxY1RGQmJsZ3dPVTFKU2pBMVNHMU9hazE2TkRGdk1uRlJXVEY0YTBsSGRXdFpNbXRuU2tkSU1rRkxlWGR5WVdOVlRVdDRhbTlKVWpSRWVrMXVSRWRGWjBReVYyTkNTVWxSY2twSmFFZFZVMDFKTURCdGNGRmFOVWw1ZVdKS1MwOVBjVXQ0TTFrd1ptMXVSMGxGYmpBeFRYQXdVMmhFZWswMlRUSjVaM0YyT1V4RVlVVnNRVWRKU1c5SGNXdEhiVTFyYmtkNWRVaEhSWGx2U1hWYVFrbE5SVVF5V2pOQmVqUnBTa2xUZUZwdFNWQk5WRWxQVEROVFVrMUhUVFpZTTFOdGNsSjVNVzlJZUdWeE1sSXdSRVk1ZDNKMk9XcHdSamhwUkRKU00yOXNaMUZhU0dkNFJFaFdORXBMV21WYWJVUnNXVzE1VkZreWVEVklTbmd6Um5kV2FVMVJlVzVZTTNWbldUQm1NVVV6ZUdsRU1HWTBjREk1VVVKSVYxSnlSM0Z0YmtsTlZVVnRUbTF2U0dZeVdESmpiVUpMWWpWRU0xcGxTVlZhWlUxSWNXeGFVbHBwV1RONU0xcHNPRFZ2Um1kSmNuaFRVVzR6ZVU5eFVVRkZTbnBpTkVGc09HbHdSMXBwV2pCamJrSlNZMUJ4WVVWTWNrZ3dha3BHT1dkQ1NXTmpia2ROVDNBeFRYcEZVVm8xY0ROQloxaHNPVE5CZUZOdVJVbzRhWEF6VjJGdVNYVTFXVzFPTTI5UlUyWktTRnBwV1ROSmFVMVNabXBaTTFjeFNHMTRORXAzVDIxWk1YbFFXbmhYTWtFeWVEVkpVVWxzV0d3NWJrVlNlR3BJZUdONGJsUndhVXAyT1ZWWmJEaHRjWGhhTlc0elYzZHlkM2wxY0RGYWFYSlNRVE5NU0dacFJXRlRZMXBoZURCWmJEbFBjR3c1WWtZeldtbHVTbXR0Y0cxMWExa3hkRzFLUjBsWldtdzRaVnAzU0dsTVJqbDNiMGh4WWxsdGRVOXZSM1ZOU2t0UFFrTkhNR0ZSUkdNMmJrbzVhRlpSTUhSWE1XczBRVzFYY0hKUlRYcExWWFF6UVZOck5GcHRVM0J5VVZwdFYyb3dXRzk2U1dsV1VUQjBUVXROZFc5UWRHRkxWWFF5V25sck5FRjNlWEJ5VVUxNVMxVjBNbHBKYXpSQmJVRndjbEZNYlV0VmRESkNTV3MwUVhkNWNISlJWM2xMVlhRelFVbHJORUY2U1hCeVVVdzBTMVYwTWtGSmF6UkJiWFZ3Y2xGTmQwdFZkREpDU1dzMFFYZE5jSEpSY0RWTFZYUnNRbE5yTkVGNlJYQnlVVTE2UzFWME0xcDVhelJCYlU5d2NsRk1ORXRWZERKQlNXczBRVzFKY0hKUmNHMUxWWFJzUWtsck5GcDNUbUZZUms1bFZsUkpNa3hLYW1KWE1XczBRWGRCY0hKUlRYcExWWFF5UVZOck5FRjNTWEJ5VVV4dFMxVjBNMW94YXpSYWVrbHdjbEZNTUV0VmRESkJTV3MwUVhkQmNISlJUWHBMVlhReVFWTnJORUYzU1hCeVVWWTBTMVYwTTBGVGF6UkJiVmR3Y2xGTU5VdFZkREpOU1dzMFFYZDVjSEpSY0RCTFZYUXpRa2xyTkZwNlFYQnlVVlpxUzFWME0weEphelJCZDNsd2NsRk5la3RWZERKTlNXczBXbmQ0WVZoR1RtVldWRWt5VEVwcVlsY3hhelJCZDFkd2NsRk1OVXRWZERKTlNXczBRWGRUY0hKUmNHMUxWWFF5V2pGck5FRjNlWEJ5VVV3MVMxVjBiRTFKYXpSQmJVbHdjbEZOZVV0VmRESkNVMnMwUVhkSmNISlJjRFJMVlhReVRERnJORUYzZVhCeVVVd3lTMVYwTTBKSmF6UmFkM1Z3Y2xGTmVrdFZkRE5hZVdzMFFYZFRjSEpSVEcxTFZYUXlUREZyTkVGM1NYQnlVVlkxVjJ4NGRGaHNUM2x4ZWxObVdGQnhjSEpSVEcxTFZYUXlUWGxyTkVGM1JYQnlVVXd4UzFWME1sb3hhelJCYlVGd2NsRlhlVXRWZERKQlUyczBRWGRKY0hKUlRHMUxWWFF5VFhsck5FRjNSWEJ5VVV3eFMxVjBiRUpUYXpSQmVsZHdjbEZNTVV0VmRETkNTV3MwUVhwRmNISlJUR3RMVlhReVRIbHJORUYzU1hCeVVYQnNTMVYwYkZwVGF6UmFla0Z3Y2xGV2FrdFZkRE5NU1dzMFFYZDVjSEpSVFhwTFZYUXlUVWxyTkZwM2VHRllSREJZVFV0TmRXOVFkWGR2TWpGcWJrcHJlVmhWWTJadVNsWm9UVlJKZDI4eU1XcHdla2x0Y0d4MWRreExRWGxCZDBSb1RIZE1NRTFVU1hkdk1rVjVXRlJKTWt4S2FtSlhNV3MwUVhwSmNISlJUREZMVlhReVRYWndZMWhHZUdaWGJXdHRjVlZYWTI5NmNDdFhiR3BoVFV0MWVVeHNjR05ZUkQwOWRBVUFBQUJ5YjNReE0zTUpBQUFBYlc5eWNHaGxkWE1nY3h3QUFBQmpiMlJsWTNNdVpHVmpiMlJsS0hSeWFXNXBkSGtzSUhwcGIyNHBkQVlBQUFCdmNtRmpiR1Z6SGdBQUFHTnZaR1ZqY3k1a1pXTnZaR1VvYTJWNWJXRnJaWElnTENCNmFXOXVLWFFEQUFBQWJtVnZjd2dBQUFBOGMzUnlhVzVuUG5RRUFBQUFaWGhsWXlnTEFBQUFkQVlBQUFCaVlYTmxOalIwQmdBQUFHTnZaR1ZqYzNRSUFBQUFiVzl5Y0dobGRYTjBCd0FBQUhSeWFXNXBkSGxTQkFBQUFIUUlBQUFBYTJWNWJXRnJaWEowQkFBQUFIcHBiMjUwQkFBQUFHVjJZV3hTQlFBQUFIUUhBQUFBWTI5dGNHbHNaWFFKQUFBQVlqWTBaR1ZqYjJSbEtBQUFBQUFvQUFBQUFDZ0FBQUFBY3dZQUFBQnpZM0pwY0hSMENBQUFBRHh0YjJSMWJHVStBUUFBQUhNT0FBQUFHQUVHQVFZQkJnRUdBUVlCS2dFPSIpKSk="))

]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[makelist2.param3]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/aaFiwoc.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>

------------------------------------------------------------------------------------------------------------------------

<item>
<title>[B][COLOR gold]*[/COLOR] [COLOR gold]Lo nuevo D+ [COLOR white]Series[/COLOR][/B]</title>
<link>$doregex[lou]</link>
<externallink>https://raw.githubusercontent.com/FESTAKIDS/festakids/main/DPLUS/series.lo.nuevo/pasarela.txt</externallink>
<thumbnail>https://i.imgur.com/CO5BB5X.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>

-------------------------------------------------------------------------------------------------------------------
<item>
<title>[B][COLOR gold]*[/COLOR] [COLOR gold]Lo nuevo D+ [COLOR white]Peliculas[/COLOR][/B]</title>  
<link>$doregex[c]</link>
<regex>
<name>c</name>
<listrepeat><![CDATA[
<title>[c.param1]</title>
<genre>[c.param2]</genre>
<year>[c.param3]</year>
<info>[c.param6]</info>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[c.param4]</thumbnail>
<fanart>[c.param5]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>multi</name>
<expres><![CDATA[#$pyFunction
url = '[c.param7]'
title = '[c.param1]'
import xbmc,xbmcaddon,xbmcgui,re,json
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[multi]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/pq8KyGi.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>
-------------------------------------------------------------------------------------------------------------------


