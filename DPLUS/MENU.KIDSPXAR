<?xml version="1.0" encoding="UTF-8" standalone="yes"?>


<item>
<title>[B][COLOR darkgoldenrod]* [COLOR yellow]Grupo Telegram[COLOR deepskyblue] @addonfestaycristal[/COLOR][/B]</title>
<link>NOLINK</link>
<thumbnail>https://i.imgur.com/pmv3nZ0.png<thumbnail>
<fanart>https://i.imgur.com/r2bQyc9.jpg</fanart>
</item>


<item>
<title>[COLOR gold]*[/COLOR] [COLOR darkgoldenrod]Cine [COLOR bisque]Pixar[/COLOR]</title>  
<link>$doregex[c]</link>
<regex>
<name>c</name>
<listrepeat><![CDATA[
<title>[c.param3]</title>
<genre>[c.param4]</genre>
<year>[c.param5]</year>
<info>[c.param8]</info>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[c.param6]</thumbnail>
<fanart>[c.param7]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1ME1SWUFBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFV1RGTmVrVXlXa1JWZDA1dFdYcE5SR040VFhwSmVrNTZZekpPZWxVeFRucE5OVTV0VlhsYWFsVTFUWHBCTWxwVVdteE9WR3Q2VFhwVk1FNTZSVE5PUkZKcFRucGpNVTlVVFROT01rVjZUVVJOTTA1NlFYcFBWR04zVGxSbk1FMTZVWGxPVkdzeVRXcFJlRTVxWnpCWlZFMTNUa2RSTWxwVVdtcE9SRTE1V21wU2JVNUVUVEphUkZwc1RYcEJlazFxVVhsT2VrMHlUWHBTYVU1cVZURk9SRTB3VG1wUk1rNVVXVEpOZW1NelRucGpNVTU2YXpOTlZGa3pUbXBOTWs1RVZUUk9hbEY2VFdwUk5FNTZSWHBOVkZFMVRrZEpNRTFVWkdoT1JHTXpUWHBaTVU1cVJYcE5lazB3VGtSWk0wNXFWVEZPYWxrelRtcGpORTE2U1ROT2FrcHBUbXBWZWsxNlRUTk5lbWN5VG1wak1FNTZXVE5OYWtwdFRYcEpNMDVxWXpKTmJWa3pXVlJSTkU1cVNYbGFhbFYzVGxSVmVWbHFTbTFPVkdNeFQwUlZORTE2VFhwUFJFMHhUbFJaZVZwcVZUUk9lbEY1V21wak1rNUVaekpOYWsweVRXMUpNRTlFWXpKT2VtZDZUbXBaTWs1SFJURlBSRTE2VFhwak1sbFVXVFZPVkVFeldWUmpNazU2V1hsYWFrMHhUbFJOZWsxNldURk5lbU42VFZSS2FVMXRXVEJQUkdNMFRYcHJlazlVU20xTmJVbDVXV3BqTUU1NldUTk9hbU42VG5wQmVrOVVXVEJPVkdjelRWUmpNazV0VFRGWlZFcHBUbGRGTTA1RVZYcE9lbFV5V1dwUk1rNVVWVE5QVkZreFRYcFpNRTVxV1RCT1IwMHdXbFJOZUU1dFZUQk9hbU41VGtkTk1GbFVZelZPYlZrelRXcGFhazE2YTNwTmVtTjZUWHBuZVZwcVRUUk9SR016VFVSTmVrMTZTWHBOVkZVMFRqSkZNRTlVVFhkT2VrbDZUVVJWZVU1cVdUTk5SR042VFhwck0wNXFWVFJPZWtVeFQwUlNhMDE2V1hwT2VsRXlUbnBGTTA5RVZUSk9hbGw2VDFSamVVNXFTWHBPYWxKdFRXMUpNazFxVlRKT2VrbDZUWHBaTlUxdFdUTk9SR00xVFhwUmVrMVVUVEZPYlZVelQxUk5ORTE2U1RKWmFsRXlUWHBqZWs5RVVUQk9WMFV5V2tSTmVrNXRXVE5PUkZwc1RXMUpNVTE2VFhsTmVrMHlXWHBhYTA1dFZYcFBSR015VG1wbk0wOUVVbWxPYWxWNVdXcGFhMDU2VFhwT2VsVXpUbFJqZWs1cVl6Uk9Na1V4VG5wTmVrMTZSVEJOYWxFd1RsZEZlVmxxVFhwT1ZFVjVXbXBWTkU1VVNUSk5WR014VG5wUk1VMTZaR2hPVkdNelRrUmplRTU2UlRKWmFtTXdUbFJKTTA5VVVYcE9WRTB5VG5wTmVrNUVUVE5QVkZKb1RucHJNbHBxVlRKTmVtY3dXbFJqZDA1VVZUQk9lbHBzVGxSVk1GbDZWWHBOZWsweFQwUmpOVTU2UVROUFZFMHdUbFJuTUU1NlRURk9hbEV3VFZSTmVrNUhXVE5OZW1ONVRYcE5NVTU2VW10T2VrRXlUbFJTYlU1cVJUQlphazE1VG1wTmVrOVVWVFJPYWtVeVRWUk5NVTV0VFRGTmFsVXpUbFJKTTA1VVZYbE9lbU14VGxSS2JVNTZWVEZQUkZVd1RYcFZNazVVVVhoT2FrVXdXV3BOTlU1RVRYcE9WRlV3VGtSVmVrOVVUVEJPYlUweVdXcE5ORTU2WXpOWlZFMTRUbFJKTTAxRVkzbE9lbEV5VGtSWmVVNUhXVE5PUkZrMFRucFpNVTU2VVhsT2VsRXhXVlJaTlU1dFZUSmFWRkp0VGtSbk0wNVVZekpPYlZVd1RXcGpNRTVVYXpOWlZGVXlUbXBGTUU5RVVtdE9la0V4VDBSVmQwNUVUVEphVkZWM1RsUlZNRTVVU21sTmJWa3hUbXBXYUU1dFNURk9hazE1VGxSamVrMVVWVFJOZWxVeFQxUlJNazV0UlRKYVZGVXpUa1JGTUU5RVRYZE9la0Y2VFZSamVrNUVZM3BPYWxwdFRrUm5NMDVVWXpWT1ZGRXdXV3BTYTA1RVNYcE9ha3B0VGtkTk1rNUVZM3BPUkdjd1dWUlJlRTV0UlhwTlZGSnJUbXBGZVZscVpHaE9WRVV6VGxSTk5VNVVRVE5OYWxFd1RucFZNbGw2VlRST1JGRXdUbnBqTVUxdFNUTlBWRmt3VFhwRk1VOUVZekJPYlVVeVRWUmpORTVVYTNwT2FrcHRUa1JqTWs1NlRYZE5la1V6VFVSTk1rNVVaekJPZWxsNlRYcHJNRTFVVlhoTmVtY3dUa1JLYVU1VVdYcFBWRlV6VGtSak1GbFVXWHBPZWtVd1RucE5lRTVxVFROTmFsVjZUWHBCTUU5RVRUTk9lbFV3VFdwS2JVNXRXVEJaYW1NMVRYcEpNbGw2V1RGT1ZFMHlXbFJSZVU1dFZYcE9hbEpvVG1wTmVrOUVVVFJPZW1jelRtcFZlRTV0U1RKTlZGVjRUWHBCZVZwcVdUSk5lazB4V1ZSVmVVNVVZekJOYWxsNVRtMVpNVTU2VFRWTmVtc3lUMFJaZVU1dFdYcE9lbHBvVGtSRk1VMUVUVEpOZWtrd1dXcEtiVTVxWXpKT2FsVjZUa1JGZWs1NlRYbE9la0V6VGtSVk1VNTZhM3BPVkUwd1RtcEpNazlVV20xT2JWVXhUVVJhYTA1SFZUSk9hbVJvVGtkUmVrMVVXWGxOZW1Nd1RWUlZNMDF0U1RKT2Vsa3pUbnBCTTAxcVRUUk9ha2w2VFdwUmVVMTZhekpOYWxGNFRrUmplazVVV20xT1IxRjVXbXBqZVU1RVVURk5SRkY1VG1wTmVrMXFZekpPYlUxNlRsUlNhRTVFVFROUFJFMTNUa2RaTVUxRVVUTk5iVWt4VFdwWk5VNHlSVEpPUkZsNFRrUlZNbHBVWXpKT1IxRXlUa1JLYVU1dFVURk5WRkpzVFhwVk0wMUVVbWhPVkVVeVRXcE5lRTU2VFRCT2Fsa3hUbTFaTUUxcVl6Sk5lbGt3VDFSUmVVMTZaekZaVkVwcFRrUkZNazVFVFRWT2FtTjVXV3BqZUU1VVp6Rk5hbFV6VGxSTk1GcEVUVEpOZWtFeVRXcFZNMDU2V1ROT1ZGRXdUWHBqTWxscVRUTk9WRmt4VFVSTmVFMTZXVEJOVkZrMFRtcGpNMDVFVFRCTmVrbDZUbnBOTVU1RVRUQk5hbU0wVG1wSk1scFVXVE5PYWtsNlQxUlJNRTE2V1ROT2VsbDVUWHBWTWs1cVRUVk9SMFV3VG1wWk1rNTZhek5OZWxwcFRtMUplazlVVFRST2VsRXdUV3BWTTA1NlJUTk5lbFV4VFcxWk1GcHFZM2xPYlZVelRYcFJOVTVIVlRKUFJGRXdUbXBKTTAxcVdUVk9WR3N5V1hwYWEwNXFUWGxaYWxwb1RYcE5NbGw2VW10T1YwVXdUa1JqTWs1cVdUSk5hbGt5VFhwQk1FOVVXVFJPZWxGNlRucFZNRTE2V1RKT2VtTXlUWHBuTUUxVVVUTk5iVWt3VDFSUk1FNXFUVE5PUkZFMFRXMUpNbHBxV1RKT2FsRXdXV3BWTlU1dFRYcE9hbFYzVFhwTmVWbHFWVEJPYlVWNlRsUlJlVTVVU1hwT2VtTXhUbnBOZWsxNlVUUk9SRlV5VGxSWk1FNUhSVEpPYWxGNVRtcFJNazlVV1RST1ZHZDZUMFJSTUU1RVp6SlBSRmt4VFcxSk1scHFWWGRPYWxFeVdXcFJlRTF0U1RKTmFsSnBUbnBuTTA1cVRUTk9la2t5V2xSS2JVNXRUVE5PYWxab1RrUlZNMDVVVFRCT1ZFa3lUbFJWTVU1NldUQk5WR016VG5wak1FNXFWVFZPUkdkNlRWUldhRTVIVFROT1ZFcHRUbFJyTUU1RVRURk9SR2N5V2tSak5FNXRWVE5QVkZKcFRucEpNbGw2VVRWT1JFVXlUV3BhYWs1VWF6Qk9hazEzVFhwbmVrMXFUVEpPYWxreVRucFJlVTE2WXpCWlZGbDZUbnBCTVUxcVl6Uk9ha2t3VG5wYWFrMTZhM3BOYWxGNlRucEpNMDVxVW0xTmVrMHlXVlJSTVU1cVZYcFBSRnB0VGxSSk1rNVVVbXBPUkdONlRXcEtiVTE2U1ROTmFrMHpUWHBKTWsxVVZYaE9WRVY2VG5wYWJVNVVhM3BPUkZVeVRXMUpNRmxVVVRST1JHTXlUbXBqZWs1cVl6QlphbU41VGtSak1rNVVZM2xPYW1NelRXcFZOVTVFVFhwTmFtTTFUWHBaTTA5VVVtdE5iVmt5VDFSUmVrMXRXVEJOZWxWM1RsUk5NazFxV214T1JGVXhUVVJOTkU1RVl6TlBWRnB0VGtSWk1FOUVWVFZPUjBrd1dtcFZNVTVFWjNwT2FrMHdUa1JqTTA1VVVteE5iVmt4VGxSWmVVMTZXVEpaZWxrelRYcGpNbGw2VW1oT1IwMHlXV3BaTVUxNll6Sk9SRkV6VG0xSk1rNXFZM2RPYWtVelRVUlpORTVIUlhwT2FtTjNUbFJCZVZscVdUVk9SMDB5VGtSUk0wNUVTVEpPUkUweVRrUkpNMDVVWXpWT2FsRXpUV3BLYlUxNlp6Rk9WR042VGtSWk1VMUVUVEJPYlVVeFRVUmplazV0UlRKT2FsSnFUbnBKTUZwRVVteE5iVmt4VFZSWk1VNXRWVEJPVkZrMVRXMUpNbGw2VlROT2VsbDVXV3BWTVU1NldUSlpWR00xVFhwck1GbDZWVEJPYWxFelRrUlNhRTU2UlRKT1ZGVjRUWHBqTVU5VVkzZE5lbGt3V1ZSWk1FNVVSVEJPYWsweFRucEJNVmxVVVROT2JVVjZUbFJqTTA1SFVYcE9SRmswVGxSWmVrNUVZelJOZWsweVRXcFpNVTVVV1RGTlZGa3lUWHBWTUUxNldteE9iVWw2VDBSU2EwNXFWWHBQVkdNeVRrUkZNVTVFVFROT1JGbDZUVVJqZDA1NmF6SmFSRmt3VFhwbk1VMUVUWGRPUkVVelRsUmFhVTVIVFhsYWFscHJUbnBaTTA1NlVYaE9hbEY2VDBSUk1VNTZUWHBOVkdNelRrZFZlazVxV1RST1JHZDZUVlJqTTA1cVp6QlpWRXB0VG5wRk1GbDZVbXRPVkVFeFRrUkthVTVFV1RGUFJFMTVUbXBOTWsxNldUUk9SMDB5VG5wUk1rNHlSVEJPVkZwcFRYcFZNVTVFV21oT1ZFVXdUa1JSTUU1dFVUTk9SRlV4VG5wTk1VMVVVVFJPZW1zd1RtcFJOVTE2VlRCTlZGa3hUbTFKTWs1cVRUTk9WRVV3VFZSS2FVNUVTWGxhYWxwcVRrZFZlVmxxVlhsTmVsVjZUbnBSTUUxNlJUTk5SRXB0VFhwQk1FMTZXbXhPYlUwd1RXcGFhazE2VFRKT2VscHJUbXBuTTA1cVRUTk9SRVV5V2xSUk1VNUhSVEpPUkdONFRtMUpNazE2WTNkT2FsVXdXbXBTYTA1RVl6Tk9hbHByVFhwRk1VMVVXVEJPUjFreFRsUk5OVTU2UlRGTlJGcHRUWHByZWs1cVdteE9SRlV5VGtSWk1FMXRXVEJPUkZFd1RtMVpNVmxVVlRKT2JWRXpUa1JTYTA1NlZUTk5lbEV6VFhwbk1FNVVXVEpPYWxFd1dYcFpNazVFWXpGT2Vsa3dUa2RKZWsxcVdUTk9lbEV6VFVSU2JFNXRTVEpOVkUwelRrZEpNRTU2VVROT2Fsa3pUa1JSTTA1RVVUTk9lbFV4VFhwQk1VMVVUVFZOZW1NeFQwUlZlVTVVUVhsYWFrMDFUa2RGZWsxcVZYcE9SRmt6VFhwUmVVNVVaekZPUkdONVRucFZNVTFVVm1oTmJWa3pUbnBaTUUxNlVUTlBWRkV3VGxSbk1FNUVXbWhPYWxrelRrUlplVTVVVVRKT2FsVjRUbnBCZWs5VVRUTk5la2t5VDFSWk1rNXRSVEZQUkZrelRucEZlazlVVlhoTmVtdDZUMFJXYUUxNlZURk9WRTB5VG1wVk1rOUVUWHBPVkZrd1QwUktiVTU2WXpCWlZFcHRUbTFGTUZscVVUUk9WRlV3V1dwS2FVNVVRVEZPVkZVeVRYcHJNMDlVVW10T2VtTXdUbXBOTlU1Nll6SlBSR04zVG5wcmVrMUVXVEpPYWxFd1RYcEthVTE2YXpOTmFsVjZUbnBCTWs1NlZUUk9ha1V5V2xSamVrNUVTWHBQVkdNd1RrUmpNMDFxWXpST1ZHZDZUMVJSZWsxdFdUQmFWRlYzVFhwTmVrMXFWWHBPYWxrd1QxUlJlVTU2V1hwTmFscHJUbTFKZVZscVRYbE9iVTB3V2xSak5FNXRXVEpaVkdNMFRYcFpNMDlFVVRCT1ZHZDZUbXBqTWs1cVNUSmFSR042VG1wRk1FMVVXVEZPUjFFd1RucE5NazVVUlRCUFJGbDZUbTFKTUU1cVdYcE9WR016V1ZSU2FFNXFWVEJPUkZrMFRrZE5lazlFVFRCT2Vra3lXbFJSTkU1cVZYcFBSRmt6VG1wWk1rNVVXbTFPVkUxNlQxUlpNRTE2UlhsYWFtTTBUbGRGZWs1cVVYcE5lbXN4V1ZSWk1VNXRVVEJPZWxrd1RtMVJNVmxVWTNkT1ZFRjZUbXBTYWs1NlVUQk9SRnB0VG5wbk1VNUVZM3BPUkdNeVdsUmplRTU2UVhwT1JGcHRUbFJyTTAxRVRUUk9SRlV6VG1wWk1FNVVWVEpPZWswMVRtMUplazVFV1hoTmVrVXlXWHBaTTAxdFdUSlpWRkV4VGtSbk1VMVVVbXhPYWxsNlRtcFJOVTVxVlROTmVsRjVUWHBqTVU5RVZYcE9WRlV6VG1wUk1VNXFSVEJaZWsxNlRXMVpNRnBxVW1wTmVtc3dUVlJSTkU1SFNUSk9WRmt3VG1wVk0wOUVZelZPYlZVd1RucFJNRTVxVVRCTmFsRXdUVzFaZWsxVVZUUk9lbWQ2VG5wTmVFMTZUVE5QUkZwcVRYcE5NRTVxWXpKT1Ixa3dUVlJaTkU1NlFUSlBSRlY2VGxSRk1FNUVXVEZOZWtrd1RYcFplazVxVVROT1ZGVXdUWHBCTUZwRVl6Sk9iVmt6VFVSak5FNXRWVE5OZWxab1RtcFZNbHBVVVhoTmVrMHlUMFJOZUU1NlVURk5SRTB3VG0xRk1VOUVUWGRPVkVFd1drUlJlRTVFWnpGT1JGSnRUVzFKTVU1VVZUVk9hazB3V21wTmVFNTZXVEZOUkZVelRucE5NRTFxVlhkT1JGVXhUbnBqZUU1NmEzbGFhbFpvVFhwTk0wOUVaR2hPUkdzd1RucEtiVTE2V1RKTmFsVjRUbFJWTWsxVVl6Qk9SMUY1V1dwWk1VNXFSVEJOVkVwdFRtMUpNRTFxVFhwTmVsa3lXVlJOTUU0eVJUSk9hbFV6VG1wamVrMTZUVEZPVkZFelQwUlJlRTE2UVRKYVZGSnBUbnBuTWxscVdUSk9SR3N5VGtSWk1VNVVUWGxhYWxKclRrUnJNMDVxWXpOT1JGVXdXbFJTYlU1VVFUTk9lbEpvVFhwck0wNTZZekJPVjBWNlRsUlJNVTVxU1ROUFJGa3pUa1JuTWxwRVdUTk5lbU13V2tSWk1VMTZWVEZOUkZWNlRrZFpNMDVVV1RGT2Fsa3lUbnBhYlUxNlZUTk5WRTB3VGtScmVrMXFWWGxPYWxrelRrUlJNRTVxV1RCTmVtTjZUbTFKZWs1RVdUTk9SR2Q2VFdwTk5VNVhSVEpQUkZreVRYcFpNRnBVVW10T2FrMHhUa1JrYUUxNlozbFphazE1VG1wUk0wMVVVVE5PUjBreFRtcFpNazVFWTNwT1JFMHpUbFJGTUU1VVZUUk9hbFV3VFZSUk5FMXRXVEpPZWxFeFRYcFZlazFFWXpCTmVtY3lUbnBWZDAxdFdUTk5hbFV3VGtSTk1VOUVZM2hPUkVreFRVUlZNazVVWnpKWmFsSnBUWHBaZWs1VVVUTk9hbGt5VGtSU2EwNTZWVEJPVkZreVRtcE5NazE2VFROT2VrVXpUbXBhYWs1Nll6RlBSRmt6VGtkRmVWbHFTbWxPVkUxNlRtcFZORTE2VFROUFJFMHlUWHBKTTAxcVdYaE9hbWN3VDBSTk5FMTZRVE5PYWtwcFRrUnJNazVFVFRST1JHTXdUMVJLYlU1NlFUQlpWRTB5VGxSUk1rNXFXbWxPYWtreVRWUlNiVTVIU1RKTmVscG9Ua2ROTTA5VVl6Qk9SRmt6VDBSWk0wNXRWVEZPUkUxNlRsUk5lazlFVlRWT1JFMTZUbFJhYWs1RVp6Tk5WRlUxVG1wUk1VMVVaR2hOZW1NeVRYcFZkMDE2V1RKWmFsazBUbnBaZWsxVVVYaE9SRkY2VFhwVmVVNUhSVE5PVkZwcVRsUlJlazFFVW10T1IxVXhUbnBqTkUxdFdYcE5SRmt4VFhwck1scEVWVEJPZWtVd1QwUlNhMDU2VVhwUFJGSnJUbXBWTVU5VVZUSk9WRUV3V21wWmVrMTZXVE5aVkZKclRsUm5lazlFWkdoT2Fsa3pXVlJTYWsxNlZYbGFhbEY2VGxSUk1FMVVZekpPZWtVeVQwUmFiRTVVVVRCT1JGVjNUa1JyTTA1VVRUQk9lbGt3VFdwS2JVNXRXVEJaVkUwMVRsUkZNVTlFVFRKT1JHTXdUbXBaTVU1RVl6TlBWRkpzVGtSUk0xbFVWVEZOZW1jeFQxUmplVTU2WnpKYWFsSnRUbXBOTUZwcVZYbE5lbU41V1dwWk5VNXFWVEpPYWsxM1RrUmpNMDU2V1RCT2VtY3dUbnBrYUU1VVVUTk9hbHByVGxSRk0wNUVWWGxPUkZGNlRVUlJlRTVVUVROWlZGRjZUbXBWTTA1NlVtbE5lbXN5V21wWmVVMTZVVEpPZW1Sb1RYcEZNRTE2VVRST2VsVXdUWHBSTkU1RVNUSlBWRmt5VFhwbk1VOUVZek5OYlZsNlRVUmplazVVVlhwT1JHTjVUVzFKZWs5VVVYbE9hbEY2VDBSamVVMTZaekJPUkVwdFRucFZNRTU2V1RKT1IwMHdXWHBWZVU1NlNYcE9hbHBzVG0xVmVrNXFWVEpPYW1kNlRYcGplazVIVlhwT1ZHTXpUbnBGTVU1cVdUSk9lbFV3VFdwTmVrMTZSVEJOVkdONVRtcHJNbHBVWkdoT2FrVXlUVlJOTTA1NlNUSlpWRTB5VGxSbk1GcHFXbXRPVkdzeVQxUmFhRTV0U1RCWlZGa3lUbFJqTWs1cVRUSk9SR2N5V1ZSWk5FMTZaM3BPZWxwb1RrZFpNMDFxVFRGT2Vra3dUMFJLYVU1VVkzcFBSR040VGtkSk1GcFVTbTFPYWtVd1dYcGpNazU2YXpGTmVsSnBUbXBaZWsxcVZUQk5lbWN4VDFSU2JFNXFhM2xhYWswd1RsUkJlVnBxV210T2Vtc3lUa1JTYTAxNlRURk9lbGw2VG1wck1VOUVWWGhOZW1zeFRXcFZORTE2U1ROTmVsRXpUa1JuZVZscVZtaE9SRWt6VDBSYWFrNXFXVEJaYWswMFRsZEZNVTVFVFROT1Ixa3lXbFJhYlU1NlZUQmFSRnBxVFhwck1rMVVVbTFPYWxFeVdsUmpORTU2VFRGUFZHTTBUbTFOTWxsVVVYbE9hbFY2VGtSVk1FNXFXVE5QVkVwdFRtMUpNMDFxV214T1ZFVjZUVVJhYWsxdFNYcFBSRlY0VG5wbmVWbHFUVFJPZERFV0FBQnRkREZCYlVRMFFYZEVNVUZSV214QmVsWnRRVkZ3TTBGUlJESk1kMFY2V25wV01rMTNSWFZCTWxJelFrZE1ORnA2VEcxYVIwd3pRVlJNTUV4M1dqVkJVVVF3VFZGSU0wRkhTREpCYlZvMFFWRk1iVUZIU0RWQlZGWnRRbEZNTVVGM1VqRk1SMHd3UVZGNE1VRlJXak5CVVZJelRFZGFha0Y2VEROQlVVbDFXbTE0TVV4SFJESkJkMGhzVEhkSWJFRnRlRE5DUjAxNFducFdNMEYzV2pKQk1sSXlUVWRJTlVGdFJESmFiVm95UVVkRWJFeDNjWFZCVVV3eVFYZElNa0ZSVEROYVIxZDJRWGQwTTFwUlNEVkJiVXh0UVcxTWJVRlJWakpNUjBnMFFXMUlNRnB0Y1hWQlZFZ3lRWGROZDBGNlJHMWFiVXhyUVVkRU0xcDNjR3hCZDBRd1FVZEVORUZSU0RCTWJWbzBXbTEwTTBKUlREUkJVWFF5VFZGSWExcDZUREpNYlVnd1FXMVdiVnB0Y0RKQmVrUXhXbTF3TTFwdGVHMWFSMFF3UVcxTU1FMVJjRE5hYlhReVFXMWFiVUZ0VWpKQ1IwMTNRWGRXTUVKUlRHdGFiWGd5UWtkTU1rRjNURE5hYlZvMFdtMUVNa0Z0V2pOQmJWSXdRVzFGZVVGSFVqRkNVVTEzUVcxU00wRjNSWGxhZWxZeldsRk1NVUY2VmpOQmJVeHJRWGRXYlVKUlYzcGFiVkl5VFhkTU1WcDZWakJhYlhCdFFYZHdNRXh0VERKQmQzUXpURWR3YWtGM1NEQmFSMHd3V20xd01WcFJSRFZhYlhodFdrZEpkVUZSUkRGYWJVdzBXbnBNYlVKUlJHMUJkMGd4UVZGSU1scHRWakpCZDB4clFVZEViRTEzU0d0QmQxb3lXa2RNTkVGSFREQk5kMHcwV25wTU1WcHRTREJCZDNBeFFYZGFNVUZSZURCQmQxcHRRVlJFTTBKSFdqRkJSMW94UVZGd2EwRjNTRE5hYlZvMVFYcElNa0YzVERCQmJVNHhRWGRhTUVGdGRETmFkM0YxUVZSU01rRkhjRzFCVVVoc1RIZE5ka0Z0Vm0xYVVVUnRRVkZFTWt4dGNHeGFlbFp0V2tkYU0wRnRWakZCYlZwclFWRkVNMXB0VEcxQmQxWXhRVkZNTUVGdFdqTkJVVm93UVhwTWJWcHRSWGhhYlU1dFFYZHhkVUZ0VmpCQ1IwVjJRVWR3TUV4dFREQkJVVkl4UWxGWGRrRlJXak5CZDNGMVFWRklNMEZIV21wQmVsWnRRVkZNYlVGdGRESkJiVWhxUVVkNE0wRlJXalJhYlVReVduZHdNRUZSVWpCQ1VVZ3pRWGRTTWtGM1JHeEJVVVF3V20xYWJVRkhTRE5hZDB4clFXMTRNMEpSU0dwQlIzQXlURWROZWtGdFNEQk5VVVF5V25wTU1WcHRjWFZhYlhBeFFVZFhlbHB0VGpOQlIxbzFRVlJhTVZwdFdqVkJkMGd5UVZGd01VRnRVbTFCUjB3MVducE1NVnAzUkd4QmJVNHpRWGRJYlVGUmVETkJkM0F6UVVkU2JVRkhTRFZCVkVodFFXMU1OVUZVUkRCQ1Ixb3hXbTFXTUUxM1dtdGFiWEF6UWtkTmVFRnRWakJOVVZvMFFVZFdNVnBSY0RSQmQzUXhXbEZJTTBGM1dqSkJVVWh0UVcxT01rRnRTR3BCZWxJd1FWRlhka0ZIVERCQ1VYQXhXbTFXTUVGSFRERmFiVTR5VFVkRU5FRjNVbTFhVVUxNVdtMU1NMEZSV2pWQlIzaHRRbEZYZWtGdGRETkJiVWd6UVhkTU1rSkhSWGxCUjA0d1FrZE1NMXB0Y0ROYVIzQXhXbTEwYlZwSFRYVkJSM1J0V2xGd2ExcDZWakZNUjNGMVdtMUlNazFSVFhsYWJVd3hXa2R3YlZwdFRERkJVWEJyUVZSRU1rRkhTWFZhYlZwdFdrZFhlbHA2VmpOQmQxcHRRVWQwTVVKUmNYVmFiWEF6UVVkYU1WcDZWak5CZDFveFFYcE1iRXgzVERCQlVWWXpRbEZJYkVGSFZqSkJSMHhzUVVkNE1rMTNjR3RCYlVReldsRkliRUZIZERGQlVWb3dRVWRhYlZwdGNHeEJWRm93VEVkSU0wRjNUREZDUjNCclFYcE1NMEZSVFhaQlIwNHhXbEZGZVZwdFRqRkJSMHhyUVVkd2JVSlJSWGRCTWxJeFdtMWFhMEZ0Y0RCTlIxcHFRVWQ0TVV4SFRYZEJSMHd5VFVkSU5FRkhUREJNYlVWNFFWUlNiVUpIV2pKYWJWSXpRVkZKZFZwdFNERkJkMGhzUVVwU2JVSkhTRE5CVVhRd1RVZHdNa0ZSZERKTmQzQnJXbTFPTWsxM1dtcEJSMVl6UVZGTmQwRnRUREJOVVZveVdtMU1NMEpSU1hWQlIwd3dURWRNTWtGUldteE1kMW95UVhkd00wRnRjRFJCZDNReFFWRkliRUYzZEcxQlIxcHJRVkZNTTBGUlNEVkJSM1J0V2tkTmRVRjNXak5DVVhGMVFWRkVNRXh0Y0RWQmJVd3hURWROZDFwdFNHMWFkM0F6UVVkV01VSlJjR3hCVkVneFdrZGFORUZIVmpOQ1VVeHRRVWQ0TTFwdGNEVkJlbEl3UVZGTU1VRlJkR3hOZDB3d1FXMU1NRTFIY0RSQlIzUXdRVzFJTkVGSFNERkJVVnByUVVkNE1scHRXak5CVVhBeVFVZElNa0YzVmpKTmQzQTFRVWQ0TWtGM2NETkJSMUl5VEVkRmVrRlVXakpCZDBWNVFWRkVNVnB0VEROQmQwUnRRVWR3TTBGUmVETmFSM0JzUVhkU01GcHRSRzFCYlV3eFFYZE1OVUZ0ZURKTVIwUXhRVlJNTUUxSFNETkJWRkl4UWtkSU5FRlVSREJNUjBnelYyb3dXSEZWVjJOdmVua3dja1pPT1ZaUWNEUndVazFwUm5neGRVWXpZMmx4TVVsaGNGSkVNRnA1WXpOQ1NYbExTbEpKUTI1S1RVSnZSMFZKVFVwRlQyOTZNVzVFZDNFMlRFcG5WMjU2VFdOSGQxSTFTbEpyV25CSGVYcGFlWEV3UjBabmJscFVZMmx1VkRWSFRUSjVRbkJSZFZCRVNFRnVUVEEwYVVKUmNWcElSbWRYUldGWFdVRlZkVEJ1TWtneFIxVlNORWN6VjJsR1IxTkNSRXBCUWtsS1UzVnVWVk5MUlhsNVNVZ3plVUZOZUdvd1dEQk5iVXBVVm14SGQzUnFXRzE1ZG5CSGRWWnhWVk5tUlZWVFpIQktkVVZDU2sxSVJqSjFlRnBLUldwQ1VuRlBTVWwxUTFnd1RVdEtVRGt6UlhZNVNFZElhalZ1ZUVGbWNVdDVabkY1VTIxeVZVOVRSSGg1UlVwR1owWkdWVTh3U0RKeGFVeGhVMlZHUzBWb2NIcGphSEF4Y0RWdk1WZGlRVWhYWVUxR1oxcEdWVll4UkV0T01scFNOV053ZUhnMWNWUjRhbTVLU1Vad2VtTnRXbE41UWxwU2VVRkdSamcwYmxWNGEwbFZWMmx2ZUVVemJqTlRaMFl4VjBaWU1rMHhiekpyUkc5NE9HMUlTbXRzV2pOTlkweDVkVTFDUzBWUlFrbFRWRVF4ZVdkTmVEUXpRVWxQVTI1S1JEUnhTM2xsVEhwclNraHNPVkpHVVVsM1J6TndhVUZKVm14dWQxSXdjVkpyWkV4NlFXVktTbXN3Y1RJeFJFVjZlVTl3TUVWcVFrcEJhRXAzZFRKSGJEbDJTbUZ4VkZnelUxaEtTRVZoV2xKbmFHNTVXalJ2VTNobFJ6Sm5aazFIY1ZSQ1VYVnBiMVZqU1UxVlYwUk5NMGxEY2toME0xcElaME5FYlVrd2NFZDFlVXBKVTBWSlIwVmhTbUZYVEhCaFNVcEdSMGxDV20xNVRIQktSVkZhU2xkdVNGUlNNMFZoUVdkSmVIRmhjRlZKWjNKaFNUVk1ZVlpyU0cxVFNIQXdSR3BFZDBsWVFYZzFTVUpVVjBOQ1MwVklSMGg1YVVoS09USnVTbGRDY0cxSlVtNUhlVXBKZWtobGIzbEJia1ZTT0dsR2VtZFZXakp4YVVneVRWcHVVVmRvUWtveFdFSkpVMmxDU2pGMWIxQm5iVVJJVERGRWVWZEJja2x4YWsxUlYxcGFTMHd4YmtnMWVscFVWMlZHZW10bVJHMTRhbkV3VnpGR01tcHJTVkJuVVZwUlNVZHVWRk51Y2xKeGVrZDZTR3RHZVZkUmNFZDVhVWRIUVVSYWVIVk5Xa3B4YVhCSGVVUkJWRGwzY25wcmEwRnRTVk5CTUhWYVJVZE5ZWEJLVFUxTWRtWnNibUZKTTBwVWVHdEZTbWMwUkhvNVlrVmhZMGxhVkRsU1NGRkJibkI2ZUd0dk1GSXdjbmxKYkZrd1UwOUhNRGx0V25kSmVuQXlSVE5OVTNGMlJ6QkJObkpUVFZSdWJWZHBUREZpTkhCS1NHbENVbU5EY1dGUGVVWjVUMnhhZDNGUmJraHhhVWRKVjBwSlZEUnJTRlJtTUc5S2NHVkNTbFp0V1RJNE1VRktZMjFhZWtWUGJsUkJaMXBUVTJKR01GYzFja2d4YlhGM2VXZHdNbXB0UVRKMWExaHRkRzFIVTNWVlNERjFObkJSUVRGd2VGbzFXbnBqWkVaU2VEVnVTMUp0UkhwSlVWb3ljVWhZTUdKclRFZDVOSEF5ZVhwSVNrbFpURXA1WkZwNFVtbE5lR2RSYmpJMVNYQlRVek5JTUVFMmJqRkZTSEJSU0dwSFIwd3hUWGRTYlV3eWRXbGFSMU15Y1hkeE0wa3llVmhIYlV3MGJsSkJia3hJUVcxYVNHTlRibUZYVFZwTFkyMUtVWFZyVFhveFlVbHRSVmxFU21wbFRXMVhWMDFWZVVsQlNrMTFTVkE1WVVKS2RXUkVNbXQzVFdGNFpVVjRTVXB3ZDBGcmNIcEpWRWt5VTNwdk0zVkdiMVZCUVc1dFREVnVlakZxYmxKQmJrbFZWMVZKYlhWcVRXMUpla2hoVERSRlMzVjJXVzFOUzBwSFUzbEdTWGt5UVRKQlkwMHlTWHBOVkUwMlFrZFRZMEYzVHpKWWJVRmxSMVJuV201VlQyZENTWFUyU25sRk0wd3lkVEZOWVZveFFUSkZOVTEzU1hoeVlWTnBiMUo1ZVZsdGNVTkJlblY2YjIxNVpVZFVjVFJLZUdZMVFVaG5NM0YzZVdKS1MzRmhXbFZqWmtsVVZ6Qk1lR0kwY1RORWFVa3dWMjF2WVU5NGNFaG5Za1Z0VHpKSGJVd3lTRk5OVkhKNk1ETk5NbE50U1ZWUFRFeGhjV3hhYlhCclIxRjFUVXd5TVhweVNsYzJXR3htYTBGdFNWcHZVVTFEUWxOUFpGcDNTV1pNZVhsaGNuZDVibGt5ZVhwWk1FMVVSVkpuVFUxdGRXNVlNMDlXUmxWTU1IQlVVMkpNTWtscFJsSkZOWEpMWTBoR01rVlBTVko1YVVSTFQxaHdWWFJzYjFSbmFFbExZM3B2U1hRMVdqQkJZVmd6ZURWS2VYVm9SR0ZQV0UxSlUxRk5TRmRwUlZKTmFYRklhMk51VkZacFJUSm5WRVl5U1V4WU1YbGhSWHBCTlUxVGNHcGFZWGxXUVdGNGFuSkhWbVZhTW1abFJsUkpSMjR3ZVVKd2JEbHVjbEE1VjBaNmNYaE5TVlkxYjNablFYSjRNRFJJVlZOTlRFbzRiVXA2U0ROQmQwbGhSRzFYVkc0d2RWaHZla0ZzUVRKcWJYRXdNWGRCTW10M1FsVkJTRTFWWTNwSFNrVjJSWGxOVlc5SlYyRkZlR3BsU1hoSmJVWkpWMmRDVVZOTFFURmlNRnA0ZVdkTmJEbHVSakphTkZodGVWbEJkMEZIUm5wblkyOHpUalZLWVhsTGNEQndNVVl4ZFhWS1UwRjRTSGhFTVUxdFNXMUZNWGxKUVhkMVlsaHRUek52ZUhsNVRFaG5RMWd5YTJad1NIVjJURzFOUWsxTGVHeGFVMGsyUlZSVFFVMHdXbTFGU1dOWlNUTkJhMGQyWnpWeFZXTkJiMU5TYTBFd1UyeEhTWGxqUVVsQmRuRkllVE5hUzNSc1NYcFRSVUV5T1VWdmVEQXlXbm81UVVwNE1YbEJlSGxoUVVwNWVVSlJkVzFCTWtFMldXMUlNbkpHT1ZaQlUwVmFURWhtYlVsS1NXSkJlR2RvV25wMWJVeHRSWFpZTWtFeVFVWTVhMEV3TldkQk1YRkdSSGxXTTI1M2NVUnlTVk5qUjNwQk0waFVUVFJCWVZOaFdrcFRaVVl5WjBKTVNVVm1iekp3Ykc5NFNWZElTMVl4VFdGV00wZHRkRFJNUjFOVmNIcHhXRVJMVDNWQ1VYUXlSVWcwWlZwNmNUWkJTM1EwVFZGTmFVMHpSRE5HVURreGIxSm5UMFZIZVZSQ1Mwd3lTa2QwYTNGNGVUTndiVVZ0YmtoblVtOUlWalZITWtSbFNWTmpaMFZIY1ZkQmJVbHNTVlI0WlVReVZteEVSM2sxU2xWd05XNUhSVFpCVkZKc1JURlRTVUZVTldkTlUwMWpSM2xCWmsxdFNWQndkMVkxVFZWSU5YSjZlWFZ1ZUdkb1JqRjBNRWx0ZUdweVNWTk5Ta2x4VVVoM1JXSktWRk41U25kTWFVVXdNV0pGZWpWalRESTFaRzk1VjJkdU0wOTNSREJpTUVwU1dtbEVTVk5GVFVkRk1HOVVVbXhGTW5GRFRFZFNNMFYzUVdsYU1YRnBiMGhKYWtwU09YZGFTMU41VEhwVFVHOXNaalJhTVdKbGNrbFNhMHg1UlZORVNWZFhSVlF4ZUVKSVl6Uk5iWFZSYjFWaWJFSlVaM2xNZURGM2JqTkVhMjlLVFVwQlNqbEtia2d4V0hFeVltdHdNbE5wV25ZNWJISlJUalZJZUUxS1dtRk5TVzR4VWpSTVIwRnFTVXRFWlZwSlFVdEtVVWxhY2t0VGJFZ3hUMGRIVVhWSVJYcEJWMFJMVjBaR01GTjFUWGh4ZGtFeU1VWktlVWcwUmpKRlRVeEhUV0ZCWVhWWVNGSlNNSEZKY1doSlIzbFlXa2hNTWsxU01XMUpNakExV1RKRlIyNVJUM2xKVkhRelJqSTVZVTFJZVd4SlNrRTBUVXRNWlc1SmVXcEJNMWRrU1ZSeFluRlZWMlJ4ZVU0eFJFbHhhbGt5TVZGTlZVVjFjVEEwYVVoNlFXaEJNa1ZDUkVveFNuRlNWM2RCTWxkSlFVdEJVMjkyT1ZsR2VFMVVTWGRQYVZwSlJEUkZZVTFtYm5waU5FUjVSVnBZTWpGYVNrZE1Na3BSZFZWSk0xcHNUREpUVVUxc1oydEdVblUxVEcxRlpVbEhSWFZOU0ZOQlduaHJWMGRMWTFCSmJWSXlibEoxYkZremNWbENTRFZvU2tveE0yOUlPWFZKVTFOWmJ6QjRhWEIzVW0xYVNIVmhXVEZ3YW5GdFYxbHhlR05ZUWtoeFdrWlJRVTFKZUZkNFNraFhkVUZVVFhsTllVMWhSSFpuWTNFeGVVOXdlRUZhUm1GT2JFVjZVMVZCU2pGamNIbzFaVUV3ZEROQk1ERkhia2x3TkVoNVRtVndVVVZVU0hZNWEyOVJkWGROTURWbWNGUTVha2w2UVdwTVlVVnRjVlJCTm01TGNHdEtTWFZuUlZOVGVVd3djWGhIZVhVelRWUkZZazB3ZFdsd01uVkZjVEpGUzBZeU9HVk5TSGxSY0ZGTlVrZEtZM1pIU1U5cldtMUJORXBTWTFGdVZGZFBia2RUZDBkSVJXdHdSamt5VEROVFZVUjZlV3RHZUhSclNGRkpaVTB5U1dsRWRtZE5SMU41V1ZwVWNYcGFVblJ0YnpCclpsb3dhakZIUzAxWGNuZzFXRXBoY1VGd01XSTBSREZqUVZsdFNHcE1TM2swYjFWalFrWXdRVVpDVkdOalFVcGpkWEY0YTJoTmVFMWhRWHBGVFVGS2VVTk5VVm8xUkRGd2JFWlVjVTF5ZWpScVdqQjVZMGR0U0dWTVNqVm5RbFY0YlhFeGNERkNTR1l5UWxKYWFuRlJlVTF2TUdKcVduaE5lVVpMVDBkQlZFMXJSekI1VjFwSFNVVkhTa2w1YmtoU2EwcDNjWGhhTWpsbmIxRlNNWEJLZVdaQ1ZFVmhSR0ZOWWtoUlFXcE5NR3RtUlZKRWJFUkxTVUZCVkhrMFIzbHdNMFpIZVVGSGQzUXlibEpOWlVaVVoxbHhlbE5SUmxGRVpVVlVUVUZFZUdKclJUQlRkbTlHT0RKd1ZYbGxRVlJqWlc0eVZtdHlSM0ZaY1RCV01YQjZOV0ZHVkZjeGJ6SXdhVVpJUVhWdU0xWXdRVWhNYVVwS1YydHlWVTFxUm5kNVYxbHRkRFZOWVhVMVNXMUVNRnBLU0ROdk1GWnBRVlZ4Tm01NGVUWndNRUZZY2tsQlJrUkxUMDl3YlhGbmJsUXhTbG93ZEd0d01VVXhjSGQxZFhFemRXWnZNVTFYVFdGRloxb3lVMHRHU2sxS1NWVmlhVUV3ZVRaTlVtYzFRa3RqZGtGNlFWZHZVM2xzUjIxd2EwRXpRVmx4VkRrMFJuWTViVVpLTVZsR2QzbGlTVXA1VkVsaFRUWktTWEJwVEVobmVFWjVSVlZGWVZOUVRWUndhMHhMY1RKSmVqUnBRVlZOWTAxNlkwVmFTbWRQY0V0QlMwRlVPVE5aTVUxWVRIcGlNa2xVT1dsTVNEZzBRWGhtTVhBeGVEQk5WR05uYjBkTk1FWjZjWFZhUzFkNWNGQm5SMHAzY1RKQk0xWXhSVlZOWlVadFRHeHZNMW8xU2xGeGFVY3dRVmR5U2xOamNUSlRZbkpKVFRWSFZYbDJjR0ZUWW04eGNESkhTRk5SV214bllsb3ljR3hOUjFJemNWVlBObGd4UVZOR1JqbFhjbmw1TlZneFYwRnVTMDFuY0dGNWJrRXlRVTlHZWtGVVNVZEJWa1JLTlhkTlNYVXhRa2RCZGxwNlRURnlWREZVU1RCcU1rRjRZakpHUzNWWGNFdEZSMDFJVjFKWk1IbFpRVkp4YTAxSlQxQkNVMU5QUmxGNWEweDVlVnB1ZUhWWGJsVklhMHhKUVZKSFVYRjRUSGhyVlVSTFQxWnZNMEY0U1ZSQlZGcEhVMlJ3U2tWcVJFaEZXRTFKY0d0SFZVNHlTRkpqWmtFeWEyVnVNazFMYjNoME5VVlVZMDl5ZW5GaldrbEpRVUZWU1dWTlVrbGhSa281Um5KNmNYVk1TV0l4Ymt0eFFVMUtSVFpCTTBGQ2NGSlRWMXB0Y1RCR1NsZEhUVEJyWjBadFYxVkVNR05CUnpCNWVFMTVWek5NYlZjeWNVcE5WRVYyY0VGUWVqbHNURXBCWmsxR1RqbFdVSEF5UVZGd2JFRlJlRE5CVVVodFFVZGFNRUZIVERCQlNsSXdRVkZNYkVGM1dqTmFkMHhyUVhwYU1VSlJTRzFCYlhBeVRHMU1NMEZ0V2pOYWQxcHJRVzFhTVZwdFdqQmFiWFF5VFVkTmVVRnRWak5CYlZkNlducFdiVUZSU1hWYWJVUXlRbEZNYTBGdFVqSkJiVWcxUVhkRU0xcDNTR3BhYlU0elFrZGFhMEZSU0RGYWJYQnRXbTFXTVVKUlNETkJiVVF5UWxGRU5FRlJkREpCYlVRMFFYZGFiVUpSV210QlIzUXlRVkZFTVVGUmNETkJVVWh0V20xU01rSkhURzFCVVVnelduZFhka0ZVUkRCQlVWbzFRVkZNTWtKUlNHcEJSMHd4V2tkRU0xcHRUREJOZDFwc1FVZFNNa3gzV20xQlZGWXlRVWR3TUVGNlNERkJSMW8xUVVkYU1FMUhXakZhYlZJeFFWRklNa0Z0VGpKTVIwd3lRVlJFTUVGSFdqRkJWRkl4V20xd05VRlJUREpNZDBocVFWUkliVUZIVjNaQlVYQXlRVzFNYlVGdFZqTmFiVXd5V20xME0xcHRjREZCUjFadFFVZGFNVUZIVW0xQ1IwMTFXbTFPTUVGSFJETmFiWFF4RmdBQVVURk5hbFUxVG1wTk0wOVVUWHBPYlVreVdXcFNhRTE2VVROUFJHTXhUbXBGTTAxRVdUUk9WR016VGtSa2FFNVVaekJPVkZGNlRrZFZlazlFVlhsT2Ftc3lUMVJSZUU1SFVURk5hbFUwVG1wck1rMXFZM3BPUkUwelRtcFpORTVxVFRCYVJGSm9UbTFWTTA5RVZYaE9iVlY2VFhwWk5FNUVXVEpPYWsxNVRrUmpNazlVVFRCT2JVVXlXbFJTYVU1RVRURk5SRnBvVGxSTk1scEVWWGRPVkZFeldWUmpORTE2U1RKT2FrMTRUWHBCTTAxcVl6Tk9la0V4VG1wTk0wNUVaekJOVkZsNlRtMU5NVTlVV1hsT1Ixa3dUV3BOTTA1WFJUQmFWRkpyVGtSbmVrNVVVbXhPYWxFeFRucGpORTE2WnpCWmVsRjZUbXBKTUZwRVVtMU9WRUV3VDFSTk1FNVVVVE5QUkZrMVRrUkZNazVFVW1wT2JWbDZUbFJOZWs1cVp6Qk9hbU4zVGtkSk1VMTZZelJOZW1zd1QwUlplazVVWXpGTmFsbDZUa2RaTVU1RVdUVk9SR013VG1wak5VNVVZekZOUkVwdFRYcGplazFxVVROTmVtc3hUa1JWZUU1cVVUQk9lbHByVG1wRk0wNTZUWGxPYWxWNlRucFJlRTVxVlRKWlZGa3pUa2RKTWxsNlkzbE9ha1V3VG5wTk5VNVVUVE5QUkUxNlRtcEpNRTVFWTNwT1ZGVXlUMFJTYWs1dFNUQlBWRlY0VG1wWk1FNTZWVFZPVkVsNlRucFpORTVIVFRKWlZHTXhUbnBaTTAxcVRUQk9lbXN5VGxSU2JVMTZVVE5aVkdNMFRucEZNRTVFV214T1JGVXdXVlJWZDA1NlRUSlphbEUwVG0xRmVrMTZUWGxPYlZGNlRrUmFiRTE2WTNwT2FsRjZUa1JWTTA1NlZUVk9hbXN5V1ZSVk1FNXFaekpPVkZFd1RYcFJNazVVVFRGTmVrVXpUbFJOZVU1VVZURk9WRlUxVFhwUk1sbHFWVEZPYWxFd1QxUlZkMDVFVFRKTmVscHBUbnBqTUU1NlVtdE5la0V5V21wVmVVNTZXVEJOZWxFeVRtcFJNVTVVVlhkT2Vsa3lUbnBhYWs1VVp6Tk5lazE0VGxSVk1VMVVXbXRPVkVrelRXcE5lVTVFYXpOTlJGVjZUbXBqZWs1RVdYbE9hbWN5V21wYWFrNUhTVEZPZWxFelRYcGpNRTE2VVRST2Fsa3lUMVJhYTAxNlFUQk9SRTEzVG0xSmVrMVVWVFZPUkZGNlRtcFplRTVxUlRGT1ZHTjNUWHBqTTAxcVVYcE9hbFV5VG5wTmQwNUhWVEpOVkdNMVRtMVpNbHBxVlRGT2JWVXdXbFJSTkUxdFdURk9WRkY1VFcxSk1rMXFWWGRPYWxFeFRWUmthRTE2VFRKWmFtTjNUa1JuTWs1RVkzcE9SRTB6VDBSVk1VMXRXWHBPUkZGNlRYcFJNRnBVVVRST2VtY3dXV3BaTlUxNldUTk9hbFY0VG5wbmVrMXFWVEpPUkZVeVRWUmplVTV0VFhsYWFtTTBUbFJqTUZscVRYaE9hbWN4VG5wamVrNUhSVEJPYW1OM1RrUmpNVTFFU20xTmVrVXhXVlJhYlU1cWF6SlplbEpyVGtSTk1sbFVVbXhOYlZreVdXcGFhRTU2UVRCT1ZGbDZUWHBSTVU1cVVURk9SMVV3VG5wUk5FNXFXVEpaZWxsNVRrUlJNMDFFWXpCTmVrMTZUbXBhYkUxNmF6Rk5SRnBzVG1wbmVrMXFUWGxPUkdONlRtcFJlRTVVUVRKWlZFcHRUa1JKTWxwVVkzbE9SMVV6VGtSUk1rNXRTVEJOYWxKc1RtcG5NVTFxWTNwT1Iwa3lUbXBWZDA1cVJUQk9hbEpwVGxSSk1rNXFXbWhPUkVsNlRXcGpORTU2VVRKT2FrMDFUbnBOTUU1VVRYbE9SRTB3V2xSWmVrNXFSVE5PUkZFelRYcEZNVTVVVlROT2FtY3hUMVJLYlUxNlVUQk9SRkpwVFhwSk0wMVVVbWxPUkVWNlRYcE5NazV0UlhwUFJGcHNUa2ROTUU1NlRYbE9WRUV5VFhwUmVFNVVTVEpOYWxGNVRYcFJNVTE2VVhsT1IxVXpUbFJOTlU1SFRUQlBSRkpwVG5wTk0wMUVWVEpPZW1ONlRXcFZkMDU2UVROT2FtTXhUa2RGTWs5RVdtcE9iVTB4VGtSak1FNXRXVEJPYW1NMVRsUmplazlFVW0xT2JVa3dUa1JqTVU1RVZUTlBWR016VG5wSk1GbDZWWGhPYWswelQwUlJNazVVWnpCUFZFMHpUbnByTWxwcVVteE9SMUY2VDFSU2FVMTZaM2xhYWxWM1RrUlpNRTFxVFRWT1YwVXhUbFJqTkU1VVJUSlBWRlUwVGxSck0wNVVUVEpPUkZWNlQwUlNhMDV0UlRCUFZGSm9UbnByTUU1VVVUQk9lbXN3VFdwak1rMTZRVEJPVkZrd1RsUnJNbGw2WTNsT1JHc3pUV3BOTlUxdFNUTlBWRlV6VG1wbk0xbFVWWHBOYlVsNlRrUldhRTVFVlhwUFZGVTFUbnBqTUU1cVVtMU9SRlV6VGtSWmVFNTZUVEpaZWxVMVRsUkZNMWxVVVhwT2FsRjZUa1JWTVU1SFRUSk9hbU13VGxSSmVrMUVXVFJPUjFrd1RucGFiVTVxVlhwUFZGRjRUWHBOTTA1NldUTk9WR014VFZSUk1FMXRXVEZPVkZGNlRtcFZlazVxV1hsT2FrMHlUMVJOZUU0eVJUQk9SR04zVGtSTk1VMUVUVFJPVkVWNlRYcFpORTVVV1ROT2VrMTRUWHBKTUU1VVdUQk9ha2t4VFhwWk1FNXFSVEpaVkZrMVRsUlJNRnBFVVhwT1JGRXlUV3BWZUU1VWF6Rk9lbEV6VGtkSk1FNUVWVE5PYWsweFRYcE5lRTVxWnpOT1JGVTBUWHBSTTA1Nll6Qk9SRlY2VDBSUk5VNVVZek5QVkVwcFRrUlZlazFFV21oT2VsVXdXbXBaZUU1NlVUQlBSRXBwVG0xVk1GbFVVVFJPVkZFeVRWUlplRTE2UVRKUFZGbDZUbXBKTVUxcVdteE9SRTB3VG1wUk5VNVVVWHBPVkUxM1RYcGplazFxV21wTmJVa3hUMVJSZWs1SFdYcFBWRnBxVG5wSk1rNXFXVFJPUkZreVdXcFJOVTVFU1hwT1ZGRXlUa2RaTTFsVVdUQk5iVmt6VG5wTmVFNVVSWHBPUkZwcFRtMUZNRTFVV1ROTmVtc3dUbFJWZUU1cVJUQlpWRTE2VGpKRk1VNTZUVFJPVkUweFRrUmFiRTVFUlRCT1JHTXdUbTFOZWsxRVdtMU9SRmt6VDBSTmQwNVVZek5QUkZFMFRYcGpNazFVV1RST2FtY3lUV3BqTUU0eVJURk9hbEV6VGxSak1GbFVWWHBOZWtrelRWUlJlazVFVlRKTmFtTXpUbnBSTWxscVdYaE9SMDB5VDFSWmVVNXFUVEZOZWxrMFRucFpNazU2VW0xT1IwMHhXVlJXYUU1VWF6Tk5lbEpxVGxSRk1rOUVXbTFPYWtreVRXcE5NazVIVlhsYWFsbDZUbGRGTTA1NlVYcE9lbGt5V2xSU2JVMXRXVEphYWswMVRucE5NMDVFVlRST2FsVjZUa1JqTWs1Nlp6Rk5WRmw1VGtScmVrOVVWWGxPVjBVeVdrUlNiRTE2WnpCUFZGcHFUa1JuTUZwcVVUVk9WR2Q2VG5wUk1VNXRVWHBPZWxKcFRucEZNRTlFU20xT2FsRXhUV3BaTlU1RVl6SlphbU4zVGtkVk0wNVVWWGRPYW1ONlRrUlplRTV0U1ROTlJGcHFUWHByZWs1cVkzcE9SMWt5V2xSS2JVMTZaekJhUkZreFRucEJNazlFV20xT1ZGVXdUMVJLYlUxNll6QmFWRkpzVGxSRk1VMUVZekpPVkVWNlRucFplazVIV1hwT1JFMTNUa1JqZWsxRVVURk5lbU14VFhwWk1VNUVWVEJOZWswMVRtMVZNMDVVVW0xT2JWbDZUVlJOTWsxNlFYbGFhbFY2VG5wWk1rNUVWVEpPZWxFelRWUlZNRTE2WXpKT2VtTXlUVzFaTVU5VVVtcE9WR2N6VG5wVmVFMXRXWHBPUkZKb1RtMVJNVTFxVVRKT1JHTXdXbFJOZDA1cVJYcE5hbU0xVG0xVk0wNTZXVEpOZW1NeFQxUlZNRTVVU1ROT2FrMDBUbTFGTTAxcVVUVk9hbEY2VGtSUk5VNUhXVEpPZWtwdFRrZEZNMDVFWXpCT2FsVXdUbnBhYTA1cVJUQk9hbEUwVG5wck0wMTZVbXhPVkZFelRucGFhazVxU1hsWmFrMHhUbXBWTUU1NlkzbE5iVmt4VGtSS2FVNTZUVEJhUkdNeFRucE5NRTU2WXpGT1JGVXpUbnBqTTA1NlJUTk9lazB4VFhwUk1rNVVVbTFPUjBWNlQxUmplVTVxVlROUFJGRXdUbFJGTVUxNlRUVk9SRlV6VFdwWmVVNVVZM3BQVkZwcFRtMVplazVFV1hwT2JWa3pUMFJqTWsxNlRUSlBSRmt3VG1wWk1FMXFXVEZPYlZFd1QwUlpNazVFUlRKWmFtTXdUbTFKTWxwVVRUTk5lbEY2VDBSTk1VMTZZek5QUkZrMFRtMVJlazFVVlRWTmVrMHhUbFJWTlU1cVl6Qk9SRkpwVFhwcmVrMUVUWHBPUjFGNlRWUk5kMDU2UlhwTlZGVXlUbnBGTWxwVVRUSk9SMDB5VG1wamVVNTZTVEZOZW1NeFRsUk5NMDVFWTNoT1ZHc3pUa1JWZVU0eVJUSk5hbFY2VGxSak1GcEVZM2xPUjBVeVRrUlZORTU2VVhwTlJHTTBUa1JqTWs1VVRYaE9iVlV3VG5wUmVVNTZVVE5OYWxGNFRtcFZNVTFxWXpKT2Ftc3lUbXBaZWs1VWF6RlBWR016VGtSbk1sbDZZM3BPUkZVeVQxUlNhVTF0U1RCT1ZHTXhUWHByTWs1Nll6Rk9SR015VGtSWk5FMTZTVEpQUkZFeVRYcHJNbHBxV1RGT1JFMTZUa1JaTVUxNlZURlpWRmt6VG5wcmVrMTZZekJPUkZWNVdtcGpNRTVIU1hwTlJGVTFUa1JyTTA5RVpHaE9SMGt5VFhwVk5FNTZZek5PYW1Sb1RrUlpNRTVxV214T2FtY3dUMVJWZDA1WFJYcFBWRnBzVGtSVmVrMVVWWGRPUkVVelRtcE5NMDU2WTNwTmVtTXlUa2RKTUZwcVpHaE9SMDE2VFhwWk5VNUhVWGxaYWxFeFRrUkpNVmxVV1RGTmVrRXdUV3BOTkU1SFNUTk9lbGswVGtSVk1scFVWbWhPUkZrelRrUlJNRTE2U1RGT1JHTjVUWHBuTWxscVNtMU9SRlV6VFhwV2FFNVVSVEpPUkZreVRsUlZNMDVFVFRCT1ZHc3pUMFJSZVU1cVVUTk9SRlY0VG0xRk1FNXFTbWxOZWxrd1QwUlplazU2WTNwTmFrMTVUbXBSTWs5RVdURk9WR3N5VFZSTk1VNXFhek5PYWxKdFRsUlZlazVxV1hsT1ZFRjZUVlJqTkU1VVFUQmFhbFYzVG1wbk1FNUVaR2hPYlZVelRWUlpNRTV0V1RCYVZHTXhUWHBCTTA5RVVUUk5iVWt3V1ZSUk1FNVVUWHBPZWsxM1RucFpNVTlVV20xT2JWRXhUVlJLYVUxNldUTk5lbFV4VFhwQk1VOVVXbWhPUkdkNlRtcGFhVTE2VVRGUFJFMTZUWHBOTTAxVVRUSk5lazB3VFhwak1FNXRVWHBQUkUxM1RXMUpNMDVxU20xT1ZHc3lUMFJqZWs1VVNUTlpWRXBwVG0xTk1scFVVbTFOZW1zeVRucFZNRTVxU1ROT2Vsa3dUbXByTUU5RVRUUk9WR3N3V1ZSTk1VNXFZM2xhYWxFelRsUmpNMDE2VlRWTmVtTXpUMVJOZDA1dFZUQk9SRmt6VGxSSk1GbDZXVEpPZW1jd1QwUlNhazVYUlhwTlZFMTVUbFJOTWsxVVVtcE9ha2t3VFdwTmVFNVVaekJOZWxrd1RucE5NVTU2V1RST1JHZDVXbXBXYUU1VVp6SlplazE0VGxSUk1FNUVXbWhPYWtsNlRWUmplazVxUlRGTmFrcHRUa1JWZWs5VVRUQk9lbEV3V21wUk5FMTZWVE5PUkUweVRXMVpNMWxVVVRCT01rVXpUbnBqTkUxNlFUTk5WR016VG0xVmVrNVVXbWxPZWxrelRWUmpNazE2U1RCTmVrMHpUa1JWTWs1VVRUQk9lbGw2VGxSYWFVNXRWVEpaZW1ONVRsUlJNVTVFWXpGT2FsRXlXVlJTYUUxNlp6SmFSRkpwVGtkTk1rMXFWWGRPZWxreVdrUlJlVTV0V1RKT1JFMTVUakpGTUZsNlVURk9lbEV4V1ZSYWEwNUVaekJaYWxFd1RtcFZNRTlFVW14TmVra3dXbXBTYkU1Nlp6SlpWRnBzVG0xUk1VMTZXWHBPZW1zeVRXcFZOVTVxV1RCTmVrMTNUbnBOZVZscVRYbE9iVVV3VG5wWmVrMTZXVEJPUkUwMVRucEZlazVxVVRCT1ZHc3lXbFJOTUUxdFdUSk9lbFUwVGxSUk1FNTZaR2hPZWtGNVdXcFJNRTVFVVRKYWFrcHBUa2RSTTA1VVRUUk9ha1V5VFZSamVrNTZaM3BPZW1Nd1RrUk5NRnBxVFhsT2FrMHpUbnBhYUU0eVJUTk5lbVJvVFhwVk1rNTZWVFJPYlZFd1RucE5NMDVFVlRCUFJGSnBUa1JOTUU5RVVUUk9WRmt5VFdwYWEwNVVaekJPZWxVMFRrZFpNVTlVVlhkTmVsVXlXV3BWTUU1RVJUTk9SRTB3VGpKRk1FOUVXWGxPYlZVd1QxUlpORTVVWjNwT1ZGRTFUbXBWTVUxVVVtcE9WRTB3VG1wak1FNUVVVEpOZWxreVRtMVJNVTlVVFhoT2VsVXdXbXBOZDA1RVVURk9SRTAxVG1wak1rNXFVVE5PUkZGNlQwUlZlVTF0V1hwT2FrMTNUbXBaTUZsNll6Tk9hbEV3V1hwamVrNVVTVEpPVkZwc1RrUlJNVmxVWXpCT2VrVjZUMVJOZDA1cVZYcE9SRkUwVG5wUk1rOVVVVFZPZWtFelRrUlJNRTV0VlhwT2VscHJUbFJGTUUxcVdUVk9ha1V5VFhwVk1rNVVXVEpOVkZVMVRYcHJNMDE2V210TmVsVXpUMFJWTkU1NmEzcE5WRnByVFhwRk1rOVVWVEZOZWsxNlQwUlZNMDU2WXpCUFJFMTZUWHBGTVZsVVl6Tk9SRkV6VG5wamVVMTZRVEJQUkdONVRucE5NMDlFU20xT2JWVXpUMFJqTkU1cVdUQk9lbFY2VFhwWmVrMVVTbTFOZWxreVdXcGpNazE2WXpOT2FrMDBUbFJKZVZscVpHaE9SMDB6VGxSak1VNTZRVEpPVkZKdFRsUlZNMDU2WkdoT2VrVXdUbFJOTTA1VVRYbFphazE1VGtSak1VNTZWWGRPYWxFeFRtcGplazF0V1RCT2VrMDFUbnBCTTFsVVVtMU9WR3Q2VFdwU2EwNXFTVEZQVkZFelRucG5NMDFxV1hoT2JVVXlUMFJaZUU1NlVUTlBWRkUwVGxkRmVrMVVXbWxPVkVsNlQwUlJOVTVFV1hsWmFsRTFUa2RGTVU1NlVtMU9ha2t3VFhwak1rNUVXVEJPVkZreVRucG5NazFVV1RSTmVrbDZUbnBqZVUxNlFURk5WRTE0VG5wUmVWcHFUVEZPYlUwd1QwUmpkMDU2VVRKWmVsRjRUVzFaZWsxVVdtbE9iVkV6VFhwWmVVMTZTVEpQVkZwc1RrUmpNMDFFVFRKT2JWVjZUWHBOZWs1cVNUSlpWRmt5VGxSUk1VNUVUVEZPVkVsNlRsUmpNVTVVU1RKT1JGcHBUa2RGZWs1VVZURk9lbU42VGtSVmVVMTZhekZPUkUwelRrZEpNazlFVm1oTmVtY3dUbnBOTWs1RVp6RlpWR00wVG5wck1VOUVXWGhPVkUweVRXcGFhazVIV1ROUFZGcG9UbXBOTUU5VVRUUk9WRkV3VFdwWk5VNXFWVEpPUkZrd1RtcEpNVTlFVm1oT2VtTXdUV3BqZWs1NlFYcE5WRTE0VGxSck1rNTZUVEpOZWsweFQxUlJNazV0VVRCWlZGbDVUbXBuTWs1cVdtdE5la0V4VDFSU2JFMTZWVEpaVkZVMFRrUmpNVTlVV1hsT2FtTXhUMFJhYWsxNlJUSk5ha3BwVG1wbmVrMXFVWGhPYlZFelRucE5ORTE2UVhwTmFrMTNUWHByTTA5VVVUVk9iVkY2VFZSak5FNTZWVEpQVkZFMFRrZEZNMDVVWTNwTmVsVjZUWHBaTWs1cVNUTlpWRTE2VGtkTk1FOUVZekJPYlVsNlRrUk5NVTU2VVRGTmFtTTFUWHBOTVUxRVkzcE9WMFY2VG1wWk0wNXFXVEpOYWxFeFRrZFZNazFxVlRSTmVtTXlXWHBSTVUxNll6RlpWRnBvVG1wVmVrOVVUWHBPVkdNd1RucFZkMDVVVlROUFJFMHlUbnBOTVU5RVZUQk9hbFY2VGtSTk5VMTZSVEJPVkdNd1RucFJNMDVFU20xT1JGRXpUMVJSZVUxNlVYcFBWRnBvVGxSamVrMUVXbXROZWtVd1dsUlpNazV0V1hwT2FsVjZUbTFOTVU1NlZYZE5lbU15VDFSS2FVMTZSVEJhVkdNMFRtMU5NazVxVFRWTmVra3hUVlJrYUU1dFJUQlplbGt3VG5wTmVWbHFUVEZPUkdjelRrUmplazV0UlROWlZGRXhUVzFaTTAxRVRUUk9lbU13VDBSTk1VNUhWVE5PUkZwcVRtMUZNVTU2VlRST2VrRXpXVlJqTlU1Nll6SmFhbEY2VFhwWk1rNUVXbWxPYWtrd1dWUmFhRTU2UlRCYVZGazBUbFJSTWxsVVVtdE9hbGt6VDFSVk0wMXRXVE5OVkZFMFRrUmpNRnBVWXpGT2VtY3lXV3BaZVU1SFRUTk9hbU40VGpKRmVrMVVWWHBPZW1Nd1dYcEtiVTVIVVRKUFZGVjNUWHBCZWs5VVdUTk9lbGt5VFZSVk1FMTZVVEJPZWxWNFRrUkZlVnBxVFRSTmJVa3dUa1JhYkU1RVp6QmFhbGt4VG0xTk0wMXFXbXRPYlVreFRWUlpNazU2YTNwTmVscHJUWHBOTWs1cVRYaE9WR2Q2VFdwTk1VMTZZek5PUkZGNVRtMUZlazE2V1RKT1ZHc3pUV3BqTUU1cVp6Sk5hbEpwVFhwbk1rOVVWWGxPYW1jeFQwUlZlVTE2UlhsWmFsbDZUWHBuTWxsVVVtcE9hbEV6VFhwak1VMTZRVEJhVkdNeVRtcHJNRnBVVFRWT2JVVXpUbXBaZWs1RVVYcE5hbEY0VFcxSk0wMTZXbWxPZW1NeVRXcFpNMDU2YXpCT2VsVXlUbnBaTTA5VVZYZE5iVmt6VG5wTk1FNUVaM3BQVkdNeFRtMVZNMDU2U20xT2FtTXhXVlJWTUU1cVJUSk5hbGw1VG1wak1rMVVZelJPYlVWNlRXcFNhazV0V1hsWmFrMHlUbXBOZWs5RVVUTk9la1V3V21wS2FVMTZhM2xhYW1ONFRsUk5NRTVVV214TmVrbDZUMFJqTTA1NlVUSmFhbU15VG5wbk1GcEVUVEZPVkUwd1RYcFpNazU2UlRCTlZFcHRUa1JyZWs5VVVtcE9lbEV5V2tSVk1FNUVaM3BOYWxKclRXMUplVmxxWXpSTmVtTXhXVlJhYTA1VVdUTk9WR04zVFhwUk0wMTZZM2hPUjFVeVRtcFZNRTV0VVRCT1ZFMDFUbGRGZWs1NlNtMU9SRVV6V1ZSUk5FNXFXVEJaZWxKc1RsUkJNRTlVWTNsTmVsRXlXbXBSTUUxdFdUQlplazE1VG1wVk1scHFUWGxPZW1zeVdXcFZNRTR5UlROUFJHUm9UbnBGTUU1NlNtbE9WRlV5VFZSTmVrNTZaekJOVkZVMFRtcHJNRTFVU20xT01rVnpNUllBQURGQlVVZzFXbTFJTTBKUlNHMUJVWGh0V20xYWFrRlVURzFCZDFwc1FYZE1NMEpIUkd4QlVVUnRXa2RFYkVGNlNESk5VVWhxUVZSSU0wSkhXalJhYlhnd1dtMU1NMEZ0VmpCQlIzQXhRVWQ0YlZwdGNESkJSM0F5VEhkWGVrRnRkREJOVVhCclFYZEVNRUZSY0RSQmQwd3dRVzF3TlVGVVdqTmFiWEJzV20xU00weEhXbXBCUjFwdFdsRklNVnB0V2pGYWQxb3lRWHBJTUVKUlNHMUJVVm93UVcxWGVscDZUREpCYlVWNFFYZHdiVnAzV210QmJYZ3lUVWRFTWtGSFRqQk1kMGcxV20xU2JVSlJUREJCYlhnelFVZEZla0YzUkRCTVIxb3hRVWRJTTFwSGNESkJVWGd5UVcxYWJFRnRkREpDVVUxM1FXMU1iRXgzV2pSQmVrUXpXbmRJTlVGUlJHeE1kMHcxV20xV01rSlJURFZCZDNReVFsRmFiVUZVUkRCTmQzRjFRWHBNTUV4SFREUkJiWGh0UVcxRmVFRjNVbXhNZDNBMFFVZE1Na0pSY0RSQmQwd3dUVkZNTlVFeVVtMWFSMFY0UVhkU2JVRnRXbXhhYlhnelFsRmFNVUYzZERKTlIxbzBRVkZhTWsxUlRERkJlbG94UVhkTmRrRkhXak5DVVVoc1FYZFdNMEZ0VERCYWJVZ3pRa2RNTlVGM1NEQkJkMGd3UVhwRU1rRkhXbXhCUjA0eVFVZEVNVnA2VmpCQ1VVMTFRVkY0TTFwdFdqVkJiVkl3V2tkd2JWcHRVak5CUjBReVFXMWFiVnAzUlhWQlIweHRXbmRhTTBGVVNEQkNSMDE1V20xd01rMVJSWGhCZWxZd1FsRk1ORnB0V2pKQ1Ixb3pRVlJJTVVGUldqRkJSMHhzVFhkSU5VRlVTRzFDVVVSc1FYZGFNMHhIUkRKYWVsWXpRa2RFTUZwdFVqQk1SM0EwUVVkT01rRkhTRFJCZDNReVFYZE1NVUZIVERKYWQzQnRXbTFPTWtGdFYzWkJSMVl3V25kRU1FRjZVakJCYlV3eFFYZDRNMEpSVERWQlZFUnNUSGR4ZFVGM2RHMUNVVVF4UVhkSU1rSkhUREJCYlVnd1RVZE1Na0ZIVWpKTlVVUTBXbnBNTVVKSFdtdEJiWFF4V2xGSmRWcHRSREZCZDB3d1FYZE1iRTEzVEROQlIzaHNUSGR3TTBGUlJERkNSMHd3UVRKU01FMVJTRFZCYlhSdFFrZE1NMEZ0ZURGQlVVVjZRVzFXTUZwdFNEQkJiVkl6UVcxSU1FRXlVbTFhUjAxM1FWRjBiVnBSUlhWYWJVaHRRWGROZWtGUmRETkNVVXd3UVcxYU1scEhjWFZCU2xJeVRIZHdiRUYzV2pOQmQwaHNXbTF3TVZwUlREQkJVVVF6UVcxRmQwRkhURzFCUjNBeFFWUldNVUpIV20xQmVsSXdRVzFFTkVGSFRqTkJVVVF4UVZGd00weEhTR3BhYlU0eVFWRklhbHB0ZERCQ1VYRjFXbnBXTTFwdFJYZEJNbEp0UVcxRmVscHRURE5CZDNGMVFWRk1NazEzVjNaQmJWSXlRVWRNTTBGUlNETk1SM0EwUVZGV01FRlJjREZCUjFKdFFXMU1iVUYzY0RKQlIwVjZRVzE0YlVKSFREUkJla2d5V2tkTmRVRkhkREpCUjAxMVFUSlNNRTEzY0d4QlVVUnNUWGROZDBGNldqRkJSMWQ2UVhkU01GcDNXbXhCVVV3elFYZEViRUY2V2pGQlVWcHFRVkZ3TWsxSFJERkJlbFp0V20xRmVrRlVVakJOZDNCclFYcGFNa3hIVFhWYWJYUnRXa2RKZFVGVVdqRkJVVWd6V20xSU1GcEhURzFhYlZJeFFXMUZkMEV5VW0xQ1VVZ3pXbTFXYkV4M1NHcEJWRXd6VEVkd2JVRjNWakpCVVhBMFdtMTBNVnBSY0dwYWJYZ3hRWGRJTWtGdGRETk1SMHd3UVcxU01rMUhUWGxCZDFveVRYZHdiVUYzV2pOQlIwUXdRVlJTTTFwM1NESkJiVXd3UVcxYWJFRlVSRzFhZDNCcldtMUVNazFIVERCQmQwUXpRVWRNTWxwdFVqQk5SMFJ0VjJvd1dHNHlTVFZ2U2xObFRVdFdkRU5HVG1Gd2JVaHRTWHBKVTBneFV6QkpTRkl5YmtnMVkwSklNVU53YlVGNFFYbFhiSEJJUVZKQ1NGZGtUSGRQYkUxSFYwMXdTbWRKUmxSTlpFMUhUM2RHU0VocVFraG5kMFV5VFhkdlNuRkZia2cxTUVGdFYybHhVM2t5UjBsVE5VWjVjRE5CU210SlIwZFhTbkpJVFZKR01GZDVTRE5JWlVoNE1EUndVbkJ0UlRCNVVFZEhjVFZCU0RGSldsSXhZVXBUVjI1SWVqVmlRa28wTUUxSVJXZEZNM1F3UlZGNVQxaHRlVmxNYlhGMWNVcFRZMjR3YWpSd1NFVlpSMGQ0TUc5NFozVkpNakZRV21GMVlVeEpkVUZOTURGaWIwbE1NVVF6VTIxRWJVUnNSa3RYWVVSSVYyaENWRFZ0UWtkeFRFbDZTVlJ3WVhsdFNrdFRlRVIzU1cxSmJYUXpURXRQWlVWdFRYWk5TMGxvUjBobldVMHlZakpLWVU5SmJrcDVVbG94UVRCdlZWYzFiMHBFYTBoVWFqUk5NM2xyYmxSNGJWb3dkWHBOYkdZeFRETjFNa1pVT0ROQlNYVjNTa2RCYmxreVFUTkVlRFZpU2xKSU1YQjZhMWh5U2xkc1FVbDVXVzh3WjFGTllYVkVia2RKTmt4M2NUSkZNMkkwY0ZWNGFrRXlOVlZhVTFJMGNrbHhlVVpMVmpGQ1UwRnBTRWw1YkZwNloybGFiVmRxUlhoNU5VcFVORzF1VVhsRGNIbFhOSEpRWjB4dmJVMUhSakphWlhKNlZ6RmFTbFpwU0VwNWRVd3dkREJGU0RWcGJ6SkJXRVpTVW1WQ1MzRlFia3RYVlUxSmVXbElNbkZXUVZSblFVUXhUMDFOVVhBMVFrdEpTa2xVVjFkSlUwNWxXakJ4Wm5GTFkzcEdNa1J0Y0hZNWEwWjRRVEp5UzFKcVdUTlBUMjR6ZEcxRlVVRkJUSGhCU0VsSmVXbEpNREZLUWxGNWVWcDVlRFZ3TVZJeWNWSndNMHhLYTJOSFZHdEhSbEJuUkhGM2VWQkdZVWxyUVhwSmVGcExZak5OUzA5UmNFbzVXVUV6U0RSd2JHYzJTRkE1V0VwVllqTnZlbWN6V0ROVFYwY3lUV2xGTTFOTVJrZDVhMGhVU1hsRWQxZFFSRWRQVUhKVVYydEdkM1ZQVEcxU05FeEhTV0pOU0d0bmNVcE5XVnA2TkdWYU1GSXpSbmRGZUhKM1YyeHhVR2RIV2xSSlltOVFaelJ3ZW1ObVNrZFhNSEJIZVdGdk1EVlBibFY1V1hGM1FVVnVTa2xXYjFReFNra3pkVzFNZUVGUVFVcHhSM0V3Y0d0dVNXTnNURXRQU2todGRHdEtla0ZQV2pONVJIRXlRVWRZTTNsSmNFZEZURWxIUVdoS1NuaHRSRE5CVjFnd1RETkhTRXhsY0cxRlpYRjVjVTlJYlhGU2NrcFRhVXd3WTJsSlVVbExSMUZYYm5CSlFVUktSMU50V1ROVFVVaEtUV1ZDUzFJeVNWRlRiVVl3Y1c1YWVsTk1TRkl4UVUxSGNVRnZTMGxCY1hsME5XOTZZMkphVVhGaVFXMVBUMjVJTVhadVNVbG9jblk0YWt4S01VMU1lRkkwU0RGUFlVbElWM2x4YlVWVldqQnJVbkI2Y1RWS1NVNDFSVWRKUVUxNGNHdHlWRWxxV0ROeGVra3dTV0p2ZUhGclducDFWMGxIVTFwTlMxZDNXa2RGTUVWNFNXRkpVbmxTYm1GRU1YQXdjV3h5VkZKdFFsTjBiSEo0WjJOTlNrRldXa2gxVkUxS2FqUklNMEZzU0RKclRFSkllV2hLZDBVelJrb3hOVVo0UVdWR1lWTkdjbE5YZFVWSmNWQkdlREZoUkcxNWFrWjZZM2hDVlZOTFIxUTVkVVV5ZVRadU0wRkpXREl4UW5CSmRXWlpNa1ZUUm5kVGFrMVJlVEZOVlVWaFJHRnhTRVV3YTI1eFlYVkpXbUZYVlUxSVUzWk1kM1ZtUWxOV05VRktPV3RHU2xObGIwZDVUMWt3VFVOQlIzVnBXak40YTBoS1RUUkVlbXMyYnpJNE1YSktabXh4WVdNelNubFRaMjVKVFcxSFUwUmxTREpxTTB4SFFYcE5TRUV6Ymtwd05YRnRRWFpCU1ZORGJrZEJhVm95U0dwYWVqZ3lSVlJYU1hKaFZqSlpiWFZEVFVsMGFYQkdaMmhOVVhGMlJqSkJRMFl6ZFhoRU0xSTFXbmcxWTFreVYwbENVbkUyUVVwSlkwWXpZak5hZURGa2JsUjVaMGt6Y1VOeFVqQXljRlF3TWtwTGNXcHZNRFZaU1ZSd2FtNTNRWGxDU1UxUmIwb3dNVzV0VFdKSlZYRTJTVXRqZVUxdFRXTktla2xMYmxWQlkwUkhSVVZFU0VsSlJYZHhXa1l6VTJGSmQzRnRiMGRQVkVWNFdqVkdiWGhxVFVwcWEwRXlkV053U0ZveldqQjVORWwzVDIxRU1XTjVUVWQxU1VjeFdteGFWSEV4U1ROalJVbElRV2h1UzFadGNFaG5XRUpKVDNoSlVVbGlTVW8xVlhCNVR6VnZWVmREV2xCblZFUjNUM3BDVldOaVNIcHdaVzlLVTJOYU1HYzFjRk41TUVaTFYwTk5NakZwVEhod01XOUtSVXR2TTFOdFRVb3hkVVI2U1ZCSWJYbHBRVlZTYWtKSGVXVnVlalF4UmxONE1VeHRRVXRHTWpsV1JIZEJXSEZIVmpSSmVWTm5jVEpqUjBaVGRHbFpNRWhsUWtoNE5FUklhMVZZTW10blNVbGpZMDEyWjBOdU1WZGhiMkZ4UkVwS1dqUkJNa1F6U0RCeGRWcFFaMjFCVWxwcGNrdDViVUZ0Uld4Q1UyTnJXak5YVDBReVJXaEhTMU5LY0Vnd2FVcGhWelJGTWxvMVNrdFhWWEozZVdad1UwOXVSVWhUWVVaU1JXMUlVMGxOUlcxWFFYRjVUMGhIU210UlJYZFRZa2N5UlZWRmVHSnJUWHBCZUVsSWVURnVkMW94VFd4blVVeHRRVkJ1VURodGNIbzFkVXh0VjBWWU1rbFFSekZKWTBkVU1WWndZV0kwUmxKSU0weExWekp5U25BMGJsUjFaMDB3TVhwQlIxbzFXa3ROZWt4SVFUUk1NM2xIUVVkWGVYSktjVmxIU0RGdFRFbDVVRTFoUVZWYWVVMWhXa3RPTTAxU2VHdE1TSGxCU1hkRWFVMTRTVVp2TVhCcFJuZE5VRzU2ZVRSSE1XTXljVEo1WkhCVU9HeElNalZ1Ym5wMVkzRXpZME5hU0dOcFdURk9iVVpoUVdsdlVsTjFSbFI1WjI5S1RHbEJlR2RyYjFSTlZVa3plREJJZWpsQmNGTlhlRzVMVDIxQ1ZIUXhUWGQ0TTBkSGNVWkNVMDQwVFhkRloweGhRVVJ1VkZOMVdrZ3hTRUpRWjFoTmVIRjVXa2RYWW05dGVVdEJNV04yUVcxWFYzQnRlREZCZW5odFJWSm5XbkZUU0RKRlZXTnJSM2xCU0VKUU9WUk5WVTk1Y1cxQlVVaEtUVmh2TWtGS1dqQnJlWEpVTldOS1NqVm9Ra3QxUmxreWVYbEpNWGh0UjBwVFFVWkhTWGhhVlZJMVJYbE5hVXA2YTJKd2QwRmhUV0Y0TkVGaFUySkplR2RCV1RGUGEwMVZUMlp5U0V4cFdqTkZabkZ0UVRWTVMyTlhSbFZXWlVsVlNYVkNSMVpsVFVsT01uQjNkVEZDVTA1bFJVcFRaRm95WTFkR1NHdHNSMUYxYkhGS1UxSnZNWFZzU1ZGRU5VZFNTV3R1VVVocWIwcDFWWEozVm1Wd1VrVnJSRE54UVV4aFZ6VklVbGREU0VkVFkwZEhSVVZ2TVhGbVIwZFdhazFHWjA5dk1ERmhSakZOZVhKSVFVcE1kMWRpV2tvMVkwZEtZMWhDUjB3eVNIcDVRVzl0U1dOSFVEbE5URWhOTkVadFRXSkdVVWxXV2xKQk1sb3lSVXh5ZW5WUlRXMUpSMGxLT1VSTVNIbHRjRVpuV1V3d2EzVnVSMDkyUkhkeFlrd3pUVmR2VVVsaWNWUkJhVWRHWmpCQ1ZFVm5UVXQxZFhCSlkxVkhWSFY1U0Vsd01FRXpUakZ1ZDNrMVFVbEVOVUZWVmpWdU0xcHRUSGR4UTBwNVUwZHllalZYUWtkTk1Wb3lNV05GZUZOU1IzcEJkVUpTZFRGWU1qa3liakIwYWtWNlowcENTRm94UjNwd2JVUktValZZTTJNMVdEQkZWbTR5T1U5Tk1EQXdXVEk0YVhCNGVWaEVSMEZZYnpOeFYyOHllVU5NZWtWWGNsVkJkVUpVVTJod1lWSXlTbEZOYlhGdFNXMUtkMDk2Y0ZSTWFXOHlaMDFHU25GMVFVWm5ZWEZSZVRSYU1tTkRXVEZ4WTBwSFFWcGFlamx1U1hwRlVVRlNWekJ1VTAxVlJ6RmliRTFUZUcxTmVqVm9Xa2hOWkZwNk1UTnVWRWx1UVcxV2EwSlRSREpNTTAxSWJ6QklORXhLTUd0d1VWTjFiekpFYVVsNWRYZEdSbWRsUkVwMVMwMWhTVUZ4YlhFMlNIaGpRVzVJY1dweVVYVjNTRkZKUTNGUlYzVkdNRTFXVFVseFozRjNlVEZKZURFeGIwbE5TM0Y1VDJGdVVubGtjSGcxYWtsaFRXdFpNblV3YnpCYU0wRktlVXBZTUZNeWIzZEpWa1ZJZEd4Wk1rVlFibFZqU0c1c09YbEhNVUZXY2xGTlprcFVUVWxDUjFkS2NIWTVSWEF4ZVc1d1VtTjRjVWxKZVhCNFp6TnVlRUZJUm5sQk5rUXdWMWhhTUVGUWIyMVdaWEpIVTJWSVIwVkZRWHBOYkVoR1oxVkViWGd4Ymt0V00xcFZZak51WVVGTFFrcG5VRmh0VW1sd01Ia3dXVEJCYVhCdFJXVkdNblZNV0RKVFlrcEdPVzVJZWxZeFdqTmFOVXBWZERWQmVuRllXVEl4YUhCdFREVkdlSGxKVEhZNE0wMUpWMWROTVdNMVFsVlhUMjlMUldoeFMzVkpiakpGWTNKS1JXVkhVWFJyU2toQlNuSklZMk55ZVZOVGNUSjVSVmh0VjJaeVZHdHRjWGRJTVc1SGREQndNM0ZSUVVsTlFYQklTVlZ4ZVVGM1RUQlRVMFF4U1RadVNGZGhiMGgxVDBkMloydHVTVTloUVhsSlVVSkdaMUZCZW1zMVJFaHFhWEJRT0dwRU0zRmpiM3ByV2xsc1owMUplbW8wUWxWUGFGZ3llR3RJYkRsc1JVZHhOVVF5ZVhwSmJVUnNXa3Q1Tkc1SFJUTlpNVWxZUlcxSmVXOTZaak5aTVhWV2IzZDBhVUZoWXpSd1ZFaHRjbUZQYVhGMk9XdHViR1l5YjFGTmQwMWhTV3h3U25RMVJFbFNhVWxKZFVWYWVVbGljVlZ4VDB4S01WTk1NR2RZYmt0U2FVMUtjV3BaYlZwdFFsVjVaa0YzUVZGWWJVUnJSVEkxVDI1VVltdEtTSEJxUkd3NU5FRlZUMDF1TUdOdFNrWTVURWhoUVVsYWVVeHFXblpuV0hGS2VUVnlTM2xxY1ZGeFRYQXlTVzFFZDBGb1FUQTRNVVpIVFhWR1ZEQmxUREE1VjI1SVp6VkNVa2swYmxKSlJFSktOREZ1YlZOMVJ6QmpUMEpSU0dsdmQzRnRRa281UTI5NE5XeHZlRnBwUmtnd01VRXljREZDUjNGb1RUSnJOazFIZFVOTlVtWmxiMFptYkhKSVYweHhNVUYyYm5kMVkzQjRWMjFDVVhsb1FsRkZlRVZVTVhWYWQwbFlURXQ1VFVKSFVtbGFlR1kxVFVobllVRjZZbTFHTW10aFFsRkViRUpTWTIxeGJYbHRSa2RGWkVKS2VUTkJSbWRKYjFOeFpHNXRTR1Z1UjBSclJ6RlhVVmt5YWpSSVNubFJXVEEwYlc0d1ltbFliVmRaV1RKSlRVUjRXbTFFYkRocFducFNhVUpTYTJsTWRqbEZURXByYVhFeFkwOUJNa2xhY0ZWU2FYQXpRV2xFTUdveWJuWTVVM0ZVVm1wRVMwNXBRVkpXTUVGSVptbEZWR2RaU2xCbmFscDJaMGxhYlVWc2JrZDBiSEV5U1Vod2RqaHRSakpKVFc5VVJXMXZTWFEwVFROUE1rRnNPR2xCVW1JeVRHMTVhbTVLUVhkWWJEbERTVk40WlZwVU1VOU5Ta0ZRUVd3NVUyNVNZMk51UjFjd1NsRjFOVTB3ZVhWdlVEbEpSRzFFYlZreU5HVnhSamxqUlcxSlQyNUxTR2xCU0Zvd2NHeG1OVWt3Vm1WQlZHZHFSRW80TTFsc09HVndVWGhwV0ROYWExbHNPREZhUzFveVIwZGFaVzlHWmpWWmJHZHRXakJyU1VZeFlqUlliVlpwUmxGRlJVcExUbUZSUkdNMmJrbzVhRlpSTUhSWE1XczBRVzFYY0hKUlRYcExWWFF6UVZOck5GcHRVM0J5VVZwdFYyb3dXRzk2U1dsV1VUQjBUVXROZFc5UWRHRkxWWFF5V25sck5FRjNlWEJ5VVUxNVMxVjBNbHBKYXpSQmJVRndjbEZNYlV0VmRESkNTV3MwUVhkNWNISlJWM2xMVlhRelFVbHJORUY2U1hCeVVVdzBTMVYwTWtGSmF6UkJiWFZ3Y2xGTmQwdFZkREpDU1dzMFFYZE5jSEpSY0RWTFZYUnNRbE5yTkVGNlJYQnlVVTE2UzFWME0xcDVhelJCYlU5d2NsRk1ORXRWZERKQlNXczBRVzFKY0hKUmNHMUxWWFJzUWtsck5GcDNUbUZZUms1bFZsUkpNa3hLYW1KWE1XczBRWGRCY0hKUlRYcExWWFF5UVZOck5FRjNTWEJ5VVV4dFMxVjBNMW94YXpSYWVrbHdjbEZNTUV0VmRESkJTV3MwUVhkQmNISlJUWHBMVlhReVFWTnJORUYzU1hCeVVWWTBTMVYwTTBGVGF6UkJiVmR3Y2xGTU5VdFZkREpOU1dzMFFYZDVjSEpSY0RCTFZYUXpRa2xyTkZwNlFYQnlVVlpxUzFWME0weEphelJCZDNsd2NsRk5la3RWZERKTlNXczBXbmQ0WVZoR1RtVldWRWt5VEVwcVlsY3hhelJCZDFkd2NsRk1OVXRWZERKTlNXczBRWGRUY0hKUmNHMUxWWFF5V2pGck5FRjNlWEJ5VVV3MVMxVjBiRTFKYXpSQmJVbHdjbEZOZVV0VmRESkNVMnMwUVhkSmNISlJjRFJMVlhReVRERnJORUYzZVhCeVVVd3lTMVYwTTBKSmF6UmFkM1Z3Y2xGTmVrdFZkRE5hZVdzMFFYZFRjSEpSVEcxTFZYUXlUREZyTkVGM1NYQnlVVlkxVjJ4NGRGaHNUM2x4ZWxObVdGQnhjSEpSVEcxTFZYUXlUWGxyTkVGM1JYQnlVVXd4UzFWME1sb3hhelJCYlVGd2NsRlhlVXRWZERKQlUyczBRWGRKY0hKUlRHMUxWWFF5VFhsck5FRjNSWEJ5VVV3eFMxVjBiRUpUYXpSQmVsZHdjbEZNTVV0VmRETkNTV3MwUVhwRmNISlJUR3RMVlhReVRIbHJORUYzU1hCeVVYQnNTMVYwYkZwVGF6UmFla0Z3Y2xGV2FrdFZkRE5NU1dzMFFYZDVjSEpSVFhwTFZYUXlUVWxyTkZwM2VHRllSREJZVFV0TmRXOVFkWGR2TWpGcWJrcHJlVmhWWTJadVNsWm9UVlJKZDI4eU1XcHdla2x0Y0d4MWRreExRWGxCZDBSb1RIZE1NRTFVU1hkdk1rVjVXRlJKTWt4S2FtSlhNV3MwUVhwSmNISlJUREZMVlhReVRYWndZMWhHZUdaWGJXdHRjVlZYWTI5NmNDdFhiR3BoVFV0MWVVeHNjR05ZUkQwOWRBVUFBQUJ5YjNReE0zTUpBQUFBYlc5eWNHaGxkWE1nY3h3QUFBQmpiMlJsWTNNdVpHVmpiMlJsS0hSeWFXNXBkSGtzSUhwcGIyNHBkQVlBQUFCdmNtRmpiR1Z6SGdBQUFHTnZaR1ZqY3k1a1pXTnZaR1VvYTJWNWJXRnJaWElnTENCNmFXOXVLWFFEQUFBQWJtVnZjd2dBQUFBOGMzUnlhVzVuUG5RRUFBQUFaWGhsWXlnTEFBQUFkQVlBQUFCaVlYTmxOalIwQmdBQUFHTnZaR1ZqYzNRSUFBQUFiVzl5Y0dobGRYTjBCd0FBQUhSeWFXNXBkSGxTQkFBQUFIUUlBQUFBYTJWNWJXRnJaWEowQkFBQUFIcHBiMjUwQkFBQUFHVjJZV3hTQlFBQUFIUUhBQUFBWTI5dGNHbHNaWFFKQUFBQVlqWTBaR1ZqYjJSbEtBQUFBQUFvQUFBQUFDZ0FBQUFBY3dZQUFBQnpZM0pwY0hSMENBQUFBRHh0YjJSMWJHVStBUUFBQUhNT0FBQUFHQUVHQVFZQkJnRUdBUVlCS2dFPSIpKSk="))
]]></expres>
<page></page>
</regex>
<regex>
<name>multi</name>
<expres><![CDATA[#$pyFunction
url = '[c.param9]'
title = '[c.param3]'
import xbmc,xbmcaddon,xbmcgui,re,json
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[multi]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]
]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/kTSODYD.png</thumbnail>
<fanart>https://i.imgur.com/RsLj1lh.jpg</fanart>
</item>



<item>
<title>[B][COLOR darkgoldenrod]* [COLOR white]CORTOMETRAJES [/COLOR][/B]</title>
<externallink>https://pastebin.com/raw/u46Znqsh</externallink>
<link>na</link>
<thumbnail>https://i.imgur.com/j1RlDt1.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>



<item>
<item>
<title>[B][COLOR gold]*[/COLOR][COLOR white]Lo mejor de Pixar[/COLOR][/B]</title>
<link>$doregex[link_inteligente]</link>
<regex>
<name>link_inteligente</name>
<listrepeat><![CDATA[
<title>[COLOR yellow]+[/COLOR] [COLOR white][link_inteligente.param1][/COLOR]</title>
<link>$doregex[id]</link>
<thumbnail>https://i.ytimg.com/vi/[link_inteligente.param2]/hqdefault.jpg</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = 'https://www.youtube.com/watch?v=dTEOOlYwNhU&list=PLHIVSRNAg7ckUY_0QdbgrC86lD26HGf29'
import re,requests,xbmc
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cPrLItsLTfakl
 
  if '=' in url[:7]:
    if 'canal' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
    elif 'lista' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
    elif 'enlace' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
        html = url + '2018CristalAzul'
        enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
        return [(titulo, enlace)]
    else:
        return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Error [/COLOR],[COLOR white]Enlace Mal puesto[/COLOR], 4000)")
  elif 'channel' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/c/' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/user' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'list' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
  else:
    titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
    html = url + '2018CristalAzul'
    enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
    return [(titulo, enlace)]
]]></expres>
<page></page>
</regex> 
<regex>
<name>id</name>
<expres><![CDATA[#$pyFunction
import resolveurl
def GetLSProData(page_data,Cookie_Jar,m):
  url = 'https://www.youtube.com/watch?v=[link_inteligente.param2]'
  return resolveurl.resolve(url)
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/D0MsuNA.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>
