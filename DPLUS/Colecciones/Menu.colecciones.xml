<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<items>


<item>
<title>[B][COLOR darkgoldenrod]* [COLOR gold]COLLECCION [COLOR white]101 Dalmatas[/COLOR][/B]</title>
<link>ignoreme</link>
<thumbnail>https://i.imgur.com/Yy1DFjf.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
<externallink>https://pastebin.com/raw/CY9HWmMC$$LSProEncKey= $$</externallink>  
</item>

<item>
<title>[COLOR white]Disney Amaneceres y ambientes [COLOR chartreuse][/COLOR]</title>
<link>$doregex[lou]</link>
<externallink>https://raw.githubusercontent.com/FESTAKIDS/festakids/main/DPLUS/Colecciones/Menu.amaneceresyambientes.xml</externallink>
<thumbnail>https://i.imgur.com/HBaGPps.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>




<item>
<title>[B][COLOR darkgoldenrod]* [COLOR gold]COLLECCION [COLOR white]Cars[/COLOR][/B]</title>  
<link>$doregex[c]</link>
<regex>
<name>c</name>
<listrepeat><![CDATA[
<title>[c.param1]</title>
<genre>[c.param2]</genre>
<year>[c.param3]</year>
<info>[c.param6]</info>
<link>$doregex[id3]</link>
<thumbnail>[c.param4]</thumbnail>
<fanart>[c.param5]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>id3</name>
<expres><![CDATA[#$pyFunction
url = '[c.param7]'
import resolveurl,xbmc,xbmcaddon
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import re,requests,os,xbmc
    return requests.get('https://pastebin.com/raw/6jhtguGd', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0', 'Referer': 'https://pastebin.com'}, verify=False).text
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/z1zJ1E3.png</thumbnail>
<fanart>https://i.imgur.com/RsLj1lh.jpg</fanart>
</item>
------------------------------------------------------------------------------------------------------------------------------------------------
<item>
<title>[B][COLOR darkgoldenrod]* [COLOR gold]COLLECCION [COLOR white]Disney Channel[/COLOR][/B]</title>
<link>ignoreme</link>
<thumbnail>https://i.imgur.com/C8r2fj4.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
<externallink>https://raw.githubusercontent.com/FESTAKIDS/festakids/main/DPLUS/Colecciones/coleccion.disney.channel.txt</externallink>  
</item>



------------------------------------------------------------------------------------------------------------------




<item>
<title>[B][COLOR darkgoldenrod]* [COLOR gold]COLLECCION [COLOR white]High School Musical[/COLOR][/B]</title>
<link>ignoreme</link>
<thumbnail>https://i.imgur.com/bG9OrNh.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
<externallink>https://pastebin.com/raw/mcAVtPAf</externallink>  
</item>


<item>
<title>[B][COLOR darkgoldenrod]* [COLOR gold]COLLECCION [COLOR white]Ice Age[/COLOR][/B]</title>  
<link>$doregex[c]</link>
<regex>
<name>c</name>
<listrepeat><![CDATA[
<title>[c.param1]</title>
<genre>[c.param2]</genre>
<year>[c.param3]</year>
<info>[c.param6]</info>
<link>$doregex[id3]</link>
<thumbnail>[c.param4]</thumbnail>
<fanart>[c.param5]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>id3</name>
<expres><![CDATA[#$pyFunction
url = '[c.param7]'
import resolveurl,xbmc,xbmcaddon
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import re,requests,os,xbmc
    return requests.get('https://pastebin.com/raw/6jhtguGd', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0', 'Referer': 'https://pastebin.com'}, verify=False).text
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/mDAp2Uw.png</thumbnail>
<fanart>https://i.imgur.com/RsLj1lh.jpg</fanart>
</item>




<item>
<title>[B][COLOR darkgoldenrod]* [COLOR gold]COLLECCION [COLOR white]La sirenita[/COLOR][/B]</title>  
<link>$doregex[c]</link>
<regex>
<name>c</name>
<listrepeat><![CDATA[
<title>[c.param1]</title>
<genre>[c.param2]</genre>
<year>[c.param3]</year>
<info>[c.param6]</info>
<link>$doregex[id3]</link>
<thumbnail>[c.param4]</thumbnail>
<fanart>[c.param5]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>id3</name>
<expres><![CDATA[#$pyFunction
url = '[c.param7]'
import resolveurl,xbmc,xbmcaddon
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import re,requests,os,xbmc
    return requests.get('https://pastebin.com/raw/6jhtguGd', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0', 'Referer': 'https://pastebin.com'}, verify=False).text
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/9AygnPL.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>





<item>
<title>[B][COLOR darkgoldenrod]* [COLOR gold]COLLECCION [COLOR white]Las crónicas de Narnia[/COLOR][/B]</title>  
<link>$doregex[c]</link>
<regex>
<name>c</name>
<listrepeat><![CDATA[
<title>[c.param1]</title>
<genre>[c.param2]</genre>
<year>[c.param3]</year>
<info>[c.param6]</info>
<link>$doregex[id3]</link>
<thumbnail>[c.param4]</thumbnail>
<fanart>[c.param5]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>id3</name>
<expres><![CDATA[#$pyFunction
url = '[c.param7]'
import resolveurl,xbmc,xbmcaddon
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import re,requests,os,xbmc
    return requests.get('https://pastebin.com/raw/6jhtguGd', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0', 'Referer': 'https://pastebin.com'}, verify=False).text
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/UdFIZtI.png</thumbnail>
<fanart>https://i.imgur.com/RsLj1lh.jpg</fanart>
</item>

<item>
<title>[B][COLOR darkgoldenrod]* [COLOR gold]COLLECCION [COLOR white]Los Simpson[/COLOR][/B]</title>  
<link>ignorme</link>
<thumbnail>https://i.imgur.com/WyKuZHg.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
<externallink>https://pastebin.com/raw/j8x2kjXX</externallink>
<info>Grupo telegram: @addonfestaycristal</info>
</item>


<item>
<title>[B][COLOR darkgoldenrod]* [COLOR gold]COLLECCION [COLOR white]Piratas del Caribe[/COLOR][/B]</title>  
<link>$doregex[c]</link>
<regex>
<name>c</name>
<listrepeat><![CDATA[
<title>[c.param1]</title>
<genre>[c.param2]</genre>
<year>[c.param3]</year>
<info>[c.param6]</info>
<link>$doregex[id3]</link>
<thumbnail>[c.param4]</thumbnail>
<fanart>[c.param5]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>id3</name>
<expres><![CDATA[#$pyFunction
url = '[c.param7]'
import resolveurl,xbmc,xbmcaddon
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import re,requests,os,xbmc
    return requests.get('https://pastebin.com/raw/6jhtguGd', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0', 'Referer': 'https://pastebin.com'}, verify=False).text
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/fyrziiq.png</thumbnail>
<fanart>https://i.imgur.com/RsLj1lh.jpg</fanart>
</item>


<item>
<title>[B][COLOR darkgoldenrod]* [COLOR gold]COLLECCION [COLOR white]Princesas[/COLOR][/B]</title>
<link>$doregex[c]</link>
<regex>
<name>c</name>
<listrepeat><![CDATA[
<title>[c.param1]</title>
<genre>[c.param2]</genre>
<year>[c.param3]</year>
<info>[c.param6]</info>
<link>$doregex[id3]</link>
<thumbnail>[c.param4]</thumbnail>
<fanart>[c.param5]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>id3</name>
<expres><![CDATA[#$pyFunction
url = '[c.param7]'
import resolveurl,xbmc,xbmcaddon
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import re,requests,os,xbmc
    return requests.get('https://pastebin.com/raw/6jhtguGd', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0', 'Referer': 'https://pastebin.com'}, verify=False).text
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/liZz9tT.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>



<item>
<title>[B][COLOR darkgoldenrod]* [COLOR gold]COLLECCION [COLOR white]Spider-Man[/COLOR][/B]</title>  
<link>$doregex[c]</link>
<regex>
<name>c</name>
<listrepeat><![CDATA[
<title>[c.param1]</title>
<genre>[c.param2]</genre>
<year>[c.param3]</year>
<info>[c.param6]</info>
<link>$doregex[id3]</link>
<thumbnail>[c.param4]</thumbnail>
<fanart>[c.param5]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>id3</name>
<expres><![CDATA[#$pyFunction
url = '[c.param7]'
import resolveurl,xbmc,xbmcaddon
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import re,requests,os,xbmc
    return requests.get('https://pastebin.com/raw/6jhtguGd', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0', 'Referer': 'https://pastebin.com'}, verify=False).text
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/3Jkp1P5.png</thumbnail>
<fanart>https://i.imgur.com/RsLj1lh.jpg</fanart>
</item>


<item>
<title>[B][COLOR darkgoldenrod]* [COLOR gold]COLLECCION [COLOR white]Star Wars[/COLOR][/B]</title>  
<link>$doregex[c]</link>
<regex>
<name>c</name>
<listrepeat><![CDATA[
<title>[c.param1]</title>
<genre>[c.param2]</genre>
<year>[c.param3]</year>
<info>[c.param6]</info>
<link>$doregex[id3]</link>
<thumbnail>[c.param4]</thumbnail>
<fanart>[c.param5]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>id3</name>
<expres><![CDATA[#$pyFunction
url = '[c.param7]'
import resolveurl,xbmc,xbmcaddon
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import re,requests,os,xbmc
    return requests.get('https://pastebin.com/raw/6jhtguGd', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0', 'Referer': 'https://pastebin.com'}, verify=False).text
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/FWi9mE1.png</thumbnail>
<fanart>https://i.imgur.com/RsLj1lh.jpg</fanart>
</item>




<item>
<title>[B][COLOR darkgoldenrod]* [COLOR gold]COLLECCION [COLOR white]Toy Story[/COLOR][/B]</title>
<link>$doregex[c]</link>
<regex>
<name>c</name>
<listrepeat><![CDATA[
<title>[c.param1]</title>
<genre>[c.param2]</genre>
<year>[c.param3]</year>
<info>[c.param6]</info>
<link>$doregex[id3]</link>
<thumbnail>[c.param4]</thumbnail>
<fanart>[c.param5]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MFpSSUFBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFVlROT2VsRXlXa1JTYlUxNlVYcFBSRmsxVGxSWk1rNXFWVE5OYlVreVRucEtiVTE2V1RCT1ZGRjVUbFJCZWs1NlZYaE9SMVV3VG5wak0wNUhVVE5PVkZVeFRucEpNbHBxVVRGT2JVVXdUVlJaZWs1RWF6Qk9hbGw0VG0xTk1rNTZWVEZPUkVVelQxUmpkMDU2VlRCT1ZGa3pUbFJWTUUxVVNtMU5la2t5VDFSV2FFNUVUVE5OVkZVeVRrUnJNbGxxVlROT1Iwa3hUbXBTYVU1cVZURk5lbU0xVFhwck1rNXFWWGRPZWxVeVRYcFJNMDU2VFROTmVtTXdUWHBCTVU5VVVUQk9SMWt4V1ZSWk5FMTZRVEJPVkZrMVRtMVpNMDVVVVRGT1ZHY3lUWHBaTVUxdFNYcE9WRXBwVG0xWk0wNXFTbTFOZWtFelQxUk5NazV0VlRCYWFsbDVUbnByZVZscVdteE9iVTE2VFZSS2FVNXFWVEpQUkUweFRYcHJlVnBxU21sT2VsRXdXa1JqTWs1NlJYcE9SRlV3VFcxWmVWcHFVbXhPVkVFeFRVUlZkMDE2UlhwTmFtTjRUWHBWTWxwVVZtaE5iVmw1V21wS2FVNVVaM3BPVkVwcFRsUkJNMDVxWTNkT2FrVXlUbXBaZUUxNlRURlBSRXBwVG1wck1GcFVTbTFPVkVFeVRsUlpNazVxV1hwT2FtTjNUbnBWZWs5VVNtbE9ha2t6VGtSTk5VNVVRVEpaVkUwMVRtMU5lazE2U20xTmVtZDZUMFJqZUU1NlRURlBWRnBxVG5wUk1rNXFXbXhPYWtVelRtcFNiVTVxWjNsWmFsSnFUWHBSTVU1VVRYcE9SMFY2VDBSTk0wMTZVVEpOVkUxM1RsUkZNMDFxWXpCT2VrRXdUbXBhYkU1cVNUQk9hazE1VG5wak0wMVVWbWhOZWxVeFRVUlpOVTU2WTNsYWFrMDBUbTFGTWxwcVRUUk9WMFY2VDFSVk1rNTZSVEZPYWxFeFRtMU5NbHBFVVhsT1JGbDVXV3BWTkU1VVVYcFBSRXB0VFhwbk1rNVVZM3BPUkZrelRtcE5ORTVVWXpOUFJGRXlUWHBGZWs5RVl6Vk9WR016VG1wS2FVNUhXWHBPZWsweFRtcG5NbHBVVlhkT1IxRjVXV3BqTWs1cVJYcE9SRkpvVG5wWmVrMTZWbWhOZW1zelRtcGpNazV0UlRKYVZHTTBUbnBaZWs1VVdUTk9SMVV5VFdwWk5VNUhTWGxaYWsweFRucFJNVTVVV210T2Ftc3pUa1JOTkUxNlJURlBWRTE1VG1wbk0wNUVXbXhPYW1kNlRucEtiVTVIVVROUFZHTjZUbXBKTWsxNldtbE9iVkV3V2xSYWJVNVhSWHBOUkZwcFRYcEpNbGw2VFRKT1Ixa3pUbnBTYkU1cVl6Rk9ha3BwVGtkSmVWcHFZelZPUjFreVRtcGplVTVVWXpOTlJGazBUa2RKTUU1NldYcE9hazB3V1ZSUk1FNXRSVEpPVkZab1RsUkpNRmxVV1hoT1JHTXpUMVJTYVU1cVRUQmFWR016VGxSVk1VNVVXWGxPYlUwd1dWUlZORTVVVlRGTlJHTjRUWHByZWsxNldURk9iVVV3V1hwVmQwNUhSVE5PVkUwd1RYcGpNazlVVVROT1ZFMHlXbFJSZUUxdFdUQmFhbFV5VG5wTk1WbFVZekpPYWswd1dsUk5lazE2UlROT2FsVjZUbXBOTWxwRVZtaE9lbEV3VGxSYWEwNTZTVEZPUkdNeFRrZFZNbHBxV210T2VrVXhUa1JWTkU1RVZYcE5hbU13VFhwQmVrNUVTbWxOZWtsNlRWUlpNMDU2VlhwTlZHTjZUbnBCTUU5RVZYZE9SRkV3V2xSVk1VNVVSVEpPYWxKb1RrUnJNazVVVFRGT1IxbDZUMFJqTWs1RVkzcE5hbFY2VGtSVk0wNXFZekJPUkVVeFRXcFpOVTE2VlROT1JGVXpUbFJWTWs1NlZUQk5lbU42VFVSUk1rNUVZM3BOYWxVelRYcEpNVTE2V21oT1IwMTZUa1JaZVU1SFZUSmFhazB3VGxSck1GcFVZek5OZW1NeFRucFplazVxVFRKYWFsazBUa2RKTTA5VVZUQk5iVWw2VG5wVk1rNXRXVEpOYWxGNVRYcE5NRTlVVFRGT1IwVXhXVlJOTUU1NlNYcE5lbEY0VG0xTk0wOUVWWGROZWswelRXcFJNRTVxV1ROTlJGRjVUa1JuZWs1NlRYbE9lbEV3V1dwak5FMTZZM3BQVkZGNFRtcFpNbHBVVW10T01rVjZUbnBhYTA1cVJUSk5hbFY0VG0xSk1FMXFXVEpPUkVreFRrUmFhazE2U1RKT1ZGRjVUWHByZWs1NlVUSk9la2t4VGtSak1rNXFTVEpPZWxVMVRYcHJNRTFxV21wT1ZHTXdUbFJTYUU1SFJUSk5lbU13VGtSbk1VNUVXbXhPUjBrelRYcFZlVTU2YTNwTmVsazBUa1JWZWs5RVdUUk9SMDB4VG1wYWJFNTZUVEpOYWxKcFRYcEJNbHBVVFhoT2FtTXdUbFJOZVU1VVl6Qk5WRXBwVG5wck1VOVVXVEpOZWtFelRYcGpNMDVxU1RKT2FsVXlUa1JSTWxsVVdUUk9SR3N6VG5wWk0wNHlSVEpPYW1ONFRrUk5NMDVxVlROT2VtY3hUa1JaTVU1cVp6QlplbGw0VG5wTk1GcEVZekpOZWswelRtcGFiVTVIUlRKTmVsWm9UbnBSTWs1Nll6Rk5lbXN3VDFSak1rNXFZekZPUkZWM1RucG5NMDlFVW1wTmVtTXhXVlJTYkU1RVJUTk9hbU13VGtSak1FMVVTbTFOZWxrd1RXcE5OVTVxUlRKWmFsSnBUa2RSTUU5RVRYcE9la0V3V2tSS2FVNXRUVEpOVkZVd1RtMVZlazVFWXpOT2FrbDZUV3BqTTA1RVdUTk5WRlY0VGtSTk0wOUVXVE5OZWxVeVdXcGpNVTU2WnpCT1JHTXhUa1JWTUZwcVl6Sk9SR2N5VGxSUk0wNUVZM3BPYWswd1RucG5NMDU2VVRWT2VrRXpUMVJTYkU1cVNUQmFSR00wVFhwWmVrNUVVWGhPYWsweVRYcE5ORTU2U1RKWmVrcHBUa1JSTWxsNlRYZE5la2t4VDFSTmVVMTZVVEJPUkVwdFRYcHJNbHBFVVROTmVtc3hUVVJOTTA1RVZURk5WRTB5VFhwck1FNXFZekZPUkdNeVRucE5OVTVVVFROTlZHTTBUa1JuZVZscVVURk9SRTB4VG5wUk5VNXRXVEZOZW1Nd1RsUkZlVmxxVVhwT1ZGRXpXVlJOTUU1RVZUSlplbGw2VGtSck1FNTZZekZPVkd0NlRVUldhRTE2VVhwT1JGa3hUWHByTTAxNlVYaE9SRmt5VG1wYWJVNUVTVEZQUkUwMFRucEJlazVxVVRKTmVsRXdXbXBqTWs1RWF6Qk5lbFV3VG5wUk0wMXFZM3BPZWtVd1dsUmpORTVVWnpKUFJGSnFUWHBOTUU5RVl6Qk5lbEV5V1hwamVVNUhUVEJPUkZsNVRqSkZNMDU2V214T1JFVXpUbFJWZWs1NlozcE9WR041VG5wTk1sbHFVVEpPYlZFd1RsUk5NVTE2WnpGWlZFMHhUbXBqTVUxcVl6Tk9lbFY2VFZSYWJVNXFVVE5PVkUxNVRrUlZNRTVxV21oTmVtTjZUa1JWTUU1Nll6Qk9hazB6VFcxWk1VMTZTbWxPYW1jd1RrUlZNMDU2WXpCTlZFMTNUWHBaTUUxVVVYbE5lbXN3VFdwS2JVNXRSVEZQVkZFd1RtcEpNMDVxV1RWT1ZGa3dUbnBqTWsxNlp6QmFWR041VGxkRk0wNUVXbTFPUjFrelQwUmFhMDE2UVROTmFtTTBUakpGTUZsVVkzbE9lbGt3VFhwTk0wNUVhekpaVkZreFRrUkZNRTlFU21sTmVrMHlUbXBWZUUxNlFYcE9lbGt6VGxSTk1GcFVUVFZPUkZFelRXcE5lazVFVlhwTmVsSm9UakpGZVZwcVdUSk9iVWt5V2xSak5VNVVXVEpPZWxGNVRYcHJNazlVV214TmVsRXpUV3BqZWs1RVVYbGFha3B0VG1wbk1WbFVVWHBPYWxrelQxUlNhRTE2YXpCWmFsa3lUVzFaTUUxVVRUVk5lbGt3V1ZSamVVNXFhekphVkUxNFRYcFZNVTVxWkdoTmVra3dUVlJaTVUxNlVUTk9lbGt5VFhwck1FOUVWVFZPUjBVeFRWUlJlRTVxWnpOUFZGSnBUakpGTTA1RVl6Tk9iVlV5VGxSU2FrMTZUVEpOYWxGNFRrZE5lazU2WTNsT2JWa3lUVlJLYlU1SFJUQk9SRTB6VG0xSk1FOVVXVEZOYlVrd1dXcGFhazVFVVRKTmVscHJUa1JuZVZwcVVYbE9SRkV5VG5wYWFrNXFaekJOYWxKdFRrUlJNbHBVVFRST1JGRXlUbXBWTlU1RVVUTk5lbGt3VGtSWmVWbHFWWGhPVkVFd1RtcFJORTVxVlROT2VsSnNUVzFKTVUxVVVUSk9SMVV5VDFSTk0wNTZZekJOVkZGNFRYcFJNRmxVV1ROTmVtc3pUMFJWTlU1SFRUTlBWRnBxVG1wbk1FMTZUVFZPYW1NelRucFpNRTVxVFRKWmFsVjNUbXBqTUZsVVRUVk9la2t4VFhwamVrNUVhM3BPZW1NelRsUm5NazVFV21oT1Ixa3dUWHBaTVU1VVFUQlpWRkY1VFhwck1FNXFWWGRPUkZreVdYcFdhRTVxWXpOT2FsbDZUbXBSTTA5VVVURk9WRWw2VFdwUmVVNUhSWHBPVkZab1RtMVpNMDE2V1RWTmJWa3dUa1JaZWs1VVVURk5lbFY0VGtSbk1rMXFVWGxPUkdjeVRucFZkMDVxYXpCT1ZGSnRUbnBaTTA1VVZYcE9SRWt5VGxSamVrNXFZM3BOZWsxNFRYcFJNRTE2VW1oT2VtY3dUMVJTYUU1Nll6SlphazAxVGxSRk0wMTZXVFZPVjBVeVdrUk5NazVVUlRGTlJFMHpUa1JWTUZsNlRYcE5iVWt5V21wTmVFNHlSVEpQUkZrMFRYcHJNMDFFV214T1JHY3dUbnBqTUUxNlRUTk5lbGswVG1wWk1GcFVUWGxPVkVVd1QwUlZOVTVIUlhwTmFsSnNUbXByTUZwRVl6Rk9hbXN4VFdwU2JFMTZWVEZOVkZGNVRtcFpNMDlFVVRSTmVrbDZUa1JqTUUxNlp6RlBWRmt5VG5wQk1rNVVVWGhPYlVVeVRtcGpOVTVVUVRKT1JGazBUakpGTWxsVVVURk9hbU13V21wamVVNUVWWGxaYWtwcFRrUm5lazlVVW1sTmVrMHdUVlJLYVUxNlFUQlpla3B0VGtSTk0xbFVVWHBPVkdONVdtcGplazU2WTNsYWFsRjVUbnBKZWs1cVdtcE9la2t3VFZSWmVVMTZVVEpPZW1Nd1RYcEpNVTFxVVRST2VtY3lUbnBrYUU1NlozcE9WR00wVGxkRmVrMXFXbXhOZW1Nd1QxUmFhMDE2YXpKWmFsRXlUa2RKTWs1cVVUVk9SRkY2VGxSU2EwNVVRVE5QVkZwcFRYcHJlVnBxWXpWT1ZHY3dUWHBqTUUxNlJYcE5SRmw2VG1wTk1rOUVXbXhPZWtGNlQxUk5NVTVIUlRCYVJGRjZUVzFaTWxscVVYaE5lbFV6VFVSUk5VNUhXVEpPUkdONlRsUkZlazlVWXpOT1IwVXpUWHBqTkU1RWF6Rk5SR014VGtSRk1GbDZUWGxPVkZFeFRYcFNiVTVVWXpOT2Vsa3dUWHBKZWs1RVdUQk9la1V6VG1wU2FVNUhTWHBQUkZab1RrUmpNbGw2U21sT1Iwa3dXbFJaZWs1NlFUSlpWR042VGtSUmVWcHFUVEZPUkVsNlQwUmFhMDVIVlhsWmFsRjZUWHBCTWxwVVZYZE5lbEV3V1hwamVrNUVVVE5OZWxVeFRucFJNMDlVVm1oT2JVa3lUMFJTYWsxNlNUTk5ha3B0VG0xVk0wMXFUVEJPYWxreVRrUk5NMDVxUlRCYWFsVXdUbXBaTWs1NlVtbE5lbEV6VFZSVmVrNXRSVEpPYWxGNFRsUm5lazlVVW1sT1ZGVjZUMVJSZVU1SFRUSmFWR04zVGtSak1scEVVWHBPVkVFelRsUlNiVTVVUVRKWmFtUm9UbFJyTWxsVVVURk9la0V6VGtSV2FFMTZUVEpQUkUxNFRYcGpNRTFVWXpKTmVsRXhUWHBWTkU1RWEzcE9lazB6VGxSWk1rNXFWWGhPUjBsNlRucGpORTVxWnpOWlZFMDFUa1JGZVZwcVRUQk9lbWN6VG5wWk0wNTZVWHBQVkZwdFRtcFplazFFVlRST1IxRXhUbFJTYkU1Nll6Qk5WRkUwVFcxSk0wNTZXVEpPUkdNeVdWUmFiVTVxV1RKWmFrMTZUVzFaTTA5VVdtbE9SMDE2VG1wak5FNTZRWHBOZW1NMFRrUkpNRnBFVlhwT1JHY3dUMVJaZVUxNlRUTk5WRkpwVGtSRmVWbHFWWGxPZWxrelRucGpNRTVIVVRKWmFtTXhUWHBKTTA1RVRURk9lbEV4VFVSTk5FNUhTWHBQUkZwcFRYcEZNazU2VFRGTmVtc3dUMVJOTWs1RVdUQk5WRmt4VGtSamVrMVVXVE5OYlVrelQwUlJlazU2V1ROT1ZGWm9Ua1JaTUZscVZYZE9WRkV5VG1wYWJFNTZRWGxhYWtwcFRrUlZNRTVxVVROTmJVa3dUbXBqZVU1cVJUSk5hbHByVGtkVk1VNVVWWGhPUkdONlRucGFhVTVxVFRKTmVsVjRUbFJKZWs5VVVURk9SRlV5VGxSYWJVNUVVVEpPZWxrMFRrUm5NVTlVVVRST1JGRXlXa1JaTVU1SFJYcE9lbFY1VG5wWk1FOVVXbWhPUkdjelQwUlpNVTVFVlRGTlJFcHRUbFJSTUUxVVkzcE5lbXN6V1ZSVmVFMTZhM3BOZWxVMFRtcFZNbHBxVlRST2JWa3dUV3BWZDA1SFJYcE5lbGw2VG1wbk1GbDZZek5OZWxreVdWUmpNVTVFUlRCT1JGa3hUa1JyZWs5VVl6Tk9hbU15VDBSTmVVNVVTVEJaYWtwcFRrUlJlVnBxV21wT1JHY3pUa1JhYTAxNlNUSlBWRXBwVFhwQk1scFVVVE5PVkVrelRXcE5ORTU2UVRGT1ZHUm9UbXBOTUZwRVVteE9ha1V4VG1wUmVrNXFUVEpOZWswd1RrZFpNbHBFVVRGT1YwVXdUV3BaZWs1RVVYcFBWRnB0VGxSUmVrOVVXVEJPUkZGNlRtcE5lVTVVVlRCWlZGa3lUa1JyTWsxcVRUSk9hbEY2VGtSamQwMTZUWHBOVkZWNVRrZFZNMDlVV1hsTmVtTjZUVVJqTWs1NlJUQk5la3B0VGtkVk0wOVVXVE5PYlZFd1drUmFhazE2UVRKT2FsRjVUa1JqTTA1VVdtbE9SRlY1V21wVk5FNUVUVEpPUkZrMVRrZFZlazFVV21sT2Vsa3pUbnBSTUU1VVZUSk9SRXBwVGtkSk0wMVVWVEJPUjFrd1dWUk5NRTU2U1ROUFZHTXhUbFJWTVUxRVRURk9iVTB6VG1wU2FFNUVTVEZOZWxFd1RtMUZNVTFVU20xT2JWRXhUV3BLYlU1Nll6Tk9SRkpyVG0xSk1scEVUWGxOZWtrelRWUlplazVIVlRGT1JHTjVUa1JyTUU1VVNtMU9SRkV5V1ZSTk0wNUVSVEJhYWswd1RtcHJNRTVxVVhsTmJWa3lUVlJTYTA1cVRURk9hbEY2VGtSUmVWbHFVbTFPVkVFeVdrUlpNazU2V1RKWmFsbDRUbXBOTVZsVVVUVk9SMWt6VGxSWk1VMTZVWHBPUkUxM1RtcFJNazVxVFhsT2Ftc3hUVVJSZUU1VWF6Sk5lbFUxVGtSRk1rNVVZM2hPVkdONlRucFplVTE2U1RGT2VrMTRUbnBGTTFsVVVYcE9SR3N3VG5wak1rNXRWVEZOUkZKcFRtcEpNazU2VFROT2Ftc3lUbXBOTkU1cVl6Tk5hbU4zVGxSQk1rNVVZM2hOZW1jeFRWUlZkMDVVVlRCT1JFMDBUbXBGZWsxNlRUVk9la1V5VGtSamQwMTZhek5QZEdVU0FBQlJUWFpCVkZJd1FrZHdNVUZLVWpOQlIwd3hRVkZTYkUxM1YzWkJWRVJ0V20xd2FscHRVak5DUjBWNFducFdNazFSY0RKQmQxb3lXbTFJTVZwdGNEQmFkMHd3UVhwRWJWcHRURFJCVVVodFFsRk1NMEYzVm0xQlVWcHFRVlJFYlVKSFdqSkJlbFpzVEhkRWJWcDZWakZhZDAxNVFXMTBNRUZSY0RGQmJYQnRXbTFGZWtGdFZtMUNVVWh0UVcxV2JVSlJUWFpCZDFvelFXMU5lVUYzV2pCYWJVUnJXbnBXTVVKUldqQkJiVXd6UVcxRmVVRjNTREJCYlV3elducE1Na0Z0V2pGYWJYUXdXa2RhYTBGdGREQkJVVmQyUVhwYU1WcDNTR3BCVVhBd1FsRk1Na0Y2VmpKQ1VWcHRRVzFPYlVKSFJEQkJkMHh0UWxGTU5VRkhUakpCUjNCcVFWRjBNMXB0Y0dwQmJWWnRXbEZGZDBGdGVESkNSMHd5UVZGNE1rMVJjRFJCUjNReVRHMUliRnB0VERKTmQwZzBXbTFJTUUxSFREQkJSM2d3UWxGYU0wRkhTREJOZDB3d1FYZDBNMEYzY0dwQmQwaHRXa2RJTTBGNlRETmFSMW95V20xd01FRlJTREJCZWxJeFRFZElhMEZ0VEROYVIwUXlXbTEwTTFwM1JEUkJVVWd5V2tkd2EwRkhjRzFCUjNCcVducE1NVUZSY0d4QlZGWXhRVzFhTlVGdFZqRmFVVVJ0UVhkMGJWcHRTR3BCZDNReVFWRkpkVnB0Y0ROQ1VVUTBXbTFhTWt4M1JEUmFiVkl4UVVkRWEwRlJWbXhNZDB3MVdtMWFiVnBSVERKQlIzQXdXbTFNYTBGdFZtMUJiWEF4UVZGd00wSkhjWFZCYlVSdFdrZGFNRUZIVWpGQ1VWb3hRVWQwTWtGM2NEQkJVVXh0UWtkRWJVRkhSREpNZDFwdFdtMVdNVnBIVERSQmJYZ3lRa2R3TWxwdFRESkJkM0EwUVZGRU1rRlJUWGxCYlhneVFsRndNa0ZSU0RKYWQzQTBRVWRPYkV4M1RETmFiVXd5VEcxd00wRlJWbTFhYlhBMVFWUldNbHAzY1hWQlVVd3lRVWRJTVVGM2RERmFkMWQ2UVhkYU1GcDNXbXRCVkVneVdtMUZlRUZ0V2pCQlVVaHFRWGRJTUZwSFdqTmFiVXd5VEhkTmQxcHRUakZhVVZkMlFYcFdNVXhIVFhkQlIwUXlRWGRFYlVGUmNESkJSM0JyUVhkU2JVRlJSRzFCZDBSdFdsRk5lVUZ0ZURKYWJVUXlXbTFPTUVKUlJYZEJNbEl5VFhkSWFrRkhTRE5hZDFvelFVZDBNa0ZIU0d4QlVVeHRRVWR3YTBGM2VEQk1iVmQ2UVVkSWJVRnRjR3RCYlV3eVRIZE1NVUZIVG14TWQwMTFRVWQwTTBGdFdqVkJla3h0V2tkd05FRlJUREJOZDBsMVFWRkViVUpSUkd0QmQwd3lURzFOZVVGSFdtMWFiVTEyUVZGTU1FMVJTWFZCVkVneFduZGFiVUY2VERGTVIzQXlRVXBTTUUxUlRYZEJla2h0V20xSU1VRjZTRE5DUjBnMFFXMUlNRTFIUkd4YWVrd3hXbmRKZFVGdFdqSk1SMHhzUVcxV01VRkhTRzFCU2xKdFdtMU5lVnB0ZERGYWJYQXpRWHBhTTBGM1dqSkJVVkp0UWxGSWJGcHRXakJCYlVReldtMTRNVXhIU0dwQlIwNXNUSGR3TVZwdFRqSkJiVVYzUVhwSWJFMTNXalZhZWxZeVdrZE1NbHB0V214TWQxb3lRVWR3YkV4M2NESkJVVkpzVFhkSU1VRkhXakpOUjB4c1FXMUlNRnAzV2pKQmJWb3lXa2RJYTFwdFdqRkJiWEJyUVVkNE0wRkhSRE5hYlhBd1FVZElNa0ZIV2pCTmQzRjFRWGRNTWt4SFJETkJSMGd3UVhkd00xcDZWakZCYlVWM1FYZDRiVnB0VFhkQk1sSXpRa2R3TTBGSFREQk5kMGd5UVVwU00xcDNSREpCVVhneVRHMVhka0Z0VWpCQmQwVjJRWGRhTVVGdFNETkJiWGd4UVVkRU1rRjZWak5DUjB3d1FWRklNa0ZIU0ROQlVWWXhXbEZNTTBGUmNETkJVVWcxUVhkU2JFMTNTREphYlhRelFWRklhMEZSUkROYVIzQTBXbTFNTUUxSFdqRkJTbEl5UWxGSU5VRlVXakJhYlhBeFFXMVNNVUYzU0RCQlIzZ3pURWRFYkVGNldtMWFiVm8wUVZSSU0xcHRWM1phYlZZd1RHMU1NMXB0V2pCYVIzQXhXbTFFTVVGM2NEQkJVWGh0UWxGRmVFRnRUREZCUjBWMVYyb3dXSEZWVjJOdmVua3dja1pPT1ZaUWNWZEZNazFZUVZJd00wa3lkVmxhZVVGcmNWUnJXRVZLUlZaSk1WbzFRVEZCV1hGUU9WbGFNR05NY0hwbldFUkxVMFZJTWtWa2NETlhlVzk2UlhwSU0wRjFSakZOVVVSM2NWZHhVbmxJU2tseFowVkhVM1pKUm1kbGNVcEViVWd5ZFdad1VWZG9UV0ZFYVc1aFQycE1TR05RVFRJMVZFSktaak5hZW5CcmJqSk5NVVpSZVRGd1ZFMW9RVEZCYkVsU1YyZEZNblZpU0hablpVbExkVVJKU1ZJMWJ6TmpURmt4UlcxRmVEbHRTRE5OU1VSNmEyaHhNVk13Ymt0QlEzQklPVzFCZDNWWWJqQndNa1o2VFVKSVNYVjJTRlJUUzBaSlNYbEJZWEZoYjNnNWRVaGhTVFpOWVU4MFRIZFhVa3d6VDNoeFUxb3lSRWhUYUZwNVVqVkJNbE42Um5ock1GcEpUVU5FYlZkRFdsRkZUMW95VjI1d1ZGTnRiak5GV2taU2NESkhlVVZyUVhkSk5VWklhbTFhU2pWcmNERlhRMjVWZEcxSE1HTkhSakZUZDBaVWRURkpiVkkwU0ZGUGJFMUxUbXBJU2xJd1NIaFdiWEY2WTFOYWVXTkZXa3BuZFhGSmRXZE1SMVl4UlVsSk5FZ3dSR2xKWVhCcFJqRnhWVzVLZFhsTU1VaHJTVXBqZDAxS1lqVkJVamxWUjNoQmRYQXlOVUZDU0ZkYVFsQm5SVXBRWnpaQ1NFbEVSVEExU1UxU1RYVk5NbE50UjNwclVrRXllVmh4ZDBsWVFrdFRNM0F4WTFSdk1qazBTRzFFTlVkU2NVWklSamwxY1dGYU1VbGhTVzV1U0RSbFNucE5VMEZLVFdWRlNYbEVSVzFKVmsxNWNWRnVVa2xaUlROVFdrcDNSVmR3UzFkNmNWTnhkVXBVVFU5d1NYVlJXVEJCVUVoVlUyMU5VazFIY0ZKak1Wb3lOVmxCVkRsRFdEQldaVnBoVFdkYWQxbzFUVWg1YW5GaFQwWnhkMWRhUmpCYWEwVlVNVzFDUzFOdFIzWm5ZM0ZJVFdOeFNFVkJjbEpqUjBKVVUySkJNR05aVFcxWFZraEhWMUJCTW5sRFFsRkpWbTh4ZFdoWU1GbzBXbEl4ZUc0eWRXdE5VVk15VFRKMVpYQjZNVVZGTWtrMVdqSlRWVWxLUlVSS2VtdDZXa281Wmtsc1ozbEtTa2d3UlRCblVrMTZlVkphTUVFMVdrcDVkVVl5VFZWRlZERXhiMVZ4YlVReGRHVktTR2Q0V0ROV2FVVmhWelp3VkRsaVJIbEJhMjVVZFU5YWVtb3lXbmw1TlhCNVRXTk1TRk0yU0hnNVRVUkxjVzFGU2psNVRFaElNVWRSVFhaWU1uQXhURXBOTUVoS01XZHZVVTlsV1ROTlYwWklZakZaTUdZemNIcDFlazE0VEcxeFZHdFpjRXBYU2xneWVXMXVVWGxvYnpGSlJFRnRVMkZ1ZG1kWGNWUTFlWEZRT0RGeFNrMWpjVEpuYTBwSlQyMUJSamd3YmpGSmEzRlVaMjF1U0ZKc1IxUndhVnBSZEROTlUzQnFRbFJYYVVaNVkyVklSM0ZtU1hoTmFrWjVVM2xhTVVsSVJIZDFNa1pTUld4RmQwbGhTVEpCWlZwS2VXTkViWFZOV2t0Qk1VRklkR1Z2VkZObFdESTRiVVo0YTFoR2VVbEtURE5UTlVsS1FXcEtlSEY0UkdGSU1VWnRlV0pFTUZNelFrbDVWRVJ0Y1dsR1NrbFRSSHBFTTBWU1FWVkpSMFZJVFcxWFFVRkhSVEZIZDNGdFIxRjRaVVpTVWpKdU1raHRUVWRGUzAxUlQyWkdTVWhxYmxCblNHNHhlVUZ5ZDA5dFdqTmpSMDFMVDJwSFlWZFlUWGx4V1VwSlNHMUJNM0ZSV2xRNVJrRXhlVVpIU0d0SlJFZHdiRXBVUkdWS1VuaHJSMVJ4YkZwSmVXTnlTa2wxUm5kQk1tOVRWMDF1UjA1cVJVZEpRVWt5ZVdaR1ZHdHJTSGxqTlVRd2REQkhNR05RYjNnNFpVbDRTVkJNYlU5NGNrcFhORzlRT1V4SlVsTnBRVEoxVDBGU2RWbE5lVTlUUVhoMVlVRktPVTF2TW1ZemIyMUJhMGRIY1RaQlVWb3hjVWQ1ZUVKS1ZqQkNSamxqVFZWeGJFMHhlVEJHYlZkcVRHRlBaVWxIVjFsRWQzVmxibE5KVlVaNmExcHZVMU5xU0cxVE5uSklSR3hIZDA5WFdEQnhRMjVTY1V4eVVrVjJRVWd3YlVWdFJWaEtlbmxGY0VsMGFVZFVkVzFFU1VWcFdsTjFhMjVVU1ZwR2VuRXpTV0ZUWkc4d1UwWkJNR3BsY25wblNFaEhjWFp4ZWpWVFIwaGFNVUpJWTFkR1NqRlhSbEp4ZUc1U09URkhSMFZ0UjFORmRtOUxkR2xLVWxkNFdEQm5kVXhoVFdoSFNVUTBRVko1YTAxUlFXMUlTM0ZxUlRCQldrMTJaM1p3U2sxU1RFbzFWRVY0TVhoQllVRmhia2x4UVVoSFNXWndVVTFpUmxSVGJXNVVjVlpGVTNWSldsUkZkVUZ0ZERKdVNqbFJXa2ROVmtsSWNEVnVWR2Q0U25oQk1VbFZUbXhNZGpsamNVZDBhWEY1Vm0xSlNGTjNTRWh4YmtGaFkwaEJNMUkwUkhkWGVVRlJTWHBhU2tRMVNUTnhWa2Q0WTFoR2VFRnFja2xpTkc5UlV6Sk5NbFpxUVhoQllrVXpUWHBGTVhsdGIyMU9hMjh6VFVaeGQxYzJRWGRCWVVVelYzcHVTRUZKUmt0VE1scElTVkpIVkRRMVdtMU5XRVZJVjB4TlZFbG9ibUZQV0VWSGVESkJTMGx0U1hneFVVeGhWbWx1TWpscVFUSTVabGh0UVVwR2JYbHJjRXRXTVVSNWNVcEdkM2x1YmxOMU0yOTNjVTl1U0VWcFJuZEJiRVZJWm0xeVlVODJSMVJpTWtSS1NXTkZTRll6UjFOeFpYQXpZM1paTWpGblJEQm5UVUZIZVdOSFVWZEZibmRKWm05U01HVmFlV0pzUjFKak5FRnRRVmx1U1VsclFrcDFZVTB6ZVdaSmVsTjZTSGhCYTBRelQzbEdZWFYyUWtkeFVFcExUVkJIVW5sU2NYbDFNRUpIZFV0QmJYRk1iMU5QWkhCSVRXWkZla2xLUlcxQmEwVkdaMFp3VVhGSlJYZEZNWEJVWjJKd1NrUnJSVEZNYW00d1oyaGFNREZsU2tnMWEwZFVkWGR5U2pWbVFUTkZTMFl3ZFcxdVVtdGljRE5qTlVGNmEwOUlTV05qYmpOTllYSkpkVVZLU1VsVlJESTVhSEJoVTFSQlVubHBRbEZCV0hCNmVVTmFlR3RIU0RORlJVVktVbWxFZURocGJraHJhVzlIUVdKRk1tcHJibTFXYTBGNVdqUk1NMDlzY0hwU01YQktjV1JHZUVGSVJYcDVWRzV0UlcxYWRtWXpjVWQxWVhGNmNYZEVZVTVsUkhod01VVXpjV2xaTW1OcFRXRkJXbkpWVHpKRVNtb3ljVWxCVlhKaFkwVmFZWFY0UlVwaU1GcEtSVUZ2TVhWVlJIcGpaMGN5VjJ0TlVHZFVUVWQ1YTNCaFQyMUJVVTEyYjFSNVYwRXdZMUJFYlhsM1NsUm5kVzU2Y1hWTU1uUmxSVEJpTW5FeFJVZEhTMGxtYmxCblJYQlJWbXRHZDBneGNFbzVia3hIZVdseFNuUnNSVEJqTUVKS1p6UkJTbU5oYmpCQmVHOHpUV0pKZWxOb2NGTlRXRnBLZVRaeVZFMU1iM2cxZFc1NVFUTnlkMEZ0VFZWUFkwUXpUMEp3TWxacFJqQlhZMEpLWjB4SmVVRnBSSFk1UVVKVVNUSk1NMk4xY1hkeFYwMTRhekp1VVZOMWJqRkVhWEI1U1VwWU0wRjZSekk1UjFwSVFVTnhTVkp0U1hkSU1XOUlkR3hhZW5sVGNrZEpUVWwyT1U5dlNFRnRiMGRCYVZwSVFVbEJVVmRaYjIxVGJFaExUR3h2U2tsWFJqRk1iVTE1UVdOSFVqRmpTRkptTUVGSFUyTkZiVUZZU0hwVFIzQlVaM2h1ZDBWdGNVaHJaWEI1ZVdSSlNrVXljVXBYYkVZeFQxVnVWWFYyY0hoQk1tOVVjV3B4VVUxdVNFaG5ZMFl5TVc1YVVEazJSMGhUYmxvd1FXVkZZVk0xUVhoSmJYQjRTV1J3TWprMFNYaDFXVTEyT0d4dWVIRXdUVWhuVDNGVldtdEZNbWRxUlV0UFdFaHNabXhhTVdNelFVbEJRVTFHT1U5eVNERXlXbEZOYVUxNFRVbFliVUZIUjFJNVlVRXpWalJLU25CdFNsUm5NMjlRT1ZWS1UyTlhjSHBNYlZwTFRYZGFZWEExYjFKME5HOTNRVkZNU0hsWVdrcDVWVXBLT0RWd1NHZGxTbmhqYlVsUVoyWk1TbGRKY0VwMVQwZ3ljVWxGZWxOa1dUSjFZVzlRWjBoQ1ZFeHNUVWhOU1VwVlNUUnhTWGd3VERBNGJVZEtWMDFIVW1ONFNuZDVaWEJzWm1sRllVRXhSbmd4VWtKSVYxbEpNSFZzY0hvNVZtOHpkV0Z5ZDNWTmNuZFROa2hIVGpCSFUzVnRUREkxU0c1aFRHVlpiR2Q1YmtweFkyNVRRV0pOUzBGbmNGUkphVnA0WW10SFUyTjVSbmRCVUc1NmVWRklTbWQ0U1RCVFIwcEplV1JKU1dOSlFYWTVhbkpJVFVOQ1NrVlBjVWRhTkc4eFFVOXdNVk5CVFZGNVZWcExSR3hNZUdwclJXeG5lRUYzVFRKR01VOVZTWGhGVTFsdFYyTkpWSGwzU0RCbU1rcFVWMFZ5UzBGV1IyeG5NMEYzVjFCeVIweHRRa2hhTTAxU1FXMUdVM1ZrUjJGSlExaHRlVlZ3TW1kUVIxSjVTSEJJZURKSU1VaHBSVkpCV0hCSFRUSndNa1ZNYmxSWFdscExVMlZGVkZkWlFWUkVNbkZLVFhoTlZIUnBSMUZFTWsxS1NXcEllR1kxY2tsTmJVRmhjVEZ2VkhCbFFYcDVRbko0VjNaeVVWTmljbEowTTAxU1YxaEdWSGh0VFVoTlJHOHdRV1JNU0VGV1dsRjBiVVpTZERCRlUzVnRRV0Z4VVVoU1kzWnVVbmh0UkcxUFNrZElORzF5ZVZadFRVaDFhVmd4VDJOd1lYQXpSVWwxUmxwdGRWWk5Ta1ZUY0hnMVZVSlRTR3hFYlVsRlJYZ3hVM0JzY0VGUWVqbHNURXBCWmsxR1RqbFdVSEF6UVVkTU0wRnRWakpNZDFvMVdtMVNNMEYzUlhsQlZGWnRRa2ROZFVGdFJHMUJiVWcwV20xT01scDNURFJCUjFKdFdtMUlNMEYzVW0xQmQwd3lXbnBXTTFwUlNHeEJiVXh0UVhkTmQwRnRUREpOZDNCc1dtMUVNRnAzV2pWQlIzUXpRVWROZGtGdFRESkJiWEJzV20xNE1GcDNTR3BCZDFJeVFXMUlORUYzY0RKYWJWbzFRWHBTTWxwSFRYZGFiWEF3VEcxRmVVRkhWak5hZDFveFFWUmFNVUpIU0dwYWJYZ3dRVkZOZVVGNlREQk5kMXBxUVhkMGJFMTNXbXRCVVhCc1RYZE1NVUZIVGpKTWJVaHRRVkZNTVVGM2NESkJWRkp0V25kSWFscDZWakphZDBnMFFWRkliVnB0U0ROQlIxb3dRVzFFYTFwdFRqQk1iVTExUVZGNE1VSkhTRFZCVVZZeFFWRkViRUZ0ZURKTmQwZ3pRVWR3TWsxUlRYZEJiVTR5UVZGTWEwRjNSREZDUjBsMVFXMVdNMEZSUlhaQlVYQXhRWGR3TkVGUmNESkNSMFJzV20xYWJWcEhSREpCVkV3elduZElNMEZ0ZERCYWQzQnNRVWRFTUVGdFdtdEJiWFJsRWdBQVJUQlBWRkpvVGtSak1rNUVUWGROZWtFelRrUmplRTVFWXpKWmVsVXhUbnBOTWxwcVdtdE9hbXN5V21wVmVVNUVXVEZOUkZKb1RucEJNbHBxV1RGT2JWa3dUbXBaZUUxNmF6SmFhbHBxVGxSck1rNXFXWGxPYWxWNlRsUlJlRTVFYTNsYWFtTXhUbFJqTVU1Nll6Rk9lbU13VGxSYWJVNTZaekpOYWxWNVRsUlZNazU2VFRGT1ZFa3hUbnBSTUU1VVVUQk5lbFUxVG1wVk1VMVVXbWhPZW1zeVdXcE5NazE2VFhwT2FsRXlUa2RWTUZsNldtaE9SMVV3VG5wYWEwNVVTWHBQUkdONlRYcG5NVTVFWTNsTmJVa3dUWHBTYVU1RVJURlBWRmw0VGtSbk1VNTZXVE5PVkZVelQwUlZlRTV0UlRKT2VsRXhUbTFSTVU1VVRYcE5la0V4VFVSWk5VNUVhekpaZW1ONVRucHJNazVxWTNoT1JFMHpUbFJOZDA0eVJUSk9lazB4VGxSSk1scFVVbXBPYlVVeVdrUlNiRTVIV1RKTmFsVjVUa1JOTUU5VVVYcE5lbXN3VFhwak1FNTZSVEZQUkZWNVRtcG5NMDFVV1RWT1ZFVXdUa1JWZWs1VVdUQmFWRkpwVG1wUk1VMXFWVE5PUkd0NlRucFZNVTE2UVROTmFsSnNUbnBCTUZwVVVUUk9WRWt5V21wVmVVNUVUVEJPZW1ONFRtcHJNazFVV1RST1ZFa3dUbnBhYkU1NlVUSmFhazB4VGtSTk1GcEVVbWxPUjFFeFdWUk5OVTVFWXpKUFZFMHdUbnBCTWxscVkzZE9hbWN3VGxSUmVrNXRXVE5QUkdNd1RsUkpNazU2VVhoT2JWVXpUbnBSTlU1RVJUTk5SRlV3VFhwUmVrNVVVVEJOZWtVd1RucFNhVTVVWjNwTlJFMTVUa2ROTTAxNlkzZE9WR2N3VG5wamVVNXRUVEJaZWxVeFRYcEZlazlVVFhkT2FsVXlUMFJSTTA1dFdYcE5hbGw2VGxSTk1VOUVWVEJPVkdONlQxUmFhazU2WnpCT1JGRXlUbTFKZWsxcVVteE9iVWt3VDFSVk1rNHlSVEpOZWxrMVRtcFplazU2VVRCT2VrVXdUVlJSTWsxNmF6Sk5WRlV5VGxSTk1FMXFWWGRPUjFVd1RWUlZNRTE2WnpKYVJHTTBUa1JyTUU5RVRUQk9lbU42VGtSU2JFNUVZekJaVkZGNFRrUlpNMDVVV1RST1IxVXlXWHBSZWs1SFJURk5hbFY1VGxSSk1rNTZUVFZPUjBrelRWUlJOVTVxVFRGT2FsRXhUbFJWTVU1VVdtbE9WR2N3V1hwTmQwNTZSVEJQVkZWM1RsUkpNbGxxVFhkT2FrVXpUbXBhYkU1cVNURk9lbFpvVGxSSk1rOVVVVFZPYWtVeVRYcFZORTU2UVRKTlZGRTBUbnByTUZwRVdtdE9WRWt6VFVSU2FVNUhVVEZOYWxwclRsUlZlazlVVFRST2VrMHlXa1JTYUU1NlVUSlBWRlY1VG5wTk1VNUVWVFZOZWtrd1dYcE5lazU2UVhwUFZGRXpUa1JuZWs1NlVtbE9la2t4VFhwTk1rNUhXWHBOYW1ONFRsUk5NbHBFV20xT2FtTXlUMVJaTTA1cVkzcFBSRnB0VGtkVmVrOUVWVE5PZWtVeVRtcFJlRTVIU1RCWlZGazFUbXBOTWsxVVZYbE9WRkV4VG1wUk5VNTZaekJaVkZwcFRtMVJNMDVFVW10T2JWa3lUbnBOTTAxdFNURlpWRnBxVG0xSk1GcFVWVEJPYlZrelQxUlZORTU2VFRCUFZGRXpUbTFKTWxscVl6Qk9ha2t4VGxSS2FVNUVZekJaVkZVMFRYcEJNRTE2VW1oT2FrVXlUWHBqZDA1Nlp6Qk9WR04zVFhwSk1VMXFVVFJOZWtVeFRrUlNhVTVIVVRGT1JFMDFUa1JOTWs1RVRUTk9SRlV5V2tSTmVFNUVhM3BOVkZFeVRYcEZNMDVVV1hoTmVra3pUVlJqZDAxNlNUSlBSRkV6VGxSWk1rOUVZM2xPUkdNd1dYcFNhVTVFUlhwT1JGbDRUWHBuTWsxNlRUTk9WR014VFdwVmQwNXRTVEZOYWxKc1RsUnJNRTVVVlhsT2JVa3dXa1JXYUUxdFdUSmFhbU15VGtSRk0wMVVVVE5PYlVreFRucGFiRTV0U1RGUFJFMTVUbXByTUU1VVVteE9hbXN5V21wWmVFNXFVVEJPYWxWNVRsUlZlazFVV214T2FsRjZUbFJhYUU1NldYcE5WRkpyVG5wbk1GbDZUWGhPYW1NelRtcFZNVTU2UlRGT1JGVjVUa1JuTTAxcVRYZE9WRmw2VFVSYWFrNXFaekJaVkdNeFRtMVJNazE2VVhoT2Vtc3lUMVJSTUU1cWF6Sk9SR040VG1wcmVWcHFZelJPVkZVeVRWUlpNVTU2UVRGT2VsVXhUWHBKZWs1cVdYcE5lbU13V1ZSa2FFNVVVVE5PVkdNd1RtcHJNRTlFVlhsT2JVMHlUa1JTYkU1VVp6Rk5WRTE2VG0xSmVrNVVTbTFPUkVVd1RrUmpOVTVIV1hsYWFsRjZUbnBaTTA1NldtbE9iVlV5V21wWk5VNUVUVEJaVkZsNFRtcHJNVTVxVW1sT2FtY3lUbFJTYUU1RVVURk5WRkUwVG1wRk1GcEVXVFZPYW1zeVdsUldhRTV0VlROUFZGazBUbFJSTVU1RVZUSk5iVmt3V2xSWmVFNVVUVEZPUkZVeVRtcE5NazE2VVhsT2FtY3hUa1JOTkU1RWF6TlpWRkY2VGxSRk1rNXFXbTFPUjFVeFdWUmpNazE2U1RKUFJFMDFUWHBuTWs5RVl6Sk9hbXN4VFdwVmVVNXRSVEpaYWxWNlRrUlpNazFVVVRSTmVtY3lXV3BTYVU1cVp6TlpWRTB6VG0xRk1GcFVXbXhPYlZVeFRYcFJNazV0VVRKTlZGRXhUakpGTVU1cVVteE9hbEV6VGtSUk1rNTZhekpaYWxKc1RYcG5NRTFxV1RCTmVrRXlXV3BWTVU1dFRUSk5WRmw0VGtkUk1GcFVVbXhPVkdjd1RWUlNiRTVVV1RGT2VtTXdUa2RKTVZsVVZYcE9SMVV3VDBSWk5VNVVaekZOUkUxM1RYcFpNazU2VlhkTmVrbDZUVVJOTVU1VVZURlpWRnB0VG0xTk1rNXFXVFZPYW1Nd1drUlplRTVVYXpGUFZGcHFUWHBaTUZsVVRUUk9la1V5VFhwU2FVNUVUVEJPZWxrMVRsUkZNRTE2V1RWT2VsVXdXVlJTYTA1dFRUQlpWRTE0VGxSQk1FMVVXbXhPVjBVeVRWUlpNRTVFWnpKT2FtTXhUbnBWTVU1RVdtbE9lbFV5VG5wTmQwNUVaekphUkZVd1RtcEpNazlVVlRWT1IwMHdUbFJSTkU1dFdUSlBSR1JvVG1wSk1VMTZXVEZPVkUweFRWUk5NazE2YXpOT2FsbDRUbXByTWxwcVRYbE9SRlV5VGxSVk1FMTZUVEJhUkUxM1RYcEJNMDFxVVRKT2VtY3pUVVJaTWs1cWEzcE9hbGswVG5wbmVrOUVZM2RPUjFrd1dWUlpOVTVxYXpCYVJGbDRUa1JWTWs1cVRURk9WRWw2VFVSV2FFNXFaekJhUkUxNFRrUkZNbGw2VlhsTmVtY3dUMVJWZUUxNlZYcE5lbU40VG1wWk1VMXFXbXRPYWtVeVQxUlNhRTV0U1RKTlZGazBUbnBKTWxwcVdUUk9SMGt3VFZSUk1FMTZaekZPZWsxNFRsUkZlazFFV1hwT1ZFRXdUbXBSTTAxNmF6Qk9WR015VFhwbk1GcFVWWGRPUjBVeVdrUmFiVTVFUlRKT2FscHBUbXBOTVU5VVRURk5lbFV3VFhwWk1rNUhTVEJOVkZwclRtcHJNVTFxWkdoT1ZFVXdUbXBaZVUxNlNUTk9SRTB5VFhwRk1FMTZVVEpPUjBreVRXcFZNRTU2UVhwT2FtTXpUa1JuTWs1VVZURk9WRWw2VGtSYWFFNXFhekJaZWxwdFRtcG5NMDVVVFhsT1ZHTXpUVVJqZUU1cVp6SmFhazB3VGxSWk1VOVVVWGhPYWxVeVQxUlZNRTVVU1hwTmFsazFUbnBuTVU5VVdtcE9lbFV6VG5wVk1FMTZZekpOZWsxNFRsUkpNVTE2VFhsT1ZFRXlXVlJWTlU1cVp6Sk9hbU0wVG1wamVrMVVVbXBPYlZreVRWUmFhMDU2V1RCT1JGVXhUa2RWTVUxNlZUUk9ha1V5VDFSTk5FNVVXWHBOVkZVd1RsUlJNRTFxVlhwT2Vra3pUMVJSZVU1NlVUQk9WRmt6VGxkRk1FMVVTbWxOZWxVd1dXcFpNRTVFVlROTmFsWm9Ua1JWZVZwcVl6Tk9ha1Y2VDBSTmQwNXRUVEZPVkZwc1RXMUpNMDVVVVRSTmJVa3dUa1JWTkU1Nlp6Qk9SRlV5VFhwQk0wMUVWWGRPZWxVeFRYcGpNVTVxVlRKWlZGcHNUa1JOTWs5RVZUSk9iVkV6VDFSWk0wNUVhekZPUkZWNFRrUmpNazlVVVhoT1ZGa3dUWHBaZUU1RVZUTk9SRkV5VG5wbk1WbFVUWGxPYW1zd1dXcFpOVTF0V1RCWlZGa3dUbFJKTWs1cVVUTk9la2t6VFZSVmVVNXFUWHBPYWxKcFRucFJNRTU2VlRGT2VrMHpUVlJaZVUxNlp6TlBWRmw0VFhwWk1rMVVVWGhPZWsxNlRrUlpORTVxYXpOWlZFMHhUbnByZWsxRVZYZE9WRVV4VDFSak5FNXFSVEpaVkZVeFRYcFpNMDlFVW1sTmVrVXhUWHBSZVU1VVJUSk9WR00xVG1wSk1GcEVXbWhPZWxrd1RYcE5lVTVxYTNsWmFscHRUbXByTUUxNldUUk9SRkY2VGtSYWEwMTZVVE5PVkdONFRsUlJNVTFVV1ROTmVsRjZUVlJaTkU1cVJUSk5WR04zVGtSck0xbFVZM2xPVkUweFRYcFZNRTVVUlROT1ZGcHNUbXBOZWs1RVZUQk9lbXN4VFVSU2JFNXRTVEJhVkUxNlRYcE5lazFFVlRGTmVrVXdUa1JaTVU1RVVUSlpWRlV6VGxSWk1VNUVXVFJPVkVVeFRVUk5kMDVxU1hwT1JGWm9UVzFKTVUxNlZYZE9iVTB5VDBSVk5VNVVTVEphYWxVd1RYcFpNRmxVVW1sT1Iwa3lUV3BLYVU1VVdUTlBWRkY2VGtkVk1FNVVVbXhPVkVrd1RrUk5lRTVVU1RGUFJGRTBUa1JOTTAxRVl6Sk9lbU16VDBSVk1VNVVWVE5PZWxFelRrUm5NVmxVVFhoTmVtZDZUMVJOTTAxdFNUQmFSRXB0VGtkSmVrMUVXVFZPUjFsNlQwUlNhRTU2VlRCTmVsa3hUbFJaTWs1cVRUQk9SRmw2VFZSVmVVNVVVVEJOZWxGNFRtcFZNRmxxVVRCTmVtc3pUV3BaZUU1dFdUSk5WRkp0VGxkRk0wNVVXbWhPUkdzeVQxUlJORTU2WnpCTmFsVXhUakpGTWxsNlRYZE5lbFV3VG5wUk1rNVVVVEJQUkZFelRYcHJlazFFVlhkT2FtY3hUVlJSTTA1RVp6Rk5lbHBzVG5wQk1FOVVZelZPYlVVelQxUlZNMDVVVFhwT1ZHTjZUVzFaTVUxNlRUQk9hbEV4VGtSVmVrNVVVVEpPYWxwb1RYcGpNRTFVV1ROT2VrbDZUbXBaZVU1VVZUTk9lbHBxVFhwVk1VNUVZekJPUkZWNlRsUlJNMDVVU1ROWlZGRXpUWHBKTWs1cVkzZE5iVWt5V21wVk1rNVVRVEJaVkZVeVRYcFJNRTVVVW14T1JHY3dXa1JOZWs1dFdUSk9SR00xVG0xRk1GcHFXWGhPYlUweVdXcFNhMDVIVlRCWlZGVjNUbnBuTUU5RVdtMU9lbEV3V1hwU2FFNVVRVEpaZWxKb1RsUlJNVTFVV1RST2VsVXlUMVJqTkU1dFdUSlBWRTB5VFhwRmVrNVVWWGxPVkZVeFRXcGpNRTF0U1RGWlZGcHJUbTFSTUZsVVVtMU9WRUV6VGtSWk1rNVVaekpaZWxGNVRtcEpNMDFFVlhoT1YwVXhUVlJaTTA1VWF6Rk9WR013VFhwVk1VMXFUWGhPUjFreVRsUmFiVTE2WjNwT2FsazBUbTFGTTAxcVZUVk9SRkY1V1dwWmVFMTZRWGxaYWswMVRucFJNRTlFVFhoT2JVMHlXbXBOTVU1RWF6Rk5hbU41VGtSck1sbDZUWGRPYWtVeVRtcE5NazVIV1hwTlZGSnNUbFJSTWxwcVpHaE9la2t4VG5wWk5VNUVZekJaVkZrMVRrUlZNMDU2VlRKT1JHTXhUVVJhYVU1cVdYbFphbHBwVG5wUk1FMVVWWGxPUkZFeVRsUlZNVTV0VlRKYWFtTXdUa1JKZWsxNlVUSk9SMUV5VGtSTmQwNTZaekJPUkZsNVRrUlpNRTlVU20xT1JHc3hUVVJLYlU1cVZUSmFhbHBvVGtkWk1FNVVUWGxPZWtrd1QxUk5lazVxVFRKYVJGRXlUa2RWTWs1VVl6Vk9SR3N6V1ZSak1FNXRUVEJhYWxwclRXMVpNMDVxV21oT1JFVXlXbFJOZWs1dFZUSk5WRnBzVFhwck0xbFVVbXhPUjAweFRsUk5ORTU2UlRKUFZHTjNUbFJuZWs1RVdURk9SMWt5VFhwamVFNXFhM2xaYWswelRrUlJNVTE2VFRWT2VrVjZUa1JhYUUxdFNYcE5SRTE2VG0xTk1FNTZWVEZOYlZreVRWUk5NRTVVU1hwTlZGVjRUbXBSTUU5RVZYbE9WRlV3VFhwTmVrMTZWVEJPZWxKdFRtMUpNbGw2VFRKT1JHc3hUWHBqZUU1VVRYcE9hbU4zVFhwWk1scFVUVFJPUjBreFQwUk5OVTU2UVROUFZGcHRUVzFaTWs5VVVYaE5lazE2VGxSU2FrMTZhekZQVkZVMFRucE5NbGxxU20xT1ZHTXlUbXBaTWs1dFRYcE9WRkpyVGtSWk1GcFVUVEZPUjFsNlRtcE5NMDV0VVRKWmVrcHRUa2RKTTA1cVdtaE9iVkV5VDFSWk0wMTZUVEJhYWxrelRucEpNVTFVV21wT1Iwa3dUbFJqTkU1RVp6Rk9lazE1VGxSVk1sbDZVbXhOYlVrelRVUmpNazVxWnpCWmVrcHBUWHBWTUU5VVNtbE5la2t5V2xSVmQwNHlSVEJhYWsxM1RrUlpNVTFVV1RST2VrRjVXbXBaTkU1RVl6Sk9hbEY2VGtSVk1rNXFWWGhPYWtWNlRucE5NVTVYUlROWlZFMHlUWHBCTUZsVVkzbE9lbXN5V1dwVmQwNTZWVE5OVkZab1RtMUZNMDFxVFRGT1JHc3hUMFJLYVU1RVNUQmFhbU14VGxSWk1VMVVXVEpPUkUweFdWUk5NRTVIUlhwTlZFMTZUa2ROTUZscVdUSk5lbU42VGtSS2FVNTZUVEphYWxWNlRtcFJlazVxVVhoT2Ftc3dUMFJOTWs1cVp6SlpWRnBxVGtkUk1VNXFWWGRPYlZVd1RWUk5ORTVIUlRKTmFtTTBUVzFaTVZsVVVtMU5la0Y2VFhwYWEwNTZZek5PYWsweVRrUm5lazFVV20xT1ZFa3pUVVJSZUU1cVZURlBWRlV6VGtkWk1VNUVZM2RPUjBrelRVUlZORTV0VVhsWmFscHJUa1JyTTA5VVdUUk9SMDE2VFZSTk0wNTZXVEJaVkZsNVRYcEpNazFVV1hoTmVsRXpUVlJXYUUxNlp6SmFSRkUxVG1wck0wMUVVVFJPYW1zeFRsUlNhMDVxVlhwUFJGSnJUbXBaZWs1cVZURk9hbXN6V1ZSUk5VNUVWVE5OVkZVeFRYcFpNazlVVlRGT2VtTjZUVVJOZUU1VVJUTk5la3B0VGtkTmVrNXFWWHBPYWxFd1dtcFZlVTVFVFRGTmFtTTBUbTFWTUU5VVVURk9Na1V6VG1wU2FVNVVTWHBPYWxsNVRrZFpNVTlFVFRGT01rVXlXV3BOZUU1VVFYcE5SRlUwVFhwQk1rMVVZelJPYlVrd1RWUk5NMDU2UVROT2FrMHlUbnBWTUZwVVZUSk9iVmt5V2xSamQwMTZSVEJaZWxrMVRsUk5lazlFVVROT1JFbDZUV3BhYWs1RVl6Rk9hbFY1VFcxWk1GbFVVWGxOZWtVd1RXcFNhRTU2VVRGTmVsa3lUbFJWTWs1cVl6Vk9WR015V21wTk1rMTZZM2xhYWxFeVRrUm5NMDVFVVRGTmVsa3lUVlJaZVU1VVZUSk5hazAxVGtSak1VMXFVWHBPYW1kNlRXcE5NVTVVVlROT2FrMXpaUklBQUd0YWJVNHpRa2RNTWtGM1NERmFSMHhzV20xYU1VRlJUREpCVkVRelFWRkZlVUZSZERCQlIwbDFRVzFPTUZwdGNHcEJiVkl3VFVkRU5GcHRUREpNZDNBd1FYZGFNa3hIU0RWYWVsWXdUWGRFTTFwdFRqSmFiVXd5UVhkTU0wSkhSR3RCVkV3eVFWRkpkVnB0VERKTWQxZDZRWGRFTUVGM1JYVkJlbG96V2tkTU1VRjNkREJOZDNCcVFYZFNNazFIUlhwYWVrd3hRVzFJYlZwdFNESmFiVWd3V20xSU1FRkhUREZCZDBRd1FrZGFiVUZVVWpOYWJVdzFRVzFXTWtKUlJHeGFiWGd6V25kWGRrRXlVakZhZDBSdFdtMTRNMEYzVFhwQmVsb3lRVkZFTTBGSGRHMUNSM0F3UVVkd01WcHRjREZCVVVSdFFXMVhka0ZIZERKTlVVMTJRVlJNTTB4SFRYcGFla3d6V20xSmRVRkhTREpCYlZvMVdtMU1iVUZ0Y0RGQlVVd3hRbEZhTkZwdFZqRmFkM0J0UVVkSU1rMTNTREphYlV3d1FsRk5kMEZ0ZERGYVVYQTFRWHBTTTBKUmNESkJkMW94UVcxRU5WcHRSRzFDUjBRMVdtMTRNRTFSU0RSQmJVNXRXbmRJTUVGdFRHMWFVVm93V25wV00wRkhjRFJCZWxZeVduZHdNMEZIVERKQlVWZDJRVzFhTUVGM1JHMUJiVll3V25kTU1VRjNlREZCZDNBeldtMTBNa0ZSV2pWQlZGb3pXbmR3TUVGSGVHeE1kMFExV20xV2JVSlJTRFJhYlZveVRHMWFha0ZIVGpOQlVYRjFRVWRPTVZwSFREQkJSMUl6V25kYWJGcHRTREJCZDAxM1FXMUlNVUpIU0cxQlZGWnRRbEZ3TTBGSGNETkNVVVF4V20xU01VRnRWM1phYlU0elduZGFiVnB0VWpOYVVYRjFXbTFXTUVGUmNETkJNbEl5UWtkd2JVRjZSRE5hVVVWM1FUSlNNRUZ0V2pWYWVsWXlRWGRGZFVGVVdqTmFkMWQ2UVhkTU0wRjNTRFJhYlZJeVFVZE1iRUZSZUcxYVVVVjFRVkZ3YlVGdFRYZEJTbEl6UVZGYU0xcHRSRzFDVVVWMldtMU1iRXgzVERGQlZGWXlURWRhTTBGSGVESmFkMGd4UVZGRU1VRjNjREpCZDBnd1RFZEZlbHB0VWpKYWJWbzBRVzFNTVZwM1dqUkJSMDV0V2xGd2EwRnRkRzFDUjBReFFXMVNiVnB0UlhWQmVscHRRWGRFYTBGM1ZtMWFkM0J0V20xMGJFeDNXbXRCZDNnd1FYZE1iRUZ0VmpGQ1VVdzFXbTFPTWtGdFdteGFiWFF5UWtkRU0wRjNWbTFDUjBoc1FXMTBiVnAzV2pOQmJVZ3lRVWR3YkVGM1ZtMUNVVWd6UVhkV01FSlJjREpCUjBReFdsRk5lRUZ0ZURKYWJVMTZRVWRhTVVGM1RERkJiVnBzVFhkTU1FRjZXbTFCZDFwclFUSlNNa0ZIVFhwQmQzUXpURWRJTWtGM2VESmFiVVEwVjJvd1dHNHlTVFZ2U2xObFRVdFdkRU5HVG1GTU1sTkhiMHBYUmsxdGRERnVVVWxoY0VwTlluQklNR3h1TTFOTFJqQkpaRzR3T0ROTlZHYzJTVWxhTTBaNGNYVndSM1ZQVERCMWVFcDJaMVZLVTNGUVdqRkJORnAzVTFsQ1UwVlFXREZUTTBnemRUVktTM1ZJYmtsVFQwbFVNV05NZDNCc1NUTkpZMFZ0U0RGTllVbGhUWGRXTWt4TFUxbHhTMU5pUlVkMVdWcDVUV3hGU21kRFNUQjRhVzk0UVdaQ1ZGWXlSRzE0YkVGNFYwMU5ZWGxFV2pOalFreDZNV05DU0ZkblJ6Sm5RVUZUU1VseE0zRk1SMGR3YVc5S1YycEdlRGxUY0RKWGFFWlJUR2x1U2pWa1JucGpNMjVIVjBGSlVVRkpTVkE1U1VRemVXaHZTREJzY1RGSlJrVlJSVFZLVkUxaWNUTmpZMjVIZFZOSk1HdFNjR0Y0TWtkSWEwRkJSMWMyVEcxSldGb3lSV3hZTVVscGJrbElOSEJSVFVsdVZEVmFRVWR3TkZwNk5VcENWRFZvV214bmVHOHdUVFp2TTNBMFJqQm1OVTFMUld0Wk1VVXhSMVYxYWtWS2NYVnVZVUZFUm5wNVVrMVRZMUp3TVVsTlFYZE5iRnA0VTNkeGVubFRXbmQxV1V3eU5XRk1TR05hY1dGWE1HNTNkV3RJUm1ZMGNVZzBiSEI0VFVOYVVsY3lRVEIwTlVGS2RXUnVlWGxpYmtkU05FUklaMlZDUm1kWFFrZEJVMEV5U0dwRk1qRmtSWGxOWjBwVU1YZFpNbmxKUlZSNVkyNUlaME55UjFkSFIxUnJhSEJSZVhwdVNFUnNjbFZqYVV4NWRHbHhlVWxGY1VablUwWkdaMkpLVkhWWlRYZEJTRzh6WTJoTlIwUnNSM2xGVTNKS1RHMUZSbVkwUmxOSlNFWjROVmhHUm1kaFdESkpNVzVVZVd4SlNYRnVjRkZKTWtSTFRqSkVNRkl5VFcxNE1YQktZMnRGU1U5c1NVZFRWMHg2WTFwd2QzRlBXbnBUZGtKVFltMVlNMWREV1cxTlFWcEtNV1Z5UzFObVFUQmFiVWxLUkd4R2QwRlBjRzFUVkVkVFJWbHhNbkJwUkhwQk0yOHpTR3B4VkdOclFVcEJZa0ZUVjJweVNuUnJURWxQV1VreVUwVkhiWEJsY0hwMWEzQjZaakJGU2psSVRFcElOWEo2UlZodVUzVjZSekZGUlc1VFQxWkJTMUl3UjB0SWEweEpVakJ1U0ZOWmJ6TmpiVVpSVFdwWmJWbzFiMGw1Um5CNFNESndZVUY2UVhoaldXNUhURE5HZDNCclJrcGpSMFJ0UVZSSFVVMXVjREoxTW01SVFXZHVWVmRRUWxRMVdFRlZVakZCWVVnelJETlhWWEZUUVd0QmJEbGpRVkpOTWtRemNUQndTM2w2Y2t0V2JYSktjVTFITTBGbmNEQm5lRTFVZEROdk1qRnNRVEF4VmxreU5VdEdkMDlyY2twMVkxcHRUM2RNTUVsdFNVbzVTVVZIUVd0RmVHSnNTVXBOV25KNlptdFpNV05YYm5salJVZ3lkWGR2VlVWSGIwWm5ha1ozZVRCQk0wUmxiekZGVUc5NWNVdEtWSFZqUjBkMVdFaGhZMDF3VlVFeVdsUnhWVWhJTUdwd01FRjFiM3BKZFVaaFZtMUdTa0YyV2pGTmEyNVVRWGRLU2xOcVJHMTBNVTFJWTFCeFVrMXNSM2xqYUVoVU1UUkJVbWRQY2tnNVlVRjNRV2xCU0VGSWNVZHhVSEV4VjNadlMzRm1jRE5CU0VaSFFXTndTVWxYUWtvd05IQXlWMEZ2VTJNMlJIcElhMEZJUVZWTVIwZzFTSGRKYW05S1JXcEhSM0Z0UlVsSlowaFVTVWxhUzNnd1drcFRSRXh0ZFUxdmVqUXhTRzFOUjAweldqSnVWSFV3Y0ZGRllrRlZUV0ZFZDBGWlRYZHhVWEJSY1Zod01tSmxjRWhYVkV4dFZqUkNWVmQ1UmpOT2FraFJWMmxCU1dOaWNrbEpWVzUzVDBwdVNuVk5RVEpuWVVsVlFWcHZVa0ZhYmxScmVYQktTVmRCVW5sV2NHMUJiRzVIZVZwQlNXTktRVlZKWmsxS1pqRk5NVTFtUVRCcmFFcElhMDlHU1ZNeGNURkJkVTFzT1ZsQk1tZFhjbnBUYmxrelFXbEVlR0kwVFVneFprRXdZMmR3TW10c1JERjVhRnBKUlZwWU1GTkljSGQwTlc1S1VteEhiWEZZYm5ZNVZVcFVlVzVIU2xkUVFYcFRNRmd3TVd0RmJYQXpia2wwYkVGSVdtdHdlbU42V2tsU1pWa3dWMUJZYlhreVFYWm1iRWt5UlVwYVNIbDFRVE5QYVc5Nk1VeHhZVWxZVEVwSlozQjNjVWx2ZUZkdFJ6QnJhMDFJUVRWSE0xZDZSSG94V205SWNVaE1TR3RoU0VkeFdrMTZkRFJFZUdkWFFYaDVNVVZSY0dsSk1IRnBiekpuYlVGNmRUTndVa3cwUWxGNGExbHRWMUp1ZUdkcGJuZ3dhMGg2VjJOYVVtTmlTVkZ3TUZwSWRWcElla0ZqV2tkWGVFWlNlREZOUjNCcmIwdFRZa0YzVjBKdU1uVnJSa2RKVUVkSVUwZEliWGxaYjNkMWVFWXpUVkJJTTNCdFRFcFNaVUZVVFZSRlVrZ3pjVEo1U2tWTFFXSkZNbXRsY1hvNGFsb3hTVXB5VW1JeGNGUjVWMEYzZFcxdlMxZHJjbmRCVEhCTFltMUdZV05RUVZGVGJtOVNVMmx1TWxZMFNVbE9OVTF0U0RCQ1ZVNHhRVzFKUkc4d1YyTnlkMWQ0VFZKSlozRjNUVTFLVW1ZMGNGUlRSa1ZWVjFsd2VqRkxRbEpKVlVGMk9HdEtZVUYxY2xCblVWb3lXbTFOUjBGdFJERkVNSEZUUkRSRWJWTm1SMUl3TkUxNk1VeEZNMWMwV2pGQlpFSkhWakZJVTBWNVJqQXdOVWt6VjJ0dlVtZFZjSGg1YTBaNVQwcFpNSGxOUm5kQlUwWjNlR1ZJU2psMldubGFhVUY0WjFSTVNYbGxRWHBFYlVFemRETkZlR294V2t0eFVVSlJSVkZhU21kVlFYaEVhVm95Y1RKTlUwRnJjREpKVEVaU1JHdEdlbGRaUm5oMVNISkxjVWhHZUUxTGNsRlhOVXBMZUROSFVqVXhURXA1WVVjd2NVWndSM1ZGU1ZSclNrUjRPVFZhUjNGWFFWSlRNRWN4U0RWdlUxTm5SMGRKYWtWUlFVTllNSEZJUkVoMU1uQlNRVTlDU1ZZelRYaHJaVWgzUVRWR01tTjZSbEp4WVhKVGNXUk1iVWxaUm5nMVlWcGhVMWR3U0ZwclNtRkJlVzlKWTJ4TVNHdHRUWFpuZFV3eVp6TklTRWx0UmpJNE5YQlZlVFZCZWpsTlFrdEJiRTB5TlVsS1ZHTjRSRWh4UVhGM1RtVkpWRWhsV2tvNU5VZEhUakJHYlZZMFRVcHhiVzVVVTBsd01VVnVSakJ4Wmt4dGVYZHdNbmxRV2tsU01HOUhUbXR2VkdjMlRVZFBZa2RWVjJaTVNVUTFjSGR4YTBkSVowUktVbWRsVFV0SldFZ3pVMWh2ZDFkbWNWUjBOVWx0U1dwdlVYVnRUVzFXYVUxNFNETmFTMGw0Ym5sVGJYQklSVTlDVTJKbGNrcEpVa2xWUldkR01FVldSakJuVkZreFNEVndlSEY1VEhoVGJISkhUVWRFTUVnMFJVcE1hVnBMVTIxR1lVUXpRVEp3YVc1TFREVnViVUZxYmpKbmJVWkhRVWhDU1hnelFUQkZabTkzZVZsQk1HWTFiblk1YkZwU1p6VkVNbG8xV2pGRllXNVVURzF1TWsxUFRWVk9OWEpoU1ROSGVrZzFRVkZUZFV4dFVqTkVNazFvU0RKMWRVZ3dWMk5JTTFOVGNrcDVNVzVTTVhkeVUyTjFRWHBNWlVWc1ptVnVSMGcxUWtwbWJFWXhUMHhGZURWQlNrdEJOVWhLWmpCdmRtZGhRVEIxYmtsM1dteFpNWGhsY1ZGTVpVUXhXalJHWVhRMVRWTkZiVzVHT1ZKd1VtcHBUVXRKTlZsdFVqUk5NRXd4Ymt0T2EwSklRVkJOUmpsTVNVZEJNVVF5ZVdaeFIwVm1SRXBuTWtadFJERlpNbmxZU0VkSk5rRjZaak5aTTNGNFJFdFhiVUV4VTFSQ1NraHRSbUZQZDBKTFdtVlpNR2RGY0VsVFlscFNhMk51YlV4bFRUQndhWEJoZFcxTWVqbDZjbEo1TUZreVFVTkpiVlpyVFVvNE5VeDJaakJaTW5sSlFraHdhMjVWWW0xQmRtWnJSVEZ4VDAwelJHdEtTWGx1UkRJeFVrRlNkWGx1U2tScGNXdzVNa3BTVXpOSlNVOW9jRE5CU1VWUlFXWnZWR2Q0YmtwblpFUjZkR2x2VVZJMWJrdFRZMjlUVW1sQmVHY3pSSGwxZUUxTGRHVkVNbGRLV2tsRU5VaFVVMk5GVW5sclIxTlhaMFJ0UVZCSlNtTjViMG8xV2xreFYwVk5TWEZuV0RJMGFVcEpVM2hHYlhsUVRWUkpURWRVTVdSWU1qVmpRWG81VmtGVWEyTkdTM0ZFU2xGSU1FRktlV2R4TVVobGNWVjVaVUpVZFdGTU0zQXpiMVJ3YVVFeWVHdHlkamcxV2xScllWZ3dNRE5aYlZOaFRHRjBhVWxSUkdsTlIwOWtXa2hCVlc1c09VbEJkMGhwYmpKcllVUXhlREZ2VkhBd1FrdFdORWxRT1dOYVUwRnRXakJhTkhKMk9ETk5kMXB0VFVsNFpVUXdkV051UmpsbldrcFNNbGt5T0dwWU1uRlJUWFpuTkZwS2RXRnZlbmwxY0cxd05Wb3lTR1ZZTUdwdFduZ3hTMFJKVTFSS1NFRkRXak5qZFVGdFUxRndNbWRvUkhoaWJFaExRV1ZDVURsMVFXMTVVRUZ0VXpKS1MxbzFXVzFOVmtKVVYzVkNVVUZRU2twVFMyOXNPVzFCU1VsaVFXRkJOVVZ0VFdwR1ZGTktSSG8wYVZveGVXNXlkMDF0UVZGQlRFWnNPR1ZGZUhWaVJWRmFNazFMWTJweGJWbzFjR0ZCZUZrd2VHbFpNM0JsUm5wU2JIQlVSVTFaTTBScFJqQkJVVmd3UkROd00wOTViblpuWWsweldtbHVTWFJ0Um13NGFXOUxVbWxNYkRsR2NGRndhVUpMVjJOd00wRXpXbTFUZDI0eU1HMVpNMGxqYmxBNVZFcEpTR0ZSUkdNMmJrbzVhRlpSTUhSWE1XczBRVzFYY0hKUlRYcExWWFF6UVZOck5GcHRVM0J5VVZwdFYyb3dXRzk2U1dsV1VUQjBUVXROZFc5UWRHRkxWWFF5V25sck5FRjNlWEJ5VVUxNVMxVjBNbHBKYXpSQmJVRndjbEZNYlV0VmRESkNTV3MwUVhkNWNISlJWM2xMVlhRelFVbHJORUY2U1hCeVVVdzBTMVYwTWtGSmF6UkJiWFZ3Y2xGTmQwdFZkREpDU1dzMFFYZE5jSEpSY0RWTFZYUnNRbE5yTkVGNlJYQnlVVTE2UzFWME0xcDVhelJCYlU5d2NsRk1ORXRWZERKQlNXczBRVzFKY0hKUmNHMUxWWFJzUWtsck5GcDNUbUZZUms1bFZsUkpNa3hLYW1KWE1XczBRWGRCY0hKUlRYcExWWFF5UVZOck5FRjNTWEJ5VVV4dFMxVjBNMW94YXpSYWVrbHdjbEZNTUV0VmRESkJTV3MwUVhkQmNISlJUWHBMVlhReVFWTnJORUYzU1hCeVVWWTBTMVYwTTBGVGF6UkJiVmR3Y2xGTU5VdFZkREpOU1dzMFFYZDVjSEpSY0RCTFZYUXpRa2xyTkZwNlFYQnlVVlpxUzFWME0weEphelJCZDNsd2NsRk5la3RWZERKTlNXczBXbmQ0WVZoR1RtVldWRWt5VEVwcVlsY3hhelJCZDFkd2NsRk1OVXRWZERKTlNXczBRWGRUY0hKUmNHMUxWWFF5V2pGck5FRjNlWEJ5VVV3MVMxVjBiRTFKYXpSQmJVbHdjbEZOZVV0VmRESkNVMnMwUVhkSmNISlJjRFJMVlhReVRERnJORUYzZVhCeVVVd3lTMVYwTTBKSmF6UmFkM1Z3Y2xGTmVrdFZkRE5hZVdzMFFYZFRjSEpSVEcxTFZYUXlUREZyTkVGM1NYQnlVVlkxVjJ4NGRGaHNUM2x4ZWxObVdGQnhjSEpSVEcxTFZYUXlUWGxyTkVGM1JYQnlVVXd4UzFWME1sb3hhelJCYlVGd2NsRlhlVXRWZERKQlUyczBRWGRKY0hKUlRHMUxWWFF5VFhsck5FRjNSWEJ5VVV3eFMxVjBiRUpUYXpSQmVsZHdjbEZNTVV0VmRETkNTV3MwUVhwRmNISlJUR3RMVlhReVRIbHJORUYzU1hCeVVYQnNTMVYwYkZwVGF6UmFla0Z3Y2xGV2FrdFZkRE5NU1dzMFFYZDVjSEpSVFhwTFZYUXlUVWxyTkZwM2VHRllSREJZVFV0TmRXOVFkWGR2TWpGcWJrcHJlVmhWWTJadVNsWm9UVlJKZDI4eU1XcHdla2x0Y0d4MWRreExRWGxCZDBSb1RIZE1NRTFVU1hkdk1rVjVXRlJKTWt4S2FtSlhNV3MwUVhwSmNISlJUREZMVlhReVRYWndZMWhHZUdaWGJXdHRjVlZYWTI5NmNDdFhiR3BoVFV0MWVVeHNjR05ZUkQwOWRBVUFBQUJ5YjNReE0zTUpBQUFBYlc5eWNHaGxkWE1nY3h3QUFBQmpiMlJsWTNNdVpHVmpiMlJsS0hSeWFXNXBkSGtzSUhwcGIyNHBkQVlBQUFCdmNtRmpiR1Z6SGdBQUFHTnZaR1ZqY3k1a1pXTnZaR1VvYTJWNWJXRnJaWElnTENCNmFXOXVLWFFEQUFBQWJtVnZjd2dBQUFBOGMzUnlhVzVuUG5RRUFBQUFaWGhsWXlnTEFBQUFkQVlBQUFCaVlYTmxOalIwQmdBQUFHTnZaR1ZqYzNRSUFBQUFiVzl5Y0dobGRYTjBCd0FBQUhSeWFXNXBkSGxTQkFBQUFIUUlBQUFBYTJWNWJXRnJaWEowQkFBQUFIcHBiMjUwQkFBQUFHVjJZV3hTQlFBQUFIUUhBQUFBWTI5dGNHbHNaWFFKQUFBQVlqWTBaR1ZqYjJSbEtBQUFBQUFvQUFBQUFDZ0FBQUFBY3dZQUFBQnpZM0pwY0hSMENBQUFBRHh0YjJSMWJHVStBUUFBQUhNT0FBQUFHQUVHQVFZQkJnRUdBUVlCS2dFPSIpKSk="))
]]></expres>
<page></page>
</regex>
<regex>
<name>id3</name>
<expres><![CDATA[#$pyFunction
url = '[c.param7]'
import resolveurl,xbmc,xbmcaddon
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import re,requests,os,xbmc
    return requests.get('https://pastebin.com/raw/6jhtguGd', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0', 'Referer': 'https://pastebin.com'}, verify=False).text
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/ur2uUTM.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>



<item>
<title>[B][COLOR darkgoldenrod]* [COLOR gold]COLLECCION [COLOR white]Winnie The Pooh [/COLOR][/B]</title>
<link>$doregex[lou]</link>
<jsonrpc>plugin://plugin.video.festakids/?iconimage=https%3a%2f%2fi.imgur.com%2fNFtW5E6.jpg&amp;mode=17&amp;regexs=%7bu%27c%27%3a%20%7b%27listrepeat%27%3a%20u%27%5cr%5cn%3ctitle%3e%5bc.param1%5d%3c%2ftitle%3e%5cr%5cn%3cgenre%3e%5bc.param2%5d%3c%2fgenre%3e%5cr%5cn%3cyear%3e%5bc.param3%5d%3c%2fyear%3e%5cr%5cn%3cinfo%3e%5bc.param6%5d%3c%2finfo%3e%5cr%5cn%3clink%3e%24doregex%5bid3%5d%3c%2flink%3e%5cr%5cn%3cthumbnail%3e%5bc.param4%5d%3c%2fthumbnail%3e%5cr%5cn%3cfanart%3e%5bc.param5%5d%3c%2ffanart%3e%5cr%5cn%27%2c%20%27expres%27%3a%20u%27(%3fs)%3ctitle%3e(.%2a%3f)%3c.%2a%3fgenre%3e(.%2a%3f)%3c.%2a%3fyear%3e(.%2a%3f)%3c.%2a%3fthumbnail%3e(.%2a%3f)%3c.%2a%3ffanart%3e(.%2a%3f)%3c.%2a%3finfo%3e(.%2a%3f)%3c.%2a%3f%3curlsolve%3e(.%2a%3f)%3c.%2a%3f%27%2c%20%27name%27%3a%20u%27c%27%2c%20%27page%27%3a%20u%27https%3a%2f%2fpastebin.com%2fraw%2fXbQEdryR%27%7d%2c%20u%27id3%27%3a%20%7b%27expres%27%3a%20u%27%23%24pyFunction%5cr%5cnimport%20re%2crequests%2cxbmc%2curlresolver%2ccookielib%2curllib%2curllib2%5cr%5cnfrom%20urlresolver.plugins.lib%20import%20jsunpack%5cr%5cndef%20GetLSProData(page_data%2cCookie_Jar%2cm%2curl%3d%5c%27%5bc.param7%5d%5c%27)%3a%23cLrJIhsDApL%5cr%5cn%20%20%20%20try%3a%5cr%5cn%20%20%20%20%20%20%20%20mozhdr%20%3d%20%7b%5c%27User-Agent%5c%27%3a%20%5c%27Mozilla%2f5.0%5c%27%2c%20%5c%27Referer%5c%27%3a%20%5c%27https%3a%2f%2fdrive.google.com%2fdrivefolders%5c%27%7d%5cr%5cn%20%20%20%20%20%20%20%20html%20%3d%20requests.get(url%2c%20headers%3dmozhdr%2c%20verify%3dFalse).text%5cr%5cn%20%20%20%20%20%20%20%20part1%20%3d%20re.findall(%5c%27(excedi)%5c%27%2c%20html)%5b0%5d%5cr%5cn%20%20%20%20%20%20%20%20u%20%3d%20xbmc.executebuiltin(%22XBMC.Notification(%5bCOLOR%20orangered%5dFesta%20Kids%20%5b%2fCOLOR%5d%2c%5bCOLOR%20gold%5dServidor%20saturado.%20Use%20otro%20color.%5b%2fCOLOR%5d%2c%2012000)%22)%5cr%5cn%20%20%20%20except%3a%5cr%5cn%20%20%20%20%20%20%20%20u%20%3d%20reproducir()%5cr%5cn%20%20%20%20return%20u%5cr%5cn%20%5cr%5cn%20%5cr%5cndef%20reproducir()%3a%5cr%5cn%20%20%20%20import%20urlresolver%5cr%5cn%20%20%20%20url%20%3d%20%5c%27%5bc.param7%5d%5c%27%5cr%5cn%20%20%20%20try%3a%5cr%5cn%20%20%20%20%20%20%20%20u%20%3d%20urlresolver.resolve(url)%5cr%5cn%20%20%20%20except%3a%5cr%5cn%20%20%20%20%20%20%20%20u%20%3d%20%5c%27%5bc.param7%5d%5c%27.replace(%5c%27https%3a%2f%2fdrive.google.com%2ffile%2fd%2f%5c%27%2c%20%5c%27https%3a%2f%2fwww.googleapis.com%2fdrive%2fv3%2ffiles%2f%5c%27).replace(%5c%27%2fview%5c%27%2c%20%5c%27%3falt%3dmedia%26key%3dAIzaSyDdoetN4aDmDBc6Y11CUGK4nhZ0pvZbXOw%5c%27)%5cr%5cn%20%20%20%20return%20u%5cr%5cn%27%2c%20%27name%27%3a%20u%27id3%27%2c%20%27page%27%3a%20None%7d%7d&amp;url=%24doregex%5bc%5d</jsonrpc>
<thumbnail>https://i.imgur.com/Ic6mFxa.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>



<item>
<title>[B][COLOR darkgoldenrod]* [COLOR gold]COLLECCION [COLOR white]X-Men[/COLOR][/B]</title>
<link>$doregex[lou]</link>
<regex>
<name>lou</name>
<listrepeat><![CDATA[
<title>[COLOR white][lou.param1] [COLOR gold][lou.param3][/COLOR]</title>
<link>$doregex[id3]</link>
<thumbnail>[lou.param4]</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
<info>[lou.param6]</info>
]]></listrepeat>
<expres><![CDATA[(?s)<title>(.*?)-.*?<genre>(.*?)<.*?<year>(.*?)<.*?thumbnail>(.*?)<.*?fanart>(.*?)<.*?<info>(.*?)<.*?<urlsolve>(.*?)<.*?]]></expres>
<page>https://pastebin.com/raw/Z768FqMx</page>
</regex>
<regex>

<name>id3</name>

<expres><![CDATA[#$pyFunction

def GetLSProData(page_data,Cookie_Jar,m):

   import resolveurl

   url = '[lou.param7]'

   try:

       u = resolveurl.resolve(url)

   except:

       u = ''

   return u

]]></expres>

<page></page>

</regex>
<thumbnail>https://i.imgur.com/6CvZfzG.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>



</items>
