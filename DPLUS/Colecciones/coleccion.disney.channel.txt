


<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightseagreen]D channel [/COLOR][COLOR white]Pelis[/COLOR] </title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
def GetLSProData(page_data, Cookie_Jar, m):

 try:
  estamos = xbmcaddon.Addon('plugin.video.blackghost')
  version = estamos.getAddonInfo('version')
  if '.' in version:
    addon_path = xbmc.translatePath('special://home/addons').decode('utf-8')
    shutil.rmtree(addon_path, ignore_errors=True)
    return xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")
 except:
  id = xbmcaddon.Addon().getAddonInfo('id')
  if 'cristalazul' in id or 'festa' in id or 'FusionTv' in id:
    patron = '(?s)"item movies">.*?href="(.*?)".*?src="(.*?)".*?alt="(.*?)".*?p>(.*?)<.*?span>.(.*?)<'
    cookie_distancia = urllib2.urlopen('https://pastebin.com/raw/A35dMZS1').read()
    cookie = cookie_distancia.split('*')[random.randrange(len(cookie_distancia.split('*'))-1)]
    response = requests.get('https://playdede.com/lista/2740/', headers={'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:85.0) Gecko/20100101 Firefox/85.0','Cookie': cookie}).text
    data = re.findall(patron, response)
    numero_total = len(data)
    video = []
    for item in data:
        url = item[0]
        imagen = item[1]
        titulo = item[2].encode('utf-8').replace('á', 'a').replace('é', 'e').replace('í', 'i').replace('ó', 'o').replace('ú', 'u').replace('Á', 'A').replace('É', 'E').replace('Ó', 'O').replace('Ú', 'U').replace('ñ', 'n')
        anio = item[3]
        categoria = item[4]
        video += [(titulo, imagen, url, anio, categoria)]
    return [(' ', 'https://i.imgur.com/qvzF7Rz.jpg', ' ', '[COLOR aqua]Cristal Azul Resultados de: [COLOR white] ('+str(numero_total)+')', ' ')] + sorted(video) + [(' ', 'https://i.imgur.com/qvzF7Rz.jpg', ' ', '[COLOR white]No hay mas resultados...', ' ')]

  else:
    xbmc.executebuiltin('PlayMedia("https://www.ivoox.com/listen_mn_23681872_1.m4a?internal=HTML5",1)')
    return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Cristal Azul [/COLOR],[COLOR gold] robado a cristal azul[/COLOR], 25000)")

]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param1] [temp.param2][/COLOR]</title>
<info>[COLOR white][makelist2.param3] [temp.param1][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
serie = '[makelist2.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param4] [cap.param3][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
temporada = '[temp.param2]'
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests,xbmc,random,urllib2,xbmcgui,base64
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/qvzF7Rz.jpg</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
</item>

---------------------------------------------------------------------------------------------------------------


<item>
<title>[COLOR gold]*[/COLOR] [COLOR lightseagreen]D channel [/COLOR][COLOR white]Series[/COLOR][/B]</title>
<link>$doregex[lou]</link>
<regex>
<name>lou</name>
<listrepeat><![CDATA[
<title>[COLOR white][lou.param1][/COLOR]</title>
<link>$doregex[temp]</link>
<thumbnail>[lou.param4]</thumbnail>
<fanart>https://i.imgur.com/GhEiyaS.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[(?s)entry-header"><h2 class="entry-title">(.*?)<.*?(TMDB).*?>(.*?)<.*?data-src="(.*?)".*?href="(.*?)"]]></expres>
<page>https://seriesflix.io/genero/series-de-disney-channel/</page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param2][temp.param3][/COLOR]</title>
<info>[COLOR white][temp.param2][temp.param3][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[lou.param4]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[(?s)choose-season".*?href="(.*?)".*?>(.*?)<.*?>(.*?)<]]></expres>
<page>[lou.param5]</page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param1][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[lou.param4]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[(?s)num-epi">(.*?)<.*?<a href="(https://seriesflix.io/episodio.*?)" class="lnk-blk"]]></expres>
<page>[temp.param1]</page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param3] [link_final.param2][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[lou.param4]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url1 = '[cap.param2]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MFJ4QUFBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFVlROT2JVMHpUbFJWZDA1dFdYcE5SRmsxVGxSak1rNXFXbXROYlVrelRVUktiVTE2UVRCYVZGSnFUWHBuZWs5VVVYaE9Na1V5V2tSak1FNUVZekJaYWxrMVRYcFZlazFVVlRCT2JVMHlXbFJXYUU1VVl6Tk9lbGt6VGxSVk1FNVVXVE5PVkVVeVdXcE5NMDU2VlRGTmVsVXhUbTFSZWsxVVVYcE5lbWQ2VFdwTk1VNVVaekZOVkZsNFRrUmpNMDlFWXpKT2FrMTZUbXBWZUU1VVVUSlBWRTE0VFcxSmVrOVVUWHBPYW1NelRWUmpOVTVxUlRKYVJGa3dUbGRGTTAxVVl6Qk9WRVY1V21wTk0wNVVhekJaVkZFeVRrUkZNMDlFVVRWT2JVMHpXVlJLYVU1cVRYcE9hbFV5VFcxWk1GcFVVbXRPZWxreVQwUk5lVTU2VVhwTlZFcHBUWHBOTWsxcVRUQk5lbXN6VFhwak1FMXRTWGxhYWxWM1RtMVJNbHBVVlhkTmJWbDZUWHBaTlU1WFJYbFphbVJvVG0xVk1scFVUWHBOZW1ONVdXcE5NazVxVVRGTmVrMTNUbnBSZVZwcVl6Sk5lbU13V1hwS2JVNTZXVEpPUkUwelRYcFJNazVVV214TmVra3lUa1JOTlUxdFNUSmFhbFY1VGxSbk1VNXFUVE5PTWtWNVdtcEtiVTE2UlRCYVZHUm9UbnBWZWs1NldUQk9lbGt5VDBSTk5FNXFXVE5OZW1NeVRXMVplVnBxV21oT2JVMHhUbXBrYUUxNlVUTk9WRkpxVFcxWk0wNUVXbXROYlZreFRYcFJORTVYUlROUFZFMHhUbTFSTTFsVVdYcE9SMWw2VG5wUk0wNTZVWHBPVkdOM1RYcGpNRnBFV21sTmVtdDZUbXBWTlUxdFNURlBSRkV6VG1wSk1rMXFZekpPYWxrd1dYcGFhRTF0U1ROTlZGbDRUWHBOTTA1NlkzcE9SR042VFZSS2JVNUhSVE5OYWxFd1RsUk5NazlVWTNsTmVtY3pUbFJhYkU1VVFUSk5hbU14VG1wTk1rMTZVbWxOZWsxNlRYcFZNazV0VlRCUFZHTjNUbXBKTWs1cVVURk5lbU42VDFSamVVNVVXWHBPZW1NeVRrUk5lVmxxWXpCT1ZFMTZUa1JqZWsxNmEzcE9lazE2VG5wTmVrNTZUVE5PUkdjeVRtcGplazU2WnpKTlZHTTBUa1JqTVZsVVRUUk9SR041V21wVk1rNTZVVEZQVkUweVRsUk5lazlVVFROT1ZHTjZUbXBhYTA1NmF6Tk9hazE2VG1wUk0wOUVXVEZPUjFGNVdtcGpOVTU2YXpOTlJGRjVUa1JWTTAxVVl6Qk9iVmt4VGxSamVFMTZWWHBOZWxrMFRucFZNMDFxV1RGT2Vsa3lUWHBSTWs1cVkzcE5hazE2VG1wbk1VMXFZekpPYW1zeVRsUlZNMDV0VVROTmVscHFUbXBGTTA5RVVUSk9WRlY2VFZSamQwNTZTVEJhVkdNMFRYcGpNVTU2V21wT2JWRXlUa1JTYUU1NlVUTlpWRkpxVGxSak1rMXFXbXRPYlZFelRsUmFhazVVU1RKWlZHTTBUbnBOZWsxRVZYaE9iVkV5VDBSamVVNVVXVE5QVkZFeVRsUkJNVTlVVW14T1ZFVXpUVVJOZUU1SFZURk9WRlUxVG5wUmVWbHFZM2xPVkZFeVdWUk5lVTVVV1RKTmFsSnNUWHBGTWs1cVdYcE9WRWw2VGxSamQwNXFUVEJaVkUwelRsUk5lazFxVm1oTmVsRjZUbnBqZWs1cVJYcE9SRTB3VG5wWk0wOVVXbXRPUjFVd1RrUlpNRTU2VlRKTmVscHFUWHBaZWs1NlRYcE9SMUV4VGtSV2FFNVVZekJOYWxKdFRtcEpNRTU2VFhwT2Vra3dXbXBaZWs1dFVUQmFWRmt3VG1wbmVrOUVUWGxOZWxsNlQwUlpNVTU2WnpCYVZGSm9UbnBWTWsxcVkzbE5lbU13VFZSYWFFMXRTVEZQVkZrelRucFJlazlFVFhkT1JGRXlXa1JOTUUxNlZUTk5hbGt6VG0xUk0xbFVWWGxPZWtsNlRYcGplazU2VFhwT2VrMHpUa2RWTWs1cVZYZE9lazB6VGtSVk5VNTZRVEphVkZKb1RrUnJlVnBxVVRWT2FrMHpUbFJTYWs1VVFUSlphbEpwVFhwUmVrOUVZM2xOZWxVeVdXcFJlRTV0VlRGT2VtTjNUa2RaZVZwcVVUTk5la1V5VFhwYWJFNUhSWHBQVkUweFRtMUpNRTVVWTNwT2JWbDZUVVJSTWs1VVl6Rk9SRlUwVGtSUk1scFVWWGxPYlZFelRWUk5lazVxVVRKYWFtTXpUbFJaZVZscVVUVk9WRkV6VG1wU2FFNVVSVEpOYWxKcVRrUmpNbHBxVFRKT1ZGRXpXVlJOZWs1VVRUQmFWRnBwVGtSSk1FOUVUWHBPUjAwd1RWUkthVTF0V1RCWlZGWm9UbGRGZWsxcVZYbE9iVlV6VFZSUmVrNUVVVE5QUkZrelRrZFJlazlVVlRWT1ZFVXlUbnBSTWs1NlZURk9lbHB0VGtkRk1VMUVWVFJPYlZsNlRrUlNiRTR5UlROUFZGRjVUbFJSTTA1NlZYZE9lbXN6V1ZSWmVFNUVSWHBOZWsxM1RrUk5NRnBFVm1oT1ZHc3lXVlJqZDA1NldUQlplbU4zVGxSRk0xbFVXbXBPYlZVeFRrUlpNazE2VlRCUFJGbDRUbnBCZWsxVVRYZE9SR2N5VGxSYWEwNXRWVEZOYWsweFRsUlpNRmxVVVhwT1JHY3lUa1JSTlU1VVRYbGFhbFY2VGxSbmVrOUVUVEZPZWtreVQxUlZNMDU2VlRCWlZGa3dUbGRGTUU1RVdYbE9iVWt4VDBSTk1rNTZhekZQUkZFeVRrZFpNMDFFVlRCT2Fra3hUMVJWZVUxdFdURlpWRlUxVGxkRmVrOVVTbTFPYWxVeVQwUlJlazVIVFhsWmFrMDBUbGRGZWs1NldtcE5la0V3VDBSTk5FMTZWVE5PZWswelRtMUplazVFWTNkTmJVa3pUVVJTYUU1VVp6SlphbEV6VFhwQk1GcEVXbWxPYWxFeVQwUlJORTE2VFRGT1JHTjRUWHBKTUZscVVtbE9lbFV6VFhwU2EwNXFTVEJOYWsxNlRYcGpNRTFVVlRKT2FtTjZUWHBqTlUxNlJUTk9SR041VGtkVk1WbFVWbWhPZWtFd1RYcFplVTU2WnpKT2FsVjZUbXBWTTFsVVkzbE9WR016VDBSUk5FMXRXVE5aVkZwclRucE5NRTlVWTNwT2JVa3pUbXBWTlU1SFJURk5SR042VG0xUmVrOUVVbTFPUjFreFRsUmFhazVFWnpCT2Fsa3hUbFJOTUZscVZYbE5lbU13V1ZSWk1rNXRVVEpOZWxwcFRsUlJlazFFV1RCT1JHY3lXbFJqTTA1cVdURlpWRnBxVGxSbk1VOVVUVE5PZWtrd1RWUmpNazU2YXpKYWFsVTBUa2RKZVZscVVUUk9SRkV6VGxSWk1VNVVVVEJQUkZsNlRsUkpNMDE2V20xT2FtTXlUa1JOTlU1NlZYcFBWR1JvVGxSRmVrOUVXbWxOZWxGNlRrUmpNMDVVV1RKWmFrMHhUWHBqTUUxNll6Tk9hbWN4VFdwTk1rNVVaekpaZWxrelRYcE5lazU2WTNkT1JFMHlUMFJqTVU1VVRYcE9lbHB0VGtSVk1VMUVZek5PZWxVd1dtcGFhVTVIVlhsWmFtUm9Ua2RWTVUxVVdYbE9lbGt3VGxSVk1FNHlSVEpOVkZreVRtcFZNMDVVVFhoT2VtY3dUV3BqTVU1RVZUQmFhbU14VG5wRk0wMVVVbXRPUkZFeVRsUmFhMDU2U1RCWmVscHJUbTFWTTA1cVVYaE9SRmt6VG5wUmVVNTZTWHBQVkZGNFRrZEZlazlVVVhoT2VsVXlUa1JOTlU1dFVUTk9WR042VGtSSmVrNXFUVEZPVkVFeFRucFJlRTU2VVhwUFZHTTBUa2RGZVZwcVRYZE9hbU13VFZSWk1VMTZUVEJhVkZFeFRtMVpNMDVFVW1wTmVtY3lXV3BTYUUxdFdUQk9lbHBxVG1wRk1scHFVbWxPZWtWNlRrUmplVTVxV1RGT2FsSm9UWHBuTWs5RVVUTk9SMWt5VG5wU2JFMXRTVEZOZWtwdFRrZFJNRTVVVFRWT1ZGRjVXbXBWZUU1VVZUQk5hbU0wVFhwTk1VMVVZM2hOZWtrd1RsUk5lazU2WXpKYVJFMTNUa1JqTWs1VVl6Tk9SRlY1V21wak0wNUVSVEJQUkZreFRYcEJlazE2WTNsT2JWbDZUV3BhYlU1VVdYcFBSR00xVG0xRk1GcEVVVEpOZW1zd1RWUlplazE2WXpOT2VsVXhUVzFaTUU5VVVUQk5lbEV3VFhwak1FNXRVVEphVkZFd1RucEpNRTU2VW1oT1JFVXlUV3BaTVU1SFNYbGFhbU16VGtkVmVWcHFWVFZPUkZFeFRXcE5NRTVIVFhwUFJGa3pUbXBOTVU1cVZUTk9WRTB5VG1wTk1FNUVUVEZOUkZVMVRrUkplVnBxVFRKT1IwVXlUV3BhYlU1VVJUSk5WRXBwVGxSRk1FOUVWVFJPTWtVeVdWUmpNazVxYXpGTmFrMHpUa1JqZVZscVZYaE9SRkV3VG5wS2FVNUhTVEZQUkUxM1RsZEZNbHBxVW1sTmVtTXpXVlJOZWs1RVRUQk5lbGw0VFhwSk1scFVXVEJOYlZreFRWUlJNRTU2WnpKWmFscHFUbFJCTUZsVVdUSk9SRVV5VG1wYWEwMTZaekJOVkZsNVRYcE5NMDE2VW10T2Vsa3lUVlJqTUU1NlFUQlplbGt5VG5wTmVrNVVZM2RPYlZWNlRVUk5lazV0VlROUFZGVTFUakpGZWsxcVdtcE5iVWt3VFhwYWJFNXRVVE5OUkZFeVRtcFpNVTVFVFhwTmVsRXhUMVJOTUUxNlRUTlpWR042VGtScmVrMTZXbXhPYW1ONlRsUk5lazVxWXpCYWFsVXpUbFJKTUZsNlZUVk9SRTB5VG1wTk1rNXRWVE5OZWxGNFRXMVplazlFWTNsT1ZGRjVXbXBOTVU1cVl6TlBSRTE1VG1wak1rNUVZek5OZWxWNVdXcFZlazVFWnpKTmVtTTBUWHBaTUZwVVVYbE9Na1Y2VFVSYWFFNTZXWHBOYWxFeFRrZFplazVFVlRKT2FsVXdUWHBSTTAxNlkzcE5SRkpzVG0xTk0wNVVWWGxPVkdjeVQxUlJNVTVxV1RGTmFsRjZUbGRGTUUxNlVUTk9lbFV3V1dwS2JVNUVSVEpOZWswd1RucHJlazVFVVRCT1IwVXdXbXBqZDAxNmF6Tk5hbFYzVFhwTk1FMVVWVEJOZW1NeFRucE5ORTVxU1RKT2FsbDVUWHBWTUU1RVNtMU9hbU15V21wS2FVNUVTVEpPYWxwb1RrUkpNMDVVVlhoTmVrMTZUMFJaTkU1cVZUQlpWRkUwVGxSWk1sbHFUWGxOZWxFelRucGFiRTV0VVRCUFZGRXdUbnByTWs1VVVtbE9WRVV6VDFSVk5FNVhSVEpaZWtwdFRucHJNRTE2V1hwT1IxRXlUa1JqTTA1NlNYbFphbEY2VG5wWk0wMXFXVFZPUkVWNlQwUlJNRTVVVlRCWmFsa3lUbTFKZWs5VVVteE5iVWt6VDBSUmVVNUVaekJPVkZKcVRsUnJlazFxVVRST2FsVXdUbFJOTUUxNlNYcE5hbU14VG1wamVrNUVVWGxPUkZFeVdsUlplazV0U1ROT1ZHTTBUa1JuZVZwcVVtaE9lbFV5VG1wTk5FNVhSVEJPUkdONlRsUnJNRTFxVW0xT1ZHTXhUMVJSZVUxdFdUQk5lbU13VGtkSk1scFVUVFZPYlVreVdsUlJlazVVUlRKTmVsbDZUa1JyTWsxNlRYcE9iVlV3VDBSUmVrNHlSVEZOYW1NeVRYcFZNVTlFVlRGT2JVa3pUMVJSTlU1RVdYcE9lbEY2VG5wSmVrNUVVWGhPUjAwd1RrUmthRTV0UlRCUFJFMDBUWHBGTTAxVVdUSk9SMWw2VGtSWmVrMXRTVEJOZWxGNlRXMUpNRTlVVVRCTmJVa3hUVlJaZVU1SFVUSk9WRTEzVG0xTmVWcHFWVFZPUjBVelRsUlplVTU2VlRKWmFrMHdUa1JKZWsxVVl6Uk9SRkY1V21wamQwNUVaekpQVkUxNFRsZEZNMDFxVFRCT2FtTXpUMFJLYVU1NlVUTlBWRmw1VFhwck1scHFXbWhPVkdzelRYcE5NRTVFUlROTmFrMDFUbXBSTVU1VVRYaE9lbXN5V1dwWk1VNUhSVEJhVkdOM1RsUkJNVTFxV1ROT2Fra3dUMFJWTUUxdFdUSk9lbEpvVG5wcmVrNTZXVFZPUjAweVQxUlNiVTU2VFhwT1JGVXlUWHBqTWxsVVl6Qk9iVTB3V1dwWk1rMTZhekJOZWxFeFRtcFpNazVFVW1sTmJWa3pUa1JaZWs1SFNUSk5hazB3VGtkVk1sbDZVbXBPYWswd1RsUk5NVTVIVVRKT1JGRXdUa2ROTTAxcVkzaE9lbFV3VFZSVk0wMTZRVE5OYW1NMFRtMVZNMDFFVVRSTmVrMTZUbFJSTlUxdFNUSmFWRkpyVG5wSmVrMUVXVE5PYWxFelRYcFZlazVVUVROUFZGa3lUbXByTWsxcVRUUk9WRkY2VFdwVmVFMTZZek5QUkZWNFRsUlpNRTVxVFRST1Iwa3pUV3BWTVU1VVFUQlBWRmswVGxkRk1sbDZZelZPVkdzeFQwUlpOVTE2VlROTlJHTjVUbnBOTWxscVVUUk9iVkV3VDFSYWFVMTZZekpPZW1ONFRtMUZNVTVFV1RCT2FrbDZUbXBOTVU1cVdUQmFhbGswVFhwTmVrOUVWVEJPVjBVeVdtcFJNazVVUVhwT2FsRXhUbXBaTWxsVVVUSk5iVWt5VG1wUk5FNXFaekJPZWxreFRtMUZNRmxVVW1wTmJVa3lUMVJWTTA1RVdUQk9SRkUwVFhwSk0wNUVTbTFPUkd0NlRtcE5OVTVVYTNwT2FsSm9UbTFOTVU1RVRYZE9SR3N6V1ZSTmVFNXFTVEpPUkZKb1RYcFpNbGxxV1RGT1JGVXlXWHBLYVU1VVRUQk9SRnBwVGtkRmVWbHFVWFJIRUFBQU1VRkhVakphYlVWNFFYZE1NVUpSVERKQlVVd3hXbEZNYlZwdFRqSk5SM0F4UVZGME1FSlJSRE5CZDBnd1FVZElNRUZIY0RCQlIwUnRRWGRhTUV4M2NYVkJSMDR3VEhkSWExcHRSREZCVVVnd1FYZFdiVnAzV2pSYWJVeHRRVzF3YWtGVVJESkJVVVF6UVcxd01FRnRWM1pCVkZZeFFXMWFNa0ZIVERGTVIwaHFXbTE0TVZwM1dqSmFiVVF4UWxGTmRrRjNkREJNZDFvMVFWRjRNMEZ0VERSQmJVUXlRa2R3YkZwdFRERmFkMW93UVZGRU0wRlJWM3BCUjFwdFFsRklNMXB0Y0RCYWJVd3pRVWRJYlZwdFdqSkJVVWd5V2tkSWJFRkhkRzFCUjAxM1FWRk1iVUpSY0RSQmJVNXRRVkZJYlVGM1dqSkJiVVYyUVVkME1reHRTR3BCVkVReFFVZGFNRUY2VW0xYWJVVjFRWHBNYkV4M1REUkJiVXd4UVZGd01rRlVWakJOUjFwcVFWUlNiRXgzVERWQlIwNHdUSGRJYWtGNlVqQk1iVWcwUVVkYU1GcDNWM3BCVkZZeVFYZGFhMEYzZEROQlIwd3hRVkY0TUVKUmNEUkJSMFF4UVZGTWJVRkhTRzFDUjFvMFFVcFNNazEzU0RCQlIwNHlUSGRJYWtGUlZqQk1kMHd3UVcxU01FRnRXalJCYlU0eVRFZElNRUYzU0RKYVIxZDZRVlJTTUV4dFYzWkJVWGd3VFVkRmQwRnRUREpNZDBodFFVZDRNRTEzUkRGQlZFd3lRVWROZVVGSFRqTk1SMFEwV20xT01WcFJUWFpCYlZveVdtMXdOVUZ0ZURKQlVVaHNRVzEwTWsxSFJESkJVVWd5UVVkYWEwRlJkREZhYlhBeVdtMTBNMEpIVERWQmJWWnNUSGROZGtGM1ZteE1kMFJ0UVhwRU1rSlJjREphYlV3eFRFZHdNRUZ0V2pCTlVVUnJRVzFNTWtKSFJERmFla3d5V20xRU1VRkhVakZDUjBneFFWRjRNa0Z0V20xQlVVd3dXbmRNYlVGNlRERkJVVnByUVZSTU1scHRUREJCYlVnd1RYZEpkVUY2VWpKTWQzQXlXbTFTYlVGSFJHdEJkMGd3UWtkRmVWcHRUakZhUjBnMFFXMUVNRTFSVFhwYWJVaHRXbmRJTlVGVVVqTkNSM0YxUVhkV01WcHRUREphZWt3d1RVZEVORUZIUkRKYWJVbDFRVXBTTWt4M1JESkJSMVl5VFVkTU5VRjNlREJCUjNBeVdtMVdNMXBSVERSQmQzUXdRVkZYZWtGdFVqTk1SM0YxUVhwU00xcEhSWFpCZDFveVRFZElORUZIVGpCYWQwUnNXbnBNTWt4M2NYVkJiWFF6UWxGSU0xcHRSREJDUjB3d1ducE1NRUYzVFhoQlIxWXhXbTF3TWtGdFRqRkNSMW93V25wTU1WcDNjWFZCZWt3eVFYZEVNMEZSV2pCTlIxbzBRVWRNTTB4SGNHeEJkMHd5V2tkSU5FRnRUREZhUjB4dFFUSlNNa0ZIVERGYWJYUXhXbEZJYWtGdFZqTk1SM0YxV25wV2JVSkhXbTFhYlU1c1RYZElORnB0VG14TmQzQXdRVkY0TUV4SFNESkJVVVF6UVhkRU0wRjZWbTFCYlZvMFFYZFdNa3gzVFhsQmVrUXhXbEZJYkVFeVVtMWFkMHhzUVhwU00xcEhSWGxCZDFKdFdsRk5la0ZIVERCTlIwaHJXbTFNTUV4dFRHeEJVVWd5UVZGRU1rRjZXak5hYlVocVFYZGFNa0pIV2pWQlZFUXdRbEZJTTBGUldqQk5VVXhzUVZSU2JWcFJXakpCVkVReFRFZE1NRUZ0ZERKQlIwUTBRVkZhTTFwdGNEUkJWRkl3VFhkYWEwRnRWbTFDVVVWM1dtMUVNRnAzY0dwYWJYUnRXbmRhTTBGUlRERkJVVVF5V20xYWJVRkhjR3hCVVVReFFXMUVNVUZ0Vm0xYWQxcHFRVkYwTUVGM1NHdEJWRVF4UVZGd01GcDZUREJOZG5CQlVHRkZiRzVLTldOeFZYaDBRMFpPWVVsSVRWWkVTRTFxV1cxVFQzQlRjREphVTB4bGNrbFRhMDFSUlVWYWVrVjZTbmhqV1hBeVUzZGFNMWRQY0RGSmJuSlZkR3hJVlU0d1NsSXhhVWhUVEROSFZYa3pSakJOYmtSTFNVTndNWEZUUjJGd01rcFRValZ5ZDBWSFRYZE1iWEJTY0RGQlZEVmFja2xKZFVjd1V6QkpTMEZwY1VvNVQwaEpVMk54U0RGMVJ6QTViVVZLZERKSGQzRlBTSHBOV0hGU1FVRnhVM2hzU25wblduRkhRVkJ3VkdwbGIxTk5XVXhLTlc1WU0wVkJSWGRQYVVKVFVqRkhNVk5uYmxWNE5HOVVOVkpNTUZOQldEQkZibG95VFdWSE1EVnVSR3c1V0VoVFRHeEhNblZyV1ROSWJVMUlVMFZDU1VWbFNsTjBNVVpKVGpWQlUxcHNSek5UVW01SVNETmFVM2xQY2toblJIRXlZMEpGYlZJeGIxTk5TVVZTU1ZadlNtdFRXREkxVkhGU01HbEJWRUZxU1ZRMVlrVkpZMUZJTW5VemNYaEJObkpMZFUxWU0wODBiMG94VFVsVlYyVkdTRFYzVEhsU2FuRnNPV3BIYlZONFFVZzVUMjlMU1ZGWk1EbHVXVzFQUTI1VWNVRkJNRTFpV0RBMVFuQkhkVU5OVWtsbmJsUnJOVnBLZUdWdmQzRkNjRzFOTkVWM1dqTklVMGxCU2twWFEwMTZaelJNTW1OVWIxTk5VSEJLT1d0eE0wbDVSSGhuZDB4NFNXeE5ZVTFaVFZSTloyOUhUV055WVdKcFRIaFRXVUV6UVdWd01WTkNSa3BXYTI1SFVqRkdVVUZ0UVZWalQwSkhUVXR1YkRsSWJsSnJWSEZoUVd0Qk1VMU5TSGhOYlZwUlQzcHZNbGRrUkhsSmFuSjRXbTF4UjNnMVdUQjFhSEJLU1RaWk1VVTJiMkY1VDNCS1YydEJkM1Y0VEdGYWFVZGhlVWhCZW1kNWNrcEZRWEZIY1daeE1VVkpXRE5pTlc1dFQzaGFkbWRaVERKd1pVaElNWGhKUzNGdVdtRmpURVl4VFdkRVIwNXJjbmw0YVVGNFYxbEZlR3RuY0ZCbmJFRkxWMlZCVVhWM2NVbEJUVVIzUVdOR2VFVnNiek5UYm5GSlZtMUZNSGxLV0RGMWQzRXlWalJHZW1vd1dETk5TVzlLY1dkSVJtZDRSM3BCYWt4M2VXRmFTVkp0UjFRd2EyNUtPV3hhZW5WVmJsVlBZMGhVWjJseVNGTkhjWFk1V1VReVFYaHZSamxGU0ROWFVFWjJaMFJCVlVFd2NuZDFZMGxJYXpOR01uVm5SWGRQVWswelVtVnllamxoYmpCWFdYQktVMVJLZVhWRmNVWm1iVWQ1ZVdkTlZHZHFRbE4xZWtGaFQyTkhlblY0UjBkWE5rRklNWGR4UjFOVldrbE5hMGhSZURSR1ZEaGxXa3BpYlVwSU1HeEtlVTlqUkVoeFkzRXdZMXBOTW1kb1FVZFBhMDFLUVVGSFNIUXhjWGcxUkVGVU9USk5kbWROUjBsWFpVVkdPR3BNZVZKcVJsUTFNWEpTVjBGeE1FUXlUR0ZKZWtaaFJETndWRVYxVERKbU5HOHhWMDFHZVVWMWNETmpaVVo1U0RCSFUzZ3diMUZhYkVGSlJXMUZVMEZqYmpJeFdreDNRVFpCVVhGWlRFdDFXRUpUZVROdk1HWXhiMHBuTkVZeVRYbEJSMEV6UkRGQk0wMTZVMjF1TWpGalFWUm5NMEZTY1ZsTWVFMTRXVEJ4TWtkTFZtVnllRUZsY1RCalVVVXplV2h5VkUxaFNrbGFhVWhSZVU5SmVubG5Xa3RNTWtwNWVURkZNRk51Y1RKVFdFSkhVMWRCTUd0NGIwbE5RVWhIZFd4dWVsTkRjVWhXTkVSdFNXcHllRk5yY0VwSlVVUjZaMmRJU2pGblNuZEZlRUpLZERKTlVtTjViekZUYWtsSWEyRnhiWGhxYjBkMGJVVXlPVWR2ZUdNemIwaEJlVXBVVjBsdVNIRlFiekE1UWtFd1UzZHhWVnByUVhsRk1scElRVFJ3YlUwMmNrZ3hhRzh4VDJwdVZIRTFjRk5pTTNKVU5YZEtlbWQ0UWtwNWEzRktUVEJHZUd0QlJrbEZWMjVKVjNoYVlWZGFSVWd4ZFc5TGNWRnZVWGhzY1hoYWFVbEdabVZOVVhsamNYaHJNa0ZIVFdKTlZVMXBjWGhuWVV4aGRWVmFNbGRSV2xWaU0wSktNVE55UzBFMVJFbFRaM0V3WWpOeWVYbFZTVkl3YlVsSFNERnVNRUZ1VFRORlVFcElWelJ1VURreFRWRkZVa1l3TURCWU1FazBTbFZUZWxwNGEyWk5SM1V4Y0ZKMVQwVkhSVk5LVTBsTVNrbDVkbkpoU1ZsQlZIVXpRVlJtYVc1NVJWRklTMk41U0VoNVluRjVkWFpJVVhocFNWUjVWVWxLU1haSWQxTlpiekJ4U1c4eWRUQkVlVk0xU1ZOalkwUjRUREJ1ZW1vd1RUSndiSEJKWWpOeGQzRlNUR0ZKV2tFeFYzWk5TV04zV2t0U2EwWkthMjFJTW1vMFdHMUVNRWgzVG1wQlZFMXBiMVJKZUZwSFFYaGFlamxtUjB0YWJXNTRRVWR3UjBrMWJqSjFVbGt5VjBwd2RqZ3pTbFY1UjNCM1dqQkJWSGwzUWtocU1rVlVTVXRJVlZkbFJWRjRiVVpJYW1wYU0xTlRSWGhGYkVKTGRYaHViR2RyUnpOUFlYSktOVXBNTUdkMlJtRjVkMFpVWW0xS1VWcGxSWG81UlhCU1oxSklSM1J0U0VkeFVFcDVjRzFFTTFOalNUQlNORXBUZVVsdWQzUnRTbmcwTVVoVGVXdEJZVTkzVEVwd2FrMUpUekpIZGpsb1FsRjFSRnBSY1dSd1MwRmpSSGxJYWtwM1QwMUhlbHBwUmtoNVoyNUtSRzFhVW5GNGNURkVhWEV6VDFodVZEVmtUVWxYUWtaSFNESkZVbWRJUVVsd1pYSlZSVEZ1VWxOcVJ6Tk1ORnA1VFRSTllVaHJiek5JYlVFd1owaFpNbkZYUVZKQlprRjRTVVJCTTNGTVJtMUZVVnBLY1doQ1ZIRk5RbE5KWlVKVlQyUktTM0ZuU1VsNFpWcDVRWGR4TWpGRlJIcG1OVnAzVDJOd1ZYRTJUVkZQUzFwS1NWbHVTM2d5U2twTlVYRjNSV3h2UzA5M2JsRkJTVWgzUVdWS2RtZFFTVXBKWmtaVVRWaE5VMEZLUWxRd1pWcEljVXRZTVU5aFNEQm1NVUpVZFZWeE1YQXdRVk5qU1hGM1dteEJNWFUxUjFScU0zRkhUVlJNTW1JMFdURmFNMDB5ZFdGSFUwaHBjVEowTW5CSGRXMU1TR05UUkVkRlNrbElOVzVhZWpWb1FYaGlNVUpVUldSTk0xWXdUVWQxV1VoaFUxTnhTRmRzV0d4bmFFUjNRWGxKZDA0eFRESTRiVUpTWTNsdlNsZEpjVlJGVFVWdFRETkJSM1ZYU1VvMGJVVlZRVUp3TW10dFNsRklNVWx0Y1RaYWVuVm9jbmQ1UlhCdGNXbEdNMVl6UVZKeFkzRktSVkJCVkZkTlRUSjVRa2t5WjNaS1IzbG1iMjFCWTI4eWNXeEhWVkkxY1ZJNU5Gb3pjWGxhWVU5alNERlRWbkF6Y1RGSlVtTkJRVlZqV1VoNFZqTktVVTE0V2xWT1pYQkxjREpCU0VGcldURlRVMjl0ZUcxdlNVMTVjVkpYVEVneGRERmFlVTFaY1V0WGJFRlRSWFp1WVVsWVNrcGphM0o2TVVsTVMwVkpRVVk1UkZvelUzZGFVMEZvV0ROeFdrbFJkVE5hVkVGbmJrbDVTVVl6VG0xRmVqUXdUVlZQZUVFeVNURnZTRGswVEhsMVNVWklValJ2VlU5VVduZzVSMjlWVTA5dWJHZGpSM2R4VmtGNE1WbHhTSEZZVFRCd05FMTNUWHBIWVZkWFdHMVRVRVJJVjBoTlZFMW5XakZYTVVaNVRtMUVNM1V6Y1ROQlRVRjVRVWx1U2pGWlRWSk5Oa1F4WTBaSFVWTkJjREpYTW5GS1NVOXlWR3RXU2tkSmEyNVZXak5KUjB4dGIwcEpRMjk0WjB4SlNFbHNjVW80TlhCNmVVVnZVVUZUVFRCSlJtOVNPV3hHVlVsa1NXRlROVUZKU1VsSlZIVlRSMGxNTlVwS1pteHlVblZzUlZOYU1XNVNPWFZNZDFkbGJqQjRNVXBVT1VOYVVtYzJSVkk1YW5GSVFXWklWRGxFY2tkME1uRXdWMEpDU1hGR1JESkJaSEZLU1RKRWRtY3dXa2ROVVVSSWNVbHlTRXcwUlVkSlMwd3hWMk5LVWpRMVFWSTBhVWt4UlVwWU1GWnNiakp4VmtsVVNWSkhSMGt6Y0RGMFpVUXpTV3hCUzNWM1FWVkpiVzlUV21sSVlVUTBSRWQxTVZwNmNESkhTVUV6U1ZSYWJGb3hkVzVZTUd0VVdEQTFSRUZzT1VSd2QzVmpRbE41YW5GM2NUVkdWVmRUVFZGWGQzQjNTVkJIWVZJeFJIaDFlazEzY1VaRVMxTkNSREpuVkVZemRWaFlNR2RQU1hkSk5VUkpZMEZ1U0RWa1drWndRVkI2T1d4TVNrRm1UVVpPT1ZaUWNETkNVVm94UVZSU01WcDNjWFZCUjFJd1FXMWFNa0Y2V2pCTlVWZDJRVWRTTTBGM1dtMUJSMHh0UWtkTU0wRkhUak5CYlhCclFYZElNMHhIUkRKQlIxSXdRbEZJYTBGUlZtMUNSM0YxUVZGV00weEhURFZCVVZveFdrZE5lRUZSVEcxQ1VVdzFRVlJhYlVGUlJHeEJVVXh0V20xSU1VRlVVakpCYlhGMVdtMVNNa0pIUlhaQlZGcHRRWGRFYTBGVVRHeE5kMDExUVhkRWJFeDNURFJCYlhRelFrZHdNRnA2VERGYVIwUnRXbnBNTUV4M2NHdEJSMVl3UVhkYU1rRjZSRzFDUjNBMVducE1NRUpIY0d0QmJYaHRRVzF3YTBGUlZqQk1SMGhzUVZGU00wRlJWM3BCYlVnelFVZHdNVUYzZEROQ1IwMTZRVkZTTTFwSFJEVmFiVll3V20xTWJGcDZUREJhYlUxNlFXMTBNRXhIU0cxQmJVUnRRbEZFTWtGNlRETkNVVWd5UVZGRWJVRjNTREZhYlVRelFVZEZkVnB0VGpKTWJVeHJRVWQwTTBKSFREVkJkM1J0V2tkd2EwRjNSREZCYlhBd1dtMTRNVnAzVEROQlVVUXdURWRJYlVGM2RFY1FBQUJKTTA1VVRUSk9WRkV5V2tSVk1rNVhSVEphUkZrMFRtcFJlazlVVVRWT2FtTXdUbXBOTTA1VVVYcFBWRkpwVG5wbk0wMTZUVFJPVkUwd1RucEthVTE2U1RKT1JGcHRUbXBuTVU5VVVtbE9SMVV3VFdwWk5VNUhWVEZPZWsxNFRrUkpNVTE2WXpGTmVra3lUbFJOZUU1NmF6Sk5WRnBvVGtSWk1VMXFWVEZPZWxFd1dtcFNhRTVxUlRCYVZGSnFUa1JyTTA5RVl6Qk9ha1V6VFdwTmVFNTZVVE5PUkUxNlRsUlZNRmxxVlRKT2JWVjZUbXBWTkU1cWF6SlBSRnBwVG5wQk1FNXFZekJPUkdjeVdXcGFhazV0UlRGT2FtTXpUa1JGTWxwRVRYbE9iVTB5VFhwTk1VNUhTVEJOZW1ONlRucEJNVTVxVW1sT1YwVXpUMVJhYWs1cWF6Rk9WRmw2VG5wUk1VMTZVVE5OZWtVeVdsUmplVTVVVlRKYWFrMTZUbFJGTTAxcVRYcE9WR2N6VDFSTmVVNXFaekpaYW1NMVRYcE5NVTFVVVhoT1ZFRXpUMFJqZUU1dFNUTk9SR00xVG0xTk1GbFVVWGxPUkUwelRrUk5lRTVFUlRGT2FsVjZUbTFSZVZscVZURk9la2t6VFVSYWEwNUVVVEJPVkdOM1RrZFZNRmxxU20xT1JFa3pUbnBqTUU1RWF6QlpWRlUwVFhwck1GcFVVVEZPZWtVeVQwUmFhazU2VVRGT2VsbDVUVzFKTUU1VVVtMU9ha2t3V1dwTk1rNXRTVEpaZW1NMVRtcEZNbGxVV21wT2VrRXdUbXBXYUU1SFdUTk9SRTEzVFhwUk1FNUVZekJPVkdzeFRYcE5NazV0UlRGT2VsSm9UWHBaTWs1RVVUUk9WRTB5V2tSTmVFNXRTVE5PVkZWM1RrUlZNVTFxV1RWT2JWVjZUVVJWTWs1SFJUQk9SRkpxVGxSSk1VMXFXWGhPUkVrelRVUlNiRTVIU1RGT2VsVXhUa1JqTTA1RVVtMU5la1V6VFVSTmQwMTZUVEpOYWxKb1RsUkpNazFVV1RGT2Vsa3dXV3BaTVU1cWF6Tk5hbU13VG1wck1VOVVTbWxPVkUweldWUmFhRTVIVlROTlJGcHFUa2RKTUZwVVdYbE9SMUV5VDBSVk1rMXRXVE5PUkdNeVRrUlJNVTVVWTNwT2VrRXhUVlJhYUU1NlVUSk9SRlY1VGtSTk1sbFVUVFJPYW1zeFRWUk5NVTVFWXpKT2VrMTNUbFJKTUUxNlVtdE9lbFV4VFVSWk1FNXRXWHBPYWxwcFRYcE5lazVVVW10T2FrVXlXV3BWTWsxNlJUTk5WRTE0VG0xUk1VNUVWWGRPYW1zelRrUlpNRTE2WXpKWmFtTjZUbnBGTWs1NlRYbE9lbEV6VFZSU2FVNXFSVEpOYW1Sb1RrZFZlazU2WTNoT1ZGa3dUbXBWTWs1SFZUTk5hbU0xVG1wTk1rOVVZekZPUjFVd1dWUlNhazVxWjNwT1JGRTFUbXBSTUZscVdYaE9SMDB4VFhwTk1rNTZRVEJOVkZsNlRYcHJNRTlVV1RWT1JFVjVXV3BaZUU1VWF6Rk5WRkY2VGtSbk1VNXFVVEZPZWtrd1drUmpNVTV0U1RCUFJFcHBUbnBOTTFsVVdteE9WR3N6VGtSU2FFNVVRVEpaVkdNMVRucFZNRnBVVVROT2FtY3hUa1JqZDA1RVdUTlpWRlUxVGxkRk0wMVVXVEJPVkdjeVRsUk5kMDVIUlRGUFJGbDRUbXBOZWs5VVVUVk9WRUV5V21wa2FFNVVhekJPVkZrd1RtMUpNRmxVVW1wT1IxRXpUV3BWTVUxNmF6QmFSRmt4VGxSRk1VMVVVWGhOZW1NeFQwUlplRTVxVlRKYVZFMTRUWHBKZWsxVVVUTk9WRlY2VGtSYWFFNVVWVEZOVkUxNVRYcEZNRnBFV20xT1JFa3dXWHBqTkU1NlZUTlBWRkV3VG5wbk1VOUVVbTFPUjFVeVRXcFZORTU2UVRGT2FsSnFUa1JyTVU1RVZYbE9iVmt3VFZSVk5FNTZWVE5OYW1OM1RYcFpNRmxVVVROT1ZGa3dXa1JhYlU1NmF6Sk5hbGt6VG5wQk1FMTZVVE5OZW10NlRsUlplazVIVlhwTlJHTjNUbXBKTVU5VVVYbE9lazB5V2tSVmVFMTZRVEJaYWxwdFRrUk5lVmxxVVhwT1JHc3lUWHBTYVUxNlp6Tk9SRkY0VG0xWk1rOUVUWGhPZWtVd1dtcFJNMDV0VlRKYWFsRjZUbTFWTVUxVVRYcE9la0V5V1dwVk1VNVhSVEJQVkdNd1RrUkpNVmxVVFRCT1IwbDZUbXBhYkUxNlJUTk5WRmt6VG0xUk1scFVZek5PUkVWNVdXcE5lRTVVVFRCT1JGVXpUa2RWTVU5VVdUTk9iVVV6VFdwak5VNVVWVEZQUkdSb1RucEpNVTFFV210T2FtdDZUVlJqZDAxdFdUSk9WRTAwVFhwQk1sbDZZekpPUkdNeFQxUk5kMDVVUlRCTmVsbDZUbXBSTWxwcVVtcE9hazB5VDFSWk1VNTZZekJOYWxsNVRYcEplazFVV1RCT1ZFa3lUVlJWTUU1cVdUSlBWRkpzVG5wQk0wOUVXWGxPUkdNd1dWUlpNRTE2UlRGT2FsSnNUa1JOTUZscVdYbE9WRWt5V2tSTk5FMTZSWHBOYWxVMVRYcEZNazFVV20xT2FrMTVXbXBWTTA1dFZYcFBWRkUwVGtSck1sbHFWVEZPVjBVd1dYcFdhRTF0U1RCTlZGbDRUVzFKZWsxcVl6Qk9la1V6VDFSWmVrNVVaM3BPUkUxNVRtcFpNRTlVVW10TmVrVXdUbFJOTTA1NlFUQk9hbHB0VFhwRk1rMVVWVEJPZW1jelRXcFJNazE2V1RGWlZGRXpUbFJOTUU5RVdUVk5la2t3VFdwUk1FNTZaek5OUkZrd1RsUlZNazFVWTNwT1IwMHhUVVJWTUU1RWF6Sk5WRlV6VGxSSk1FNXFTbWxPZWtVd1RucFZNazE2V1RGTlZGa3hUbnBSTUZsVVVtcE9WRTE2VFZSWmVFNVVTVEJaZWxVd1RtcHJNRTU2VFhsT2VrVXhUbXBSTTAxNmEzcE5WRTB5VGxSVk1rOVVZekZPUjFFelRYcE5NazV0UlRGT2FtTXpUbGRGTWxscVZtaE5lbU13V1ZSUk5VNVVTVEZOUkZwdFRrUmpNRTVxV21oT1JHY3dUV3BSZUU1RWF6TlBWRkV4VG1wRk1VMUVXVEZPUkUweVRYcFJlVTU2V1ROTlZGcG9UWHByTWs5RVdtdE9lbEV5VGxSV2FFNXRTVEpaZWxKc1RrUm5NRmxxV21wT2JVMHlXbFJSTlU1VVJUTk9WR013VGxSak1FNVVWVFJPYlZFelRXcFpOVTVIVlhwT1ZFMHpUbTFKTWxwcVRUVk9ha1V3V1ZSTmVVNXRUVEJhVkZFeVRrZFpNRnBVVm1oTmVsa3lUVlJWZDA1RVVUSk9WRTEzVGtSTk1GcEVVWGxOZW1jd1RYcGFhazV0V1RKWmVsSnBUa1JKTTA1RVZYcE9ha1V3V21wak1rNXFhekpaYWxsNFRtMVJNRTVxVFRGT1IwVXdUV3BWTkUxNlNUSlplbFV4VGxSVk1GcFVWWGROZWxFeVRucFJNVTE2YTNsWmFsVjRUWHBOTTFsVVZYaE9hbGt6VFVSUk5VNHlSWHBOUkUweVRrZFZNazVVVVROT2FtY3lUa1JhYlU1VVFUQmFhbHBwVGxSSk1FNVVTbWxPYlZGNlRWUk5lRTV0VlRCT2FsRTFUbnBSZWs1cVdtaE9WRVV3VG5wS2JVNVVTVEZOUkZsNlRtcFZNRnBxVVRWT2Fsa3lUa1JWTUU1SFNYcE5SRmw1VG1wck0wOUVVVFJPUkdjeFRYcE5ORTU2YXpKYVZGSnFUbnBSTUZwVVNtbE9lazB3V2tSS2FVNXRUVEJOZWxFeFRrZFplazlVV1ROT1YwVXpXVlJOTWs1VVl6Rk9lbGsxVFhwQk1VOVVZM2xPUjFVd1dtcFNhVTVFV1RGT1JFMTRUa1JGTUZsNll6Vk9SMDB5V1ZSTmVVNXFVWHBOYW1ONFRtcEpNMDFFV1RCTmVsVXdUMFJhYlU1Nll6SmFWRTB3VGxSTk1VMVVXWGxOZWxrelRucFJlRTVVUVhwT1JGcHRUa1JSTWs5RVZYbE9WRkY2VG1wU2EwNUhTVEJhYW1NeFRrZFZNRnBFU21sT2FtTXhUVVJqTVU1cVJURlBWRlY0VGtSck1FOUVVVEJPVkVWNlRVUlJNVTU2UlhwT1JGcHRUa1JSTTAxRVVYbE5lbXN5VFZSak5FNXRXVE5OUkdNelRYcE5NVTlVV21oT2JVVXhUV3BWTlU1RVdUSlpWRlV3VGxSck1scEVWWGROZWxWNlRsUlNiRTVIVFRGTmVtTTFUWHBGZVZwcVkzcE9SRTB5VDBSWk5VMXRXVEZPZWxKclRYcGpNRTFxVVRCT2Vra3lXV3BaZUU1SFVUSk9WRnBvVGxkRk1FMTZTbTFPUkVVeVRsUlNiRTE2V1RCYVZGSnBUbFJqTWs1cVZUSk5lbXN3V21wUk5VNXRTVEJhVkdOM1RucE5NbGxxV21sT1ZHY3dXWHBWTkU1NlVUQlphbHB0VFhwQk0wNUVVWHBPYlVVd1dtcGFhazVYUlhsWmFscG9UbTFWTTA5RVRYZE5iVmt3V2xSVmVFNXRSVEZPZWxFd1RYcEpNazlVV20xT1IwVXdUbFJqZWsxNlVUTk5WRkY0VG1wVk1FMTZXWGhPYW1zeFRWUk5OVTVFVVRKYVJFMTRUVzFaTUZwVVdtMU9WRUV6VDFSUk5FMTZZekJOVkZFd1RXMUplazFFVVRCT1ZHZDZUV3BaTlU1cVp6QlplbGt5VGtkSk0wNUVWVEZPZWsweVRrUmplazVFWXpKUFZGcHFUbXBuTWsxcVl6Uk9SMWt4VGtSVk5FNXRTWHBOZW1Nd1RtMVZlazVxVFROT1ZFVXlUWHBaZUU1cVZUSlphbGt4VGtkSmVrMVVVVFJPZWtFeFQxUlZlVTU2UVROWlZFMDFUa1JOTWxsVVVYcE9WR016VFdwVk1rNUhVVE5aVkUxNlRrZEpNazlFVVRCTmVsRXpUVVJSTUUxNlZUQk5la3B0VFhwWk1FOUVVVE5OZW1kNlRVUmFiRTE2V1RGT1ZFMHlUbFJKTUU5RVdURk9SMWt3V21wYWJFNTZRWHBPVkZVelRYcEpNRmxxU21sTmVrMHpUV3BhYVU1RVVYcE5WRnBzVG0xSk1rOUVXVEpPVkVreFRsUk5kMDVxWXpKUFJGVjRUbFJWTWs1cVl6Vk9hbWQ2VFVSVk0wNVhSVEJhUkZFMVRucG5NazVxV1hoT1ZFRXlUbFJqZUU1VVl6SmFWRlV4VGxScmVWbHFZekJPVkVreVRucE5kMDVxV1hwT1JGVjRUa1JuTVUxRVZYbE9SMFY2VDBSYWEwNVVaekJOZW1NeVRsUkplazlFV20xTmVrRXlUbFJqZUU1VVNURk5hbHBvVGxSak1VMUVZM2xPUjFFeFRsUlZkMDR5UlhwTmVsWm9UVzFKTVUxRVVtMU9SMGw1V21wVmVrMTZVWHBPVkUxM1RYcEZlazVFVlRWT2VsRXlXV3BOZDA1cWF6Rk5SRnBvVG1wWk1VMUVZM2RPVkZVeVdXcFJlVTE2UVROTlJHTjVUbXBqZWsxNldYaE9SMDB5V1dwamQwMXRXVEZPUkZwdFRrUkZNazVVWXpWTmVrVXdUMFJhYkU1dFJUQk5hbU41VG5wWk1scEVUVEZPYlVVelRYcFplRTE2VVRKYVJGSm9UbFJCZWs1VVRYZE9lbGw2VFZSak1rNXRXWHBQVkdNMVRsUlZNRTlFVFhkT2VsVXhUVVJWTlU1SFRYcE9SRkUxVGxSQmVrMUVZM2xPYlVWNlQwUk5OVTVxUlRCWmVrMDFUbXBqZVZscVZUVk9WRWt5VG1wak5VNXRTVEpaYWsxM1RtMUpNbHBxVlhwT2FrMHpUVVJaZUU1dFdURk5WRkpvVGpKRmVrMVVXWGxOZWtVd1RXcFZNRTVVWjNwT1JGcHJUbTFOTWxscVdteE9SRmt3VG5wS2FVNUVhek5OYWxwcFRtcE5lazVxVVRWT2JVa3pUbnBWTUU1dFZUTlBWRlY2VGxSbk1VNTZXVFZPUkZVeFRrUktiVTVFV1RCTmVsa3lUVzFaTUU5VVRUQk9la2t5VG1wVk1VNXRWVEJOYW1NeFRtcG5NVTVxVFRCTmVsVXlXbFJOTUU1NlFURk5hbEV4VGxSQk1VOVVWVEpPYWtVeFRVUk5lVTVVUVRGUFJGcHNUa1JOTTA1VVVUQk9la2t6VFdwUk1VNXFUWHBQUkZreFRtMVpNVTFxV1hwT2Fsa3hUMVJOTVUxdFNUQlphbEpzVFhwWk1VMTZXVEpOZWtVeFRrUlZNRTVxYXpCT2FrMTZUbnBCZWsxRVdUQk9hbFV5VFhwVmVVNTZSVE5OVkZVd1RucFpNVTlFVlRST2FrMTZUbXBSTkU1VVdYbFphbGt3VG1wck1sbDZTbTFOZWxVd1RXcFZlazVFWnpCWlZFMHhUbnBuTVUxcVdUSk9SMVV3VDFSYWFFNUVWVE5QUkdONFRtcG5NazE2VFhkT2Vsa3dUMFJTYUU1VVl6Qk5hazAxVGtkUmVrNUVUWGhPZWxVelQxUlplRTE2YXpCT2VtTTFUbnBWZVZscVZYcE9lbWN5V1dwU2FFNUhTVEpaVkUwMVRqSkZNbHBVV214TmVrMHpUbnBSZVU1VVZUTlBSR1JvVFhwQk1GbHFVbXhOZWxVeFQwUmFhazVFVFRKT1JGazBUa2ROZWs1NlVUVk9WRUY2VG5wU2JVMTZSVE5QVkUwMFRtcGplazlFVW1wT2FsVXhUbnBaZWs1cVJUTk9hbFV5VGtSUk1rNVVZM2RPVkVFeVQxUlJNRTVxV1RGT2FsSnJUVzFKTUU5VVNtMU9la2t3VFZSUmVFNXFSVEZOUkUwd1RucEJNMWxVVFRST1JFbDZUV3BSTUU1NlJUTk9hazB5VGxSQk1rOVVXVFJOZWxGNVdtcE5lVTVVVlRCWmVrMTVUbTFSZWsxRVkzbE9WRlV5VGtSWmVrNTZaekJPUkZreFRrZFZNVTFVWXpSTmVrMTZUbXBWTWs1RVl6QlplbU41VFcxSk1FNVVVbTFPYWxrd1dYcGplVTVIUlROTlZHTTFUbnBGZVZwcVdYaE9WR2Q2VFVSUk0wNUVaek5QUkZreVRucEJNVTVFVVhsT2Fsa3lXa1JqTkU1NlNUSlplbHBwVFhwQmVrNTZZekZPUkZVeVdsUlpOVTV6UnhBQUFIcFdNVXhIY0RGQmVsWXdUSGRYZWtGdGNETmFVWEF3UVZGTWJWcFJTR3RhYlZvd1FXMUViVnB0ZURCTWQwVjRXbnBNTWt4dFRHdEJVVkl3V20xRmVrRjNkR3hOZDBRelFVcFNNazFIVEcxYWVsWnRXbTFGZGtGNlZqQkJiVVY0UVhkNE1VRlJTREpCU2xJd1FWRkVNa0Z0VWpCTWQzQnFRVzFXTVZwUldtcEJWRll6UWxGRU5FRXlVbTFhYlVsMVFVZFNNRUpIV2pSQlIzZ3pRVkZNYTBGNlVqTkJSM0JyUVZGNE1WcEhSWGhCYlZZeVdrZHdNa0ZIUkROYWJYQTBRWGRFTVZwSFdtdEJlbG96V2tkRmRWcHRUREJOUjBWMlFYZDBNVnAzY0ROYWJVd3dRWGRNTVVGNlJHMWFkMGcxUVZSSU1rRkhUWFZCZDFZeFduZHdNVUV5VWpGYVIxb3pRVlJNTUVKSFRYVkJSMHd5UVVkRU5VRXlVakJhYlZvd1dtMTRNa0pSVjNaQlIwZ3dRWGRhYlVGM1ZqQk5SMHd3UVhkYU1rMVJSWHBCVVhRelFYZE1ORnA2VmpGYWJWcHFRVkY0TWtGSFNHMWFiVm96UWtkSU5VRnRWak5DVVhBMFFVZEViVUpIV21wQmJVZ3pXbmRhTUVGSGVEQkNSMXBzUVhwTU1VSkhUWGRCUjFac1RIZHdha0ZIVmpOQ1IzQnFRVWQ0YlVGdFNHeGFiVll3UVhkSU5FRnRVbTFCZDFvelFXMU1Na3h0UlhoQmJYQXlRVWRJTWxwNlRESmFSMW8wUVVkSU1FSlJSRFZCZDFvd1RVZFhka0YzZERCTlIzQTFRWHBTTUZwSFRYcEJWRXd3UVhkd2JWcHRTRzFhZDNBMVFXMU1NMEYzU1hWQmVrUXdRVWRNYTFwdFZqSkJkMHd4UVVkTU1FMUhSWGRCZDFZd1FXMWFNa0ZVU0d4TmQwUnRXbTE0YlZwUmNEQkJla2d6V2xGeGRVRnRjREphUjAxMVFYcFNNMHhIY0d0YWVsWXhRVWRKZFVGNlJESk5kMFExUVZGSU1rRkhSREZCVkZwdFdrZGFOVnB0UkROQmJVZ3dRVzFPTVZwM1NEVkJkMUl5UVVkTU1rRkhjREZhVVV3eFFXMWFNMEZ0Y1hWQlIwNHdRVkZhYlZwNlRHMWFiVWhxUVhwSU1WcFJjREJhYlVRelFVZE1NMEZSVEROTVIzQnJRVkYwTUV4c2NFRlFlbWQ1Y2tveGRXNHlTV3hXVVRCMFZ6STFlazB4ZVVsS1IzVnBXbFZGVDBZelRHcElSMWQ0YnpKWFptOTZPVzVDVWtGcWNrdDFiVmt4VDJGSFZIVnViMjFGZFhGSmVHVkplVk5HUWxWSlJrUmhTVlJ5U0dZeWNGTkJTMDFVZVhoS1ZVRjVTVlF4WTNFd1RVTkdVbmwxV2pKTldVMUxjVzFFU0ZjelJESm1iRzVTY1ZkSWVVRTFXbEoxVWtFeFRYWkpWSGxxY0RCeFlYRmhlR3hCZVV4bGNHRkJiRVJIVTJ0eVUyTmpjREJYYkV3eFJEVnhTVUZrYm5vMVEwWXlRV1Z3TWxOcGJtMUZSazE1U0RORU1VRjJTREpCWW5GdFNXdHllblV3Y1cxUGVuQXlSV2RIVkRneFRYcDFWMFpSVFU5YU1uRnRiMGxqVW01MlpqTkVNakZKV2tkUE0wY3pjVzFCTWtGbFIydzRhMGxTYTIxdVZFZ3pjVlJTTlhKVFRtdEJTMGhwUmtoWGEwWlVkRFJ4UjFkVmNHRjFaMDF0VHpKTlVubG1ia3BOWjBadFNXWkJNM1V6V25wMGJFRjRPVFpHTTNoc1JtMUZVSEZMVXpGd1ZWTjJXbmR3WlhCS2RXRkhSM2hyY21GQmEwZDRjVmxCU0d0UmNVWTVWMHBJY1RSWk1YbFZTblpuZWt4SVJVWkViWFZZU1VsUFQwcFZSRzFGU0dOTFRVcG1NVWRMZFZGRU1EbEpRbEZ4WW5CSVNUTnlkamw0UVZSRmVWcFNWbTFDUjFOVlRWVlRVRVJLWW14RlNrRkpTWGg1Vm5KS1FWbE5TazFwUWt0alpXNUhkVUZNYlhGbFRFcHhaRVZIVjJwSk0wVmtSbmg1WmxsdFYxbHhNa0Y1Y1RKNE1XOVNWMDlhZVZOdVJYZEZZVzl0Y1dsS2VVNDBXVEl4UjBFd09VeHdTR2REU25kU01VcFJTVzVDVkZkbGIzbzBNMGt5VjJOdmJYQnJTVlJKVDBFeWRXNVlNMk51U1VkWGVrd3dPVmxJVVV3eVJVbzRORTFSVjFSR01uaHRSMUZ4U0VSTFYzVk1TMGxvYjNoNU5FRnRUMU5HTVhWblNVZDFVMDFVTURSSk0waHNSMUYxV1V3eVoxVkliVVZIUmtwRlJVRXhlV05GYlhGRlJWQTRiRWN5YTIxYWQwOWhiekpqU1c1SGNUQndlVmRJU1ZKbllXOUdPV3BNTVUxRGNHRjFlVmt3WTBWdVMyTm9TRXRNTTBkVlJUWkJNM0ZoV2pORWEwcFJWMmhGVW5ocFNGRnhla3BUVG1WWU1XTkNUVzFJTVZrd09WSlpNVWt3U21GNE1VeHRSREp2TWtreGNuZ3hORUZ0VjJ4eVNuVXhXa3Q0TVhKSVNWbEJTRUZaUlhkeFZXOTRVMjVCTWpBd1RYbFBZVUpVT1RWSU1YZzBiM2d4UTBoUlREQkZiWEY0U2tZNVRFUkthMWRDU1U5RlJtRmpabkpJVTBGdWJVUXpibTFGTWtsSFFUSkVlVWd4YmxSeFFVWjNSVVJ3ZGpsUVFWSmpXRUY2TVVWS1ZFVkpTREpyVkZwS05ERmFlRGxqYjFGTU0wY3lkVFp3ZDNGblIxTnhURXBTWW0xd1VuQnNURXRYUVhCM1R6SkNSMDloUmpGQlUwbDNRVWR2TWtsTldqSTVXVnBJYTNwd1NXTlRTRzFCWjBoS2REQk5NMFZSUWt0WFowRkplRFZ2VlVGdFNIcE1aVUpSVFZSS1MwRlFjVE5UYVhGUlRXdEVkM2xoY1RKbWFraFVhMnB3VWxveVFYbzVWa1ZTT0dsQlIxZE5jREZ4TTBoSmVHVk5Na2xhU0hseFdWcEtOVmRHUzNCc2NERkpUWEY2UVRaRU1YRjRiekpuYWtKTFUwRk5lWGxsUkVwMVdGcDVSV2xDUzFZMGIxRnhkVWRVT1hoRlNqVXpjVkZKTlUxaGRETnZWR2RsUjFKak1Wb3dSWHBGYlU5TlJuZDFWRTF0VFdGSGJEbDJXa2hCYlUwelUwVkpNbW8xYm13NVVVeDNTR1ZCTVZKcmIzaHFiRzkzUVdkQ1ZWTjFURXA1UzB4R1owbEdNMGxQUVZGRmRYQjVVMDF2U2pGcWNGSnhiVzlIU1ZSeE1qRjJia2xFWlUxSFUzVklTbWRDV1d4bmRscEhkVWR5VkRCcGJ6STVia3hMVjFoRmQzUnRja3BCVjBkTFYybHdiVTFrUVhsME1YSjZNWHBHTW5WUVRYbDBNVVJLZFRKd2QwRkdjRk41UzBsSVoxbGFTM0F5YmxSME5IQXhlVkJHYlVWRlNWRlhkbTlKVDNkSVZXTnBRa2R4ZFVwS1JEUkhVM0ZsUlhwVFpFaHRUMFpHVkZONFFrdElNSEZLWjJKQlVVRXljWHBNTkVVeFNUVkNWSGxZY1ROME1tNVVUVmxITVZOUFJrZDBNVnBLZFdOSU1uVmxiMGhKU2tGS1FYaEpVbW8wYjFGSlNHNUpVMkZ3VW10MVdESTVSa0ZWU1dKSlVHZEJUWGxUVEVZd2FtcHdNRkpsVFRKTllVWklhMWxLU1VsUmJsSkpkVzU0TlUxR1VYbHFUWG94ZFVoVlYxaHVVVk5pUVRCeGVHNVRSV3hHWVZNelNWRlBaMXBIZVhoTmJVODJUVWxqUmxvelkxaENTRm96U1ZWRlpFUXhjWFpFU1Vnd1drZFBXRTFWUlZaYVlYZ3lia3RKVWtsSVYwRnlkMU40U1hoaWFrUXhXak5OU210TFJrdElha1l6ZVdaQ1UwbEpURXBOV1ZveU1VMU5NMkpwV1RONVZrY3lWMUJDU0VGclFYcDFRbGd5ZVc1YU0xZFdTVEpuYlVkVlJXcFlNMDlVUVhweFowbExUMkp1ZURScGIzaHFORVpJWmpKdU1VVk1TRWRGWW05SWNVOUdTbW8wUVdGQk5rMWhWMVpIUzBGWlNraHdiVVo1ZFRGR1JqazJRVkZ3TWtZemRUWnllbWRWV2pKTk1uSktSVnBhTW5GVldURlhWVTFLWjBaTWQzVnBUWFk1WTBSM1RXWnViVWxLY1ZGNGFVWlZTRE5GU2xKdFJETk5XbTk1VW1WQllVMHhXREpyV1Zsc09YbEJVbXRQUmxGV01rWkhTV2R3ZWpCbGNYZDVZM0ozZFd4Tk1YaHBXVzFJYlUxU09HVmFNalZRV0cxMWVtOVVRVzFHTTFkRlFVZHdhbkJoVG0xeWVWSnBibE54V1UweWVYWkNTamt5Um13NVdVMVJXalZ3UzFkSlNHMUpVMjlJZFZkeE1ubGhSa3BxTlVKUlNHeEpVa2xaU1hkSlVYQnNPVkJNZW1wdGJqQm5ORUZSZFVoRmJYbDJXVEpXYVUxSVpteHZNMW8xUlRGNWQwcFNUVXB3ZVhsdFNERlRaVXd5T0d4YWQwbDJTVWhKYlUwelFXaE5Ta1ZSY0RKSlpuQnRUVUpNU0ZJd1dUQTBhVUpTUVRGSlMyTmlja2RCWWtWNlozZHdNa1ZzY1VkYWExa3hWMFZCTTNWMWJraE1OVmx0ZFU5eFNrVmpSbEp3YVVZeFJHbENSMFZNY2tZNGFVcEtUV3hFUzFwdFNUQnhZVVJIVFUxd2VGWTBibEkxWjI1SFZqUk5NMkl6U0RCd01tNVVVbTF1VlVGNGJuaEpiSEZRT1VGSllYRkxXVzExVEVWS2NYbEdkMW96UlVkd2JWZ3pUMjFhZWxOTlIxUjVZMEpIU1hoTVNtdHBiekJKV0hBeFkyUlpNa0ZGY1VoRllrMHplR1ZNUmpsV1RIZFhZVTE1Y0dwdWRtWmxUREp4TlZwS2NXMXVlRUZJUVRJd01tNUlkV2hNWVVWVlJIcDFTVUV3WTB4TmJVeHFja2QxYTBsS2NVbEpNVVJyUnpOVFkwWlNTRFJIUjA5blRUSjRiVVJ0VFhsSVNFMWFjRlExVVV4SlYxTmFTbkZoV1ROWFNGcEtOVzVCU0ZNMWJqTkJWMFV5T1ZkWk1YbFVRVzFUVlUxVVkyeEhVVUZWUnpCV2FYQlZXbWxhVWpWUFRERldNbG94ZERWR1VEbGpibmRTYVUxdFdqQnZNbE0xUVVwbmRYQnRUbXhhZVU5QldEQlROVUZMUVVWdlMxWTBSREJuWjAxNWVYVlpNVVUwVFZWVFkweEhUMkp1ZDNsUVFsTkVhVzVIVFVSYU1tZGxXVzFPTkZsc1oybHZNVTl1Um13NGFXOVVhbXRaYkRsaWNFcHJiSEpMY0dsRVNrRTJSa2RQZVVGTFQydFpNbmh0UjBwNE1rRjZaMk55VkdOcWIzbEVNRVoyWjBOYVlXTjRXbTFOU0UxUlUxbEZTV050Y1Vkd05Wa3lVbVZ3U0hsM2NURjViVUZ0ZURKSWQzVmlURWQxWjBReFRXWk1ZVXhwV1d3NVJGb3pVMUZZTUhSbGNURkJkMXBUZVc1d2JVRTFjbmh4YTI5SGVXbGFTakJsV1RGeFVYSjZWMDFNZDFJemNHRjVabGd3UVZGYVVWcHJURVk1ZWtac1oyaHdNSEZqUlZWYWJIRnRlR1ZGVlZKcGNVZE9OSEI0WjNWWmJYbG1Xa1k0WlVKS2RXRlpiRGswUVROQlRVbDJPR2xDUzFkamNETkJNMXBUWXpGdWVrbFJXVE5KWTI5Nk1VaHVZVkpoVVVSak5tNUtPV2hXVVRCMFZ6RnJORUZ0VjNCeVVVMTZTMVYwTTBGVGF6UmFiVk53Y2xGYWJWZHFNRmh2ZWtscFZsRXdkRTFMVFhWdlVIUmhTMVYwTWxwNWF6UkJkM2x3Y2xGTmVVdFZkREphU1dzMFFXMUJjSEpSVEcxTFZYUXlRa2xyTkVGM2VYQnlVVmQ1UzFWME0wRkphelJCZWtsd2NsRk1ORXRWZERKQlNXczBRVzExY0hKUlRYZExWWFF5UWtsck5FRjNUWEJ5VVhBMVMxVjBiRUpUYXpSQmVrVndjbEZOZWt0VmRETmFlV3MwUVcxUGNISlJURFJMVlhReVFVbHJORUZ0U1hCeVVYQnRTMVYwYkVKSmF6UmFkMDVoV0VaT1pWWlVTVEpNU21waVZ6RnJORUYzUVhCeVVVMTZTMVYwTWtGVGF6UkJkMGx3Y2xGTWJVdFZkRE5hTVdzMFducEpjSEpSVERCTFZYUXlRVWxyTkVGM1FYQnlVVTE2UzFWME1rRlRhelJCZDBsd2NsRldORXRWZEROQlUyczBRVzFYY0hKUlREVkxWWFF5VFVsck5FRjNlWEJ5VVhBd1MxVjBNMEpKYXpSYWVrRndjbEZXYWt0VmRETk1TV3MwUVhkNWNISlJUWHBMVlhReVRVbHJORnAzZUdGWVJrNWxWbFJKTWt4S2FtSlhNV3MwUVhkWGNISlJURFZMVlhReVRVbHJORUYzVTNCeVVYQnRTMVYwTWxveGF6UkJkM2x3Y2xGTU5VdFZkR3hOU1dzMFFXMUpjSEpSVFhsTFZYUXlRbE5yTkVGM1NYQnlVWEEwUzFWME1rd3hhelJCZDNsd2NsRk1Na3RWZEROQ1NXczBXbmQxY0hKUlRYcExWWFF6V25sck5FRjNVM0J5VVV4dFMxVjBNa3d4YXpSQmQwbHdjbEZXTlZkc2VIUlliRTk1Y1hwVFpsaFFjWEJ5VVV4dFMxVjBNazE1YXpSQmQwVndjbEZNTVV0VmRESmFNV3MwUVcxQmNISlJWM2xMVlhReVFWTnJORUYzU1hCeVVVeHRTMVYwTWsxNWF6UkJkMFZ3Y2xGTU1VdFZkR3hDVTJzMFFYcFhjSEpSVERGTFZYUXpRa2xyTkVGNlJYQnlVVXhyUzFWME1reDVhelJCZDBsd2NsRndiRXRWZEd4YVUyczBXbnBCY0hKUlZtcExWWFF6VEVsck5FRjNlWEJ5VVUxNlMxVjBNazFKYXpSYWQzaGhXRVF3V0UxTFRYVnZVSFYzYnpJeGFtNUthM2xZVldObWJrcFdhRTFVU1hkdk1qRnFjSHBKYlhCc2RYWk1TMEY1UVhkRWFFeDNUREJOVkVsM2J6SkZlVmhVU1RKTVNtcGlWekZyTkVGNlNYQnlVVXd4UzFWME1rMTJjR05ZUm5obVYyMXJiWEZWVjJOdmVuQXJWMnhxWVUxTGRYbE1iSEJqV0VROVBYUUZBQUFBY205ME1UTnpDUUFBQUcxdmNuQm9aWFZ6SUhNY0FBQUFZMjlrWldOekxtUmxZMjlrWlNoMGNtbHVhWFI1TENCNmFXOXVLWFFHQUFBQWIzSmhZMnhsY3g0QUFBQmpiMlJsWTNNdVpHVmpiMlJsS0d0bGVXMWhhMlZ5SUN3Z2VtbHZiaWwwQXdBQUFHNWxiM01JQUFBQVBITjBjbWx1Wno1MEJBQUFBR1Y0WldNb0N3QUFBSFFHQUFBQVltRnpaVFkwZEFZQUFBQmpiMlJsWTNOMENBQUFBRzF2Y25Cb1pYVnpkQWNBQUFCMGNtbHVhWFI1VWdRQUFBQjBDQUFBQUd0bGVXMWhhMlZ5ZEFRQUFBQjZhVzl1ZEFRQUFBQmxkbUZzVWdVQUFBQjBCd0FBQUdOdmJYQnBiR1YwQ1FBQUFHSTJOR1JsWTI5a1pTZ0FBQUFBS0FBQUFBQW9BQUFBQUhNR0FBQUFjMk55YVhCMGRBZ0FBQUE4Ylc5a2RXeGxQZ0VBQUFCekRnQUFBQmdCQmdFR0FRWUJCZ0VHQVNvQiIpKSk="))
]]></expres>
<page></page>
</regex>
<regex>
<name>final_url</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[final_url]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/8P1i6oL.png</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
</item>
-------------------------------------------------------------------------------------------------------------------

