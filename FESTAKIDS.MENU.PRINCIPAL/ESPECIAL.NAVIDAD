<?xml version="1.0" encoding="UTF-8" standalone="yes"?>

<item>
<title>[B][COLOR gold]VUESTRAS CREACIONES[/COLOR][/B]</title>
<link>http://ignorame</link>
<thumbnail>https://i.imgur.com/fcMtyL0.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<externallink>https://pastebin.com/raw/H2TAs5Fs</externallink>
</item>


<item>
<title>[B][COLOR red]DIA 01[/COLOR] [COLOR white]MENSAJE DE PAPA NOEL[/COLOR][/B]</title>
<link>$doregex[id3]</link>
<regex>
<name>id3</name>

<expres><![CDATA[#$pyFunction

def GetLSProData(page_data,Cookie_Jar,m):

   import resolveurl

   url = 'https://ok.ru/video/2044667562660'

   try:

       u = resolveurl.resolve(url)

   except:

       u = ''

   return u

]]></expres>

<page></page>

</regex> 
<thumbnail>https://i.imgur.com/TanrSTX.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>


<item>
<title>[B][COLOR red]DIA 02[/COLOR] [COLOR white]MANUALIDADES[/COLOR][/B]</title>
<link>$doregex[link_inteligente]</link>
<regex>
<name>link_inteligente</name>
<listrepeat><![CDATA[
<title>[COLOR red]+[/COLOR] [COLOR white][link_inteligente.param1][/COLOR]</title>
<link>$doregex[id]</link>
<thumbnail>https://i.ytimg.com/vi/[link_inteligente.param2]/hqdefault.jpg</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = 'https://www.youtube.com/watch?v=HqgvCuu82IA&list=PLHIVSRNAg7cko8jRghW71fiho-TWyQ-2j'
import re,requests,xbmc
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cPrLItsLTfakl
 
  if '=' in url[:7]:
    if 'canal' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
    elif 'lista' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
    elif 'enlace' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
        html = url + '2018CristalAzul'
        enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
        return [(titulo, enlace)]
    else:
        return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Error [/COLOR],[COLOR white]Enlace Mal puesto[/COLOR], 4000)")
  elif 'channel' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/c/' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/user' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'list' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
  else:
    titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
    html = url + '2018CristalAzul'
    enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
    return [(titulo, enlace)]
]]></expres>
<page></page>
</regex> 
<regex>
<name>id</name>
<expres><![CDATA[#$pyFunction
import resolveurl
def GetLSProData(page_data,Cookie_Jar,m):
  url = 'https://www.youtube.com/watch?v=[link_inteligente.param2]'
  return resolveurl.resolve(url)
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/dzvFmjW.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>



<item>
<title>[B][COLOR red]DIA 03[/COLOR] [COLOR white]ESCRIBIR CARTA A PAPA NOEL[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=BvbsvthaNg8'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
<thumbnail>https://i.imgur.com/Ae9ouvV.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>




<item>
<title>[B][COLOR red]DIA 04[/COLOR] [COLOR white]SESION DE CINE[/COLOR][/B]</title>
<link>$doregex[c]</link>
<regex>
<name>c</name>
<listrepeat><![CDATA[
<title>[c.param1]</title>
<genre>[c.param2]</genre>
<year>[c.param3]</year>
<info>[c.param6]</info>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[c.param4]</thumbnail>
<fanart>[c.param5]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>multi_server</name>
<expres><![CDATA[#$pyFunction
url = '[c.param7]'
import xbmc,xbmcaddon,xbmcgui,re,json
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[multi_server]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUJRQUFBQU1BQUFCREFBQUFjMEVBQUFCa0FRQmtBQUJzQUFCOUF3QmtBZ0JxQVFCa0F3Q0RBUUI5QkFCa0JBQnFBUUJrQXdDREFRQjlBQUI4QXdCcUFnQjhCQUI4QUFBWGd3RUFhZ01BZ3dBQVV5Z0ZBQUFBVG1uLy8vLy9jeFFBQUFCaFNGSXdZMGhOTmt4NU9XbGhXRkYxWWtoclBYUUdBQUFBWW1GelpUWTBjeUFBQUFCTU1FNTJZbTFXYW1SSE9YbGFXRTVtVVROS2NHTXpVbWhpUlVZMlpGZDNQU2dFQUFBQWRBY0FBQUIxY214c2FXSXlkQVlBQUFCa1pXTnZaR1YwQndBQUFIVnliRzl3Wlc1MEJBQUFBSEpsWVdRb0JRQUFBSFFSQUFBQVR6QlBNRTlQTUU4d01FOVBNREF3VHpCMEVRQUFBRTlQVDA4d1QwOVBNRTh3VHpCUE1FOHdkQkVBQUFCUFR6QXdNREF3TUU4d1QwOHdUekJQVDFJQkFBQUFkQkVBQUFCUE1FOVBUekF3TUU5UE1EQXdUMDlQTUNnQUFBQUFLQUFBQUFCekJnQUFBSE5qY21sd2RIUU1BQUFBUjJWMFRGTlFjbTlFWVhSaEFRQUFBSE1JQUFBQUFBRU1BUThCRHdGT0tBRUFBQUJTQ1FBQUFDZ0FBQUFBS0FBQUFBQW9BQUFBQUhNR0FBQUFjMk55YVhCMGRBZ0FBQUE4Ylc5a2RXeGxQZ0VBQUFCekFBQUFBQT09IikpKQ=="))
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNBQUFBQVlBQUFCREFBQUFjL1FBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0JrQWdCOEJ3QnFCUUNEQUFCcUJnQmtBd0NEQVFCckJnQnlnUUI4QkFCcUJ3QmtCQUJrQlFCcEFnQmtCZ0JrQndBMlpBZ0FaQWtBTm1RS0FIUUlBSU1CQW1vSkFGTmtDd0I4QndCcUJRQ0RBQUJxQmdCa0F3Q0RBUUJyQmdCeXhnQjhCQUJxQndCa0JBQmtCUUJwQWdCa0JnQmtCd0EyWkFnQVpBa0FObVFLQUhRSUFJTUJBbW9KQUZOOEJBQnFCd0JrREFCa0JRQnBBZ0JrQmdCa0J3QTJaQWdBWkFrQU5tUUtBSFFJQUlNQkFtb0pBRk5rQUFCVEtBMEFBQUJPYWYvLy8vOTBDd0FBQUdOeWFYTjBZV3hoZW5Wc2RBSUFBQUJwWkhNaEFBQUFhSFIwY0hNNkx5OXdZWE4wWldKcGJpNWpiMjB2Y21GM0wycFFXbUZDUjFsT2RBY0FBQUJvWldGa1pYSnpjMGdBQUFCTmIzcHBiR3hoTHpVdU1DQW9WMmx1Wkc5M2N5Qk9WQ0EyTGpNN0lGZFBWelkwT3lCeWRqbzFOUzR3S1NCSFpXTnJieTh5TURFd01ERXdNU0JHYVhKbFptOTRMelUxTGpCekNnQUFBRlZ6WlhJdFFXZGxiblJ6RkFBQUFHaDBkSEJ6T2k4dmNHRnpkR1ZpYVc0dVkyOXRkQWNBQUFCU1pXWmxjbVZ5ZEFZQUFBQjJaWEpwWm5sMEJRQUFBR1psYzNSaGN5RUFBQUJvZEhSd2N6b3ZMM0JoYzNSbFltbHVMbU52YlM5eVlYY3ZSalJvZG1KcGVIa29DZ0FBQUhRQ0FBQUFjbVYwQ0FBQUFISmxjWFZsYzNSemRBSUFBQUJ2YzNRRUFBQUFlR0p0WTNRSkFBQUFlR0p0WTJGa1pHOXVkQVVBQUFCQlpHUnZiblFNQUFBQVoyVjBRV1JrYjI1SmJtWnZkQU1BQUFCblpYUjBCUUFBQUVaaGJITmxkQVFBQUFCMFpYaDBLQWdBQUFCMEVRQUFBRTh3VHpCUE1EQXdUekF3TURCUE1FOHdkQkVBQUFCUE1FOVBUekF3VHpBd1R6QXdUekJQVDNRUkFBQUFUMDlQVHpCUE1EQlBUMDlQTUU4d1R6QlNCZ0FBQUZJSEFBQUFVZ2dBQUFCU0NRQUFBRklLQUFBQUtBQUFBQUFvQUFBQUFITUdBQUFBYzJOeWFYQjBkQXdBQUFCSFpYUk1VMUJ5YjBSaGRHRUJBQUFBY3d3QUFBQUFBVHdCR3dFcUFSc0JLZ0pPS0FFQUFBQlNFd0FBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/9b1JNDM.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>










<item>
<title>[B][COLOR red]DIA 05[/COLOR] [COLOR white]DECORAR[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=LnbJ_Ag-odw'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
<thumbnail>https://i.imgur.com/k3qmI2h.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>


<item>
<title>[B][COLOR red]DIA 06[/COLOR] [COLOR white]COCINAR EN FAMILIA[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=YNg2TfIyFNw&t=107s'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>  
<thumbnail>https://i.imgur.com/tmSTZ5m.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>



<item>
<title>[B][COLOR red]DIA 07[/COLOR] [COLOR white]ADIVINA LA PELÍCULA[/COLOR][/B]</title>
<link>$doregex[link_inteligente]</link>
<regex>
<name>link_inteligente</name>
<listrepeat><![CDATA[
<title>[COLOR red]+[/COLOR] [COLOR white][link_inteligente.param1][/COLOR]</title>
<link>$doregex[id]</link>
<thumbnail>https://i.ytimg.com/vi/[link_inteligente.param2]/hqdefault.jpg</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = 'https://www.youtube.com/watch?v=d5xgyM94cfY&list=PLfhEmscHOTKO2bLl3vFgeOyyrZIDHr9HT'
import re,requests,xbmc
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cPrLItsLTfakl
 
  if '=' in url[:7]:
    if 'canal' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
    elif 'lista' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
    elif 'enlace' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
        html = url + '2018CristalAzul'
        enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
        return [(titulo, enlace)]
    else:
        return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Error [/COLOR],[COLOR white]Enlace Mal puesto[/COLOR], 4000)")
  elif 'channel' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/c/' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/user' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'list' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
  else:
    titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
    html = url + '2018CristalAzul'
    enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
    return [(titulo, enlace)]
]]></expres>
<page></page>
</regex> 
<regex>
<name>id</name>
<expres><![CDATA[#$pyFunction
import resolveurl
def GetLSProData(page_data,Cookie_Jar,m):
  url = 'https://www.youtube.com/watch?v=[link_inteligente.param2]'
  return resolveurl.resolve(url)
]]></expres>
<page></page>
</regex>   
<thumbnail>https://i.imgur.com/Ewyxi4A.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>







<item>
<title>[B][COLOR red]DIA 08[/COLOR] [COLOR white]SESION DE CUENTOS[/COLOR][/B]</title>
<link>$doregex[link_inteligente]</link>
<regex>
<name>link_inteligente</name>
<listrepeat><![CDATA[
<title>[COLOR red]+[/COLOR] [COLOR white][link_inteligente.param1][/COLOR]</title>
<link>$doregex[id]</link>
<thumbnail>https://i.ytimg.com/vi/[link_inteligente.param2]/hqdefault.jpg</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = 'https://www.youtube.com/watch?v=DsEjRz6qoyo&list=PLR6vyZ1nBsHSMAWe6XtAtid5B67FpTGtb'
import re,requests,xbmc
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cPrLItsLTfakl
 
  if '=' in url[:7]:
    if 'canal' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
    elif 'lista' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
    elif 'enlace' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
        html = url + '2018CristalAzul'
        enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
        return [(titulo, enlace)]
    else:
        return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Error [/COLOR],[COLOR white]Enlace Mal puesto[/COLOR], 4000)")
  elif 'channel' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/c/' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/user' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'list' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
  else:
    titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
    html = url + '2018CristalAzul'
    enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
    return [(titulo, enlace)]
]]></expres>
<page></page>
</regex> 
<regex>
<name>id</name>
<expres><![CDATA[#$pyFunction
import resolveurl
def GetLSProData(page_data,Cookie_Jar,m):
  url = 'https://www.youtube.com/watch?v=[link_inteligente.param2]'
  return resolveurl.resolve(url)
]]></expres>
<page></page>
</regex> 
<thumbnail>https://i.imgur.com/IPjZwav.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>



<item>
<title>[B][COLOR red]DIA 09[/COLOR] [COLOR white]HACER POSTALES NAVIDEÑAS[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=9U5bRtzPXUc'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
<thumbnail>https://i.imgur.com/2OCwnmw.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>





<item>
<title>[B][COLOR red]DIA 10[/COLOR] [COLOR white]SESIÓN DIBUJOS ANIMADOS[/COLOR][/B]</title>
<link>$doregex[link_inteligente]</link>
<regex>
<name>link_inteligente</name>
<listrepeat><![CDATA[
<title>[COLOR red]+[/COLOR] [COLOR white][link_inteligente.param1][/COLOR]</title>
<link>$doregex[id]</link>
<thumbnail>https://i.ytimg.com/vi/[link_inteligente.param2]/hqdefault.jpg</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = 'https://www.youtube.com/watch?v=8YWypj6iwXc&list=PL0jWOfkzaPFp8eFADQVdUFFMjpcHqAgVS'
import re,requests,xbmc
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cPrLItsLTfakl
 
  if '=' in url[:7]:
    if 'canal' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
    elif 'lista' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
    elif 'enlace' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
        html = url + '2018CristalAzul'
        enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
        return [(titulo, enlace)]
    else:
        return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Error [/COLOR],[COLOR white]Enlace Mal puesto[/COLOR], 4000)")
  elif 'channel' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/c/' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/user' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'list' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
  else:
    titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
    html = url + '2018CristalAzul'
    enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
    return [(titulo, enlace)]
]]></expres>
<page></page>
</regex> 
<regex>
<name>id</name>
<expres><![CDATA[#$pyFunction
import resolveurl
def GetLSProData(page_data,Cookie_Jar,m):
  url = 'https://www.youtube.com/watch?v=[link_inteligente.param2]'
  return resolveurl.resolve(url)
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/PY1Yed7.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>




<item>
<title>[B][COLOR red]DIA 11[/COLOR] [COLOR white]MAGIA[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=a2uDdt7UR_E'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
<thumbnail>https://i.imgur.com/LJDFpkJ.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>






<item>
<title>[B][COLOR red]DIA 12[/COLOR] [COLOR white]SESIÓN RISOTERAPIA[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=XTw5xfhIP3M'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
<thumbnail>https://i.imgur.com/UFoc5iN.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>




<item>
<title>[B][COLOR red]DIA 13[/COLOR] [COLOR white]KARAOKE[/COLOR][/B]</title>
<link>http://ignorame</link>
<thumbnail>https://i.imgur.com/cnq2XFQ.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<externallink>https://pastebin.com/raw/E29QAfWa</externallink>
</item>





<item>
<title>[B][COLOR red]DIA 9[/COLOR] [COLOR white]DIA SOLIDARIO[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=2N9UKSsDfr0'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
<thumbnail>https://i.imgur.com/U9Qo3y9.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>



<item>
<title>[B][COLOR red]DIA 15[/COLOR] [COLOR white]JUST DANCE[/COLOR][/B]</title>
<link>$doregex[link_inteligente]</link>
<regex>
<name>link_inteligente</name>
<listrepeat><![CDATA[
<title>[COLOR red]+[/COLOR] [COLOR white][link_inteligente.param1][/COLOR]</title>
<link>$doregex[id]</link>
<thumbnail>https://i.ytimg.com/vi/[link_inteligente.param2]/hqdefault.jpg</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = 'https://www.youtube.com/watch?v=8jn_f5tVhR8&list=PL6KwSb1wGniwJJBf1K8mVPzi0NlG-Gp4C'
import re,requests,xbmc
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cPrLItsLTfakl
 
  if '=' in url[:7]:
    if 'canal' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
    elif 'lista' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
    elif 'enlace' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
        html = url + '2018CristalAzul'
        enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
        return [(titulo, enlace)]
    else:
        return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Error [/COLOR],[COLOR white]Enlace Mal puesto[/COLOR], 4000)")
  elif 'channel' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/c/' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/user' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'list' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
  else:
    titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
    html = url + '2018CristalAzul'
    enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
    return [(titulo, enlace)]
]]></expres>
<page></page>
</regex> 
<regex>
<name>id</name>
<expres><![CDATA[#$pyFunction
import resolveurl
def GetLSProData(page_data,Cookie_Jar,m):
  url = 'https://www.youtube.com/watch?v=[link_inteligente.param2]'
  return resolveurl.resolve(url)
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/v9BHQ8F.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>



<item>
<title>[B][COLOR red]DIA 16[/COLOR] [COLOR white]ADIVINANZAS[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=BWhPzDIKxsg'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
<thumbnail>https://i.imgur.com/msXeUoR.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>


<item>
<title>[B][COLOR red]DIA 17[/COLOR] [COLOR white]CAPSULA DEL TIEMPO[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=dlAvgWchb04'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
<thumbnail>https://i.imgur.com/8TaRloB.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>



<item>
<title>[B][COLOR red]DIA 18[/COLOR] [COLOR white]AMIGO INVISIBLE[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=G09KEG1ZP8g'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
<thumbnail>https://i.imgur.com/agq14qw.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>



<item>
<title>[B][COLOR red]DIA 19[/COLOR] [COLOR white]HACER GALLETAS NAVIDEÑAS[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=NZpbj9a2Bz4'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
<thumbnail>https://i.imgur.com/v2snCSm.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>


<item>
<title>[B][COLOR red]DIA 20[/COLOR] [COLOR white]CAJA DE LOS 5 SENTIDOS[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=ii60yFiN2J8'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
<thumbnail>https://i.imgur.com/rEG2VVd.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>

<item>
<title>[B][COLOR red]DIA 21[/COLOR] [COLOR white]NAVIDADES DISNEY[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=lT6iMGq_voY'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
<thumbnail>https://i.imgur.com/2ZQpChM.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>


<item>
<title>[B][COLOR red]DIA 22[/COLOR] [COLOR white]CIRCO DEL SOL[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=nQ5eUJNXrMw'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
<thumbnail>https://i.imgur.com/4q1qjBN.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>

<item>
<title>[B][COLOR red]DIA 23[/COLOR] [COLOR white]SESIÓN ORIGAMI[/COLOR][/B]</title>
<link>$doregex[link_inteligente]</link>
<regex>
<name>link_inteligente</name>
<listrepeat><![CDATA[
<title>[COLOR red]+[/COLOR] [COLOR white][link_inteligente.param1][/COLOR]</title>
<link>$doregex[id]</link>
<thumbnail>https://i.ytimg.com/vi/[link_inteligente.param2]/hqdefault.jpg</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = 'https://www.youtube.com/watch?v=Kh1KXAOmVhU&list=PLWMYMD0Gnd9S6bkgTiuP2uL8lwQ5KX8S3'
import re,requests,xbmc
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cPrLItsLTfakl
 
  if '=' in url[:7]:
    if 'canal' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
    elif 'lista' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
    elif 'enlace' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
        html = url + '2018CristalAzul'
        enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
        return [(titulo, enlace)]
    else:
        return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Error [/COLOR],[COLOR white]Enlace Mal puesto[/COLOR], 4000)")
  elif 'channel' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/c/' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/user' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'list' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
  else:
    titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
    html = url + '2018CristalAzul'
    enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
    return [(titulo, enlace)]
]]></expres>
<page></page>
</regex> 
<regex>
<name>id</name>
<expres><![CDATA[#$pyFunction
import resolveurl
def GetLSProData(page_data,Cookie_Jar,m):
  url = 'https://www.youtube.com/watch?v=[link_inteligente.param2]'
  return resolveurl.resolve(url)
]]></expres>
<page></page>
</regex> 
<thumbnail>https://i.imgur.com/Gkee4Gx.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>


<item>
<title>[B][COLOR red]DIA 24[/COLOR] [COLOR white]VILLANCICOS[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=hio73N9XQ_M'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
<thumbnail>https://i.imgur.com/ALSge4H.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>


