<?xml version="1.0" encoding="UTF-8" standalone="yes"?>

<item>
<title>[B][COLOR gold]VUESTRAS CREACIONES[/COLOR][/B]</title>
<link>http://ignorame</link>
<thumbnail>https://i.imgur.com/fcMtyL0.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<externallink>https://pastebin.com/raw/H2TAs5Fs</externallink>
</item>


<item>
<title>[B][COLOR red]DIA 01[/COLOR] [COLOR white]MENSAJE DE PAPA NOEL[/COLOR][/B]</title>
<link>$doregex[id3]</link>
<regex>
<name>id3</name>

<expres><![CDATA[#$pyFunction

def GetLSProData(page_data,Cookie_Jar,m):

   import resolveurl

   url = 'https://ok.ru/video/2044667562660'

   try:

       u = resolveurl.resolve(url)

   except:

       u = ''

   return u

]]></expres>

<page></page>

</regex> 
<thumbnail>https://i.imgur.com/TanrSTX.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>


<item>
<title>[B][COLOR red]DIA 02[/COLOR] [COLOR white]MANUALIDADES[/COLOR][/B]</title>
<link>$doregex[link_inteligente]</link>
<regex>
<name>link_inteligente</name>
<listrepeat><![CDATA[
<title>[COLOR red]+[/COLOR] [COLOR white][link_inteligente.param1][/COLOR]</title>
<link>$doregex[id]</link>
<thumbnail>https://i.ytimg.com/vi/[link_inteligente.param2]/hqdefault.jpg</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = 'https://www.youtube.com/watch?v=HqgvCuu82IA&list=PLHIVSRNAg7cko8jRghW71fiho-TWyQ-2j'
import re,requests,xbmc
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cPrLItsLTfakl
 
  if '=' in url[:7]:
    if 'canal' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
    elif 'lista' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
    elif 'enlace' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
        html = url + '2018CristalAzul'
        enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
        return [(titulo, enlace)]
    else:
        return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Error [/COLOR],[COLOR white]Enlace Mal puesto[/COLOR], 4000)")
  elif 'channel' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/c/' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/user' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'list' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
  else:
    titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
    html = url + '2018CristalAzul'
    enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
    return [(titulo, enlace)]
]]></expres>
<page></page>
</regex> 
<regex>
<name>id</name>
<expres><![CDATA[#$pyFunction
import resolveurl
def GetLSProData(page_data,Cookie_Jar,m):
  url = 'https://www.youtube.com/watch?v=[link_inteligente.param2]'
  return resolveurl.resolve(url)
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/dzvFmjW.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>



<item>
<title>[B][COLOR red]DIA 03[/COLOR] [COLOR white]ESCRIBIR CARTA A PAPA NOEL[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=BvbsvthaNg8'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
<thumbnail>https://i.imgur.com/Ae9ouvV.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>




<item>
<title>[B][COLOR red]DIA 04[/COLOR] [COLOR white]SESION DE CINE[/COLOR][/B]</title>
<link>$doregex[c]</link>
<regex>
<name>c</name>
<listrepeat><![CDATA[
<title>[c.param1]</title>
<genre>[c.param2]</genre>
<year>[c.param3]</year>
<info>[c.param6]</info>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[c.param4]</thumbnail>
<fanart>[c.param5]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MGhSVUFBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFV1RGTmVtc3pUbFJTYlU1NlJYcE5SRmsxVFhwSmVrNTZWVFJPZWxFd1dWUk5OVTVVUlhwUFJGcHFUWHBqTVU5VVdUSk9la1Y2VFZSYWEwMTZVVEpPUkZsNlRtcEpNRTVxWkdoT1IwMTZUVVJqTVU1dFZUSlpWRTB3VGxSTk1GbDZWVE5OZWtrd1RrUlJlazVVVVRKUFZFMHdUWHBKTUZwVVl6Rk9iVmt4VDBSYWEwMXRTVEZQUkUxM1RrZFJNazlFV1ROT1IxRjZUV3BaTVU1dFNYcE5SRTAwVGxSQk1VNXFUVE5PYlVVd1RYcFJlazU2U1hsWmFtTjRUa2RKTTA1RVdtMU5iVmt3V2xSak0wNUVaek5OUkZab1RrUnJNRTlVVVRWT2Ftc3hUMVJTYTA1cVZUSk9WRlUxVG0xTk0wOUVXbWhPVkZGNlRtcGthRTE2YTNsWmFsSnRUbFJSTWs1cVVUSk5iVmt5VG1wak1rMTZWWGxaYW1NMVRXMUpNbHBVVFRCT2FsVXlUbFJaTWsxdFdUTk9WRkpyVGxSbk1GcFVTbTFPVkZsNVdXcEtiVTU2VlRKYVZGcHNUbTFWZWs1cVRURk5la1V5VGxSTmVrMXRXWGxhYWtwcFRrZFpNVTVxVFhkTmJWa3hUVVJqTWsxNlZURlpWRmt5VG1wRk1VOUVWVFJPTWtVeVQxUlpOVTF0U1RGTlJHTXlUbFJCTVUxRVRUVk9WR2Q2VFhwTk5VMXRXVEpOYWxFMFRXMUpNazVxVVRSTmVrMHhUMFJLYlUxNlkzcE9hbU0xVFhwWmVrOVVXVFZPVkdNd1dsUk5NVTVIV1hwUFZGa3lUbTFaTTFsVVRUVk5lazB5VFZSVk1rMTZaekJQVkZKcFRYcFZNRTlFV1RCTmVrVXdXWHBOTUU1cVZURk9SRmw1VFcxSk1GbHFXbXRPZWxGNlRucFNhVTVxWnpOT1JGVXdUVzFaTTA1cVdtcE9WMFY2VDFSUk1rNUVWVEpaZWsxM1RsUkJNMDVFV21oT2JWVXlXWHBOTWsxNlFUQmFSRkpxVG1wWk1sbDZXVFZOZW1jeVdsUk5NMDE2VFRKTmFsRXlUbnBSTVU1RVl6Tk9WMFY2VDBSWk1VMTZSVEpPZW1NMVRucEplVnBxV21oT2VsVjVXbXBaZUU1RVZYcFBWR016VG1wWk1sbFVUWGhPZWxVd1dXcFplVTV0UlhwT1ZGSnJUbGRGTVUxRVVUVk5iVmt5VGxSVk1FNXFhM3BQUkZFelRtcEZNMDlVVVRKTmJVa3dXV3BOTUU1NlozcE5WRkV6VG5wWmVrOVVWVFZPYlVWNlRsUlZNMDE2VlROT1JHTjVUbXBaTWxwRVl6Rk9iVmt6VDBSU2EwMTZUVEJhVkZreVRucEplVmxxV21oT1JFa3pUbFJOTTA1SFVUQmFWRTAwVG0xVk1rNVVVbWhOZW1zelRsUlZlVTE2UlRKWmVsSnFUbFJWTTA5RVkzZE9SRWw1V21wVk1rMTZXVEpPUkZKcVRsUlJlazFVV210T1JGbDVXbXBhYWs1cVZUQk5hbHBxVG0xTk1FNTZXbXRPYlVreFQxUmplVTF0U1RGT2FscHFUWHBCTWsxNll6Sk9WRWw2VFVSYWEwNVVWVEZaVkZFelRsUmpNMDVxVVRCTmVsRXhUa1JrYUU1VVFUQmFWRmt4VFhwVk0wOUVZelJPYWxrd1dsUlNhVTU2WnpOUFJHUm9Ua1JSTTA1VVdteE9WR3Q2VFVSYWFFNUhWVEpPYWxVMFRtMVZNbHBFVW10T2FrMTZUVVJqZUU1dFJUQlBSRmt4VG0xWk1VOVVXWHBOZWxVeFQwUlNiVTVxVVRGT2FtTjNUbnBuTWxwVVl6Uk9SRkV5V1ZSU2EwNXFZM2xhYW1Nd1RucG5NazFVWXpST2VtZDZUa1JOTlU1VVJYcE9lbGw0VFhwSk0wNVVXWGxPTWtVeVQxUlZkMDVIVVRCYVJFMHlUWHBGTUU1NlVtdE9ha1V6V1ZSak1VMTZVWHBPUkdONFRucEpNbGw2WTNoT2FrMHhUa1JOTlU1VVdUSlpWR014VGxSVk0wOUVWWHBPUkUwelQwUlNhVTE2V1hwT2FrcHRUbFJSTTAxcVdtbE5iVWw2VFZSak1rNVVWVEpQVkZsNlRYcEpNRnBVVVRCT1IwMHlXWHBqZWs1cVJYcE9ha3B0VGtSak1rNTZZM2xOZW1jeVRsUlNhazU2VVROT1ZGRXlUWHBSTVU1RVRYcE9SR3N5VG1wWmVrMTZXVE5QVkZKcVRrZFpNVTlVWXpKTmVsVjZUV3BqZVUxNldUQmFSRTB5VGpKRk1VMTZXbTFOZWxVeFRYcFpNMDE2VVhsYWFrMTVUbnBuTWs1RVl6Vk9lbU13VDBSamVVNUVVVE5PVkdNd1RsUk5NbGxVVVhsT2FtTjVXbXBqTTAxNlJUSlBSRnBvVGxScmVrMUVZekJPUjFWNlRWUlpNMDVxVVhwUFJGRjVUbnBuZWsxVVVYaE5iVmt5V21wTmVFNXFVVEZOUkZFd1RtMU5NazVVVFRKT2FrVXhUbFJOTkUxNldUQmFWRkpxVFcxSk1FNUVZM2xOZWtFeFRtcE5lRTVIVlRCYWFrMHdUWHByTTAxcVZtaE9WR3N6VG1wTk5VNUVSVEphYWtwdFRYcGpNMDFVVW10T1ZFMTVXV3BrYUU1RVp6Rk9WRkUwVG0xWk0wNTZXbXhPUkVrd1RtcGFhRTE2WnpCTlZHUm9UWHBaTVU1RVVYaE9lbFV4VGtSWk1VNTZVVE5QVkZwcFRsUmpNRTE2U21sT1IxVXlUbFJSZVUxNlRURk9lbU40VGxSSk1rNTZXVE5PVkVGNlRYcFZlVTVVU1RGTlZGSnRUWHBaTUU1RVZYcE9hbGw2VFhwWk5FNXFhekphVkdNeVRtMVpNMDVVWkdoT2VtY3lXbXBhYTA1RVJUSk9hbU15VG5wRk1rNXFXVEZPZWxFeVdXcFpNazVIVVhwT2VtUm9Ua1JGTWs1cVRURk5lbFV5V2xSU2FVNUVWVE5OYWxVeVRrZE5NRnBFVlRSTmVrVXlUVlJOTUU1dFJYcE9lbEY1VGtSak0wOUVWVEJOZWsweVdWUkthVTVVVlRGT1ZFMHpUbTFGTUZsNlkzcE9hbGt3VGxSYWJFNXFTVEJaYWxVeFRYcG5NMDFxVVRST2Fsa3lUbFJaZVU1dFRUQmFhbHB0VGtkUk1rMTZXVEJPYlVrd1RsUk5OVTVVYXpKWmVrcHRUbFJGZWs1NlZUTk9iVVV5VDBSVmQwNXFWVE5PZWxFeVRucFZNazVFV1RGT2JVVjZUbnBTYWs1RVdYbGFhazB6VG0xVk1rNUVWWGhOZW1jelRrUlNhazV0VVhwUFZGcHRUa1JuZWs1cVdtdE9SMWt3V21wTk1VNXFaek5PYW1ONlRsZEZlazFVVFRCT1ZFRjZUMFJTYlU1NlZUSk5hbEY1VGtkVk1rMXFUVE5PUkUweVdWUmpNazVxYXpKT1ZGbDZUbTFOZWs1RVdUTk9la0Y1V1dwVmVrMXRTVEphYWxWNVRXMUpNMDE2VlROT2VtTXpUa1JOTkU1VVRUTlpWR013VGxSTk1sbFVZekpPYW1Nd1RucEthVTE2U1RCTlZGbDZUWHBqTUZwcVVtdE5lbFV3V21wak1VNXFUVEJPVkdONVRucEpNazU2WXpKTmVra3dUbFJWTlU1cVJUQmFSR04zVGxSVmVrNXFUVFZPYlZreVRtcE5OVTE2VlRKWlZGa3hUa2RSTTA5RVRYcE5lbFV6VG5wWk5FNVVSWHBPVkZwcFRsUmpNbHBFVVhoTmJWa3lXV3BSTlU1NlRYcE5hbGswVGtSUmVrMTZXbWxPYlZFd1RtcFpNazVFUlRCTmVtTXlUbXBGTVUxRVRUTk5lbFV4VG5wWk1FNVVhekpOYWswMFRrZFJlazlVV21wT1JGRjZUV3BqTVUxNlRUQk5WRmt4VGpKRk1FMTZZM3BPYW1ONlRsUk5lazVYUlRGT1ZGa3dUbTFKTWxwRVdUUk9SR042VG5wak1rNUVSWGxaYW1ONVRrUkplazE2V1RWT1ZHY3lXWHBTYVU1NmF6Qk9hbU13VGpKRmVrMTZUVFJPUkVsNlRsUlJORTVxVlRKYVZGVjRUa2RaTTFsVVVYaE9SMFY2VFhwU2FVNVVTWHBPVkZFd1RsUlpNMWxVV20xT2VtTXdUWHBWZDAxNlFUQlBSRkV6VG0xSk1FOUVUVE5PZWswelRrUmpNMDE2VVRCTlZFcHBUbFJKZWsxRVdUTk5iVmt6VFhwUmVVMTZWWHBOVkZFeVRtMU5NRTFVV1RCTmVsa3lUbnBOZVUxNlJUQlplazE1VG1wbk1rMXFZekpPZW1jelRucGFhRTE2VVROTlZGRjZUa1JGZWs1NlRUUk9SMGt4VDBSWk1VNVVSWHBPVkUwMFRtMU5lazlFVVRCTmVrVXlUMVJhYkUxNlRUSlBWR015VFhwak1GbFVVVEZPUkUwelRVUmthRTVxU1hwTlJGVXdUbTFOTTA5RVl6Tk9WRUV5VFdwak1VNXFhM2xhYWxwclRrUkplazE2VVhoT1ZFbDVXbXBTYWs1dFdUSk5hazAwVG5wUmVrMTZXVFJOYlVsNlRrUlJNRTE2WnpKUFZGVXdUVzFaZWs1cVVYbE9hbEY2VDBSWk5FNUhSWGxaYWxGNVRYcFZNMDlFVVhoT1ZFRXpXVlJqZVU1dFNUTlBSRkpvVG5wcmVrNTZVVFJOZW1zeVRucFZNRTVxVFRGTlZFMTVUbXBOTVU1NlNtMU9SRVV3V1hwamVVNUhXVE5PYWxWNVRrZE5NMDFFVW14T2Fsa3dUVlJqTWsxdFNUTk9lbU13VFhwUk1FMVVXVEpOZWtFd1RucE5ORTVIVFhsYWFsazFUa2RSZVZscVVUQk9SMGt4VGxSWk1rMTZTVEJPVkZreVRYcFZlazlFVFRST2JVVXlXbFJhYVU1dFZURlBWRkV3VGxSbk1scFVVVE5PUkZreFQwUlNhazVIU1RCYVJGSnBUVzFaTWxwcVdUUk5lbFV5VDFSV2FFNXRVVEphYWxFeFRtcFpNbHBxVFhoT1ZFa3lUV3BWTlU1RVVYbGFhbEV4VGtSVk1VMUVXVEJPZWtsNlRrUmFiRTV0VlRGWlZGSnJUbTFaTVU1RVRUUk9WRUV4VFVSYWFFNUVVVEJOZWswelRqSkZNMWxVV1hoTmVsVXhUa1JSZWs1dFJURk9SRTEzVGtkRmVrMTZXbXhPUjBWNVdtcE5NMDVxWnpCYVZFMDFUbXBSTWs1NlVYbE5iVmt3VGxSUk1FNUhUVE5PVkZGNlRrUm5NRTlFVVROT1IwVXdXV3BOTlUxNlVUQk9SRmt3VGpKRk1VNXFUWGhPUkVVelRXcE5OVTVFYXpKTlZGVXpUbXBaTTAxNlVteE5lbEV4VGxSS2JVNTZZekpPUkUwelRsUlJNazE2U21sT2FtTXpUMFJaTUU1VVVUQk5WRmt5VFhwVmVrNUVUVEpPUjFFelQxUlZOVTF0U1hwTmVtTXpUa2RSTVU1cVRYbE9WRmt4VFVSUk5VNTZhekJaZW1Nd1RsUkZNRnBxVFROT1JFVjZUa1JOTVU1cWF6Rk9lbFYzVG1wck1GcFVXWGhPVkdNelRsUlplazVVWTNwUFZGa3lUa1JSTUU1NldUUk9SR3N5VG5wTmVFNHlSVEJPVkUwMFRYcFJNMWxVVFROTmVrMHlUMFJSZUUxNlRYcFBWRkY2VFhwTk1rNTZWVE5PUjFFeFRsUlNhazU2U1RCUFZGVXlUWHBOTWxwRVVYaE5lbWQ2VG1wUmVVNUVXWHBPUkUxNVRtMU5NRmw2V214T2FrMHpUVlJhYWs1cWF6Qk9ha3B0VGxSak1GbDZTbWxPUkVWNlQxUlZOVTU2U1RGTmFscHJUbTFKTTFsVVRUVk9lazB3VG1wak1rNVVXVEJaVkdNMVRucGpNazlVVVROT1ZFRXhUMVJOZVU1VWF6Qk9la3B0VGtSVk1VMTZTbTFPVkVVeVdtcE5ORTVIUlRCTmFsVjVUbFJaTTFsVVZURk9iVTB3VDBSWk1VNUVVVEJhYWxKclRrUmplazVFVW14TmVtY3lXWHBWZDA1cVZUTlpWRkY0VGtkWk1FNVVXVFZPUjFWNlRsUlJlVTVxU1hwTmVsRXdUbTFGTWs1NldUSk9SMGt5VG5wUk5FNXRUVE5aVkZrMFRsUk5NVTFFV20xT2FtdDZUWHBaTVU1VVJUQlBSRTE2VFhwUk1GbDZXbXhOZWxFeFQxUk5OVTVFYXpCWmVsa3hUbTFGTTA5RVkzaE9lbWN6VFdwUk1rNXFTWGxaYW1NelRrZE5NMDVxVFhsT1JFbDZUbnBqTkU1RVZUSmFWRlY1VFcxSk1FNUVWVEJPYW1jeVdYcE5lRTVIU1hwT1JGRXdUa2RKTWxsNlNtMU9lbFV5V2tSUk5FMTZhekJOYWxFMFRYcFpNRmxxVW0xT2VtTjZUMVJWZUU1NlJYbFphazEzVG5wTmVWcHFVVFZPZWtsNlRXcFJNRTVFWXpCYVZGbDVUWHBqTUUxVVkzbE5lbEY2VFhwWk1FNUhSVEJhYWxVelRrUmpNbHBVV210T2JWVXpUWHBLYlU1SFNUQlphbVJvVG5wck1scFVZM2xPUkdzeVRrUmplazVFWjNsYWFsa3pUa2RKZWs1RVZURk5iVmt3VFZSYWEwNXFUVEJaYWxKcVRYcG5NVTFVVFRGTmVtdDZUMFJSTkUxNlZYcE9SRlYzVGtkUmVrNVVUVFJPVkVVeVQxUk5ORTE2VlRGTmVscHNUbnBOTUU1RVVUQk5la0V6VFVSS2JVMXRXVEJOVkZVMVRtcFZlazFxVVRCT1ZHY3lXV3BqTWs1cWF6SlplbFYzVGtSSk1rMXFXbWhPYW1NeVRtcE5NRTVVUVhsWmFsVjZUWHBqTUUxVVkzaE5iVWt4VFhwS2FVNHlSVEJOVkZWM1RYcEpNbGxVV1RGTmJWa3dXbFJTYVU1VVdURlBWRnBvVGtSbk0wNUVXbWhPUkVVeFRXcFZlVTV0VFRCYVZGbDZUbFJqTWs1RVVURk9lbGt3V1dwU2FrNXFXVEpPVkZsNlRucGpNVTVFVW1sT2JVMTZUbFJSZUU1cVNUTk5lbFUxVFhwak1sbFVXVFZPVkdjd1dtcFpNMDVFU1RCUFJGbDRUbnBuTVU5RVVUQk9iVmt6VG1wS2JVNTZhekJhYWtwcFRucFZNazU2V214TmJVbDVXV3BTYVUxNlkzcFBSRnBvVGtSUk1WbFVWVEJPUjFFeFRsUlJlazU2WnpCTmVscHNUWHBaTUZsVVdUSk9lbU15VGxSWk1rMTZRVEJhUkZreFRYcEpNRnBVU21sT1ZGRXhUbnBTYUU1cVdUTlBSRnBxVFhwTmVrNTZVWGxPUjFVeFRYcEthVTE2UVRKWmFtTTFUa1JaTVU1cVNtMU9lazB3VDBSTk5FNXRTWHBQUkUxNFRrUm5lVmxxV1ROTmJWa3dUbnBTYTA1VVkzbGFhbEY0VFhwTk0wOVVXbWxPVkVGNlRrUmpNMDVxV1hwTlJFMHhUWHBCTVU5RVRUQk9iVVV6VG1wV2FFNUVWWGxhYWxKclRrUlplazVxVlRGT2VrMHhUbXBSTkU1Nlp6QlpWRlV5VG1wRmVWbHFWWGxPVkdkNlQwUmFiVTVxWXpCWlZHTXhUWHBaTVU1NlNtMU9WR042VGxSU2JFNXFWVEZOVkZGNlRYcE5NazFVVVRKT1ZGRXlUa1JWZWsxNldYcE9hbU15VG0xUk1rMVVXWHBPVkdNeFdWUk5kMDVFVlRCT1ZFcHBUa1JyTTA1RVl6Tk9lbGt5V1ZSU2JFNUhSWHBPUkZwb1RsUm5NbGxVVVRWT1IxbDZUVlJqZWs1VVJUSk9WRTAxVG0xTk0wMUVZekpPZWsweFRWUk5NMDVVWXpGTmVrMHlUWHBGTUZsVVNtMU5lbU14VDBSak5VNHlSWHBPVkUwelRYcFpNazU2V20xTmVsRXpUMFJSTWsxdFdYcE5SRTB4VGtkUk1rOUVXVFZOZWsweVRucFpNRTVxVlRCTmFsa3hUa2RWTTA1Nll6Tk9hbGw2VG1wVk1FNUhVVE5OZWswMVRrUkZNbGxVVFRST2Ftc3hUa1JhYTA1cVl6Sk5hazAwVGxSbk0wMTZVbXhPYWxreVdXcFpORTF0V1RCTmFscHNUWHBSTUU1cVRUVk9WRVV5VG1wamVFNVVWVE5PYWswelRrUkZNazVxWXpWT1ZHTjVXbXBWZUUxNlZUSk9hbGt3VG0xWk1VOUVUVE5OYlZrd1RsUk5OVTE2VVhwT1JHTjVUbnByTUUxNldUQk9la1V3V2xSTk5VNTZVWHBPUkZWNVRsUkplazU2VVhsTmJWa3pXVlJhYkU1cVp6SmFhbEpyVG5wRmVrOUVZelJPZWxsNlQwUlJOVTVxV1hwUFJGSnBUWHBCTTFsVVNtbE9WR013VFdwamVFNTZZekZPZWswelRtcE5NMDlFWXpOT1JHY3lXVlJWTWs1cVVYcE9hbHByVGxSQk1GbFVVWGhPVjBWNlRucE5kMDU2VFhwT1ZHTTBUbFJuZWsxVVdUVk9lbFV5V1dwWmVFMXRTVEpQUkZKcVRucG5NVTE2U21sT1ZGRXhUMFJqTkU1RVp6Qk5hbEV6VG5wWk0xbFVVbTFOZWswd1drUmpNMDE2YXpCTlZFcHRUWHBSTTA5RVRYcE9iVVV5VFhwTk1FNVVTWHBPVkZwclRrUlplVmxxVW1oT1ZFMTZUbFJWTVU1RVp6Qk9WRkUxVG1wUk1VNVVTbTFPUkZreVRXcE5NVTV0VVRGUFJGcHFUbXBOTTA5VVZUSk9lazB5V1ZSUk1FNTZSVEZPVkZWNVRXMVpNRmxxWXpST2FtTXhUMFJTYkU1SFRYcE9SRlUwVG5wUk1sbHFWWGhPYWxFeVdWUmFhVTVFUlRKWlZFMDBUakpGTUU5RVl6Vk9la1Y1V1dwamQwNUhVWGxaYWxwb1RtMUZNVTE2VFhkTmVtY3lUVlJOTUUxNldUSmFWR00xVGtSWmVWbHFXWGhPVkdjeFRtcFZkMDV0U1hwT1JFMDBUbnByTTA1cVl6Vk9WRUV4VFVSTmVVNUVhek5PVkZFelRsUlZNRnBxWTNkT2JVMTZUa1JhYVUxdFdUSk9WRlUwVGtkSk0wNXFVWGhOZWtVelRYcFJlRTVVWTNwUFZHTTFUbFJaTUU5RVdtbE5lazB3V1ZSWk1VMTZXVEJOVkZFMVRucG5NVTlFWkdoT2Ftc3hUVlJaTWs1RVl6Rk9hbEUxVGxSVmVrNVVXWHBOZW1zd1QxUmplVTE2YXpOTlJHTjZUbnByTTAxcVl6Uk5iVWt3VFZSYWJFMTZXWHBOYWxKcFRXMVpNVTlVV1RST1ZFRXlXVlJSZUU1NldUTk9lbGw1VFhwbk1VMVVXbWhOYlVrd1dsUmFhVTVVVlhwTlZHUm9UbTFKTWs1cVRUQk9iVWt3VG5wU2FFMXRXVEJPVkUwMVRXMVpNMWwwaFJVQUFFZEVOVUYzZEROYWQzQTFRVWRFTTFwUlJHdEJSMHh0V20xRU1VRkhkREpCZDAxMVFYcFNNRUYzUlhaQlVYZ3lRVkZ3TkVGM1VqRkJVVXhzUVVkTU1VRjNTREpCZDNReVFYZHdORUZIZEcxYWJVUTFRVXBTTUZwSGNESkJiVWd5V25kTWEwRktVak5CYlUxMlFWRjBNRUpIV2pSQmJWb3hXbmRFTWtGVVNHeE1kM0ExUVcxSU1VeEhSWFZhYlVneFFXMU1NVUYzY0RGQ1IzQXlRVkY0TWsxUlJYWmFiVVF3UVhkWGVrRlJlRE5hVVZveVdtMUViVUZ0V2pOQmVsSnRRWGR3TkVGSFJESk5SMFF3UVhwTU0weEhSWGRCYlU0eldtMU5lbHB0Y0d4TWQwVjNRWGRFTVZwM2NEQkJSMVl3UVZGSU0wRlVXakZNUjBneFFWUk1NMXBSVFhsQmQzUXdUWGRGZWtFeVVqQkNVWEF4UVZSRU1FeDNXakpCUjA0eFFVZElNVnA2VEcxQmJVUnJRWGRXTWtGSFdtcEJVWEJzVEhkd2JVRlJSRzFCVVVRMVFUSlNiRXgzUkd4QmQweHRXbmR3YTBGNlJESkNVVVF3UVhwU01scDNUREJCZDFJd1FWRmFORUZSUkRKQmQwZ3hRVWQ0TWt4SFRYbEJiVll3UWxGRmVVRkhWakZhVVUxMlFXMU1NVnBSUkcxQlIwNXRXa2RJYTFwdGREQk1iVTEzUVhwYU1rRjNjR3RCVkZveVRFZEZlVnA2VmpKTmQxcHFXbTFJTVV4SFJHeEJiVkl5VFVkYU5VRlVXak5hVVUxMVFVZDBNRUZ0UlhsQmQxb3pXbmRJTWtGSFdqSkJSMGwxV20xSWJWcDNSR3hhYlZvd1FsRkZla0YzY0RKTlIwZ3lRVkZhTTFwM1JEUkJSMGd5V2tkRU1rRlVURzFhVVZwdFFWRk1NRXh0VERKQmVsSXpXbEZJTWtGUlNHMUNVWEExV20xYU0wRlJSREZCYlVnd1FYZHdNVUZVUkRKQmJWbzBXbTF3TWt4SFJYWkJWRnB0UVVkRmVscDZWakZCYlVRd1dtMTRNbHBIY0RSQlVYQXlURzFJYWtGdFNERkNSMFJ0V20xYU1GcHRTR3RhZWxadFdsRkZlRnA2VEcxYVIwZzFRVWRPTWtGUlYzWkJiWGd4V2xGTU5VRlJUREZCYlVneVFVZDBNMEpSVFhWQlIwNHhURWRNYTBFeVVqTmFkM0F4UVZGU2JFeDNTREZCYlVneldrZGFiVUZIVWpOYWQzQTBRWHBFYlZwdFRYaEJkMHh0UWxGTU0wRnRXbTFhVVVneVFVZE9NazFSVFhkQmVrZ3lRbEZJTUVGdFNEQkJkMFF5UVhkSU1rMTNUREJCZDBneVRYZEVNa0YzUkRCYWJWb3hRVWRJTWsxSFJEVkJSMXBzVFhkYWEwRnRjREZDVVhCclFWRkViRTEzVEROYWJWWnNUWGR3TkVGUmRHMUJkMFYxUVVkT01rRkhUWHBCUjB4c1RIZElhMXA2VERKQmQzRjFRVlJXTWtKUlJEUkJiWFF3UWtkTU1FRlJWbTFCZDBsMVFWRjBNMEpSUkd4QmQwd3dRVzFGZDBGM1JERmFkMFF3UVhwU01FMUhjREZCZWt3d1RWRmFNVUZIU0d4TWQwVjRRVlJJYlZwSFYzcEJiWFF6UVcxYWJFRkhVbXhNZDBneVFYcElNRUZIUlhoQmQwUXhXa2R4ZFZwdFRqQk5kMW96UVZGYU1rRkhTRFZCUjBSdFdtMUVOVUYzU0RCQ1IwUTFXbTEwTVZwdFNHcEJiWFF6UWtkd01rRlJTREphUjFvMVFWUkVNa0pIV2pCQlIxWXdUVWRhTVVGVVdqRmFVVWhxUVVkd01FRnRjR3RhZWxZd1RWRkVNbHB0UkROQ1VWcHRXbTFTTUUxM1RHMUJSMUl6VEVkYU0wRnRWbTFhYlZveldtMTRiRXgzVEd0QmQwZ3hXbEZhTlZwdFZqTkJVWEYxV25wTU1WcDNURFJhYlVReVFXMUZlVUZSV2pOQlVYQXhRWHBJTTBGUlNEVkJSMFJ0UVcxWGVrRlVURE5CZDB4c1FXMTRiVnAzVFhwQmJVNXRXbEZKZFVGM1NESk5SMDEzUVhwYU1rRkhUR3RCVVVneVRWRk5lVUZ0ZERKTWJWcHFRVkZ3TUUxM2NHeGFiVWd3VFZGYU5VRkhSRE5CYlhBeVFWUkViVUZIY0d4QlNsSnRRVzFFYkVGSFdqTkJkMXByV20xSWJVRjNSRFZCZDFadFFXMXdha0ZVU0RKYWJYQXlRVlJhTVV4SFdtdEJkMVl4UVVkTWEwRnRSREJNYlVWM1FYZGFNVUZ0VjNaQmQxWnRRWGROZVVGNlJHMWFVVVY0V20xTU0wSlJUWGxCZDFZeVRHMU1ORnB0VWpKYVIxZDJRVWRTYlZwSGNESkJiVkl6UVZGYU5VRnRjRE5CYlVWM1FYZDRNMXAzU0d4QlIwUXlRWGRJYkZwNlZqQkNVVVY1UVZSRU1rMVJSRFZCZWxJelduZEZlbHB0VG0xQmQwUTBXbTFPTUUxUlNEQmFiVnB0UWxGd05VRnRjRE5hZDB3MFFVcFNiVUYzY0RKQmJVd3lUWGROZUZwdGVHMUNSM0JzUVVkYU1rSkhUWFZhYlhBd1RWRmFiVUZVUkRCTmQxb3pXbTFNTUZwSFNHcEJNbEl5UWxGYU0wRlVTRzFDVVZwdFFWRldNazFIY0RWQmQxSXhRWGRNTUVGSGNEQkNVVXd4UVZSV2JVRkhUREZCVkV3eFdtMWFORnB0VWpOQlIxcHRRWGRhTVVKSFRYcEJkMUpoVVVSak1IQjZlV2h1UzBVMVZsRXdkRmN4VTJkSU1HdFdSVlZJTTBFd01YaEdZVWxqYmtoTlFreDRRWFpJUjBSdFdqTjFTVnBLZVUxQmRtZG5SVE5YZWtkSFRWbHVWVmRuYmtoU01YRktTVUpZTURGUlRVZzFZa3hLY1ZSYWVqbDRURWRKZWtodGNVWlliVk5CYnpOWGRXOVNXbWxHVTAxUVJERlRSbkZTZURCeVIwa3pSWGhuU0VaaFYyNUVkMHhzU0ROQmRVMVFPVWhCVkRGMWNsRjFWRzVKVFVGdlVVVXpXREk1UlUxU1kwSk5ZVWxJV0RCTlJFMUtSVVJHYlU5cWJ6QnJOVXhLZVVaRWVYUXpSREk0YTI1VVRXSnZlblZaU0dGQmFuQjNkWGx1U0VsRWNubHhha2w0ZFhwd1NFVTJjREJGZFZnelUyZE1TRWxOY0RCRU1saHRSVzFhU1UxUlRYZzBhWEpUVDB0Q1IzVkpXbEpCU1hKNFYyTkpNMU5vY1hsSmRYQlRTRFZHZWpVeFIzZFRTVzUzUlRWYVNsTlJTSGhCYW5GSGVYaEViVTh6U1ZBNWFFUmhWMVJ5VW1kSlJESlhSRUpIZERKYVVqVmhjbEYwYlVoSFUzWktlV05vV2tZNWRraExWMk5GU25obFJ6STVlVnA1ZVVOdk1WTjVUVEl4ZFVWUU9YWkpkM0EwUnpBNE1VZDVTV3hFTURreVdsRkJkM0Y2ZURKS2VGcHNjSHBtTVVZeWVXMUJZWFYxYjJGNWRVY3hTVmxKTUdveWNGSjFXVm95ZURGdk1VOVhiekIxTUVSdFJHeElNRUZJYnpCblFscElTWGRCZVU5RVNERkpaMXB0UVZodVUzVnFjRkpCYlVWS2REQktSMEZFY1RCMVdFRnRVMWh1UzBWa1RWUTFiRUpTT1dkQllVVlViMGw1TWtRd1FWTkZTbmt3UldGWGVuQlVNREpJUzJNMlJEQk5ZM0pUZVdwdlUzaHBSbE5FWlZreFZ6UkNVM1F6YmpBNE0wSklSVTF3VWpsaVdrcE5UVWxTUVhwdk1uRnBSWGhhYWtKU2ExVndVbG8wY2xOU2FVbDZPVVJFZG1kb1IzZGFNVzVoZVdwSFVYQnNibmRGTlhFeGRVVmFiVUYyY0hoRlZIQlNTWFZ2ZDNsclNESjVlVUpMVnpOd1ZXTTJSek5YYTBSS2VHVkJWREZyV2pOQldHOUhVMXBHTUhGdVFWVlhRVUZSUVdsRVNYRk5jRWQ1VDBkTFUyUkpkM1ZzVEdGYVpWa3plV3R2VVUxVWNrbDVVMEZJT0d4eVMySXhTa3R3YVc1TFFXaE1TREZTV25keGJIRXdUWGRZTUdacFJrdGpTRnA0ZURKS2VEVmxTRWxKTlhCSFRWcGFkM0JxUWtwcWFrVlVjVTFKZWswMGNGTlBSVXhIZFZGdlZIa3dXa3BTTTFsdFFUVkJWRVZ0U1ROTU5VaEtNV0pHTTNCc2NucEJUM0I1U1dKQ1ZFbDNXVEZQTTI1dGVXZHdNamxqUjBkWGRWa3dZMDl5WVZjMGIxUnJOVUV5T1dSSVNsb3ljbFExVUVGSWEzaHdSMGhzV25sNVFYQmhUMHhhTTNGdWNERlRiVnA0TUROdlNtZGxjbm81VlVoUmNXSnZlR293V0ROYU0wa3pVMDFHVkhWb1FWUXhaRWxJVjNodk1HcHRjREZqZVZrelkzaElVamxoY1VwVFFXOHpWalJFZUdzelJUTnhlRUpKZVhwR1ZFVlVRVk54U201S1UzVkZSMGt5UmxKMGEweDNlRE5HTVVsa1JqSlRla2N4Y1doWmJVbG1jVzFNYTNKSmRHbHVla2xxY2tkNE1WcEhkVkJOVTBWdFJsVkpVVWg2UVVsdU0wUTFXVEk0TUUxSlRqVnVlalZoVFV0YWJHOUxRVlp2U1dOa1JIZDFia2RTY0RKdVZHTlNSMjF4YkV3eWVEUkVNMGxUY0dGV05HOUtVbWxNU0VGU1NWVmpVMHA2VjFWeVVVRnJiMHR4VDNKM1RHcENSM1F3V2pGSmRrZFJUMnhOZDNCc1FVbzFhMDFRWjBSeVNsbzFSRWRYWTAxVVowMUZVMFZpYm5sMVZGa3hVMmhZTTBGTGNIZDVhMjh3U1VkTlJtZFpjWHBXYkVGTFYwMVpNREZyU1ZGRmFVVlNUVWhCU0RsMlNrWTVRbTU2U1hoTlNqVnJUSHByUlhCNlREUk5lV0psUkV0QlowcFNZakp3ZVhWS1dubEJVa0ZLVXpOWU1qRlZTR0ZTYWtZeWRVdEhVbGR1Y0RGMWFYQXpWMGhOWVZOWlJYcEpaMHBSUVUxYVVYRmlXREYwYlVwaGNWbHlTbWRQUVRGT2FVZFZRVEJ3ZDFNemJraHhibkJLZERGQlNtTmpUREZJTVVRd09VaEhTRlp0UkROQlJYQjNUVzVHTUhoc1RFbzVaMXBLZFRGTlZIQTFRVEJUTUZremNXRndTM0ZxY0hoMVUwaEhVMEZ4VlhGcWNIcElNRzVTTkRKQ1NqQXdSVk5KTlc1S1VqTkhWWEV3YjNsamQzSlRVMUp3VWsweFNGTk1NbTVKVDBwSVZIbEZUSGx3YkZwS2NWbHZVMU5aY1hkeFkzQXdTVVp1VVVGV2JrcEJRMHA0V214TVNrZ3dSMGQ0YkVoS1pqTkllRWh0VFdGMWJVeDNRWGxhU2sxQlNsSTFTWEpUZVZkdVNubFBXbEYxUjBRd2FtdENVamcxUjIxMVEyNHlkVEJGUjNsdFJEQjFibGx0U1dGTlNVRmhRbEZUUkhGSmVXdEtSMFZhUVhoNU0xbHRRVXRFU25SdFJETk5UMEpTTURSSlNFRmhSbFZ3YWtwU2RVTmFNMk5uV0RGSWFrbExSWFZNTW1kS1dERjVhRzlLTVV4Tk1raGxRbE41V0VneU1YaEhTR05JUVhwaWJVUkpTV2xLVVVScFJYaDFWMDE0U1RGdlNYZzFURWw1VUV4TGRHcHdVazFCVFdGU2JVaHRkRFZCZDFOVlFYWm5ZVWxLTlZSRlVsTmFUREpKYkVsS1YyeE5NREZWU0VkWFJFcFVjV2x2TUd0NVNWVmFNMjR6U0dsQmVHTmhSRzFUUVVSMk9WVnhkMU5xUlROQk5rMVNaMUZNTTNGTVNIbE5NMDB3TVZCd2VVdzBjWGh3TTBwSVdtbEpTM0ZVV1RGMVNFRXdWM3B2TUVWa1FrdFRlVXBLWjBWR00wUmxTVkYxVFVWdFUwMUViVWt5U1RKMVQzQXdNREpKVkVWWldURlNhbkJHT1U5dlNubG1RVEo1V2tZd09XRklSamd5V2pCNVVVRjZTV3B3ZUZNeVRUTjRNVnAzZFVwSVMzVklRVlJUVWtoSVoySkpTVWsyUjFSd05FWlNjV3RJVkVGalFWUkZlRmx0VWpKd01FVmpjWGhKWmxwSVl6WkNWVm96Um5oU01FRjNjR1ZJZDFZd1dubHhaRzVzT1hWS1VtZGFURWxqVVhKM2NUWkhVakZEY0cxWFowVjZUVEJ1UjBWVWNIaFhkWEpJU1dWQlZFMU5TVE41Ykc4eWREQk5VMk5CYmxGUE5FeDNjRE52U0VWbFNVbzBOWEJUUlZwR2VIVXpSVXBKVlVsSU5UTklNbG8wUVVvMVVVSlJjVFJ1ZWsxbFNUSm1OWEY2UlZKdU1FbENSVzFNYVhCS1YxQkpTbGRFUkhsSmJrWXlhak5hUzJOaVJrbE5WVTFHT1cxeFZERlpSVzF4YUhGVWVEVkdSamxyYjNoamRscGhZMmRaYlZOV2JrZEZXRUY0UVVGRVMyTkhXa3BGUlUxM1FVZE5WRVZwUm5nNVkweDRkV3B5WVVsWFRIZ3hVMHBoZFRCSlZWTmxUVEo1WTNKUlUxVklNbWRHYmxWallXNUlaMVpDVkRGcFdraEplRzUzY1RaRk0yTmlTblpuYW04eVoyNU5kamhzYmpGYU1VbFJUelpZYlZjemIwbEpaRWN6U1RSSlVWTnNSekpGWkVsU1RYcEpSM2wyUmtoeGQwcEtOVXRHTVhsSVdqTlRXVTB6ZFZwWk0zRjJURWxGUkc5UlUxWndlVll6YmtwQldsbHRVMnRGVTFabFJVZ3hWWEY0U1daSlVraHBSSGh4VjI5dFRXUk1NMEZ1V1RKbllYQXlZak54ZDAwd2IwcE5aM0IzU1hkQlNFVlhiMjFNTVVjeFNXWkhWSEZoY0VsNWFGcEpUek5HUzBWa1RFaFdOWEZ0ZVhadlZVMTNUWGQ1YTBoNGExSkdTVUZxUjB0NVNVWlVPVkZIZURGNVNsTkpWVVl4U1VsdU1VZ3pRa2RKUkVwMk9VbHlWRTFtUWtkNE5FSlNWMlJGTVVsSFRUTldhVWg1VFZWd1IzbDZSRWxpYkVGVFNERkVlSEZIU25oQmVXNVJRVVJLVTNFeVduZFRVVWgzU1d4SFNWTlNXbFJyWjNFeVNXSllNV05MY0RKRmFuQXlZbXhJU0d0aFFrcDFWVWRMU1RSS1NrUTFTblpuVlVsU09XcEhiVTlvY0ROWGEwZGhVMlJhU0hsMmNFcFNhM0ZJWWpGSlVVVlNTRXB4V1c1SGRESllNblJ0UVhwTllXOUhTR3hJZDAxSGNHRlhVa3gzUVZsRU0zVm5RV0ZYZWt4SVVqSkJTV05sU25ZNVFVUXlPVXBOZW1kSFJsUjRhMEZVV2pCeVlVOHpSbE5QTVVsM2NWVmFVa1ZZV0RONVFWZ3daMmRNU2xOSFRVdGlNVXA0WjJkRk1WTXpRWGRQWkVkc1oySkZNalYzYmtnMU1rSlRWakZ5U2tscldrdFhXWEZSVTBGdk1rRXljbmh4ZFV3eFkxRkhNa2wzUkcxSmJuSlJVMFpDVkdkbmNHRlBlVnBoVTFwdlVYVlpRVEp3WlUxSWExTnVVWGxEUVVsME0xcEpTVlpHTWpWWWNFcDFZVWxLWXpWYU1VOUJRa2R4UzBnd1FWTk5SM2xSY1ZWMWFXOHlNVmhHZUUxblduaHdhWEJMWWpKSVNqbG1Sa3ByVjBSM1FVaHVlbXMwV2pBeFMxcDZPVE5DVTBGTFJVdFhOVzVSUkRWdVVHZEpia2w0TTNCUlJUQkVlbWQyU1hwblFVSktlREJZTTNsNmNIZ3hiVVJKUldkQlZEUTFUWGg1TWtKR1ptVmFNMDlQVFVwTWJVZElWakZ3VWtsMmNsVmpZWEYzVDNodVNFMVRUVW80TVhBd1dtdHlSMEZHUVRKVFVFVlFaMVJOVVhWbVJYaE5ZbTUzY0RCQ1VHWXlSRzFGYlVsR1pqVkVNVWhyY0VkVFJrRXdUVUpCVWtGTFJuWm5NRUZ0VjJ0Sk0wRkpTRlF4Ylc1VlVqTkZNRWxzUVhabldYRlVZbWxGZVVsNVJqRjFRMGg2ZVRGWk1GSXpUSGxYWW01TGNHVndNRmRNU2xOSlZXNTRSREpDVlhGWlRUTkJSM0JWY1VkeGVYbElTRXRPYVc5NlowZHVVM0ZLYnpCVGJYQktaMjFFTTNCcWNsSldaWEJTT1ZCTVNqazJSSHBuUjBoNVJXSndSM1V6UWxGNE0wRXlZMlZLVkZZd2NVbEpWa1p0UVc1d01WZDZXa28xUjNKSlYxQnhZVkkwU1ZKRWJYRXdlVWxHZWsxcWNYZDFZa3BIVjBSTWVtZDNXak5YYTBoVWNUWktTR3RpU0hoWE1sZ3lPVmRIVkhGNlNHMTFla0pLWjJKdk1uRm9SM2xGTWtsVWNUTktlREZOU25wTlkwUXpVMFZ3VkZkclJXMTVaVTB4U1VGdWVFMTFUWHBOTkVwUVowaE1NMk5HV0RGSk1YQjNRVzVLU1ZOc1RERjVZWEIzY1VkQlNqZ3dRWHAxTmtaVGVUUndNMU5TUWtwRWJFUXhUM2xGU2xkRWNEQkJXRVJJZVVKdlUwMVVUSFk1YUVWVFRHeE1kbVp0U2toYWJFSlNlVWhJUzFOb2NWTkJWa1V5ZVZkTlNWZEhUVzFUZVV3d1dtdElWWEF5UmtsalVXOVRTWGxHTTAxaVNIbGpZVnBUZVVweWVtTkZjVEIxVUc5NlNHeE5kMU5aY0V0Sk1VMUhTVEZ5U2tGS1JuZFBhRTFoVm10SlZYRlJjRlYxZFc0eGRXUk1NR05GUkdGeE0zSlRUVTl5ZG1kb1RIaEpWVWQyT0RKQk1tdG9SRWhyTWtReFJYZEVkMU5UUm5abmRsZ3lRWHBhU2sxcWNFbzFVRnA0TVU5TU1qbFJXbmg1TTBaVlUyaE5iSEJCVUhvNWJFeEtRV1pOUms0NVZsQndiVnAzU0d0QmJVUXlRVWRhTTBGNlRESk5kM0EwUVhkU01scHRUR3RCZWtReFRFZElNa0ZSVmpOQ1IwaHFXbnBXYlVGUlJYcGFiWFF4V20xTU1FRkhWakJCVVZwc1FYZDBiVnB0VERKYWJWSXdRVzFOZVVGVVdtMUJVVWd4V20xTWJWcFJTWFZhZWxZeVdrZHdORUZ0UkRGQlIwVjVRVWRPTWt4dFRESkJWRVJ0UWxGTWExcDZUREphYlVnMVFXMVdNMXB0Y0RGQlZGSXhRVWRNTVZwdFRqQkNSMXB0UVcxU01FMVJUWGhCYlhRd1RHMU5lRUY2VEcxYWJVeHNXbTFFTWtGM1RHdEJiWGd5VEcxTWExcHRUREpNZDB4clFYZDBNMXBSUlhkQmQwUXhXa2RKZFVGdFVqQk5SM0J0UVhwTU1FeHRXbXhCZWt3eldsRmFhMEZ0VmpGQ1IxbzFRWGRTTWt4M1JYZGFiVVF4UVcxRU5VRnRUbTFhUjAxNVdtMU1Na0Z0U0d4QlIwZ3pRbEZ3TTBGM2NHMUJiWEF4V25wTU1FSlJXakJCZWtneVduZE5lRnA2VmpKQlIwUXlRWGR3YlVGSFJEQkJkMUl3VFhkRU1rRkhlRE5hVVV3eFFVZDBoUlVBQUVFeFdWUlJlazE2U1hwTlJFMDFUbXBWTUZscVdteE9hbXN4VGtSTk5VNVVVVEJQUkdONFRrUm5NRnBVVVRST1ZGa3lUWHBOTkUxNlZUSlBWRnBwVG0xRk0wMUVVbXROZWxGNlRWUmplazV0VVRGT1ZHTTBUWHBqZWs1RVVtcE9ha1V4VFZSa2FFNVVUVEZOVkZVd1RtMUZNVTE2VW1sT2FrMHpUVlJWZUU1VVNYcE9hazE0VG1wVmVrMUVWVE5OZWtsNlRXcGFiRTVFWXpKT2Vsa3hUbTFSZWsxcVZtaE9WRTB5VGtSUmVVNUhXVEZOUkdOM1RqSkZNazlVVlROT1JFa3hUa1JaTlU1dFVUQk5lbFUwVGxSak1rMTZXbWxOZWxreFRXcFZNRTVVVFRCT2Fsa3lUbXBqZVZscVVtbE5lbU15V21wU2FFMTZhekJaYWxVd1RrZEpNVTU2V21wT1ZFVjZUVVJhYlUxNlVYcE9SR00wVG0xVk1FNTZUVFZPYlVreVRtcFZlRTVIVVRKWlZGcHBUa1JqTWxsVVdtMU9iVTB5VGtSUk5VNUhUWHBPVkZKdFRucFZNMDU2WkdoT1JHTXdXVlJqTkU1NmF6QlphbEUwVGtkVk1GcHFXVEZPUjFWNlRWUlJOVTF0U1RKUFZGbDVUbFJqTTAxcVVtbE9iVVV4VDBSVk5FNVVXVEJhUkZreVRqSkZNMDFxVlROT1JHTXpUbFJqZVU1SFdURlBSRmt6VFhwbk1scFVZM2RPUkdjeFRucGFhazU2UlRGTmVrMTZUbFJOTVZsVVNtbE9WRWt5VDBSamVrNUhSVE5QUkZKcFRYcG5NazE2WXpST2JWRXlUMFJWZWs1cVJUQlplbEY0VFhwbk1FNUVXbWhOZWxFd1RWUk5NRTE2WXpOTlJGSnRUWHBKTTA1NlZUUk9la0Y2VGtSa2FFNTZhekJhUkUweFRtcEZNVTU2WXpOT2FrMHhUMVJWZWs1VVdUTk5SRmw1VGxSTmVrOUVZelZPZWtFeVdsUk5lazU2YTNwTmFsRjVUVzFKTVUxcVRURk9hbWN5VG5wVk1rNXRWVEZaVkUxNVRsUk5NazFxV20xT1JFMHlUWHBSTTA1cVZUSlplbGswVG5wSk1GbHFXbXRPUjFreVQwUk5lazV0U1hwTlZFMTNUbFJaTUUxVVVUUk9Na1V6VFhwVk1rMTZhek5aVkZrd1RsUm5NMDlFV21sT2JWVXdXWHBOTlU1cVdUSlplbU0wVG0xVk1FMTZUWGxPUjFrd1drUlZlazE2YXpGT1ZFMTVUa1JyTWs1RVRYbE9hazB3V1dwYWJFNTZSVEZPYWxreFRtcHJNRTE2WXpCT2Vra3hUbFJLYlUxNll6QlpWRnBxVFhwRk1GbHFVbTFPYW1NeFdWUmpOVTV0VFROUFJGbDZUbXBOTTA1VVpHaE9SR015VG1wWk1rNVhSVEpaZWxwdFRsUmpNVTFxVFROT2Vsa3lUVlJWZUU1NlVURk5lbEpvVG0xRk1sbFVWVE5PVkZFelRtcFZlazVVWXpKYWFscHNUbFJaTUU5VVdtMU5iVWt5VG5wTk1FNVVRVEphUkdOM1RsUk5lazFFVlhoT2VtY3lUMVJLYVU1dFNYcE9lbFY1VGpKRmVrNXFWWGxPVkVVeFRYcFJlVTF0U1RGT1JFMHhUbnBGTUU1RVdUQk9WRTB4VFVSTmVFNTZXVE5OUkUxNlRYcEZlazVVWkdoT2JVa3hUWHBaTkU1dFJUTk5WRlV3VG5wVk1FNXFWbWhPVkZWNlRtcFNhVTVxWnpOTmFsVXdUbGRGTTAxcVl6Qk9iVmt3V21wTk5VNUVaekJQUkdOM1RrUk5NVTFxVFRCT1JHY3dUbXBaZVU1RVp6RlpWRkpzVG1wbk1GcFVUWGRPVkVVd1RrUlZNazVIU1RCT1ZGcHFUbTFWTTAxNlZtaE5lazB3VGtSWk1FNVVaekJPZWsxM1RsUlpNazFxVlhsTmVtTXlUbFJXYUU1dFNUSmFhbGt5VG0xTk1GbHFZekpPYlUwd1RrUlpNRTVVVVhwT2VsbDRUa1JWTVZsVVRUSk9WR3N5V1dwUk1FNXFSVEZOVkUwMVRrUlpNRTVFVFhkT1JGa3hUVVJaZUU1NlNYbGFhbFY0VG0xWmVrOUVVbWhPVkdjeVRtcGFhazVVWTNwTlJGRjRUWHByTTA1RVVUVk9SMWt3V1hwTk0wNXRSVEpOVkdONFRtMVplazFxVVRGT2Vsa3hUMFJhYTA1VVNURk5hbEp0VGxSWk1GcHFZM2RPUjAwd1RucFZNazVFVVRGTlZGRXlUWHBaTWsxcVZYbE9SRWt6VFdwV2FFNXRVVEZOZWxKb1RtMUpNRTlFVlhwT2VrMHdUWHBaTWsxNmF6Sk5hbGt5VG1wamVrOVVXWGhPVkZreFQwUlZlazVxVlROWlZGVTBUbnBuTTAxRVRUVk9iVmt6VG1wYWFVNUhSVEZPVkUxM1RtcEZNMDFVVVRKT1ZFRXpUa1JSTlU1cVNUTlpWRkp0VG5wcmVrMTZVVEZPVkdzeldWUk5lazU2UVRCWlZGRXlUa1JyTUU5RVVtdE5lbXN4VDBSS2FVNXRVVEphYWswelRXMVpNazFxVVROT1Ixa3hXVlJSZWs1cVp6Sk9SR042VGtkSmVrOVVWVEpPZWsweFRYcE5lVTE2VFhwTlZGSnFUWHBGTTAxVVdYcE5iVWt6VGtSVk1VNVVXVEpOYWxsNFRtcFpNVTU2VlRGT2Fsa3lXVlJSTWs1RVp6QlplbHBxVG5wRk1rOUVUVEpPZW1jd1dWUlJNRTE2V1RKT1ZGcHBUbnBuZVZscVVYaE9WRUV3V2xSak1FNTZUVEZOYWxKclRtcFZlazlFVW14TmVrVXhUbXBOTWs1cVp6RlBSRlY1VGxSRmVrOVVXWHBPVkdNd1RtcGplVTVVYXpGTmVsRXdUbnBSTTAxVVZUTk9hbU15VGtSYWEwMTZTWHBOUkZrMVRYcE5NRmxxV1RGT2JVa3hUbnBqZUU1RVRUTk9hbEpxVFcxWk0wNUVWWGxPUjFVeVdXcGFhVTE2WnpCWmFscHNUbnBqTUUxcVRUTk5lbFV3VFdwVmQwMTZRVEpPUkZVMFRtMU5NVTFxVm1oTmVtc3pUbnBSZUU1VVFYcFBSRnBwVG0xRk1sbFVVVEJPYWxreFRXcFJNazVxVlRGTlZGcG9UbXByTUUxcVVtMU9SR3Q2VFVSTmVVNTZVVEZOZW1Sb1RucEZNVTlFV1RCT1IxRXlXWHBSTlU1VVl6SlphbEV5VGxSSk1VMXFUVFJPUkVVd1RXcFplRTVVVlROUFJGVjZUbXBaTUU1VVVUTk9lbEV5VFZSUmVFMTZUVEpQVkZwclRYcFplazFFVVRCT2VsRXlXbXBTYkUxNlVUTlpWRXB0VGxSck1VNUVUWGxPZW1Nd1drUmFhRTE2YXpKTlZGbDVUbnBqTUZwRVVYcE9hbXN5VFhwYWFVNVVWVEpOYWxrMFRtcFpNRTVFV1hsT2Fra3dUbXBqZUU1VVNUSk9SRnBxVGtkTmVrNVVVbWhPVkZsNlRsUlNhazU2UlhwTlJGRXhUbTFGTVUxRVVYaE5la1V4VFVSYWEwNVVTVEJaYWxrd1RtcE5NRTVFVW0xTmVsVXdUa1JqZVU1VVZUSmFWRmw0VG0xRk0wMXFWWHBPVkdzeVdtcGpNRTV0VlROTlJGRXdUWHBaTVU1RVkzbE9lbWN3V2tSWk0wNVVZekJPVkZreFRtMUplazVFVFhsT1JHTXhUMVJOZVUxNlFURk9lbHBvVGxSVk1FOVVTbWxPYlVrelRsUkthVTV0UlRKT2FtTTBUbTFGTVU5RVRYaE9iVWt5V1ZSamVFNUhUVEJPYW1NeVRXMVpNRTFVVFRKT1JHdDZUWHBOZDAxNlZYcE9SRmt4VGxSRk0wNTZUWGRPVjBVelRucE5lVTE2U1hwTmVsVTBUbFJWTUU5VVRYbE9iVWt5VFhwTmVVNUVWWHBQVkZrMFRtcFpNVTVVWXpGT2FrVXhUbFJTYlUxNlJUQlBSRTEzVGxSUk1FMXFUWGxPUjFVd1RtcFpNazU2WnpKTlZFMDBUbFJKZWs1RVVUQk5iVmt3VG5wUk5FMTZZekpOVkdONFRsUlZlazlFVlhoTmVtTXpUMVJSTVU1RVNUSk9WRkpwVGxSWk1rNTZVVFZPZWxVeFRYcFZNazU2V1RKTlZHTjNUbFJCTTA1RVZURk9lbFY2VFVSUk1rNVVVVEpPYW1ONFRsUm5NazlVVVhwT1Ixa3hUV3BWZWs1cVVUQlBWRXB0VGtSTk1FOVVXVEpPUkdNelRsUlZNRTR5UlRGTlZHTjZUbnBGTVU1RVZYZE9WRTB4VFdwWk1FNVVSVEZOUkUwd1RucGpNRTlFWTNkT1Ixa3lUbFJTYVU1cVdUTk9SRkpwVFhwcmVrNXFVWGxOYlZrelQxUmpORTVVWnpGT1ZGRjZUVzFaTTA1cVRURk9SRWt6VGxSU2EwMTZVVEphVkZWM1RYcE5NRTVxVm1oTmVrRjVXbXBTYkU1VVVURk9lbHBzVGtkVk1WbFVWVFJPYWxrelRXcGFhMDVxWnpGUFJGRXdUbXBKZWs5VVdtcE9hbGt3VG5wU2FFNXFXVEpPZWxKcVRtcFJNVmxVWXpOTmVsVXlXWHBSTlUxNlVYcE9WRmt6VGtSTmVrOUVXbWhPYlUweVRtcFplVTVVV1ROT2FsRTFUa2ROTUZwcVdUVk5iVmt4VGxSYWFrNUVVVE5OVkZwb1RsUnJNazVVVFRGT1ZHc3hUMVJaTWsxNlNUQk9lbHB0VG1wUk1VOUVWWHBPZWtrd1dXcGFhRTVxVlhwTmFsbDRUbnBqTWxsNlVYbE9lbEV4VFhwUk1rNUhTWHBPVkZwdFRYcFpNRTlVVFhwT1ZFMHlUWHBaTUU1SFdYcE9lbFV5VG1wamVrNTZZekpPYW1zeVdtcE5NazU2UlhwT1ZHUm9UbnBWTTAxNlZUVk5iVWt5V2xSYWJVNXFaekphVkZFMFRucFZNRTE2VW1wT1JGa3lXa1JOTVU1SFZUTk9WRkUwVG5wcmVrMTZVVE5PYWxVeFQxUlNiRTU2VVROWlZGRjRUa2RWTTAxRVZYbE5lbFV3VDFSTmQwNTZRVEJOVkdNd1RrZEZNRmxVVFRWT1IwVjVXbXBWZDA1cVdUTk5hbEp0VGxSSk1FMTZTbWxPVkUxNlRYcGFhazVxU1ROT1JGRTBUWHBGTUZscVl6Uk9hbXN6VFVSV2FFNVVXWGxhYWxwclRrUmpNbHBxVFRWT2VrRjZUMVJqZUU1SFZYcE5lbEY2VG5wWmVWcHFVbWhOZWxsNlRtcFJOVTVVVFhwTmFtTjZUWHBWTWxwcVdUSk5iVmt4VFhwU2EwMTZWVE5OYW1ONFRucEpNazFVVlRCT2FrVXlXbXBqTUU1NlVUQk5hazAxVGxSVk0wNVVVVE5PUjFVeVdYcGFhMDVFYXpCT2VrMTVUbnBOZWs5RVVtdE9hbFY2VGtSWmVFNUVXVEJQVkdNeVRtcHJNMDVxVm1oT1ZGRjVXV3BTYTA1VVFYcFBSRlV4VFcxWk0wNXFXVFZOZW1zelRrUlZNVTU2VlhwTlZGazFUbXBKZWs5VVVtbE9SMFY2VDBSWk5FNTZVVEphUkZsNFRucEZNazVxV1hwT2VtdDZUa1JqTkU1cVJUTk9hbEpzVG1wWk1rNXFVVEpPZWxreFRsUmplRTVVVFRCYVJGa3hUWHBaTVUxNlpHaE5la2t4VG5wTk1FNXFZekJPUkZsNFRYcHJNazFVVW10T2FsVXdXa1JWTVU1NlFYcE5WRlUwVG1wSk1rNTZZekZPUjFrelRtcFpOVTVxYXpOTlJGVXpUbXBOTVZsVVkzZE5la0V6VFVSamVFNUhSVEpaZWxwclRsUlplVnBxV1ROT2VrRjZUV3BqTkUxNll6QlBSRTE0VGxSTk1rNVVXVE5OZWxVeldWUmthRTU2UlRGUFJFMTZUa1JqZWs5VVkzZE9la2t3V1dwWk0wMTZaekZOZWsxM1RYcG5NbGw2WXpCT1ZFMTZUa1JWTlU1cVZUTk5SR00wVG1wTk1FNTZUVFJOZW1kNlRXcFZlRTVxU1RGWlZFMHdUbnBKZVZwcVdYcE9iVkV6VFZSTmVrNTZRVEphYWxrelRtMUZNbGxVVVRKT2VsRXpUWHBWZVUxNmF6Qk9WRmt5VGxSQk1GcEVVVEZOZW1kNlQxUlZNMDVVUlRKTmFsVTFUbFJaZWsxRVkzaE9SRTB5V2xSYWFFNUVUVEJaZWxVelRtMU5lazVVVlROTmVtc3dUMFJSZUU1NlFUQmFWRkV4VG5wSmVrNXFXVFZPYW1jeVdsUk5lazVVUVRCT2FsRTFUbXBSTTA5RVRUTk9iVkV4VGxSTmVrNTZVVEJaZW1Nd1RsUlZNRTlFVm1oT2Vra3pUbXBLYlU1SFNUSmFhbU0xVG0xWk0wNVVWVEJPVkVFeVdrUlJNazVIVlRCWmFrMHhUbnBGTVUxVVRUSk9hbU42VFdwTmVFNXRSVEJPUkUweFRrUkZNazVFWTNwT2FrVXlUV3BSTWs1cVRUTlpWRlUwVG5wRk1sbFVUWGxOZWxGNlRtcGFhRTVxYXpOT2FrMTVUbnBKTWxwVVZYbE9hbEV6VFVSVk5FNVVRVEJaVkZwc1RtcHJNRmw2VVhoTmVsa3lUbnBqZUU1dFJYcE5SRkp0VG1wWk1FNVVaR2hOZWxVeFRtcEthVTVFWXpCT2VrMHpUbXBaTUZscVVtaE9SRWt5V1hwWk1rNTZVVEJaZWswMVRrZE5NRnBxVVRKT2JWRXlXbFJaTkU1RVl6Sk9hbFV3VGtSWk0wNUVXbWxPUkdjeFRVUlNiVTV0VVRCWmVsRXdUa2RWTTAxVVZYbE9la1V3V2tSa2FFNUhWVEpPYW1ONlRsUm5lazVVV1ROT2VsVjZUVVJTYlUxNlJUTk9hbU0xVG1wak1FOUVXWHBPUkZVeldWUlplazVFV1hwUFZGRjRUbnBaTUZwRVZUSk5lbGt6VDBSUk1FNVVZekpaZWxKdFRYcGpNVTFVV1RKT1ZFMTZUMFJSTlU1Nlp6TlpWRTE1VGtkRmVWbHFZekJOZWtrelRVUmpNazE2YXpKWmVsSnBUbXBaTVU5VVRURk9iVkV3VDBSTk5VNTZZekJaZWxwb1RrUk5NazVVVW1wT2FtY3lXWHBaTVUxNlRYcE9lazAwVFhwbk0wNXFUVFJPZWxsNlRXcE5NazV0V1hwT2FsVTFUa2RKTWsxVVl6Tk9lbXN4VFVSTmVrNVVaM2xhYWxGNVRtMUpNRTFVV1hoT1ZHTXlXbFJSTTA1RVVYcE9lbFUxVG0xTk0wMVVVbWhOYlVrelRVUlZkMDVVVlRCYVZGbDRUbTFOTWxsVVNtbE9SRWt4VG5wU2FrNUhVVEJhYW1ONlRucEJNbGxxV1RKTmJVa3dXVlJOZVU1VVRUSlpWRXB0VG1wamVrMUVWVEpPVkZFelRsUmplazVYUlRKUFZFMHpUbTFSTWs1cVdtcE9WR2Q2VG5wYWEwNVVVVEZPZWxKclRsUkJNMDVFVlRKT1JFa3pXVlJaTkU1VVNUQlBSRkV5VGxSbmVrNVVWVFZPYlVVelQwUmpNMDV0VVhsYWFsSnFUa2ROZWsxVVZUQk9hbFV6VG5wYWJVMXRTWHBPYWxrMVRsUmpNMDlVV1RCT1ZFVjZUV3BOTlU1RWF6SlBSRkUwVFhwSk0wMXFUWGRPYW1zelRtcFplazE2VFhwT1JGRjRUa1JSZVZwcVRUQk9ha1V6VGxSWk1VNVVaek5OYWxFMVRXMVpNVTlVV1RST2Ftc3dXV3BLYVU1NlNURk9hbEUwVGtkRk1VMXFUWHBOZW1zeVRucGFiRTV0VFRKTmFtTXdUa2RKTTA1VVkzbE5lbEV3V2tSVmQwNXRUVEJPYW1ONVRtcFZNbHBxVW1sT2VsRXlXWHBSTWs1RWF6RlBWRTB4VGtkUk0wOVVWVEpPYlZGNlRVUlJNazU2YXpKUFZGcHNUbGRGTUU1RVdtcE9WRmt6VDBSUk5FNVVRVEJPYWxGNVRucFJNazFVU20xT1YwVXlUbXBhYWs1cVNYcE9hbU4zVGtSWmVrOVVVbXhPYWxrelRWUk5lazE2WnpGT2FsRXdUbFJWTTFsVVkzcE9WMFY2VGxSamVFNXRTVE5aVkZWM1RXMVpNMWxVV1hoT2FsVjZUV3BqTUUxNlNUTk5SRlV3VGtSVk0wMVVXVEZOZWtFd1drUktiVTVYUlRCTmFrcHBUWHBGTTA5RVZUVk9lazB6VDBSWk5FNTZSWHBOZWxVeVRrZE5NVTVxVlRWT2JVVXpUV3BqZVU1RVozcFBWRlV6VFhwWk1VNUVVbWxPYWsxNlRXcFJlazVIV1ROTmVtTjZUbnBCTVUxcVNtbE5la2t5VDFSTmQwNXFhek5aVkZKclRYcFZlazlVVFRKT2VrVXpUa1JOZDA1Nlp6Sk9hbU13VGxSak1GcFVaR2hPUjBsNVdtcE5NazVVU1RCUFJGSnJUbnBKTTA1VVdtcE5la1V5V1ZSVk5FNUVVVEpQVkZVeFRrZEpNMDVxVFRWT1JFa3dXWHBLYlU1VVJUQlplbU13VG5wTk0wNXFWVFZOZW1zeVQxUlZOVTVxVlhwT2FsSm9UWHBuTWsxNlZUUk5la0V6VDBSTmVFNXFhekJQVkZwdFRsUlJNazlVVW1oT2VsbDZUMFJWTTA1VVZURlBWR013VGxSUk1GcHFWVEpOYlZreVdsUmFhRTVIV1hwTlZGVXlUbXBaTWs5RVpHaE9SRWt4V1ZSak1rMTZXVEJaYW1NelRucHJNVTVxVW14TmVrRXlXbXBhYWs1VVp6TlpWRTE2VG5wQk1FNXFXWGxPYWtrelQwUlNhRTVIV1RCYVJGVTFUWHBSTTA5RVpHaE9lbXN3VFhwVk5FMTZaekJhYW1NelRucG5NMDlVVVRGT2VsVXdXV3BhYkU1cVJURk5WRTB3VGxSak0wOVVaR2hOZWxVelRXcE5lRTVFWjNsWmFtTjZUbGRGZWs1VVdtaE9SR2N4VG1wU2EwNXRTVEZOYWswMFRsUnJNMDlFWXpST2JWRXlUbXBSTTA1VVkzcE9lbGt5VGxSck1VMXFTbWxPZWtGNlRsUk5OVTVVV1ROTmVsVjNUWHBGTTAxVVkzaE9SMDB4V1ZSWmVVNTZhekZPUkdSb1RrUm5NazVxV1hsT1JGVXdXbXBXYUU1SFdUTk9WRlV6VGxSQmVrNVVZekJPVkVWNlRucFZNVTR5UlhwT2FsRXlUbXBSTTA1VVZURk9Na1V3VGtSU2JVNXRUWGxaYWxwcVRtMUpNRmxVVFRWTmVtY3lUWHBOTkU1RVVUSmFWRnBzVGxSWk0xbFVUWGRPVkVrelRYcE5lRTVVVFhwT2VsRXhUbXBaTWxsVVdUTk5iVmw2VG1wak0wNVVZM3BOYWswelRsUk5lazVxWTNoT1JHY3lXa1JTYUUxdFNUSlphbFUxVG5wbk0wNXFXVEJPZWsweFRucE5lVTV0VFRKTlZGcHNUbnBOTTAxVVl6Sk9lbXN3VFZSWmVVNVVUWHBOZWsweVRYcG5NVTlVVlRST2VtY3pUbXBOTVUxNll6Sk5WRlpvVG0xTk1GbHFUWGhPYW1ONlRWUlZNMDVxU1RKT2VtTXlUa1JaTWs1RVl6Uk9WRWt5VGxSS2FVNVhSVE5QUkdOemhSVUFBRE5CZDNSdFdtMU5lRUYzY0RKTVIxcHJRVWQ0TVV4SFREVkJla2d5VFZGRU5WcHRlRzFhUjBodFFXMUViVUpIY0d0QmVsSXhRa2RJYTBGdFRESk5VVWwxUVhkV01rMVJSRFJCZWtReFRFZGFNRnB0VGpOQmQxZDJRWGRXTUVKSFJESkJiVVF6UWtkRWEwRjZWakphZDB4clducE1NVUZ0Y1hWQlVWWXdXbmRJTTBGNlNEQkJiVVYzV20xME1rMTNjREJhYlZvd1FsRkVhMXA2VmpKYVIwUXhXbTFNTUVGUlYzcEJSM0F6UWxGRmVrRnRWbXhOZDNGMVFWRldNRTFSUkRGQk1sSXpRbEZhTVVGNlVqSk1SMGd3UVVkT01FeHRSREpCZWxZeFFVZE1iVnB0UkRGYWJWb3dXbTFPYlVGdFdqVkJkM2d3VFVkYWFrRnRkREphUjBWNVFVZE9NVXhIY0RWYWVsWXlXbTFJYTBGM1JESk1kMGhxUVZGYU1FSlJUWGRhZWxZd1FrZFhka0YzUkRKQlVVVjJXbTFJYlVGSFNEUmFiWFF5V25kSU5FRnRXakJNYlZkNlFYZDRNazFSUkRKQlIwUXdRVzFNTTFwdGNESkJVVXd6UVVkT01VSkhSWGxhYlhRd1drZEpkVnB0VEROQ1VVZ3pRVWRNTTB4SGNEUmFlbFl6V25kTU1rRjZUREZDUjBnMFdtMXdNMEZ0V210QmVrZ3pRa2R3YlVGM1NEQkJiVVY0V20xNE0wSlJXalZCZWxZeVRHMU5kVUY2U0RCYWQwUTBRWGRXYkV4M1NEUkJSMVp0V25kd00xcHRXakpNZDBWMlFWUkVNMXAzUkd0QlVYUXlUWGRJYWtGNlREQkJiVVF4UVhkYWJVRlJXakpCZWtneVRYZGFha0V5VWpKTWJVd3hRVzEwTTBKUlNESkJiVm94V25kSmRVRlJXakJCYlV4dFFXMUVNMXAzUkd4YWVsWXhXbTFFTWxwdFRHMUJiVVYxUVRKU2JWcHRSWGhhZWxadFFrZE5ka0Z0ZERKYVIxbzBRVzFhTUUxM1RHdEJWRkl3VEcxTU1rRnRTRzFDVVVodFFYcE1iRTEzVEcxQlIwd3hRa2R4ZFVGNldqRmFVWEExV20xRU0wSlJjRFJCZWtnelRFZHdOVUZIUkRCTlIwd3pRVWRFTWt4SFRYZEJiWEF3VFVkTU0wRnRjRzFDUjNCcVdtMUVNa0ZIY0cxYWJWWXdRVWRhTkZwNlZqTkNVWEYxV20xYWJWcDNSRFZCYlhBeVFYZHdiRUZ0ZURGQlVVVjRRVWQ0TTB4SFdqRkJiVll5VEhkTmVVRlVXakJCYlVWNlFYcFdNa0Z0UlhsQmVrZ3pRVkZ3YWtGNlRESmFiWEF4UVZGME1reEhjRE5CVkZvd1FVZE5lVUZ0U0RGQmJWZDZRVWRNTUVKUldqSkJkM1F5V25kTmVVRnRXak5DVVV3MFFYcElNVUpSU0RSQlIzUnNUSGRNTTBFeVVqTkJiVm93UVhkYWJWcDNSWFZCZDB3eVRYZE1NVUZ0VG14TmQxb3hRVkZNTUUxUmNESkJSM2d4UVZGd2EwRjZTREZCZDNBd1FWRmFNRnAzU1hWQmVraHRXbTF3TlVGNlNEQkNVWEF6UVVwU01scHRSWGRCU2xKc1RYZEZlVUZSZURKYVIxb3dXbTF3TVZwdFJYZEJiVVF3UWtkYU5VRlVTREJOZDBWNVdtMTBiVUpIY0ROQmJVd3lRVzFNTVVGVVVqRk1SMHd5UVcxV01FSlJXak5CVVVneFFYZHdhMEZ0Y0cxYVVYQXdRWGRJTWxwM1YzcEJiVkp0UWtkSU1rRjZXakZNUjFkMlFXMU1Na0ZSU0RWQmJYQnRXa2RNTTFwdFdtMUNVVXhzUVcxSU1rMVJTR3RCVVhCc1RIZE5la0ZIZERCTWJWZDZRVWQ0TWsxM1RESkJla1F6UVhkTmRVRnRkRE5NUjBReFdtMU9iRTEzU0RSQmVrUXpXbmRhTWtGM1JHeE1kMHhzV20xd1lWRkVZMlZOUzNsblRFcG5lWEIyVGpsV1VIRlhTRkZUV2xvd2VYWkhVWEJ0VFhkRmVtNTNUVFpKTWxOdVFWRjFiRTE0VTFwdVZVVlZiekpFYlVkSU1WUkdWREZXVFVsTlFYRklaMnh1VlhsU1NsRlBWMDB4U0RWQ1MyTnBUVXBUV205UmNVMU1lakZRVFZKWFkzRlJWMVJNU0dveVFYaG5Ta3BoZUd4d1JtZDVSbEZ3YkVWNlYwdEhSM2d6UlZBNWJFWXllWFZHU2sxQ2JsUjFaRWhKZVV4eFIzVnNTVEl4VEVsU1RERkVSMDkyVFRGRlNVWjNRVVpGU2t3d2JrbzRNa0V4U0cxd2QwRkxjbEZQYWxodFJUWnVNWFZsU1ZBNWJFRktPVmRNTW5sNVRWUkpkbko2UlZWd1lWTnBibTFKVUVodFJHdE1TR1pxUkVnNGEwaDRjRFJ3ZWsxNVFrdDFWVWRIVHpCRlVrMVhXbm8wYlc5Mlp6SkplamxNY1d4blprZEtVbTFGZWxJMVdrZHhWWEpIZFVseGQxTk1RWGhOUVc5NFYxZEJTbXRwUm5kSmFraDRSVEJZTW5GdFJYcEpZMFF3Y1hsdk1HTjNSbmRNTWxwNVRUQnlVM1ZCVFVwVFNsZ3lVMVJOUzBVeVNFb3hla0V3VTFKTk0zQXliMVZQTVZwS2RVeEZNblZVU1ROMVVIRktkVmhKU0RGbWJsUm5iRWRVTlcxS1NIbFFURXBOZGtZemNWaHlVMk14VERCd1pWcHRWekp4TWpsaFRWUjVla0ZTTVdKSVIwUnBiek5TTUVsS2VWQkNSM1ZwYnpGUFJIQktjREZCZDBSbFJEQmFhMGQ1U1ZGdU1EbFJSREpuZG5CUmNVOUdZWEF4UkhkQlprd3hlVmhOZW1ZemNVcHJNa3d5TVhwQlNrMWpUSFpuU1ZwSlNXRnlTSGxZV25kNGFtNXNPVUpOU1hCcmNYZDBNWEpTTVZoWU1rVnBRVlZCZGxneWExUnZTVk5NUVROQmVrZDZVME54TUZZeVRHMUZOa2RJWWpOSmVuVkhjbUZUVEhKTFFWVnZTRll6UjBvd05XOVFaM2xIU2preVIwZzVabHBVTVRadVVuQXpTR0ZYYkVRemNEQkJNakZwUVRKMVQwVjZUVXBGUzBGcGNFdEJXRWRVVTAxQ1VVOVFibnBYWTBwSWRVZHhNMWRaUmpOT1pYRlFPREZ1TW1zMFJuZFhhMFY1ZEROQ1MwMVJRVlJCWjI4d1FVVmFNbG93VFhkUGEwRklZMmhCWVU0MFRFZFRWMjVJTlRWQ1IxZFBUVEkxV25CNmFtdE1TamxJYmtnNFpWZ3lkVUZ3TWswd2NXRnhXVTFLZFU5eWQwRldSVWx4V2tFelkweEhTa0ZsY0ZGNVpFUktTVTFGZURsVFRXMUpTbTR6VjNoeE1uVnNUVEpqZFhCNGVHbEtWVTlzUWtkVFkyOUljV2xHWVdNMlJ6Qm5Za0ZUU0RSRU1Ea3lTa3BUVTBKTFJWbEJlbkZQUVcxUFYyOVVkR2xGZWt4dGNVZDVOVzh6U1dKSk1VMXNUVEJUYVc1TFYydEJVRGwxUVhkeFYxb3dOR3RhU2psTFFYb3diRnBJVXpaS1NIbFRjRkZCVlc1VlJUWlpNR05oY25kTU1FRlZTVmRDU25GTlJsUkpXVWg0UVdGS1ZFbEJiMVZ4YTI1SmNWbE1NbmxyU0hoRlZYRjVRWFZNU2pReFJsTmpRMDFRT1ZWd1IzRlFRVEIxVTBZd09ESkhlSEZzUVVkSlkwWjVjVWxLU2pneVIxQm1OVVpIUlhwd00xSTBSV0Y1VjB4SVUxaHZNamxGU1hwSmFFUnRkV3BGYkRrMlRETk5ZVWgzVFdoR00xTkxjbEYxV1hKSFUwSnlVVnBwV2pKeFEwRkdaMnRLU0hWUmNIZEJNMW95VW14TlVtTXlUWHBUUkhGNVYycEpTbU5wU1cxNVFVZ3hUMVZ3U2pnemJ6SkJRVWxSVjJadVMzVTFXakZqYVc5NFNVVktTVk5aUVRJeE5tNTRhekJDVTNCdFRERkZSM0JJVWpOd1VrVk5XVE5YV2tkUmRUWkNWWFZqV214bmFIRlZlVmxJVlVGdFJtRjFWa1V5TUdsd2VGTjZSRWR4WmtaSVRVMUlZVmRHU1hwTWJFbGhUV0pOYlV3eVFVdGpRVmt6VTNaQ1NXSnFia3RpTTNKVVkyeHlVM1ZuU1dGUFprMVRTREJJZW1Oc2JubDFZM0F6ZUd4TVIza3hjSGhyVUZveU1HMU5NbGRyUVdGMWFrMVNPVWxOZW1KclRFbFNiVnBLU1Zodk1VOVJRbEJuUjBwTGREUkhTbE4xV0cxQlJXNHhVMVZIUzAxUWNsSkpaRzl0VFVWRlZVRmljVEpyVVZwdFRESmFkMDlxUVRKTlpFUXplV3BITW5sUFRUQnFhMjR6VjJSTk1rMHliMkZCWjBneFYwSkZNWEEwUm5keE5scEhVMFJ2TVVocVJWUnJWMFF6VTFkQlJtWXpXa2RGVWtadFYxQkpla0ZDUVcxMVVVRjNSR1Z2U0hRMFRVcFdiVzVWWTIxeE1YRnBURXRQUVc1TGREVkpWVUZvUm5wVE5XOVRVMHBKZW5WWWNubGpVVm96VW0xRVNrbGhSMjF4YkVwVVNYVkhTWFF5VFhkTU1raGhkVkpITVZkUmNIbzFXRUpJWjJGQ1IwMDBiMGg1TTBkM2NEVllNa1ZSU1hkVFQxZ3daelZKTVZOaWIzcGpla1V3VFhsdmVEUnRTVlJqVkV3eWNXRkJWRk41UlVoNVFYRklPR1ZKTVVsSmNrdDVaMGRzT1RCSllVRlJXVEpOVTB4NFFXUkdNMGxxUm13NGFXOTZjV2ROVWtGSlNXMUJSRWQ0YXpOd1IzRmhSbEZCUmxwNk9WUkNVVWw2UWtwTU1VRnRTV3h4VTNoc1dESk5kbG94ZURKTlVqVlJjVE41VjFvd09WTklTbkZLU0ZGSmFrcEllR2x4VlhWRGNEQm1NRzk2UVVWQk1EUnBiakpKVlZvelFXaGFVa0ZXVFVsSlNrMXRVbVZGZURsUFRVbDVTWEJUUkRCSlNsbzFUVW94WW5GdFFXUnhkMFV6VFhveFpXNUpUVWhGUjAxbmJqTjBiSEJUWTFOdlZFMWtiekpCYTBGVWVXRmFZWFExV2pGSlpsZ3hRV0pDU1VGdFNIbDVaVVJLU0d0R1IwbDRiMGd4YTBoVWVVSkpTbE4zVEhoSlpFSkhUV3BDVUdkUVFXRjVla1ZKVjB4eVNuRmpTVWhyYVV4SVUzbGFVMDlwY0RKU05YSjRTVmxOTVdOQlRWRlhNWEZ0UVdwdlNGWXpUVlZYVVc5c1oybEhWRk5RUkROSk5Vd3hWMUJaTUZkc2NFbEplRVZVY1hsR1MzbHBUVW8xYkc5U1JESkJVbmxVV1ROeFpFWkhkVFpKUjFkWWJsVk1hVVF6VTBaQ1NVZ3pTbmhyWTI5U2RXbE5lWFZuV2t0NVFYRjRaek5OUjAxaVFYbGlNMGxLUkRWYVIwMU5XbmRQWjB4S1l6Vk5iRGxpV1ROQlJIRXhTVzFLZWtscVNVZFdNM0Z0ZFRaRU1ra3hRa2RYTVVKS2VVZHZlRUZYY1dGYU0wSkhlVkJhTTBFemNGTkpaMjVKWW1WRmVuVmxjR0Y0Tlc4eFltbHhkM2xCYmtabU0zRjNSV3BLUjBGMlJsRjVNVWhLUkdWYU1rRlpSRXBOYkhKVWVYcHdiVTB5UVZWeGFISjJaMnBDU1hrMFdubFdNMGhJUlRaeGJVRmlSWHA1UkZwTGNXaGFlR1l6Y1hveFEyNTZlREZHZUZNeVNIZGFhVUpJTVdOQlJqbDFja3BuYW00elFXZHdNVm95Y0ZSTlNWZ3lTRFZCTTFOTlNEQm5aVmd5ZFdkdk1qVjVTWG81YkVkNmNYcEplSEZyY2tobmQyNVZVMjF3VkhVeldXMVhlWEZUZVhadlNVUXpSR0Y1TWtWTFFXVkJVazFNUVROSmVraEtTV3hhYlV3emJrdEJSM0JVVFRSRmVHdEtRVkZPWlVGaFFUSmFla2wzU2t0NE0zQlRSR2xOZUdjMWJqRmpaRWRJU0RGTlVHZFlTa2RKVjI4d1RXTnVVWEZuVFVkSmFVbEtabVZ5ZW5SbFdqQXhObkJMVmpOSWVqVlpRWGxUV0hCNWNWVnhSMWRFU25kQlMwZGhRVEZ1UjBrMmNVcDBOWEZVZEdwYVZVOHpSMkZqWTB4SFVtVktTMDQxYjIxWGJIRnNPR3BDVlZwcFdrZFhVRzR6Y1dkSlZGSXhiMHA1VW01S2EzWndVbE5qV0RJeGQwRkhTVWxHYlVGTWIzbEZNMEpHT1VkYVZEa3dTa3RPTUZwM2VYbEhTSFZJV25vNE1rWlRRVFp2UzAxaldtMU1NMHBJZURSeFMzVm9TRE5UZDNGaFJVOUNWRUZJVFZOUFVrMWhTVVpNU1ZwcmJrdEJXbTlLVERCTlVuVkxTRE53TlVaVGVXRnZla2syUmtoNWRVRXdjV05OVldORFJqTk5Na2RJZVZaTmQzRmxSR0ZQU2xneGRYWndTSEJzUWtkVFIzQlNWMVpCZW5ReFJIaGFaVmd5VTBsSWVVVkVTbUZhTkVwM1UyZEJVMU5zU0VwMU1YQmhUMlJDVTNBMVJuaEJUMWd4ZFZsQlJqbDFibmRUZUVVeWNESkVNMFZpUWtwVGJVcFFPV0pCZW1Oc1dUTmFhVUZMY1dOS2VFZzFSSGQxYlVKS09VRnlTbU5qUkRCWFNVVXhSWGhDUzFkalJFcDRiVm93Vm1WTk0zbHBjVE5QUVVKUU9HdENWVlkxYmxRd00yNUlkVkJOVTBGU1JqTjVWRmh0UVhkdmVuZzBRa3RKYWtoc09WaEdVRGxrYmxSV01VeExjVzFGYlhGTFREQmFhbTV0U0dsQ1VVVnRjVE5hTTBZd1RHVkZNbE0wU2tsMWFFcGhSR2xDU25FemIxVldhMFF4Y1c1RU1YZ3pSak5QZFVGdGRVcFpiVnBxV2pKblZHOVZVek5aTVZOblNrWm1aVUZLTVV0QmJEbDZiMVZQWTFwdFFWQndTSEF6Y25ZNVpYRnRXakZFTTFjMVdtdzVTbHA1VDNoQ1MwbFJRbEpyYVZreVl6RmFVRGxSYmpKSWJVd3dkRFJhVVhoc2NucE5hRTFJUVdwQmVqRllXV3huWlc1SFZteEpWWEYxV2pOaWExaHRUVkZLZUhsTFFraEVhMjVUVm1WeFIzVm1TbEo1ZWsxSFZtbEJkM0ZaYmtkNE5Wa3hjV3BOTWt3MVdUSjVOVVpVYTFWdk0wOVBTbFJyVlVoSGRYcEhWVTlwYm14bmJVbHNPREpLWVZkcFJuZE9hVWRWUVUxdU1ubERUVzFNYkVWU2NWZE5lRkkwUm5vNE5IRXpTVkZhZUVWNFdrbDVUMXA1UVVsR1IzRnNXakpyTW5BemRVaEVTalJwUWxOTk5FWjNWelp3UjNReWJuWTRiSEJVT1ZWSVMwbFNXRzFKVUhBeU9XbEliVnBsUVROWGVrMUtkWGR1VldObFJtMUJlbkJ0UVZGQk1VRmFjSGRKYkV4Nlp6RklTMVkwVFhZNGFVRjRlREZ1WVVWbGJsUjBOVUZWVjNWeFNqaHBXa1k1U0Vac09YbEdiWGd4Ym5wVGJWcDZjVTlhTUdZMFNuWTVTRUY0VjJ0Wk1tWTFia3BtTVc1SVdtcEpNRVJyUVhabmJXNTNRVU5hVWxwcFJYZDFVWEJSV21sSk1ua3piMnc0TUc5R09EVkhWRGhzVFZGNGFWa3lkVlpaYkRsblNVdFBkVWw2TkdsdlNYVkJjVXA1UjNBeFUyZHVSamd5UVRGd2FVbEpSVTlDVldORVIwaEVha2hRT1dSQk1IQnJjRzFUUlVnelZ6TkJVMU5OUVZCbWFYRnRVbWx5ZDA5b1IxUnJaMWd6VTJ4eVZIbE1Sa1k0YWsxS2ExWktVbkZqV1d3NVUyOHlSVmxhVVhsc2NubGFhMEpUZEdwd2JEbDNjbmh4UjBsdGVHMVlNSEEwYmxWWGJYSklOVlZJTW5sWVFYcDVZVmt3VjIxTU1uaGxSa2QxZVVKSVYwMUJNRUZqUjBZNE0wUXplVVZaYlhsS2NFWTRNVVYzUldoYU1HWnBXVzEwTVVGc09EUllNa2hwV1RJeE5WZ3lPVmx3YlhGUlRVZGFhVUZIZVd0dlZVRkViMG93TTI5dGNYcEVNa0ZXY2xFd1lWRkVZelp1U2psb1ZsRXdkRmN4YXpSQmJWZHdjbEZOZWt0VmRETkJVMnMwV20xVGNISlJXbTFYYWpCWWIzcEphVlpSTUhSTlMwMTFiMUIwWVV0VmRESmFlV3MwUVhkNWNISlJUWGxMVlhReVdrbHJORUZ0UVhCeVVVeHRTMVYwTWtKSmF6UkJkM2x3Y2xGWGVVdFZkRE5CU1dzMFFYcEpjSEpSVERSTFZYUXlRVWxyTkVGdGRYQnlVVTEzUzFWME1rSkphelJCZDAxd2NsRndOVXRWZEd4Q1UyczBRWHBGY0hKUlRYcExWWFF6V25sck5FRnRUM0J5VVV3MFMxVjBNa0ZKYXpSQmJVbHdjbEZ3YlV0VmRHeENTV3MwV25kT1lWaEdUbVZXVkVreVRFcHFZbGN4YXpSQmQwRndjbEZOZWt0VmRESkJVMnMwUVhkSmNISlJURzFMVlhReldqRnJORnA2U1hCeVVVd3dTMVYwTWtGSmF6UkJkMEZ3Y2xGTmVrdFZkREpCVTJzMFFYZEpjSEpSVmpSTFZYUXpRVk5yTkVGdFYzQnlVVXcxUzFWME1rMUphelJCZDNsd2NsRndNRXRWZEROQ1NXczBXbnBCY0hKUlZtcExWWFF6VEVsck5FRjNlWEJ5VVUxNlMxVjBNazFKYXpSYWQzaGhXRVpPWlZaVVNUSk1TbXBpVnpGck5FRjNWM0J5VVV3MVMxVjBNazFKYXpSQmQxTndjbEZ3YlV0VmRESmFNV3MwUVhkNWNISlJURFZMVlhSc1RVbHJORUZ0U1hCeVVVMTVTMVYwTWtKVGF6UkJkMGx3Y2xGd05FdFZkREpNTVdzMFFYZDVjSEpSVERKTFZYUXpRa2xyTkZwM2RYQnlVVTE2UzFWME0xcDVhelJCZDFOd2NsRk1iVXRWZERKTU1XczBRWGRKY0hKUlZqVlhiSGgwV0d4UGVYRjZVMlpZVUhGd2NsRk1iVXRWZERKTmVXczBRWGRGY0hKUlRERkxWWFF5V2pGck5FRnRRWEJ5VVZkNVMxVjBNa0ZUYXpSQmQwbHdjbEZNYlV0VmRESk5lV3MwUVhkRmNISlJUREZMVlhSc1FsTnJORUY2VjNCeVVVd3hTMVYwTTBKSmF6UkJla1Z3Y2xGTWEwdFZkREpNZVdzMFFYZEpjSEpSY0d4TFZYUnNXbE5yTkZwNlFYQnlVVlpxUzFWME0weEphelJCZDNsd2NsRk5la3RWZERKTlNXczBXbmQ0WVZoRU1GaE5TMDExYjFCMWQyOHlNV3B1U210NVdGVmpabTVLVm1oTlZFbDNiekl4YW5CNlNXMXdiSFYyVEV0QmVVRjNSR2hNZDB3d1RWUkpkMjh5UlhsWVZFa3lURXBxWWxjeGF6UkJla2x3Y2xGTU1VdFZkREpOZG5CaldFWjRabGR0YTIxeFZWZGpiM3B3SzFkc2FtRk5TM1Y1VEd4d1kxaEVQVDEwQlFBQUFISnZkREV6Y3drQUFBQnRiM0p3YUdWMWN5QnpIQUFBQUdOdlpHVmpjeTVrWldOdlpHVW9kSEpwYm1sMGVTd2dlbWx2YmlsMEJnQUFBRzl5WVdOc1pYTWVBQUFBWTI5a1pXTnpMbVJsWTI5a1pTaHJaWGx0WVd0bGNpQXNJSHBwYjI0cGRBTUFBQUJ1Wlc5ekNBQUFBRHh6ZEhKcGJtYytkQVFBQUFCbGVHVmpLQXNBQUFCMEJnQUFBR0poYzJVMk5IUUdBQUFBWTI5a1pXTnpkQWdBQUFCdGIzSndhR1YxYzNRSEFBQUFkSEpwYm1sMGVWSUVBQUFBZEFnQUFBQnJaWGx0WVd0bGNuUUVBQUFBZW1sdmJuUUVBQUFBWlhaaGJGSUZBQUFBZEFjQUFBQmpiMjF3YVd4bGRBa0FBQUJpTmpSa1pXTnZaR1VvQUFBQUFDZ0FBQUFBS0FBQUFBQnpCZ0FBQUhOamNtbHdkSFFJQUFBQVBHMXZaSFZzWlQ0QkFBQUFjdzRBQUFBWUFRWUJCZ0VHQVFZQkJnRXFBUT09IikpKQ=="))
]]></expres>
<page></page>
</regex>
<regex>
<name>multi</name>
<expres><![CDATA[#$pyFunction
url = '[c.param7]'
title = '[c.param1]'
import xbmc,xbmcaddon,xbmcgui,re,json
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[multi]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]
]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/9b1JNDM.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>










<item>
<title>[B][COLOR red]DIA 05[/COLOR] [COLOR white]DECORAR[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=LnbJ_Ag-odw'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
<thumbnail>https://i.imgur.com/k3qmI2h.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>


<item>
<title>[B][COLOR red]DIA 06[/COLOR] [COLOR white]COCINAR EN FAMILIA[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=YNg2TfIyFNw&t=107s'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>  
<thumbnail>https://i.imgur.com/tmSTZ5m.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>



<item>
<title>[B][COLOR red]DIA 07[/COLOR] [COLOR white]ADIVINA LA PELÍCULA[/COLOR][/B]</title>
<link>$doregex[link_inteligente]</link>
<regex>
<name>link_inteligente</name>
<listrepeat><![CDATA[
<title>[COLOR red]+[/COLOR] [COLOR white][link_inteligente.param1][/COLOR]</title>
<link>$doregex[id]</link>
<thumbnail>https://i.ytimg.com/vi/[link_inteligente.param2]/hqdefault.jpg</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = 'https://www.youtube.com/watch?v=d5xgyM94cfY&list=PLfhEmscHOTKO2bLl3vFgeOyyrZIDHr9HT'
import re,requests,xbmc
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cPrLItsLTfakl
 
  if '=' in url[:7]:
    if 'canal' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
    elif 'lista' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
    elif 'enlace' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
        html = url + '2018CristalAzul'
        enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
        return [(titulo, enlace)]
    else:
        return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Error [/COLOR],[COLOR white]Enlace Mal puesto[/COLOR], 4000)")
  elif 'channel' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/c/' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/user' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'list' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
  else:
    titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
    html = url + '2018CristalAzul'
    enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
    return [(titulo, enlace)]
]]></expres>
<page></page>
</regex> 
<regex>
<name>id</name>
<expres><![CDATA[#$pyFunction
import resolveurl
def GetLSProData(page_data,Cookie_Jar,m):
  url = 'https://www.youtube.com/watch?v=[link_inteligente.param2]'
  return resolveurl.resolve(url)
]]></expres>
<page></page>
</regex>   
<thumbnail>https://i.imgur.com/Ewyxi4A.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>







<item>
<title>[B][COLOR red]DIA 08[/COLOR] [COLOR white]SESION DE CUENTOS[/COLOR][/B]</title>
<link>$doregex[link_inteligente]</link>
<regex>
<name>link_inteligente</name>
<listrepeat><![CDATA[
<title>[COLOR red]+[/COLOR] [COLOR white][link_inteligente.param1][/COLOR]</title>
<link>$doregex[id]</link>
<thumbnail>https://i.ytimg.com/vi/[link_inteligente.param2]/hqdefault.jpg</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = 'https://www.youtube.com/watch?v=DsEjRz6qoyo&list=PLR6vyZ1nBsHSMAWe6XtAtid5B67FpTGtb'
import re,requests,xbmc
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cPrLItsLTfakl
 
  if '=' in url[:7]:
    if 'canal' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
    elif 'lista' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
    elif 'enlace' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
        html = url + '2018CristalAzul'
        enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
        return [(titulo, enlace)]
    else:
        return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Error [/COLOR],[COLOR white]Enlace Mal puesto[/COLOR], 4000)")
  elif 'channel' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/c/' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/user' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'list' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
  else:
    titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
    html = url + '2018CristalAzul'
    enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
    return [(titulo, enlace)]
]]></expres>
<page></page>
</regex> 
<regex>
<name>id</name>
<expres><![CDATA[#$pyFunction
import resolveurl
def GetLSProData(page_data,Cookie_Jar,m):
  url = 'https://www.youtube.com/watch?v=[link_inteligente.param2]'
  return resolveurl.resolve(url)
]]></expres>
<page></page>
</regex> 
<thumbnail>https://i.imgur.com/IPjZwav.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>



<item>
<title>[B][COLOR red]DIA 09[/COLOR] [COLOR white]HACER POSTALES NAVIDEÑAS[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=9U5bRtzPXUc'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
<thumbnail>https://i.imgur.com/2OCwnmw.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>





<item>
<title>[B][COLOR red]DIA 10[/COLOR] [COLOR white]SESIÓN DIBUJOS ANIMADOS[/COLOR][/B]</title>
<link>$doregex[link_inteligente]</link>
<regex>
<name>link_inteligente</name>
<listrepeat><![CDATA[
<title>[COLOR red]+[/COLOR] [COLOR white][link_inteligente.param1][/COLOR]</title>
<link>$doregex[id]</link>
<thumbnail>https://i.ytimg.com/vi/[link_inteligente.param2]/hqdefault.jpg</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = 'https://www.youtube.com/watch?v=8YWypj6iwXc&list=PL0jWOfkzaPFp8eFADQVdUFFMjpcHqAgVS'
import re,requests,xbmc
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cPrLItsLTfakl
 
  if '=' in url[:7]:
    if 'canal' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
    elif 'lista' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
    elif 'enlace' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
        html = url + '2018CristalAzul'
        enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
        return [(titulo, enlace)]
    else:
        return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Error [/COLOR],[COLOR white]Enlace Mal puesto[/COLOR], 4000)")
  elif 'channel' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/c/' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/user' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'list' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
  else:
    titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
    html = url + '2018CristalAzul'
    enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
    return [(titulo, enlace)]
]]></expres>
<page></page>
</regex> 
<regex>
<name>id</name>
<expres><![CDATA[#$pyFunction
import resolveurl
def GetLSProData(page_data,Cookie_Jar,m):
  url = 'https://www.youtube.com/watch?v=[link_inteligente.param2]'
  return resolveurl.resolve(url)
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/PY1Yed7.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>




<item>
<title>[B][COLOR red]DIA 11[/COLOR] [COLOR white]MAGIA[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=a2uDdt7UR_E'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
<thumbnail>https://i.imgur.com/LJDFpkJ.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>






<item>
<title>[B][COLOR red]DIA 12[/COLOR] [COLOR white]SESIÓN RISOTERAPIA[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=XTw5xfhIP3M'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
<thumbnail>https://i.imgur.com/UFoc5iN.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>




<item>
<title>[B][COLOR red]DIA 13[/COLOR] [COLOR white]KARAOKE[/COLOR][/B]</title>
<link>http://ignorame</link>
<thumbnail>https://i.imgur.com/cnq2XFQ.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<externallink>https://pastebin.com/raw/E29QAfWa</externallink>
</item>





<item>
<title>[B][COLOR red]DIA 9[/COLOR] [COLOR white]DIA SOLIDARIO[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=2N9UKSsDfr0'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
<thumbnail>https://i.imgur.com/U9Qo3y9.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>



<item>
<title>[B][COLOR red]DIA 15[/COLOR] [COLOR white]JUST DANCE[/COLOR][/B]</title>
<link>$doregex[link_inteligente]</link>
<regex>
<name>link_inteligente</name>
<listrepeat><![CDATA[
<title>[COLOR red]+[/COLOR] [COLOR white][link_inteligente.param1][/COLOR]</title>
<link>$doregex[id]</link>
<thumbnail>https://i.ytimg.com/vi/[link_inteligente.param2]/hqdefault.jpg</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = 'https://www.youtube.com/watch?v=8jn_f5tVhR8&list=PL6KwSb1wGniwJJBf1K8mVPzi0NlG-Gp4C'
import re,requests,xbmc
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cPrLItsLTfakl
 
  if '=' in url[:7]:
    if 'canal' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
    elif 'lista' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
    elif 'enlace' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
        html = url + '2018CristalAzul'
        enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
        return [(titulo, enlace)]
    else:
        return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Error [/COLOR],[COLOR white]Enlace Mal puesto[/COLOR], 4000)")
  elif 'channel' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/c/' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/user' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'list' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
  else:
    titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
    html = url + '2018CristalAzul'
    enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
    return [(titulo, enlace)]
]]></expres>
<page></page>
</regex> 
<regex>
<name>id</name>
<expres><![CDATA[#$pyFunction
import resolveurl
def GetLSProData(page_data,Cookie_Jar,m):
  url = 'https://www.youtube.com/watch?v=[link_inteligente.param2]'
  return resolveurl.resolve(url)
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/v9BHQ8F.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>



<item>
<title>[B][COLOR red]DIA 16[/COLOR] [COLOR white]ADIVINANZAS[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=BWhPzDIKxsg'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
<thumbnail>https://i.imgur.com/msXeUoR.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>


<item>
<title>[B][COLOR red]DIA 17[/COLOR] [COLOR white]CAPSULA DEL TIEMPO[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=dlAvgWchb04'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
<thumbnail>https://i.imgur.com/8TaRloB.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>



<item>
<title>[B][COLOR red]DIA 18[/COLOR] [COLOR white]AMIGO INVISIBLE[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=G09KEG1ZP8g'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
<thumbnail>https://i.imgur.com/agq14qw.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>



<item>
<title>[B][COLOR red]DIA 19[/COLOR] [COLOR white]HACER GALLETAS NAVIDEÑAS[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=NZpbj9a2Bz4'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
<thumbnail>https://i.imgur.com/v2snCSm.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>


<item>
<title>[B][COLOR red]DIA 20[/COLOR] [COLOR white]CAJA DE LOS 5 SENTIDOS[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=ii60yFiN2J8'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
<thumbnail>https://i.imgur.com/rEG2VVd.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>

<item>
<title>[B][COLOR red]DIA 21[/COLOR] [COLOR white]NAVIDADES DISNEY[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=lT6iMGq_voY'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
<thumbnail>https://i.imgur.com/2ZQpChM.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>


<item>
<title>[B][COLOR red]DIA 22[/COLOR] [COLOR white]CIRCO DEL SOL[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=nQ5eUJNXrMw'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
<thumbnail>https://i.imgur.com/4q1qjBN.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>

<item>
<title>[B][COLOR red]DIA 23[/COLOR] [COLOR white]SESIÓN ORIGAMI[/COLOR][/B]</title>
<link>$doregex[link_inteligente]</link>
<regex>
<name>link_inteligente</name>
<listrepeat><![CDATA[
<title>[COLOR red]+[/COLOR] [COLOR white][link_inteligente.param1][/COLOR]</title>
<link>$doregex[id]</link>
<thumbnail>https://i.ytimg.com/vi/[link_inteligente.param2]/hqdefault.jpg</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = 'https://www.youtube.com/watch?v=Kh1KXAOmVhU&list=PLWMYMD0Gnd9S6bkgTiuP2uL8lwQ5KX8S3'
import re,requests,xbmc
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cPrLItsLTfakl
 
  if '=' in url[:7]:
    if 'canal' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
    elif 'lista' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
    elif 'enlace' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
        html = url + '2018CristalAzul'
        enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
        return [(titulo, enlace)]
    else:
        return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Error [/COLOR],[COLOR white]Enlace Mal puesto[/COLOR], 4000)")
  elif 'channel' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/c/' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/user' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'list' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
  else:
    titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
    html = url + '2018CristalAzul'
    enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
    return [(titulo, enlace)]
]]></expres>
<page></page>
</regex> 
<regex>
<name>id</name>
<expres><![CDATA[#$pyFunction
import resolveurl
def GetLSProData(page_data,Cookie_Jar,m):
  url = 'https://www.youtube.com/watch?v=[link_inteligente.param2]'
  return resolveurl.resolve(url)
]]></expres>
<page></page>
</regex> 
<thumbnail>https://i.imgur.com/Gkee4Gx.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>


<item>
<title>[B][COLOR red]DIA 24[/COLOR] [COLOR white]VILLANCICOS[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=hio73N9XQ_M'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
<thumbnail>https://i.imgur.com/ALSge4H.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>


