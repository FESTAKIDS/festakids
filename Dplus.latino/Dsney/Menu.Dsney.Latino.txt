<?xml version="1.0" encoding="UTF-8" standalone="yes"?>

<item>
<title>[B][COLOR darkgoldenrod]* [COLOR yellow]Grupo Telegram[COLOR deepskyblue] @addonfestaycristal[/COLOR][/B]</title>
<link>NOLINK</link>
<thumbnail>https://i.imgur.com/pmv3nZ0.png<thumbnail>
<fanart>https://i.imgur.com/r2bQyc9.jpg</fanart>
</item>






<item>
<title>[B][COLOR darkgoldenrod]* [COLOR white]CINE DISNEY[/COLOR][/B]</title> 
<link>$doregex[c]</link>
<regex>
<name>c</name>
<listrepeat><![CDATA[
<title>[c.param3]</title>
<genre>[c.param4]</genre>
<year>[c.param5]</year>
<info>[c.param8]</info>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[c.param6]</thumbnail>
<fanart>[c.param7]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>multi</name>
<expres><![CDATA[#$pyFunction
url = '[c.param9]'
title = '[c.param3]'
import xbmc,xbmcaddon,xbmcgui,re,json
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[multi]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]
]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/kUutwYP.png</thumbnail>
<fanart>https://i.imgur.com/RsLj1lh.jpg</fanart>
</item>


================================================================================================================
<!--
<item>
<title>[B][COLOR darkgoldenrod]* [COLOR white]SERIES DISNEY [/COLOR][/B]</title>
<link>$doregex[lou]</link>
<externallink>$$LSProEncKey= $$</externallink>
<thumbnail>https://i.imgur.com/oehcbCd.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>

-->
================================================================================================================

<item>
<title>[B][COLOR darkgoldenrod]* [COLOR white]THE DISNEY FAMILY SINGALONG [COLOR chartreuse][/COLOR][/B]</title>
<link>$doregex[link_inteligente]</link>
<regex>
<name>link_inteligente</name>
<listrepeat><![CDATA[
<title>[COLOR yellow]+[/COLOR] [COLOR white][link_inteligente.param1][/COLOR]</title>
<link>$doregex[id]</link>
<thumbnail>https://i.ytimg.com/vi/[link_inteligente.param2]/hqdefault.jpg</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = 'https://www.youtube.com/watch?v=8yAFmiFa6eI&list=PLDe0CguuqcMCoXed7EXN47mcRU5E1gN-H'
import re,requests,xbmc
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cPrLItsLTfakl
 
  if '=' in url[:7]:
    if 'canal' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
    elif 'lista' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
    elif 'enlace' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
        html = url + '2018CristalAzul'
        enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
        return [(titulo, enlace)]
    else:
        return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Error [/COLOR],[COLOR white]Enlace Mal puesto[/COLOR], 4000)")
  elif 'channel' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/c/' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/user' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'list' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
  else:
    titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
    html = url + '2018CristalAzul'
    enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
    return [(titulo, enlace)]
]]></expres>
<page></page>
</regex> 
<regex>
<name>id</name>
<expres><![CDATA[#$pyFunction
import resolveurl
def GetLSProData(page_data,Cookie_Jar,m):
  url = 'https://www.youtube.com/watch?v=[link_inteligente.param2]'
  return resolveurl.resolve(url)
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/TNiE7c2.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
<info>Celebridades estadounidenses y sus familias interpretan sus canciones favoritas de Disney desde sus casas.Tu y tu familia tambien podeis cantarlas siguiendo las letras de la pantalla.</info>
</item>

================================================================================================================
<item>
<title>[B][COLOR darkgoldenrod]* [COLOR white]KARAOKE [COLOR chartreuse][/COLOR][/B]</title>
<link>$doregex[link_inteligente]</link>
<regex>
<name>link_inteligente</name>
<listrepeat><![CDATA[
<title>[COLOR yellow]+[/COLOR] [COLOR white][link_inteligente.param1][/COLOR]</title>
<link>$doregex[id]</link>
<thumbnail>https://i.ytimg.com/vi/[link_inteligente.param2]/hqdefault.jpg</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = 'https://www.youtube.com/watch?v=dUftzRe42-I&list=PLuInyccoMbHGzAHriAmR7Su-FjSQX7p_4'
import re,requests,xbmc
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cPrLItsLTfakl
 
  if '=' in url[:7]:
    if 'canal' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
    elif 'lista' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
    elif 'enlace' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
        html = url + '2018CristalAzul'
        enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
        return [(titulo, enlace)]
    else:
        return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Error [/COLOR],[COLOR white]Enlace Mal puesto[/COLOR], 4000)")
  elif 'channel' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/c/' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/user' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'list' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
  else:
    titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
    html = url + '2018CristalAzul'
    enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
    return [(titulo, enlace)]
]]></expres>
<page></page>
</regex> 
<regex>
<name>id</name>
<expres><![CDATA[#$pyFunction
import resolveurl
def GetLSProData(page_data,Cookie_Jar,m):
  url = 'https://www.youtube.com/watch?v=[link_inteligente.param2]'
  return resolveurl.resolve(url)
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/g99zgss.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>
================================================================================================================
<item>
<title>[B][COLOR darkgoldenrod]* [COLOR white]DIBUJA A TUS PERSONAJES DISNEY[/COLOR][/B]</title>
<link>$doregex[link_inteligente]</link>
<regex>
<name>link_inteligente</name>
<listrepeat><![CDATA[
<title>[COLOR yellow]+[/COLOR] [COLOR white][link_inteligente.param1][/COLOR]</title>
<link>$doregex[id]</link>
<thumbnail>https://i.ytimg.com/vi/[link_inteligente.param2]/hqdefault.jpg</thumbnail>
<fanart>https://i.imgur.com/qCkA7tf.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = 'https://www.youtube.com/watch?v=BJG61nQOc-I&list=PLklORmaDsEtwetArUr31D7I33P0V-Vsqd'
import re,requests,xbmc
import re,requests,xbmc
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cPrLItsLTfakl
 
  if '=' in url[:7]:
    if 'canal' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
    elif 'lista' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
    elif 'enlace' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
        html = url + '2018CristalAzul'
        enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
        return [(titulo, enlace)]
    else:
        return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Error [/COLOR],[COLOR white]Enlace Mal puesto[/COLOR], 4000)")
  elif 'channel' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/c/' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/user' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'list' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
  else:
    titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
    html = url + '2018CristalAzul'
    enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
    return [(titulo, enlace)]
]]></expres>
<page></page>
</regex> 
<regex>
<name>id</name>
<expres><![CDATA[#$pyFunction
import resolveurl
def GetLSProData(page_data,Cookie_Jar,m):
  url = 'https://www.youtube.com/watch?v=[link_inteligente.param2]'
  return resolveurl.resolve(url)
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/EJC9AJi.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>

================================================================================================================
<item>
<title>[B][COLOR darkgoldenrod]* [COLOR white]COCINA DISNEY[/COLOR][/B]</title>
<link>$doregex[link_inteligente]</link>
<regex>
<name>link_inteligente</name>
<listrepeat><![CDATA[
<title>[COLOR yellow]+[/COLOR] [COLOR white][link_inteligente.param1][/COLOR]</title>
<link>$doregex[id]</link>
<thumbnail>https://i.ytimg.com/vi/[link_inteligente.param2]/hqdefault.jpg</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = 'https://www.youtube.com/watch?v=s1mEtA8fs8Q&list=PL0jWOfkzaPFpxHSjwHJMQIJrBej-ZMY3a'
import re,requests,xbmc
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cPrLItsLTfakl
 
  if '=' in url[:7]:
    if 'canal' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
    elif 'lista' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
    elif 'enlace' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
        html = url + '2018CristalAzul'
        enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
        return [(titulo, enlace)]
    else:
        return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Error [/COLOR],[COLOR white]Enlace Mal puesto[/COLOR], 4000)")
  elif 'channel' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/c/' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/user' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'list' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
  else:
    titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
    html = url + '2018CristalAzul'
    enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
    return [(titulo, enlace)]
]]></expres>
<page></page>
</regex> 
<regex>
<name>id</name>
<expres><![CDATA[#$pyFunction
import resolveurl
def GetLSProData(page_data,Cookie_Jar,m):
  url = 'https://www.youtube.com/watch?v=[link_inteligente.param2]'
  return resolveurl.resolve(url)
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/418L0Kx.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>
================================================================================================================
<item>
<title>[B][COLOR darkgoldenrod]* [COLOR white]SILHOUETTE DISNEY SHOW[/COLOR][/B]</title>
<link>$doregex[link_inteligente]</link>
<regex>
<name>link_inteligente</name>
<listrepeat><![CDATA[
<title>[COLOR yellow]+[/COLOR] [COLOR white][link_inteligente.param1][/COLOR]</title>
<link>$doregex[id]</link>
<thumbnail>https://i.ytimg.com/vi/[link_inteligente.param2]/hqdefault.jpg</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = 'https://www.youtube.com/watch?v=t65_Pmwv5as&list=PL0jWOfkzaPFpwyiGG5IP7kk_HcJgL6naI'
import re,requests,xbmc
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cPrLItsLTfakl
 
  if '=' in url[:7]:
    if 'canal' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
    elif 'lista' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
    elif 'enlace' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
        html = url + '2018CristalAzul'
        enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
        return [(titulo, enlace)]
    else:
        return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Error [/COLOR],[COLOR white]Enlace Mal puesto[/COLOR], 4000)")
  elif 'channel' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/c/' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/user' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'list' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
  else:
    titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
    html = url + '2018CristalAzul'
    enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
    return [(titulo, enlace)]
]]></expres>
<page></page>
</regex> 
<regex>
<name>id</name>
<expres><![CDATA[#$pyFunction
import resolveurl
def GetLSProData(page_data,Cookie_Jar,m):
  url = 'https://www.youtube.com/watch?v=[link_inteligente.param2]'
  return resolveurl.resolve(url)
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/pnBmRPO.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>

------------------------------------------------------------------------------------------------------------------
<item>
<title>[B][COLOR darkgoldenrod]* [COLOR white]DISNEY COVERS X FACTOR[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=MIJdurKLBLo'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/ryFgnC0.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>


-------------------------------------------------------------------------------------------------------------------
<item>
<title>[B][COLOR darkgoldenrod]* [COLOR white]VIOLETA SHOWS COMPLETOS[/COLOR][/B]</title>
<link>$doregex[link_inteligente]</link>
<regex>
<name>link_inteligente</name>
<listrepeat><![CDATA[
<title>[COLOR yellow]+[/COLOR] [COLOR white][link_inteligente.param1][/COLOR]</title>
<link>$doregex[id]</link>
<thumbnail>https://i.ytimg.com/vi/[link_inteligente.param2]/hqdefault.jpg</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = 'https://www.youtube.com/watch?v=_T1Gr6MOa1U&list=PL0jWOfkzaPFrVzTwgvQEVsVAylNoTrQqN'
import re,requests,xbmc
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cPrLItsLTfakl
 
  if '=' in url[:7]:
    if 'canal' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
    elif 'lista' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
    elif 'enlace' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
        html = url + '2018CristalAzul'
        enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
        return [(titulo, enlace)]
    else:
        return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Error [/COLOR],[COLOR white]Enlace Mal puesto[/COLOR], 4000)")
  elif 'channel' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/c/' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/user' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'list' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
  else:
    titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
    html = url + '2018CristalAzul'
    enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
    return [(titulo, enlace)]
]]></expres>
<page></page>
</regex> 
<regex>
<name>id</name>
<expres><![CDATA[#$pyFunction
import resolveurl
def GetLSProData(page_data,Cookie_Jar,m):
  url = 'https://www.youtube.com/watch?v=[link_inteligente.param2]'
  return resolveurl.resolve(url)
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/qoBYZvo.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>

------------------------------------------------------------------------------------------------------------------
<item>
<title>[B][COLOR darkgoldenrod]* [COLOR white]SOY LUNA EN CONCIERTO[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=xGXEs1gFjnY'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
</regex>
<thumbnail>https://i.imgur.com/nnYkzWg.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>

------------------------------------------------------------------------------------------------------------------
<item>
<title>[B][COLOR darkgoldenrod]* [COLOR white]DISNEY MUSIC BABY RELAX[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=UjErDAiDO-c'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>     
</regex>
<thumbnail>https://i.imgur.com/WSqJfnt.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>
-------------------------------------------------------------------------------------------------------------------

<item>
<title>[B][COLOR darkgoldenrod]* [COLOR white]FANCY NANCY CALNCY[/COLOR][/B]</title>
<link>$doregex[link_inteligente]</link>
<regex>
<name>link_inteligente</name>
<listrepeat><![CDATA[
<title>[COLOR yellow]+[/COLOR] [COLOR white][link_inteligente.param1][/COLOR]</title>
<link>$doregex[id]</link>
<thumbnail>https://i.ytimg.com/vi/[link_inteligente.param2]/hqdefault.jpg</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = 'https://www.youtube.com/watch?v=cDJN3kP3kpk&list=PLTzDTlYlbbwOv6nQ22TGnsvJtv-eic_K8'
import re,requests,xbmc
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cPrLItsLTfakl
 
  if '=' in url[:7]:
    if 'canal' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
    elif 'lista' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
    elif 'enlace' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
        html = url + '2018CristalAzul'
        enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
        return [(titulo, enlace)]
    else:
        return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Error [/COLOR],[COLOR white]Enlace Mal puesto[/COLOR], 4000)")
  elif 'channel' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/c/' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/user' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'list' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
  else:
    titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
    html = url + '2018CristalAzul'
    enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
    return [(titulo, enlace)]
]]></expres>
<page></page>
</regex> 
<regex>
<name>id</name>
<expres><![CDATA[#$pyFunction
import resolveurl
def GetLSProData(page_data,Cookie_Jar,m):
  url = 'https://www.youtube.com/watch?v=[link_inteligente.param2]'
  return resolveurl.resolve(url)
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/ZORiJiS.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>

------------------------------------------------------------------------------------------------------------------

<item>
<item>
<title>[B][COLOR darkgoldenrod]* [COLOR white]DISNEY REPOSTERIA[/COLOR][/B]</title>
<link>$doregex[link_inteligente]</link>
<regex>
<name>link_inteligente</name>
<listrepeat><![CDATA[
<title>[COLOR yellow]+[/COLOR] [COLOR white][link_inteligente.param1][/COLOR]</title>
<link>$doregex[id]</link>
<thumbnail>https://i.ytimg.com/vi/[link_inteligente.param2]/hqdefault.jpg</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = 'https://www.youtube.com/watch?v=z-JA1EzN948&list=PLei5rQ3r8umyYZsStxSeDSLg07227xsaz'
import re,requests,xbmc
def GetLSProData(page_data,Cookie_Jar,m,url=url):#cPrLItsLTfakl
 
  if '=' in url[:7]:
    if 'canal' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
    elif 'lista' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
    elif 'enlace' in url[:7]:
        s2 = url + '2018Cristalazul'
        url = re.findall('(http.*?)2018Cristalazul', s2)[0]
        titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
        titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
        html = url + '2018CristalAzul'
        enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
        return [(titulo, enlace)]
    else:
        return xbmc.executebuiltin("XBMC.Notification([COLOR aqua]Error [/COLOR],[COLOR white]Enlace Mal puesto[/COLOR], 4000)")
  elif 'channel' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/c/' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'youtube.com/user' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)"title":\{"accessibility":\{"accessibilityData":\{"label":".*?".*?simpleText":"(.*?)".*?watch.v=(.*?)"', html)
  elif 'list' in url:
    html = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    return re.findall('(?s)playlistPanelVideoRenderer".*?simpleText":"(.*?)".*?vi\/(.*?)\/', html)
  else:
    titulo2 = requests.get(url, headers={'User-Agent': 'Mozilla/5.0 (Windows NT 6.3; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'}, verify=False).text
    titulo = re.findall('title.":{."simpleText.":."(.*?)"', titulo2)[0]
    html = url + '2018CristalAzul'
    enlace = re.findall('v=(.*?)2018CristalAzul', html)[0]
    return [(titulo, enlace)]
]]></expres>
<page></page>
</regex> 
<regex>
<name>id</name>
<expres><![CDATA[#$pyFunction
import resolveurl
def GetLSProData(page_data,Cookie_Jar,m):
  url = 'https://www.youtube.com/watch?v=[link_inteligente.param2]'
  return resolveurl.resolve(url)
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/OKXZ3Bw.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>

-------------------------------------------------------------------------------------------------------------------

<item>
<title>[B][COLOR darkgoldenrod]* [COLOR white]DISNEY CRAFT[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=kz7Uc1FU3X8&t'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>    
<thumbnail>https://i.imgur.com/HiFgEFt.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>
--------------------------------------------------------------------------------------------------------------------
<item>
<title>[B][COLOR darkgoldenrod]* [COLOR white]MICKEY MOUSEJERCICIOS[/COLOR][/B]</title>
<link>$doregex[resolve]</link>
<regex>
<name>resolve</name>
<expres><![CDATA[#$pyFunction
import urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
 url = 'https://www.youtube.com/watch?v=paJinRPPnoQ'
 streamLink = urlresolver.resolve(url)
 return streamLink
]]></expres>
<page></page>
</regex>    
<thumbnail>https://i.imgur.com/k3Xf9Cp.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>
--------------------------------------------------------------------------------------------------------------------

