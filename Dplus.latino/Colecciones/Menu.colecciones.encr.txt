<?xml version="1.0" encoding="UTF-8" standalone="yes"?>

<item>
<title>[B][COLOR darkgoldenrod]* [COLOR gold]COLLECCION [COLOR white]101 Dalmatas[/COLOR][/B]</title>
<link>$doregex[c]</link>
<regex>
<name>c</name>
<listrepeat><![CDATA[
<title>[c.param3]</title>
<genre>[c.param4]</genre>
<year>[c.param5]</year>
<info>[c.param8]</info>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[c.param6]</thumbnail>
<fanart>[c.param7]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>multi</name>
<expres><![CDATA[#$pyFunction
url = '[c.param9]'
title = '[c.param3]'
import xbmc,xbmcaddon,xbmcgui,re,json
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[multi]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]
]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/Yy1DFjf.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>


----------------------------------------------------------------------------------------------------------------------
<item>
<title>[B][COLOR darkgoldenrod]* [COLOR gold]COLLECCION [COLOR white]Cars[/COLOR][/B]</title>  
<link>$doregex[c]</link>
<regex>
<name>c</name>
<listrepeat><![CDATA[
<title>[c.param3]</title>
<genre>[c.param4]</genre>
<year>[c.param5]</year>
<info>[c.param8]</info>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[c.param6]</thumbnail>
<fanart>[c.param7]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>multi</name>
<expres><![CDATA[#$pyFunction
url = '[c.param9]'
title = '[c.param3]'
import xbmc,xbmcaddon,xbmcgui,re,json
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[multi]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]
]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/z1zJ1E3.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>
----------------------------------------------------------------------------------------------------------------------
<item>
<title>[B][COLOR darkgoldenrod]* [COLOR gold]COLLECCION [COLOR white]Frozen[/COLOR][/B]</title>  
<link>$doregex[c]</link>
<regex>
<name>c</name>
<listrepeat><![CDATA[
<title>[c.param3]</title>
<genre>[c.param4]</genre>
<year>[c.param5]</year>
<info>[c.param8]</info>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[c.param6]</thumbnail>
<fanart>[c.param7]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>multi</name>
<expres><![CDATA[#$pyFunction
url = '[c.param9]'
title = '[c.param3]'
import xbmc,xbmcaddon,xbmcgui,re,json
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[multi]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]
]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/C8r2fj4.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>
----------------------------------------------------------------------------------------------------------------------
<item>
<title>[B][COLOR darkgoldenrod]* [COLOR gold]COLLECCION [COLOR white]High School Musical[/COLOR][/B]</title>
<link>ignoreme</link>
<thumbnail>https://i.imgur.com/bG9OrNh.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
<externallink>https://pastebin.com/raw/fDC3rc0R</externallink>  
</item>
----------------------------------------------------------------------------------------------------------------------

<item>
<title>[B][COLOR darkgoldenrod]* [COLOR gold]COLLECCION [COLOR white]Ice Age[/COLOR][/B]</title>  
<link>$doregex[c]</link>
<regex>
<name>c</name>
<listrepeat><![CDATA[
<title>[c.param3]</title>
<genre>[c.param4]</genre>
<year>[c.param5]</year>
<info>[c.param8]</info>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[c.param6]</thumbnail>
<fanart>[c.param7]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MDB4VUFBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFV1RGTmVtc3pUbFJTYlU1NlJYcE5WRmsxVGxSamVrNTZWVFJPZWxFd1dXcEthVTVVUlhwUFJHTjNUWHByTVU1VVVteE9WR016VFZSVk1VNXRXVE5PUkZKcVRucFpNazFxWXpGT1JHY3hUbXBTYWs1VVp6SlphbFUwVGtSTk1FMTZWVFZPVkdNd1RucFZNMDVFWnpGTmFsa3pUbXBOTUZwVVkzaE9hbWN5VGxSWmVVNUhVVEJaVkZGNVRrUmpNRTFVWXpOT1JHTXhXVlJrYUU1cWEzcE9SRmt5VGtSbmVrMXFWWGRPZWsweFQxUmFhRTVxVFRKT1JGVXlUa1JuTTAxcVRUSk9SRkV6VDFSWmVrNUVTWHBPUkdONlRrUkZlazFVV210T1ZHY3lUbFJOTVUxNlJUTlBSRnBvVGtSVk0wNXFTbTFPZW1jelQxUk5NMDV0VlRCYWFsbDVUbnBGZVZwcVdteE5la1Y2VFZSTk5VNUhXVE5PZWswMFRYcG5lVnBxU20xT2FrMHlUWHBqTWs1NmEzcFBWRnBvVFhwcmVWbHFXWGhPYWxVeVRtcFpNazE2WXpOTlJGVXhUakpGTWs1VVRYcE5iVWw2VDBSWmVrNTZXVE5OUkVwcFRsUkJNMDVxVFRGTmVrbDVXV3BqTlU1NldUTk9hazE2VGtSSk1FNVVUVFZPZWxrelRtcFZkMDVVUVhwTlZGVXpUWHBOTWs1VVNtMU9SMVY1V1dwWk1rNTZXVE5aVkVwcFRucHJlazlVVFRWTmJVbDVXV3BWTWs1VVZUQmFSRmsxVFcxSk0wNVVZM2RPVkdNeVdsUkthVTV0VVhwT2VscHBUbnBOTTAxRVZUUk9SR2Q2VDFSak1VNXFaM3BPZWxrd1RrUk5NRnBxVW0xT2JVMHpUbFJOZVUxNlNUSlphbU41VGtkWmVrMXFZelZPYWtWNlRVUk5lVTVFWnpOUFJGcHJUbXBSTVU1cVdUUk9iVlV5V1hwVk1FNUhUVEJhUkZVMVRYcEJNVTVFVW1wT2Fsa3lUMFJqTUUxNlp6Sk9WRTE2VG0xSk1VOUVXVFZOYlVsNlRrUlJNazVxYXpKT1JGcG9UbXBWZWsxRVRYaE9SMUY1V1dwVk1FNTZXVEphUkZKc1RsUk5NazVVVFRST1ZGRjZUa1JqTkU1NlNUSk9lbVJvVG0xSk1rNXFVbWhOZW1zeFRVUmpNazV0UlROT1ZFMHlUa2ROTWxwVVdUTk5lazB4VG5wYWFVMXRXVEpPZW1Nd1RrZFJlazlVV1hsT2VtZDZUMVJhYkUxNlFYcFBWRnBxVG5wVk1rMXFXWGhOZWswelRVUmFiRTU2U1RCUFZGcG9UbFJOTVUxNlVtdE9hbEV4VFVSYWFrNUVZekJQVkUwelRsUk5NVTVFWXpGT2Fra3pUV3BSTTA1SFdYbFphbEpxVG0xVk1VMTZUVEJPZWtreFQxUlplRTU2WnpCUFJHTXlUWHBGTWxwcVZUUk9la0V5VFdwVk5VNXFWVE5PZWsxNVRrUlpNazVFVlRWT1Ixa3hUbFJqTkU1SFVUSk9SRmt4VG0xRk1VOVVUVEpPTWtVelRrUlJNVTVFWnpCYVZHUm9UbFJSTWsxNldYaE5lbU14VDFSVmVVMTZUVEphVkZVelRtMU5NRmxxV21sTmVrVjZUWHBWTTA1VVNYcFBSRlUwVG5wQk1WbFVUWGxOZW1jd1dXcFZNVTE2WnpKTmFsWm9UbXBGTTA5RVRUQk5lbGt3V21wWk1VNVVTVEpQUkZsNVRtcEZNMDFVV210T2FsRXpXVlJaTUU1cVdUTk9WRmw1VG5wQk1VMXFZelJPZWtVd1dXcEtiVTVxVVRKWmFsSnNUbXBOZWs1VVRYcE9lbFV3VGxSTk1VNXRWVEphYWsxNVRtcE5NRmxVVFROT1ZGbDZUVlJTYWs1SFRURk9WRnBwVFhwTk0wMVVXbWxPZWtrelQwUmFiRTVxVlRKT2VsRjRUbXBKTVUxcVVtaE5lbU13VDFSYWJFMTZZekJQVkdONlRsUkpNMWxVVFROT2VrRXlXbFJhYlU1cVJYcE5WR014VG1wRk1FNTZaR2hPZWswelRrUk5lRTR5UlRKTmFscHRUbXByTUU1VVdtcE9WR2N4V1ZSamVFNVVSWHBOYW1ONVRucEZNVTE2WTNkTmVra3dUV3BaZVU1dFNUQk5la3BwVFhwbk1GbDZVbTFPVkZFelRWUk5NazU2VVRCT1ZGRXpUbFJuTTA5VVNtbE9hbEV6VDFSak1FNXFaM3BPZW1Sb1RrUnJNVTE2V21sT1ZFMHhUVlJOTVU1SFRUTk9hbEp0VGtkWk1FNTZUVFJPYWsweFRucFNiRTR5UlhsYWFsVjVUWHBKTTA1VVRUQk9SRkV3V21wTmVVNTZZekJaVkdNeVRucE5NVmxVVW1oT1ZHTXdUVlJaTWsxdFdUTlBSRkV6VG0xWk1VNTZUWHBPZWsweVdYcEtiVTVxVlhwTlZFMHdUbFJqTUU1RVdUSk9ha2t3VGxSWmVVMXRTVEJhUkZVelRtcFZNVTFVV20xT2VtTXhUbFJOTVU1VVRURlBWR016VGtkRk1VMTZWVEZPZWxVd1QwUlpNazVVVlRKTmFsRTFUa1JSTUZsNll6Tk9SMGt4VDBSVmQwMTZTVEJaZWxwclRtMVJNMDVFV214T1JHTXpUa1JWTlU1RVNUSk5hazB5VGtSWk1FNTZTbTFPZWtVd1RWUmFiRTE2UVRCT2VtTjVUbXBuZVZwcVdUSk9WR3N3V1dwYWEwNVVZekJhUkVwdFRYcEJNazlVVVROT1IxRXdUbXBWZDA0eVJUQlphbEpyVG1wTk1rMTZUVEJPVkVreVRWUk5ORTU2UVROT2VsVjZUWHByTWxwcVVUTk9WRUV3VG5wWmVVMTZVWGxhYWxwclRsUkZNRTVxV214TmVsVXdUbXBaTVU1NldUQk9SRTAwVG1wcmVrMXFTbTFPZWswd1RsUk5NRTVVUVROT1ZGa3hUa1JqTWs1VVVYaE9SMDB6V1ZSak5VNUVVVE5OYWxrMVRrUk5NRTlFVm1oT1JFVXhUWHBaTWsxNlp6Sk5lazB4VGtkUmVrNUVXbXhPUkVVd1RucGpNazVVVlRCTlZGa3hUa1JqTUUxVVNtMU9lbEV5VFdwak5VNXRSVEJQUkZwclRrZE5NMDFVVVRKT1IwMHdUWHBhYkU1cVdUQk5WR015VG5wVmVrNTZXbWxPUjFrd1RsUlJOVTU2V1RKUFZHTjRUa2RGZWs5VVRYcE9SR3N3VFZSWk1rMTZXVEZOYWxreVRucGplVnBxVFhkT2JWa3pUWHBWZVUxNmF6SlphbEV3VGtSbk1sbDZVVEJPUkZGNlRrUlplRTVFVVRKT1JGa3dUa2RGZWsxNll6Vk9SRWt5V1ZSVmQwNTZVWHBPVkZreFRYcEZlazVxVFhsT2FtY3pUV3BTYUU1cVNYbFphbGw2VFhwck1FNVVVWHBPYWxVd1dtcE5ORTVxWnpKYVZFcHBUbnBqZWs1cVdYbE9lbU13VGtSVmQwMXRXVEJOVkZwcVRYcGplazFVV1RCT1YwVXdUbXBWTTA1NlVUQk5hbU13VGtkRmVWbHFXVFJPVkVrelRrUk5kMDVxWXpCT1JFMDFUWHBWTUU5VVdtcE5lbGt6VDBSUk5FNTZSVEpPZW1NeVRYcEJNbGxVVVhoT2FsbDZUMFJhYUUxNlJYcFBWRlUxVFhwSk1VMTZVVFZOZW1zeVRtcFJNRTE2U1RCT1JGRTBUbFJKTTA5VVVtMU9SMVY2VG1wak1FNVVRVEJOVkUwMFRtcGplazE2VFRGT1JFMTZUMFJSZUU1SFZYcE9hbU40VFhwck1FMXFVVFZPUkUxNlQwUlpOVTVxV1RCYVJGcHRUbFJaTTA1RVZYaE9iVkY2VG1wVmVFNXRTVE5QUkZwdFRrZE5lazFxV1hwT1JHTXdXbXBqTlU1VVkzbFphbEY1VG5wRmVrMUVZekpPYWtrelQxUlZNVTVxU1RGTlZGbDRUbFJqZWs1NldUVk9lbEV3VFZSUk1FNXFVVEZOYWxrMFRrZEpNRTVFV214T2FtY3dUMFJOTkU1VVZUSlBWRTB3VG5wbmVrOVVZM2xPUjAweFRrUlplRTU2U1RCWmFsazBUbnBCTUU5VVdUQk9hbFV3VDFSVmQwMXRXVEJaVkUxNlRtMUZNazVxV1ROT1JGVXhUMFJWTUU1RVJUTlpWRmsxVGtSVk1FOUVVVE5OZWswelRWUmpORTU2UlRKTmFtTXdUbnByTTA5RVVtaE5lbGt5V1dwVk0wNTZZekpPUkUwMVRtMVpNRTFxWTNwTmVtY3pUbnBWTUUxNll6Rk9lbGw0VG5wVmVrOUVXVEJOZWtVelRrUmpNMDVYUlRCTmVsa3lUbnBqTUU1VVl6Qk9iVmt4VG1wTmVFNTZUVEJPUkUweFRucE5NVTVxVW10T2FrVXpUbXBhYlU1RVZUQmFWR016VG5wWk0wOUVUVE5PZW10NVdXcFdhRTVIU1RCT1JGVjRUWHBqTTAxNlkzcE5la1Y2VDFSVmVVMTZSVEJPUkZFMFRtMVJNRTVFVVRCT2FtY3lXWHBSTUU1SFJUSk9lbGw1VG0xSk1GcHFWWHBPYWtVeVdWUmplazU2VlRCYVJHTTBUbnBqTVU5RVdtaE9WR3N3VDBSS2JVMTZUVEJaVkZrd1RtcFZNRTFVV1RKT2VsRXdUV3BTYlU1RVNUQlpha3BwVG5wck1VNVVWWGRPUjFFeFRucFpNMDU2VlRKTmVscG9UWHBSTWs1cVdtcE9lbWN3VGtSYWJFNXRWVEJaZWxrMVRrUlplazU2VW1wT1JHc3hXVlJqZDA1VVFUSk9SRnBwVGtSWmVWcHFXWGhPUkUwd1RucE5lRTVxYXpOTlJFMDBUa2RaTVUxRVl6Tk9SRWt5VG1wYWFVNUVaekJPZWxKc1RrZFplazVVVlhwT2FtTjVXV3BWZUU1RVNUSk9hbHBwVG5wTk0wMVVVbXhPYWxFd1dXcFJNRTU2VlRCUFJFMTZUa1JWTTFsVVdtcE9hbWQ2VGxSUmVFNVVVWGxhYWxGNFRtcFplazFFVW0xTmVtc3dUVlJTYWsxdFdUQlBWRmt5VFcxSk0wNTZZM2xPYW1jeVRucFJlazF0V1RKUFJGazBUbFJGTTAxcVRUUk9ha2t6VFZSVmVFNTZXVE5QVkZwc1RYcFJNMWxVV1ROT1IwbDZUMFJOTTA1cVl6Rk5hazB4VG1wak1FOUVZekpPVkdzd1RWUlpNazF0U1RKUFZGVXdUbTFOTUZwVVZUSk9SRWw1V21wamVrNUhTWGxaYWxWNlRXMVpNazU2VlROTmJWa3lUbFJOTWs1cVZUSk9WRTAwVGtSamVrNVVXWHBOZW1ONlQwUmFhVTVVUVhwT1ZGVjRUbTFGTVZsVVdtaE9iVmt5V21wak1rMTZXVEJQVkZVMFRXMUpNbHBxWXpKT1ZGRXpUbnBOTVU1VVl6Tk9WRmt6VGtSUk0xbFVUVFZPZWtFeVdXcE5lVTE2VVRCTmFtTXhUbXByTUU1VVdteE9lbXN6VFVSYWFFMTZTVEZQVkZFeFRucFpNMDVVVVRCTmJWa3pUWHBWTVU1SFdUTk5SRTB4VGtSUk1VNUVZekJPUkZGNVdtcFZlazVFVVhwUFJHTjVUbnBaZVZwcVZYaE9lbGt3VFdwak1FNXRXVEJQUkUwMVRrUlZNMDU2U20xT2FtTXpUVVJqTkU1RVVUTlBSR04zVGtkUmVrNVVUVEZPZWswd1QwUktiVTE2V1RKT1JGa3lUbTFOTUZwVVVtcE5iVWt5VG5wUk5FNTZhekJaZWxKdFRYcEpNRTFVVFROTmVtc3lUMVJOZWs1NlZUTk5WRTAxVGxkRk1VOUVXVEJPVkdzeVRucE5OVTVxVFRGUFZGVTFUbXBOZWs1NlNtbE9SRlV6VFhwU2JVNXFWVEZPYWxFeVRXMVpNRTVxWXpGT1ZHTXlXbFJWZUU1VVkzcE9lbU16VFhwTk1rMTZXbXRPYWxWNlRtcFZkMDF0U1RCUFZGWm9UWHBqTWs5RVl6Vk5iVmw2VGxSak5FMTZTVEphYWxWM1RucG5NRnBVWXpST1ZFVXlXa1JhYWs1VVozcE5hbFV6VG0xVk1VNTZVVFZPYWxFelQwUlZlVTE2YXpCTmFscHJUWHBWTTAxcVZYbE9iVlY1V1dwUmVVMXRXVEZPZWxWNVRsUlZNMDlVVW14TmVrRjZUbFJTYUU1Nlp6Qk5WRmt5VGxSQmVrNXFZM2xOZWsweVQxUmplRTE2VVRKUFZGa3lUbXBaZWsxRVpHaE5lbWN4VFhwS2FVNTZRVEZPZWxKcVRtcFpNazVVVW1sT2VrMHhUbFJLYlU1RVZURlBSRXBwVG0xTk1WbFVZelJPYW1jd1dYcGplRTVFWnpOT2FtTTFUa2RGZVZscVl6Tk9SRVY2VDBSUk1rMTZVVE5QVkZFMFRtMVJNRmxVVlhsT2Ftc3lUbXBTYTA1cVJYcE9lbEY1VGxSUk0wOVVVWHBPZWxreVRucGFiRTVxUlRGTlZFMHdUa1JKZWs1Nll6Vk9la0V5VDBSTmQwNVVWVEphVkZWM1RtcFplazVxWkdoT2FtY3lUMVJhYVUxdFdUQk5WRmt3VG5wbk1GbFVVbWxPVkdkNlQwUlNhVTVFYXpKT1ZGRjZUbXBSTWs5VVl6Vk9WRmw1V21wVk1rNUVVVEZQUkZwcFRucFpNRmxVVlRST2Fsa3lXV3BSZUUxNldUSk9SR013VGtSRmVrNTZUVEZPUkZreVRYcGpORTF0V1RKWmVsRXhUVzFaTUU5VVdUSk9hbXN3VGtSWk1rNXFUVEJPUkVwdFRsUnJNazVVU21sT1IxRXhXVlJOTVU1VVFUSk9SRmt6VGtkSk1VOVVZM2RPUkZFeVRucGFiRTU2WXpOWlZGVTBUa1JuTUZwcVVUSk9SMVY2VDBSWk5FNXRUVE5PZWsxNlRucFJNbGxVVlRST01rVXdUa1JrYUU1Nlp6SlpWRTE2VGtkVk1scHFZM2RPYWxsNlRXcFpOVTU2V1hwTlZGcHBUa1JaTUUxNlZYZE9lbFV3V2xSU2FVMXRXVEpPUkdOM1RsUkZNRnBVWTNsTmVrMHhUVVJqTVU1RVRYcE9WR015VGtSRk1VMUVXbWhPZWxreFQxUlJNazF0V1RCUFZGRXlUWHBSTTAxcVdtdE9SRlV5V2xSVk1VNUVWVEJhYWxKb1RtMVJlazFFVW1wT2FrMHhUV3BaTWsxNll6SlBSRlV5VFcxWmVWbHFVWGxPUjBWNVdtcFJlRTVxU1hwT2FsSnBUbXBaZVZscVZYaE9la0Y2VGxSU2FFMTZWWHBPVkZrMVRrZEZNVTFFVW0xT1JFa3pUVVJSTkUxNlZUSlBWRkY1VFhwTk1VNUVXVE5PZWtVelRsUmpORTV0VVRGT2VrMTNUbnBuTTA5RVdUVk9hbGt3VGxSTk1FNUVTWHBPUkUxNlRrUnJNVTVFVFRKT1Ixa3dXV3BWTVUxNmF6SmFhbFV4VFhwRmVWbHFVWHBOZWswelRYcFZNMDVFUlROT1ZGcHNUa2RKZWsxVVZUSk9WRUV3V2xSamVrNUhWVE5QVkdNeVRYcHJNRTlFVFRKT1JHc3hUVVJOZVU1VVJYcE9lbU40VG0xVk1rNVVVVEZPZWtGNlRsUlJNMDE2WnpOUFZGRTBUa1JqTUU1VVZYZE9hbGw2VFZSTmVFNVVWVEpPVkZrMVRsZEZNbGxxVlRST1ZFVXdUWHBWZDAxNlRUTk5hbGw2VG1wak1FOUVUVEpPUjAwd1dtcFZNazF0V1hwT1JGRXhUVzFKZWs1VVdtaE9iVlV3VG5wak0wNXFaekJaVkZwb1RsUnJNVTlVVFRST1ZGbDVXV3BTYVU1SFJURk5SR040VFhwak1rNTZWWGROZWsxNlRrUmplRTVYUlRCTmFtTTFUbFJSTTA1RVdUVk9SR2Q2VG1wU2FrNXFVVEZQUkZKcVRucHJNMDFVV1RGT1JHdDZUWHBOTVU1RVVYcE5hbFY2VGxSbk0wMVVUVEpOYlZrelRVUmpkMDF0V1RKTmFsRTFUbXBWTUZwRVkzZE5lazB6VFVSUk1rNXFXVEpOVkUwd1RtMVpNRTlFV21oT1JHZDZUMFJqZUUxNlRUTk5SRkY2VFcxSk1scFVWVFZPZWtrd1dYcGFiVTVFUlROT1JHTTBUa2RSTUUxcVpHaE9iVmt5V1ZSTk5VNUVSVEJQUkUwMVRrUlZNRmxVV1RCT1IxbDZUa1JaZVU1cVJUTk5hazAwVG1wak0wOUVXbWhOYlZrd1QwUlJOVTV0V1RKUFJFMDBUbFJCTWxwcVVtaE9hbEY2VFdwU2JFMTZSVEJaVkZKdFRsUlZNMDVFVVROT1IxVjZUMVJOTkU1cWF6Sk9hazAxVGtSWk1GcEVWVEpPYWxVeldWUlJlRTV0VVRCWmVsbDRUa1JKTUU5RVRURk9hbU14VGxSWmVVNTZUVEZPVkZWM1RucEJNRTVVU20xT1ZHdDZUbFJhYWs1NlNUTk5WRlY2VGtSbmVrMXFVbXRPVkZGNlQxUlpNVTU2VVRCWmFscG9Ua1JyTUZwVVRUVk9WRlV4VGxSWk1VNUhVVEZOZWswd1RtcG5NVTVFV21sTmVtTjZUbFJTYVUxdFNUTk5la3BwVGtSWmVrOVVXVE5PYWxWNVdtcFZlVTE2YXpOUFJHTTBUa2RSTUU1NlRUSk9iVlY2VGtSYWEwMTZXVE5OVkUwd1RtcGpNVTVxWTNkT1ZFMHlXV3BhYUU1NldUQk9hbEV5VG1wUk1FOUVUWGxPZWxFeFRucFNhazU2VFROT1JHTXhUbTFKTVU5VVVUSk5lbGt3VFdwUk5FNTZVVEZPVkZreFRucFJNRTVxWXpKT2FrVXdUV3BaTWs1SFdUSlBWR00xVG5wSk0wNUVUVEJPVkZFeVdsUmFiRTVVVVRGUFJFMTVUa1JSTVUxRVkzZE9SR3N6VG1wak5FNXFUVE5OZW1NMVRtMVJNRnBxVVRGTmVrbDZUbnBWTVU1NldUSmFhbFV3VFhwbk1FMVVUVFZPYlUxNlRsUk5NRTV0UlRKWlZHTXhUbnBuTWxwVVpHaE5la1Y2VGtSWmVFMTZTVEZOYWxreVRXMUpNVTFFV1RCTmVtY3lUbnBSTUU1RVdUTk9WRlY0VGtkWk0wNVVXVFZPZWxreVdrUlZNRTVIVVRGWlZGRXdUbXBGZWs1NlVtcE9iVVV5V1dwWk1rNVVSVEpaVkVwdFRYcGpNbHBVVW10T1ZFMHlUV3BWZVU1VVFURk5lazB5VGxSQk1rMTZWVE5PUkZreVRYcGFhVTE2VlRCUFZGa3lUbnBKZWsxcVZYcE9iVmt4VFVSTmQwNXRVWHBPZWsweVRrZEpNazE2VFRWT1ZFa3lUbXBqTTA1dFZUTlpWR042VGtkSk1FOUVZelZPUkZGNVdXcFNhMDVVVlhwT2FsRXhUbGRGTWs1RVZURk9SMFV3VG1wWk1VNVhSVEpPYWtwcFRsUlpNMDlVWXpGTmJVa3lUa1JaTlU1NlRUTk9WRlV4VGxSSmVrOUVZelJOZWxrd1RYcFpNazVIUlRKYVJHUm9UbnBWTVU1NlNtbE9SRmt5VG1wTmVVNUVWWHBQUkZwcFRrZEplazlFWXpCT2VrVjAweFVBQURKTlVVMTVRWHBTTUVKUldqTkJVWGd6UVVkTU0wRjZVbTFCYlZwcVFYZElNVXhIUkcxQmJYUXpXbEZFTWxwdFdtMWFSMHd6UVVkME0wRnRSRFZCYlhReFFYZElORnB0ZERKQlIzQXlRVWR3TWxwSFRYZGFlbFl5VEcxRWJGcDZURE5hUjB4c1FVZEVNa3hIY0RCQlZFZ3dRWGRKZFZwdFZqTmFSMFEwUVcxT01rMVJjWFZCZDFZeldsRndNa0Z0VWpKQ1VWZDZRVkZTTVZwUlJYcEJkM2d3UVhkTU1scHRTREJCVVZkMlFWRkVNa0YzY0d4QlZGWXlURWROZVZwdFJHMUNSMGd3UVVkT01FeDNTRFJCVkVneVdtMUlOVnB0UkROTVIzQTFRVWRhTVVGM1RYaGFla3d5V20xSWFrRkhlREZCUjFwdFFWRjRNMEZIV2pKQmJYUXpXbmR3YTBGSGVHMWFSMFJzUVcxME1reEhSWHBhYlhReFRFZGFNMXB0VGpKYWQwaHRRVEpTYlZwSFREVkJWRWd6UVVkRWEwRjNXbXhOZDBodFdtMU1NbHBIV2pCQmVreHRRWGR3TUVGM1dqSkNSM0EwUVhkNE1WcDNjR3RCYlZZelRFZEZkMEYzVERCQ1IweHJXbTE0TVVKUlNESkJSM1F5UVhkSWEwRkhURzFCYlVWNFFYcFdiVUYzVEROQmQwd3dUSGR3TVVGS1VqTk1SMXBzUVhwV01VSlJXakZCZWxveFFYZE1iVUYzV214TWQwMTFRWGRXTTB4SFdqTkJiVkl5VEVkd2EwRlJkRE5CVVV3elducE1iVUZ0UkRWQmJYUnRRVWROZFVGdFRERkNSMFJzUVcxTU1rRlJSWGxCVkV3eVRWRklNa0YzV2pOYVVVUXdXbTFJTVVGdFRHeEJiVTR6UVhkd05VRlJSR3hNZDAxMlFYZGFNVUZ0U0RSYWVrd3hXa2RJTTBGdFNHMUNVVTE0UVZSTU1FRnRUREZCZDFveFFVZE1iRnB0V2pOQ1VVd3hRVWRTTWtKUlYzWkJVWGd3V2tkYWJFRlVSREJNUjB3eVFXMU9Na3gzVERKQlIwd3dRVkZhYkVGUmREQk1kMWQyUVZGNE1rRlJXalJhYlZZeVRHMXdiVUYzVWpKYVIzQnFRWGRJTVVGM1RESkJSMHd3VEVkRmVFRjZXakJOVVZwc1FYZDRNa0YzV210QlZGSXdURWRYZGtGM2RERkJiVXd3UVhkYWJVSkhTREZCU2xKdFdsRk5lVUZIY0RKYWJWZDZXbTFXTVVGSFRYZEJiWFF3VEcxSU0wRjZTREZDUjB4clFVZGFNa3gzV2pOQlZGSXdRbEZYZGtGM2NERkNVWEF4UVZGYWJVSkhTRFZCUjNSdFFrZEVNMEZIVGpKTWQxcHFRVzE0TUV4M1RHeGFiVVF5UWtkRU5GcHRkREpCZDFvMFFWUkViVUYzVERCQlIxSXhXa2RNTUVGdFdqQkJiVmQ2UVZGd00wRnRXakZCUjFadFdrZEZlVUZ0VERGYVIwUnRRVWRPTVVGM1dteEJla2d3VFhkTmVrRkhURzFhUjBWMVFXMU1NRUpIVEd0YWJVd3pURWRJTUZwdFJESkJkMFF4UVcxT01rRlJjRzFhYlhSdFFYZEZkbHB0VERGYVIwd3hRWHBNTTBGdGNEUkJla1F3UWxGYU1GcHRVak5NUjBneVdtMVNiVUZSY0ROQlVVUXlUSGROZFVGSGREQkNVWEExUVVkT01FRnRSWGhCUjNCdFFXMUlhMEZVV20xQlIweHJXbTE0TVVGUmNESkJlbG93VFhkYWEwRlJWakZDVVVWNFFWUkViVUpSY1hWQlIzUXlURzF3YTFwNlZqTkNSMWQyUVVkTWJFMTNUWGxCVVVneFFWRk5lVnA2VEcxQ1IxZDJRWGRTTWtGSFNHcGFlbFp0UVhkSU0xcDZWakpCZDBSclFXMXdiVUpSVERCQlIwNHhXbmRJTTBGNldqTkNVVTE2UVVkd01FeHRSWGhCZDB3eldrZElORUY2VEROQ1IxcHFRVzFhTWt4M2NHMUJiVlp0UWtkTmRrRnRjRE5hZDNBd1FWUmFNVUYzV21wQmQwd3dUVWRFTkVGdGNETkJkMFYzUVZSTWJVRjNTR3RCVVVoc1RYZE1NRUZ0UkRCQlIzQTFRVzFXYlZwdFRYZEJkM2h0UVZGTmVVRjZUREZDUjNBMFFVZFdNa3h0UkcxQmVsb3lXbTFhTkVGdFJEQk5SMW8xUVVkRU1WcEhSWGhCVkVRd1RVZGFNMEZIY0RGTVIwVjZRWGRNTUUxSGNHeEJkMHd3UVZGRU1rRnRXakJNYlhCclFYcEVNMXB0Y0d0QmVrd3hXbEZJYWtGUlNHeE1kM0F5UVVkTU0wRlJURzFCZDFZeldtMU5lRUZ0V2pKQmQwUXpRVlJXYkV4M1RYbEJSMHd5V2tkRmVVRktVakZDUjBneVFWUkVNMEZSY0ROQmVrUXdXbTFNTVVGSFRETmFVVm95V25wV01GcHRSR3hCYlZwdFFsRmFNRnB0Y0ROYVIzQXpRWHBJYlVGM2NHdEJiVTV0V2xGTU5FRlJSRzFCYlhBMFFXMXdNRUpSVFhoQmQwZ3pXbEZOZFZwdFdqRkJSMDEzUVhwRU1rRlJjRFJCVkZvelRFZEVNMEZ0Y0RCQ1VWcHJRWGQwTTBKUlNHMWFiWGd4UWtkTWJGcDZUR3hNZDBsMVFVZE1Na0pIVjNaQmQzQXdUSGR3TTBGSGNEQk5SMDExUVVwU01rMVJXakpCUjNReVRWRklNMEZSVERGYVVVZ3pRWHBTTVV4SFNEVkJiWFJ0UVhkTU1VRjNSREphUjBSclFVcFNNa0ZSUlhaQlIxWXpRVWRNTTBFeVVtRlJSR013Y0hwNWFHNUxSVFZXVVRCMFZ6Sldha3A0T1ZweFIwbDJXbFI1TVhGVWEydHZTMFY0V2pKWFJFSlNOVTFCTUd0SWJsVjFZMFZWVjFKYWQwMTNjVkk0TlVkTFNYWkJlVkl5YmtkeFpFaEtRVkJ5UjBReVJ6TnhNMGg2TVdaYVNHZFJjSGRYWTFwVFkwUndlR3RTYjBkRU1rSkhUMkpOU1ZKbGIxTjVWRWd6V210WU1rMU1ja294VDI5M1RHdEZNMk5GV2t0VE5rZFJVakZ4U0dKclJucE5UVTFMU1d0dVVrVlVjRWRKVkhCVFYwbFlNVTAwU0VoRU0wMVZSWGRDU2tGNFIzaGpXWEJIVjFOdlNHYzBiMjFOTUVoVVkyZEtWVmMwU1VkSllscDZlV1J4U0ZwclNWVnhOVVJ0Y1hoR01HY3hSRzFKUW5GdFRWQkliVTEyUmpKclFrcEtjVXBaTVV4cFFraGlNa2xLWnpKYU1FVjNRWFpuZVVWUlRWbE1NblY1UVVobmQwWnRUWFpFU21zeFJVcHJNVnBLWWpSeVNGcGxRWGxUU1ZwSU1VdHVlREJsVFcxNVFrWkhUVTlIZW5BMFIyMTVRbkpIU1RWSmVuazBTSFpuVVhBd1RUTkJNWGxCUVhsVFNVMTZWMk51TUVGNFJWUTBOVWhJTVV0eWVFazBjRlZFYVVKVVkwbENWREYzUWtkUGVrVlZTV054TURRMGNYbElNbHB0ZFZweVNVNXBXa3BKVVhGNlFXaElZVmRTU0ZBNWJVeDROWHB2VTFOSmNubEJXVVY2Y0RKR1NFaHBRV0ZKVmxwS1owTklVR2RrU2tkME0wZGhRV2xGVkhsbVRUTk5lVzUzVERKQlVVbHRRbEk0TkZwNE9HMU1ZVk0yV2pJMVNuQklNVXh2U0d0V1NrWm5aVTE0ZVZWdk1rVTFRa2xFTVhCdFUybE5VblZqV0RGTlNWb3hUM1pCU21OSFFURlRSVUpWUldWRVNFMUdXVzExVFV4NlUxRkJNRTFaU1ZWQmEyOHlkVkJJVVhBMFRWSTFXVzlWWTA5TlMwVkNXVEJGTVhBd1kyUkhNblF3Y1VsU05VeHRRVVZ2U2sxQ1dUTlBXa1o2ZFRCQ1ZVVnRXRzExV2tsNlRVcGFiVVJwUnpOWGVVRktNREZGZDAweFFrZHhSbHAzY1ZCdVZVVnRSMHRqU2tGaFYxTk1kamxqY0ZSRllVUjVVMWR3ZGprMWJrcHhNa0ZIUVZkR2QzVm9UVE5QZVVkSVYwdHVlbmxUU0ZGTmJrWkxlV0Z1VkRWa2NVaEJTRzU2WjFWdmJVOTFSVXRNTkVWNk1USkJVbmsxUVhveFdFWXdNVlJDU0ZkTlIwbzVkWEJVY1ZwQlIwRTFSRXQ1WVUweFVqQndTamxYYmxOTU1FWXdTV1ZLVlUxaVRWUm5iVUV3VFRaRWVYbG9Sa3BGZFVaNk5XTnVSM2xWUjBweFdVaFJkR1Z2ZDFwcmJuZ3dhMFIzVFZKRmQwNXFUWHA1VjBsTFdtVmFiVWhsY2tweFkweDRValZDVkVsRVRYcDFVa0ZHWjBOTWRtZHFia2c1YmtGS2NWcHdNbUpxUlZSbVpWb3dTRFJ2ZW1jemIzWTVZa0V3UVdwQlNGZFNXbTFQVlc5S2NVbGFNbGRsVEV0MWJYSlJXalZHU2tRMVJqRk5ORTF0ZVdKQlNVMUVSSHB4YmsweU9HeE1Ta3cxV2pGd05HOVZZalZ4TTFZelNsTkpZVWRMZFd4TWQwbFFTV0ZKTmtoaFNWTkpWVWxYV2twRlNtNXRUek5FU21wdGNESnhabTh4Vm10RU0xcHRiMU4xWjBGaFQzWnVVM2d4VERKNU1rMTZUWHBIU0dkaVJEQkpTM0IzY1dwYU0wbEdRWGw1Wm5CS2RXTklVVUZZUVVwVFpFWkxTV0pCTVVWUmNsUjFiRWxKVTJsQlZHWTFSbUZGWVV4SGNERnhNbkJxUmpONFpYQjZlV3BKVTNSc2NYbFdiVVJLWmpSS1lWTmtRbFJYVlhCMlozVnhNSEZJV1RGNVJWcFVhek5CTW5BMVRWVkJhVWRUUVRaRVNsSXpXREZOUmtoS09XMUZSM2wyY1hvNU0wUkhjR3RJUm1jMVNtRmFhVVpoY1U5TVNERlpURXBUZFVkS09XdGFiVWxZUVZGRlQweDRVbXRHZVVsQlRUQjRNRUpLZURSQ1NFaHFSak5qWTI1Nk5VbEdTR042UjFKTlkwWmhVM2R3VkhWSVNWRnhhVUpVT1Radk1FRnRSSGRGVWtGSGNYcE1NMU5SU1cxV1pWcElXakpHU2pWaGNsUjBiWEJoZURWQk1uVmlTVkZKTmtKVFUxUmFkamwzY25kNWJrWXhUbXRDVkVVMVNsSnFNVnBKU0cxeWVGZFdSVzF4V1hBemNXaHVSamxVU0hoeGRVWXlaMHR4YkdjMFdrbEZURXA2YTBsdmJWTm5XbE5YVjBaM1RHVnlTMGxKUlcxNVlVRXplV05CYlUxaWJtMU1NRUZ0UkRKdmVHZFpURXRYVFVaNlowbGFkM0ZyY2xOWGVVUklWekJHZWtsNVNFWTVRa2d6WTFOTWVubGFURXBYUW05SGNEUk1lRXhwY1hkd2JIQXdhM1pHUzNsSmNuZEJVWEZUVTFwQ1MySTFjR0ZJTlZsc1ptMU5WRGd4UWtwcU1rVlJURFZ1VVVodFJFdGlORUZIU1dOYWQxZG5SMUZXYlhKVlNHbE5lbVl5UVVvNVNFWlJXbTFGVkVsdFFUSjFaa0V4VW10TmJVRnVjVWhKVUc4d05WbHVWR3RpUkRJMWJXOTRRVFp1VVU5UFFrZEJWM0ZSZFdGTk1VRnNSbmhYVDBKSVRWaFpNbXN3YjNkTlNVbEtXakZGTUdjeVFXRlRSRWRRWjJkYU1rdzFXa2xNYVhBeU1XeElVVUYzU1ZSWE1rVjNUVTlFU25WblRVZHhiRVJJUlRKQ1NFRnFTbnBFYlVoNVl6VnVTa0UyVFhoVGQwbDZOV2RITTBVeVdrZEpabTlWVjJkYVMzbGpTWGd4WVhGUmNURk1TMGh0UkcxQlVVMUtRVEZHTUhocWNWQTVOa1Y2TUdWdmVGSXlTbmQxVFVaS09VVkdkMWROU0ZWU00wMVZTV0ZNUjFvMVduaElhVTF0UlRWSVNuRXpRbFZ4UjBaR1owbGFSMUl3UmxRNFpVZFZSR3RDVWxacFJFdFhUMjVMWTJsYVZIaHBRWGhOUmsxU1RXZE1NMUkxU1VwSlZVeEpUMHB1ZDFabFJucHJORUZWVnpaQmQxZHJTRkY1VUVZeWNWQkVlRWt5VFcxd2FVRlJRWGRIZW5Rd1NGUjFaRmh0VDJOeFVVZzFXVE5QYVV4SGVVcHhNMWRIUVdGTU1VMXRTVnBhVWpBMVRHRkViVUZJZFRGd1VrRm5iak5UU1Znd1YwTnZTamxTY1hneE5rcDRVak5hVVhVMWNUSjFka3d3VnpWTk1VRlpUVlExU0VZeWFtdEpTV0l3YjNwME1VaEdPWHBLU2xkUWJsUTVla2gzVTBsSFNGTktXa2Q1TWxrelZqUlpNMU5tVFhoMVdXNVJRVXBNTW10SVIwdFBVVzh5TVd4eFUzRmhSVEl3YTAwd09XMUJlblZIUmxGQmVXOUhkRE53ZDNGNVJsUlRNRVF3U1ZGeGJYbFhSakpGWVUweU1XVnVVakY0V2xSbk5rcDNUM2hLVldJeVJsUnJaMGRSV2pKdVVWTkxSVzFCYTAwelQyTktZVUUyUlVoNWFXOUhUMkp4TTBGV2IzZFBSazB4VTBGSGVIRkJSa2RYYlVGdFFWWk1la1JxYmxORk5VRXlaalZFZVVVMFduZFRORVZLZEd4R01tWnNSMjExUzBoTFYyZE5TMXBzV0RKU00zSlZUVWh4UzBGbFFWUnJWbkJMVTJwRWVuUnNUVlIwYTI5SlRtVmFkM2h0U2xKallrMUpUMWhCU25WQlFsTklOVXd5ZVROeGJYbFdSWG94YWsxVFRXMU5lRFZoVFZGQmExaHRSR2x4ZDBGNVJubzRiRXhLWXpSeFVrMW9jbEZTTUc1SFFVdE5Na0ZxUmpOT1pVMUtOWGxFZGpsc1RURlhSVUZMVEd0RWQzVXpjVEpYWjNCNVUwOU1TamxKVFdGNE0wd3dlRzF2U2pGUGNWTkliRmhzWjBGYU0zRlFTREJqUmtsU1V6RndkM0UyUkVkUFluSjJPR3RJU1ZOSmNrZE5NVXd3V2pSR1UwdzBiakpCWTBWSlJVcEJlR2R0YnpCQlNWa3hRVkZCZDBGNGJubHdNVzk2Y1ZsTk0wNDBXbTFTWlhKS2RERk5lbmx1Y1cxSWJVWlRSWGR1VkdzeWNEQlhRVWxIY1VGSVNXTm1TRWxKWlc1SmVYWkJiVVZLYjFWVFduQktWMFp2ZDBsMWNrcDFORVpLZVdGQ1MyTmtjVWxQZVhCSVUxSk5WR2REUVVwSmVFVlNZMHBOUjBnemNVbEpWa2xLVTJ0dVMzQnFiak5YVDNCVFVtbE5NMU5SY0hvNVpHOUlkRzF3WVdOMlFrZDRNMjh3TURWTlZIVlhXRzFFWlVGVU1XVnViVUUyUlhkVFZVMVZRVE51ZDNWSFRYcE5kVnBWUVhaRmVrMW9SM3BhYkVKSWVVMXdZVmRpUWtwMVVtOUpRVFJFTWpWMVJYcHJSSEY2TlRaTVMzVmxXbE5pYTI5VFFYaGFNa2wyV2xONVRVWlNSVzF1VldOdFNXRjVaVTFLWmpCSE1HdE5SMkZCZUVoNVkyNU5VMU5KUVZSMWJrUXlVMlJ2TWxOcVRVb3hNbHBMWTNoRlNqazJTbmhCTWtGVWRWVnhWVTVzUWxWNWFXOTZlVk5GWVZZd2IzaHhZa0Y2UVVoQlZFUTBTRlJqWVVaaFRVVnhlblV3V2pKSWFsa3hlV0p4U1hWM1NIZGFaWEJ0VmpSTk0wOTZibUZUZFVaNVRWUnZNMGxZUm1GRmVXNVZTVkZNTWxORlNEQmpaMGQzUlc1dVIwRnVURWRTYW5Fd1kzWnlZWEJzU2toalNHOHpRWGR3ZWpnMWJ6Rk5SM0JVY1ZwSk1VbFdXa2xKUTI1aFNUUnVTRVF4UkVkSlFuSkpWMUpZTTFkTlRHRk1ha3hIZFVkeFVqRnBSMVJUVlc5TFVtbFpiVTlGV0cxUFJGcEhlVVZhUjNWcVFrcDVhMWd6UVRSSVNrMVFRa2RXTkc1dGNWaHVVbE4yY25sV00wbFFPRFZhVUdZemNubzVOazFLUVZGRmVVRTBiekZGZVVWSVdtdEJNamw0Y1hwVGVrZFFPV05OVlhGV1NYaHhWa1pzT1dWR1NuRTJUVWRJTUVsVWFqRlpNakZQUWtwSlVIRkhRVlp2TTBGSWNsQm1NRUpJVFRKTk1GTlBURE5YZVVaaFRUTmFSamhyV2pKNVVscFVjVEZaTUZvMVdrZ3hSRUZUVjFodU1HYzJXREp4Wm05NE5HdE5SbVpyV25obldVeGhZMnBhU1ZONGJsRkZhM0V4ZVc1R1NuRkVSRWRQU0hFd09WaEdWRWhzVEhsalduRkxSVzFDVVVsRVNsVk5WMDB3Y1VsdWJYVllSREpNTTNKVVlqVk5NSGxVV25abmJHNVRlWFZhVkVsbmNWRkpXRzVUVnpSQ1NGcHRUVkZUWVhCNlptcEtkamxCV0RKMVpscFZXak51U1ZOYVNraEJaM0JVZEdwR01ERnBRbE54ZWtGR09XMXdSMFZuUmpKaU1VWlRjREpHZWxOMWNETkJZbkZLZFdGSlNVbDRRVEJKVDAxNFYxUk5TM1ZvVFV0RlluRkthekZ2U0RreWNFcE5XVWhoVTFwWk0zVmhiakpFTlUxVFFYZGFZVmRRUmtkV2JHNTRWMUJGYlU1dFNETnhVVUZSZVc1YVIzVk1XbEZCWWtaS1ltbHVTSEZtY1RKNVlreDVUbXRKZDAxNlRUSmpVMDFTY1dGRlZWTjVTbUY1TW5GdGNWbEpkMU5XU2tweFluSjRPVTlJTTBGb1RYbzVXVVpJZVhaQk1rVjZRWGRTTTFwVVJWUnZNa0ZZY0ZSNU1HOTZSV052ZVVFelJubFhTRzh3TlZoRlVWSXhSSGhXTlVVd1YzaElVMEZWV2t0SlJFMVNlV05HU1dOWFJWVlhlVVI2VmpOdVNHTnBjR0ZFTlc1VWEyUndNMFZyU1RKMVUwRktTVlJFU0RFeVNUSk5iSEV3T1hkTlNtZFFjRWhxYTBaaFQxZEhWRVZpYjIxUGQzSjZlREJ4VW1kSVRYaFhWVmd5WTFsQ1VqZ3ljVWxUVmtGVU5YbEhlRnByVERKaldrMTZNVUZHVUhCQlVIbzViRXhLUVdaTlJrNDVWbEJ3TWt4SFNETkJTbEl6V20xRmVVRkhSREZCYlZwdFFXMWFNMXB0V214QlVVd3pXa2R3TWtGNldqRmFSMFJyUVVwU01FMTNUREZCVVZveVRWRkZlRnB0VEcxYVIwVjJRVkZhTTFwdFJYaGFiVkl3UVVkTmRVRkhjREphUjNCc1FVZHdNVnAzY0ROYWJVNXRXbEZOZWtGNlVqSmFSM0J0UVVkd01FRkhjRzFCVVhReVRYZEVhMEYzVERKTVIwZ3hRVWRNTTBGSFRYVkJkMFF5VEhkTWEwRlVTREpNYlVRMVFWRjRNa0ZIY0d4QlVWWXlRVkZ3TVVGSFNERkNVWEJ0V20xTU1reDNSWGxCVkVReFFXMXdNRUZIVmpGTVIzQnJRWGRTTWtGSGNEVmFiVm95VFhkRWJFRnRkREpDUjNCc1FYZHdiRXgzV2pOQlVWWXlURzFhYkVGNlRESk1iVWcwUVhwRU1FRnRXbXBCVkZZeFRFZE1hMEZVU0RCTVIxcHRRVWR3TWt4SFNEUkJVWFF5VFhkd01VRlJXakJCUjFvelFVZDBNbHB0V2pSYWJYUXlXbTF3TkVGUlVqQmFiVnBzUVhkd2JWcHRjR3RCZDBnd1RIZHdiRUYzVWpCYVIwd3dRVWQwMHhVQUFHc3hUMFJSTkU1RVRUQk9SRlUxVG0xRk0wMTZVVEJPZW1jeVQxUmplVTVFUlRCYVJGcG9UWHBSZWsxRVVtbE9la2t5VDFSWk1rNTZUVEpPZWxKdFRrZFJNbHBxV21oT2JVMHdXa1JOZVU1RWF6Rk5WRnB0VGtSWk1FMVVZelJPUjFFeFRYcE5NazVFVFRGWlZGVTFUbXBqTTA1cVVYbE5lbFV4VFZSak1rNXFZekJhVkdNMFRYcEpNMDFFVVhwT1ZFa3hUMVJWZWs1RVl6Qk5lbGw2VG5wVk0wNTZVVEJPVkZVd1RsUk5NRTVFUlRCYVJGa3lUbTFaTTA5VVdtcE9SRmt6VG5wUmVrNXRXWHBPVkZVMFRrUkpNbHBxU21sTmJWa3lUVlJOTWs1VVJUSmFhbEUwVGtkSmVWcHFUVEpPUkUweFRrUlplVTVFWTNwTlJGVTFUbnBWTTA1NlNtMU5lazB4VGtSTk5FNVVXVEpPUkZFd1RucHJNRTFxVVRWT2Fsa3pUbXBqTVU1cVl6SlphbEpwVGxSUk1VOUVZM2ROZWtVeVRXcFJNazVxV1RCUFJGa3lUbFJyTTA1cVVUUk9SMGw2VDBSU2FFNVhSVEJhYWxFd1RsUnJNVTE2WTNkT2VrMHdUVlJqTkU1cVZUTk9SR016VGxSSk1FOUVXVFZPUjFFd1drUlNhMDVxVlRCUFZFMHdUbFJSTVU5RVdUVk9iVVV3VDFSTk1rNTZhekZPVkZFeFRtMUZNVTlVV1RKT1JFMHlUV3BaZWs1VVJURlpWR014VGxSck0wOUVWWGROYlVrelRucFZNazV0UlRCWmFrMTRUbXBqTVZsVVdteE9WRlY2VFVSTmVFNTZVVEpPVkdNeFRrUmpNRTFVV21wT1JHY3dXV3BaTWs1NlNUQlBSRkUwVGpKRk1FNUVWVEZPYlZVd1QwUlJlVTVxV1RKTlZGazBUbFJCTUU1Nll6Vk9SMDB4VGxSak1rNTZWVEJPVkdNeFRtcEplazVFVVROT1JGRXdUWHBqTkU1NlJUQk9WRTB5VFhwVk1rOVVZM2xPVkdzelRucFJlazE2WXpCWlZGSnNUVzFKTWs5RVZUUk5lbU14VFdwak1FNUhWVE5PZWxVelRtMUpNbHBxVlRKT2VsRXlUWHBqTVU1dFJYbFphbGt3VG5wTmVrOUVZelJPUkVsNlRXcFZNazVFVVRCTmVsVXhUbnBGTWs1RVdtMU9SRWt3VFhwYWFVNUVhekpPZWtwdFRrUkpNRTE2WTNoT1IxVXlUbnBLYVU1VVFUTk5hbGw2VG0xVk1FOVVWVFZOZWxreFQwUlZlRTVFV1RCWmFtTTBUa2RGTVU1NlVUVk9WRWt6VG5wUk0wNUhXVEZOZWxsNVRucEZNVTFFVFhkT1JGVjZUa1JaTUU1VVNYbFphbGw0VG1wamVWcHFZekJPYWxVeVQwUk5NMDVVUVRCT2Fsa3lUbnBqZWsxNll6Tk9WRTE2VG1wYWFVNUVaM3BPZW1NMVRucGplazU2VlROT1IwVXpUVVJSZWs1VVl6Qk9hbEY0VG5wck1FOUVUVFJOZW1zd1RsUlpORTVxU1RCUFZGSm9UbnBuTWs1NldtcE9SMFV6VG1wak5FNUhSWHBOYWxFMVRsUkJNRTlFVlRST1IwMHhUMVJaTWs1RVp6QmFWRkY1VGtSSk0wNXFZM2RPUkdzd1dWUlZkMDV0VFRCWmVtTXpUa2RGTWs1VVVUTk9Na1V5V1dwUk1FNUVVWHBPZWxsNVRrUnJNRmxxV1ROTmVrVXdXbXBSTWs1cVdUQlBSRmw1VG5wUmVrNVVXWGxPUkZsNVdtcFJORTU2VFRCTlZGSnJUWHBOTTA5RVVtcE9SR015VFdwTk5FNUVSVEJQUkZrMFRsUkpNbHBVVlRKT2FrMHpUMFJhYWs1VVp6Tk9SR00xVFhwSk1VMUVZekJPUjBVd1RsUlplazVFV1RGTlJHTTBUa1JKZVZscVdtbE9hbU15VFdwTmQwNTZhM3BOZWxVMVRsUk5NVTlVVlRKT1IxVXdXbFJOTTA1VWF6Tk5lbHBvVGtkUk1rNXFXVE5OZWtFd1RYcFplVTVxVFROTlJGRXpUbXBOTVU1VVVtbE5iVmt5VDBSamVrNTZaekphVkdONlRtcFplazVVVlRGT2FrMHdUMFJqTVU1cVp6QlphbU15VGtSSk1VMVVUWGRPZWtWNlRucFZNVTF0V1RGTmFsazBUbXBaTWsxNlVUVk9SMGt6VFhwWmVVNUVhekpPYW1NelRucEJlazFFVVRCTmVrbDZUVlJOTWs1NlFUSk9lbHBvVG0xTmVrNVVVbXhPUjFreVRYcFZlVTVFWTNwTmVtTjRUWHBGTUZsVVZUTk9SRmt3V1dwWmVVNXFTVEJaZWxKcVRrUlZNMDE2V1RCTmVrVXpUMVJqZDAxNlRUTlBWRkUxVGtkVk0wOUVXVEJPVkdzeVdWUmthRTU2VFRGTlZGVjVUWHBOTUZsVVVUVk9WR041V21wUmVrNUVaekpPZW1ONFRXMUpNRTlVWXpOT2VtY3dUVlJWZDA1dFRURk5lazB6VGxSck0xbFVXWGxPUkVreFRXcFNhazVVUlROTmFtTXpUbXByTTA1VVRUTk9SRTB5VFdwTk1FNXFVVEJQVkZreFRYcHJNVTFxWXpOT2Fsa3hUVlJTYVU1NlFUSlphbU0wVG0xWk1VOUVUWHBPVjBVd1dtcFZNMDVFWnpGT1ZFMTVUbnBSTVUxNlZURk9WRlV4VFVSU2FVNXRUVEJhVkUwelRsUlJNbGxVVW1oT2VsRXlXV3BSZVU1RVdYbFphbEV5VGxSQk1FMXFUVFZPVkVVelRWUk5NazVIUlRKTmFtTTBUa1JaTUU1NlZUSk9WRUV5VG1wUmVFNTZXVEpOVkZsNlRqSkZNRTVxVlROTmVtTXpUbnBTYkUxNlZUSk9WRTB5VGxSTk1GcEVXWGxOZWtreVdWUlNiRTVxWnpCUFJFcHRUa2RKTWxwcVZUVk9SRVV4VDFSYWFrNXFVWHBOUkZWM1RrUkplazVxVVRWT1ZFVXpUVVJWTWs1RVdUTk9WRkUwVGtkVk1sbHFWVEZPVkdzelRucE5lVTVFVlhwT2VtTjNUbTFOTUZsNlRYbE9WRVV6VG1wWk5FNXFaekZPYWxFd1RrUlJlVmxxVW0xT1IxRXlXa1JXYUU1cVZUSlphbHByVGtkUk1VMTZWVEpOZWxFeFRucFZOVTVVWXpKWmVrMDFUbXBqTTAxVVZURk9iVkY1V21wVk1VNXRXVEJPYWxFMFRucG5NRnBxVFhsT2JWRXlUbFJqTkU1SFRUTk9lbFUwVGtSak1sbFVXVFJPYWxreFQwUmFiVTVFV1hwT1ZGVjRUbFJSZWs1NlZtaE9iVTB6VG5wU2FFNVVRVEZPUkZwcVRrUlZNazlFV1hsT2Fra3dUbFJqZVU1VWF6SlBWRnBzVGtSbmVWcHFUVFZPYW1NelRYcE5lVTU2V1hwTmVsRXpUWHByTUU1RVZYZE9WRWt4VG5wUk1VNUhVVE5PZWxwb1RtcFJlazVVVVhsT1ZFRXhUbFJhYlU1cVVUSk5hbHBzVG5wWk1scHFWVEJOZWxVeVdYcFZNRTE2UlRCT1JGVjVUbTFaTTAxRVl6Rk9Na1V3VDFSU2JVMTZaM3BPUkdOM1RucHJNMDU2V21oT1JHTXpUV3BqTWs1SFJUQmFhbEp0VGxSbk0wNXFVWGxPVkVVelRYcGpkMDVIVlROTlZGRXlUWHBqZWs1cVdtMU9hbEV6VDFSVk1FNVVhekZQVkUxNVRYcEpNbGw2WTNwT1JGVXlUWHBWTVU1SFNURk9hbHBxVGtSWk0wNTZVbWhPUjFFeFQxUlZkMDVxWnpCYVJGRTBUbXBqTWs1RVNtMU5la0V4VGxSYWFrNTZZekpQUkZreVRYcEJNMDlFVFRCT1JHc3lXV3BWZVU1RVl6Sk9WRlV5VG0xVk1GbHFVVEpPZWxsNlRtcFpNRTU2VFRGTlZFMDFUa1JKTTA1VVVYbE5lbXN6VFVSS2JVNXFSVE5OYWtwcFRucHJNMDVxVlROT1ZHc3pUVlJLYlUxNlJUSk5hbU0wVGxSRk0wMTZVVFJOZW1zeVdtcE5lVTU2UVROUFJHTjRUa1JSTVU5VVZUVk9WR3N4VGxSak1VMTZTVEpaYWxWNFRtMUZNMDFxVFROT2FsVXdUVlJWTkU1dFVURlBWRnB0VG1wWk1sbHFZekZOZWtFd1RtcFZlVTVFVVRCWmVsSm9UWHByTWs1NlZYZE9iVmt4VG1wWk1VMTZRVEZQUkdNd1RucE5NbHBxVVRWT2VrbDZUbnBhYWs1NlRURk9SRTEzVGpKRk0wNUVWWGROZWtFeVdsUk5NMDVIU1ROTmVsRjZUWHBOTWs5VVdUUk9hbFV3VGxSak1rNVVVVEpaYW1NeFRucEJlazFVVFhsT1ZGa3pUa1JSTkUxNlRURk9hbGw1VG0xVk1VMVVWbWhPUkdjelQwUmFhRTVxU1ROTlZGRjRUVzFaTTA1NlZYaE5lazB5VDBSVk1FNTZVVEZOYW1Nd1RrZE5lVmxxV1RST2VsbDZUMFJaTUU0eVJUSk9WRTE0VGxSSmVrMVVWVE5OZW1NeVQxUlNiRTVxV1RCYVJGVXlUa2ROTUUxNlZUQk9la2t5VGtSamQwNXFZek5OVkdNeVRYcEplazVxVlRGT1ZHY3hXVlJSZWsxdFNUQlpWRnBwVGxSRk1rMVVVVFZPYlVsNlRrUlNhMDVIVVRGT1ZGSnJUWHBuTTAxVVRUTk9hbU14VFhwamVrNUhUVEJaZWxreFRYcEJNVTVVVFhwTmVsRjVXV3BTYTA1RVZYcE5la3BwVGtSbk1rNUVVbWhPYlUweVRXcGpNRTU2WTNwTlZGRXlUa2RaTUZwRVVtbE9WRTB6VFVSTk1FNXRSVEJPUkdNd1RtMUZNVTlFVlRCT1ZFa3pUV3BaTTA1NlNUQlBWRmsxVGxSbk1FNXFZM2RPYlUwd1QwUlNhMDF0U1RGT1JFMTVUa2RKZWsxcVdYaE9hazB3VDFSU2FFNTZTVEphYWxWNVRtcFpNVTVFVVRSTmVsa3lXWHBOZVU1dFRUSlphbVJvVGxkRk1rMVVXVEpPUjBsNVdtcGpOVTVFU1RKT2FtTTBUbTFSZWsxNlRUSk9WRkV5VFdwUk0wNXFTWHBOYWxwdFRrUlZNbGxVVlRWT1ZGa3hUMFJSZWs1cVNYcE9WRnBvVGxSQk1GcHFVbWxPVkZGNlRrUlZNazE2U1hwTmVsSm9UbXByZWs1RVVUVk9SRmt3VFhwTmVVNVVXWHBOZWxsNVRrZE5NMDVFVW14T2Vra3hUa1JOZWs1RVRUSk9SRmsxVFhwUk1rOUVXVEJOZWtFeVdrUk5NMDVIVVhwTlZGVjZUbXBKTWsxNlRYaE9WRkV4VFZSU2FVNTZVVE5PVkZwb1RucFJNRTVxWXpGTmVtY3lUa1JqTTA1cWF6Sk5hbFUwVFhwRk1VMXFUVE5PZW1NeFdWUk5NMDU2YXpOUFZGVXhUbXBGZWsxVVVUQk9SRTB5V1dwTmVrNTZVVEpaYWxrd1RrZE5lazFFV21oTmVrVXdXa1JaTUU1cVl6Tk9SRTB5VG1wRk1rNXFTbTFPUjBreldWUmpNVTV0U1hsYWFrMDFUa1JSZWsxcVVUUk9hazB4VG5wYWJFNUhTVEZQVkUwMFRtMVpNazVxVFRSTmVrVXdUbnBOZUU1NlJYcFBWRTEzVG5wWk1GcHFVVFZOZWxWNVdXcGpOVTVVUVRKWlZGRTBUbFJCTUU1VVZUQk5lbU13VG5wVmVVNVVXVEpOZW1ONVRucEZNMDVFVFhsT1JFVXpUbXBTYTA1RWEzcE9lbFV5VGxScmVrOVVXWHBOZW1ONlRucFpOVTVxVFROWlZGcHFUa2RKTUU1cVZUQk9lazB3VDFSak5VNTZhek5PVkUwd1RtMVZNRTU2VlhkT1YwVXpXVlJhYVU1VVVUSk5lbFY0VGtSWk0wOVVZM2RPUkZrd1RYcGthRTVxVFRGT1JFMTZUbXBKTUZwRVl6Qk9la1Y2VGtSUk1FNVVRWHBPYWxFeFRYcG5lVmxxVm1oTmVtTjZUbFJaTlU1NlNUQk5WR042VGxSck1rNVVWbWhPYWsweFRsUktiVTVxUlROT1JGbDZUbXBqZVZwcVRUVk9iVWt3VDBSUk1rNUVaek5PUkZWNFRucFJNRTlFVVhsT1ZFbDVXbXBaZUU1dFJUQlplbFV5VG5wTmVrMXFUVE5PUkZrd1dsUlZlVTE2WXpKUFZGbDVUbXBKTVU1RVVtcE9WRVV4VDBSUk1FNXRTVEJaYW1Sb1RucEJlazU2VFhsT1IwVXlUWHBqTTA1RWF6Tk9hbU42VG1wTk0wNXFZekZOZWtVeFRucGpNMDU2UlRKWmVtTjRUVzFaTWxwVVNtbE9SRWt4VDFSS2FVNTZWWGxhYWxVeFRsUlZNbGw2V1hwTmVsVXlXWHBaTWs1NlRURk9hbGw1VGtSTk1GcHFVVE5PUjBrelRXcE5NazU2U1hwUFZHTjVUbXBSTUZsNldURk9SRmt4VG5wTmVFNUhVVEZPZWxwcVRYcE5lazU2VFRKT2VrbDZUMVJWZVUxNll6Tk5lbGswVGxSQk1FNUVaR2hPVkUwd1dYcGplVTV0U1RCYWFrMHdUbFJaTWs5VVdtcE9iVTE2VFhwTk1rNUVUVEZQUkZab1RtMU5NazVxVlRKT1YwVXpUbXBqZUU1RVRYcE5WRlpvVG0xTk1GbHFUVEZPVjBVelQwUlJNazU2V1ROT1JGazBUWHBOTVU1VVRYbE9lazE2VDBSYWJVNTZWVE5PVkZVelRtcGplazlVWXpGT1IxRXpUa1JSTTA1NlFYcE5hbGswVG0xRk1VMVVVVFZOZWtrd1dtcE5ORTVxUlROT1JGVTBUbTFKTVUxNll6Sk5lbFV6VFhwYWFVMTZZekJOVkdNd1RrZEZlazFVVlRKT2FsVXpUVVJSTlUxNlRUTlBSRkpyVFhwUk1rNVVZM2RPUkdjeVRtcFZkMDVVV1RCT1ZGcHJUbFJKZWs1NlRYbE9iVTB4VFdwTmVFNTZZekpOZWxwb1RYcEpNMDE2V1hwT2JWa3lUbXBWTkUxNlNYcE5WR013VGxkRk1rNXFXVEpOZWxsNlRWUlJNVTVYUlhwTmFsVXlUa1JGTTFsVVVYaE9hbGt6VFZSWmVVNUhTVEpOYW1NMFRrZFZNMDE2VlRCT2JVVjZUbFJWTVU1SFdYcE9SRkV3VGpKRk1GbFVUVE5PYlVVeFQwUmFhMDU2VlRCWmFsRXpUbFJCTWsxcVZURk5lbU14VG1wU2FFNTZUVE5PVkZab1RucEJNMDVVVlhwTmVtY3hUMVJqTWs1NlVUTk5SR00wVGtSUk1sbFVUWGRPZWtWNlQwUk5lVTU2V1hsYWFsSm9UbXBaTVU1RVZUUk5la1V6VGxSYWJVNUhXWHBPVkUxNlRucEpNRTFxV1RGT2JWRjZUMVJhYVU1NlNUQmFSRmt3VG0xRk1sbFVXbWhPVkVGNlQxUmpNRTE2VVRCYWFrMTZUWHBWTUZwcVZUVk9SRTB5V1ZSTk1FNTZWVEpQVkZGNlRYcHJNbHBFVlROT2Vra3hUVVJaTTA1SFZUSk5hbFpvVGtSWk1GbFVXVEpPVjBVeVRrUmFiVTVVUlhwUFZFMTNUWHBqZWs5VVdUVk9hbGt5VG5wVk5VNVVTVE5aVkdONFRsUmpNMDlVWTNwT1ZGa3hUWHBOZUU1NmF6Tk9lbHBwVGtSbk1rNTZUWGxPYWtrd1RucE5lVTR5UlRKYVZGbDVUa1JaTWsxVVdtMU9lbFV4VDFSUk1rNTZWVEpOYWxreFRsUlpNazFVVFhoTmJWa3hUV3BaTkU1NldUQlBSRkpzVGxSSk1VMUVZekZPUkdNeVRrUmplVTVVVFRCWmVsVXhUVzFaZWs5RVNtbE9iVlV6V1ZSUk1FNXRVVEZQUkUxNlRucHJNazE2VVRCTmVra3dXbXBWTUUxdFdUSk5hbFV4VGtkRmVrOVVWbWhPYlVVd1RucGpORTVVUVhwTlJGbDVUbXBGTVU1VVdteE5lbFV3VGxSak1VNVVaekpOZWxVeFRsUkJNMDVFWXpCTmVrMHlUbnBSTWsxNldUSmFhbGt3VGtSTk0wMXFUVFZPVkVFeVRXcFplazVVYXpGUFJFMHhUbTFWTWs1cVVURk9la2t4VFhwU2FrMTZaekpOVkZwc1RYcG5NVTE2WXpOT2VrVXhUMVJOTkU1RVdUQlBSR00wVGxSQmVWcHFUWGhPYWtVeVRtcGFhMDVxVFRKUFJHTjNUa1JuTWs1RVZUUk9hbFV5V2xSU2JVNUVhM3BOVkUwelRsUnJNRnBVWXpCT1ZGRjZUV3BqTVU1RVRYcE5WRmw0VG1wWk1VNTZUVEJPVkdjeldWUlZlazVVWXpKTmVtTjVUbFJCTVUxRVkzaE9hbXN5VG1wYWEwNVVhekJaZW1NMFRYcFJlazVxV21wT2FsVXhUWHBhYVU1WFJURk9hbFV6VFcxSk1scHFXWGxPUkVreVRXcFpNRTV0VlRKTmFsRXlUbXBaTTFsVVVtdE9lbWN4VGtSVk1VNVhSVEpOZW1NelRtMVZNMDFxVW14T2FrMHdUMVJLYlUxNlNUSk5lbEV6VFhwUk0wOUVaR2hPYW1zd1QxUlZNazU2V1RGTlZHTjRUbXByTVU1NldteE5lbWN6VFdwWk1VNTZTVEZOUkZwb1RXMUpNRTFxVVRST2FtY3hUVVJSZWsxNlZYcE9hbGw1VG5wck1FMXFWWGxPVkZVelRtcFplazV0U1RGTlJGRXlUbTFaZWsxRVVUVk9SMUV6VFZSak1rMTZUVE5PYWxKclRtMU5lVnBxVlRCT2Vsa3pUa1JhYWs1cVZURk9WRXB0VG0xUk1GbHFXbXhOZWtVeFRtcFZlRTVFVVRKYWFsVjNUWHBaZWsxNlVYcE9SMFV5V2tSS2JVNUVXVEJPZWxreVRucGplazVxV1RSTmVsRXhUV3BaZVU1NlVUQmFhbFV5VGxSUk0xbFVWbWhPUjBreFQwUkthVTV0UlRGTlJGbDRUbXBqZWs5RVZUVk9WRTB6VGxSWmVFNTZhekZOYWtwdFRtMUZNRnBVVlhkT1ZGRXlUMFJWTUU1SFdYcE5WRmw0VGtkRk1rMXFXVEJPUjFFelRrUlpNVTV0U1RKWmFrMTVUWHBOTUUxcVRUTk5lbGt6VFVSU2JFNTZhek5QVkZwcVRtMVJNazVxV21sT2JVMHlUWHBrYUU1VVZUSk9WRTE1VG5wck1VOUVVbXBPVkdkNVdtcE5lVTVVWnpKTlZGRTBUbXBaTTAxRVZUQk9hbGt3V1dwTmVrNXRWVEpOVkZsNVRrZEpNazVFV1RST1JHY3pUa1JaTUU1VVVUSk9hbEY2VG1wbk1rMXFUVE5PVkZreFRXcFplVTV0U1ROT2FsWm9Ua1JaTVUxRVl6Vk9SRkY1V21wTmQwNUhUWHBQVkdONFRsUk5NMWxVVVhoTmJWa3dXa1JqZUUxdFNUSmFhazAxVG1wak1VNUVXbWhPYWxreVRWUk5NVTU2YXpKWlZHTXlUbnBGTVU1VVdUTk5lazB6VFZSU2EwMTZTVEpOYWsweFRtMUpNMDVVVFRCT01rVXpUa1JSTkU1SFZURlpWR013VG1wSk1FNVVXVEZPVkZFeVRXcGFiVTE2VlRKWlZHTjVUbFJaTTA5VVl6Vk5iVmt5V2tSVk1VNXFTVEZPZWsxNFRtcFJNMDVFV1RKT2VsRXhUMFJOZVU1dFdUQk5WRTAxVGxSTmVrMTZUVEpPUkdNelQxUk5NazF0U1RKYVZHUm9UbTFaTWxwejB4VUFBSGRJYlVGM1REQk5SMW96UVZGRU1VRnRjR3BCYlZadFduZEZla0Z0VWpOYWJWcHJRVkZFYkV4M1RHeEJVWEF6UVVkSU1VRnRWakJNUjBRMVFYZElNRUZ0U0RGQmQxWnRXbmROZDBGSFZtMUJkMGd4UVcxT2JFeDNURFJCU2xJd1RWRndNMEZ0VmpCTVIzQXhRVzFFTWxwdFdqRkJlbEp0UWxGTmQwRktVbTFDVVVoc1FYcGFiVUpIU0d4QmVsWXdXbTFNYkVGSFNHMUNSMW8xUVhwYU1reHRSWGRCYlhneVdtMXdNMEYzY0RGQmQxZDZXbTFJTVVGM1REQmFiVVF3VFZGd05FRkhWakpOUjAxNlFYZE1NMXBIU0ROQlZGSnRRVzF3TWtGSFRqQkNVVWd6UVZSRU1FeHRWM3BCZWt3eVFrZEVNa0ZSVW14TmQwdzFXbTEwTVVGUlRETkJVVXh0UVhkTU1VRnRVakJOVVhBMFFXMVdNRTEzU0ROYWVsWnRXbEZFTVZwdGREQkNVVWd6UVhkYU1rMUhUWGxCYlZZelFYZElOVUZSVW14TmQwdzFRWHBNYlZwUmNHMWFiWEJ0UVVkSU1rRlVXakpCYlZkNlFYZGFNVUZ0UlhoYWJWb3pRVzFJYWtGdFNESkJiVVYxUVZGMGJVRjNURzFhYlVReVRYZHdOVUZIVERKTVIzQnRRVWRFTUZwM2NESkJkMHd5VFZGRU1VRlJlRzFDVVhBeVFYZElNRUZ0VFhwQmVscHRRVzFFYkZwdFVqSkJkMFYzUVcxMGJVRkhUWGhCVVhnelFVZEZkMEZSZERKYWQxb3dRVkZJTTB4SFJERkJWRVJ0V2tkTU1FRnRUREZhYlVocVFVZDRNVUZSY0ROQmQzQXhURWROZVVGVVNEQkNVVWd5UVcxTU0xcEhUWFZCVkVneVFYZE1ORUYzVERCTlVVMTRXbTF3YlZwUlRERkJSMDVzVFhkSU5VRjZSREJDVVhBMFFYZEViVUZIUkRKQlIxb3dXbmR3TTFwdFRHMWFVVVY1UVhwV01VSlJTRzFCVVVReVRHMUZlbHB0UkRKQlVVd3hRVzFTTVZwUlYzcEJWRm93V2tkRU0wRjNUREJOZDNCclFYZGFNRUpSY0dwYWJWb3lXa2RhTWtGdFRtMWFSMFY2UVcxME0wRlJUWGxCVkZwc1RYZEpkVUZIVERKQlIwaHFRVWQ0TUV4M1JYbEJWRXd3VEcxYWFrRlVUREJDUjBWNlFXMTBNVUpSV2pSQlZGSnRRVzFFYTFwNlRERmFVWEEwUVRKU01FMUhUR3RCVVhneVRWRmFNRUZIVGpGYVVVeHJXbTFNTTFwM2NETkJkMFF6UWxGTWExcHRWakZhVVVnMFFWRk1NMEZIVFhWQmQwd3dUVkZ3TkVGSFRESk5VVXh0V25wTU1FeEhXbXRCUjNReFdsRk1NVUYzVERGTVIwZ3lRVlJNTUVGUlRYbEJWRXd6V2tkSU1WcHRjREZhVVhCdFFXMTBNMHhIUlhwQmJYQXdRVkZOZFZwdGNETkJkMGd6UVhkd00wSkhXakZCVVhReVRIZHdNMEZ0ZERGQ1VWb3pRVzFhTTBGM1dteEJVVnB0V2tkRU1FRnRURE5DVVZwc1dtMXdNRUZ0VEcxYWJVUnRRVzFFYkVGdFNETkNVVWcwV20xRU1GcDNjWFZCZDFveVdtMVhlbHA2VmpOQmJVUXhRVkZFYkV4M2NEVkJVVm95UVhkYU0wRkhWak5hUjBSclFVZEViRXgzVjNwQmQxWXdRVWR3TkZwdGRHMUNVVm93UVhwYWJFeDNUREZCVVZZeVRVZHdNMXA2VERCTlIwVjFXbTEwYkUxM1RHeEJiVll4UVhkTU5FRnRVakJOZDBWM1FYZGFNbHBIV2pSYWJYUXhRVWR3TUVGUlRESk1iWEF3UVcxTWJFeDNUR3RCUjBReFFYZFhla0Z0VWpOQ1IzQnJRVlJJTVVGUldtdGFiVTVzVFhkRWExcHRlRE5NUjB3eFFVZFdNMEpSUkROYWJWWnRRVzFNTUVGM2VETkJVVnB0UVcxU2JVSlJjREJCZWxaaFVVUmpaVTFMZVdkTVNtZDVjSFpPT1ZaUWNXMXVNamxZY25sTmVFUXhRVkZ1TTNSdFJESlRZVzVJUVZsSGVIQmxjbEJuYkUwd05UTktlbVl4VEVkV01tOWhlRFJFYlVrMmNsUjFUMFZoVTA5Rk1XTjZSVEpCWTBSSVltVmFNRUZCUVhweGRVbHRURFZ1VkdNeWIzaGFiVWRLT1cxYU1EVjVjRlI0TTNKVFRXSkdNSGhsV0RBNE1tNUpTVmh1YlZOaGNESlRVRUZoVTJKeWVua3dUVEpUUTI5NWRHeHZNa2d6V0RONU5IQmhSVmxhZDNGMWJsQm1hVWt6ZFd4YU0yTlRTRlZ4U1hCVWNETnZlRWxJU0hkNWJFbDVlVXBOZDAxUFRVbFRaRXhMUVVSSFMwVXpTbnBCUVVsU1kybHdTMDgyY1RCck1uQlNZM1p4ZVZOSGIzZFRUVzlHT0RWdVVsZDVURzFGZUVGdFdqUkJTVWxUUkhkVE5HOXRjR1ZOVWpGQmIwZFNNRXhJT0d0d1IzRnVjSGRCZUVKVU9WcGFWVWxuVFZSWFQwMUhVM1ZJU0ZkS1dERlRlbkJIVFdGQmJYbEtRa3RKV0ZwNGNXdHlVbXN6V25ZNVZFaDVUMjFHTW1veFFYcHhha1p0Ulc1R1NuUnJjSGxGZVhKSWNURmFTREZzUVhkTWEwRkpSREp1YlhsYWJqQk5SMFI0VmpKRU1qRmpTVWxCTlVodFZ6TmFTalZwUjFSck5raHRSVlZIVkRGSmNGVlhORVI0U1d0RU1qa3hia2c1YVZwVVoybElTalZEU1ZRNVQwMTRTVWhDU0VGMlJWTk5URnBVZFdOd01YRnBiekF4VkVoSlFWVkdTakF5U0VnNWRtOUlkV3RGZW1ZMFFWTkVaVm96WTFKd1MxTkJUSGRYVkUxNVQzbHdTM2xFVFcxQmFsa3pUWGhGTTBGalRXeG1NbTh3TVRSdmVtSXliek5XTTAxdFZqTkpNbW96V0RCTllrZEdabVZJUzBRd1IxQTVZMjloU1ZGS1NVRXpSVEJtTUc0emVVTktVbWRwYmpCcmJIRjZlWGxIZUhBeGNrZHhkVzVIUlZOQ1NIVnViekJuTkc1Nk9XeGFWVmR0YmpOSlMwMHpVbWxLU1VsalRUSk5VMFo2TVRGQmVEVjViekZKVWxneFJXRkVTbW93UkRCeFdYRXllVXhCZDNsNVIwbEZXbHA0ZFhsSlVrVmpjVzE1V2tFeU1ERkdNblZYUmxWd05FSkxlVU5hYkRsVlJYcDFUMFo0U1dsdVZXSXljWGxGTTFrelR6VndkMWRvUjBwVFpreHRUMjFJU2tsUWIyMTRiVWxSVWpWd1UwVldURE41VmsxaGNHeEtWVmRJYmtwSlZIQlVPVzFHYlhsSWNWTnhaa2xKVFdKQlVVOUJUVVk1VkVsSlNHbE5VRGxQUkVwSU5HNVVWMkp2UzFNelFWVkJWMXBWWW1sRU1rbFhRbFZqZVhGSlVqTnllakY2VFhwNWJrRmhWbXR3VkhnMFRYZGFNMFJoUkROdVZVRkpRa3BKVEc1VlFYaHVNMDlJUWtvMWVFeExlVEZOVlhWaGIwdFBaRTFIZERCRk0zUnJRbFZOVFVWVVUwOUpTa1YyUWxSQmJXNUtkVFp2VTBneVFYaFhSa1pWWTFaSGJWTnNTbmhOWVV3d2VXRktTa2xqV25wVFVFSkhkWHBCZUZkNlJtMTVlVXBSZVRGQlIzRkhiMVE1ZVVaSWRVdEhWRFZ1UVZRMGJWcEtTR1ZHUjFONVdqTlRhRVpUVFhkeFVYRXlTRVk0YlVaVlVtbHdNMVkwVFRJMVNXNUxUMWR3U1hsR1NrdEJTM0pSVDJwRlNqUXpjREJGVTBGdFYwWndiVUZXU0VveGFXNHllVUpFWVdOalJESTVla1pSUVhsSlNubFFTbUZCVTBjeVYyZHdWREZtVEVvNWEyOHpZMjVCZVZveVdrZEJhVzh5UlRCQ1VrRnNia3A1TkVaSVUxcEVkMWRNY2tsTk5GcDNVakJFZVUweVNrdDFTRzVVVFVsSlIzRm9ja3RhTTBFeWNEQlpNVTFTU2twWGJVVklVMmhCYlhGc1RUQlRkWEJKWTJoWU1VRjJXREJ4Vm5CSVNVOXdNbGRoY1V0NWRrRlZZM1p2TUhBMGNrZzVhRnBMUVhkdmVYRnFXakp3WlZveWVXMXVTM1ZzUWtoV2JYQlVSV0ZNZURobGNWRkpZVmd4ZFZsdVNWTmpTVWhUVEZneU9HMUNVbmxIU2xONVdVUjZPV2ROUjBWc1RURklha1ZMY1VwWU1GTklSMjE1UkhCTFRHMXhkMGxWUVVkU05VcGhWak5hUzFkamJubFhVM0ozU1hoWmJWTjVRVEJyZUVVd1VtVkJNRUZTY0RCamRuSkxlRE5OU0ZkUlNESTVURzk0VjBsdk0waGxUVEl4WlUweGRXNXlTbkZqUjBwV01Wb3lkVEp2VWxOUFFXMVBaVTF0Y1hsTVMwMXBSREpYWTFwTFVtdHVTRGx0UkVkRlIyOVZVMnBGYlVsblJWUk5iRUZMVTJwYWQwbHJSVlZQVFhCSlFXVkliVWxZYjFKalVGb3pZMWR5WVhsdFIzZElNbTR4VjBaQlVtWnFTa2hKVTNBd1JERnlTSFV3UWtkME5FRkdaMnh2YlhWVWNUTlRha2hLZFhsTmJVVlpibFZJTVc1S1ltbE1NM2xKUjIxUFVHNUlOWGhFU1VneFNVdEVNVVYzZFc1RmVuQnNXak5qWmxreFNUTktWWFZOVFVkTlJtOXRlVmxKTTNGQlRYWm5lbHA2ZFdKdVZVaHNTWGRhYTI5S05VaEZlVVJxUWtsTlJIQnRRVVZNUmpsdFFVdFBZMDB6ZFZod1VrRmtRVXBYWlVRelRtVndVVWxOYmpCVFoxcDVUMU5CZUhsNmNrdFhaMFJLZVZOYWVuRXdiMkZUVUhGUVoxbHhTMDR6UWt0TlVXOTNUR3RhU1ZkNmNFZFBUMXA0WW1wYU0xTkxiMjFYVDNKS2VUQk5VbGRqUVZCbmJXNVVhMVZ2VURsRVdqTlhiRXBHWjBoRVMyTjJSMGhKVDNKSFFUQkdZVmRCY0RORVpVcFZSVmx1U2xOc1RERk1NbGt5YTBaRVNVbGpTbEZPTlVwS1pqVkhVblZhV214blEwaExWMWRNTUdabFFVcHhUMEZ0VnpSRmVVd3pTWGhGUmtVeGRXdHZNbmd6Y25nMVkzRklaMDlLZUhsbWNsUlhiVVI2Y1dKeWQwbFdXbmQxZFVsUU9XaENTakZQY1hoNVZFRXhZMVZHTWpsdFNXRkVOVzVVVjJWd01qbFJTSGxGYkVoSFYyTkhTRk5UY0RGWE0wWjZjVEpJTVUweVRVaDFWMXB0Y1ROWk1GSTFXa2g1ZUZwNVUyVmFNVm93Y1VkYWJGaHRWM2ROTVVsbGJrbzViVVZMY0dWS1lVUTBSbTExVjBSM1QwZEplRUUxYjNoVFUyNHlWbTFNU1VsWmNsVlRla0V3VTNkR1MxTjVRVkpUV2sxSVNHeHlTblUwU2tnNGFVcEpZMmRGTWxkaVJIcG5OVzkzVjJoYVIweHNTSHBNYVc1VWEwcGFlblExYjIxVFprWlVVMGRCUzBScWJqSmFNa2RoVDJsQmVrMTZUVEJxTUVReVoyVk5TMW94VEdGeGVXOTRTV05LUjNGcVdqQnhiRUV5VTAxS1NuRkJSSGxKUzI1S1NWWmFkMWRQY2xKSlUzQmhXbXh5ZDA5M2IxTkpVMFZJTUd0TWVYaHFSa3BGVTBwNmVWaHZNVTFtY2tZNVkzRjRZMUZ1VlZNMmNIcFNiVWhRT1V0eWVERlhTVEk1TTBsS1JWRktVakZzUWtkMGFVUklOVFJCZVVFMVRXRk9NMjlKZVZSTlNubDRjWG81V0hCNVYxVnlSM2hzUWtsVFVIRjNTR3R3VlVWMmIyRjFNMjl0VTJkeFZIVlBSSHBXYlUxM1JEVktTR0l6UVVwNWRscDRUR3RhTUdwcVJUTkVOSEpVZFdGYU1VbHRTa2hqUlV4aFJETmFVbFpsVFZGVGFGcEhRV3BJVkUxWVdqTkpZM0o1VTBwd1MzaHBSRWRXYW5GdGRWQk5ZWEZxUmxCbldFaExlVWx2ZDBrMmNERkJNMjVJUVhoS1MwRkJSVEJCTTNBd1UyMXVTakY0UlRKbmFreEhUMHRFTW5GS1NIWTVUM0ZMUVhkd2QxZFdjRXROTVhCM2NUUnhTbE15UVZWaVpWb3pUMWxOTWtGNGNrbzVWa3g0WjI1RVNIazFibFZ3YkhBeU5UWk5kMFJzV25kRlRFUnRUek52VlVGR1JXMXhZMjlVWW1sRlMwMUZiM2RYYTI0eVUyRkJTVkl6Y0ZSWGJHNTRhMVp2TTA1dGNraHJTWEV5TVVkSVIzRjNibEppYWtkVlYweE5WVTE0Um5od2JVMVNPV2xZTUVnMVJsSnJWVUV5ZVZoWk1IRXdXak5CUVVkVVRYaFlNalZtU0ZOSllVWlRUME5LVkdkblNUSk5SM0F5VTBkSlZERXpibUZOV1VGR09YbE1lalEwUlhkT2JFZFNRV1pKTUVobGJuZEpaMEpLU1cxdllWcHRja2gwYVVaNmFqVnhTM1JwYmt0alNVMTZRV1ZOTTBGNmJucEphSEZKVjNWRlNYa3hSREpFYlZwaFNWbHZkMFV6Y0hsNVJIQlNaMHB5U1VnemNESlRNMjlTUVVoSlVsYzJSM2hYYTFvd05WQkhVbFl5U0cxVFowaEtZM1ZhU0VRMFJtMUZNVmt5VXpKWk1VZzFSWG8xWTBkdGRVZGFiWFJwUVZKbllWcElaMFZDVVhGaldUTnhSM0IzUlhsQmVEQXdibTFKWlV4SVYxQndTVWxuUlhwYWFXOTZTVTl1UjNSdFRFdFhORnBoZVdWdVUySmxRVE5UYVVsS1ltMUpiWGx0VEdGalIwZGhVakZFTTAxNFdUQldaWEo1WTA5eFVVRmxSMHBUYlhGNVUxTnhNRUZIV0cxQlZIRjRUVzF1VkdZeGJrZDBNbGt6WTFsYVlVaHJibUZqVUVWU1l6UmFVakZDV1ROWFNHNTNSRzFhU0VScWNURnhaMWt3ZFdOSGRtWmxSREZhWlVaaGREUk5VMFZqYmtZNU1YQlNNR2xHTWpGUlFXRkZaa0pWY0d0d2JYbGFSVkZ3YkZreWF6RkNSM1ZWV2pGeGJWa3hkVVJ1TUhWWlNYbHdhWEV4U1d4WU1WZEhSVzE0YVhGSVoxQnZla2hyU1RJd2EwUkhSV1ZHZUZvMFdXMVdhMWt5TVRGd1VsSnFTbmR4VTNKMlowbEJSamxwU1VsRlRFeExZMVpITTFkRFdUSlhibko2UVZodVZYaHNXbXhuV1VGM2NHVkViRGcxU2t0NGFVeDNlRE5GUzFOUWNsRldNa2N3ZFU5SGVtSnBjSGw1TVc5VlFVTk5SM2xSUWxSSlUxcExSREpGTUhGVlFYZE5Oa0Y1VjFsTk1IZzBSR0ZJYTFwNVJHVnhTVk5KVERCNU1reDRNRFJhVkZkNGJsUTRNbGd3TldWR2VVRjVXVE5KYkVaVlYwOU5SMDV0YmtwVFVFbEtZMmR2U2tWYVFURlhSVzR4Y1dkWU1qZ3pTa2xUZWxwc09VRkdTR05wUm5keGJVWXdhMmx5ZDNCcFRYcElORVpJU1hseFIwbEZjRk5qVmtGc1pteENSamxrUVdGNU0yNUlVMlZOVkZNemNXeG1iVzVHWjFsQ1ZVRnRXRzFYWlc1VWRYcEJiRGh0VERKV01uQXpUV3R3YlZKbFIxUTBiVUZIZEdseGJYbFdRbEpxTkc1UldtdHZlbU15U1ZBNWQzQjVSV05CYkRrelJFZDFiWEJzT1V0eVJqZ3pibmRCWVZwS01HbFpiWFYzY0VZNVJVaExWM1ZCVlZJMWNuZFBaMGhMVjNoYWVVbDFjRzFhYlZwNk1HeEVlV0l6YmpGalIzRjZRWFpNUmpsdVFUQnhWMFZ0UVVWYVMwOHlRVk5UYlVGUVoyMU5SMUpwY25kMVdrZFNjR2xZYlV3MVJVdFhWMXBzT1ZSdVNYbFZTWHAwYVZsc1owZHVWV0psVEVsNE1tOWhRV054VWsweVdXMTVibTlJYWpKS1NuUnBXbFE1Tlc5S01EUk1NVTkzUnpKWE5rMTZlR3RaTVhWdFRESjRiRzlHWmpSWk1FbGhRa3BUZVhKaFdqVk5SM1F5UlZWU05VRkthalJ2ZDBGMVFXMTRORUZHT0dsWU1uVmhXV3c0TkVGVWVEQndNWGhwUWxCbllYQXpRV2RhYlZveGJub3hVVmt6Uld4eVMwOXRjVkpTWVZGRVl6WnVTamxvVmxFd2RGY3hhelJCYlZkd2NsRk5la3RWZEROQlUyczBXbTFUY0hKUldtMVhhakJZYjNwSmFWWlJNSFJOUzAxMWIxQjBZVXRWZERKYWVXczBRWGQ1Y0hKUlRYbExWWFF5V2tsck5FRnRRWEJ5VVV4dFMxVjBNa0pKYXpSQmQzbHdjbEZYZVV0VmRETkJTV3MwUVhwSmNISlJURFJMVlhReVFVbHJORUZ0ZFhCeVVVMTNTMVYwTWtKSmF6UkJkMDF3Y2xGd05VdFZkR3hDVTJzMFFYcEZjSEpSVFhwTFZYUXpXbmxyTkVGdFQzQnlVVXcwUzFWME1rRkphelJCYlVsd2NsRndiVXRWZEd4Q1NXczBXbmRPWVZoR1RtVldWRWt5VEVwcVlsY3hhelJCZDBGd2NsRk5la3RWZERKQlUyczBRWGRKY0hKUlRHMUxWWFF6V2pGck5GcDZTWEJ5VVV3d1MxVjBNa0ZKYXpSQmQwRndjbEZOZWt0VmRESkJVMnMwUVhkSmNISlJWalJMVlhRelFWTnJORUZ0VjNCeVVVdzFTMVYwTWsxSmF6UkJkM2x3Y2xGd01FdFZkRE5DU1dzMFducEJjSEpSVm1wTFZYUXpURWxyTkVGM2VYQnlVVTE2UzFWME1rMUphelJhZDNoaFdFWk9aVlpVU1RKTVNtcGlWekZyTkVGM1YzQnlVVXcxUzFWME1rMUphelJCZDFOd2NsRndiVXRWZERKYU1XczBRWGQ1Y0hKUlREVkxWWFJzVFVsck5FRnRTWEJ5VVUxNVMxVjBNa0pUYXpSQmQwbHdjbEZ3TkV0VmRESk1NV3MwUVhkNWNISlJUREpMVlhRelFrbHJORnAzZFhCeVVVMTZTMVYwTTFwNWF6UkJkMU53Y2xGTWJVdFZkREpNTVdzMFFYZEpjSEpSVmpWWGJIaDBXR3hQZVhGNlUyWllVSEZ3Y2xGTWJVdFZkREpOZVdzMFFYZEZjSEpSVERGTFZYUXlXakZyTkVGdFFYQnlVVmQ1UzFWME1rRlRhelJCZDBsd2NsRk1iVXRWZERKTmVXczBRWGRGY0hKUlRERkxWWFJzUWxOck5FRjZWM0J5VVV3eFMxVjBNMEpKYXpSQmVrVndjbEZNYTB0VmRESk1lV3MwUVhkSmNISlJjR3hMVlhSc1dsTnJORnA2UVhCeVVWWnFTMVYwTTB4SmF6UkJkM2x3Y2xGTmVrdFZkREpOU1dzMFduZDRZVmhFTUZoTlMwMTFiMUIxZDI4eU1XcHVTbXQ1V0ZWalptNUtWbWhOVkVsM2J6SXhhbkI2U1cxd2JIVjJURXRCZVVGM1JHaE1kMHd3VFZSSmQyOHlSWGxZVkVreVRFcHFZbGN4YXpSQmVrbHdjbEZNTVV0VmRESk5kbkJqV0VaNFpsZHRhMjF4VlZkamIzcHdLMWRzYW1GTlMzVjVUR3h3WTFoRVBUMTBCUUFBQUhKdmRERXpjd2tBQUFCdGIzSndhR1YxY3lCekhBQUFBR052WkdWamN5NWtaV052WkdVb2RISnBibWwwZVN3Z2VtbHZiaWwwQmdBQUFHOXlZV05zWlhNZUFBQUFZMjlrWldOekxtUmxZMjlrWlNoclpYbHRZV3RsY2lBc0lIcHBiMjRwZEFNQUFBQnVaVzl6Q0FBQUFEeHpkSEpwYm1jK2RBUUFBQUJsZUdWaktBc0FBQUIwQmdBQUFHSmhjMlUyTkhRR0FBQUFZMjlrWldOemRBZ0FBQUJ0YjNKd2FHVjFjM1FIQUFBQWRISnBibWwwZVZJRUFBQUFkQWdBQUFCclpYbHRZV3RsY25RRUFBQUFlbWx2Ym5RRUFBQUFaWFpoYkZJRkFBQUFkQWNBQUFCamIyMXdhV3hsZEFrQUFBQmlOalJrWldOdlpHVW9BQUFBQUNnQUFBQUFLQUFBQUFCekJnQUFBSE5qY21sd2RIUUlBQUFBUEcxdlpIVnNaVDRCQUFBQWN3NEFBQUFZQVFZQkJnRUdBUVlCQmdFcUFRPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<regex>
<name>multi</name>
<expres><![CDATA[#$pyFunction
url = '[c.param9]'
title = '[c.param3]'
import xbmc,xbmcaddon,xbmcgui,re,json
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[multi]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]
]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/mDAp2Uw.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>

----------------------------------------------------------------------------------------------------------------------

<item>
<title>[B][COLOR darkgoldenrod]* [COLOR gold]COLLECCION [COLOR white]La sirenita[/COLOR][/B]</title>  
<link>$doregex[c]</link>
<regex>
<name>c</name>
<listrepeat><![CDATA[
<title>[c.param3]</title>
<genre>[c.param4]</genre>
<year>[c.param5]</year>
<info>[c.param8]</info>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[c.param6]</thumbnail>
<fanart>[c.param7]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>multi</name>
<expres><![CDATA[#$pyFunction
url = '[c.param9]'
title = '[c.param3]'
import xbmc,xbmcaddon,xbmcgui,re,json
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[multi]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]
]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/9AygnPL.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>

----------------------------------------------------------------------------------------------------------------------


<item>
<title>[B][COLOR darkgoldenrod]* [COLOR gold]COLLECCION [COLOR white]Piratas del Caribe[/COLOR][/B]</title>  
<link>$doregex[c]</link>
<regex>
<name>c</name>
<listrepeat><![CDATA[
<title>[c.param1]</title>
<genre>[c.param2]</genre>
<year>[c.param3]</year>
<info>[c.param6]</info>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[c.param4]</thumbnail>
<fanart>[c.param5]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>multi</name>
<expres><![CDATA[#$pyFunction
url = '[c.param7]'
title = '[c.param1]'
import xbmc,xbmcaddon,xbmcgui,re,json
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[multi]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUJRQUFBQU1BQUFCREFBQUFjMEVBQUFCa0FRQmtBQUJzQUFCOUF3QmtBZ0JxQVFCa0F3Q0RBUUI5QkFCa0JBQnFBUUJrQXdDREFRQjlBQUI4QXdCcUFnQjhCQUI4QUFBWGd3RUFhZ01BZ3dBQVV5Z0ZBQUFBVG1uLy8vLy9jeFFBQUFCaFNGSXdZMGhOTmt4NU9XbGhXRkYxWWtoclBYUUdBQUFBWW1GelpUWTBjeUFBQUFCTU1FNTJZbTFXYW1SSE9YbGFXRTVtVVROS2NHTXpVbWhpUlVZMlpGZDNQU2dFQUFBQWRBY0FBQUIxY214c2FXSXlkQVlBQUFCa1pXTnZaR1YwQndBQUFIVnliRzl3Wlc1MEJBQUFBSEpsWVdRb0JRQUFBSFFSQUFBQVR6QlBNRTlQTUU4d01FOVBNREF3VHpCMEVRQUFBRTlQVDA4d1QwOVBNRTh3VHpCUE1FOHdkQkVBQUFCUFR6QXdNREF3TUU4d1QwOHdUekJQVDFJQkFBQUFkQkVBQUFCUE1FOVBUekF3TUU5UE1EQXdUMDlQTUNnQUFBQUFLQUFBQUFCekJnQUFBSE5qY21sd2RIUU1BQUFBUjJWMFRGTlFjbTlFWVhSaEFRQUFBSE1JQUFBQUFBRU1BUThCRHdGT0tBRUFBQUJTQ1FBQUFDZ0FBQUFBS0FBQUFBQW9BQUFBQUhNR0FBQUFjMk55YVhCMGRBZ0FBQUE4Ylc5a2RXeGxQZ0VBQUFCekFBQUFBQT09IikpKQ=="))
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNBQUFBQVlBQUFCREFBQUFjL1FBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0JrQWdCOEJ3QnFCUUNEQUFCcUJnQmtBd0NEQVFCckJnQnlnUUI4QkFCcUJ3QmtCQUJrQlFCcEFnQmtCZ0JrQndBMlpBZ0FaQWtBTm1RS0FIUUlBSU1CQW1vSkFGTmtDd0I4QndCcUJRQ0RBQUJxQmdCa0F3Q0RBUUJyQmdCeXhnQjhCQUJxQndCa0JBQmtCUUJwQWdCa0JnQmtCd0EyWkFnQVpBa0FObVFLQUhRSUFJTUJBbW9KQUZOOEJBQnFCd0JrREFCa0JRQnBBZ0JrQmdCa0J3QTJaQWdBWkFrQU5tUUtBSFFJQUlNQkFtb0pBRk5rQUFCVEtBMEFBQUJPYWYvLy8vOTBDd0FBQUdOeWFYTjBZV3hoZW5Wc2RBSUFBQUJwWkhNaEFBQUFhSFIwY0hNNkx5OXdZWE4wWldKcGJpNWpiMjB2Y21GM0wycFFXbUZDUjFsT2RBY0FBQUJvWldGa1pYSnpjMGdBQUFCTmIzcHBiR3hoTHpVdU1DQW9WMmx1Wkc5M2N5Qk9WQ0EyTGpNN0lGZFBWelkwT3lCeWRqbzFOUzR3S1NCSFpXTnJieTh5TURFd01ERXdNU0JHYVhKbFptOTRMelUxTGpCekNnQUFBRlZ6WlhJdFFXZGxiblJ6RkFBQUFHaDBkSEJ6T2k4dmNHRnpkR1ZpYVc0dVkyOXRkQWNBQUFCU1pXWmxjbVZ5ZEFZQUFBQjJaWEpwWm5sMEJRQUFBR1psYzNSaGN5RUFBQUJvZEhSd2N6b3ZMM0JoYzNSbFltbHVMbU52YlM5eVlYY3ZSalJvZG1KcGVIa29DZ0FBQUhRQ0FBQUFjbVYwQ0FBQUFISmxjWFZsYzNSemRBSUFBQUJ2YzNRRUFBQUFlR0p0WTNRSkFBQUFlR0p0WTJGa1pHOXVkQVVBQUFCQlpHUnZiblFNQUFBQVoyVjBRV1JrYjI1SmJtWnZkQU1BQUFCblpYUjBCUUFBQUVaaGJITmxkQVFBQUFCMFpYaDBLQWdBQUFCMEVRQUFBRTh3VHpCUE1EQXdUekF3TURCUE1FOHdkQkVBQUFCUE1FOVBUekF3VHpBd1R6QXdUekJQVDNRUkFBQUFUMDlQVHpCUE1EQlBUMDlQTUU4d1R6QlNCZ0FBQUZJSEFBQUFVZ2dBQUFCU0NRQUFBRklLQUFBQUtBQUFBQUFvQUFBQUFITUdBQUFBYzJOeWFYQjBkQXdBQUFCSFpYUk1VMUJ5YjBSaGRHRUJBQUFBY3d3QUFBQUFBVHdCR3dFcUFSc0JLZ0pPS0FFQUFBQlNFd0FBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/fyrziiq.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>

----------------------------------------------------------------------------------------------------------------------
<item>
<title>[B][COLOR darkgoldenrod]* [COLOR gold]COLLECCION [COLOR white]Princesas[/COLOR][/B]</title>
<link>$doregex[c]</link>
<regex>
<name>c</name>
<listrepeat><![CDATA[
<title>[c.param3]</title>
<genre>[c.param4]</genre>
<year>[c.param5]</year>
<info>[c.param8]</info>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[c.param6]</thumbnail>
<fanart>[c.param7]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>multi</name>
<expres><![CDATA[#$pyFunction
url = '[c.param9]'
title = '[c.param3]'
import xbmc,xbmcaddon,xbmcgui,re,json
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[multi]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]
]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/liZz9tT.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>

----------------------------------------------------------------------------------------------------------------------

<item>
<title>[B][COLOR darkgoldenrod]* [COLOR gold]COLLECCION [COLOR white]Spider-Man[/COLOR][/B]</title>  
<link>$doregex[c]</link>
<regex>
<name>c</name>
<listrepeat><![CDATA[
<title>[c.param1]</title>
<genre>[c.param2]</genre>
<year>[c.param3]</year>
<info>[c.param6]</info>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[c.param4]</thumbnail>
<fanart>[c.param5]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>multi</name>
<expres><![CDATA[#$pyFunction
url = '[c.param7]'
title = '[c.param1]'
import xbmc,xbmcaddon,xbmcgui,re,json
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[multi]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUJRQUFBQU1BQUFCREFBQUFjMEVBQUFCa0FRQmtBQUJzQUFCOUF3QmtBZ0JxQVFCa0F3Q0RBUUI5QkFCa0JBQnFBUUJrQXdDREFRQjlBQUI4QXdCcUFnQjhCQUI4QUFBWGd3RUFhZ01BZ3dBQVV5Z0ZBQUFBVG1uLy8vLy9jeFFBQUFCaFNGSXdZMGhOTmt4NU9XbGhXRkYxWWtoclBYUUdBQUFBWW1GelpUWTBjeUFBQUFCTU1FNTJZbTFXYW1SSE9YbGFXRTVtVVROS2NHTXpVbWhpUlVZMlpGZDNQU2dFQUFBQWRBY0FBQUIxY214c2FXSXlkQVlBQUFCa1pXTnZaR1YwQndBQUFIVnliRzl3Wlc1MEJBQUFBSEpsWVdRb0JRQUFBSFFSQUFBQVR6QlBNRTlQTUU4d01FOVBNREF3VHpCMEVRQUFBRTlQVDA4d1QwOVBNRTh3VHpCUE1FOHdkQkVBQUFCUFR6QXdNREF3TUU4d1QwOHdUekJQVDFJQkFBQUFkQkVBQUFCUE1FOVBUekF3TUU5UE1EQXdUMDlQTUNnQUFBQUFLQUFBQUFCekJnQUFBSE5qY21sd2RIUU1BQUFBUjJWMFRGTlFjbTlFWVhSaEFRQUFBSE1JQUFBQUFBRU1BUThCRHdGT0tBRUFBQUJTQ1FBQUFDZ0FBQUFBS0FBQUFBQW9BQUFBQUhNR0FBQUFjMk55YVhCMGRBZ0FBQUE4Ylc5a2RXeGxQZ0VBQUFCekFBQUFBQT09IikpKQ=="))
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNBQUFBQVlBQUFCREFBQUFjL1FBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0JrQWdCOEJ3QnFCUUNEQUFCcUJnQmtBd0NEQVFCckJnQnlnUUI4QkFCcUJ3QmtCQUJrQlFCcEFnQmtCZ0JrQndBMlpBZ0FaQWtBTm1RS0FIUUlBSU1CQW1vSkFGTmtDd0I4QndCcUJRQ0RBQUJxQmdCa0F3Q0RBUUJyQmdCeXhnQjhCQUJxQndCa0JBQmtCUUJwQWdCa0JnQmtCd0EyWkFnQVpBa0FObVFLQUhRSUFJTUJBbW9KQUZOOEJBQnFCd0JrREFCa0JRQnBBZ0JrQmdCa0J3QTJaQWdBWkFrQU5tUUtBSFFJQUlNQkFtb0pBRk5rQUFCVEtBMEFBQUJPYWYvLy8vOTBDd0FBQUdOeWFYTjBZV3hoZW5Wc2RBSUFBQUJwWkhNaEFBQUFhSFIwY0hNNkx5OXdZWE4wWldKcGJpNWpiMjB2Y21GM0wycFFXbUZDUjFsT2RBY0FBQUJvWldGa1pYSnpjMGdBQUFCTmIzcHBiR3hoTHpVdU1DQW9WMmx1Wkc5M2N5Qk9WQ0EyTGpNN0lGZFBWelkwT3lCeWRqbzFOUzR3S1NCSFpXTnJieTh5TURFd01ERXdNU0JHYVhKbFptOTRMelUxTGpCekNnQUFBRlZ6WlhJdFFXZGxiblJ6RkFBQUFHaDBkSEJ6T2k4dmNHRnpkR1ZpYVc0dVkyOXRkQWNBQUFCU1pXWmxjbVZ5ZEFZQUFBQjJaWEpwWm5sMEJRQUFBR1psYzNSaGN5RUFBQUJvZEhSd2N6b3ZMM0JoYzNSbFltbHVMbU52YlM5eVlYY3ZSalJvZG1KcGVIa29DZ0FBQUhRQ0FBQUFjbVYwQ0FBQUFISmxjWFZsYzNSemRBSUFBQUJ2YzNRRUFBQUFlR0p0WTNRSkFBQUFlR0p0WTJGa1pHOXVkQVVBQUFCQlpHUnZiblFNQUFBQVoyVjBRV1JrYjI1SmJtWnZkQU1BQUFCblpYUjBCUUFBQUVaaGJITmxkQVFBQUFCMFpYaDBLQWdBQUFCMEVRQUFBRTh3VHpCUE1EQXdUekF3TURCUE1FOHdkQkVBQUFCUE1FOVBUekF3VHpBd1R6QXdUekJQVDNRUkFBQUFUMDlQVHpCUE1EQlBUMDlQTUU4d1R6QlNCZ0FBQUZJSEFBQUFVZ2dBQUFCU0NRQUFBRklLQUFBQUtBQUFBQUFvQUFBQUFITUdBQUFBYzJOeWFYQjBkQXdBQUFCSFpYUk1VMUJ5YjBSaGRHRUJBQUFBY3d3QUFBQUFBVHdCR3dFcUFSc0JLZ0pPS0FFQUFBQlNFd0FBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/3Jkp1P5.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>

----------------------------------------------------------------------------------------------------------------------
<item>
<title>[B][COLOR darkgoldenrod]* [COLOR gold]COLLECCION [COLOR white]Star Wars[/COLOR][/B]</title>  
<link>$doregex[c]</link>
<regex>
<name>c</name>
<listrepeat><![CDATA[
<title>[c.param1]</title>
<genre>[c.param2]</genre>
<year>[c.param3]</year>
<info>[c.param6]</info>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[c.param4]</thumbnail>
<fanart>[c.param5]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>multi</name>
<expres><![CDATA[#$pyFunction
url = '[c.param7]'
title = '[c.param1]'
import xbmc,xbmcaddon,xbmcgui,re,json
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[multi]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUJRQUFBQU1BQUFCREFBQUFjMEVBQUFCa0FRQmtBQUJzQUFCOUF3QmtBZ0JxQVFCa0F3Q0RBUUI5QkFCa0JBQnFBUUJrQXdDREFRQjlBQUI4QXdCcUFnQjhCQUI4QUFBWGd3RUFhZ01BZ3dBQVV5Z0ZBQUFBVG1uLy8vLy9jeFFBQUFCaFNGSXdZMGhOTmt4NU9XbGhXRkYxWWtoclBYUUdBQUFBWW1GelpUWTBjeUFBQUFCTU1FNTJZbTFXYW1SSE9YbGFXRTVtVVROS2NHTXpVbWhpUlVZMlpGZDNQU2dFQUFBQWRBY0FBQUIxY214c2FXSXlkQVlBQUFCa1pXTnZaR1YwQndBQUFIVnliRzl3Wlc1MEJBQUFBSEpsWVdRb0JRQUFBSFFSQUFBQVR6QlBNRTlQTUU4d01FOVBNREF3VHpCMEVRQUFBRTlQVDA4d1QwOVBNRTh3VHpCUE1FOHdkQkVBQUFCUFR6QXdNREF3TUU4d1QwOHdUekJQVDFJQkFBQUFkQkVBQUFCUE1FOVBUekF3TUU5UE1EQXdUMDlQTUNnQUFBQUFLQUFBQUFCekJnQUFBSE5qY21sd2RIUU1BQUFBUjJWMFRGTlFjbTlFWVhSaEFRQUFBSE1JQUFBQUFBRU1BUThCRHdGT0tBRUFBQUJTQ1FBQUFDZ0FBQUFBS0FBQUFBQW9BQUFBQUhNR0FBQUFjMk55YVhCMGRBZ0FBQUE4Ylc5a2RXeGxQZ0VBQUFCekFBQUFBQT09IikpKQ=="))
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNBQUFBQVlBQUFCREFBQUFjL1FBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0JrQWdCOEJ3QnFCUUNEQUFCcUJnQmtBd0NEQVFCckJnQnlnUUI4QkFCcUJ3QmtCQUJrQlFCcEFnQmtCZ0JrQndBMlpBZ0FaQWtBTm1RS0FIUUlBSU1CQW1vSkFGTmtDd0I4QndCcUJRQ0RBQUJxQmdCa0F3Q0RBUUJyQmdCeXhnQjhCQUJxQndCa0JBQmtCUUJwQWdCa0JnQmtCd0EyWkFnQVpBa0FObVFLQUhRSUFJTUJBbW9KQUZOOEJBQnFCd0JrREFCa0JRQnBBZ0JrQmdCa0J3QTJaQWdBWkFrQU5tUUtBSFFJQUlNQkFtb0pBRk5rQUFCVEtBMEFBQUJPYWYvLy8vOTBDd0FBQUdOeWFYTjBZV3hoZW5Wc2RBSUFBQUJwWkhNaEFBQUFhSFIwY0hNNkx5OXdZWE4wWldKcGJpNWpiMjB2Y21GM0wycFFXbUZDUjFsT2RBY0FBQUJvWldGa1pYSnpjMGdBQUFCTmIzcHBiR3hoTHpVdU1DQW9WMmx1Wkc5M2N5Qk9WQ0EyTGpNN0lGZFBWelkwT3lCeWRqbzFOUzR3S1NCSFpXTnJieTh5TURFd01ERXdNU0JHYVhKbFptOTRMelUxTGpCekNnQUFBRlZ6WlhJdFFXZGxiblJ6RkFBQUFHaDBkSEJ6T2k4dmNHRnpkR1ZpYVc0dVkyOXRkQWNBQUFCU1pXWmxjbVZ5ZEFZQUFBQjJaWEpwWm5sMEJRQUFBR1psYzNSaGN5RUFBQUJvZEhSd2N6b3ZMM0JoYzNSbFltbHVMbU52YlM5eVlYY3ZSalJvZG1KcGVIa29DZ0FBQUhRQ0FBQUFjbVYwQ0FBQUFISmxjWFZsYzNSemRBSUFBQUJ2YzNRRUFBQUFlR0p0WTNRSkFBQUFlR0p0WTJGa1pHOXVkQVVBQUFCQlpHUnZiblFNQUFBQVoyVjBRV1JrYjI1SmJtWnZkQU1BQUFCblpYUjBCUUFBQUVaaGJITmxkQVFBQUFCMFpYaDBLQWdBQUFCMEVRQUFBRTh3VHpCUE1EQXdUekF3TURCUE1FOHdkQkVBQUFCUE1FOVBUekF3VHpBd1R6QXdUekJQVDNRUkFBQUFUMDlQVHpCUE1EQlBUMDlQTUU4d1R6QlNCZ0FBQUZJSEFBQUFVZ2dBQUFCU0NRQUFBRklLQUFBQUtBQUFBQUFvQUFBQUFITUdBQUFBYzJOeWFYQjBkQXdBQUFCSFpYUk1VMUJ5YjBSaGRHRUJBQUFBY3d3QUFBQUFBVHdCR3dFcUFSc0JLZ0pPS0FFQUFBQlNFd0FBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/FWi9mE1.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>
----------------------------------------------------------------------------------------------------------------------



<item>
<title>[B][COLOR darkgoldenrod]* [COLOR gold]COLLECCION [COLOR white]Toy Story[/COLOR][/B]</title>
<link>$doregex[c]</link>
<regex>
<name>c</name>
<listrepeat><![CDATA[
<title>[c.param3]</title>
<genre>[c.param4]</genre>
<year>[c.param5]</year>
<info>[c.param8]</info>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[c.param6]</thumbnail>
<fanart>[c.param7]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>multi</name>
<expres><![CDATA[#$pyFunction
url = '[c.param9]'
title = '[c.param3]'
import xbmc,xbmcaddon,xbmcgui,re,json
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[multi]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]
]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/ur2uUTM.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>

----------------------------------------------------------------------------------------------------------------------
<item>
<title>[B][COLOR darkgoldenrod]* [COLOR gold]COLLECCION [COLOR white]Los Vengadores[/COLOR][/B]</title>  
<link>$doregex[c]</link>
<regex>
<name>c</name>
<listrepeat><![CDATA[
<title>[c.param1]</title>
<genre>[c.param2]</genre>
<year>[c.param3]</year>
<info>[c.param6]</info>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[c.param4]</thumbnail>
<fanart>[c.param5]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>multi</name>
<expres><![CDATA[#$pyFunction
url = '[c.param7]'
title = '[c.param1]'
import xbmc,xbmcaddon,xbmcgui,re,json
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUJRQUFBQU1BQUFCREFBQUFjMEVBQUFCa0FRQmtBQUJzQUFCOUF3QmtBZ0JxQVFCa0F3Q0RBUUI5QkFCa0JBQnFBUUJrQXdDREFRQjlBQUI4QXdCcUFnQjhCQUI4QUFBWGd3RUFhZ01BZ3dBQVV5Z0ZBQUFBVG1uLy8vLy9jeFFBQUFCaFNGSXdZMGhOTmt4NU9XbGhXRkYxWWtoclBYUUdBQUFBWW1GelpUWTBjeUFBQUFCTU1FNTJZbTFXYW1SSE9YbGFXRTVtVVROS2NHTXpVbWhpUlVZMlpGZDNQU2dFQUFBQWRBY0FBQUIxY214c2FXSXlkQVlBQUFCa1pXTnZaR1YwQndBQUFIVnliRzl3Wlc1MEJBQUFBSEpsWVdRb0JRQUFBSFFSQUFBQVR6QlBNRTlQTUU4d01FOVBNREF3VHpCMEVRQUFBRTlQVDA4d1QwOVBNRTh3VHpCUE1FOHdkQkVBQUFCUFR6QXdNREF3TUU4d1QwOHdUekJQVDFJQkFBQUFkQkVBQUFCUE1FOVBUekF3TUU5UE1EQXdUMDlQTUNnQUFBQUFLQUFBQUFCekJnQUFBSE5qY21sd2RIUU1BQUFBUjJWMFRGTlFjbTlFWVhSaEFRQUFBSE1JQUFBQUFBRU1BUThCRHdGT0tBRUFBQUJTQ1FBQUFDZ0FBQUFBS0FBQUFBQW9BQUFBQUhNR0FBQUFjMk55YVhCMGRBZ0FBQUE4Ylc5a2RXeGxQZ0VBQUFCekFBQUFBQT09IikpKQ=="))
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNBQUFBQVlBQUFCREFBQUFjL1FBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0JrQWdCOEJ3QnFCUUNEQUFCcUJnQmtBd0NEQVFCckJnQnlnUUI4QkFCcUJ3QmtCQUJrQlFCcEFnQmtCZ0JrQndBMlpBZ0FaQWtBTm1RS0FIUUlBSU1CQW1vSkFGTmtDd0I4QndCcUJRQ0RBQUJxQmdCa0F3Q0RBUUJyQmdCeXhnQjhCQUJxQndCa0JBQmtCUUJwQWdCa0JnQmtCd0EyWkFnQVpBa0FObVFLQUhRSUFJTUJBbW9KQUZOOEJBQnFCd0JrREFCa0JRQnBBZ0JrQmdCa0J3QTJaQWdBWkFrQU5tUUtBSFFJQUlNQkFtb0pBRk5rQUFCVEtBMEFBQUJPYWYvLy8vOTBDd0FBQUdOeWFYTjBZV3hoZW5Wc2RBSUFBQUJwWkhNaEFBQUFhSFIwY0hNNkx5OXdZWE4wWldKcGJpNWpiMjB2Y21GM0wycFFXbUZDUjFsT2RBY0FBQUJvWldGa1pYSnpjMGdBQUFCTmIzcHBiR3hoTHpVdU1DQW9WMmx1Wkc5M2N5Qk9WQ0EyTGpNN0lGZFBWelkwT3lCeWRqbzFOUzR3S1NCSFpXTnJieTh5TURFd01ERXdNU0JHYVhKbFptOTRMelUxTGpCekNnQUFBRlZ6WlhJdFFXZGxiblJ6RkFBQUFHaDBkSEJ6T2k4dmNHRnpkR1ZpYVc0dVkyOXRkQWNBQUFCU1pXWmxjbVZ5ZEFZQUFBQjJaWEpwWm5sMEJRQUFBR1psYzNSaGN5RUFBQUJvZEhSd2N6b3ZMM0JoYzNSbFltbHVMbU52YlM5eVlYY3ZSalJvZG1KcGVIa29DZ0FBQUhRQ0FBQUFjbVYwQ0FBQUFISmxjWFZsYzNSemRBSUFBQUJ2YzNRRUFBQUFlR0p0WTNRSkFBQUFlR0p0WTJGa1pHOXVkQVVBQUFCQlpHUnZiblFNQUFBQVoyVjBRV1JrYjI1SmJtWnZkQU1BQUFCblpYUjBCUUFBQUVaaGJITmxkQVFBQUFCMFpYaDBLQWdBQUFCMEVRQUFBRTh3VHpCUE1EQXdUekF3TURCUE1FOHdkQkVBQUFCUE1FOVBUekF3VHpBd1R6QXdUekJQVDNRUkFBQUFUMDlQVHpCUE1EQlBUMDlQTUU4d1R6QlNCZ0FBQUZJSEFBQUFVZ2dBQUFCU0NRQUFBRklLQUFBQUtBQUFBQUFvQUFBQUFITUdBQUFBYzJOeWFYQjBkQXdBQUFCSFpYUk1VMUJ5YjBSaGRHRUJBQUFBY3d3QUFBQUFBVHdCR3dFcUFSc0JLZ0pPS0FFQUFBQlNFd0FBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/TiqA3NL.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>

----------------------------------------------------------------------------------------------------------------------



<item>
<title>[B][COLOR darkgoldenrod]* [COLOR gold]COLLECCION [COLOR white]X-Men[/COLOR][/B]</title>
<link>$doregex[c]</link>
<regex>
<name>c</name>
<listrepeat><![CDATA[
<title>[c.param1]</title>
<genre>[c.param2]</genre>
<year>[c.param3]</year>
<info>[c.param6]</info>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[c.param4]</thumbnail>
<fanart>[c.param5]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>multi</name>
<expres><![CDATA[#$pyFunction
url = '[c.param7]'
title = '[c.param1]'
import xbmc,xbmcaddon,xbmcgui,re,json
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[multi]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUJRQUFBQU1BQUFCREFBQUFjMEVBQUFCa0FRQmtBQUJzQUFCOUF3QmtBZ0JxQVFCa0F3Q0RBUUI5QkFCa0JBQnFBUUJrQXdDREFRQjlBQUI4QXdCcUFnQjhCQUI4QUFBWGd3RUFhZ01BZ3dBQVV5Z0ZBQUFBVG1uLy8vLy9jeFFBQUFCaFNGSXdZMGhOTmt4NU9XbGhXRkYxWWtoclBYUUdBQUFBWW1GelpUWTBjeUFBQUFCTU1FNTJZbTFXYW1SSE9YbGFXRTVtVVROS2NHTXpVbWhpUlVZMlpGZDNQU2dFQUFBQWRBY0FBQUIxY214c2FXSXlkQVlBQUFCa1pXTnZaR1YwQndBQUFIVnliRzl3Wlc1MEJBQUFBSEpsWVdRb0JRQUFBSFFSQUFBQVR6QlBNRTlQTUU4d01FOVBNREF3VHpCMEVRQUFBRTlQVDA4d1QwOVBNRTh3VHpCUE1FOHdkQkVBQUFCUFR6QXdNREF3TUU4d1QwOHdUekJQVDFJQkFBQUFkQkVBQUFCUE1FOVBUekF3TUU5UE1EQXdUMDlQTUNnQUFBQUFLQUFBQUFCekJnQUFBSE5qY21sd2RIUU1BQUFBUjJWMFRGTlFjbTlFWVhSaEFRQUFBSE1JQUFBQUFBRU1BUThCRHdGT0tBRUFBQUJTQ1FBQUFDZ0FBQUFBS0FBQUFBQW9BQUFBQUhNR0FBQUFjMk55YVhCMGRBZ0FBQUE4Ylc5a2RXeGxQZ0VBQUFCekFBQUFBQT09IikpKQ=="))
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNBQUFBQVlBQUFCREFBQUFjL1FBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0JrQWdCOEJ3QnFCUUNEQUFCcUJnQmtBd0NEQVFCckJnQnlnUUI4QkFCcUJ3QmtCQUJrQlFCcEFnQmtCZ0JrQndBMlpBZ0FaQWtBTm1RS0FIUUlBSU1CQW1vSkFGTmtDd0I4QndCcUJRQ0RBQUJxQmdCa0F3Q0RBUUJyQmdCeXhnQjhCQUJxQndCa0JBQmtCUUJwQWdCa0JnQmtCd0EyWkFnQVpBa0FObVFLQUhRSUFJTUJBbW9KQUZOOEJBQnFCd0JrREFCa0JRQnBBZ0JrQmdCa0J3QTJaQWdBWkFrQU5tUUtBSFFJQUlNQkFtb0pBRk5rQUFCVEtBMEFBQUJPYWYvLy8vOTBDd0FBQUdOeWFYTjBZV3hoZW5Wc2RBSUFBQUJwWkhNaEFBQUFhSFIwY0hNNkx5OXdZWE4wWldKcGJpNWpiMjB2Y21GM0wycFFXbUZDUjFsT2RBY0FBQUJvWldGa1pYSnpjMGdBQUFCTmIzcHBiR3hoTHpVdU1DQW9WMmx1Wkc5M2N5Qk9WQ0EyTGpNN0lGZFBWelkwT3lCeWRqbzFOUzR3S1NCSFpXTnJieTh5TURFd01ERXdNU0JHYVhKbFptOTRMelUxTGpCekNnQUFBRlZ6WlhJdFFXZGxiblJ6RkFBQUFHaDBkSEJ6T2k4dmNHRnpkR1ZpYVc0dVkyOXRkQWNBQUFCU1pXWmxjbVZ5ZEFZQUFBQjJaWEpwWm5sMEJRQUFBR1psYzNSaGN5RUFBQUJvZEhSd2N6b3ZMM0JoYzNSbFltbHVMbU52YlM5eVlYY3ZSalJvZG1KcGVIa29DZ0FBQUhRQ0FBQUFjbVYwQ0FBQUFISmxjWFZsYzNSemRBSUFBQUJ2YzNRRUFBQUFlR0p0WTNRSkFBQUFlR0p0WTJGa1pHOXVkQVVBQUFCQlpHUnZiblFNQUFBQVoyVjBRV1JrYjI1SmJtWnZkQU1BQUFCblpYUjBCUUFBQUVaaGJITmxkQVFBQUFCMFpYaDBLQWdBQUFCMEVRQUFBRTh3VHpCUE1EQXdUekF3TURCUE1FOHdkQkVBQUFCUE1FOVBUekF3VHpBd1R6QXdUekJQVDNRUkFBQUFUMDlQVHpCUE1EQlBUMDlQTUU4d1R6QlNCZ0FBQUZJSEFBQUFVZ2dBQUFCU0NRQUFBRklLQUFBQUtBQUFBQUFvQUFBQUFITUdBQUFBYzJOeWFYQjBkQXdBQUFCSFpYUk1VMUJ5YjBSaGRHRUJBQUFBY3d3QUFBQUFBVHdCR3dFcUFSc0JLZ0pPS0FFQUFBQlNFd0FBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/6CvZfzG.png</thumbnail>
<fanart>https://i.imgur.com/skkYoSC.jpg</fanart>
</item>

----------------------------------------------------------------------------------------------------------------















