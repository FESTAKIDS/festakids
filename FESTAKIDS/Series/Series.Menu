<?xml version="1.0" encoding="UTF-8" standalone="yes"?>

<item>
<title>[B][COLOR darkgoldenrod]* [COLOR yellow]Grupo Telegram[COLOR deepskyblue] @addonfestaycristal[/COLOR][/B]</title>
<link>NOLINK</link>
<thumbnail>https://i.imgur.com/pmv3nZ0.png<thumbnail>
<fanart>https://i.imgur.com/r2bQyc9.jpg</fanart>
</item>
 


 
 
 
 <!--
<item>
<title>[B][COLOR darkgoldenrod]* [COLOR chartreuse]BUSCA TU SERIE[/COLOR] [COLOR white](ALTERNATIVA)[/COLOR][/B]</title>

<thumbnail>https://i.imgur.com/fXUdoLp.png</thumbnail>
<fanart>https://i.imgur.com/Koo2Ejf.jpg</fanart>
</item>
 -->
 
<item>
<title>[B][COLOR yellow]ESPECIAL [COLOR white]DRAGON BALL [COLOR yellow][/COLOR][/B]</title>
<link>cristalazul</link>
<externallink>$doregex[c]</externallink>
<regex>
<name>c</name>
<expres><![CDATA[#$pyFunction
import urllib, re, requests, xbmcgui, xbmc, xbmcaddon, time
import os
def GetLSProData(page_data,Cookie_Jar,m):

    xbmc.executebuiltin('PlayMedia("https://archive.org/download/dragonball.pelis/DragonBall.Pelis.mp3",1)')
    time.sleep( 1 )
    return 'https://raw.githubusercontent.com/FESTAKIDS/festakids/main/LILIANIME/menu.principal.especialdball'
]]></expres>
<page></page>
</regex>
<regex>
<name>comecristal</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
 import xbmc
 import xbmcaddon
 addon = xbmcaddon.Addon('plugin.video.cristalazul')
 Url = 'link[::4] + url[:8] + Creditos[62:] = http://bit.ly/sourcecristalazul'
 grupotelegram = 'http://t.me/addonfestaycristal'
 Creditos = 'el_addon_cristalazul_fue_creado_por_el_grupo_festa_para_el_disfrute_en familia, este_addon_es_completamente_gratuito,disfrute_de_la_seccion_de_tv_premium'
 cristal = 'jdt_cristal_azul_para_todos_gratuita_creada_por_picapau_y_lourdes'
 info = 'british.true.Build.py %7/'
 return  grupotelegram[:7] + info[::4] + cristal[:3] + Creditos[146:]
def revist_dag(page_data):
  final_url = ''
  if '127.0.0.1' in page_data:
      final_url = re_me(page_data, '&ver_t=([^&]+)&') + ' live=true timeout=15 playpath=' + re_me(page_data, '\\?y=([a-zA-Z0-9-_\\.@]+)')
 
  if re_me(page_data, 'token=([^&]+)&') != '':
      final_url = final_url + '?token=' + re_me(page_data, 'token=([^&]+)&')
  elif re_me(page_data, 'wmsAuthSign%3D([^%&]+)') != '':
      final_url = re_me(page_data, '&ver_t=([^&]+)&') + '?wmsAuthSign=' + re_me(page_data, 'wmsAuthSign%3D([^%&]+)') + '==/mp4:' + re_me(page_data, '\\?y=([^&]+)&')
  else:
      final_url = re_me(page_data, 'HREF="([^"]+)"')
 
  if 'dag1.asx' in final_url:
      return get_dag_url(final_url)
 
  if 'devinlivefs.fplive.net' not in final_url:
      final_url = final_url.replace('devinlive', 'flive')
  if 'permlivefs.fplive.net' not in final_url:
      final_url = final_url.replace('permlive', 'flive')
  return ''
]]></expres>
<page></page>
</regex>
<info>[COLOR lightblue]TV PREMIUM, 'CRISTAL AZUL'
[COLOR white]
"Cristal azul sólo contiene regex de webs que se encuentran en internet,
este addon no se apropia, copia, ni distribuye contenido con derechos de autor,
así como no se lucra ni se considera que sea prestador de servicios de intermediación,
sólo da acesso a ésas webs, éstas son las responsables de los contenidos"[/COLOR]</info>
<thumbnail>https://i.imgur.com/GSiTjRx.png</thumbnail>
<fanart>https://i.imgur.com/Koo2Ejf.jpg</fanart>
</item>





<item>
<title>[B][COLOR darkgoldenrod]SERIES [COLOR white] EL RINCON MAGICO [COLOR orangered][/COLOR][/B]</title>
<link>http://ignorame</link>
<thumbnail>https://i.imgur.com/se7Bppp.png</thumbnail>
<fanart>https://i.imgur.com/Koo2Ejf.jpg</fanart>
<externallink>https://raw.githubusercontent.com/FESTAKIDS/festakids/main/FESTAKIDS/Series/Series.Rincon.Magico</externallink>
</item>



<item>
<title>[B][COLOR darkgoldenrod]SERIES [COLOR white]KIDS[/COLOR][/B]</title>
<link>$doregex[lou]</link>
<regex>
<name>lou</name>
<listrepeat><![CDATA[
<title>[COLOR white][lou.param1][/COLOR]</title>
<link>$doregex[temp]</link>
<thumbnail>[lou.param4]</thumbnail>
<fanart>https://i.imgur.com/GhEiyaS.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[(?s)"entry-title">(.*?)<.*?(TMDB).*?>(.*?)<.*?data-src="(.*?)".*?href="(.*?)"]]></expres>
<page>https://raw.githubusercontent.com/FESTAKIDS/festakids/main/FESTAKIDS/Series/base.series.kids.txt</page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param2][temp.param3][/COLOR]</title>
<info>[COLOR white][temp.param2][temp.param3][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[lou.param4]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[(?s)choose-season".*?href="(.*?)".*?>(.*?)<.*?>(.*?)<]]></expres>
<page>[lou.param5]</page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param1][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[lou.param4]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[(?s)num-epi">(.*?)<.*?<a href="(https://seriesflix.io/episodio.*?)" class="lnk-blk"]]></expres>
<page>[temp.param1]</page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param3] [link_final.param2][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[lou.param4]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url1 = '[cap.param2]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>final_url</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[final_url]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/MDcWeFh.png</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
</item>
-----------------------------------------------------------------------------------------



<item>
<title>[B][COLOR darkgoldenrod]SERIES [COLOR white]CARTOON NETWORK[/COLOR][/B]</title>
<link>$doregex[lou]</link>
<regex>
<name>lou</name>
<listrepeat><![CDATA[
<title>[COLOR white][lou.param1][/COLOR]</title>
<link>$doregex[temp]</link>
<thumbnail>[lou.param4]</thumbnail>
<fanart>https://i.imgur.com/GhEiyaS.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[(?s)entry-header"><h2 class="entry-title">(.*?)<.*?(TMDB).*?>(.*?)<.*?data-src="(.*?)".*?href="(.*?)"]]></expres>
<page>https://seriesflix.io/genero/series-de-cartoon-network/</page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param2][temp.param3][/COLOR]</title>
<info>[COLOR white][temp.param2][temp.param3][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[lou.param4]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[(?s)choose-season".*?href="(.*?)".*?>(.*?)<.*?>(.*?)<]]></expres>
<page>[lou.param5]</page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param1][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[lou.param4]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[(?s)num-epi">(.*?)<.*?<a href="(https://seriesflix.io/episodio.*?)" class="lnk-blk"]]></expres>
<page>[temp.param1]</page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param3] [link_final.param2][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[lou.param4]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url1 = '[cap.param2]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>final_url</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[final_url]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/raXaRz7.png</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
</item>
------------------------------------------------------------------------------------------------


<item>
<title>[B][COLOR darkgoldenrod]SERIES [COLOR white]DISNEY CHANNEL[/COLOR][/B]</title>
<link>$doregex[lou]</link>
<regex>
<name>lou</name>
<listrepeat><![CDATA[
<title>[COLOR white][lou.param1][/COLOR]</title>
<link>$doregex[temp]</link>
<thumbnail>[lou.param4]</thumbnail>
<fanart>https://i.imgur.com/GhEiyaS.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[(?s)entry-header"><h2 class="entry-title">(.*?)<.*?(TMDB).*?>(.*?)<.*?data-src="(.*?)".*?href="(.*?)"]]></expres>
<page>https://seriesflix.io/genero/series-de-disney-channel/</page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param2][temp.param3][/COLOR]</title>
<info>[COLOR white][temp.param2][temp.param3][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[lou.param4]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[(?s)choose-season".*?href="(.*?)".*?>(.*?)<.*?>(.*?)<]]></expres>
<page>[lou.param5]</page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param1][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[lou.param4]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[(?s)num-epi">(.*?)<.*?<a href="(https://seriesflix.io/episodio.*?)" class="lnk-blk"]]></expres>
<page>[temp.param1]</page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param3] [link_final.param2][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[lou.param4]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url1 = '[cap.param2]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>final_url</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MENRNEFBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFVlROT1ZGa3pUbFJWZDA1dFdYcE5SRmsxVGxSak1rNXFXbXROYlVrelRVUktiVTE2UVRCYVZGSm9UWHBuZWsxVVVYaE9Na1V5V2tSak1FNXFSVEJaYWxrMVRYcFZlazFVVlRCT1Iwa3lUbFJOZVU1NlRUSlBSRkY0VG5wTk1GcEVXVE5PVkVVeVdrUlplazE2VFRCT2VtTTFUa1JSZVZscVkzcE9WR015V2tSWmVVNUhTVEpPVkZGNVRucGpNRnBxVVhsT1Ixa3dXVlJqTkU1RVRYbGFhbGt5VG5wSmVrNUVWVEJPTWtVelRWUmplVTU2VlRKTlZGVTFUWHBGTVU1NlNtbE5lbU13VFZSVmQwNUVXVEpQUkZwcFRsUkZNazE2V1RGTmVtTXlXbFJqTkU1VVFUSlplbEp0VFcxWk0wNVVWVFJPVkZFelRYcFZlazE2U1ROT2FrMTZUWHBSZWs1NldUSk9WRUV5VDBSTmVVNXRVVEphVkUxNlRXMVplazVxWXpWTmVsa3lUa1JhYWsxNldUTk9hazB6VFhwbmVrMUVUVFJOZW1kNVdtcFZORTVVVlRGTmFrMTZUbnBaTWsxcVRYaE5lbXN3V21wak1VNTZaM2xhYWxKdFRqSkZlazU2VW14T2Fsa3pUbXBhYWs1RVZUQmFhazAwVG5wSk1rNXFXVEpPZWxsNlRsUlNhRTVVWnpCT2VrcHRUbXBSZWs1cVNtMU9SR2Q1V1dwTmVVMTZXVEpPUkVwdFRtcFpNMDVxWTNsT1IxRXpUVVJhYVU1VVdUTlpWRkV4VGtkWk1FNXFUVE5OZWxFeFRucE5NVTU2UlhwT1ZHTXlUbnBCTTFsVVVtMU5lbU16VFVSVk0wNHlSVEJOZWxwclRucHJNazVVVW14T1JFa3hUbnBaTUU1NlVURk5hazE0VG1wbmVrOVVUWHBPYW1zelRtcFZNMDU2YXpKWlZGbDZUbnByZWs1cVZUTk9lazB5V1dwWk5FNHlSVEJaZWxreVRtcHJlazVxV1RGT1JGRXpUVlJOTUU0eVJURk5WRlUwVGxSQmVrNXFXbXRPUkZFd1RsUlZNRTVVWTNwT2VtTTFUWHBOZWsxNlVYcE9lbFV3V21wS2FVNUVTWHBPZWxsNVRtMUZNVTFVV1RCT01rVXpUV3BqTTA1cVVURk9SRkUwVFcxWk1VOVVZekZPZW1jelRsUk5OVTV0VlRCWmFtTTBUbTFWZWs5VVkzbE9WRlY2VFVSak0wNXRSVEZOYWtwcFRrUlJNVTU2VlRKT2VsRXlUMFJhYkU1WFJUSmFSRmw2VGtkWk1sbDZVVFZPVkdjeVdrUlZNazVFVVRCWmFsRTBUa1JyTTFsVVZUQk5lazB3V2tSa2FFNVVVVEZOUkZFelRYcHJNMDlVV21sT2VtTXpUbFJhYTA1SFVUSlplbU13VGxSbmVrMTZVWGxPZWtFeVRWUlZlRTVVWjNwTmFsbDZUWHBOTWxwRVZUTk5lbGt6V1ZSVmVFNXFSVEZOVkUwMFRrZFJNMDlFVVhwT2Vra3pUbXBWTVU1cVRUQk9hbGw1VGtkTk0wMVVZek5PTWtVeFRVUlZORTVIVVROTmVscHFUbTFWTWxwcVVtcE9la0V5VFZSTmVrNTZXVE5aVkZrMVRucFpNVTFFV1hoT1Ixa3lUMVJOZWs1NlJUQmFSRkV3VFhwRk0wMXFWVFJPUkdNeFQxUlZNRTE2YXpKYVJHTjZUWHBuTUZsNlZUVk9hbGt4VFZSTk1VNXRUVE5OVkZreFRsUkpNbGw2VW14T1ZHc3lXWHBaZUU1RVRURk9SRTB5VG1wRk1FNTZVbXROZWxrd1dYcGpNVTVIV1RKTmVrMTNUbGRGTWs1VVdUTk9ha1Y2VG5wamVVNXRVVEJQUkZrelRucFpNVTFVU21sT2FtTXhUbFJWTWs1NlNUQk9WRkUxVG1wSk1VMVVWVFZOZWxVeFRYcGplazVxWjNwTmVsazBUbnBKTTFsVVVUSk9SMFV4V1ZSVmVFNVhSWGxaYWxKdFRsZEZNbGxVVW1sT1JFMHdUMVJhYWs1cVVUTlBWRmt6VGxkRk1scFVZM2hPVkZVd1dWUlJNMDVxWXpGWlZGVjNUa1JyTTFsVVRYbE9lazB5VFZSamVFMTZTVEphYW1NeFRrZFJNVTFxVFROTmVtTXdXbXBaZWs0eVJUTlBWRkY0VFhwbmVWbHFXbXhPUjFreFRYcFZNazVVYXpGTmFsVTBUbFJKTUU1NlkzbE9iVmt4VG1wVk1rNVVXVEpQVkZrd1RYcEZNazVxV1RCT1ZFVXlXbFJhYkU1VVdUTk9WRkV5VGpKRk1VOUVZekJOZWxGNlRsUlNhazV0U1ROTmFsVjRUWHBOTUU5VVVtMU9SR2N3V1ZSV2FFNVVVWHBOUkZVeVRrUlpNRnBVV1ROT1IwVXdXbFJOZDA1RWF6Sk9WRmt3VG1wUk1FMTZUVE5OZWxVd1RtcFNhVTVVYXpGT2VrMDFUbnBCTUU1VVRUVk9hazB5V2xSak5VNUVaekpPYWxKb1RrUkZlazU2V21wT1JFa3pUMVJLYlU1cWF6QmFhbGswVGxSVk0wOVVXbXBOZWxFeFRtcE5NazVYUlRKT1ZGWm9UbnByTWxwVVRUQk9lbXN5VG5wak1rNHlSVEZOYW1NMFRrUk5NVTlFVFhkT2VsRXlUbXBhYVUxNlp6Sk9SRkY1VG0xVk0wMTZXbTFPZWxreFRYcFJlVTVVWnpCWmVscHBUbFJKTTA1VVkzZE9SRlV3VFdwS2JVMTZRVEJPVkUxNVRrZFpNMDFFV1RKT2VrRXdXbXBSTUUxdFdUSlplbFY2VG5wWmVrNXFVVFZPZWxreVQwUlNiRTU2V1hwTlJGSnJUWHBCTWs5RVZtaE5lbEY2VFZSTmVFNTZSVEZQVkZsNlRucFZNazFxVVRKT1IxVXpUMFJOTkUxNlp6QmFha3BwVGxSUk1VMTZXVE5PYWswd1QxUmpOVTVxVVRKTmFsRjZUbFJqZWs1Nll6Vk9WRmt3V2tSYWFrNUVTVEpOVkUwelRrZEpNbHBVVVRCT1IwVXhUbnBaTUU1NlRUQk9hbGt5VGtSak1VNXFXWGxPYW1zd1RtcEtiVTU2UlRGTmVsSnFUbXBOTVUxRVZYcE9WRUY2VDFSa2FFNTZTVE5OZWxFd1RrUlJNbGw2V1ROT2JVVjZUVVJqZVU1SFJUTk5hbGt4VGpKRk1FNTZWWGxPYWtWNlRucGpORTU2UlRKWmFsRjVUbXBOTVZsVVVUSk9la0V5VDBSTk1FMTZRVEphVkUwMFRrZEpNVTE2VFROT2FrMHdUWHBWZDA1VVVYcE9SRmt6VGtkWmVWbHFVVFZPYlVsNlRtcFNhVTVFU1hsYWFsSm9Ua1JGTUUxcVdUQk9SRTB6VGxSUk5FMTZhekJOZWxVeVRYcGpNbGxxV1hwT2VtTXdUbnBLYlU1RVJUQlBWRXB0VG5wak0wNUVTbWxPVkVVd1QxUlZNVTF0V1RCWmVsRjZUbXBaZWs1VVVUQk9WRUV3VGxSUmVFNUVZekpaZWtwdFRtcG5NbGxxVW10TmVsVXdXV3BOTTA1RWF6Qk9SR015VGxSck0wNUVXWGhOZWxVelRYcGFhazVFV1ROTlZGcHBUbTFWZWs1RVdYbE5lazB3VGxSak1rNUhSVE5OYWxFeVRrUlpNazVVWXpOT1JGa3lUbXBhYUU1dFRUTk5SRlYzVFhwbk1VNVVZelZPYW1jd1dYcGpORTV0VVRCT1ZFMTZUbTFKTWxwVVpHaE9SRWt3VG1wWk1rNUhTVEZPZW1NelRsUlpNMDlFVlRST1IxVXhUMVJWTWs1cVdUQlBWRnBwVGxSTk0wMTZXWGxPZWtsNlQxUlNiVTE2VVRCTmVsVXpUWHBCTUU5RVdYcE9WMFV5VDBSUk1FNXRSVEpaYWxrMFRtcEplazFxVFROT1JFMHlXbFJaTTA1SFNYcE9SRlY2VG1wTk1VNTZXVFJPYlZVd1RsUmpNazVVVFROUFJGcG9UbnBuTTA1RVkzbE9SMWw2VGtSU2FrMTZhek5QVkZVeVRYcFZNMDlFVlRCT1ZHY3hXVlJSTUU1RVp6QmFSRkp0VGxSbmVrNUVVVEZOZW1zelQxUk5lVTR5UlRGUFJGSm9UbXBKTWsxVVdtMU5lbEV4VG1wYWJFNUVXWHBOYWxGNVRtcG5lVmxxVW0xT2Fsa3dXV3BSTUU1VWF6Rk9hbHBzVGxSSk1FMVVZekpOZW1jeFRXcE5NVTE2U1RCT1ZGa3hUbFJqTVU5VVRYbE9hbWN3VDBSTk1VNUhVVEpPVkZGNVRXMUpNRnBxV1hwT1ZGVjZUbFJLYlU1RVNUSlpWRkpxVG1wck1sbDZZekpPUkZVd1RYcFpNVTU2WXpCWlZFcHBUbnBqTUZwVVl6Sk5lbFV3V1ZSWk1FNUVZekJhYW1NelRsUkZNazFVV1RGT1JFVXdXWHBaTVU1cVJUQk5lbHBzVGtkWk0wMUVXVEJPVkVreVRtcFJlazVFYXpKT1ZFMDBUa1JGTVUxcVdUSk9hbXN5V21wTk5FNVVSWGxaYWxsNVRsUlpNRnBxWXpOT1ZGVXlUbXBSTWs1RVp6QlplazEzVG0xVmVWcHFZM2xPUkVsNlRsUlZNazVxVFRCYVJHTXhUbXByTVUxRVZURk9la1V5VG5wamVVMTZhekJOVkdOM1RYcFJNRmw2VFRST1ZFa3dXVlJLYlUxNlp6SmFhbU15VG5wck1GcFVXVEpPVkUweVdsUmFhVTVVV1ROT2FrMHlUa1JWZWsxNlVYcE5lbGt5V2xSWk1rNUhSVEphUkZFMFRrZEpNazE2VlhkTmVrMHdUbnBSTkU1RVl6QlphbU15VGtkSk0wNVVTbWxPZWxreFRtcFJOVTVxVlhwT1ZGVXlUbFJuTWsxNldtbE9SMDE1V21wVk5FNXRUVEJQUkUwMVRYcEpNazlVV1RKT2FtTXlXWHBaTVU1dFVUSk9WRmsxVGxSUk1rNXFXbXBPYW1jeFRsUmFiRTU2WXpKYWFrcHRUWHBCTTAxVVkzcE9WRlY1V1dwWk1FNXFaekpaZW1NMVRucEZNbHBVWXpGT1JGVXdUMFJOTkU1RVZURk9SRXB0VG0xSk0wMVVWVEZPZWxGNlRXcGthRTVYUlRGT1JGa3dUWHBuTWs5RVZYbE5la0V4VDBSVk1VMTZVVE5QUkZKcFRucE5NbGw2WXpKT1Iwa3lUbnBOTVU1NlVURk5hbU15VGxSVk1FNUVTbTFPYW1NeVRrUmpNRTV0VVRGUFZGRXlUa2RaTVU1RVdteE9iVkV5V2tSTk5FNXRUWGxhYWxwcVRrZFZlazlVVVROT1JGbDVXbXBaTWs1dFNUSlpWRmw1VFhwSk1rMXFXbWxOZWtFeldWUmthRTV0VFRKWmVsSnJUbnBWTUU5VVZYZE5iVmt5VDFSUk1rNXFUVEpPZWxGNFRXMVplazVVV1RGT2VrMHdXV3BOTkU1VVkzcE9lbFV3VGtSVmVrOVVWVEpPUjFFelQwUlZORTE2YXpCYVJFcHBUbFJWTWxsNll6Uk9WRWt6VG1wUk1rNUVWWGxhYWxwdFRrZEpNazVFVVRWT1JHY3lUbFJSTWsxdFdUQk5hbEY2VGtSck1FMVVZelJPZWxsNlRXcFJNVTVxWnpGT1JGVXdUa1JqTWsxNlZUTk9WR014VG1wU2JVNTZUVEZPVkZreFRsUlZNVTU2WXpWTmVsRXdUa1JOZWs1cWF6SlphbFYzVGxSTk1FNTZZekpPVkZVelRXcGFiVTVVUlhsYWFsRTFUbXBqTTA1cVdtdE9SRlV3VGtSS2FVNUhSVEphVkUxM1RsUkZlazlVWXpWT1ZFVjZUWHBWTVU1cVl6Rk5SRmt5VGtkSmVrOUVXbTFOYlZrelRsUlJORTVxV1hwUFZGRjVUa1JaZVZwcVRUUk9SRVV5VGtSYWJVNTZSVEZQUkZKdFRsUkZNbHBVVFhsT2VtY3dUbFJOTlU1VVNUQk5lazB5VGxSRk0xbFVXVEpPUkdzd1RrUlZORTF0V1RKWmFsRjVUbnBGZVZwcVRUUk9WRTE2VFVSWk5VMTZXVEpaYWxFMFRYcEZNVTVFV1RKT1IwbDVXbXBhYlU1cVdUQk9WRlpvVFhwRk1VMXFWWGRPZEFrT0FBQjZSREZCVVZwdFFYZDRNVnBSUkRCQlIzZ3dXbmRNTWxwdFJEQmFiVXd5UVhkV01GcEhSREZhZWt3eFFXMUVNRUZIU0cxYVIxcHFRWGRhTUVKUlYzcEJVWEF3UWtkd01FRkhWbTFhVVV3MFducE1NMEpIVFhoYWVsWXpXa2RJYWxwdFJETmFSM0F4UVhkd2JFMTNXalZCVVhRelFYZE1hMEZSVERKTlIwMTNRVWRTYkUxM2NEVkJWRVJ0UWxGSU1VRnRXbTFCYlUxNFFXMTRNRUZSV2pWQlIwZ3lURWR3YTBGdFVqSmFiWEJyUVVkRU0wRlJjRE5CVVhneVFWRndhMEZSUkcxQmQwdzBRVWQwTTFwUmNERkJla3h0UVcxYU1VRlJSREphZDFvMVFYZDRNa0ZSVEd0QmVsSXlUVWRFTWtGUlNHeE5kMDE0UVVkMGJVSlJURE5CUjFadFFYZElNMEYzZERGYVIxcHRRWHBhTUZwdFREQkJlbFl6V2xGYU1FRjZTRE5hUjBneldtMU9iVUZIV210QlIxb3dURWRJTlVGNlZqQmFkMW8wUVVkSU1FeEhWM3BCVVVodFFrZGFhMEZIUkd4TWQwZzBXbTE0TVZwdFJEUkJSM0F4V2xGWGVrRlJVbTFCYlZvelFVZFNiVUpIV2pGQmJWcHRRa2R3YkVGM2NHMWFiVVExUVZGU01rRjNXbXBCVkZJd1duZGFhMEZIVERKQmQwZ3hXbTFXTVZwM1dtdGFlbFl5VFVkYU1WcHRSREZDUjB3eFFVZEliVUZSVFhwQlIwNHlUWGRGZWtGUlRERmFkMWQ2UVZSSU1WcDNTREZCVVhRd1FYZE1NVUY2VWpGQ1IwUTBRVWRPTWsxUlRERkJNbEl4UVVkTmQwRlVURE5DUjAxNFFVZDBNMXB0Y0dwYWVrd3lRVzFhYlVGVVZqSmFSMWQyUVhkd01GcEhWM3BCUjBRd1FWRklha0YzY0RKTWQxb3hXbTFhTUVKSFYzcGFiVVJzVEhkRmVscHRSREZDVVZwclFWRldNRUYzY0RGQmVsWnRRVzFhYTBGSFZqRkJVVnByUVVkV01rRlJTR3hCVVhSdFFYZHdha0YzU0RCTWQweHNXbTFFTVZwSFNHcGFiVWd3VEcxYU5FRjNlR3hOZDB3MVFXMWFNVUZIUlhkYWVsWnRXbmRJTVVGSFVqRkNVVm8xUVcxU01VRkhXakpCYlZJelFYZEliVUZSZERCQ1VVaHNRVkZNTVZwUlREQkJVVWhzVFhkTU5VRkhXakZDVVV4clFXMUVNMXBIU0RGYWJVd3pRVkZGZGtGM1JHMUJiVXcwUVZGRWJVSkhjRE5CZWtneldrZEZlVUYzV2pCTlVVd3hRVzFhTUVGdFJEUmFiVVF3VFZGYU5VRkhUREZhVVVneFFVcFNiVUpIY0RCQmJVNHdRVWRYZWtGNlNHMWFiVmQ2V25wV2JVRjNUREZhYlZKdFduZE1hMEZIV20xQ1IzQXlRVkZJYlZwSFdtMUJWRnB0UVZGTmRscHRXakpNUjAxMlFYZEViVnBIU0RWQlVVZ3pXbEZOZWtGVVNESk5SMGd6UVhwYU1FRjNjRzFCZDFZd1duZEVNVUZVU0cxQmJVaHFRWGR3TVZwM1dtcEJiVXh0V2xGTU1GcHRWak5CUjNBelFYZEVNVnB0Y0RKQmJWSXdUVWRGZUVGdFdqSkJVVm8wVjJvd1dIRlZWMk52ZW5rd2NrWk9PVlpRY1dwYWVERkVUVXBUUTNBelkyMUlVbU41Y0hsWFNrRjNWekZLZW1OTlJqSkZaRzVMU1RKR1VtZFdjWGgxVFVoNmRUTkdVblZxUVRKaldXNHdlVVZ4VkRsS1IyMUJNRWRSVFcxdVlWSnFTRlZCUWtwSVV6SnhWRWxGU0dGeFNYQjVXbVZIZUVsYVNFWTVka2xRWjBWTlNEazBSMVZKVTNGUlVtcHZZWFZqYjNneFlraEthMlJHTVV3emJrbGpUMWh0ZVdSYWJVOXFTVW81V205NVkxbHhWRVZwUmpONWJISjRhekZhTW5sVVNGQm5Sa1poVXpOTVNIVlBjRE5KZVZwaFltdEhWRFV3U1dGT2JYRktaakJKVkhrMmJsVkZNVUV4WTBkYVVrbEtTa2xhYVVwSlRVVndZWGxCUm5kMWJrbDZkV3R4TTFNeWNucG5NMGg0WnpSR1NsTXhUSHBUYkVaU1NYcEdZV05TUkcxNVpGcEhWekJGVVZkSWJubFBaM0JUVTNWTWVVVjZTSGhCV1VWU05ESk5lRUZyY1VwQlFtOUhTV2x2ZWpWV2JqTlRSa1ZTVjBSd1NuRnFXbE5KYTBsdFNERmFSMEYyY1VoV01HNTRhMmRHWVhWQ1JETlBVMXB0UVRGYVlYVmFjVWcxWkVnelYwRklNbmwyV2xWNVdVMVNWalZJZWpodGNuZzVVVm93VTJKeVZVNDFSRWd4VFZveWRYVnZZVnByUVVkWFdIQXpjR3hDUzFNMWJsTmFhVWxVZVUxSlNVVnNjRWhUZVZrelQwMWFlRk4zVEhwVFJrRnNPVkp2TVVoc1RFbzRNMFI1V210QmJHZGtUVWxKWmtGNlNURnhNa2wzUmpCQmRVcFJUMjFCVlZkbWNETlhTRVl3Vm1WS2QxZDVSbmxqYUhCSFRqQk5lWEZhV0RCQmJVSlJUVEZ3TVVscmNUQjVWMHhLVW1WdVVYRnVTVW8xWVVsVU5WUkdlbmxqV2tsamRYRkdPR3R5VTA0emJ6Qk5hbTh3ZFcxRU1rMXJXVEZGYVc5NFoyRk1TbmxWY0ZWalRGb3hUbTFHZDA5clNrZDVka2xSUlUxQmVqRkxUVko1WW01SVFVZENVVk5QY2t0SmJFWnRRV3R1TWtsTmNFbHhha2xTU1VWdk1FRjRiMUZCVDI1dGRHMXZNVUZ1U2xBNVVWcDRkRFJCYlZkYVJraFNNRUZMV21wTlVsYzJXak5KVUc5MlowTkJWRGt6U0ROWFNFRnRUV2h3TWxwc1JUQXhUMFpIUlcxSllXSnFTVWh4VFVaaFJWbGFTMU5wUm5kNVdFRlNhMkZhWVUweFFVdFNOVVJLVTJwSFVVOVNjRXRCVEVwSVoySnhSMWRqUlRCU2FreEtOVmRDUzBGRlJrZFBWa1o0UkRWd01GZFlRbEpuWTFwVVFVMUNTakJyUVVoeGFVMVRVMWh3UjBGYWIwcFRTRTB3VFd0QlVVbHNjVXRUVjNCU2NEVk1NMEZzY0ZSeFUxZ3pRVUZCYlVGUmIwbEVNbGt5T1haRU1IaHBjRlJqYmt4dGNWVkhVa1ZYV0RJMWQwWXlOVTFZTWtsWmNrcFRiSEF4UVVSTlNVbDFSbmRQTkc0eU9XNU5NMDAyU0cxRmEwUkhUVEZOTWxabGNETldha2N5ZVhaRlIzUnRSSGh4UWtFeGVHdEpTbHB0UVZGeGVXNVVlVkJ5ZVZwbFIxVmliVWRUY0RGdWVGTk1jRlJOTTBsU2NXSklTa0ZvUVZKTlZWcExVM2R1U0ZjelNXeG5aMGRJY1cxdmVrbEtjWHB4YmtkSFdtbE1TamxOUmtkWGFWa3ljVFJ3VkVsVVNFdFBWRVpLTkRKR01qbHNjWGgxVkc5SFQzWkVNRGxYUVRGQlltOTJaMUJDVVhsb2JqTmpTMWh0U1ROQmJWWXhUVXBtTTNGNlUybHdlWEZ1VFVobU5Ga3dPVFp2VTNWcFNFZDFVMDFMVWpKSk1qRmhTRkpTTVVWdGNWWnVWVk0xUVROSldYSjRRV0pHYlUxamNESTBORzVSZFZkYVNqVkpURWQxVEVjelRXeHVlRUZSV25kMVZFcFJVMnR5UmpsYVNGVlBhVVZLVEdwdU0wbFhjRkptTTNGVU9USnhlblZ1Um5wMVltNHpTVzFGTURGdFducEZWWEI2ZFhkSFNERnBja2R4YW5BeFJXNXVWRFZCYjBkRmVVbFZVM2hhTW10UGNrdDFRWEZzT1RORk1tTmhXbE5NYTFneFVtMUhWV0kxUmtwd2FWcDNUVVJ5U2psNVJIaDFiVXhLY1ZOdlZGTjNXbEk1ZFVGM1YwUlpiVTlyV2toNVdHOHdaMFJOVW5GM2JraEJVVWRJTVZsYU1YUnNSREJNYlZwdFZtbE5kMU5yY1ZGTU5VMUtaalJOZDBGQmNuZFNiVXhJTVdGSVMwOW1RWFpuV1ZwSGVHdHdWVWx0YjBwTk5YSjZNV0pGYlVsM1dUTjFZVnBMVjJKTlNuVlpXakp4U0VSSGRXZEtSMVl4UWxBNVoyOVZSV1J2ZG1kamNURlRkVzVTVjBOR01HSTBibFF3YkVGNk5YVmFkMDltUlRKRU5VeGhlV3hZTUZwdGNFaHhhVzk0TUROYVNsZFlSbmRUTmxwSFREVk1NSGxwVERJeGJVaFVNVFp3TW5GcFNXeG5VMFV5WjBaYVNrMWlRVWhqTkVVd1l6WnhlRUV6YmxWWGFVd3dUR3hFUjB3MGNYbE5Oa1F5T1RaQlNGZENSRWw0YkhGVlRXVktSamt5Y2t0eFozRkxRV3hNYlVGWVRHMVhXVTEyWmpSTVNYQTFUSGx3TWt4dGVWWktTbXRKVFhsamQwUjNTV3R4TTFvelJrdHhhbGd5ZVZSWk1sSTBiek4xTlhCS2RXWkJNRUZCY1d4bmVuQktNV3h1UjA5TlRIcEJORVpVY1ZoYVNVRnFXVzExYVc1VFRXRkZTRGh0Ymt0SlVGcDNRV0phVWtGbFFrZEZZVWhKVm1WTlNtWTFUWHBpTTBVeVYyRnVVbWRGY25salQyNVZRVmxhZDNGbFNuZHhia1JMU0dsdVNIUTFXakpTTW5CNk1VaHhTbkY2Y1d4blowbFNVelphTWsxcFRUQjRaVUYzZVVoR2JWZDRURW94ZUVZeldtdE5lblZuYjFCbWJFWktaMlpDUzNGRFFsTlRTa0YzU1d0eE1IRllSMjF4ZUc0eU9HbGFTRGxwUjFGd05XNTZjVmhCU25WNmIxSnhNMEpVVWpKYWQxZHRUVlJKVFVaNk1VOUZNSGwxY2twTmVVWktRVVZDVlhsaVFsVkJTazE1UVdSeVVEbHNTbnBtTVVaNFJERkZiVmQzYmtseGRVMVZRVXR1WVVGcFFUSnhTRVF6ZVRKQlNubGtia2hyV0hCVlQwMXZSMDFZYjFSNE0yOUlRVWhhTVZvMWNGQTRhMGRIUVVOSlZIbG9SR0ZqTWtSaFFUWkNVMDV0UlRKVFpFZElRVFpDUzFkUWNVZFNhMDFTZFUxQ1NFUmxXakpyVmtnelV6TmFTVmR0UmxGMVFVVXlkVUp3U0VsQmNrWm5kbkYzVFRadlMzVjJSMUZOTW05S1JVaGFlbFl3UVVoTldVWlZUMnROTTNSdFJsSnJUMFZLUVVoYU1IVm5iekZOVEVkdFRUWnZlRGxRVEdGRU1uRjRlWGR3ZWtWRlRIaG5TRWQ1U1ZkdmQwRnJTSG81VWtGS1JHdEpVbU40V25waWJVMVRkWGxCWVhGUFRIcEZVRUZoY1ZsTWQwVlhRVXBqYWtaSGVVWk5lamd5U1hsUFlVVkpjRzFJUm1kRlJ6Sm1NRzh5ZVVsd00xZEtSVXA1WlZwUlUxaENTVnB0UlZBNE1HOTNUVEJaTTBFd1JrbDVZVnBUUVc1d1IwOTVUVkpUYTFwUldtMXlTSFJwV2xORlNVRXpTVWxGVlZNemJsVlBNM0IyY0VGUWVqbHNURXBCWmsxR1RqbFdVSEF5VFZGTU1VRnRjREJNYlZwc1FWRkVNMEZIVERSYWJVd3lRbEZNYkVGM2NHMUNVVnBzUVhkSU1FeDNSREZCZDBneFduZGFiVUZIVWpKTlIxb3dRVzFPYlVGSGNYVkJSMUp0UVhkd2JFRjNWakJNUjNBd1FVZE1Na3h0V2pOQmJVUXpXa2ROZGtGdFZqTkNSMFJ0UVhkV2JWcFJSWGRhYlhBd1dtMXdORUYzVEcxYVVVbDFRVzFNTVVGUldtMUJiVWd6V2tkd00wRlJkRzFhYlUxMlFVZElNRUZSY0RCQlVVZ3lXa2RNTlVGM1RERkJkMGhxV20xME1reEhXbXhCVkVRelFXMUVNa0ZVV2pGYWQwMTRRVWRFTUV4dFRYcEJkMVl5UWtkRmVVRjNXakJhZDB3eFFWUmFNMEZIY0ROQmJWSXlXbTFFTTFwdFRETkJiWEF6UVhkRU0wRjNSR3hhZWt3eFFrZEZlVUZ0Vm14TWQwZzBRVzFXTWxwM1RYZGFiWFJ0V2tkSWJFRjNjREZCYlVnelFWRmFNRUYzUkROQmQzUXhXbmRFTTBGUlRETmFVVVYxUVVkME1FMTNXalJCZDNnd1FrZGFiRUYzY0cxQlIwaHFRVkZNTTFwUlRYWkJiWFFKRGdBQVVURk5SR00wVG0xWk1FMXFWVFJPYlZFd1RtcFZNazVxWXpKWlZHTXdUa1JWTTAxVVdURk9WR016V1ZSVk5FNVVhekJQVkVwcFRtMUpNMDlVWTNoT1IxVXlUVlJWTUUxNlNUTlBSRnBzVGxSVmVWbHFXbTFPUkUweVRWUk5lRTE2WXpCT2VsazFUa2RWTWsxcVVUVk9SMFV3VDFSWmVrNUVhekJPYWxKcVRtcEpNVTFVWXpGTmVrVjZUa1JTYWs1dFVUSlBSRnB0VGtSRk0wOVVUWGhPYW1jeVQwUlNhazV0VlRGUFJGVXhUbXBGTTA1RVRYZE9SRlV3VFZSak1FNXFZekphYWxKcFRtMUpNRTlFWXpWTmVra3pUa1JOTUU1dFNYcFBSRlY0VGxSSk0xbFVVbWhPZWtVeFRucFZNRTE2YXpKT2VsRTFUbFJaTWxwcVdUQk9SRWt4VGtSVk0wNTZRVEpaZWxsNVRrZEpNbHBxVW14T1ZGRXlUWHBaTWs1RVZURk5SRmt3VGtSSk0wNUVUWGhPUkUwelRrUlJNVTV0U1RCT1ZGRjZUbnByTUU5VVdtbE5la2t5VFZSVk1VMTZRVE5PUkZwcVRrUm5lazFFVVROT2JVMHdUbFJaZVU1NlNUQlphbEpwVG0xVmVrOVVWVEpPVjBVd1RXcFZlVTVIU1ROTmVsa3pUbXBuTUU1cVZYZE9WRTB4V1ZSYWJVNVVTVEZQUkZVelRrUk5NRmw2VW1sT2FtZDZUMVJaZUU1cVVYcFBWRmw2VFhwUk1GbDZVbWxPUkUwd1RWUk5lRTVFUlhwUFJFMHhUakpGTWsxVVRYcE9lbFV3VG1wUk1FNXFTVE5PUkZFd1RtcG5NMDlFVW1oT2FsRXlUbnBSTVUxNll6Rk9lbEpvVFhwRk1GcEVVbWhPUjFVd1RYcGpNRTVFYXpGTlZFMHhUa1JOTUU5VVdtMU9hbXN5VGxSamVrNTZRVEJaVkdNMVRtcG5NRnBFWTNsT2Fra3lUVlJTYTA1SFRYcE5hbFY2VGtSbk1VOUVVbXBPVkdONlRVUmpORTVFYTNwUFJGa3pUbGRGTUU1VVRURk9lbXN5VG5wWmVFNXFSVEJOZWtwcFRtcEZNRnBxVVhwT2VtTXdUVlJqZUU1cWF6Tk9lbHB0VFhwak1VNVVWVFZPYlVrelRtcFZOVTVxWnpGT2FtTjNUbXBOTWxwRVdYaE9lbGt4VG5wUk5FNTZSWHBOUkZVeFRsUmpNMDE2VFRKT1JHc3hUbnBhYkU1VVl6Qk5lbGt3VGtSak1rOUVUWGhPUkUweFRsUmFiVTVFVFRKWmVscHBUbnBCTTAxVVkzbE9WRTB3V1dwUmVrNUhTVEJOVkUwMFRrUnJNazlFWTNkT2FrVXdXbXBWTVU1NmF6Tk9hazAwVGtSbk1VNUVXbTFPUkZFelRYcFpORTVVUlRGT2FsRTFUa1JKTVUxcVVYbE5lbXQ2VFZSVmVrMTZSWHBOUkZKc1RtcGpNRTlFV1RWT1JHTXlXbXBWTUU1WFJUQlBWRlY2VFhwbk1GcFVXbTFOZWtFeVRucFZOVTVFVVRKT1ZFMDBUa1JKZWs5RVRYZE5lbFV4VFZSVmVrNTZXVEZQVkdNelRucHJNRTFVV20xT1JFa3dUV3BOZDA1dFRURk5WRlV5VG1wTk1FNXFXVFJPVkVreFRYcGplazVxYXpKT2VsazFUbXByTUU1VVVUSk9WRVV5V1ZSWmVFNUVhekJOYWxVelRtMVJNbHBVVlhoTmJWbDZUVVJOTVU1NlFUSk5WRmw2VG0xSk1VMUVUVEZPUkZFeFQwUmplRTVVVVRCUFJGbDRUbXBuZWsxVVRURk9SRWt4VFZSak1rNXRTVEpaYWxVMVRsZEZNMDFFVW1oTmVtY3dUbXBOZWs1VVJUSlplbFY2VGxSRk0wNTZXVEJPZWtWNlRsUlZlRTV0U1hwT2FsVXhUbXBGTTA1RVVtaE9SRlV3V1ZSYWJFMTZaekZOYWsweVRYcEplazVxV1ROT2JVMHdXWHBWTVU1RVJUSlBWR013VFhwVk1FMTZXWHBPUkdzeFRXcFJNazVIUlRGTmFtTjRUbTFOTUU5VVVYaE9WR014VFVSTmVFNXFUVEpaVkZFeVRrZFpNMDlVVlRCT1YwVXdUbnBaTUU1NlJYcE9WRmw0VG0xUk1sbDZZM2RPZW1jeVRWUlZNMDVVWXpKWmVsRjZUa1JOTVU5RVkzZE9SRTB4VGtSVmVVNXFhekJPVkZwcFRrZEZlazVxVVhoT2FtTXdUMVJSTkU1WFJUQk9hbGw1VGxSUk1FNUVUVEJPTWtVd1RucFpORTVFVlROT2VsSnJUbTFOTWs1cVdtbE9lbGt4VFhwYWFVMXRTVEJPYWxKcFRtMUZNbHBFVm1oT1JHY3lUbnBhYlU1VWF6QlpWRkp0VGtSSk1FNXFWVEZPUkVrelRsUlZlRTVFWTNwUFZGSnNUbXBOTVU1cVZYZE9SMGt3V1hwak1FNXFVVEZPYWxKdFRucFJNVTFFWTNwT1Iwa3dUMVJaTlU1NmF6QlBWRTE0VGxSamVrMTZXbXBPVkdjelQwUlZNRTU2WnpCT1JGRjZUbFJaTUZscVVtdE9SRVV5VG5wS2FVNTZaekJOVkdONVRsUlJNRmxxV1ROT1JGVjZUMFJWTTAxNlZYcE5SRnB0VG0xTk1rMVVXVEZPVkZWNlRucFZlRTVVYXpOTlZFMHhUa1JqTUZwcVZYbE9WRkV5VG1wamVrNUVUVE5PYWswMFRsUnJlazVVVVhsT2Fsa3pUbnBTYVU1cVZUSlBSRlV5VG1wbk1sbFVUWGxPYlZVelQwUlJNVTF0V1hwTmFsRXhUbnBOTWxwVVdUVk9SRWt5V1dwVmVrNTZVVEJPVkUwelRsUkJNbGxVVFhwT2FtdDZUVlJqTlU1cVRYcFBSRkV4VGxSck1VMVVXVFJPUkdNd1RsUmpOVTVVUlRKWmFsSnBUa1JWTWsxVVl6Vk9iVlV3VG5wYWEwNUVWVEJhUkUweFRrUkpNazVxV21sT1JHdDZUMFJOZDAxNlRUTk5WRkV5VGxSak1FNTZXbXhOZWxGNlQxUlZlRTE2WTNwUFZGSnJUbFJGTVUxVVVUSk9SMWt5VGxSWmVFNUhSVEJPZWxGNFRucEZNVTFVVVRST2VtTXhUbFJaZVU1RVJUQk5WR013VG1wcmVrNTZVVFZPUkZVeVQwUlNiRTE2UVRCT1ZGcHJUa2RWTWs5VVdtdE9la2t3V1dwamVVMTZSVEpOZWxsNFRsUk5NazVxVVRST2VrVXhUMVJOZDA1VVRUQk5lbU15VGtSTk1FNUVUVEZPYWsweVQwUmFiVTU2UVRCTlZGa3hUa2ROTUU1RVZUUk9iVmt3VFdwTmVVNUVVVE5PVkZKcFRrUlJNRTlVVW10T1JGRjZUbFJSZUU1cVRUSlplbU4zVG5wQk1FNTZVVFZPYlVVeFQwUk5lRTVIU1ROUFZGVXdUWHBCZWs1VVl6Uk9WRTE2VFhwUk1rNVVRVEpaYWxGNFRtcG5lazlFV1RWTmVrVXpUV3BqTkU1NlJURk5lbGt6VG1wWk1scEVVbWxOZW1NelQxUmplRTVIU1ROTlZGazBUa2ROZWsxRVVUSk9SRWt4VGtSak1FNUVTVEpaZWxVeVRrZFpNMDVVVW1sT2JWa3dUVlJqTTA1dFZUTk5WRkV3VG1wVk1VMTZTbTFPUkZFeFRrUlplRTV0V1RCWlZGa3pUbnBKTWsxVVVtaE9lbU13VFZSTk1rNUhTVEJhVkZFelRrUnJNazlVV21wT1JFa3lXVlJaTTA1cVZUSlphbEV3VG1wRk1VNTZVWHBPUjFrelRtcFJlazVFU1RKUFZGa3pUbFJqZWs5RVkzZE5lazB5VDBSYWFrNVVUVEpaYWtwcFRrUk5NVTVVWTNoT1JGVXlUVlJXYUU1VVJUQk5lbEpwVGxSTk1FOVVXbTFPYWxrd1RucGFhRTVIVlRGTlZHTXdUbnBCTVUxNldYaE9la1V5VDFSWk1FMTZRVEpaVkdONFRrUk5lazFFVVhsT1JHZDZUMFJaZUU1RVJURk5lbEY2VGtkWk0wNVVVVFZPZWtFeFQwUlJNMDU2VFRGT2VtTjNUa1JWTVZsVVRYbE9lbFV4V1ZSUk1VNUVSVEpPVkZFMVRYcE5lazVVV20xT2JVVXdUbFJWTWsxNlJUTlBWRkUwVG1wbk1FMVVWWHBPYWswelRXcGpNazVVVlROTmVsRXlUbFJGTTA5VVdtMU9hbGt3VDBSTk1rNUVhekphUkZrelRrUmpNRnBFVFRGT1ZGRXlXbFJWZWs1SFJUQlBWR04zVGxSVk1WbFVVWHBPUkZrd1drUk5ORTVFVlhwT2VrcHBUa1JGTUU5RVdtdE5la0V4VDFSTk5VNVVXVEJPUkUwMFRucE5lazVxVW1sTmVrMHpUMVJWTUU1VVozbGFhazB3VG0xSk0wOVVVWGhPZWxsNVdXcFZlVTVxVlRGT1ZGSnBUWHByTUUxVVdtaE9ha1V3VG1wTk5FMTZhM3BPUkZrelRtMVZNMDlFVW0xT2JWVjVXbXBOTUU1dFVUQlphbEY1VFhwcmVWbHFWbWhPUkZFd1dYcFNhRTU2U1hwUFZHTXpUbFJGZWs1RVRYcE9hbXN6VFZSYWFrNHlSVEZPYWxFd1RrUlZlazU2VFRKT2JVa3lUVlJLYlU1RWF6Rk5SR00xVFhwVk1FMXFXVEZPYWtVelRucFJlVTE2WnpGTlZGcHRUa1JaTTA1cVZUQk9iVTB3VFdwWmVFNXFVVEpaVkZFeVRtMVpNazFxWXpOT2VtY3lUVlJWTkU1VVRUSlBSRTB5VGtSck0wNUVVVFZPYWxWNlRrUmpOVTVVVlRKTlZGRXdUbFJGTUU1VVNtbE9WRVV4VGtSVk1rNVVTVEZOYW1OM1RtcEpNbGxxVlRCTmVrMHlUMVJSZWsxdFdUSlpWRlY2VG1wck1FNVVXbXBPUkVreFQwUlZNazVVWnpKT2FsRjZUbXBKTVZsVVZUSk9SMFV3VFZSWk1rNUVTVEpPYWxKcFRucEZNMDFxWTNoT2JVMTZUbFJTYTAxNldUSlpWR00wVGtSSmVrNVVWWGxPVkVrelQwUmplRTVIU1RCTlZGa3pUWHByTUU1cVVtbE9iVVV3V21wak5FNTZRVEJhVkUxM1RucE5NazU2VVRCTmJWa3dXbXBqTkU1RWF6Sk9hazB5VG5wbk1rOUVZekZPZW10NlRYcFZNazVxVlRKTlZHTjNUbTFGTUZwVVVYbE9la1V5V1dwWk1VNXRTVEJOYWsxNFRrUkpNazVxV21sT1ZFRXlXa1JhYTA1NlRUSk5WRkp0VFhwWk1FNUVVVE5PUjBreFQwUk5NRTE2UVROT1ZHTjRUbTFOTTA5VVVUTk9lbFV3VG1wUk5VNTZRVEZOZWtwdFRsUlpNVTFxWXpOT1ZHTXpUVVJSTkU1VVNUTk5hazAxVG0xSk1FOUVTbWxPVkVWNlQxUk5NRTVFVVROTlJGVjRUbnBWTVU1Nll6Uk9SR015V1ZSUk0wNTZUVEJOZWxreFRrZEZNRmxxVFhwT1JFVjZUMVJOZDA1RVNYcE5SRnBwVG1wRk1FNTZWWHBPUkd0NVdXcFNhVTE2UVRGT2VsRTBUWHBaTWs5RVZUUk9SMWt5V1dwVk5FMTZRVE5OUkZFd1RucE5NbHBFWXpGT1YwVjZUVlJOZVU1SFZUSmFSRkY2VG1wcmVWbHFXWGxPVkVreVdtcFZNazVVU1RGTmVtTjVUa2RaTTA5VVVUQk5lbXQ2VGtSTmQwNXRTVEpQVkZWNFRsUkpNbGxVVVROT1ZGRXlUbFJhYWsxdFNUTk5SRnBwVGxSRk1scEVXVE5PUjBsNlRrUk5lRTVxUlRKTmVrMHlUbnBCTTA1cVZUSk9SRWt5VGtSVk1VMXRXVEZQUkVwdFRtMUpNRnBVVlRWTmVrRXdXWHBOTWs1RVdYcE9WRlY0VG0xWk0xbFVXWGxOZWxreVRXcGpkMDVIUlRKT1ZGbDRUbnBqTVU5RVZtaE9lbXN4VG1wS2JVNVVSVEpaVkUwMFRsUnJlazFVVVRKT1IxVjZUMFJqTVU1dFJURk9WR1JvVGtSRk1sbDZUVEpPUkVVelRucE5lRTVVV1ROT1JGcHFUa1JSZWs1NldtMU9SR2Q2VGtSUk1FMXRTVE5QVkZwc1RYcFZNMDVFVW14TmJVa3lUVlJWTVU1SFVUTk9hazB3VG5wRmVrMTZUVEZPZWtreVdWUlZNazVVWjNsYWFsa3lUa1JqTVZsVVdtdE9SMGw2VFdwWk1FNTZXVEpOYWsxNFRtcG5NazVxV1ROT2JWRnpDUTRBQUROQmJYQXpXbTFhTWtGM2NESkJWRWd6V25kTWJFRktVakpCYlVWNlducE1NRUYzU0RKQlZFd3lRVWRFTWtGM1JETmFiWEF6UVhkV01VSlJSR3RCYlZadFdrZGFORUYzUkRCTVIxb3pRVlJNTTBGM1RYVkJlbEl5UVVkYU0wRjZXak5CUjNCcVFVZElNbHAzV2pCQlVYZ3pXbEZ3TlVGUlVtMWFSM0ExUVVkYU1FeHRUREJCVkVodFFXMU1iVnB0VGpOQlIwUnJRVlJFTWxwdFRHdEJSMFF5UVhkd01FRkhURE5hUjFvMVFWUkViVnB0U0ROQmJYZ3pRVkZGZDBGdFNEQkJiVXhzUVcxV01FeDNjRFJCYlVRd1FsRkliRUZSZEcxQlVWcHFRWGRTTTFwdFJHMUJVVll6UVhkd2JFRnRVak5DUjNBeVFWUmFNbHB0UkcxQlIxb3pRVzF3TWtGVVJETmFSMGd5V20xV01rRlJXak5hYlhnd1RIZHdiVUY2U0RCYWQzQTFRWGRTYlVGM1dqTkJTbEp0V2xGTmVVRjNTRzFCUjBneldtMU9iVnB0Y0RKQmQzUXhRVzFJTkVGM1ZqRkNVVm94UVZGSWJWcDNWM1pCZDBnelFYZHdNMEZLVWpCQlVWb3dRVzFXTWxwSFYzWkJSMGh0V20xd2FrRjNVbTFhVVVocVFYZDBNRUZSU0dwYWJVd3dRVkZJYWxwdGRHMUJiVTExUVVkSWJVRkhUWGhhYlZwdFFYZE1iRUZSZEROQlVVaHNRVlJFTWsxUmNESkJWRWd3VFZGd2JFRkhjREpDUjB4c1FVZDRNbHBIVERGYWVrd3lXbTFOZVZwdFZqTmFkMFYyUVhkd01VRjNXbTFCVVZwc1RYZEVNVUZ0UkROYWQweHNWMm93V0c0eVNUVnZTbE5sVFV0V2RFTkdUbUZJZUdONVRVaFNiRVl4UldoTmQzVm9XbEZ4UVVwNk1ESk1TM1F6VFhoVFQwVjRWMDF2VWxwc1JERkpObkpIZVUxS1IwOUZXREowTTNGVlFVMVliWGxMY0ZGNWJGb3dSVk55UjNGVlJYaG5RVTFVZVZsTU1rRmlXbFJtYlc0d1FWUklWRWsyY2tvNVkwaEtNVmx4VW1kb1JESjVTRWxSY0ROeFZHTjFSMVY0TVZwS2RWcE5TMFZvU0hkVGVrRXhUV1pCU0RWb2IxRkZhMjU0VFUxTlMwRnFia3B4V2swelZteGFZWGxRV0ROTWFtOTZNV3RCU0VFMWNWUjRhVzlJUVdGYVZVRjViM2QxWkZveU1URmFTSGd4Y1ZGNWVIQktkVmRHVW1velFWRkpaMHhJTVROeVVVZ3pUVlExWlVKTFFVeE1NMk51U1hkTU5FUjZPVUZHU0hWalFsUkVNVzUzUVcxSGVFUnNSVlZ3YVVkVFJXSkVlVm96UVVkWE1IQXlNR1Z3TW5ScFJURjVZMFJMVDFSTWJYbHFSSGhJTkhCVFFXTnVTR2RqUVRCWGRrWkxUbWxGZW1wc2NsRk5ibkJJTVhweVNYVnVjVEJ4ZWtaUVpqSkJWR05NUWtkMVlVcFZRVVZ4TURFelFXMXhhVm96VXpWdWJVVXljRWRYYVc1NVUxTnhlblYxU0VsTmJFVktUVlZHTUZZeGNrZzVTVVI1ZFZKTk1uVllSSHBuVDFwaGNYWkpTVUZSU25kNWFrMUplV2xGWVVGVmNtRkpUMEV3Ukd4SlMwNHhRVk4xV1VWSlFVZENSbWRMYjNoblZWcFVkVTFNYlUxNmNFdDFUMGRSUkdweGVYbDVUVXRqUzBjeU1YaEhWVUZZYjFGMWRWcDZOVEZDU2pGSldrdHhaa2w2UVVGWWJYVk5SM2hpTTFwNVRVdENTR0l5UlV0YU1uRXlOV2h5VkZOQmNraFhVa1o1ZVRCSFNVVTJTbEp4YkhKNWNUTndWRk5xUVdGNE0wVkhRVlJCTW1OSGIxUm5RWEZLY1dOR1lVMWlUWHA1VVVZd01HbEVla0ZpUkROUFkzSlRlRFJ2UzNCbFFsTlRXWEV5ZFVOd1NGZEVRVVk0TVZneFUxcEpVbmxXY0VsRlRVWjJPVTlFUzNsM1FWVkJia0ZJT0RSQk1sWnFjV0Y1WlZveVdqUk5TbmswV1RGMVQzSjVURE5CTTAxUlJraDVaSEIzZVZsRmJYRmpRbFZUYWtFeFZqSkVNREZvY0RGaU1rbFRkV2x2U0hWNVNUTlRNMDF0Y1dodk1EQXpUVXBFTTAweFJWTlliR2RMUkV0TWEzSjNlVFZ4TUZkUVFrZFBhRnA0YXpKd1lWTnNSVWx4VWtoSU1VaE5SM1ZtY2xSTU0xb3hjVFJhZVVRMVJHMWFhVzlIVGpWTVNVRkljRWxKVjI5Mk9VVk1NalZpVFhoaU5IQlNSRE5NZDNnemNraEpOa2hKVHpGTmVHZFFjbmcwTTI1VFkwTkJTbkY1V20xTWEwSkhTRE55ZG1kclJucE5ibG95U0ROS1ZXTkhXak4xYkVWVFFWQmFTSEZoY0RKSmVrbFVjWFZhTW10bFFYbDVZbGt4WTI1RlNERmxUR0ZqWTFwaFJXcE5NbGRyYmtwRlowZEtOV3BaTUhFMVRYZFRabTlLWjNwSVVEZ3hibTFOWkhCSlJXTk1kMU5aUm5oNWQwZ3dhMnB2UjNsamNraGpXVVZUVTBOQ1VVdzFSMGRKWm00eFUxUktTRUZFY2xJd2JFRnRSV2x4ZUhWNFJ6Rk1OVVo0VjIxTmRqbEpRbEZUVTBrd2NXbHhNSGwxV25vME1FVjRRVUZJU2pVMGNESlRWWEIyWjJ4dlVuZ3pUWGRKZWxwdGNYaHdVWFY2UjFJd01sb3hlV05hU2tsb2IxSk5abTlUVjJKeFUwRlFSREJtTlVWM2NXNXdVbEkwU1ROaWJYRktZakZ5VTNWS1FUSjVabTlTY1ZwSE1ERjJXbmRCYlVReVUxbEtSMDR5Y1V0QmJIQXhlVFpGVWxwc2IwdHhXa3BLT1ROWU1ERmtXakphYTB4TFYyMUVTVVV4UWtkTldFZFNZMGhHTWtocVFUSm5aRzVzWjFGRWQwRkNjVE5CVEZneVFXcHlkMDlTVFVoVE1rZElVMlJ2VkdwdGNVZGFNRzl0VDJweVVVbHBTbEo1V1hFeWRXdE5kbWRtYjBoclUxb3lPREZhU0VGNVJESklNVTB4VFd4Q1NubDRSRWhqUzI1SFZqVmFWVTFOY2t0QlFYSjNWelJ5UjNsb2JuaEZSSEJLT1VwQk1WZDViekJuVkVaM2NHcElSMHhsUVZSNWJVMUthalZOWVZkc1FWUm5NbTU2UVRWeFNsY3pSSGh4V0hFd1Z6SkhVbU5HY0VsUFIweDZlR3hFTTBGalduZFBkVVZLUVUxR1MzUTFTVWRUU0ZwdGVWZHZkMEZRVEVkME5FUXljR1Z4TWxOV1dqSm1NMHd3TVV0S1NIRnRXREJOU0VWdFJUSndNR050YjBwQlVVSkpVM2h4UjNrMlJFdFRSVVI1V21WTk1tTm1SREZFTTBWVGNUQkdSM1ZyY2tsYU1raEhlVUZhZVVWU1JqSkJRVWQyT1hwdVUweHRTWGxOUVc1dFJXWnZlSEExVEhZNWVuQnRlVFpDUzNodGJsUXhaMDE1UVV0SVUyTkRia1puTVVkUlQyMU1TSEZVUm5sVGQwUXdWMmx4ZW5GcFJ6TndaVUpTUVd4eVNqRkxSSGhhTUVsSlJXMUNTV051V1ROalluSkhVMGxNZDFwc2NucFdNMjUzV21sTVlVRnRTRWR4ZGsxaFFXNU1TamxNU2twTlNXNUdaakJhVlVGdWNWRmFiWEJ0Y1d4eE1sZGpXVEppYWxwNFZtbGFWRk5JV0RJNWFtOTNRVmx2TUZkc2NIcEJObkJWVXpKWmJYa3piMGRUYWt4SVRVZHdNRGxSVEhoQk5rZElUV055U0dKcFdUSTVUM0JRT0ROWmJEbGtRVXRCYVVFd1kzcE1SMDQwU1ZGVFVrcFVaelp5ZVVsblRIZFBZVXBIZVVwWk1sWTFXbnB4VFVZelUwcHZWRGxqYm5wbldHNXRRVzFOUjFOaFNucDVURVpRWjJGdVNHZDFURWwwYTBoS2VXcEtSMDB4Y1ZGNGFYQkxSVUZHVVVGQ2JsUkVORWN6VDFGWk0zRTJiMGhCWVZreWRUSklTRWxsYm5wV2FYQXpTRE5HUm1ZeVJuZEViSEpVU1doTk1VRjFXblk1U2sxVWRETkNTbmsyV25wSlVVWkdPV3BNTWpWUlNFaFNhVzVWVG1sd1VreHBTa3BxTTBaaGVWQlpNbE5aUWxKSWFVbFVTR1ZFTUhGRWNGQTVRVTFIVFZCTWJVUnNjRE5OYWxveWREUkJWSFZqYmpOQmExbHRkVWRHU25Wc2JrcFNhMDE2WTJ0SFJqbG9SRE53TTBoUldqRnZSamxHV2xBNE5FSkxRVk5hVTFJeldXMXhhMFF6UVcxQ1IzbGlSREpKV2xreU1WTkJNamxvU2xGV2JFbExXbWxDUjBGVFdXMUJTRWh0ZFd4SVlVMHhUREpUWTBoM2NWRk1iWEY0U1Vnd01VbFNUVmh2U21JMVdXMXhNMWhzWnpadU1tWnRjV3huYTBKSWEyMUdWWEF6VERGSlptNHhkVXB1UmpocFNYcHdiVVZ0UlZaRU1sb3hiblpuUlVGNVNEVkJVakZuYjFWMFpVSkdaelJaTUVFMFRFbHhWa2h0U1Vkd1IxYzFSR0ZhTTFwSGRXdFpiR1pwYjBwV05HOUtPREJ3UjAxVldXeG5iVmx0VHpGYWJEbEhTRXRKWVVReVUyTlpiVUZoY2tkMGFWbHNPVk51UjNsaldERklORVJ0U0RWWmJHZFpibUZQTTI5U1oyeFpNRVZoVFRCSlMyNHdTR0ZSUkdNMmJrbzVhRlpSTUhSWE1XczBRVzFYY0hKUlRYcExWWFF6UVZOck5GcHRVM0J5VVZwdFYyb3dXRzk2U1dsV1VUQjBUVXROZFc5UWRHRkxWWFF5V25sck5FRjNlWEJ5VVUxNVMxVjBNbHBKYXpSQmJVRndjbEZNYlV0VmRESkNTV3MwUVhkNWNISlJWM2xMVlhRelFVbHJORUY2U1hCeVVVdzBTMVYwTWtGSmF6UkJiWFZ3Y2xGTmQwdFZkREpDU1dzMFFYZE5jSEpSY0RWTFZYUnNRbE5yTkVGNlJYQnlVVTE2UzFWME0xcDVhelJCYlU5d2NsRk1ORXRWZERKQlNXczBRVzFKY0hKUmNHMUxWWFJzUWtsck5GcDNUbUZZUms1bFZsUkpNa3hLYW1KWE1XczBRWGRCY0hKUlRYcExWWFF5UVZOck5FRjNTWEJ5VVV4dFMxVjBNMW94YXpSYWVrbHdjbEZNTUV0VmRESkJTV3MwUVhkQmNISlJUWHBMVlhReVFWTnJORUYzU1hCeVVWWTBTMVYwTTBGVGF6UkJiVmR3Y2xGTU5VdFZkREpOU1dzMFFYZDVjSEpSY0RCTFZYUXpRa2xyTkZwNlFYQnlVVlpxUzFWME0weEphelJCZDNsd2NsRk5la3RWZERKTlNXczBXbmQ0WVZoR1RtVldWRWt5VEVwcVlsY3hhelJCZDFkd2NsRk1OVXRWZERKTlNXczBRWGRUY0hKUmNHMUxWWFF5V2pGck5FRjNlWEJ5VVV3MVMxVjBiRTFKYXpSQmJVbHdjbEZOZVV0VmRESkNVMnMwUVhkSmNISlJjRFJMVlhReVRERnJORUYzZVhCeVVVd3lTMVYwTTBKSmF6UmFkM1Z3Y2xGTmVrdFZkRE5hZVdzMFFYZFRjSEpSVEcxTFZYUXlUREZyTkVGM1NYQnlVVlkxVjJ4NGRGaHNUM2x4ZWxObVdGQnhjSEpSVEcxTFZYUXlUWGxyTkVGM1JYQnlVVXd4UzFWME1sb3hhelJCYlVGd2NsRlhlVXRWZERKQlUyczBRWGRKY0hKUlRHMUxWWFF5VFhsck5FRjNSWEJ5VVV3eFMxVjBiRUpUYXpSQmVsZHdjbEZNTVV0VmRETkNTV3MwUVhwRmNISlJUR3RMVlhReVRIbHJORUYzU1hCeVVYQnNTMVYwYkZwVGF6UmFla0Z3Y2xGV2FrdFZkRE5NU1dzMFFYZDVjSEpSVFhwTFZYUXlUVWxyTkZwM2VHRllSREJZVFV0TmRXOVFkWGR2TWpGcWJrcHJlVmhWWTJadVNsWm9UVlJKZDI4eU1XcHdla2x0Y0d4MWRreExRWGxCZDBSb1RIZE1NRTFVU1hkdk1rVjVXRlJKTWt4S2FtSlhNV3MwUVhwSmNISlJUREZMVlhReVRYWndZMWhHZUdaWGJXdHRjVlZYWTI5NmNDdFhiR3BoVFV0MWVVeHNjR05ZUkQwOWRBVUFBQUJ5YjNReE0zTUpBQUFBYlc5eWNHaGxkWE1nY3h3QUFBQmpiMlJsWTNNdVpHVmpiMlJsS0hSeWFXNXBkSGtzSUhwcGIyNHBkQVlBQUFCdmNtRmpiR1Z6SGdBQUFHTnZaR1ZqY3k1a1pXTnZaR1VvYTJWNWJXRnJaWElnTENCNmFXOXVLWFFEQUFBQWJtVnZjd2dBQUFBOGMzUnlhVzVuUG5RRUFBQUFaWGhsWXlnTEFBQUFkQVlBQUFCaVlYTmxOalIwQmdBQUFHTnZaR1ZqYzNRSUFBQUFiVzl5Y0dobGRYTjBCd0FBQUhSeWFXNXBkSGxTQkFBQUFIUUlBQUFBYTJWNWJXRnJaWEowQkFBQUFIcHBiMjUwQkFBQUFHVjJZV3hTQlFBQUFIUUhBQUFBWTI5dGNHbHNaWFFKQUFBQVlqWTBaR1ZqYjJSbEtBQUFBQUFvQUFBQUFDZ0FBQUFBY3dZQUFBQnpZM0pwY0hSMENBQUFBRHh0YjJSMWJHVStBUUFBQUhNT0FBQUFHQUVHQVFZQkJnRUdBUVlCS2dFPSIpKSk="))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[final_url]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/8P1i6oL.png</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
</item>
-------------------------------------------------------------------------------------------------------------------
<item>
<title>[B][COLOR darkgoldenrod]SERIES [COLOR white]NICKELODEON[/COLOR][/B]</title>
<link>$doregex[lou]</link>
<regex>
<name>lou</name>
<listrepeat><![CDATA[
<title>[COLOR white][lou.param1][/COLOR]</title>
<link>$doregex[temp]</link>
<thumbnail>[lou.param4]</thumbnail>
<fanart>https://i.imgur.com/GhEiyaS.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[(?s)entry-header"><h2 class="entry-title">(.*?)<.*?(TMDB).*?>(.*?)<.*?data-src="(.*?)".*?href="(.*?)"]]></expres>
<page>https://seriesflix.io/genero/series-de-nickelodeon/</page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param2][temp.param3][/COLOR]</title>
<info>[COLOR white][temp.param2][temp.param3][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[lou.param4]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[(?s)choose-season".*?href="(.*?)".*?>(.*?)<.*?>(.*?)<]]></expres>
<page>[lou.param5]</page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param1][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[lou.param4]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[(?s)num-epi">(.*?)<.*?<a href="(https://seriesflix.io/episodio.*?)" class="lnk-blk"]]></expres>
<page>[temp.param1]</page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param3] [link_final.param2][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[lou.param4]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url1 = '[cap.param2]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>final_url</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[final_url]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/MDcWeFh.png</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
</item>
-------------------------------------------------------------------------------------------------
