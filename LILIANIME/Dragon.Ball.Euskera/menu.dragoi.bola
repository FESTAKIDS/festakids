<?xml version="1.0" encoding="UTF-8" standalone="yes"?>



<item>
<title>[COLOR orange]Dragon Ball [COLOR white]Series[/COLOR]</title>
<link>$doregex[cristal_series]</link>
<regex>
<name>cristal_series</name>
<listrepeat><![CDATA[
<title>[COLOR white][cristal_series.param2][/COLOR]</title>
<thumbnail>[cristal_series.param3]</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
<link>$doregex[cristal_temporadas]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,resolveurl,xbmc,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>cristal_temporadas</name>
<listrepeat><![CDATA[
<title>[COLOR white][cristal_temporadas.param2][/COLOR]</title>
<thumbnail>[cristal_temporadas.param3]</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
<link>$doregex[cristal_capitulos]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
parametro = '[cristal_series.param1]'
import re,requests,resolveurl,xbmc,urllib2
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MG13NEFBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFVlROT2JVMTZUV3BWZDA1dFdYcE5SRmsxVGxSak1rNXFWVE5OYlVrelRVUktiVTE2UVRCYVZGSm9UWHBuZWsxVVVYaE9Na1V5V2tSak1FNXFSVEJaYWxFd1RqSkZNMDVVV214T1IwMHlUbFJOZVU1NlRUQk9hbEY2VFhwUk0wNTZVWGxPUkUweVRXcGplazU2WnpCT2VsRjRUWHBqTUUxNldUSk9WR013V1hwYWFVMTZUVEZOVkUweVRtMUZNVTFxVFhkT1ZHdDZUWHBSTVU1dFNUQk5lazAwVG1wVk0wNXFXbXhOZWswd1RYcFJlazU2U1RGWlZHTjRUbFJyZWsxVVZUTk9lbFY2VFhwUk1FNVVRVE5OVkZWNVRucGpNVTFVVVRST01rVXlUWHBhYUUxNlRUQmFWR015VFhwTk1FOUVVbTFPZWtsNVdtcGpNazVVVVRKWmVsVXpUa1JKTVU1NlRYcE9iVTE1V1dwVmQwNUhUVEpaZWtwcFRtcFpNazlFVFRGTmVsVjVXbXBLYVUxNmF6Qk9lbFV6VGxSSk1FMXFWVEJOYlZsNVdtcE5OVTVVUVRCYVZGVjNUbGRGZWsxVVZUUk9hbGw2VG5wak1VMTZhekpPYWxwc1RtcGplVmxxU20xT1JHY3pUMFJOTkU1dFVUTk9hazE2VG5wck1rOUVVVE5PYWsweFQwUmpNazVVUVhsYWFrcHBUbTFKTWsxcVl6Sk9hbGw2VG1wTk0wNXFVVEpaVkVwcFRXMVpNMDVVVlRST2Vsa3hUMFJOTTAxNll6TlBWRlUxVGxSbmVrNVVUVFZPVkZrelRWUmplazVVUVRCT2Vsa3hUbnBqTTA1VVZYZE9SR3N5VDFSYWEwNVVaekphVkZFMVRucEpNMDVVVlhwTmJVbDZUWHBhYTAxNlozcE9WRmw0VG1wVk1sbHFXbXBPYWxFeFRVUmthRTF0V1RCYVZGVjNUWHBSTWxwcVkzaE9SMWt5VGxSVk1rNTZSVEphYWxVelRsUmpNVTU2VlROTmJWa3dUbnBOZWsxdFNUSk5lbEpzVGpKRk1rMTZVVEJOZWsweVdWUlZNMDVVVVhwT1JFMHpUbTFSZWsxcVl6Sk9lbFV5VDFSak1FMXRTVE5QUkdONVRtMVZlazU2VVROTmVtdDZUMVJqTlUxNlZYcE5WRnBxVG0xRk0xbFVTbTFPZWxVelQwUlJNMDE2VFRGTmVsRTBUbFJyZWsxcVdYcE9WR2N3VFZSV2FFNTZXVE5QUkZsNVRYcFJNazFVWXpWT2Vtc3pXVlJaTUU1NlVUQlphbFUwVFhwck0wOVVWVEpPZWxGNlQwUlZNazVxV1hwT2VtTjRUWHBaTTA5VVdYbE9ha2t5VG1wVmVrNTZXVEpQUkZsNVRtcFZNazVFWTNsT2Vra3dXV3BaTkU1SFRUQmFSR040VFhwVk1WbFVZekJPVkVVelRsUlZlazE2UlhwTlJGa3dUa1JaZWs1VVdtcE9lbGt5V1hwTk1VMTZZekJPZWxKdFRucE5NMDVFVFhoT2Ftc3hUMFJOZVU1VVRUSmFWRkV6VFhwbk1GbDZZek5PYWtsNlQwUlpNRTU2VVRGUFZGWm9UWHBWTTAxRVdYcE9WR2N4VFdwTmVVNVVVVEJPYWxab1RrZEpNVTVVVlRCT1JFMTVXV3BqTWs1SFdUTk5WRTAwVGtSTmVrMTZWVEpPZWtGNlRucFJlRTVVUVRCYVZFcHRUa2RKTTA1RVdURk9hbWN4VG5wTmVrNTZUVEphVkZKb1RucE5lazVxVlhsT2Fsa3hXVlJWZWs1cVVUQlplbFpvVGtSTmVrOVVZekpPZWtWNlRrUlJlVTV0UlRKYVZGbDVUa1JOTUU1VVRURk9lbFY2VG5wWmVFNUhTVE5QVkZab1RrUk5NRnBFVFRST01rVXhUVVJSZVUxNlVUTk9lbU13VFhwWk1rNVVWVEpOZWxreFRtcFZNMDE2VVRKT1JGVXpUbFJOTVU5VVZUQk9iVlV3V1dwS2JVNVVaekZPZWxreFRYcFpNMDE2VVRWT1JFVXlUbXBTYlU1NldYbFphbEUxVFhwbk1GbHFUVFJOZW1kNlRXcFdhRTF0U1ROUFZHTjVUbFJKTVUxVVdYaE5lbFV3VG1wWmVVMTZWVEpQUkZKcVRucE5lazU2VVRST2VsVXlUbnBWZUU1NmEzcE9SRmw2VG5wbk1VMTZUVFZPUjBrelRYcGpOVTV0V1RGUFJGVTBUbFJqTUZscVkzaE9SMVY2VFZSUk0wNUhXVEJhUkZKb1RtMVZNazFVV1hsT1ZHc3dUa1JOZWs1dFdUSmFSRTB6VG5wRk1scHFUVFJOZWtreVRYcFNhRTVIVFRKUFJGcHFUbFJuTTAxRVVtMU5lbU13VFZSWk1rNXRWVE5PUkdNMVRrUkpNbHBVVVRKT1IxRjZUbXBSTkUxNlRUTk5SRkY0VGtSbmVWbHFXbWhPZWxFeFRXcFZlRTU2U1hwT2VtTXhUbFJOTTA1VVRUVk9lbFV5VFZSak5VMTZaek5QVkUweFRrUk5NVTlFV1RST1ZGbDZUa1JOTVU1NldUTk5lbFUxVFcxSk1sbHFVVFZPZWxreVdWUlZNRTVIV1RKT2VsRjVUVzFKTVU1cVdUQk9WR3N6VGtSTmVFNUhUVEpOYWswMFRtcFZNMDlVVW10T1Ixa3lUa1JTYWs1RVVYbFphazB5VG5wck1rNTZXWHBOZWtrd1RucFZkMDE2VFRCUFZGSm9UVzFKTVZsVVVURk5iVmt4VDFSUk1FMXRXVEZQVkZwcVRucFZlazVVVlhwT1IwVXdUMVJLYlU1VVNUTk5SRnBwVGtSTk1VNXFXbWxOZWtVelQwUlpNazV0V1RCTlZFMHpUWHBOZWsxRVZYbE9ha1Y2VDFSTmQwNXFZekZPZWtwdFRsUkZNVTE2VFRST2VrMHpUV3BOZVU1VVNUSk5hbHBzVGtkWk1VMTZZM3BPZWxreVdtcFpNazVxVFhwT1JFMHdUWHBSTVU1RVdUSk9iVkV3V1dwWk1FNXFZekZQUkUxNVRYcG5NRmw2VVRST1ZGRXlXa1JOTlU1RVozcE9hbEY0VGxSQmVrNVVVVFZPYWtsNVdXcFZlazV0VFRKUFZHTXpUa2RGZVZscVl6Tk9hbWN4VDBSU2EwNXFhek5PYWxVeVRYcE5NMDE2V1RKT2FrVjVXbXBTYVU1cVZUTlBSRnByVG5wVk0wOVVZekJOZWxVeVRsUlZlRTVFWnpKYVJGcHRUbFJaZWs1VVVteE9hbU14VDBSS2FVMXRTVE5QUkUwMVRYcEpNRTlFVFRKT1JGRXlUWHBOTVU1dFNURk9lazEzVGtSRk0wNUVTbWxPZW1jeFRrUmplVTV0V1hwT1JGa3hUbFJqTVUxVVVUQk9WR2N5VFdwUk1FMTZTVEZPUkZKcFRrZE5lazFVVW10T2Vra3dUa1JWTkU1dFVURk5lbFYzVGtSRk1FOUVUVE5PUjBVd1dsUlpORTVxV1RCUFZFMHpUbFJGTTAxcVdtaE5la1V6VG5wVk1FMXRTVEJaVkZFMFRYcHJNbGxVVlRST1ZHc3lXWHBOTlU1NmEzcE9hazEzVG0xTk1VMTZXbXBPZWtrd1QwUk5NMDVVVVROWlZGbDVUa1JqTTAxRVdtdE9SRWt3VFhwTk5FNUVhekJaYWswMVRtMUplazlVV1ROT1IwbDZUMVJaTlUxNmF6SlBSRkV3VG5wak1rNVVXVEpPYW1jd1dtcEthVTVFWnpCTmFrcHRUWHBqTWxscVZYZE5lbWN4VFhwS2FVNUVXWHBQUkZWNFRtMU5NbHBFV1ROTmVtY3dUbnBSZVU1NlZUSk5WRlYzVFcxWk1GbDZaR2hPYWxFeVRucFNhVTE2WTNwTlJFMTZUbXBWTTAxNlVUVk9WR2Q1V1dwVmVFNXRWVEZQUkdSb1RtMVpNbHBVV21sT1JGRjZUV3BhYVUxNlZURk9WRkV3VGtSbmVWbHFWWGhPVkVGNlRrUlJNMDVFUlRGUFZFMHpUbFJyTVZsVVRURk9SR014VFZSWk1FNTZWVE5QVkZGNlRXMVpNMDU2VW14TmJWa3lXV3BqTUU1SFdYcFBWRnBwVG5wSk1sbFVTbTFPUkVrd1dYcE5NVTE2U1ROT2VtTXdUWHBqTUUxVVRYbE5lbFY2VGxSUk0wNXFZekZOUkUxNVRtMU5NazVFWXpCT1JGRXlUa1JWTlU1RWF6Rk9hbVJvVG0xRk1FOUVUVEJPUkVVeFQwUk5NazVVUlhwT1JFMHpUa1JOTTA5VVZURk9lbGt5VG5wUk1VNUVaek5PVkdNeFRsUkJNVTFxVW10T2JWVjZUVVJSTlU1VVFYcE5hbEpwVFhwQk1rNTZVbTFPZWtrd1RYcFpNazF0V1ROT2VscG9UVzFaTUU1NlVtcE9lbGt3VFdwa2FFNXRTVEJPVkZKc1RXMVpNMDE2WXpKT1IxRXhUbnBOTlU1dFdURk9hbGt3VG1wak0wNTZWWGxOZWtreVdtcFJNRTV0UlRKT2VscHJUa1JWTWs1cVNtbE9SMFV6VFdwTk5VNUVaekZaVkUweFRrUnJNazFxV1hwT1ZFVXhUMVJaTUU1dFdUQlpha3B0VGtSamVrMXFWVFZPVkZFelRXcFZNRTVFUlRCWlZGa3lUbXByTUUxVVl6Rk9SMVY2VDFSTk1VNUVTVEJPUkZwcVRtMU5NMDVxV20xTmVsRXlXVlJqTVU1cWF6QlpWRkV3VG5wTk1GbDZUVEpPUkZVeVdsUk5NRTVIVFROTlZGRjRUbFJCZWs1RVZtaE9SMDB6VG5wUmVVNXRSWHBOUkdNMVRYcEpNazU2U21sTmVsRXdUbnBSTkU1RVl6Rk5SRkp0VGtSck1VMVVXWHBPUkVreVdYcFpNVTVFVlRCTmFrMDBUakpGTUZwVVdUSk9SRWt3V2xSWk1rNTZUVEJOYWtwdFRucE5NVTE2VVRST1JHTXhUV3BTYlU1Nll6Sk5hbFUwVGtkVk1GcFVXWGxPYlVreFRsUk5ORTU2WXpOWlZFMDBUbnBaTTAxcVVYaE9SR3N5VGxSVk1FNVVRVEphYWxGNVRYcHJNazlFV21oT2FsVXdUMVJTYlU1cVdUSlBWRlpvVFhwck1rMTZXbTFOZWtWNlQxUlJlRTU2WXpCT1ZFMDBUbnBqZWsxcVdUSk9WRVV6VDBSS2FVNUVVVEJQVkdNMFRrUk5NazVxV1RWT1ZFRXpUMFJSZUU1dFJUTk9hbHBvVGtkSk1rNXFUVFZPUjBVeVRucFJlazVVU1hwT2VsRjRUWHBqZWs1VVZYbE9WRkV6VFhwWmVVMTZUVEJOVkdONVRrUnJNRTFVU20xTmVrRXlUWHBhYkU1Nlp6SmFWRnBxVGtSSmVWbHFZelZPZW1NeFRucE5OVTV0VVRCUFJGa3hUa1JqTUUxVVNtMU9SRlV5VFdwTk1VNXRXVE5QUkZWNlRsUkZNRnBxVlRST1JGa3dXbFJSTkU1NldUQlBSR016VGtkTk1VNUVZekZOZWxVd1dWUlJlazF0V1hwUFJGcG9UbFJuTWs1NldUUk9lbFV4VGxSS2JVNUVSWHBQVkZsNFRsZEZNRTVVWXpKT1IxVXdUMFJOTkU1RVRUSk9WR00wVGtSWmVrOUVXbWxPUjBVeVRtcGpNMDVxWXpCUFJGcHFUbnBKTWsxVVRYaE9iVTB6VFhwUk5VNUVXWHBPVkZwdFRtMUZNVTFVVFRCT1JHc3dUMFJOZDAxNlJYcE9SRlY0VGtSRmVrNXFWVEJOZWtFeVdrUlZkMDV0VFRKT2FsRXpUbFJuTUU1RVRUTk5lbWN5VDBSTmVrNXRSVE5QVkZreVRtcE5NazlFVFhwT2VrMHlXV3BSTWs1RVNUSk9WRmw2VG5wTk1rMTZXbXhOZWtVeVdsUmFhMDVFYXpCTmFrMDBUbFJGTVUxRVdUQk9SMUV3VGxSVk5VNXFXVEpaZWxsNlRXMUplazVxV1RCTmVrRXhUa1JLYlU1NlVUSk5lbFV4VG1wSmVrNVVWWGxPZWtrd1dsUlNiVTU2WXpGWlZGcHBUa1JKZWs1cVVUVk9SRlY1V1dwUmVVNUhTVEJQVkZFd1RXMUpNRnBxU21sT1IwVXhUbFJhYWsxNlVUTk5SRkpzVG5wak1sbFVUWHBOZWtFelRsUk5ORTVFV1RCYVZGSnRUbXBWTVUxVVl6Sk9lbXN4VFhwVk5VNXRXVEpPYWswd1RrUnJNMDFxVW0xT1JHdDVXbXBhYTA1Nll6QlBSRXB0VG5wck0wNTZZM2RPZWxrelRucFZNazVFVlRCT1JFMHdUbnBuTWs5RVdtMU5lbXN6V1ZSak5VNTZTVEZPZW1NelRrZE5lVnBxV1hoT2Fsa3dUMVJSZWsxdFNURk5hbHBzVG1wRk1FMVVTbTFOYlZsMG13NEFBRzFhUjNBMFdtMWFNRUpIVERKQmJYQXpXa2RhTVVGUlRETkJkMW93UVVkd2JFeDNURE5CYlhRelFYZFhka0YzVm0xYVVVUTBRWGRNTUVGSFRYbEJWRll3V25kYU5VRktVakJNUjNBeVdtMUViVnBSV2pSQmQzUXdRWGRNTlVGUlNERkJVVWcxUVhkME0wRkhXbXBCVVV3elFYZE5lVnB0VmpOQmJWZDJRVlJTTVV4SGNEUkJSMW93UVZGRU0wRlVWak5CVVVsMVFYZE1NRXhIVERSQlIzQXhRWGRNTTBGSFNHMWFSM0EwUVVkRU1FSlJURFZCVVhoc1RIZEliVnB0ZERKTlIwbDFRVlJNYkV4M1REQkJiVWd3UVZGTU1rRkhXakpNYlV3eVFXMXdNbHB0V2pGQmJWWnRRVWRFYlZwNlRESk1kMGhyUVhkYU1WcDNTREphYlZveVFXMXdNRUZVU0d4TWQwVjJRVlJhYlVGUlJEVmFiVWd6VEVkTmRrRlJTR3hNZDBoclFWUkliVnAzVEROQmJVeHRXbTFFYkVGVVREQk1kMFJyV20xME1reEhSRFZCYlhBeVRWRkVNMEYzUkcxQlVVZ3dXbTFJTWt4SFNETmFiVlp0UVVkYU0xcHRkREZNUjNBeFFWRjRNRXgzVERKQmJVNHdRVzFOZGtGdFZtMUJiVVF5UVVkME1VRlJUWGxCVVVnd1dtMVhka0ZIVmpCTWQwaHRRWHBhYlZwdGNEVkJWRm96UVhkd00wRnRUREZCYlVReFFYcE1NVUpIUlhaQmJVZ3lRbEZNYlVGNlJEQkNSMW95V20xRU1reHRjRFZCUjBnd1RVZGFNVnB0VERGQlIwVjFXbTFFTVVGdFJHeEJlbFp0UVVkd01FRnRTREZhVVZveFFWRk1NRUZ0VEcxQmQwaHRXbTFJYkVGM1RETkJiVVF5V25wV01FRjNTREpCUjBodFdtMWFNMEYzVmpOQmQwVjFRWHBhYlVGUlNHdEJlbHB0UVhkTmQwRlVVbXhNZDFvd1FWUkliVnAzUkRCQlZFd3lUVWRNYlZwdFNEQkNVVVEwUVhwTU1VSlJURzFCVkZKc1RIZGFORUZSY0RKQlIwVjJXbTFhTUUxSFYzcEJVWGd3VEVkTWJFRlJlREJNYlV3MVFVZDBNa0pSVEcxYWJYUXhXbTFGZDBGdFRqQk1iVVF6UVhkNGJFeDNURzFCVVZJelduZHdiVUZSV2pCQlVVMTZXbTFhTWtGdFJEVmFlbFl3UVZGRWExcHRTREpDVVVWMVdtMTBNMXBSVERKQlZFd3dRa2RYZGtGdGNESmFkMGhxUVZSYU1WcEhjRFZCYlZveFdtMUlNRUZSY0RCTlIwd3hRVWRXTTBGM1NERkJlbEl5UVVkd00wRlJjREJhYlZwclFXMU9iVUZIY0RSQlZGSnRRa2R4ZFVGUlJESkJVVVEwV20xd01GcEhjWFZCYlV3eVFrZEVNMEYzVERKQlIxcHFRVWRJTUVKUlJETkJkMVl4UVZGd05FRkhlRzFhVVV4c1dtMWFNazEzUkRWQmVsb3hRbEZNTWtGUmVEQk5kMW8xUVcxTU1FMTNXbTFCUjNReVRVZGFiVnB0ZUcxQmQzQXlXbTFJYkV4M2NHeGFiWFJzVFhkd01FRlJVakJCZDFveldtMUVNa3h0VEROQmJVUXlRbEZOZUZwdFZqSmFiVm95UVVkYWJVSkhSREZCTWxKdFFYZE1hMXB0ZUROQ1VVVjFRWGQwTTBKSFNETmFiVVF3V20xSU1FRnRUak5CZDNBMVFYcE1ZVkZFWXpCd2VubG9ia3RGTlZaUk1IUlhNVTFyUkRCNGJVWjRUVmx2VTNsM1dsUXhZMEpTT0d0eE1VRlhUVzFGV1UxU2VESk5iVWwxYjFSSk1tOUlNVnBKZDNGMVNubE5WMEZMUld4eFNHbzBibEZOWm01NFUyeE5lVTltV25wQldreDRlRFZJTVZkaWIyRjVNa1ozVDNWQk1FbGFSbFJ4ZW05VFQwUndVVVZuUVVwWGRYQlVUVXhJVlhGcVJIbE9hVVZWUVRaSFVYQnBSVkpyTlZveVRWUnVVbWRCUlRGamFscFRXalZaTTBGNmNFZE1NMEZTTldSQ1ZHTmtUWGw1VVVoU2RETkJNWFExVEhsSmVuSjNVMGh3ZUdkTmNFcFdNVVpTVTJwQk1qbGlSekY1ZVV3d05YWndSMDl0Y25oRmQxb3pVelZIZVVocVJsRjVOVWg2WjJkTWQxZFhSRWxGWW5KSmNWTktTV0pyUVRGWFlVaDJaelZJVkRneWIxTkpTVVZJU0dWS1VVUnBSbmRXTTBwVVNVbHdTamhyY2xOVGJFbFRlWGRLU0Zjd2JqSmphVzR3Y1hkWk0wVkZiMVJpYkc1dFNHMUpVbU5UUm5nMVkwcEpVMnRNTURWUFJXMVBZMGhTUVRKdlUzaHRSakpUTW5BeU1VVkllVmRyUVVoVGQzQktWakJ3VWtWdFFVaHJRVXAzU0RKSFNVbDZUWGxUYTBKS1NHVmFSMGxDU0VwTk5FeExUVzVGZW10TFRFaEZObkJJTkcxdWVqRTJSekpOYVhCU2NWSnViVTFtYnpKblowaDVjVXhaTVhsUmNucEliSEI0UVVSdVNIbFZSVlJ4Tm5KM1dtbFpNMkpzYmpCWFlXOUlUVXR4Vkd0WmIwbzVUVVY2VERSTWQzQXpTRkl4TVVReU1UWkpSMWRyUVRCVFRVVXljV2xHZVhsUFNFbFhVWEZJU1ZwRU1ubENRVWxqYVhKS05XMUtZVTFKY2xBNVRFWlJWMGRIUzBsdGIwaDVVRUZTU1VsSFVuUnNXVEpyV25Fd01EVkNWWEZKY1hoMVZrWXdPVkJ1VVZac1RVbFRORmt6Y1ROdk1EbDJjSGhqVFVFeGVWSkdZWEV4V0ROQk5HNVVOVE5CZWxkdGJsTlRaSEZTT1dkTVNsbzFjRWRFYVVWdFRVZEpTMU5TV1RGUE1tNTZZMkZKYlhGVlJqTkJhMW95T0d4Q1NraHJURVpuZDNKU01XUndlVWxyU2tsNWRtOTZlV3R5ZVVGWGJ6TjVkVWw2U0ROdWJVOW5TVk5JTW5BelNVZHhVWEF4UkRGNVVuQnRUWFpGUzNsdWJrbFRZVVo2YTBKdVIzRk5TRlF4ZUZneFUydHVTR05zU0RKclpVUjZaekZ2UjNGTGJucFhOVXBLVTNodlZIVlhSMHBCZUhKS2VWWkdlVkkxVEhoeE1tNHlSVzF1VUdacFducFRUVVI0WjFodlNWTjZTbFZqWVhBd2VXaHlSamxFUkRCTk5VaEpUVXh5WVhWUGNubHdiVUY0UVU5d1NqVkpSVEZOZVVoSFFUTkJNSGd5Y0VwalVGcElXbXBIU1hGR1FsVkJVMEpKU1VORWJWZDFXakpqYWtaVVJVZHVNRWxhU2toNVJrbGhWMEZCUzFkSFJucG5WWEI0ZFROTlIwRm5TRWRGU0VaM1dqTkhkamxMUlVneGQwRmhlV1JhVldJMVJVcHdiVXBLZVRGYWJYRkVUVWxGTkc0eFVtdE5iVUYyUjBwYWEzSjVVMmxOWVhsMlJVcDFSVVV5YTBkR1NuVm1TbFJYVjNFd1oybE1Ta2xLU0RCSlVHNHdhMlpDUzNGTlRWVlRRMFI1ZVZSeFNqVjVjWGRhYlVwTFkwMUplVWhyUjIxNVFrbDJPVzFKU2xkUlIxRlRXRUZMU1VGQlNsTkJjRXQ1ZWxwR09WRktVMGwzUVhsUFFVWXpSVmh2Vkd0SmIxTjVVVWRWUkRWd2VIbFdTVE5QVUhFelRWRnhNVk5wUlZWaU5FbHNPV2R4VWxabFRFbFNhWEJJTld4dk0zbDJRbEo0YTNKM2NVZEdiVTk1VEV0SlVrRnNabXBCZUhCdFNYaEJhM0o0UlcxTlMwUnRjV0ZQV1hCNlJVTkpNRTFOYnpGU2Fsb3hTV3BHUjNBeWNIaFRVWEI2Y1VaQlNVRnFSVEoxZWsxTFNVdHdiVTE0UnpCVFFuSkxUalJFTWprMGIyMUlNVzl0UldSQmVVMVZia2huVkVGVFJHeHZlakJwUlcxT01rRXpXbXh4VlZOdGNVdE5ZVTFIUlVsdVNEbExSbmRFTlZwM1RHbHhNWEZ0VFdGeFQwUXlkVmhCWVVWRldubDRhMGRJWjBaQ1IwMXFSa3RKV1VKSGNWVkJWVWsxV25oV2EzQjZPRFZ5ZVVWbFFVbFNhMFl5UlZaWmJWWTBia3BTWlV3d1owMUZZWEZtU0VocU0yNHlPV3B5ZDBWVlJVbzVNVXd5WXpWeGRtZHFRVXBUVFc4eWVUVllNalZhU1VsUGFVcElNV05CVVZkQ2JsTk5iVXd5ZFVseFVWSnBSekZJYTI5S1p6TkVNV05QUVRCVE5rcFVhM1pHTW5RemNYZzVNbTh3U0dWeE1rVlBURWRGWW5GdFdqSnVWRk13UkVwak5VVklPR2xhVkhsaGIxSlhOSEY2VFdGQ1MzVmxRWG8xVFVFeGNWTkJVa0ZOUVROUFNYSmhRVkJ1WVV3eVJIcGpObkpoUVZORU1qbDVibFZTTTI1NlYyVndZVmRMVFVseFJVWXlOVU5JTW5GR2NUQk5aRUYzVDJsYU1VOUZiM3BTWlVKVGNWVnVNMEV4V1RKeGQweDZkREZFZWpSbFJubDBNMEV6WWpWS1IxTmpTbEZQWTNCSFNWUlpNbE5vYjB0SmRuQkhUVVpKWVVGYVdubzFORWRUUVZwRk1sZHJja2hTYkVkVFYySlpNVmRrY0RCalJVRlNlVXBaTURGbmIyMXhRMFZMWWpWTmVFbFpjREJYTlV4SFRXcEllRnBwUkdGMVlVWXdlRFZ1U1U5M2NVaFNhMXAzUVVwdU1ERmhXbEY1WlZsdFFVcEVkMEZpY1VZNVVuQlJlR1ZDVlhscFNFdFhZVXA2ZURSdU1VOUtUWGRGUlc1SFYzbHdiVTlFY0dGVFQwMTZZbXB5VVU5NWNrcGpXVVI0VERKWk1qRjNSVXRKZUVwSVRESkdTalV4UjJGYU1tOVZRVkZ5ZUV4cVJub3hlRzl0VHpCTmJVeGxTRWR3TWtSaGVHbHVWSFZGVFZWQmFVMVVSV0pNUzA5cVJVaE1NbTk2TldKQlNtZGFSa2hhWlc1NmVXRllNSGxTU1hoalVIQlRXakp5ZDBSdFRVbE5UVWRWWTBsR1lWZDNSMUZTTkVkSlNWQnVla3hzY0hwblpraDZlVk5LUzA5WVdrdFhRbGt5VFdaRk0zbFpia2Q1ZWxwSFNXVk5iVWxZYjNkTmFVWkljVE51TVVGSlRVdEpkMjVIVm14RVMzRlBURWhYTkhGTGVHMU1kMWRaV1RGT2JFMUdaMlZHVkdkVVNVbDVaRTFVWmpCQ1NFMVBRVXR4VEZwVlRUSkhWVm8xUVZWVFFXOUtaekZLU1ZjMlJIbzVXVVpTTkdWdk1rVTJSSGg1UWtSS05XbFpNbE5VUVhoSU5FUjVTWHBFUzFOUlFraE5VVzlWZVVGQlMxTktjSHAxZVVaNWRXVnllblEwY0ZRMWEyNTJPV1p1UzFJelIwdE9ORXh0U1RKSlNsTTBSVk5UV1hKM1QwTklVVWcwVEcxQllrZ3dWMU55Vkd0NldrZEZRM0Y2VFhsR1NsSXpSRE5GWVVGNWNESnZkM0Y0U2xOSmJVbEpVM1ZKZGpscVRWSjFlazE0UkdsYWVWWnFSM1puYW5FelFUVndNVTFsY2t0SlowMHhRVlp3ZWpFd1JETlhXWEI0TlVseVVuRlFSVEkxTm5CUlNWZEpTRmR0UmtsT05HOVZjV05IVVZKbFFYbFBabHBMZFVwdVNqRklTSGRCYWtSM1NVeEpiWEZEY0RCWFUzQjZNVTlCZVUxNlFrbEpTRzlLUldsdllVMWtUVWxUZFhGNWVWQkNVMWRUUWtsU01HNHdWMU5NYlVGNGNHRkJTa0pTU0RKeGJIQkJVSG81YkV4S1FXWk5SazQ1VmxCd00xcHRTWFZCVkZKdFFYZE1ORnA2VERCTlVVdzBRVWQwYlVGUlJHMWFiWEF5UVcxYU5GcHRUREJDVVV3eVFYcE1NRXh0VFhaQlVWb3lUVWRFYTBGSFRqRkJSM0F4V20xSU1WcFJUREJCYlZZeVFsRklNRnB0VERKTmQwMTVRVWRXTUVGSFYzcEJkMW93V2tkYU5VRnRXakZCZDB3d1dtMUViVUZ0VERCYWJVNHdURWRhTUVGdFVqQk5kMW96UVhwYU1FeDNXakpCVVhCdFduZE5kbHB0ZUcxQmJVUnNRVWRFTVVGSFRYWkJWRkl5UVhkSU0xcHRVakphZDBSclFVZDBiVnB0VEd0YWJWSnRRVkZJTlVGNlVtMUJiVTEyUVhkd2JVSkhjRFZCYlhBeFdtMUlOVUZSVm0xQmJVaHJXbnBXYlZwSGNETkJWRWh0V25kRmVFRjNSRzFCUjBRMVFXMVdNMXBSV2pOQmQzQXlRbEZ3TTFwdFJESkJVVmQ2UVcxSU1rSlJWM1pCVkZKdFFYZHdha0ZIVGpOYWJVd3hRVXBTTVVKSGNERkJla1J0UWxGd01FRlJSREZhUjBRelFWUlNNVUZSU0RCQlVWb3lRVWRNTTBGSGRESk1iVWhyUVhwMG13NEFBRTB4VGxSWmVVNXFaekZPZWxreVRucFJNRTlVVVhsT2JWa3dUbFJTYTA1dFdYcE9SRkpwVG0xSk1rNUVWWGxPYW1zelRsUlZlVTVVVlRKTmFtTjRUa1JGTVU1VVkzZE9Na1V3V1dwUk5VNTZhekpaVkZsNVRsUkZNazlFVVhoT2JWRXhUbXBaTUU1VVRUSlpWR1JvVFhwTk1GcEVTbWxPZW1zeVRYcFZNVTU2U1RKWmVtTjRUa1JSTUUxVVRYZE9iVVV5VFZSWk0wNUhVVEZPVkZVd1RYcFZNRTU2WXpCT1IwMHlUWHBOZWs1WFJURk9lbEpyVG0xUk1FNUVVbXBOZWtVd1QwUlpNVTVVVVRCYVJFMTRUWHBWTVU1cVZUSk9SR042VDFSUk1FNUVSVEZaVkdNMVRXMVpNazFVVVhoT2Vtc3lXV3BqZWs1NlJUTk5hazE2VFhwTk1GbDZXbXBPUjBrd1RtcE5NazF0U1hwTlZGcHNUa2RaTVU1VVNtMU9iVkY2VDBSWk1VNHlSVEJhVkZwcVRsUkJNMDVFVVROT1ZGVXdUbFJqTVU1VVdUSmFhbHBxVG5wRk1GcFVVbXRPZWxreVQwUlJlazU2VVROT2Vsa3lUWHBqTWsxNlkzZE9la2t3VDFSV2FFMTZWWHBOUkZGNFRsUkJNRTVxVW0xT1ZHc3lXbXBOTVUxNlJUQk5ha3BwVGtSUk1VNVVWWGxOZW1NelQwUmFiRTVFYXpOUFZGRjVUWHBWZWsxRVdUTk9WR015V1dwYWJFNXRUVEJaYWxKb1RYcEZNRTlFVm1oT2FrbDVXV3BaTkU1SFdURk5lbFY0VGxSbk0wMXFWVEJPYWxreVdYcFNhVTE2VlRGT2FtTjVUbTFaTWxscVZYcE9WMFV5V2tSTk5VNUVaM2xaYWxVeVRrUm5NazFVVVhsT1ZGRXpUVVJaTVU1dFVUQk9SRkV4VGtkWk1GbFVWVFJPZWtVd1RYcGplazVIU1hwT2VsVjRUbnBCTUU5RVl6Tk5la1V6VGtSYWJVMTZZekJaYWxKcFRucEZNRTFVVVROT2VsRXhUMVJOZDA1VVVUTlpWRlY1VG0xTk0wMUVXVFZPZW1zeVdXcGFhVTU2UlRCUFZFMHlUbTFWTUZwRVRYcE9hbWN3V1ZSU2JFNTZUVEJPVkdSb1RsZEZlazVxVlhsT1JGVXpUa1JSTlU1RVp6Tk5WR1JvVG5wQk1rNUVTbTFPYWtWNlRVUlNhVTE2U1RCTlZFMDFUa1JOTUU5RVRUSk9hbFV5V21wUk5VNXFWWHBOVkZFeFRYcFJNazU2VVROTmVra3dXa1JaTWs1dFJYcFBSR04zVGtSWk1sbHFXbTFOZW10NlQxUmpNRTV0U1RGTmFtTTFUbnBOTWxwVVVtdE5iVmt5V1hwak1FNXFUVEpaVkZVd1RsUlZNRTlVVW1oT2Ftc3dUMFJTYVU1VVFURk9WRlpvVG0xTk1FOVVUVEZPVkZGNlRucFNhVTVYUlRGTlJGazBUa1JaTVU1VVdUQk9iVTB6VGtSTk1rNUVSVEZQUkUxM1RtcGpNazVxVlROT1IxVXhUMFJSTWs1VVRUQk9lbFV4VG5wQk1sbHFZM2hPVkVsNVdtcE5lVTVFYXpKWlZGcHJUbXByTWs5VVNtMU9SMGt4VFZSU2FrNXRWVEZPZWtwcFRtMVpNRmxVU21sT2JVMHdXWHBOTTA1VVJUSk5hbFY0VGtSbk0wOVVXbTFPYlVVeVQxUlZOVTVYUlRGTmVsSnRUbFJOZWsxcVdtMU9SMDB3V21wTk5VNUVhekJPUkdNd1RtcHJNVmxVVFRKT1JFMHhUMFJOZVU1RVNYcE5WRTEzVG1wck0wMVVXbWxOZW1zeVdYcFNiVTVIUlRGUFJHTTBUWHBWTWxsVVpHaE9WRVV6VGtSUmVVNUhUWGxaYWxGNlRsUkZNMWxVVFRWT2VrRXhUa1JSTlU1VVVUSk9SRkpyVGtkTk1VMVVVVFJPYlVsNlRXcFZNVTVxYTNsWmFsazFUbTFGTWxwcVVtMU5iVWt5VG5wVk0wMXRTVE5PVkZKclRYcEpNazlFVFhoT2Fra3pUMFJOTTA1VVJUQlpWRlYzVGtkSk1FOVVVWHBPVkVrd1RucE5ORTU2VlRCUFZFcHRUWHBCTUUxNlVUQk9iVkV4VG1wUk0wNVVXVEJaYW1ONFRucGpNRTVFVVhsTmVrRXlXV3BLYlUxNlZUQk9hbU42VGtSSk1sbDZZekpOZWxVeVdYcFNiVTVVUlRCTmVsSnFUbTFOTUU1NlRYbE5lbEV6VFVSak5VNVVUVE5QVkZwc1RrUm5NRTlVVlRCTmJVa3pUa1JTYWs1cVJUSmFSRTAxVGxSRk1FNTZXWHBOZWxFd1QxUlJlVTE2UVRGTlZFMHpUbXByTVUxVVRURk9hbEV4VFdwak1FNXRXVEpaVkdNMVRrZFplazVVV21oT1JHTjZUbXBSZVU1SFVUQmFWRkpvVFhwRk1FNUVUVE5PVkVVelRXcGFhRTVVUVhwTlZGRjVUbFJqZWs1RVVYaE9lbEV4VFVSYWJVNXRXVEphYWxwdFRYcE5lazFFVVRGTmVtTXhUbXBqTUU1VVRURk9lbEUxVGtkRmVrMTZVVFZOZW10NVdtcGplRTVFVlRKTmVtTTBUa1JGTWs1cVkzZE9la2w2VFZSUk1VNXFTVEZOZWxKc1RrUkplazlVVW1oTmVrMHlUVlJTYWs1dFdUSk9lbEpxVG0xWk0wMTZUVEpPYlZFeVdsUlpNVTVIU1RKTlZFMDFUbTFKTUUxcVdtdE5lbGt3V1dwTk1FMTZhM3BOUkZwclRtMUpNMDFVWTNwTmVrVXdUMFJSTTA1dFRUTlpWRTB4VGxSSk1rNUVUWHBPYWxVeVdXcFNiRTVYUlRCT1ZHTTFUbXBSTUZwVVdYbE9hbU15V1ZSU2JFNTZRVEJhVkZwdFRrUmpNazVxVVhoT1JFMTZUV3BaTTA1NlFYcE5hbGt3VG5wTmVrMXFZekJPUkZsNlQwUlZORTV0V1RCUFJFMDFUa1JWTWs5VVl6Uk9SRVV4VFVSTmVVNVVhM3BPZW1NelRtcG5NRTVFVFhoT1JFa3lUa1JOTWs1dFVUTk9SRlY1VGxSbk1VOVVVWGhOZWsweFRtcGFiVTV0UlRCT1JHTjRUa1JGTWxwVVRUQk9la0V3VGtSWmVFNUVZekJOZWxVd1RtcFplazlVWTNsT1Ixa3hUbXBhYVU0eVJUSk9lbHByVGxSbk0wMTZXVFZPVkVFelRucFJlRTVxV1RCWlZGVjZUbXBWTTA1RVVtdE9iVkY2VG1wU2JVNUVWVEZQUkZKb1RtMVJNVTFxVVROTmJWa3hUMVJSTWs1WFJUSlphbHBxVFcxSk0wMTZZM2hPUjFVd1dXcGplRTVFWTNwTmVsVjVUbTFSZWsxNldtaE5la1V5VDBSUk0wNXRWWHBQVkZWNlRrZEpNRmxVVVRKT1ZHTXhUbFJSTVUxNlVUSk5lbEV6VGtSRk1scFVZelJPUkdNelRYcGpORTVFVFRCYVZGSnRUbXBWZWsxcVZtaE9iVWw2VFdwYWJFNVVZekphVkZWM1RtMUpNRnBVWXpST1JGVXdXa1JqTkU1VVp6Rk5hbFV6VFhwVk1GbDZXVEpPZWxrd1QwUlpNazVxWnpOTmFrMHhUa1JuTVU1NlZURk9iVTB6VDBSamQwMTZTVEJaZWxFeFRYcEJNazFxVlhwT1Ixa3hUWHBSTTAxNlFYbGFhbEUxVG0xWmVrNVVVVEZPZWxreFRrUlJlazU2VVRKYVZGSnRUWHByTUU5VVdYcE9SRmt3VDBSYWEwNUVUWHBOYWxrMVRtcFpNVTVVVW1wT2VsRXdXWHBhYVU1RVJYcE9hbEUxVG5wTk1VNTZTbTFPUkdzd1dYcGpNRTVVVVRCYWFtTXpUbXBuTTA1RVdtMU5lbWN5VDBSU2EwNXFWVEJOZWsweVRrUmpNbGw2WXpKTmVtc3dXV3BSZUUxNlVUTk5SRkV3VG1wRk1FMTZUWGxPYWtWNlQwUlpNMDE2VFRCTmVtTjZUbTFGTUUxcVNtbE9WRlV5VDBSV2FFNVVZekpQVkdNd1RucGpNbGxVWkdoT2FtTXhXVlJaTWs1cVRYcE5hazB4VG1wbk1VOUVUVEJPYW1kNlQxUmpkMDV0VFhwTlZGRXpUbGRGTVUxNlkzZE9la1Y2VFVSUk5FMXRTVEZOYWxwb1RucFJNbHBxVFhkT2FsRjZUbXBhYUU1VVFUSk5lbGt4VG0xVk1VNVVVbXROZWxFd1dWUlplVTV0VVRKYWFsRXdUbXBOTVUxVVkzZE9lbGw2VFZSUk1VMTZZekpPZWsxNlRrUkZlazFxWTNsT1JGVXpUbnBaZVU1cVp6QlBSRkY1VGtSbk1GcFVVWGxPUkUxNlRrUk5lVTU2V1ROT1ZGVXpUbXBGTWsxVVVteE5lbFY2VFZSUmVrMTZZM3BPYWsxNFRrZFZNMDVVVFhkT2FsVjZUMFJaTlU1cVZUSlBWRkpzVG1wVk1FMVVVbWxPUkdjd1RWUkthVTVVVlRCUFZFMHlUa1JOTUU5RVdYaE9iVVV5VGtSUmVFNXRSWHBOVkdSb1RtcFJlazFxWXpWT1JGRXdUbFJaTUUxNlFUSlplbHBzVGtSWk1FNUVXWGxPYW1kNlQxUmFiVTR5UlRCT2FsSm9UVzFKTUU1VVdUSk9hbEV5VDBSVk1FNXRTWHBQVkUxNFRrZFZlazE2V1RST01rVXlXVlJWZWs1RVp6QmFWR1JvVG5wSk0wMTZVVE5PUjBVeVRWUlplRTF0U1RGTmFtTjVUbnByTWxscVVtMU9WRkV6VGxSTk1VNTZSWHBOVkZKclRucFZlazFFVlRKT1JHc3lUbnBTYlU1dFJYcE5lbGsxVG1wcmVWbHFVVEJPUjAwelRrUlZlazVxVlROUFZFMTZUbTFaTWs1cVZUVk9hbEY2VGtSYWJVNXRSVE5QVkZFelRtcEpNVTlFWXpGT2Ftc3pUWHBOTlU1VVl6Qk9SRmt4VGtkRk1sbFVUVE5PZW1jd1drUmpNVTU2VFRGTlJGbDVUbFJSTWxwVVkzZE9iVTB3VFZSUk5FNUVaek5aVkUweVRtMU5lazFxV1ROT2VtdDVXbXBSTTAxNmF6Tk9lbHBvVGtkTk1rNTZWVFZPYWsweFRWUk5NMDE2YXpKTlZGVXdUWHBOTWs5RVdtbE5lbWQ2VGtSTmVFMXRTVEZOYWxrd1RYcFpNVmxVVW14T2VtTjZUV3BOTlU1RVozcE9WRlYzVFhwak1VNXFZM2xPUkUxNVdtcGpORTVxU1hwT2FsVXhUa1JKZWs1VVdtbE9hbEV3VG1wTk5VNVVSVEphUkUxNVRsUlpNMDE2V21oTmVsVXlUV3BWTVU1dFZUSlphbGsxVG0xWk1GbFVWVEZPZWtGNlRtcFJOVTF0V1hwUFJGRXdUa1JSZWs1RVZYbE9WRUY2VGxSUk1VNUVXVE5OVkZVMVRYcHJNRTVFU21sTmVtY3dXa1JWZDA1cVNUSk9WRlYzVFhwbk1VMVVWbWhPYWxreFQxUmpkMDV0UlhwT1ZFMDFUa2RWTUU5RVkzcE5lbXN3V2tSVk0wMTZaM3BPUkdNMVRtcEpNVTVFVFROT1Iwa3pUbXBqTlU1VVp6Qk9hbEp0VG1wUk1FNXFXWHBPZW1zd1RsUlpNRTE2U1ROTlJHTjVUbnBSTUUxcVdtdE5lbU14VDFSUk1VMTZWVEZQUkZVMFRrUk5NRnBVV1RCT2JWVXdUbXBSTTA1VVdUTk9SRmw1VG1wbk1VNTZXbXBPVkVGNlRVUlJNRTE2UlRCTmFsWm9UbnBuTWxwVVRUTk9iVWt4VFZSTk1FNXRVVEZPUkdONFRtcG5lazlVVlRCT1IwMHlXbFJaZWsxNlZUQk5WRnBwVGtSbk1rMTZWVEpPYlVrd1RYcGFiVTU2WnpGT1JHTXlUa1JaZWs5VVZYZE9lbFV3V2xSVmQwMTZWVEpPZWsxNVRrUkZNRnBFVFRCT2VrRXlUV3BWTlU1RVp6TlBSRlUxVGxSVk0wOVVXWGxPYWxGNVdXcE5lazU2VFRKT1JFMTRUbXBqZWs5VVdteE9SR3N3V2xSak5FNXFSVEpPYWswelRtcGpNRTlFVVhwT2VrMTZUbXBWTkU1Nll6QlpWRlYzVGxSRk0wOUVVVEpOZW1ONlRtcGFhVTVIVlRCTlZHTXlUWHByTVZsVVVtaE9iVkY1V21wVk1FNTZXVEZPVkZKc1RYcE5NbGw2V1ROT2FsbDZUMVJSTUU1VVJYcE9SRXBwVGxSamVrMUVXWGhPYlUweVRWUlZNRTVxVFRKT2VscHNUWHBKTTA5RVVteE9hbGt6VFZSUk0wNXFUVE5PUkZWNlRrZEZNazFxV210T1ZHY3pUbFJOTUU1RVl6QmFWR014VGtSSk1FMVVXWGxPVkdjeFRXcFNhRTVIV1RCT2FrMHlUbXBKTUZsVVdYcE9la2t5VFZSamVFNUhVVEJOYWxwcVRucGpNRTU2VFhoT1Ixa3dXV3BhYWs1cVVURlBWRTAxVG5wRk1VMUVVVEpPZWxVeFRucFJNRTE2UlRKTmFscHFUbFJyTWs1em13NEFBSGRJTWtGSFRqTkJkMXByV25wV01WcFJUREZCZDB3eVRFZHdiVnB0UkROQlIxb3dRVkYwTWt4SGNESkJiVlp0UWxGTWJVRlJWbTFhYlVneldtMUVNRUpSUlhwYWJYaHRXbEZhTUVGdGVESkJkMGd6V25wV2JVSkhXakpCUjB3d1RVZHdNVUZ0VmpOYWQwUnNXbTFFTWxwM1dqSkJVVWd6V25kd05VRjZTREpCZDB4c1FWUldNbHBIUkRGYWVsWXdUVWRGZVVGdGVESk1SMW8xUVhwRU1rRkhTWFZCUjBSdFduZEVNVUZ0ZERKTWJVd3dXbTEwTTFwSFJEQkJkMVl5VFVkRWJFRjNTREJNZDBodFdtMTRNVUZSUkRCQlVVeHRRVWRJYlVGUmRESkNVVm94UVcxV2JVRnRSREJhYlZZd1RFZE5kVUYzUkcxQ1IwUTBRWHBTYlVGM1NEUkJVVWd4V25kRmVVRkhURzFhYlUxM1FXMUVNRTEzVFhaYWJYaHNUSGROZDBGSFNETkJVWEJzUVZGTU1FMVJjR3BCVkVneldtMUlNa0ZVV2pOYVVVZ3pXbTFXTUUxM1YzWkJiVWd6UVhkd2JWcHRWakZCUjBWNVFVZGFNa0pSVEd4QlZFZ3dRWGROZVVGM1dtMWFVWEExV20xU01FSlJXakpCZDBReFFWRkViRUZ0VGpKTlIwUTBRVzFXYlZwM1dqSkJiVm95UWxGRmVscHRkREZhYlUxM1FWRjBNa0YzY0d0QmVrZ3dXbmRhTWxwdFRHMUNSMWQ2UVVkT00wRlJXakJhYlVRd1RVZGFOVUYzVWpKYWQwaHNRWHBTTUV4M1RHMWFiWGd3VFhkRU1rRkhTRE5hYlVoclFXMVdNMEZIV2pOQmQzUXlRVWR4ZFVGVVJHMUJiVVF3V20xT2JVRlJURFZCVVZJd1drZHdNa0YzVm0xQmJYQXhRVkZNTWsxSFREUkJSMHh0V20xYWJVRnRTR0ZSUkdObFRVdDVaMHhLWjNsd2RrNDVWbEJ4YUZneGVYaHdTRUZYYmxBNVNIQjZVMDFFZUdkWVFrcHJlbTlMVHpWTmQzbExURXRhYW5GS01WZEpTbUkxUm5sTk1YSjNUMmxOWVhrMVFUSjFTMDB3VTJ0S1MyTlZSa3A1TUVaS1JXMUtVVUZ0UkROQlFWcFNWMnBOTW5Gb1NGRlhZVUZTTVVSSlNubExjSFpuWTBwaFNXTkhla2hwY1VkTlkzRktVMVpIVlhFMGNsVlRhVzk2WjFKQ1IwNWxXa3BCTmxwVFdqVmFiVTE2Y0ZSVFZGcExkR1ZCU1ZkS2NGTk9hVWxJZFdOQlNrMWpSa2x4V2tkdGVERnlTMk5sUjBsQlNVRXhWMUp2TVdJMWJubzVVRVI0VjNkYVZFRTBRa2xKYkVZelRXMWFTRmRGVEhwamQwaDRjVlZZYlhWMVFsRlhaM0o2WjFKd2QxWXdibmROV1VKUlYxaHhNbWRDUjB0T2JVRXhlVkJOTWpGVFFrZDVia3BMVFVOdmVEa3lSbFZUTWxwM2VXcHdlazFFY1RKSlpGcDVZbXR3ZWsxUWJrcE5aMFl6VjBoQk1uRnBTa2hOYVVSS1RHeHhNM0F5Y0VoNWQwMUlZalJNU2t3d2JrdE5VMGxMVTFSSk1YVk5iakExUTBwSWVWQmFTSEZuY0ZGV2FYQklkVEJ5ZUZkSlFXRkZhVUV6VjJsYVZIRnBRVlI1V1VkUlNVUnVNRmRWY1ROUFdIQXhlV3RDVW1veGIzcDBhMGxSZFVGSlIxZFZSa3BFTWxreVVtcHdTbkJxU0ROeFpXNVNSWGhKU0VscFNFZ3hXRUV5VTFkRk0zVlFUVWhCYmtGNFowOUdNbU14Y2xSTmFYRjVlWGx1Um1kb1RIaG5VMEZoVDNaSVUzRTJRVWwxV0UxSlNWVk5WRTEzU2xWd05HNHljWGxOVTNWdFNVbEpia2d5TVRGQmVtdDNTa2xCV1VaSFRETktTMDR5V2xGYU1VRlZURzFhYlVreWNIaEJhbGd6Y1dGS1ZEQXpRbE5OWmtwUU9XdEllWGhzUkVoTlVVWXlWalJ2VkRVeFFUSjViRzVWU1RWd01qRjFTVlI1VDNFelFYcHlTa2xIU1VoNWJXOUtTVmx4ZWtGUFFrZEVNWEJKVFhadVZVVXdXa2RGWVc5R09XWkhTREZHYm1GTU0xb3plVTFNU25WSFNraG5NbkpRWm10SmVGWnRSSGhuVFVaSlVqQkJTbUl4UVVkYWFVMUxZMHRNU2tSclFYZDFTRzR3ZFdGQ1NGTnFUVEIwTVhFelJHcE5kMGd6Y0hoQlJFVjRSVzF3YlZkdGNEQkpXa1l6VjNkdVZXTkpibUZKZW05NlFVSkJTamd4V2twVFFrcDVWMkZGTVVGV1JURkpaSEJUUlU5SmJVRkJiakpGUVZvemNXWkliWEZSUkVwSmEwMHhZakZ1U1ZNemJtRmpkWEF5VTNkdlNrRm1iakJXTUhCSGVWSnhTVWw1U2twVFNrSkxjV3BHU0VneVNsSk5RbTkzVTNoeE1XSnNRVWhXTWtFemNXMWFZVUZ0Um1GQlRFZFNaMkZ1WVU5cFFYaFhOVUpRT1VsS2VGTXhjRlJpYlVjeU1EVkVTRWxJYmpOVFpsb3hkR3h1UmpsRlJucG5NVUV3ZUd0TVNqVm9RVEZYYmtoMk9WaGFkM2xsUVVwU2JVaElkRFJ2U1hWcGIzcFRRMGxoVm14SWVFRmxRa3BuWWtodFFVMUpNM2wyUlRKcmFIRkpUMVZ3ZWsxNlJIbEJhMGt6VjJ4SGVWSmxURWhYYkc5SlNEQnlTa2xpU1hoRmJVcDNTR2xNU2pWaVdraDFXa1V4WTBkYVIzRjFSbmRTTlV4SVNVVmFSamxyU1cxeFlVUkhjVFJ5WVhFd1duZFhaMDFRT1ZsTlNrRkdUVk5GVmtGM1dqQmFNM2cwYjFSTlQwcGhZalZJUzAxNVFVdEpZVUV4ZERWR1NtTm9jVkl3WlhKVGVXZHdSM1Z1V2pKQllVVlVTVFJJTVVsb1FVaDVVRUZVWTIxR01YRlVRVW8xWTNKNmNXdE1TMDFWU1V0V05VaElNV1ZNTTJObmJsRjVSa0ZoU1doRlMxTkliMGRNYTNKNmVVdEdNMGt4Ym5wMVpuRkhTV2x2UzBnMFFYbFBiVmd6ZVdGR2VrMUlSVlZUVDBWVldtVkdlRUZIUkVsMVUwcDZkV3BDVW1kbVJuWTVNVUY1UVZGYU1rRkNSVEZFYVUxU05VMUhiVTEzUVVwblpVcGhjWGRKU25ReVRXRmlNVzVUVHpaWk1IRkpTVzFOYlVSS1ZtdElVVTFpUlhoalZsb3hWM2hhTUhrMFJ6RjFaRWxMVTFkdmVWWTBUVXBKUmtaTFQwSkJlbkJsUVRKcWExb3pTRFJGVkVsSlRWUkJka0pLU1doeE1HZElSa3RCUzNKVU1XRkJkMEY2Y1hkNVNVbDVlVVZNTTBsc1NUTjVUSEpKUlVadVVWTk5RWGRYZFhKMlowRk1TMk15Y0hoamRrMUhUalZ1UzBnMGJucG1NVWg1VW10TVNFVkZUVWhKZFVwaFkwOUtZVmRGUkhoVFdscFNaek5FZW5odFdUTkJSVnA0TVZGSlZXTmhSSGRCWm5CdFRtMUhWR2RYUlhabllrRXpXalJCVW1kSVJFdFRWWEV4ZEdsdlMzbFFiMjF4VVZwNFJXWkJSMDExV2tsSU5XOHdjVzFOU0hWbVFsUXhTRVozUVd4TlNtTmhTRE5GYTNCS1p6UkpTbE5tUVdGQk0wWkhSV3RZYlhBeVNVaEViVTFVWnpOTVJtZFpTSGhKTkc5Nk5HcHZlREY1UjIxNE0xa3lUVzFCU25RMGNrZEJZa0ZVWm14eFlYVTFTVkpJYVc5SVJYcHZlamhyVFVwQlIwZHRUbWxNTTFOVWNIaGFNRzVzT1d0dU1GcHNTRE4wTTBSc1owVnhNVWhwY0ZOaWFWcDZkVFZ2VWtGaFFXMUJZa2RSY0d0d01tZFNXR3c1VTBFeWVXNXdNV05oYnpGRlRXNUpWbWxCU2pGNldUQXhVRTFLTlcxQk0xY3pXbmhtYVZwUlQyZHhNMW95U0V0eGEwWnNPV05hTWxwbFRXMU5hRWxJY0RKWU1ubFZSMUE1UzNGVmNXZEhNa2xtUlVoaloxa3pkVzVNUjBSc2JrdHdiSEZ0UVdsQ1IwUnBiakJCV1ZodFRHbHhiVVJyU25wV2JGa3pjVEpCU1VFeFdERjFTVWhMZVd4dk1YZzFSRzE1ZGtWSGREVkJlVVV6U1VneGEzRXpRVWxLU2tWalRIbGpNMjR5Y1RKQ1MwOTRSVlI1Tm5CaFQyMUVlblJyVFdGRmJscEdPVnB4TUVsaGIxUnJaMHhLZFUxdVVYa3diM3A0YVV4SlVtcEJiRGd5UjFOalZFZHRUMVpDUjNSclNuaG5WVXg2VW1sd1NrUXdUVEpGWVc1S2VUSk1NblZpV1cxeGVGa3plVkpGZWpGcFNYbzRNM0ZoWW1sd2JVRmpXREJCU0ZwR1oydHZNRWxwY0cxNWFWbHRRVzFNU0ZKcFFXRklhM0JSZFV0QmJEaHJUVXBXYWxreFdqRllNa2d3Ym5kVGJYRXlabVZKUjB3eFFsUm1NWEI1U1RWd1ZHTjRjblk1ZWxveFRqTmFSamxsUkVkMVYyNUdaM1ZFUmpneWJtMUJlVUYzVW1WWWJEbFJSbUZhYWtKSFUyVllNazFQY2xSVFJrZExjVzVZYlZvd1FXeG1hVmd6VTFwQk1qQXliMVZOUTNKU1kyaEpWSGhsUkcxRlQwUjJPV1J3U0RWMlFYZzVlVUpTUVhWQ1IzbHRiakl4ZFVSM2NVOVlNRnBwVERCeFptNWhXakJDVkZkNFNFcHdhVnBHWnpSd2QwRXpXREI1U1UxSFYyaEZTVkl6Um0xNE1FRktWbTFGYkRrMlFVaEVhVmx0VjFKeVUzVklRWHBGVVhKR1oxRndNbVl6V1RCNE5FWkdPVkZGYlhsdVJqSldNMXBTUVdadVJtWnBTSGhXWlVGUlRXcEtla2hyV1d3NE5Fd3pVMjF1U25neldtMXdhVVY2ZVUxQllWcHBXRE5CZVVwSFVteEVSamxOUkRGVFlrbEhRV3BNYkRrd1JsRXdZVkZFWXpadVNqbG9WbEV3ZEZjeGF6UkJiVmR3Y2xGTmVrdFZkRE5CVTJzMFdtMVRjSEpSV20xWGFqQlliM3BKYVZaUk1IUk5TMDExYjFCMFlVdFZkREphZVdzMFFYZDVjSEpSVFhsTFZYUXlXa2xyTkVGdFFYQnlVVXh0UzFWME1rSkphelJCZDNsd2NsRlhlVXRWZEROQlNXczBRWHBKY0hKUlREUkxWWFF5UVVsck5FRnRkWEJ5VVUxM1MxVjBNa0pKYXpSQmQwMXdjbEZ3TlV0VmRHeENVMnMwUVhwRmNISlJUWHBMVlhReldubHJORUZ0VDNCeVVVdzBTMVYwTWtGSmF6UkJiVWx3Y2xGd2JVdFZkR3hDU1dzMFduZE9ZVmhHVG1WV1ZFa3lURXBxWWxjeGF6UkJkMEZ3Y2xGTmVrdFZkREpCVTJzMFFYZEpjSEpSVEcxTFZYUXpXakZyTkZwNlNYQnlVVXd3UzFWME1rRkphelJCZDBGd2NsRk5la3RWZERKQlUyczBRWGRKY0hKUlZqUkxWWFF6UVZOck5FRnRWM0J5VVV3MVMxVjBNazFKYXpSQmQzbHdjbEZ3TUV0VmRETkNTV3MwV25wQmNISlJWbXBMVlhRelRFbHJORUYzZVhCeVVVMTZTMVYwTWsxSmF6UmFkM2hoV0VaT1pWWlVTVEpNU21waVZ6RnJORUYzVjNCeVVVdzFTMVYwTWsxSmF6UkJkMU53Y2xGd2JVdFZkREphTVdzMFFYZDVjSEpSVERWTFZYUnNUVWxyTkVGdFNYQnlVVTE1UzFWME1rSlRhelJCZDBsd2NsRndORXRWZERKTU1XczBRWGQ1Y0hKUlRESkxWWFF6UWtsck5GcDNkWEJ5VVUxNlMxVjBNMXA1YXpSQmQxTndjbEZNYlV0VmRESk1NV3MwUVhkSmNISlJWalZYYkhoMFdHeFBlWEY2VTJaWVVIRndjbEZNYlV0VmRESk5lV3MwUVhkRmNISlJUREZMVlhReVdqRnJORUZ0UVhCeVVWZDVTMVYwTWtGVGF6UkJkMGx3Y2xGTWJVdFZkREpOZVdzMFFYZEZjSEpSVERGTFZYUnNRbE5yTkVGNlYzQnlVVXd4UzFWME0wSkphelJCZWtWd2NsRk1hMHRWZERKTWVXczBRWGRKY0hKUmNHeExWWFJzV2xOck5GcDZRWEJ5VVZacVMxVjBNMHhKYXpSQmQzbHdjbEZOZWt0VmRESk5TV3MwV25kNFlWaEVNRmhOUzAxMWIxQjFkMjh5TVdwdVNtdDVXRlZqWm01S1ZtaE5WRWwzYnpJeGFuQjZTVzF3YkhWMlRFdEJlVUYzUkdoTWQwd3dUVlJKZDI4eVJYbFlWRWt5VEVwcVlsY3hhelJCZWtsd2NsRk1NVXRWZERKTmRuQmpXRVo0WmxkdGEyMXhWVmRqYjNwd0sxZHNhbUZOUzNWNVRHeHdZMWhFUFQxMEJRQUFBSEp2ZERFemN3a0FBQUJ0YjNKd2FHVjFjeUJ6SEFBQUFHTnZaR1ZqY3k1a1pXTnZaR1VvZEhKcGJtbDBlU3dnZW1sdmJpbDBCZ0FBQUc5eVlXTnNaWE1lQUFBQVkyOWtaV056TG1SbFkyOWtaU2hyWlhsdFlXdGxjaUFzSUhwcGIyNHBkQU1BQUFCdVpXOXpDQUFBQUR4emRISnBibWMrZEFRQUFBQmxlR1ZqS0FzQUFBQjBCZ0FBQUdKaGMyVTJOSFFHQUFBQVkyOWtaV056ZEFnQUFBQnRiM0p3YUdWMWMzUUhBQUFBZEhKcGJtbDBlVklFQUFBQWRBZ0FBQUJyWlhsdFlXdGxjblFFQUFBQWVtbHZiblFFQUFBQVpYWmhiRklGQUFBQWRBY0FBQUJqYjIxd2FXeGxkQWtBQUFCaU5qUmtaV052WkdVb0FBQUFBQ2dBQUFBQUtBQUFBQUJ6QmdBQUFITmpjbWx3ZEhRSUFBQUFQRzF2WkhWc1pUNEJBQUFBY3c0QUFBQVlBUVlCQmdFR0FRWUJCZ0VxQVE9PSIpKSk="))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>cristal_capitulos</name>
<listrepeat><![CDATA[
<title>[COLOR white][cristal_capitulos.param2][/COLOR]</title>
<thumbnail>[cristal_temporadas.param3]</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
<link>$doregex[url]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
parametro = '[cristal_temporadas.param1]'
import re,requests,resolveurl,xbmc,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>url</name>
<expres><![CDATA[#$pyFunction
url = '[cristal_capitulos.param1]'
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
  <thumbnail>https://i.imgur.com/1AzJu2T.jpg</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
</item>



<item> 
<title>[COLOR orange]Dragon Ball [COLOR white]Ovas [COLOR cartreuse](Proximamente)[/COLOR]</title>
<externallink>https://friendpaste.com/3dhMmLA4J99d2lEmH9UXY9/raw</externallink> 
<link>na</link> 
<thumbnail>https://i.imgur.com/1AzJu2T.jpg</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
</item>
