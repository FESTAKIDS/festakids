<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<items>





 
<item>
<title>[COLOR gold]*[/COLOR] [COLOR white]Dragon Ball [COLOR lime] Peliculas[/COLOR]</title>
<link>$doregex[c]</link>
<regex>
<name>c</name>
<listrepeat><![CDATA[
<title>[c.param1]</title>
<genre>[c.param2]</genre>
<year>[c.param3]</year>
<info>[c.param6]</info>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[c.param4]</thumbnail>
<fanart>[c.param5]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,xbmc,xbmcaddon,xbmcgui,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>multi</name>
<expres><![CDATA[#$pyFunction
url = '[c.param7]'
title = '[c.param1]'
import xbmc,xbmcaddon,xbmcgui,re,json
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MFdSQUFBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFVlROT2JVa3lXa1JWZDAxNlVYcFBSRmsxVGxSWk0wNXFXbWhPYWxreFRWUktiVTE2V1RCT1ZGRjRUa1JuZWs5VVkzaE9SR015V1ZSVmVFNUVWVEZQUkZKclRtcFJlazFFVW1oT2JVVXdUVlJaZWs1RWF6Qk9hbFUwVG1wTk0wOUVZM2RPUjFreFRWUmFhMDVIUlRGTlZGSnNUWHByTWxscVZUSk9hbXN4VFhwVk1VNXRUVE5QUkZFeFRsUlZNMDFFVFhoT1IxRXdXWHBqZVUxNmEzbFphbU15VG1wbk1rNXFVbXRPUjBrelRrUmpNVTVIVlROT2VsVXpUa1JGTUZwcVdYcE5la0V5VDBSVmVFNVhSVEJPVkZWNlRYcG5NazVVVlhkT2Vsa3pUMVJWTWs1cVdYcE5lbU4zVG5wcmVWcHFXbXRPYWxVd1dsUk5OVTF0V1RCYWFrMTZUWHBqZWs1cVdYcE9la0V6VFVSTk5VMXRXWGxaYW1Nd1RrZFJNVTlFVW0xTmVrMHdUbXBLYVUxdFdUTk9WRnBzVG0xVk1scFVUWGxOZWxWNlRWUk5lVTR5UlROWlZGa3hUbnBaZWs1VVl6Vk9SMWt6VG1wTk1VMXRTVEpPYWxVeVRtMVZlVnBxVFROT1ZFVXlXVlJqTWs1NmEzcE5lazE2VFcxWmVWbHFZM2hPVkdONlRrUlpNVTE2WXpKT1JHTXhUWHBWZVZwcVNtMU5lazB3V1hwVmQwMTZZM3BPZWswMFRYcFJNbGxxVFhwT2VrbDZUbXBhYWs1VVNUTk9hbFYzVFhwUk1VMTZaR2hPUjAweldWUk5lazVFWnpCYVZFMDBUbnByTTA1NlVtbE9WRkV6VDBSU2FrNTZRVEJhVkZFelRtcGpNazFxVW10T2Vtc3pUbnBaZVU1VVZYbFphbU15VFhwWmVrNUVTbTFOZW1jd1QwUmFhazE2V1ROWlZFMTVUbnBCZWs1VVVUSk9iVWt5VDFSYWJFNUVTWHBOVkVwdFRsUm5NVTVFWXpWT2FrVXlXWHBqTVU1cVZUQk5hbFUxVG0xVk1GbDZXWGhPYlZrelQxUmFiRTVxV1hsWmFsSnRUbXBOZVZscVRYZE9SMFY2VG1wTk1VNXRUVEZPZW1Nd1RsUlJNbGxVWkdoT2Fsa3pUa1JTYWsxNmEzcE9SRmt4VG0xRk0wMTZUWGhPVkdjelQwUlpOVTR5UlhwUFZFMHpUbFJuTVU5RVVteE9lazB5V2tSTmQwNXFVVE5PUkUxNVRrZE5NMDVxVlROT2VsRXlXa1JaTVU1RWF6Tk9hazEzVFhwUk1VMTZWbWhPUkZFeVdsUmpNMDVIV1ROT1JGbDRUakpGTUU5VVVUQk9SRkY2VGxSTk0wMTZTVE5OUkZsNFRtcFZNMDVFV1hoT2FsRXpXVlJOZDAxNldYbFphazE2VG5wUk1rMVVXWHBPUkd0NlRucFNiVTVxV1ROWlZGa3dUbXBWTVZsVVVtaE9la1V3VG5wak5VNUhUVEpOZWxKc1RYcFJNVTU2VW0xT1YwVjZUbXBaTVU1NlRUSlphbU15VGtSTk1FNTZXVEpPZWxFeFRsUmFiRTU2UlRGTlZHTjRUbTFWZWs1VVdtdE5iVWt3V1hwWk1FNUhSWHBPVkZwclRYcEpNVTVFV1hoT2FsRXpUWHBOTWs1dFZUSk5hbFV6VGtSck0wMUVWVE5PYWswd1dXcGFiRTU2U1RGT2VsWm9UbnBCTUZwcVpHaE9SMUV6VFZSamVrNXFSVEpOYW1Sb1RrZFpNVTE2WTNkT2VtY3dUa1JOTlU1RVl6RlpWRXBwVGxSWk0wOUVXVFZPUkdkNVdtcFZOVTE2WXpKYWFsbDZUa2RKTVU1RVkzaE9SMVV5VDFSWmVFNUhXVEZaVkUweFRYcEJNbGxVWXpGT2VsVjZUbnBaTkU1RVl6Tk9WRmt6VGtSTk0xbFVUVEJOZWxFeldWUmplRTVVVVRKTlZGSnFUbnBOTWxwRVl6Uk9SR2Q2VFhwWmVrNXRVWHBPUkZKcVRtcFZlazFxV1RCT1IwVjZUbXBSZUU1NlNUTlpWRnBzVGxSVmVrOUVXWGxPYWxrd1RYcFNiVTU2VFhwT1ZGcHFUa1JOTTAxcVRUTk9iVVV5V2xSYWJFNVVVVEZQVkUxNFRtcHJNbHBVVW0xT2FtY3lUWHBWZWs1SFRUSlphbU42VFhwQk1rMTZUVEpOZWxWNlRtcE5NazVIVVhsYWFrMTNUbXBKZWsxNldYbE9lazB6V1ZSWmVrMTZZek5OUkZVd1RucHJlazFxV1hoT1ZFMHpUMFJqTlU1SFdUSk5WRkpwVG5wVmVrNXFWbWhPYWxVeFdWUlJNMDU2VlROT1JGcHBUbTFOTUU5VVdYcE9iVkV6VGxSWk0wNUhWWHBOZWxWM1RqSkZlazFxWXpST2VsVjVXV3BWTUUxNlJUSmFWR00wVFhwak1VNTZUWGhPZWtreVRYcGpNRTVFVVRCTmFsa3hUbXBWTUZsVVdteE9iVmt5VFZSS2JVNXFhM3BOYWsxM1RucEpNRmxxV21sTmVtc3dUVlJOTTA1dFZYcFBSRkV4VG1wWk1rNUVVVFJPZWtreFRtcGplazU2YXpGTmVsbDVUbnBSTTAxVVVYcE5lbU15V2xSWmVVNXRUVEJhYWswMVRYcFJNazlVVVRGT1JGRjZUMVJqTWs1RVRUTk9lbHBvVG5wQmVrMUVXbWxPYlZVd1RWUlJNazE2WnpKUFJGa3hUWHBSTWsxNll6Uk9SR3N3VG1wTk5VNTZVVEpOZWxsNlRtcFJNRTVFVW1wT1ZFMHdUMVJLYlU1WFJUQk9SR041VG5wVk1GbHFVbWxPYWxreFdWUmthRTE2UVRKT2VscHNUbnBWTTA5RVVYbE9iVTE2VG1wTmVVNXFUVEpaZWswMVRrZEplVmxxV1RST2FtY3dXVlJWTWsxNll6Tk9lbFY0VFhwQk1FMXFTbTFPYWxFeFRYcEtiVTVxVVRCUFZGcHNUbFJKTWxsVVdYbE9hbU42VG1wVk1rNUhSWHBOZWxwb1RsUlpNRmw2V21wT2Fsa3pUVlJSTTA1dFZUSk5hbGw1VG0xUk1FOUVZekpPUjBreFRtcFNiVTU2U1hwTlZGcG9UbnBaZWs5RVkzaE9SMDB3VDBSUk5FNTZRVEpPZW1NeFRrUlJlazlVV1hsT1ZHc3hUV3BOTlUxNlVUQlBWRXB0VFhwTk1FMTZWVEZOZWtFeVQxUkthVTVIUlRCYVJGa3hUbFJSTUU1VVpHaE5iVWt6VG5wU2JFMTZhM3BOVkVwdFRucG5NazFxVFhwT1ZFVjZUa1JWTVU1NlozcE5hbVJvVFhwbk1FNUVVVFJPUkZreVRtcE5NRTVxWnpKUFZGcHJUWHBCTUUxcVdUSk9lbXN5V2xSak5VNHlSWHBOZWxVMFRucGpNVTFFVlRST2VsRXdUbFJXYUUxNll6Rk9lbU13VGtkUmVWbHFXVFJPYWxFeFRtcFNiRTU2VFhwT1ZGa3pUbnByZWs5VVVYbE5lbU42VDFSUmVrNVVaekJhUkZKclRtMU5NVTU2VlRKTmVsRXhUMFJOZVU1RVZUSk5hazAwVFhwak0wMTZZM2hPZWxVeFRrUmFhVTVxWjNwT2Fsa3pUbGRGZWsxRVZUVk5iVWt5VDBSTmVrNXFUVEJhYWxFelRucEZNRmxxVlRGT2VsRXpUVlJTYUU0eVJYcE9WRkV5VG1wVk1GbFVXVE5PUkZFeFQxUmpNRTE2U1RCTlZHTXlUWHBuTTFsVVVYaE9Na1V6VDFSTk1VNUVUVE5PYWswd1RucEZNVTFVV1hsTmJVa3dXVlJqTWs1cVl6Qk5la3B0VGtScmVrNTZXbWxPYW1NelRtcE5NRTVVVVhwTmFsRTFUbnBaTUZwcVl6Tk9SRTE2VG5wYWFVNXRWWHBPZWxFd1RqSkZNRTVFVlhkT2Vsa3lXVlJWZDA1NldUQk9hbEV6VFcxWk1rNTZWVFZOZWxrd1RXcFpNVTVVVVRCT1JGVXlUWHBCTUU5RVNtbE9WRTE2VFhwamVFNUVSWGxhYWxrMVRqSkZNVTlVVlhkT2FrVXhUbXBOTTA1NmF6Rk5WRXB0VGtScmVrMTZZM2xPYW1NeFRrUk5NVTU2WjNwTlJGSnFUWHByTUZwRVVtdE9WRmt6VDFSWmVrNXFUVEpaZWxreVRYcGpNRTFxVFhwT2JVa3pUWHBhYlUxNlVUSlphbEp0VG1wUk1GbFVUWHBPYlZFeFRrUktiVTVVU1ROT2Fsa3lUa1JGTUU1RVdtcE9hbXN3VDBSTk0wNUhWVEJOVkZVd1RYcFpNVTFxVVRCT2VsbDZUV3BSTTA1cVZURk5hbU41VFhwQmVrMXFZek5PUkVWNlRYcE5kMDVxU1RGUFZGRjVUbXBWTUU1cVVUSk5la1V3VG5wTk5VNVVVVEZPUkdNMVRrZEpNRmw2U20xT2FtTXpXVlJOTlU1SFJYbGFhbHBwVFhwVk1FNUVXVEJPVkUweldWUk5NVTR5UlRKUFZHTTFUbFJGTTA5RVZUSk9ha1V5VGtSak1VNUVUWHBQVkZwcVRXMVpNMDFFU20xT2FtY3dUMFJLYVU1NlJURk9WRkp0VGxSQk1GbFVXVEpPYlVreVdYcE5lRTVxYXpCTmFscG9Ua1JKTWxsVVRUVk9SRVV6VG1wUk1VNUVZekpPVkdONVRrUnJNRTVFU21sT2VrRXhUbXBqTlU1RWF6QlBWR00xVG1wUk1rMXFUVE5PUkZrelQxUlJORTU2VFRCUFZFcHBUbTFaTVU5VVVUTk9hbGt6VG5wVmVFMTZUVEJPYWxFMFRtcFJNMDE2V20xT1IxRXpUMVJSTVU1RVozbFphbGw0VGtkWk1FMVVXWGxOZWxreVRrUlJNVTVxWXpKT2FrMDFUWHBWTUZscVl6Rk9WR3N5VDBSU2JVNXFSVEpaZWxGNVRtcE5lazVFVVRCTmVtTjZUa1JTYTA1NlVUSk5lbFV6VGxSQk1rOUVVWGhPVkVFd1RXcFpNazVVVFRCT1JGcHJUa2RWTTAxNldtdE5la0V3VGxSWk1FNVVUVEpPZWxwc1RYcFZNRTlVVW0xT2VrMHhUMVJaTWsxdFdUQmFWRkY2VGtSSk1VOUVVVEZPVkZVd1QxUmpNazVVVFRCT2FscHJUbnByTVU1NlRUTk9lbU15VGtSWmVrNVVSWHBQVkUwelRrZEZNMDFxWTNsT1ZGVXlUMVJLYVU1dFNUQk5lazB4VGxSQmVrOUVVbTFPYlZreFRXcEthVTVIUlRCUFJFcHRUbnBqZWsxRVRUVk9SRTB3VFZSak1rNUVUVEZOVkZwc1RYcGpNRnBFV1RCT2JWa3hUVVJLYlU1RVdUQlplazAwVG5wVk1sbFVWWGhPUkZWNVdXcFZNVTVIVFRGTmFsbDZUbXBGTWs1RVVYcE9hbGt6VFZSa2FFNVVTVEpPYWxVMVRtcEpNMDVFWXpOTmVtTXlUMVJSZWs0eVJUSlphbEUxVFhwbk1scEVVWHBPYWxGNlRsUlJOVTVFVFROT1ZFMHdUa2RaTUZwcVl6Tk9lazB6VDFSWmVVNVVRVEJhYWxVeVRucHJNRTVFVlhkTmVtY3dUWHBTYlU1dFVUSk5lbU4zVGtkVmVrMUVXbWxOYlVrd1QxUmFiRTVFUlRGTlJFcHRUbTFWTWs1cVdteE9lbXN4VFVSWk5VMTZhM3BQUkdNelRtcFZNazVFV210T2FrVXhUWHBaTWs1VVJYcE9WR014VGxSRk1VMUVVbWhPUkVVeVRtcE5kMDVVU1hsYWFsRXlUa1JGTWs1VVRUTk9ha1V5V1dwU2FrMTZVVE5OYWxWM1RrUkZNMDVxVFRGT1IwVXlUbXBSTUU1dFVURk9WRlUxVGpKRk1sbFVXbXBPUjFrelQwUmFhMDVVUVhwUFJGRXpUWHByTVU1cVNtbE9hbU14VDBSak1VNUVXVEpOVkZWNFRsUlJNbGxxU20xT2FrVXhUV3BLYlUxNlJYcE5WRlV5VFhwWk1VNVVXWHBPUjBWNVdtcFNhMDVVU1RCYVJGRXhUbFJWZWs5VVVURk9iVlY1V1dwUk5VNUhUWGxaYWxVMVRXMVpNbHBxV210T2Ftc3hUMFJSTWs1SFNYbFphazB3VG0xWmVrNXFXVEpPZWxFd1QxUk5OVTE2UlRCTmFsa3hUbTFOTVU5RVl6Vk9WRTB5VFdwTk5FNUhXVEpPYW1ONlRtcHJNRTlVV214T1Ixa3lXa1JWZVUxNlRUSk5hbGt5VGtSVk1VOUVTbWxPUjAwd1RucFJNRTF0U1RCT1ZGcHNUbFJOTUU1VVdUSk9iVWt4VFVSWk1rNUVWVEZOUkdNeVRrUkpNMDU2WXpKT2JWVXlXbXBSTWs1cVdUSmFhbGt3VFhwak1sbHFZekpPYW1jeFRsUmpOVTVxWXpGT1ZFMTZUbXByTVU1VVl6Qk5la0V6VFdwU2FFNXFWWHBOUkZKcFRucG5NbGw2WTNwT1JHTjVXV3BTYUU1RVRYbGFhbU0xVG1wbk0wMTZXbWxPUkdkNlQwUlpOVTU2VVRCYWFsa3lUbXBqTUU5VVRUTk9WRVV3VDBSWmVFNUhTVE5OVkZVeFRXMUplVnBxV20xT2JVVXpUMFJTYVU1cVZUSmFhbEY0VFcxWk1FNXFUVFZPYlZFd1QxUlpNazVFVlRGT1JFMHhUa1JGTVUxRVl6Vk9WRTE2VFhwTk5FNUhSVEZQUkUweVRYcEJNMDlVVlRKTmJWa3lXV3BSTWsxdFNURk5hbU15VGtSWk1FNTZTbTFPYlVsNlRYcE5lRTV0V1RKTlZGRjVUWHBuTVUxcVZUQk5lbFV5VFZSUk5VNTZTWHBPYWxwcVRXMVplVmxxVVRWT2FsVXpUVlJaTkU1NldUSlphbFYzVFcxSk1VMXFUWHBPYlUwd1dtcFNhMDVFVlhwTlZGVjRUbFJuTVU5VVdUVk9WR016VG5wUk1rNXFXVEZOYWxFelRYcHJNbHBFVlROT2Vtc3lUVlJhYVUxdFNYcFBSR041VG1wVk1FNXFTbWxPVkVreFQwUlpNMDVVVVRGWlZGRXhUWHBOTTAxcVVURk9lbGt4VDBSWk5FMTZXWHBPUkZGNFRXMVplazVVWXpGT2Vtc3lUbnBWTkU1VVFUTlBWRlY2VFhwVk1FMTZZM3BPYW1jeVRtcGFhVTVIUlhwTlZGRTFUblJaRUFBQVVYUXlUWGR3YWtGUlJHeE5kMFYyV20xTU1WcDNSRFJhYlhReVFsRlhla0Z0VGpCTVIxcHFRWHBNYlVKSFRYVkJWRXd6V2tkRU1GcHRjREJOZDBWNFdtMUViVUZSU0RCQmVsWXlRVzFhTlZwdGNESkNVWEExV25wTU1GcDNSWGRhZWxZd1FWRkVORUZVVWpCYVIxZDZXbTE0TUVKUlNHcEJWRVF5VEVkYU1rRlVSREJCUjB4dFFVZE1iVnB0U0d0QmQweHRRa2RFTTBGUlZqRmFSMHd5UVZSRU0wRkhWM3BCVVVRelduZHdOVUZSU0RGQlVYQTBRWGRXTWsxSFJETkJkMUl5UVZGYU5FRlVSR3hNZDAxMVFWUldNa0YzVEROQlVVUnNUSGRGZGtGM1RHeE5kMFY0UVZSV00wRjNTRzFCVkZJeFFXMWFNVUY2UkROQ1IwZ3pXbTEwTTFwUmNHdEJiVTR3VEVkd01rRkhkREpNZDBneFFWRkliVnAzVEROQmJVZ3dURzF3TkVGdFVqQk5VVTE0V20xME1VSlJTWFZCVkZKdFFrZHdNMEZ0VGpGYVVYRjFRVkYwTVV4SFdqTkJVWGd4UVZGYU0wRlJTRzFhVVZveVFYcGFiVUZ0V2pGQlZGcHNUWGR3YlVGM2NERkJSMGd6UVVkNE1rRjNSWGhCZWxZelFYZEliRUZIZURKTWQzRjFXbTFFTUVGM1dqRkJSM2d5UVhkTmRrRkhWbTFhYlZveFFWRlNNVnBSY0cxQlIwUnRRVWRNTkVGVVRERmFSMFY2UVVwU01WcDNjRFJCUjFJeVFYZElNa0Z0Vm0xYVVVUXdRVWRNYkV4M1REUkJiVXd3UVVkd05FRkhUakZCYlVneldtMTBNMXBSVFhWYWJVZ3hURWROZGtGUlRHMUJSMXB0UVhwTU1scDNUWFphYlZveFFrZGFha0ZLVWpGQlVYQTBRVWQ0TWt4M1REVmFiWGd5VFhkSWFscHRTRE5CVVhBMVFVZHdiRTEzY0dwYWVrd3lRVzFJTUZwdFNESk5SMGcwUVZSU01scEhjRE5CYlZZeFdtMU5kMEZVV2pKTWJVUTFRVlJNTWtKUlNHeEJiWGd6UVcxSWFscDZUREpDUjBSc1FVZE9Na0pIV20xQlIwZ3dRbEZNYTBGdFRqSk5SMW94UVZGV01scHRTREZhYlVoc1RIZElhMEZSZEROQ1VVUnNXbnBNYlZwSFJHdEJWRm95VEhkYU5FRnRSRzFCVVVWNVFVZE9NVUZIU0RGYWVsWXdXa2ROZVVGUlJEQkJSMGhzUVZGMGJVRnRjREJCUjA0eVFVZE5kMEY2VmpGYWQxcHRRVWRJTWtKSFNHcEJSMGd5UVcxYU1rRktVak5hUjFveVFYcEVNa0ZIVFhaQlIwd3pRa2RFTlVGNlNHMWFVVVYzUVVkd01VRlJXakJCYlU0d1FsRndOVUZSU0RCQmQxZDJRVWRFTUVGdGNHMUJSMGd4VEVkYU1rRlJTRE5CUjFveVdtMUlNVnBSUkRCQmVscHRRVzF3TkVGUlRETkJSM0JxUVZSSWJWcEhUWGRhZWxZeVRYZGFhbHB0Y0RCTWQwd3dRVWRXTUVKUlRETkJVVm96UVZGTmVFRnRTREpOZDAxMldtMXdNVnBSY0d4QlZGb3pURWR4ZFZwNlZtMUNSMGhxV20xV2JVRnRXbTFhYlZac1RYZHdNRUZSU0RKYWQwZ3lRVkZTTWtGUmNHdEJkMW96UVcxSWJFRlJjREpOUjBWNVFWRndNVXhIVERGYWJVNHdRVWRGZWtGdFREQk1kM0F6UVcxME1rRnRUR3RCYlhReFFrZE5lbHB0VEROYVVVdzFRVzFhTUVKUmNHdEJla1F5V25kRmVrRnRSR3hNZDBWNVFWRlNNbHBIVEd4QlVVUXlXbmR3TkZwdFdqRmFkM0JxUVVwU01VSkhjREZCYlU0eldtMWFNRUZSUkcxYWJVd3hXbTFNYlVGdFNETkJVVVJ0V20xYWFrRjZSREpCYlZvMFFYZGFNRUZIV210YWJWWXdRVzFFYkVGdFVqSkJiSEJCVUdGRmJHNUtOV054VlhoMFEwWk9ZVVZJVTFaTlNVZ3hSakpuVDBjd1kxaElNMWRHUjFGTU1VZDRUR3RhVVhGNWNGRk5ha1Y1UlVaYVIzRjNja3BuWlZveFQxcENWRFZsUjBwclJIQlJkVTlHVVhGNWJuZE5NRWxJY1RWTmVtTk5jRWw1V1hFeWVWbEhiVTAxU0ROeGEyOTZkV1ZKTVVGTFIzbGFiVTB3VTBOdk1FbGtSVzFOVWtnd1JEVndlWGxRY2tnNVFVbFRjVkpOZWpsTlNVcDFSMDE2VERWQlUwVmhRVko0YWtaNVRXMUdNRVZ0V2pCeFVFbGhWekZhZDAxTFJsUjRiRWt3TlcxRWVuRk5USGxOWjBkS1ZqRkJiWEYzYm5nMWVuRlNlR3RHZW1OS1JrcDVNRVI0UVZwSVJqbEtSa2xQUjBGVWEzaHhlamwxU0hwU01rUklhMkpCZVhGNlRWTkVhVWRSVWpGS1ZYbEdTa3RCUW04d2NEUnhTRGxvV25wblpFa3dkRzF1WVVsdFdrcHhTa1o2U1ZSeFVYRjZSWHBCU25CUlRWWkpNMDFuYmpKbmVXNVVSR3B5U0VGMVJEQk5TM0IzVTJkTWVrVlhSakE1TlVKVU9EUk5ValY0U1ZKNU1VUkhVME5ITW5GS2JrcEZSa2xIZFVKYVIwa3dXa3BCTUZwdFRUQkllWEZOY0hveE1XOXRSVEZIYkRsU2NuZDVWa1J0VFhseVIwRktRVkpyVEVSNVRVVnlTRFZEUWtkMWEwWlJTVWxOU21kRFNucEZia2t5Y1d0Q1UwOVBUVlJYTUVSdGVVWkJVWFZvUVRGMVptNHpUMHhZTWsxU1FWUjVlbkZUZVdKSU1VMWpSa2cwTlhGS1oycE5la1ZyV0RGMVMwVXdaMDF4YlVFMGIwaHhaRXd4VW0xdVIzRmpTVVpuUTB4S1ZtVk5iWEY2Y0V0V01rUktPVk5LVkhGUVNERkpZbkY2WjJkTWQwbHVRVWR3TTI0eVl6TndTblV5UmpGalRFSlJTRFZ3U0ZveFdtRldNMHd5U1dWQ1VqRXpjVEpYVmxvelRXUkpkMDFoVFZKVFVYRXdSV2RFTVZkSFFYZElNRXhoVTBWdlIxZE1XbFIxVjI5NFUxQkZSMEZ0YjJGNVdGb3lORE5CVTNGUFFrZFhhRTFHT1ZGSk1tSTBRVEJCV2tGSlNVbHhiWGxuY0VoeFJVZFVTVWxFZUZkMVRUTkpOVmd5VFdKSFJqbGpjbmRCTVZwTFVqSndNM1ZHUmpONVdVRXplV0p2UjBSdGNYaEpOa3BVWTBWTWVsTnRSa2RUZUVGSFRVVlpNbE40U0hoSU1rUjNlRzFJTUhWSlRFZElhWEJTVjJ0SVZVRmxiMVJUVjBsVmNWbHhiWFZvY0cxVGJrZFJlVmxFZWpGQlNWUjVaRzR3VjJORWQwOVBXRzFOVEhKNlNWWkZNR1l4Y2xWQloxcElZak5hZUVSdFNGRjFWMjk2ZVdaTmVFd3hXRzFTTUc5S1NHcE5ZVUZ1YnpKNE1sa3llVkJGTTNSc1FXMVRZWEJLY1dsTk1uRktXVEZQV1VaVWEySnhVVTlaUkRBNWVWcEtjV2xZTW5sSVFrdFNNM0JWY1VGdU1ERjZjSGxKTm05S2VUVnVWVWhwVFROeFduQktlV05HTVV3MVJsTlNiVVJMVm1WdVUwVnFSbmg1WTB3eVJXTk5TMVl5UVhwVFdVWkhXbTF2ZUVGWldqSk5SVTB5WjFGRlMwOVJia2RKWkVoS2NWbE5Na2d3V0ROamFVaFRZMjF2VTJOcGNIZFRSbHBSY1dKTlVYRm9UVkZ4ZW5CUlJXMXdWR2RIU2xWQlZVaEpVMk5IVkVWaVFYbEJiVVI0ZFU5Qk1uRmhTVzFCWTBWTGRWQkhSM0ZwVERCeGRscFNaMWhhZWpWUGNURnhSbkJTZFhsd2JWWTBURWd3YW5GM2NWZENTSEZyY2xSaldYQktlVE5OTTBscFdHMTVha1l6UVdWSlVrRjVjRWxKZWxrelFVeENWRTE1UmpCQldrWlNlVkp4ZW5GWlJXRmlOVnBVTlVKQ1IwOXFRVkpqYkc1VVkxRkNTMGxWUkVkd00wWjZUV3RJWVZkamIzcHJaMHBLWjFkS1NFbFNXbEJuWjAxSWEyeE5VVVF3V0cxVGRXNTNkVVZJVTNFeGJrdFhiVWg0YW1WRVlWZFhjVkJuZFc1SVkwbHVTR3RLV1cxSk1rSklPR1ZFTURGaWNUTlhlVVZLVTJaSVNGTkRjRzExVDNKU1dtVkhVWGxvYmxBNU5FbDRUREZIZWpRemIxTndOVXBUVG10dlZEVjNUR0ZCUjNCSGVHeEtkbWRJVEcxeFZISklVMnB3ZVVsUFRXMVRhMHg0U1d0SlNuVk1TVEpqWlZreVkybHdWSGxSY25wTmJFaDNjVlJZTTJONVJrcDFTSEYzZERCRWVrVnFiekpKV2taVWNXTkZkM1ZzUkhoVGQwWXpjVUZ1ZDFOWlNsQm1NbkZTYTIxeWVVMWFiMHRUWmtrd1NYZE1TV05QYmxSbWJIQktZMnhhZUhGWlRFbGpaRnBWVEcxRlIwOVpjVXRGWlhCS01VdEZiWEF5Y25kNVpYQmhWbTF5U25WUVFrZEJWM0ZzT1dKdk1sSXpiMUptTlZwTFlqRkZWVUZzU1hnd05FZFVOR1ZhU1UxSlRYZEZkMEpSVGpSWk0wOVhiMUE0TUc4eVV6QnhTWFJxV21GNGJXNWhkRFZCTWxkWGIxQTViRWRLVmpSRlZYaGxiMHBJYkVkS1RWWndWVTkzUWxOWE5sbHRWM2hFYlZKc1JIcEpVVWgzZUdWd1ZFeHFRa3BCYTBReWVVUnVTRk5vUWtkQlFrcFNVM2xOZWxOUFdqRkZUM0IyWjFWd1NrbFFSSHBYVDBkS2VVVnZVbWRNVFhweFpFRXpVM3B4UzBoc1RWSXhNM0Y2WXpSTk1qVm5jREJNTlV4TFZqVkhTRlpwY1ZOUGVFd3dOV1J2U0ZOR1RIaGlOWEY1VDJoYWVtTnVja2c1U2tGSmVUTkhTVmRIUkROYWJIQjVZekpCTTNWUGJsSmpaVUZUY0ROd1NFRXpjbmxOVUVKVlNXcHhVVUZpU0cxVGVFeEpZMUphYlhsVFRVZEliRUZTTkdsdU1uazJjVEJOZUhBeU9UTmFNMDkxV2xSSmEwVmhRV053UjNCclJIZDVWMXBUUlZCd1ZVRTFXa2gwYlVGSFYyeHdZVk5FVEV0TU0zRlJUMEZ3U0VsU2NUTkJSSEF6WW0xdWVYbHRSSHBKVDFwVGRYaHVNVmRKUmtkMVpXNVVNVUZLVkhsMVNWSk5OVVo2T1VSdlIxWnRRa3BOVFhCNFdtMXdTbkY1Y0RCblJXNUpSVEZDVkRsaFIwWTVZVVo0TUd4dWJEaHNUSGR4ZVVaNGEydElSM1V6U1cxQlYzQjNjRE54ZVVsdFFVaFRNMHBUY1VwS1ZHZFdTbEZCVDAxU1kwMUtVWFExU21GeGJFeEtOREJOVVhnelFsRjFhRWx0U0dWeGVVUnNjbEZ4V2xwVmNEQndlVk5QYjNwYWEwaDNVMkpNU0VsbGNVcGFOWEpoY1dGYWVHTm5XbEpuYVhGUlUzVkVlRk5hV25wcmRYRjZUR2xIUjAxRldUSTVlVzU2VWpOdWVGSnRXbmhKVjBaTFQxVllNa2xDYmpOSlptNVVjV0pDU1hsWVNWRlBZMDB3UlhadmJHZEZXVE4xWWtkTGRUUkpTMWQ2U2t0NWJrWXdWMXB2TTNGaVFURmFhMFF5Wm1WS1ZIRmljVXRPYkhKM1UxbHhVVTlSUmpCblNVMHlVMHR3TWxNMlJHMVhha3gzVDJsd1NERnJiM281ZFVVeWRWTnVTamsyU1VoME5VeElNR3RIU25sS1RIZEpZa3d6U0ROd01HSXlSbEpCWlc5Nk5XbHVVM2xSU2tkWGRVbFVUVFpOTVVsS1dEQlRNMFpKVFRaYVVubGxXREZCWTBKS1YybHZNMUpwV0RKaldVMUtURFJCZW1kTGIwZFRWbTh6ZVVoQlZIZ3pjRkZKYkVGNFNYaHZNM2w0VEdGUGFFRlRlWGhKU1ZwcFNFaE5lbGd6Y1ZsSlVVOWlUVzFYVDBWaFRHeGFiVTlVUWxONVlVVXhjVlJKWVhGcldESkJTbTlWVTFWd2VWZFNSR3c1Tm5KSWRXRndkMGsyY0RKRU5FY3lVMGRCYlhFMFJubzFkazFLUlc1RVIzQnJSM1puZUVoNlkwMWFSMU51UlVveGVWZ3hlRzFGZW5GQmNEQklOVWRTY0RORU1FRXdTWFptTlVwTFFWSnllRWhxYm0xWFkwZEhSVFpLU0ZkMlIzZFRRVUY2ZVUxdmJHZElTWFk1UmtKSFUwMWFVM2cxVEdGeGRuRktUVXRaTUZkRVRUQkVhVUpUVnpGYVMxTkdTRlZUZUhKS2NVZGFTa2xqUnpKQmFVMVVVMFJOVkZZelJFdFRWM0JLUlRGRVNIVkhRVWxYVlVaU1oycEhSMDB4VFhsNVUwZFZlV2h4ZUhGaFJWSlNORXBSVjBkeGVVaHBSM2xhWlVGVlNHMXhWWEZSVEVnNVlrbFRVMWx4UzBWSWJ6SnhUVzVRWnpGTWVFRjJXakIwTVZwU1oyRkhVbmd4YjBkNVUwVkxRV1J2TUhWSmNFWndRVkI2T1d4TVNrRm1UVVpPT1ZaUWNERmFkMGcwUVcxNE1FSkhTREphYlhBeFFVZElORUYzU0ROQ1VVVjVRVzE0TUV4SFdqSkJiVXd5V2tkd05WcHRjREJhUjFkMlFYZDBNRnAzUkRCYWJYQXlRa2ROZVVGUlZqQkNSMWQyUVhkU01reDNSRFJCVVhnd1RIZE1ORUZIZURKQmQwMTZRVWRTYlZwdFJHdGFla3h0UVhkd2FscHRTREJNZDFkNlFVZFNNVUZSY0d0YWVrd3pXbTFJTUVGNlRHMUNSMW93UVZGRWJVRlJTR3RCZDNSdFdrZElOVnB0ZURCQ1IwUTFXbnBXTUV4SFRYbEJSMVl3VEVkRU1GcHRUREJhUjBRMFdtMVdNa3hIU0RSQlIwd3dUVWRNTWtGSFVqTk1SMW93UVVkNE1rSlJXak5hYlU0d1FXMU1iVUZVUkRKYVIwUTFRVlJNTWxwSGNEUkJNbEl3UVcxd01rRXlVak5CVVVoclFWRk1Na0pSVEcxQmJVNHlUVWRGZGxwdFRETmFkMGh0UVcxNE1FeHRSRE5CVkVReldrZHdNRUZIV2pOYVIxcHFRVWRNTWtKSFJYcEJVVXd5UWxGTWJVRnRSREJCYlUxNldtMU9NVnBIUlhsQlVWb3hURWR3TkVGNmRGa1FBQUJKZWsxVVkzbE9hbFV3VG1wUmVrNUhVVEJPUkZVelRtMU5NMDVFVVRST2JVVXlXbXBWTlUxNlJURk9lbHByVGxSTmVrMUVXbWhPYlVVeFRWUmplRTVVWXpOWlZGVjRUbXBGTTFsVVZUQk9WRWw2VG1wTmQwNUhVVEpQVkZGNFRYcEZNbHBxVFRGT2FrVXhUWHBSZUU1dFVURk9hbHB0VGtSbk1VNTZXbXRPYlUweVdtcE5NMDVFWXpGTlZGRXpUbnBKZWs1VVZUSk9SMVV5V2tSWk5VNUhXWHBOYWxrelRXMVpNVTVFVlRCT2JVa3hUWHBqZUU1NlRUTk5lbEUxVGxSUmVrNXFUWGxPYW1jeVRXcFJlazV0VlRGTmFsa3pUbTFOTUZsVVVtcE9WRkY2VFhwVmVVNUVTVE5OYWswMFRsUnJNRTlVV21wT1JHTXdUWHBSTVU1Nlp6Tk9lbGt6VGtSbmVWbHFZekJPVkUweFRYcGthRTU2VFROTmVrMHdUa2ROZWsxVVl6Sk9SMWt4VFhwWk1VMTZXVEpaVkZwcFRtcFJNRnBxV1RST1ZGa3lUMFJqZDAxNlRYcE5WRkp0VGtSVk0wOVVUVEpPYW1zeFRYcFNhMDVVU1RKWmFscHJUbFJaTTA1cVdtdE9hazB3VGxSVk5FNVVXVEJOYW1ONVRsUk5NVTFxVVhoT1ZFVXhUbnBqTWs1dFNUTk5la3BwVGxSUmVrNUVZelZPVjBVeFRYcFNiVTE2UlRCTmVsVXdUbXByTWxwVVRYZE5iVmw2VFhwWk0wNVVWWHBPVkZVeFRtMUZNazVxVlRWT1JGa3hUbnBSTVU1NlJUQmFhbFY2VG5wWk1FMVVXVEJOZW1jeVdtcGFhazE2VFhsYWFsazBUa1JaTWsxcVVYcE9hbXN5VG1wTk1VNUVWVEpPZWxrd1RrUm5NRTE2VFRST1YwVXhUV3BTYTA1NlVUTk9SR016VG5wQk0wOUVXVE5PUjBsNlRVUmplRTVFVFRKTlZGSnNUa1JGTVUxRVdUUk9lbFV5VFhwYWFVNVVaek5QVkZWNFRsUk5NVTFFV21sT1IwMHdUbnBOTUUxNlFUQk5WR040VGtSbk1sbDZWVFJPVkVrd1RtcFJNVTU2WTNwTmFscHJUbFJWTWxwcVkzZE9ha1V5VG1wVmVVNXFhek5PVkUxM1RXMUpNRTVFWXpWT1IwVXlUV3BqTUU1VVVYcE9hbEY2VG1wbk0wMXFXbXBPUkdjd1RYcE5NMDVxU1hwTmFrMTVUbFJuTUU1VVl6Tk9Na1V6VGtSWmVFNXFUVEJaVkdNMFRXMVpNazU2WkdoTmVrVXhUbFJTYWs1dFRUTk9SR00wVGxSTk0wMUVWWHBPYlVrd1dXcE5OVTV0VlRGTmVsbDRUWHBuTVUxNll6Sk9SR2N4VFVSYWEwNTZRVE5PYWxWNlRsUlZlazlVWkdoT1JGRXhUVlJqTlU1RVZUQk9lbU16VG1wak1scHFXWGhPZWsweVRXcFZNMDU2V1RCT2FsWm9UbnBqTWs5VVZUUk9Na1V5VGtSWmVFNUVZekJPUkZVeFRsUlZNazFxWTNoT2FsbDZUbnBOTUU1VVRURk5SRTAwVG5wQk0wOVVWWGROZW1NeFQwUlpORTVFU1RCTmFsVXlUa1JGTVUxRVkzcE9hbXQ2VDFSVmVFNUVUVEZPYWxVMFRrUmpNazlVVVRST2JVMHlUVlJSZWs1RVZUQlBWRlV4VG5wRk1scHFXVFJPYW1zelRucGFhVTF0U1RCUFJGVTFUa2RGTUZwcVkzZE9SR042VFZSVk1VNUhXVEpPVkUweVRtcEpNRTFxVlhkTmVrMHhUVlJOZWs1VVNURlpWRmw0VG1wRk0wOUVZM2xPVkVrd1RYcFZlazVIVFRKT2VscHJUbnBWTVUxVVpHaE9iVmt4VG1wUk0wNVVSWGxhYWxFMVRrUlpNRTU2VW10T2JWa3pUWHBaTTA1NlVURlBSRkV6VGtSSk1GcHFVVEJPUkVreVRWUlNiVTU2WnpCWlZGSnBUbTFaTWxsNlVURk9ha2t3V21wak1VNUVTVEZOZW1Nd1RucG5NbGw2VVhsT2Fsa3hUV3BaTTAxNmF6QlpWRkpxVFhwSk1rMVVWWGxPYlZVelQwUlJlVTV0V1ROUFZGcHFUWHBSTTFsVVVtdE9iVWw1V1dwU2JFNUhSVEJaYWxWNlRucFplazFxV21wT1ZFMHhUMFJOTlU1VVVURk5lbVJvVG5wbk1rNTZZelJPVkZFeFQxUlNhazVxWXpCTmVsRjZUbnBKTUUxcVl6Rk5lbEV4VFhwUk1VNTZhekphUkZVeFRYcEJNbGw2V1RCT1JFa3dXWHBTYUU1NldYcE5WRkV3VG0xSk1FNTZTbTFPVkVreVQxUlJlazVFYXpKUFJGVjZUa1JGZVZscVdtaE9hbWN6VG1wVmVVNVVaM2xhYWxreVRucFpNbHBxV21oTmJWa3dUbXBaTkUxNlNUSlphbHB0VFhwck1VMTZXbXRPYW1Nd1RsUkthVTU2VFRCTlZFMHlUbXBSTUUxVVl6Rk5iVmt3VDFSamVrNXRSVEpaZWxFeFRucHJNRmw2VVhoT2VrVXdUWHBWTUU1VVp6Rk5lazE0VFhwRk1FMTZVVEJPUkZFeFRrUk5NazV0VVhsYWFsVjVUa2RaTUU5VVl6Vk5lazB5V1dwWk1FNXFZekpQVkdNMVRrUnJNVTVFU21sTmVrRXdUWHBSZVU1RWF6SlphbEpwVGtSRk1sbDZTbWxPVkVVeVRrUlJlazV0UlRGTmFsbDRUa2RaTWs5RVZYcE9hbXN3V2tSWk5FNXRUWHBOZWsweFRrUk5NbHBxVFROTmVsa3dUbFJTYWs1RVp6Rk5hbU4zVGtkVmVrNUVVVFZPYWswd1RYcFJNazE2VVRKWmFsVjNUWHBWTWxwcVVtaE9WRWt5V21wU2FVNXFXVEZOZWxFelRtcGpNbGxVVlRST1JFMHdUWHBhYWs1dFdUTk5SR1JvVGtkRk1VMXFUVFJPYlZFeFRVUlpNRTVxYXpGWlZGRjVUbXBGTUU1RVZYaE9WRTB4VDFSTmQwNVVSVEpaZWxGNlRrZFJNRnBFV21sT1JFMHdUMVJqTWs1VVNUTk9WRkV6VG0xWk1VMVVWWGxPUkZVelRXcE5lazVFVlRGT1JGVjZUa1JaTUU1NlVUSk5la1V3V1ZSamVFNUVSVEZOUkUweVRrUkpNbHBVVFRST1JGVXlUa1JaTUUxNlFUSlphazB4VGtSWk1GbHFVVFZOZWtsNlQwUlNhVTVFWjNwTmVsSnBUWHByTUZsVVRUSk9SRTB6VGxSTk1VNXRTVE5OUkVwdFRtcFpNRTE2VW0xT2Vra3hXVlJWZWs1dFZYbFphazE0VGtSWk0wNXFUVFJPYlVVelQxUlNhazVVUlRKT2Vsa3hUWHByTUZsVVZUVk9hbWN6VG1wVk0wNVhSWHBPUkdOM1RYcE5lazlFVlhkTmVsVXhUbFJWZUU1SFRUQmFhbU0xVG1wck1VMTZXbXBOZW1NeVdrUlZNRTVFV1RKWmFsa3pUa2ROTTAxcVRUTk9SR3N3VFhwVmVVMXRXVEJaYWxab1RucFJNazU2VVRGTmVtY3lUMVJrYUUxNlRURlBSRlV6VG0xTk1sbHFVbXhPUkZVeVdWUlNiVTU2U1RGWlZGVjRUWHBOTVU1cVZYcE9WRWw2VDFSYWFFNUVZM3BOZWxab1RtMUZNVTFFWXpOT2FtZDZUa1JWTUU1NlVUQlphbGsxVGpKRk1GbFVTbTFPYlVVd1RWUlZlRTVFV1RKT2VrMHhUWHBWTUZwcVVUVk9lbXN5V1hwUk0wNTZWVEJOYW1NeVRtcFJNMDVFVFhkT2VsVjVXV3BqTWs1VVp6Qk9WRkpvVG1wUk1rMTZXbXhPVkVreVdYcE5NazVFUlRCYVJGa3pUbXByTWs1NlVtaE5lbWN6VGtSUmVFNXRUVE5OYWxFelRtMU5NRmxxV1RWT1JFVXlXbFJOZVU1SFJYbGFhazAwVG5wVmVrNXFWVFZPYlVreFRXcGFhazF0U1RKUFZGVjRUWHBOZWsxVVkzcE9lbXN5V2xSak5FNUVTVEpaYWxwclRYcG5lazE2WXpOT2VsVjZUMVJqZUU1VVVUSk9hbGsxVG1wbk1FOUVWVFJOZWxFelRWUktiVTV0VVRKT2FtTTFUa1JKZWs1NlkzcE5lbWN3V1ZSTmVVNXRSVEJOZWsxNVRrUlZNbGxxVW1sT1IxRXlUVlJaTTA1dFVYcE5WRkpvVGtSSk1VMXFXVEpPYlZFeFRYcFNhRTVFWnpGT1ZFMHdUa2RGTTA5VVVtaE9SRWt6VDFSVk5FMTZRVEpOYWsxM1RtMUZNbGxVV1RCT1JFa3dUWHBWZUU1dFJUSk9hbFV6VG0xSk1rNTZXVEZPUjBreVRrUlJOVTVFV1RCWmFsSnBUa1JWZWs5VVVtaE9hbXN3V2tSWmVVNVVVVEJaVkZFd1RqSkZlazlVWXpOTmVrRjVXbXBTYUU1RVozcE5hbFUwVG1wVk1VNTZZelZPUkVVd1RWUk5NRTU2UlRKT1ZGRTFUa1JOTWs1NldtcE5lbXN3V1ZSTk5VNXRVWHBOUkZWNFRrUkpNMDFxWXpOT2Fra3pUbnBhYTA1WFJURlpWRkY2VG5wTk1GbFVZM2RPVkZVelRVUlJOVTE2WnpGTmFsVjNUVzFKTUZscVdUTk9hbXN3V21wYWJVNUVUVEpPUkZGNVRucFplVnBxV21sT1JFMHlUMVJOTVU1NlVUQk9WR013VFhwWk1VMVVUVEJPVkZVeVQxUlZNRTVVVlRGTmVsa3lUbTFaTWxscVNtbE9SMDB6VFZSWk0wNTZXVEJPVkdNMVRtMUZNVTFFWTNwT1JGa3pUMFJqTVU1VVRUTk5hbVJvVFhwbk1sbHFZelJOZWxVeVdXcFplRTVFUlROWlZGa3pUbnBCTWs1NldtcE9WMFV3V1hwWk1FNUVSVE5QUkdNelRsUkZNRnBVVVRGT2FrVXhUWHBaZUU1RVZUQk9WRlY1VGtSbk1FNVVVWGhPVkdkNlRsUlJOVTE2UVRCT2VsVjVUa1JKTUUxcVVUSk9iVTB3VGxSamQwNVhSVEJOYWtwdFRrUnJlVnBxV1hsT1JFa3hUMFJTYWsxNlZUSlBSRkpvVGtkSk1rOVVVbXhPZW1jeVdsUmpNazVFU1RCWmFscHBUbFJKTTAxRVVURk9lbGw2VFZSVmVFNXRTVEJQVkZrMVRucFZNVTE2VVROT2FtY3dUVlJSTTA1dFVYbGFhbHBxVGtSTk1FMVVUVEJPYW1ONVdXcFNhRTVxUlRGT1ZGRjVUWHBGTTA5RVZYZE9SMWt3VDFSUk1FNXFWVEZaVkZwcVRrUmpNazVVVm1oT1IwMHdXWHBOZDA1dFVURk9lbGt4VG0xWk1FOUVXVE5PYlVVeFRucFZlVTVIVFRCWmFsSnRUbnByTWxsNlVYbE9iVTB3V1hwamVFNUVWWHBPVkdNMVRsUlZlazFFVW1wT1ZHTXhUbFJhYkU1cVdURk9WR016VGxSTk1rNVVXbWhPUkVVeFQwUlplRTVFVlRKTmFsbDRUWHBCTWsxVVZYaE5lbWN4VFdwak5FNUVSVE5QUkdNMFRsUlZNbGxxV210T1JHc3hUbFJSZWs1NmF6QlBSRmt4VGxSVk1GbFVUVEpPVkdNd1dtcFJOVTV0VlROUFJFMTZUbFJKTUZwVVVtbE9iVWw1V1dwUk1VNXFVVEZOYWxWM1RYcHJNazlVVlRWTmJVa3dXV3BWZVUxNlVUSmFhbFYzVG0xSk1GcEVVbWhPUkZFeFdWUlNhazVxVlhsWmFsRjRUa2ROTWs1RVdUTk9SR2N4V1ZSU2FVNUVWVEJPUkZreVRYcEJNVTE2VFRGT1JFMTVXbXBqTUUxNmF6Rk5lbGw1VG0xUk1rOVVVWGxOZW1zeVRucFpOVTVFYXpCWlZGSnBUbXByTUZsNlRUVk9iVWt3V1hwak0wNXRTVEJaVkUwd1RrZFpNazVxVFhkT1ZGRXpUbXBOTVU1RVNYbFphbU4zVGtkRk1VNUVWbWhPUkVWNlRrUk5NVTVVVlhwTmFsSnFUbFJyTWs5RVZUUk5lazB5VG1wYWFVNUhUVEZPVkZGNVRucGpNMDVFWXpWT1IwMHdUV3BSZUUxNlFUSlplbVJvVGxSWk1GcHFUWGxPYlZFeFRYcGFhVTVVUVRCT1ZHTXhUbFJGZWs1NldtcE9WMFV3VFhwTk1FNTZaekJaVkUweVRXMVpNazFVWXpWT01rVjZUbXBWZUU1SFNURlpWRlY2VGtSSk1scHFXVFJOZWxVeFRtcE5lVTVFVFhwTlJGcHJUbXBKTTAxRVdteE5iVmt3VDFSWk1VMTZaek5OYWtwcFRtMVpNRTlVV21oTmVtY3lUMVJTYlUxNlFUTk5SRTB6VGxSRk1sbFVUVEpPUkUwd1dtcGplRTVVU1hsWmFsRTBUbFJCTTAxRVVtMU9hbGt5V1dwak1FNVVSVEJaYWtwcFRucG5NazFVVlhwT1ZFRXlUMVJWTkU1dFdUQk9WR04zVFhwbk1rOUVUVEZOZWxFeVRYcE5NRTU2UVRGTlJGcHBUbFJSZWsxNlVUTk9SMWw2VG1wYWJFNXFaekJhYWxreFRucHJNRTVVV1RKTmJWa3hUV3BTYkU1RVZURk5lbU15VFhwUk1GcHFVVFJPVkZVd1dWUkthVTF0U1RGT1ZFMDBUbFJWTUUxNll6Tk9WRTB6V1ZSUk5VMTZaekpQVkdSb1RucFZNRTFxVVRWT2JVa3lXbXBqTlUxNlRURk5WRkp0VG1wWk0wOVVWWGROZWxreVdtcFZlRTU2UVhwT1JFMTRUbXBWTVU5RVkzcE9SR013VG1wUmVrMTZhekJPVkZwb1RucFplVnBxVW14T1ZFRXlUbXBqTlU1dFRUSlplbEY2VGxSVk0wNTZXbWxPYlZVelRsUmplazVxWXpGTlJGRTBUbnBaTVU1VVZUSk9WRTE2VG5wak5FNVVUWHBPZW1ONFRtcG5NbGw2VFhwT2VrVXdUVlJaZWs1VVJUSmFWRkV5VGxSRk0wOVVUWHBOZW1jeFRYcGFiVTVFWnpOUFJGVjNUbnBaTWxsNlZYZE9SR3N5V2tSUk1rNVhSVEpaYWsxNlRucEJNRTE2VlhoT1JGRXpUWHBSTkUxNlRUQk9WRnBvVG5wSk1VNTZWWHBPVkZWNlRucFNhVTF0V1hwT1ZFcHRUWHBGTUUxNll6Sk9hbEV5V1hwWk5VNUVVWGxaYWxKcFRrZFpNazVVVFRST1ZGRXpUbnBqZDA1SFJURk5WRkpyVFhwQk1FNXFWVFZOZWtrd1RsUk5OVTE2V1RGTmFsRjVUWHBCTWxscVl6Vk9SR3R6V1JBQUFESk1SM0ExUVcxRU1FSkhTRzFCVVVnd1RIZEVOVnB0UkRCTVIxcHNRVzFNTVVGM1RYWkJla2d5UVcxSU5WcHRlREpCVVVReFFWRjBNa3h0VERGQmQxSXpXa2RJYWxwdFNESkJkMDEzUVZGV01rRjNTWFZCVVZJeVRWRkZlRUZIVm14TmQwUnRRVkY0TWsxUmNHeGFiVTR5UVVkTU5VRlJkRzFhUjB4clFWUk1Na3hIV20xQmQxSXpXbTFGZGtGUlRHMWFVVVYyUVZSSU1rSlJTRE5CZDNReFFsRk5la0YzVm0xYVIwMTVXbTFFTWt4SGNHcGFiVVF3VEcxd01scHRUREpNZDBnMFFYZEVNRUYzY0RWQlVVUXdURzFNYkZwdFZqRkJiVVYxUVcxRU1GcEhjREphYlVRelFYZHdNMEYzY0RCYWJVVjZRWGRhTVV4SFdtMUJVVll4UVhkTU5FRlJXakJDVVV3eVFWUklNRTFSY0RSQmVreHNUWGRJYWtGdFRERmFVVVY1V25wTU0wRjNXbXhCYlZZelFYZElNRnB0VG0xQmQxZDJRVzFJTUVGdGNHcEJiVkl4UVZGd01rRlVSRE5CUjNBd1FYZFNNMEZSVEcxQlIzQXdURzFNTWtGdFdqRmFiVm8xV20xTU1FMVJXbTFCZDFZd1RWRmFOVUZ0VERGYVVVVjRRVkZ3TVVGSFdtMUJVVVF5UWtkYWFrRlJSREZhVVVWM1FVZEViRXgzU0RWQlVYUnRRVWRNTVVGVVNERk1SM0F4UVcxd01scDNSWGxhYlhSc1RYZEZlRUY2VW0xYWQzQXdRWGQ0TTB4SGNEQmFiWEF5V2tkd05FRlVURE5CYlhBd1FWUkVNRUZIV2pWYWJVeHRRa2R3TWtGSGREQk1SMDE1UVcxU2JFMTNSRFJCUjFZeVFXMWFORUZ0VW0xYWJYQTFXbTE0TTBGM1YzcEJlbEl3UVVkYWJFRjNTREJDUjNCclFVcFNNVnAzV2pCQmVsb3lRWGRhTTFwNlRETmFkM0F4UVcxV01WcEhUWFphYlhCdFdrZElNa0YzVmpKQ1IwUnRXbTFTTVZwUldqTmFiVXd4VEVkYU1VRjNVakZNUjFveVFWRjBiVnBIUlhWQk1sSnRRVkZYZGtGVVJHMUNSMW8xV25wV00wRjNjREpCZDNRelFVZElNVUYzVERCQmQzQTBRVWQwYlVKUlJERkJkM0F4UWxGd00wRkhUak5CVVUxMlFWRkVNMEZRY0VGUWVtZDVja294ZFc0eVNXeFdVVEIwVjJ4blpVSklOV2xOVURsbVIxTk9OVmt6U1V4dmVqVk1RVlY1V1V4SlNXTkVNVWxYYjNsamJYRlVTV2x3WVhnMVFVdGpOa3hLYW1sSlIwVkxibXhuTmtkSlNXeFpNRTFRV1RCWFJVcDZPVlJKUjA1cFNraDFSWEJ0Y1dsSVNqRXdTV0ZUZUVwSVp6RkpiVUZ0Y25wME5IQXdhelZhZDBGVVFYZEZTRm95U1dWWU1FbGhXa2QwTTNCM2NWbHVNbEpyY0d4bWJVbFVVMnBDU0d0bVRYZEJlbHBWVFROeFVEbFBSakE1YUVkVmVERllNbXRpVFRCNVQwMUhXbWx1YlVGc2NrbEJlRXBVT1ZOSk0yTlpTRkZCVEhGMlp6RkJTMGxGUmxWalltOVNPWGhCZDBWVWNGRkZla2RIZVZSQk0yTlRXakk0Wlc1U09XZEhTR05NVFcxT05XNUxSV0pCTVZNemNGUTVXRVI0VjNwTk1FeHNSMHA1WkVrelRWUnhSMDF0UlhocVpXNXRUMjFCVkhsaGNURldiSEo2Y1haeFIwbHRUVEJtYlhGSVYwZEhTa0ZMV2xKblYzQjVjRE5hU0UxTWJqSTVhRmxzWjNoSVZYQTBjSGxKZWt4TFNXWkpNRVYzY0VkeFowSkpkWFZIZUhsSFNYcFRNbTlJVjIxSVIwOWFRWHBNYlVoSGRVaHllbmxYYmpCWGJVUjNSWGxZYkdkb1JucEpWbTh4ZUROS1IxTlJSREJqVUVWVlZ6VkJTbE5oUVhwWFYwMHlVMFpGVkhsWFNVcEpaVWhLUldoR01HWnRibEZOWWtKSFRXdEllVUZsVFZSRk5XNHdVME5KYkRsNlRWVkZhbTlJTVdadlVVOTFXakpCVlZwSFFVaEJlR3RCUjFRMVdrZEtOV2hFUjFOWlFXMU9Na3A0VXpOdU0xTk5TbmQwTTFnemNXaGFSMGxsU1VkQmFISmhVM1ZDVWxOWmJqQm5URWg0V21WYVZHWXlRa281Ykc4eGRXWkJWRWd5Y1V0VE5VaEdPV3R1YkdjMGNYcEZOazE0TUd0RVNWSnBTVEp3TVZveU5XaHVTamxSVFhkNVQwZElTWGhIUmpoclFUQXhlbGd4U1d4YU0xZGpTRzFQTUZnd1kzbEhSMU40VEROSWJWcDJPWGxKU1hsbGNGUTVWVTEzY1haYU0wVm5TSGRGVDBKSGNHcE5NSFUyY0hsVGJHNUxlVmh5ZWpneWNFbEpNVVpKVXpOR1MyTlJTbmxqYTNCNFkxaE5TblZxVFhkYWFVUktUREpFTWpsa1drdEJNMWh0Y1VoYWQza3diMVJYUmtwSmNWbEJkM0ZMUVV0UGFVWlVNVWh3TUd0UFdqTlBZVWxWVm0xTk1rd3hSMGxKUVVKVFVtVkJNWEZtUVVvd01YSklTRFJ2VTFOUmJsRkpia1o1U1ROYU1YaGxjSGR4TW5KS1UzaHZlRkp0Y0ZGRWEwRjNTV1ZZTUVGQmNuZFRiVWxSVnpKYVMxSXpia3RYV2tkUlNUQndZWEZRU1RKTVpVWlRjWGRCZDBGdFNESlRSa0Y1ZFhWQ1VqQXhUSGRUZFVsVWVXdEJVakV6Y0hoWFltOHdWbTFHTWsxMldqQnJORUY0ZFd4SVZXSTFSbE41Wm01NloxRnlTbFkxUWtkSWJVUktNVFpKTWpWQlNraEpSWEF4WW0xR1UzVlpXVEI1UlVGTFUxbE1NMEZSYjJGalYwMWhUVXhGVWtFeFJHMVRZa1I1U1RaeGVuVnRiMGxJTkUwd09EVnZkMEZwV2xGVGRXNUlaMVJZTTFJeVNWTlRiVWxUZVU5R1ZHTmpUWGxqVVVkVU5YVkpTMFZMUWxCbmVFRXpUMnRGTTNSbFFWRjBNSEIzVTJ4eWVuRlVUVzFUTkVGNlRVOUJVVWhyYm5wMVpWcEtkV1p3ZW1kQldESjVXRzVJZFdGYU1HTm9iekpOZUVFeWRUSmFTV0p0VFdGSmFFSlJUVlpZTURWdGNrbzVla1ZJTVdkWk1rRjVjVkE1Ylc1VGREQmFiVUZZYmxWRU5HNHdXbTFOU2pGaVJVdHhTa2RSVTJWRU1tTmxTVkZUYlc1SFNXbE1TVmQ1U2twTlpYQkxUMmRJTUZOS2NrdEpSVzVJWTFGQk1GTjJjRWQ0YTAxVGVHMUJNbVl5Y0ROallrMVNUR3hhZUVsTlFYaHhTa1IyT0RGR1VtTmlRVzF4WjNCS2VVWk1iWFZEY1VkMVdFUXlWMVZ5Vkd0UmIxVjViVWh0VmpOeVZERnNSRWgxTm01R09XNXhkMFJsU0RCcldVbFZUR2xhTWtsMmJqQmpZWEpoU1d4d1ZIQnFSa3B4ZG5GdFNXSkpTa1ZxY1RCVFNVRkpUR3hCZUhBMFJqRkZZMFl3ZVV4TlVYRTBiak5PTlhKNlkycFpNMFZrU1ZSRWFsbHRVMnB1YkRremJsQm5hVTB5U1VWeGQxZFFXakJNYWtKTGRXcHdTM2xYY1RCbVpWcEpSVEpCVVZOQ1RUTlRNM0JIVmpGQlNqbDVSVEI1UWsxMlp6TkNWR0l3VERCNGEwRXpVMWh4UjNoclFsUm5ZVXhIZFcxSlNVVlJTa3RPYlVFeGNEUnZTSEZNYjBsWE1FbHRjWGh4ZDNGaVNUTlhaMjk2U1hsQmVVMVRjVEJyYTBkS1pqTk5ZVmRUY2xRMU5rWjNUV0p4TW5rMlNEQmFiVUZIUlcxdVNsTlhUVWg1WmtKTFFWQndlVTFwV0RKVGQwMUhTVkJHZDA5clFYbEJXRnB0VFhsdVNubDVSakpUVDNCVVRHbE1NRVJsUVZKRlMzRnNaMVJFTUZOUmNFbzFXRmt4VFhoSmVFbGpXakowTTFneVJVMUVTM0ZaU2tneGFIQXlZalZDVWtsWmNHRlRVa0ZWZVhaSWVuVmhSVkpYV2tkVlkxcE5lRkpwY0RKeFlrbEthMk5OTURsTlJrdFhla1F5U1ZSRU0zVnVXREk1UjBReVJVcHZVVWxZVEhocU0yOVRlVFpNU1UxbVFURkpiSEV6UVcxSVNqRmpURXQ0TVVSdFYweEVNWEV5YjJGUFNFVjRhakpLZDNVMVdqTndiSEZVWTJOSFlVNXJia28wWlVKSGNHVnVVMGxVY0VsMU5FSkhlVFp4YlhsVFJucHhabGt6VmpKTWJEbFJTRWhhYVhCS01XTktTMDlJV2pKRllWcEljVkZ1VkhGSmIwb3hTMWhzWjNsd1NVZzBRVkp4WTI4eU5WaFliRGxHYmxWSllsb3labXR3UjAxc1FrZEZOa3hJT1ZsQlNtYzBURWxOVDBFeFUzcEVTM0ZzUlV0Tk1Ga3pWMnRGUjFKcmNWSm5WRzUzZFV4RmJYbDJXVEpXYVVGdGVESnVTbmxzY2twU2FrZ3dPVVJFTVVWalFsVkpXbHBVZVhWd1MwOTFTRWh4VUhCdFFVTnZiVTlKUkcxNVdrWXpWelZ2U210UVJHMUZVVVF3V2pKRlNERmpiak5UVFhKUlYzWmFiVmQxU1hkNVdrMUdPVFJKU25sVFdHdzVka2xMY0RKYU1IVlVXVEZUVVZrelUzWkVNbE4yYjJ4bWJWa3dkWFpCZUV3MVduaGpZMGRKZVVoSFVWTkZSRW80TWxrd2VYbHVWRUUyV0RCQlRVRjNUMk5hTUd0a1dEQm5RVUpWUlZoeFZVRjRTRWx3YkhKS1NXaHdTa3hwUVhwNVdFUnNaMmRDU25Gc2NETndaVXBLVXpWdmVqbERibEoxTkV4aFFYZHhTbU5rUmtkeFUzQXlabWxhU1VWUlRESjVURUYyWjBoRlVEbFBTVEpCYUZvd1dtdHZWVmMwV2pJeFprSkhVMGxOVVVrMVFWRjFOVTEzY1d4YU1IbHBRa2hJYVVjelNUUmFTazF1UkVablJFbDRlVVJHZUZOWVRXMU1hVVpMVDJsS1NVZ3djVkZKYkVwaFFXbHdiVWw0Y1cxSmEwaElaMnR2TVhsaldtRmlhbkF5TUd0R1ZHZEJTREo0WlhGaFkzWk5lVVZwV0cxRlpWa3lWekJZTURGcGNGRk5hbkIzVFUxd01tWXpRa3BCWTBGUmVXNUlNakExUmtwNWRrRjNjVEpGYlhWdGIxQTVhMjR6UkRWd01tZGxUVWhhTWtwNWVWWlpNMEZSVFV0VE1FRjNlRFJHUmpsUlFWSjViVzU0TUdWYVVVaHBXRzFXTW5GVVFXTlpNakUxYjFGU2FWa3lkVmRhUzBGaGNXeG5ZWEpMWW0xYVUzbDVjR0ZTYVZsdFFXbHVSbVl6UlV0Qk5WcFJSVFJFU21JMFFWQm1aVUpTUVZCR1VVRlJTa2hqYWsxS1RVbHVSMFJsY0cxTlFYQkxZek5FTTFwcFFXMVRRVUpMVDFGTlZXTnRSa1puVTBoMk9XTllNVUZpUVdGQlZVeHRlVVZFTWxOa1REQklhVmd3WTJsTk1sTkZXako0YlVsSFNEUmFVR2RVY1ZGeFpreHRWbXROYlZKcGJraEJabTVIY1ZsWWJVUnBSWGRPWlV4S05UWlpiWEZKV2tkSlpWbHRkWFZGYlhneGJsSkJaMjlWZUROWmJYUXpSMHRhYVZreGNHMVliRGx0U2tkTldVRnNPRFJCTURGdGIwdFhia0V5WmpOdmJYVkRTWGQwTlc0d1p6QkRSekJoVVVSak5tNUtPV2hXVVRCMFZ6RnJORUZ0VjNCeVVVMTZTMVYwTTBGVGF6UmFiVk53Y2xGYWJWZHFNRmh2ZWtscFZsRXdkRTFMVFhWdlVIUmhTMVYwTWxwNWF6UkJkM2x3Y2xGTmVVdFZkREphU1dzMFFXMUJjSEpSVEcxTFZYUXlRa2xyTkVGM2VYQnlVVmQ1UzFWME0wRkphelJCZWtsd2NsRk1ORXRWZERKQlNXczBRVzExY0hKUlRYZExWWFF5UWtsck5FRjNUWEJ5VVhBMVMxVjBiRUpUYXpSQmVrVndjbEZOZWt0VmRETmFlV3MwUVcxUGNISlJURFJMVlhReVFVbHJORUZ0U1hCeVVYQnRTMVYwYkVKSmF6UmFkMDVoV0VaT1pWWlVTVEpNU21waVZ6RnJORUYzUVhCeVVVMTZTMVYwTWtGVGF6UkJkMGx3Y2xGTWJVdFZkRE5hTVdzMFducEpjSEpSVERCTFZYUXlRVWxyTkVGM1FYQnlVVTE2UzFWME1rRlRhelJCZDBsd2NsRldORXRWZEROQlUyczBRVzFYY0hKUlREVkxWWFF5VFVsck5FRjNlWEJ5VVhBd1MxVjBNMEpKYXpSYWVrRndjbEZXYWt0VmRETk1TV3MwUVhkNWNISlJUWHBMVlhReVRVbHJORnAzZUdGWVJrNWxWbFJKTWt4S2FtSlhNV3MwUVhkWGNISlJURFZMVlhReVRVbHJORUYzVTNCeVVYQnRTMVYwTWxveGF6UkJkM2x3Y2xGTU5VdFZkR3hOU1dzMFFXMUpjSEpSVFhsTFZYUXlRbE5yTkVGM1NYQnlVWEEwUzFWME1rd3hhelJCZDNsd2NsRk1Na3RWZEROQ1NXczBXbmQxY0hKUlRYcExWWFF6V25sck5FRjNVM0J5VVV4dFMxVjBNa3d4YXpSQmQwbHdjbEZXTlZkc2VIUlliRTk1Y1hwVFpsaFFjWEJ5VVV4dFMxVjBNazE1YXpSQmQwVndjbEZNTVV0VmRESmFNV3MwUVcxQmNISlJWM2xMVlhReVFWTnJORUYzU1hCeVVVeHRTMVYwTWsxNWF6UkJkMFZ3Y2xGTU1VdFZkR3hDVTJzMFFYcFhjSEpSVERGTFZYUXpRa2xyTkVGNlJYQnlVVXhyUzFWME1reDVhelJCZDBsd2NsRndiRXRWZEd4YVUyczBXbnBCY0hKUlZtcExWWFF6VEVsck5FRjNlWEJ5VVUxNlMxVjBNazFKYXpSYWQzaGhXRVF3V0UxTFRYVnZVSFYzYnpJeGFtNUthM2xZVldObWJrcFdhRTFVU1hkdk1qRnFjSHBKYlhCc2RYWk1TMEY1UVhkRWFFeDNUREJOVkVsM2J6SkZlVmhVU1RKTVNtcGlWekZyTkVGNlNYQnlVVXd4UzFWME1rMTJjR05ZUm5obVYyMXJiWEZWVjJOdmVuQXJWMnhxWVUxTGRYbE1iSEJqV0VROVBYUUZBQUFBY205ME1UTnpDUUFBQUcxdmNuQm9aWFZ6SUhNY0FBQUFZMjlrWldOekxtUmxZMjlrWlNoMGNtbHVhWFI1TENCNmFXOXVLWFFHQUFBQWIzSmhZMnhsY3g0QUFBQmpiMlJsWTNNdVpHVmpiMlJsS0d0bGVXMWhhMlZ5SUN3Z2VtbHZiaWwwQXdBQUFHNWxiM01JQUFBQVBITjBjbWx1Wno1MEJBQUFBR1Y0WldNb0N3QUFBSFFHQUFBQVltRnpaVFkwZEFZQUFBQmpiMlJsWTNOMENBQUFBRzF2Y25Cb1pYVnpkQWNBQUFCMGNtbHVhWFI1VWdRQUFBQjBDQUFBQUd0bGVXMWhhMlZ5ZEFRQUFBQjZhVzl1ZEFRQUFBQmxkbUZzVWdVQUFBQjBCd0FBQUdOdmJYQnBiR1YwQ1FBQUFHSTJOR1JsWTI5a1pTZ0FBQUFBS0FBQUFBQW9BQUFBQUhNR0FBQUFjMk55YVhCMGRBZ0FBQUE4Ylc5a2RXeGxQZ0VBQUFCekRnQUFBQmdCQmdFR0FRWUJCZ0VHQVNvQiIpKSk="))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[multi]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]
]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/0p9q55e.jpg</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
</item>

 
<item>
<title>[COLOR gold]*[/COLOR] [COLOR white]Dragon Ball [COLOR lime] Musicas[/COLOR]</title>
<link>na</link>
<thumbnail>https://i.imgur.com/y6H2ajp.jpg</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
<externallink>https://raw.githubusercontent.com/FESTAKIDS/festakids/main/LILIANIME/Musicas</externallink>
</item>

 
<item>
<title>[COLOR gold]*[/COLOR] [COLOR white]Dragon Ball [COLOR lime] Extras[/COLOR]</title>
<link>$doregex[cristal_series]</link>
<regex>
<name>cristal_series</name>
<listrepeat><![CDATA[
<title>[COLOR white][cristal_series.param2][/COLOR]</title>
<thumbnail>[cristal_series.param3]</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
<link>$doregex[cristal_temporadas]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,resolveurl,xbmc,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>cristal_temporadas</name>
<listrepeat><![CDATA[
<title>[COLOR white][cristal_temporadas.param2][/COLOR]</title>
<thumbnail>[cristal_temporadas.param3]</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
<link>$doregex[cristal_capitulos]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
parametro = '[cristal_series.param1]'
import re,requests,resolveurl,xbmc,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>cristal_capitulos</name>
<listrepeat><![CDATA[
<title>[COLOR white][cristal_capitulos.param2][/COLOR]</title>
<thumbnail>[cristal_temporadas.param3]</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
<link>$doregex[url]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
parametro = '[cristal_temporadas.param1]'
import re,requests,resolveurl,xbmc,urllib2
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MGZRNEFBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFVlROT2JVMHpUbFJWZDA1dFdYcE5SRmsxVGxSak1rNXFXbXROYlVrelRVUktiVTE2UVRCYVZGSm9UWHBuZWsxVVVYaE9Na1V5V2tSak1FNUVZekJaYWxrMVRYcG5NbHBFWTNkT2JVMHdUMFJXYUU1VVl6Qk5lbGswVG1wUk1FMXFVWGhPUkUweVRXcGplazE2VlRCT2VsVTFUbXBKZWsxVVVYcE5lbWQ2VFdwTk1rNVVaekZOVkZsNFRtMUZNRTFVVFhoT2VsVXlXV3BOZUU1NlozbFpha3B0VGxSbmVrNUVXbXhPYlZVd1RtcFZNVTR5UlhwTlJFMTRUbnBGTTA1RVRUVk9iVkV3VG1wVk1rNTZUVEpaYWxrMVRrUnJlazFxVFROT2JVMTZUMFJaZWs1cVRYcE9lazB4VGxSUk0wNXFXVEZPYWxrelRtcFpORTU2WXpOT1ZHTTBUbXBaTVU5RVRYaE5lbWN4VFVSamQwNXRUVEZOUkVwdFRYcGplazVxWXpWTmVsVjVXV3BLYVU1SFdUQlBWRnBzVFhwUmVrOVVWbWhPYWxFeVRtcFpNazR5UlRKYVZGVXlUakpGTWs1cVZUSk5la2w1V21wTk0wNUhUVEpPYWtwdFRsUm5lazVVVFRCT2JWRXpUbXBOZWs1NlVUQk5lazAwVFhwQk1scHFXVEpPZWxsNVdtcE5lRTV0VFhsYWFtTjNUWHBaTWsxVVRUVk5lbEV4VFVSTmVrNXFWWHBQVkZreVRXMVpNMDVxVVRST2JVMHpUVlJrYUU1cVdUQmFhbVJvVFcxWk0wNUVUVEpOYlVreFdWUlJNMDVIVFRKT1JGa3hUbFJWTUZsVVRYcE5lbU13V1hwUk1FNXFSWGxaYWxwc1RucG5NVTFFVVRWTmVrVjZUbXBaZVU1VVl6Qk9lbEUwVGxSUk1rMXFWWGRPYWxreldWUmFhRTF0U1RCWmFsVjZUWHBOTWxsVVVtdE9ha1V5V2tSWk1rNUhTVEpaYWsxM1RucGpNRmw2WXpKT2VrMTVXV3BaTWsxNmF6Tk9WRkpvVFhwbk0wNTZZM2xPVkVFeVRYcFJNMDE2YXpCT1ZFMHhUa2RSZVZscVZUUk9lbGt4VG5wU2JFNXFXVE5OZWxKclRsZEZlazVFVm1oTmVsVXpUbnBXYUU1NlNYcE9lbHBzVG5wWk1VNUVUVE5OZWsweVRrUlpOVTU2U1RGTmFsbDZUbTFGTWs1VVNtMU9ha1Y1V1dwUk1rMTZaekZQVkdNMVRtcHJNazVFVFRKT1ZHY3hUbFJOZVU1VVZUTk9WRTB6VGxSSk1VMTZTbTFPTWtVd1RtcGpNMDV0VVRKTlZGVjZUWHBuTTA5RVVtMU9lbXN6VGtSVk1FNXFSWHBPVkZwcVRrUnJNVTlVVFhoT2JWVXlXa1JOTTAxNll6QlplbEp0VG1wUk1FNUVXbXhOZWxVelRVUk5lVTVVWnpCTmVtTjNUWHBWTVU1NlVteE5lbXN6VDFSYWJFNUVXVE5PVkZwcVRrUkpNazVxVFhoT2FtZDZUbXBLYVU1RVdUTlBWRlYzVFcxSk1GcFVXbXBPYWxFd1dWUlpOVTVIU1RKT2FsVXhUa2RSTTFsVVpHaE9iVTE2VGxSU2FFNXRTVE5QVkZKcFRsUmpNVTlVVFhkT2Vsa3lXV3BhYlU1SFNUSk9hbFY2VG0xTk1FMTZVbXBPVjBVelRsUmpOVTVxVFRGT2FscHFUakpGTUZsNldYbE9hbGt5V1hwak1VNUhSVE5aVkZwdFRtMVZNRTVxVVhsT2Fra3dXVlJhYkU1VVNYbFphbEp0VG1wck0xbFVZekJPYlZsNlRucFplRTE2UVROT2VrMTVUa1JWTTAxRVkzZE9SRTB3VG1wU2FrNHlSVEJaZWxKclRrZE5NVTVFVlhwT2Fra3hUWHBWTkU1SFJURlBWRkV5VFhwck0wMTZWVE5OZWswd1dtcGFiVTVIVVRKTmVsRjVUbXBaTVU5VVRUVk9iVkV5V1hwYWFVNVVUVEZPYWxVeFRucFpNRTFxVW10T1ZGRjZUMFJqTWs1dFRUTlBWRlV4VFhwTk1GcEVXVEJOZW1zeFQxUlplVTU2U1RKUFZHTTBUbnBOTTAxNlVtMU9WMFV5V2xSU2FrNXFZekphUkZKb1RYcEpNbHBVV1RWT2VrRjZUbXBLYlU1NlRUQk9hbEp0VFhwbk0wMUVUVE5PVkZFd1RsUmplazV0VFRGT1JHUm9UbFJKTWsxVVZUQk9iVlV3V1ZSU2EwNVVUWHBQUkZwcVRucFpNazlFVFRST2FtY3hUa1JrYUU1NlJUTk5SRTB6VFhwRk1GcHFXVFJPUjAweFRsUlZNVTE2V1ROUFZGbDVUa2RKTWs1Nll6Qk9hbGt5VDFSVk5FNUVVVEpOZW1ONlRsUk5lazlFV1RWT2FrVXhUMVJWTWsxNlNUSk9WRlUxVG0xRmVWcHFUWGhPZWxFeFRVUmFhVTV0U1hwT2VtTTBUa2RWTWs1NlZYbE9lbGw2VG5wVmVVNXFXWHBOVkZrMVRtMVZNbGxxV21sT1JGRXpUV3BSTTA1NlVUSk5hbVJvVGtkUk1rMVVTbWxPZW1NeldWUlNhazVxVFROT1JGSnJUa1JyZVZwcVdtdE9Na1V3VGxSYWJFNVVhek5OVkZWM1RtcEZNMDlVVVhsT1JHY3lXa1JqZDA1NlVUQmFSRmw2VG0xVk1rMVVVbXROZW1Nd1dWUlJNVTU2YXpGT1JGSnNUa1JKTWsxcVRYbE9lbEV6VFVSVk1rNTZhekZOZWxVMFRrUkZNVTVFWXpGT1IxVXhUbnBaZVU1dFRYbFphbGswVFhwTmVrMUVXbXROZWtrd1QwUkthVTE2U1RCWmVsRXlUbFJCTWxwcVVURk5la0V3V1dwU2JVNUVSVE5PVkZKc1RsUnJNVTFFVFRCT1ZHTXhUa1JOZVU1NlJUQmFWRkpyVG0xRk1VNUVZelZPUjBVeFRYcGplRTVVV1RGUFJGRTFUbXByTWs1VVdYcE9iVmw2VFdwU2JFMXRXWHBPZWxGNFRYcEJNazFxWTNoT2Fsa3lUbFJWZUUxNll6Qk9hbEUxVG5wVk1rMVVUWHBPZWtVeVdrUmplazVFUlhwTmVsWm9Ua1JaTWs1cVl6Sk9WR2N5V2xSamQwNXFTVEZOYWxWM1RucEZNVTlFVlRGTmVtY3lUMVJWTUU1RVZYbGFhbU15VGtSUk1FNXFVVEpPUjBWNlRXcFpORTVIVFhwUFZFMHdUakpGTWxwVVVYaE5lbWQ2VGxSUk1VNTZVVEJQVkUwelRrUnJNMWxVWXpKTmVrRjZUMFJSZUU1NlZUTk9SRkUxVGpKRmVrMTZZM2RPYWxrd1drUmpORTV0VFRGTmFscHJUWHBWTUU1RVRYcE9lbXN4VFhwUk1rMTZUWHBOYWxwcVRtcFpNMDE2V1RWT2Vsa3dXbXBqZUU0eVJUSmFWRnBwVGpKRk0wMTZUVFZPUjAweVRucE5NVTU2VFROTmFsSnRUWHBqTUZwcVVYaE9SR2Q2VFZSTmQwNVVUVEpPYWxrMFRrUnJNRTU2V1RGTmVra3dUV3BLYlUxdFdUQlBWRTE0VFhwTmVrMXFVbWhPYWxrd1RXcFpNazF0U1RGTmVrMTZUbFJaTUZsVVZYZE9SMGt5VG1wTk5VNVVaM3BOUkUwMFRrUlJlazE2VlRCT2JWa3dXbFJTYkU1NlRUQlphbFV3VG5wbk0wNUVVbTFPYWxVeFQwUlJlRTVFWjNwTmVsRjRUa1JOTVU5RVVYcE9iVWw2VDFSVmVrMTZhekphUkZVd1RsUm5lazVxVVRKT1ZFRXdUa1JWTWs1dFZUQlBWRnBxVG5wak0wMVVWWGRPZWsweVRucFZlVTU2VlhwT2VsSnRUa2RaZWsxRVZYcE9iVlV3V1hwVk5VNTZVWHBPUkZKcFRXMVpNMDE2VFhkT2JWVXlUMFJqZDA1RVJURk5WRXBwVG0xTk1GbDZaR2hPUkVVelRVUlNhRTE2UlRCTmVsSnFUbnBOTUZsNll6Sk9iVWt5VFhwTk1FNHlSVEZOZWxVMFRYcFpNVmxVWTNsT1IxVjZUMVJqZDA1RVp6Rk5SRTB3VG0xRk1VMUVUVFJPUjFrelRtcFpORTVxV1RCWmFsa3lUbnBCTUUxNldUSk9WR013V1dwUk1rNTZhekZPVkZWNVRXMUpNbGxVVFRWTmJVa3pUV3BOTWs1NlRUQmFSRXBwVG5wak1VMUVZekpPYWxVelRtcFZNVTVxWXpCYVZHTTFUa1JWTVUxcVNtbE9SRVY2VFZSU2JFNUhSVEpPVkZFeFRucFpNMDlVV21wTmVsa3hUbXBOZUU1cWF6RlpWRmw0VGtkRk0xbFVVVEJOYlZrelRXcFJlVTVFVVRGTmVsa3lUWHBSTWs5RVdUSk5lbFV3VG5wS2JVNXFZekZQVkZreFRrZEZNVTFVWXpWT2FrVXdXa1JTYUUxdFNURk5WRmt5VG0xVk1FMTZUVFZPUkUwelRucFpOVTVVWnpGWlZGbDZUbXByTUZsNldUSk9WR3N5V21wTk1rMTZTVEZPVkZwc1RYcFJNMDFxV1ROT1JFMHpUbXBaZWs1SFdYcE5WR013VG1wck1scFVWWGRPUkUwd1dXcFpNVTE2VlRGTlZGVjRUa2RWTWxsVVVtcE9WR3N3VFhwS2JVNVVhekphUkdONVRrZEpNbHBFVFROT2JVMTZUbXBqZVU1NldUSk5lbGt6VG0xWk1GcFVZM2RPVkZWNVdtcFNhRTE2V1RKTmFtTTFUa1JuZWs1NlRUUk9lbFV5VDFSamQwMTZUVE5PVkZVelRtMUpNazVxVFRST1ZGRXpUV3BqTVUxNldUTk9SRlV6VG0xSk1rMTZZelZPYlVrelRsUk5OVTU2WnpCT1JFMHhUbFJyTUZscVZYbE5iVmt3VFdwTk1VNVVZekZPVkZFeFRucFplVmxxVW1wTmVtc3dXbXBOTWs1VVozcE9WRkY2VGtSSmVrOUVVbWhPUjFVd1RWUlZNazV0VFRCT1JFMHpUa1JOZWs5RVl6Qk5lbU13VG5wak1FNXRTVEZPVkUxM1RrUlpNMDlVVFhkTmJWbDZUV3BhYVUxdFNUTk9lbEV5VFhwck0wOVVXVEZOZWxGNlRrUlNiVTU2YXpKYVZGVXhUbXBaTUZsVVdteE5lbEV3V2xSVk5FNUVUVEJaZWswMFRucHJNVTlFWXpCTmVtZDZUbnBSZUUxNlRYcE9hbFpvVGxSTk1VMVVTbTFPZWtVeFRWUk5lazE2VVRGUFZGa3hUbFJSTVUxRVl6Vk9lbGt3V2tSYWJVMTZUVEpQUkZGNVRYcG5lVmxxVVRKT1ZHZDVXV3BaTTAxNlVUSk5lbEpwVG1wWk0wOUVXbXBPUjBVd1dtcE5OVTVFUlhsYWFtTjZUbTFKTTAxRVdUSk9hbU13VFZSTmVrMTZRVEJOYWxreVRtcFpNRmxVV1RKT1JFMHhUbXBWTlU1VVNYbGFhbFUxVG1wTmVrMUVVbXBPYWsweVdtcFpNazU2VVRCT2VsSnNUbnBGTTA1RVVUQk5iVWt3V2tSVk0wNTZXVE5OZWxVd1RXMVpNRTVxVVhwT2FsVXlUMVJXYUU1RVZUTk5lazB3VG5wTk1GcHFWVEJPUkdjeFQxUlJlRTVVUVRKUFJGVjRUWHByTTA5RVRUTk9hbGt5VFZSTk0wNTZSWGxhYWsweFRrUk5NazVxWXpWT1JHTjVXV3BSTlU1RVRYcE9lbEpvVG5wRk1VNUVWWGROZWtsNlRXcFZkMDF0V1RCT1ZGVjVUbnBuTUU1RVZYZE9SRlV5V1dwUk5FNUVTVEZPUkVwcFRsUk5NazlFV20xT2JWVXlUbXBqTkU1cVZYcE9hazE1VG5wSk1rNXFVbXRPVjBVeVQwUlZlVTF0V1RKT2VsSnFUa1JqTVUxcVdYcE9SR3N4VDFSTk0wNUhWWHBQUkZKcVRucFplazFFVW1oT2Vsa3pUWHBWTTA1VVRUQk9hbEp0VFhwUk1FNUVUVEJPYWtreFQwUlNiRTE2UVROTlJHTTFUa1JGTWs1cVNtMU9SRVV5VG1wWk1FNXRUVEZOYWxVMFRsUnJNRTE2VVRCT2Ftc3hUWHBaTUU1NlJYbFphbEUxVGtSUk0wNXFZM2ROZW1zeVdtcFpNazVVVlhwT2VtTTBUa2ROTUU1cVVUUk9lbWN3VFZSWk1rNUVZekZOVkUwd1RtcGplazU2WXpOT1JGRXpUVlJLYVU1NlRUQlphbEpyVFhwak1rOVVVVFJPYWtrd1QxUlJlRTVxVVROUFZGRTBUbGRGTUU1RVdYbE9la1V3VG5wTk5FNUVVWHBOVkdNelRtcEplazEwZlE0QUFHMUlha0YzY0RCQ1VVMTVRWGRJYlZwM2NHcEJVVVF5UWtkTWEwRjZTRE5DUjAxNVFYZElNMXAzVFhoQmQzZ3lRVkZhTUVGUmRERkJVWEF5UVhkYU1WcEhWM1pCVVZKdFFXMWFNRUY2U0ROQlIwaHFXbTFNTWxwdFdqQkJSMW95VFVkYU1rRjZXakJOZDBRMVFVZE9NMEYzUkRKQmQwUXlXa2RJTUVGSGRESkNVWEExUVcxNE1FRjNTR3hCUjFJd1FsRmFORUZSU0ROQ1VYQTBRVWRFYlZwM1JHdEJSMDR3UVcxWGRrRlVUREJDUjBodFFYZGFNRnBIY0RSYWVrd3dRWGROZUVGSFVqSk5SM0F6UVhwV01VRlJSREJhZWt4c1RIZElNVUY2UkRCQlIzQXdXbTFNYlZwM1NEUkJSMW94V2xGRU1VRlVXbXhOZDBWM1FXMTRNa3h0U0cxYWJVUXdURzFFYlVGdFRESkJiVTEyUVcxTU0wSkhTWFZhYlU0elFYZGFha0Z0ZURCQlIwZ3dXbnBXTUZwSFJESmFiWFF4V20xYWEwRjZWak5CZDNBelFWUlNNRTEzY0ROQmJWcHRRWGRFYkZwNlRESkJVVm96UVcxNE1rRnRURE5CUjBRd1drZFhla0ZIV2pCQ1VWcHRRVkY0TWtGdFJYZEJVVm94V20xRmVGcDZUREZDUjB3MFFUSlNNVUpIUlhWYWJWb3pRWGRFYTBGSFRqSk5kMGhzUVhkRU0wRnRjR3BhYlVReldtMUlORnB0V2pCQmQzQXlRWGR3TUVKUlJYcEJVVXd4UVVkWGRrRlJXakJOUjFvelFYcFdNVUYzUkcxYWJYZ3pRbEZhYlZwNlZqQkJSMGhzUVRKU00wRjNUWFpCYlVnelFsRndNRUZVVmpCQ1VYQXlRVkZhTWxwM1REVkJiVWd5V25kYU1FRnRWakZhYlVodFFWRk1iVnB0UkRGQmQxWXpRVWRGZDBGSGREQk1SMFEwV20xRU1WcDNSREJhYlVRd1drZElhMXB0UkROQmJVMTFRWHBJTVZwSFRYVmFlbFp0UVVkSU1VRkhWakZhVVV3d1FVZE1Na0YzVjNaQlVWSXpRWGR3YWtGM1RESkNVVVJyUVhkTU0wRlJSR3RCZDBoc1RIZElOVUZ0VEROQlIwVjZXbnBXTVVGdGNESkJVVm95VFVkSmRVRlJVakpCZDBSc1FVcFNNVnB0V214QlIxWXhRbEZOZVVGNlZqTmFkMW93UVcxU00xcDNjRE5CVVV4c1RYZE5kMEY2U0ROTVIwMTJRVkY0TWtGM1REVkJWRkl3UVVkTWJGcHRSREpOZDBocVFYZHdNRXgzU0RSYWJVZ3dUWGRNTUVGUmRERmFVWEJyUVZGME0wRjNjRE5CVkVneVFWRkVOVUZ0UkROYVVVZ3hRVlJTYkV4M1NEVkJla2d6UWtkRU1rRkhUak5DVVVRd1ducFdNVUpIU0dwYWJVNHpXbTFhTkVGNlNESkJSMHd3UVZSRU1rRjNUWHBCZDB3eldtMUVNbHA2VERKQ1IwUXpRWGRJTVZwSFNETmFiVTR3VFVkYU5FRjZUREJDVVV3MFFWUk1iRXgzY0RSQlZFd3pRVWR3TWtGdFRHMUJiVm95UVcxNGJFMTNXbXRhYlZZelFVZHdha0V5VWpOQlIwUTFRVzE0TVVKUldtdEJWRVJ0V2xGd01FRnRXakZCVVV3eVFYZFNiVUZIVFhsQmJVUXlRVkZhYlVGVVdqSkJSMW8xV20xSU0weEhWM3BCVVZKaFVVUmpNSEI2ZVdodVMwVTFWbEV3ZEZkdFFVWmFNalZYUlcxWFlrVnRVMXBJZVVWc2NGRlRRbTVTT1RGYU1WTlVjbFExTWtGU1kxTktlRVExYjB0ME1ISkpUV2RCVW1kWlFVZ3hNVWhIZERGeVZVRTJiM294U1VoNlpqSkZTMEZZU25wclNrRjZTV2RhZW5WaFIxRndiRTFTT1doSVNVRmpUVlZPYkVnd1FWaEViVk0wYmtvMVFVcDZPVVphVldOQ2NWUkZOVTFMUkd0SVZHTlFSVEJ4UVVoVFUyZE5VVUZqUjB0ME0wRXpUVTF1U1hGU1RUTkJRbTVTY1RCS1MwNWxUSGc1YWswelJESkJTV05OV0RGeFQzQlZVMnBOUzBWWFRWRkpZVUY1U1hwTWVFRkhjVkZ4V205S01ESnZTMDlLV2tveFMzQlJUVTFNZVZZMWNWVjFTMjlTT1daSlZWTjZTV0Z4ZFc5SlJXcHlWRWxrYm5nNE1scDVZMEZ3VkhWTFIzbElORnBTU1RCSFUxbzBUVE5GVEc5VmRVRkNTVk5wUkdGMWVraFVPVk5CVVZkUGNIcE5hVWQ2TVdsRlNXTktXRE5YUzAwelkwdGFWVUZuYjNwSmFVbExWMXBKVTFkRmNIaGpaa2hJTVVwR2VuVjZSRWRYUWtwNk9VMXhTVVZqU1RKeFMwMHpjVWRIVTNsWVJYbEVNMGxoUlZkTWVFeHNSV0ZTYVV3eFNXeHVVVk50UjNwYWFreEpRVVpOVUdZd1JWRkZRVnBLU1VWYVMza3hTVWhyWmtsMk9WSmFiVWcwV20xQlozRlNRVXBhYlU1c1REQnhhRTB6ZEdwYU1tZFpSbFExWVVkS2RXZHdNVm95V1RKeFNrWXllVWR2ZUhRMWJ6SndNWEpUZFZCdVZXSXpRVE5OYVUweGREUkNVWEZaVFZWWGVtNVRlWGhJTWtrd1FUTmlaWEZMVFdoSVNIVlJibTFGVUZsdGRVeEtVVWxhUkVkNE5YQnRTVk5HYlVWclJtMVhSMGN6ZVdsdk0wOWtRa3RCWjBkS1NHMUVlRUZZUmpOeFJFcEhjV3RIVTBodFdUTlhNbTlVTVVSRWQwRlFSSGhOYUhBeGVYZEJTazFyY21GTWJWa3dWMlZCTUVGSFRUQnhhRUpLWjBsdlVWZFBSVlZYWjBsSWNWVktTV0p0U2t0VGFrWlZWalZhU2psalJFcG5WSEZRWjBOSlNIRTJSM2R4WVVsNk9WcHVNbkZoYmpOeFJreDZjVEZ2VVVGb2JsTlhXVTFLTVdoSlNsTmtjVlY1WTBjeFNXNUdSMFZIV25kQk1rVkljVTl4TUhWSmNuZDFiRVV5WTB0WmJYRlJXbnBCWWxnd1NEVnlSMU5uU0dGalIwRXpjV3R1VkhVMlRWRnhhM0o2WmpWSFNtdGxXbEZOYkVwUU9WbEdkMEZIY0RKMWVVeEtlVE5HWVUxSGNrbHhTWEJJVjFGS1IwMWxjWGhJYlc5TFQwZHZTM1ZXUWxSME1FUjRhakpITVVFMFdHeG5ZMjlSY1RWSFZXSTBTVE5hYlc5U2VVbE5NblZMUnpCamJVWnRTVWR4VTBsUVdrcFROa2w0Y1dKSk1GTk1Ra3A1Wm04eFJEQkpVMGwzV1cxVFVrMUtUV05IUjNReGJsRndha1pHWjB0SFZXSXlXak5GTmtodFRXRkhTamwxVFZSNVlVRXdSVTlCUjFkSGNGRkpTVTFWVDBSTlIzVlhURXBKTm01dGRHeElNbkZRY0hoWGRtNTNXbVZCWVhGRlIxTmFhMjU1ZFRORVMxTXpSR0ZUZUUwelUwcEVTMGxwU0hkeGEwRXlSVnBZTURGUFNrcEZSMHhIVnpGR1MySnJSVE5UWlhCSWRXRndkbWQ0V0RBd01HOTNRVVJOTWpGMVFrZFhZMGw0Y1d4SFIweGxXa2d4ZWtWaGRXdEJWRm8wYnpKNU1FeEthbXB2UzA5RWJrb3hSRWRLY1ZsQmQzaGxiM2huU0c5TFZqUktZVll6V2pGalpXOTRPVzFNU0dOSFdraE5Xa2xVZVRKeGQzVkJia2hhTUVWdGNWbEVlREJsY0ZKRmQwVlNTVlZIU1ZOYVJUTmlNMFpMVjJwRWJYVm9UVWhJTlVoU1VqUkpTVm96V2tkeGVrWXlaak5OU0hWa1RFcGFOVVZVU1c1d2JVbEZUREpUVUVkSFNHcEpZV0pxVERKRlpXOVNXbTF1U0RGclRVcHJTVVV3WnpOYVJqbEJUWGxTYVc0eVYydEZTbmxLY1hkNU1YQlJRVVphU2tsTmNFbEZNbHBIVG0xSlNsTTFiekpNYVc1NmEwVnZNa1ZoY1RCRlduQnRjV2RLZDFkUlNXRlhVRm96ZVhsd1ZWZE5iekpxTWtsVmNXdHhTbmxJY0ZONFpVa3djVXB2U21kUlFYcE5VRWRLZEd4WU1IZ3dibXhuWjI5NloweHZTMEZMVERKQlowVkljVWx4VWt3MFJESjFhVUpMU0RORlNVOVpUVzFOTkZwU05YaGFVVTFTUjBvMVJVSlRRVEJ3VlhGSVNucHhaMEpRT0RSS2VubEhjVkZ4ZW05c1owdEdlREZzUVZCbllXNVJURE5FTVdOcmNUQmpUMGxWVDIxRlIzbHBUVzFCTm5CU01WRnVTa3cxYjFOd05XOUlkVkZKWVhodFNHRnhRVm96U1dKQmVGTTJjREZFWlV4TFFUSnZkMU5ZYjFRNWFGb3lTVUpNTW5GMVNXMTFXWEZWU0dWdlNuRmlTRWw1VUc5M1RWaEJkMFUwUVVkTlpWb3pWMmx3U2tWcmJsSkJhRUpMVFRWd01sTktRbFZOZDNGVVUyZHhTRWx0Y0ZSRmJrRklWMFJFTTAxblFsVlRaM0JVY1VsS1VYVjNSMHBqWTAxUlFVRllNa2xvU2twTVpVMWhSVE5aTUZkR1IwaDBNRzloWTJwS1MxTllRbFJyVVhCMlp6WmFTMk5UUkVweGEwMHpWMU5LZDNsaVJFZGFNMXBJUkRWdVVVOWtRa3BCTkVGSU1YcEJNRVZzY2t0UE0xcFZZakJZTTFwbFNuWm5lRzlSUkROd1NuVkZiM2RQYlVwNFRXRk1NM0ZKVEVoamFrUXplV0pHYlVWMWJsUlNNM0JVVTJGS1NHZFlSVXR4ZFUxc09XcHVlREZVV0RCSlNrVXlNRzF1UjBGa1JqTnhTMGhLTUd0TVNXSTBSak5XTTI1TFJXWndTamxSUm5oalVIQjVSREp2U1hWUlJFZEpWRzh6VERWQ1VqQXdRa3B3YkVoM1RETkhWR2MyVFZGUFlrZEhlV3B1TUZKc1JUSkVhMjh3T0RGSFNtSTFjR0Y1U25BelZ6SkJWREZZY1VweFZFcExVMlZCTW1kVlJuZEVORTFLWjBOR01FMHhTVkZ4TVVKVWRVcEVlVTlSU1ZGeFRVZFRlVTFFYlhGbGIwaGpNMFV5VjB0SFMwMWFXakZ4TVc5NloycHZTSEV6YjBZNFpYQXlURFJOZW5FeFJrbzVTbTR5Y0cxRk0yTnNTSG80TkVwVlRtdGFlakZpU0ZGYU5VVkpTV3hCVkhWVlNWRjFVMGRMVTJaTmVIRmtXak5NYVhFd2VVWlpNakF6Y0V0VFpVMTNWMXBKYlhsSFFsUTVVMjh4Y0d4SlZIbFdiMGhhTVVKU09YVnZiVk5OU0RKQk1HOTZaMUJLUzA5U1NGUm5TVzlJTVc1d01rVlBjSGwxZFVZd1RVOUpTMEZRUjFOWFpVaDRkVEZGUjBWNGJraEZhRUpMVFhWSVUxZDNRa3BYYWxwM1UyRnlWV05sUmxWSU5GcFJTVVp3YlUxUldqRmpTMjVTUlVSR1NWTTJSbE5FYlVrelNWaHVlakZuUWxKeFlVVXpjWGRNTUhGRmNsTklORXd5WnpKRWVHZEhSMkZ3TlhGNVltMXVVMGxXY0hoMU5FRjROVE5GWVVsSlFraGpZMGg2T1VkTlZVRktRVVk1VWt4TFRETkpNMGcxY1hkNVUweDZaMGROUzNWQ2JsUXhTa1o1ZVZoSWVtSXhTa2xYUkc1U1kxQk5VMkkwY1ZBNVpraFRUMmRHU1UxV2NGVkpWMjlUV20xRlZWWXhSM2QxUWtFeVV6WkpSbkJCVUhvNWJFeEtRV1pOUms0NVZsQndNazFIU0RWQmQxSXdUVWRNTTBGSGRETkJSMGhyV20xU2JVRjNURFJCZWtneVFYZEVNVUYzVmpKTVIxb3pRWHBXTTBKSFJESkJSM0J0UVVkYU1FRlJWakJOUjNBMVFWRkliVUZIV210QlZGb3dUWGRJYTBGUmRETk1SM0J0UVhkV2JVRjNSRFJhYlZveVRFZElORUY2Vm0xQmJVUnNRVzFNTWt4M1JEVkJWRll6UVcxRmQwRjNWakphZDNGMVFVZEViRTEzVFhoQmJVaHRRbEZNYkVFeVVtMUJkMGhyUVhwTWJVRjNSRzFCVVhReVRFZE1iRUZ0ZUcxYWJYQTBRWHBJTWt4dFJYbGFiWGd5UVZGRWEwRkhUakpCUjB4dFFXMWFNazFIVERGQmJYZ3dRVWRhYlVGUmVHMUJSMHd5UVZSSU1GcDNUR3RhYlU0eVduZE5ka0ZVVmpCTlIwUTFXbTFhTWtKUmNETmFiVWd3UVVkTWJFRjZSREpDUjBoc1dtMVNNRXgzVjNwYWJWb3lUVWRNYkVGUlRHeE1kMGd4UVZGU2JVRkhUWGxCZDFveVRYZElhMEY2VERKTWQwUXpRWGR3TUUxUmNETkJla2d4V25kSWJGcHRlREJhZDB4dFFWUjBmUTRBQUVreVdsUlpNRTU2VFRKWlZFMTVUbXBqZWsxRVZYcE9iVWt6VFVSUk0wMTZWVEZOYWxKcVRsUkpNVTlFV21wTmVrMHhUV3BSTlU1NlVUQk5WRkpyVGtkWk1rMVVUWGxPZWtGNVdtcFJNazVxVFhwTlJGRXlUa1JOTVU1VVVURk5la0V5VGxSak5VNXFSVEpOVkZGNFRrUkpNRmxxVW14T2FtTXpUa1JhYWs1RVdURlpWRlV4VGxSSk1VMUVXVEJPUkdjeVdYcGFhRTVIUlhwT1JGcHRUa1JKTVU1NlZUTk9SMFV6VFhwamVVNUVhekpaYW1ONFRtcGpNRTVFVFRKT2FrVXpUMFJaTUU1RVZUQk5WR016VG1wUmVrNXFZM2hPYlZVd1dXcGpNVTVVU1ROT1JGcHFUbnBaTVU5VVRURk5lbGt5VDFSUk1VMTZSVEZPUkZVelRsUlpNMDlVV1RWT1JGa3lUMVJSZWs1cVJUSmFWR013VGtSUmVrOVVVbWxPUkdNelQxUmpkMDR5UlRCWlZGWm9UbFJaZWs1VVdtaE5lbU13V1ZSV2FFNXRXVEJQVkdNMFRsUmplazlVVVRGT1JHY3hUV3BSTlU1SFZUSmFhbFUwVFcxSmVrNXFVVE5PYlVrd1QxUmpNazU2UVRCTlZFMHlUWHBCTUUxcVdteE9hazB3VGtSTk1rNVVXVEZOVkUwelRsUk5NRnBxWXpWT2Ftc3hUMFJrYUU1dFdURk5hbGt4VG5wUk1VMVVUVFZPYlUweFRtcFplazV0VFRGUFJFcHBUbTFaTWs1cVZYcE9iVWw2VDBSWk5FNTZTVEpaZWxFeFRsUlJNRnBVVlRKT1Iwa3hUbFJWTkUxNlFURk9lbEpzVGtSamVrMTZVVEJPUkdjd1QxUlZNRTVFVVRGTmVsVjRUbnBGTVUxVVdteE9la1V6VDBSVk1FMTZWVE5OUkZKc1RtcFJNRTlVVW14T2JWa3pUVVJaTWs1cVZURk5WRkY0VFcxSk1VNVVXbXBPZW1zelRWUk5NVTVFWnpKYVJGbDRUbXBKTUZscVZYcE9SRTB6VFZSYWJFNVVaM3BPYWxwcVRrZFJNVTVxWXpCT1ZFMHdXbXBqTlU1NlJYcE5WRkpyVG5wck1VOVVUWGhPVkUweFRucFpNVTE2UlRGUFJGVXhUbGRGTTAxNlVYbE5iVWt6VFZSWk5FNTZhekJPYWxKcFRsUlZNVTVxV21wT1ZHTjZUVlJhYVU1VVdUTlpWRlUxVG5wQk1FNTZWVEZPYlVrelRsUlZlVTVxV1ROTmVsWm9UWHBCTVU1RVVYcE9hazB6VDFSVk1rNUVVWGxaYWxWNVRtMUZNVTU2VlRKT2VrMHhUbXBTYWs1VVNYcE5hbEY0VG5wSk1sbDZVbTFOZW1zd1RtcFJOVTE2U1RCWlZGRTBUa2RKTVU1RVRURk9WRWt6VGxSamVFNXFaek5QVkZrd1RrZEpNbGw2VlRST1JHTXdUbFJWTlUxNlRUQlplbEV5VGtkWk1VNTZXbWxOZW1jeVQwUmpNVTE2V1RKWmFtTjNUbnBqTVU1RVNtMU9SRlV3VG1wak1FNUVWVEZaVkZVd1RXMUpNVTVxVW0xT2Fra3dUV3BrYUU1cVl6Rk5SRlY1VGxSRk1WbFVWWHBPUkdjelRsUmplVTVIU1RKWlZGcHRUbTFWTUZwRVdYcE9WMFV4VDBSUk5VMTZXVEJaYWxwcVRucEJNVTFVVlRWT2Vra3pXVlJOZDA1NmF6Qk9hazAwVG0xWk1VNTZaR2hPUjFVd1RrUk5kMDVVVFhwTmFsbDVUWHBaTUU1RVRYbE9WRmt5V2tSS2JVNUVSWHBQVkUxM1RsUlpNMDlFVVRKT1JHdDZUbXBhYUUxNmF6Rk5WRlUwVGxSRk1VMVVUVFZPZWtreFRucFNhRTE2VFRKUFJGbDZUakpGTWxscVdUVk5iVWt5V1ZSTk5FMTZRVEpPZW1NeVRYcG5NazU2VlhkT2JWa3dUV3BOTlU1VWF6QmFSRlY1VGtkSk1GcEVXbXBPZWxFeFRtcFJNVTE2U1RKYVZGRXpUbXBqTTA1RVdUSk9SR2N3V1ZSUk1VNXRVVEZPVkUwelRYcGpNazU2VVROTmVsRjVXbXBOZVU1dFJURlBSRTB3VG0xRk0wMUVVbXRPYlZVd1dXcGplazVVUVRKUFJGSnNUWHBSTUZwVVdtMU9SRVY2VDFSUk0wNXFUVEpQVkdNeFRsUk5NVTlVVW1sT1ZHY3pUVVJTYUUxdFNUQk9WRnBvVG0xWk1GcHFUVFJPZWtGNVdXcGpNMDVVVlhwTmFsRXlUbnBaZWs1RVZUQk9iVmt3VFhwak1VNXRTVEJaZWxKdFRucEZNRTlFWXpOTmJVbDZUVVJhYWs1NldUSk5hbEpzVGtSRk1VNVVVVE5OYlZrelRtcFZNazVVU1RCWmVtTXhUa2RGTUZsVVkzaE9WRkV4VDFSU2JFNTZhekpPVkUweVRsUkZNVTU2VFhkT1JFVXlXbXBhYVU1NmEzcE5SRmw1VG0xTk1FMTZUWGRPZWxsNlRVUlZlRTE2VlRCWmVsVXdUa2ROTVUxVVdtMU9WRlV3V1dwVk1rNHlSWHBOUkZWNlRrUlJNRTVxVlhoTmVtTXdUMVJXYUU1NlVURk9SRkp0VGxSVk1rNXFUVE5PYlUweVQwUmplazVIUlRCT2FtUm9UbFJKTVU1cVdUQk9hbWQ2VDFSTk5FNXRWVEZOYWxWNlRrUlZNVTE2WTNkT2JVVjZUVVJhYlU1VVRURk9WRkV6VFhwUk1VNVVTbTFPUjBVd1dYcFplRTV0UlROT2FsVXhUa1JqTUUxNlVtdE9ha1V3V1hwVk1rNVVSVE5OYWxrMFRrZFZNbHBxV1RCT2VrMHdUMVJaTUUxdFdUQlBWRnBzVG5wRk1scHFUVFZPUkUwelRsUmpkMDVFVVRGT1ZGRjVUWHBKTVUxRVZtaE9la1V6VFZSUk1FNVVSVEZPVkdONlRucGpNRmxVVFROT1ZGVXdUV3BaTlU1SFJUTk5WRkpzVGtSTk1GcFVUVEpPVkVrd1dYcFZlazVFU1RKYVJGcG9UbTFSTWs1cVRURk9WRkY2VFZSak0wNVVSWGxhYWxrelRYcFZNRTU2WTNoT2VrRXlUa1JWTlUxNlJUQk9SRmw1VGtkSk1FNUVTbTFPVkVsNVdtcFZOVTVFVFhsWmFsRXlUbXBWTVUxNldtaE5lbXN4VFdwWmVVNUhSVE5OZWxsNFRsUk5lazFxVVhoT2VsVXdUbXBWZWsxdFNURlpWRlV5VG0xWk1FNVVVbXBPVkdONlRucGpOVTVIVFhwT2FsRXhUbXBSTVZsVVl6Uk9SMDE1V21wWk0wNUVhM3BQVkZKb1RtMVpNMDlVVVhoT2JVMHlUMFJSTTA1SFZURk9hbGt4VFhwQk1FOUVWWHBPYWtreFRWUk5NRTVIV1RGTmFsRTFUWHByZWsxRVZUVk9hbU16VGxSVk1VNTZSVE5OZWxFelRYcE5lazVFV21sTmJVbDZUa1JWTWs1dFNURlpWRmsxVG0xVk1rMXFWVE5OZWtFeVdYcFZlVTE2UVRCT1ZGVTBUa1JqTUUxNlRUSk9SRVV5VG1wamVrNVVTVE5PUkZWNVRsUkZNRTlVVFRGT2VtTXlXbXBOZVU1NlFUSk5hbFY0VGxSQk1FNTZVWGxPUkZreFRsUlJNazU2VlRCUFZGSnBUa1JKTTAxcVVteE9SR3Q1V21wak0wNVVVVEZOUkZwcFRrUkpNVTFFVVRGT2JWRXpUVlJOZWs1RVZURk9lazB3VGxkRk0xbFVXVEJPUjFrd1QxUlpNazVxWnpCUFJHTXhUbFJCTWxwRVdtbE9iVlV6VGtSV2FFMTZhekpPZWxwcFRYcFpNazlVVVRGT1ZHY3pUbXBSZUU1cVdYbFphbFV4VGxSQk1VMXFWVE5OZWtFelRsUk5lRTVxWTNwT1JGa3pUbnBWTUZscVdtdE9la0V3VDBSWmVVNVVVVE5QUkdONFRucFZlazVxV21oTmVtTXhUa1JLYlU1cWF6Sk9WRlV4VG1wSk0wMTZZM2hPVkUxNlRXcFJlRTVFWnpKYWFtTXlUWHBCZWsxcVNtbE9WRVV4VG1wak5FNXFZekJhVkZwdFRYcGpNazlVVlRST01rVXhUVlJOZDAxNlZUSmFhbGw1VG1wck1rNTZUVEJPVkZFd1QwUmplazVxYTNsWmFtTjNUbFJuTTFsVVdtMU9WRTB5VGxSWk1VNTZSVEJPYWxrMFRsUlJNVTFxVlhkT2VrVXdXVlJqZVU1VVNUQk9lbU14VGxSWk1FOUVWWGxOZWxGNlRrUmplRTV0V1RKYVZFMTVUbXBqTWxsNlRURk9lbFV3V21wU2EwMTZVVEJaVkZsNlRsUmplazlFVFRCT2VsRXhUV3BhYWsxNlJUSk9SRlV5VFhwbk1VNXFWWGRPYWtVeFRXcE5lVTVFVlhwUFZFMTNUakpGTTA5RVVURk9SMWt5VFdwTk1FNXRUVEJPUkUxNFRucEZNVTlFV1RCT1Iwa3lUbXBaTlU1VWEzcE9lazEzVG5wWmVrMTZWWHBPUkZrd1dtcE5NRTV0V1hwTmVsazBUa1JWTUZwVVZUSk9la2t4VFdwVmQwMTZRVEphVkZreFRtcHJNMDFFVFRGT1IxbDZUbXBqTTAxNlJURk5SRTE0VG1wRk1GbHFVbTFPZWtFeVRsUlJNazVVVFRCYVJGcHNUVzFaTWs1VVVUUk5lbEV6VGtSVk1FMTZRVEpOVkZGNVRucFZNMDFFV1RGTmVrRXhUV3BqTkU1cVl6Sk9WRnBvVG1wbk1sbFVWWGRPZW1zelRVUk5NazVFV1hwTlZFMHhUWHBGTUU1cVZUSk9SMUV3VDFSTmVFMXRTVEZOZWxVMFRYcE5NRTVxWXpKT1ZGa3pXVlJaZVU1NlVURk9WRTEzVFhwSk0wMVVUVFZPVkdNeVdsUlJNRTF0V1RKUFZGVTBUbXBSTVU1NlRUVk9hbXN3V1hwak1rNTZVVE5PVkZFeFRsUkJlazlFVlhoT2VsRXhUMVJSTWs1VVFUSlBSR04zVG5wQk1VNUVWVEZPVkZFelRWUlJOVTE2VVRGTlZGVjNUbXBSTTFsVVdUSk9SMVV3VGtSWk1FNVVSVE5PUkUxNFRsUm5lazFxVW1oT2Vra3pUbFJTYkU1cVRYcE9SRmswVG5wVk1sbHFZelZPZWxFd1dXcFplRTVIU1hwUFZGVjVUa1JaTTA1VVkzZE9lbGt4V1ZSVk5VMXRTWHBPUkdONVRqSkZNRTlVVVRST2VsVjZUVVJOZDA1NlRUTk5hazAxVG5wRk1GbDZXWGhPYlZWNlRXcGFhazVFVlRGUFJHTXdUbFJCTWs1cVdtdE9WRVY2VDBSTk5VNUVZekZOZWxreVRtcFJNRTFxVlhsT2Ftc3lXWHBTYTAxNlVUSlBSRTAxVG5wQk1VNVVUWGhPUjBWNlRsUk5NRTU2WnpCT2FtTXlUbFJaTVUxcVdUTk9SRWw2VDFSYWFrMTZXVEphYWxrd1RrUk5NMDFFV21sT1IwVXpUbnBOZWs1VVozcE9hbGw0VGtSTk1GcHFWVEpOZWxVd1QxUlpNVTV0V1RGT2FsRTBUa1JqTTA5RVkzZE9SMFV6V1ZSUk1FNUhSVEpQUkZVeFRXMVpNRTE2VlhwT2FsRjZUVVJTYkUxNldUSlBSRnBxVG5wQk1VNXFZM2RPVkZreVQwUlJNMDVVWXpCWmFrMTRUbFJOTWxwVVVUSk9SMGw1V21wTmVVNHlSVEZPUkZVd1RucE5NbGxVV1RKT1JFMTZUV3BWTWsxdFdUTk5WRnByVGxSTk1sbFVXVEZPUjBrd1dsUmpkMDVFVVRKUFJGazBUbnBGZWs1NldYbE9lbFV6VFVSU2JVNXRSWHBOZW1OM1RrZFpNMDU2VVRWT1Ixa3hUMVJaTkU1VVl6Rk9WRTB6VG5wTk1FMVVTbWxPUkZrd1RYcGpNRTVIVVRCYVZGVTBUbXBWTVU1cVVtMU5la0V3VGtSWk1FNVVTVEpPUkZFMVRrUlJlVnBxV1RST1IwMHpUMFJWZWs1RVp6SmFhbU14VFhwWk1GbHFUWGxPUkdONlRucFZNVTVVUVhwT2FsRTFUbTFKZWs1RVRUVk9SR015VDBSTk0wMTZaekZPVkZrd1RYcGpNRmw2U21sT1JHY3hUbFJaTkU1NlNUQk5hbFV4VFhwTk1rOVVVbXROZWxVd1QwUmpNazVFWXpOUFJHTjNUWHBOTWsxcVl6Qk5lbEY2VFhwTk1VNVVUVEphUkdNMFRtcG5NMDlFVlhsT2Fsa3lXa1JTYkUxNlNUSmFWRlY0VG5wQk0wNUVWWGxPZWxVeFRWUlNiRTR5UlRGTlJGa3pUa1JyTUZsNlVtdE9hbFV5VGxSUmVrNHlSVEZPVkdNeFRtcHJNVTlFVVRKT1JHY3hUbnBhYlU1VVFURk9SR013VGtkRk1VMTZXWGxPVkdNeFRrUlpNMDE2UlhsWmFrcHBUWHBGTTA5RVdYcE5lbFV4VDFSVk0wMXRXVE5PVkZKemZRNEFBSGxCZDFwdFFsRndNVnB0V20xYWJYQXlRVkZJTWt4dFNYVkJiVTR5UVZGSU5FRkhSREphZDFkMlFXMU1Na3gzVERCQlZFd3pXbmR3TTFwdFVqSk1SM0F5UVcxU00xcHRSWHBCVkVneldtMXdNa0Z0VGpOQlIwUnJRVkY0TWxwdFdqUkJkM2d5VEVkd05FRlJUREJhYlV3MFFWRjBNMEZSV210QlZFd3pRa2RNTlZwdFRqTkNSMXBxUVcxU01rRlJjRzFCYlhReldtMWFORnB0ZERGQ1IzQXdRVkZNTWsxM1dtdEJla3d5V25kSWJVRktVakZCYlhCclFWRjRNRUZ0UkROQlZGWXpRVkZYZGtGdFJERmFkM0F4UVhkU01VSlJSWGhhZWxadFFVZElORnA2Vm0xYVVYRjFRVWRFTTBGUlJYbEJiVXh0V2xGRU5FRkhUak5hVVhCcVdtMVdiVUZSY0RGQlVVeHRRVzFFYkZwdFVqQk5SMXBxV20xT01FRkhjREJCYlZJelFsRkpkVnB0VWpKTWQxb3pRVlJJTUVGUlNEQkJkMGd3VEcxd2EwRjZTREpCVVV3d1dtMXdNbHBIV2pWQmQwZ3pRWGRGZUVGM2REQkJSMFF3V20xSU1FRjNXakZCTWxKdFdtMXdNRUYzVmpOQlVYQnFRWGRFTVVKUmNESmFiVWh0V25kSU5WcHRUREZhVVhBeVFYcFdNa0YzY0RSYWVsWnRXbEZGZVVGdFVqRkJiVXd6UVhkSU0wRlJjR3RCVVhRelFWRmFORnA2VERCQlIwaHRRVkZNTWtGUmNERkJWRm93UVcxd05GcDZWak5CUjFvd1FVZFNNVUpIV210QmQwUXlXa2R3TTBGUmRHMUNSMHh0UVhkV01FMVJTREJCUjB3eVduZE1NRUZIZERCQ1VWcHNRWGRXTUVGUlYzWkJVVnB0V2tkYWJFRnRUREpDUjBneFFWUmFZVkZFWTJWTlMzbG5URXBuZVhCMlRqbFdVSEJyYjJ4bllVZFJSVEJGUjNGbmNFbEZlRnBIVTBsdk1rRmhRVEpOWWtaS1JVOXVWWEZ1UWtveGVYRjNkVUZOU2tsUFFsRlRORUY2T1ZGSWQzUXdRbE5TTVc5SlJESkhlakV4UmtkSmJVbFVOV1ZhVkZOSlJYcG5aRTFMWXpSS1MxTjZjbUZqWjI5M1RXdHhNbFl5Y1RBNVZYRXdjR1ZaTURWWmJuZEZSMFJIZUROSmQxTjRUREJCYVhCM1FYcHlkMFY1UkV0UFIwbDRkRzF3U25sS2IzcG1Na3hJZFU5eE1WWnRSbmRGUlc5UVoyeEZlbE5aY1ZGRVpVbElWMVJCYkdacVRFaGpaRUpVVTJ4d1NHSXdXRzFOYWt4SldqVkJZVVZNY0ZReE0wMVJWbXR2VVU5TFJVWm5TVWgzUVZGdVNGYzFUVzFGU0VZeVRERkpTbE5rY1VsMGJWa3dTVFp3VVVGTlFsSk5UVUYyT1VsSVNFbFBjVzFGWjI1NGNEUmFTMGxRYm0xRmFscDNjREp4VW1OM1JYcHFOVWxIV2pGYU0yTkdiM1puV2xsdFRHbEhVVTh3Y1d3NVpVWkxWMUZ2TWtGaVRUQmpTRUZJTVZwd2VIZ3lSRzFKZWxveU1VMUpTbmxhY2tsNWFVWjZTV052U0d0UWIwZ3dhMEpHWjBaSmJHWTFSVzFPTlUxaFkxRkJTRVZrY1VoVFZuQlRRV3hITVUxS2IyRjFURXA0ZVZORU1VaHFSVkZhYTI5aFNXNXVVblZyV0RCWFRVRkhjV2RNU1UxaWNsTlBUVnBLWTA5RVlVOU5XRzFYVkVwSGVUWnlZVll4U1ZWQlNVcFNRV2hFZUd0UVFWRjFNbTVJU1hsYVNGY3dUWHByTUZrelYyVkNTblYzY1hnd01XOUllV2RITW1kUVJtdzVWVzVTWjNwS2VHSnNXa2hqWm04eVZqRndlR3RqUmtwcldVWmhWbTFDVWpsQlJIbEZaRUpJTUd0SWQzRjJjREJyU1hCSGVYZHlVVVZDY1VoaldrRlVZMFZHZDFkbVJIcEpiSEV6VjNseVNrRjZUV3htTVVWS1kzcHZNMXBzUmtsUE1VVkxlR1ZOTVhsNmNtRkZRVWRTTVhsSFNHZDNiekJuVEVwS2RHeEVNSEV6VFZGd2FrMUhSWGx1TW5sTVFVbEJTbTlMZVZCR1lVMVljbE5UU1VZelRWTmFTSGh0U1RCRmVVeEtNVzF2YlVWWVNrcDVNa2hLTUd0RVNubGhiMHQwTTFwVU9HMXlZWFZsY0ZGRlJFa3hkVU52VVU5cFJtMUpRVUY2VEd4Q1VVRkhTa3RQWTBkNFowdHVVbWQ2U0ZGVFFXOUdPVE53VlZkclJFbFhaMFpIVFVGSU0yTXpiMGhKVVVKS1ltbEVZVWswV0cxMVdFRXdXbXh2VUdjd2IwdFRibkV6ZVRad1ZFRlhia2gxTlVKU1JXWmFNVk5JUjFKblUwZEpRVXRaYlZOS1FrZE5hazFTUldWSlZVMVVXVE5XTUVKVWVHMUJVVWx0YnpKbU0zQlNTVVJhUjNWbVdrbzVaVzk2UkRSSGVsbzBjREp4WjBaaFltVktWRFZoU1VobVpYQlNhMlJ3U21OblJuZDFkMGN5ZFdOdlVrVXhSSHAxTUhKNGFteElWR3RhVFVabVpVZEhUMU5HTUdkbVJFaG5hRTE1VTJORVNtZHNjVWRGUW00eWVUUnVlbE5oVERJeFNXNWhZMlJLU25GaWJuZEpla3d5WWpKeGQwMUZja2RKWlVKVU9WZHZVWEV6U1hwalNXOXRSVkZDU0ZjemNsQm5WMGxLUVROeVIwNHdRa2ROVkVKUlUzcGFlRGxJY0ROQlZVUklkVmROVVZOSGNWUk5aVzVUZVd0Rk1qZ3hUREJ4UWtSdFFVWlpNVk5EUVVsaWFraFZRVmxFZW1vMWNESjFkMHA0WjFOTlNsTjVTWGw1WkhGSWNEQkZTR05DV25oamVuQjRNVkZNYlUxaVNYaG1hVzlLV2pSSlNYVnFTVlZYUWtGSWNXNXdiWGhyUjFRd05FcEhXbTFDVW10a1FUSXdOVUV5TlRKSU1IbFBia2hGZUVkTFRqSnZTRFZOV20xVFpFRkxUMWxHZVVsdVdrbDVaazFLUlhsQmVVbEJiekJuYTI5M1FUTmFlRUZQU0d3NVNFMTRWMVZDU0VFemNFdDFiRVZKVW1Wd1UzbDFTRE5PYkV4NGEwbHZNM0ZhY0ZSeE5HOTRabVZHZDBsaVIwcEJkMjh3WmpGYVNubExUVWxXYkVreVNXZHZWWFZoYmpKSlFXNHpjVUp2TTFOYVRFZFdNbkZTWXpORlNsTmhSVlJKWVVGVWRXTnhNRm96V0RKeFVtNVJWbWxhVTA5NVNUSjFObkpLVFhaTWJVOVhRWGhTYTNKTFR6QkZNRUZIY0hsaU5VMUhUVFZFUzFOTFdHMTVSa0pRWjFOSVZWTmhjSGhtWlc1M1NXZHhNVWxuU0dGamRVRmhkVTl2ZUZJeVFrZFhNRVF6U1dOd1lVVjNia3RXTVVKSFYwOUNVMkl5VEhkNE1rWnRRV1p2ZVVsbFNWRkVaVTFSZUROeVlVZzFXVzEwYVVGSlYySllNRk14Y0ROQlowUXhkV2xCUmpsTWNFbGlNazFLWmpKQ1NHdHRXa3B4UjBKSWNYaFpNM2d3YjBZNVkzSktPV0pOZWsxRldESjVSa3A2WTB4WmJVRkVibEY1Ykc1SU1UTklSMFZSV2xKcmVWcHRRVkphVW10bmJtMUJNMWd6ZFVaTVIzRmljR0ZhYVVSNVNEUkNSbVpzU1ZKbk1VRkhUMFJ5VkhGSVJWSmFiVVpLVFdoS1IxZDNSMGx4TVV4Mk9XbE5WWFExV0RGVGRWZ3hSVzVaTWtWWVJWVk9hWEZWVDBGWmJYRXhURVk1UmtwNmVVcENTMUpwUVRGMVNVbFVNR2xLVkZKdGNWQm1NMjlIV21sS1VWZEVjWGR4UTBSc1oycHZiRGxtUmxSRmJGbHNabTFIVVVsNFdXMUZiSEF4U1dORWVIa3pUVEk1TmtRd1UyWmFiVWcxUmpCclZXNUpTV2xDU2tWWlFraFhWbkI2UlU5d2VFMU5SVkphTkV3emRHbEtVVkkwYmxGUGJVRXpRWGxKUm1kQldHeG1iVVF5WmpCR1NqRktRa3RCUTAwd2RWUk1lamxsVERKaU1VeExZM2RaTVVocFdsVk9NMXA2Y1hsYVlVVnFjbnAxWTI0eVdqSndZVUZJVFV0UFFVMTRZMmx1TTFKcFdUQk1NRVV3Y0cxYVNrbExUVkY1WW05S2NHdEpTazFJUjJGd01saHRVbTFDVTBSdFRURmphbTh4U0ROdmJEZ3lRVk5OUmtoS1FVRlpiWFZvU1hwRllVcDNjV1ZOYlUxNFRHeG1OVWxWVFdsdVIxWXpSSGRKVmtGVWRXSnhNVll3UjFGMVoxZ3laMmRZTUVScmIyRkJWVUpJZFVwSFJqbHBjRE5JTTBKU01XTnVkM2x1YnpKVGVVUXpRVU55U0VGSmIwZDFWVzUzU1ZsSVNWb3lSSGxCTTNCR09EQnZTa0V6YjFGNWJYSlJjVU5hU1hnMVRVWm5VVTE2T1cxeFNqaGxUREphYVVGSFZteEhNbGRaV1d3NVprRktOR2xaTWxOSVFWQm5kM0ZzT1U5SlNuRlJUSGhuVmxwUmNHbEVNblJ0Y0cxSWEzRXpRVWxOTVUxMlNsSklNVzR5ZEdsdVlWZE1UREo1YkVjeVYwZEpTR3RRV1ROU01Wa3pjV2xCVVhReGJqSjVVRmt4U0dsYVZGb3hSMGhhWlhCNGRWTkhiVlpwV0d3NVZFUXpWbXBaYlZOVlFYWm5hMHBoUkdWTlIzZzBTbnBtTTBWMk9WaENTRXhwYmtwRlRYSlVSVU5IZUVWRlFXRlRSVnB0ZUdWWk1WbzBSSFk0TTBoc09UWk5SMDlzUVhoYU5WcFFaMUZFU0ZwbFJWRk5iVXA2U1dWQ1JqbHFUVE5hYVc1S09HdEViVnBsVEVZNGEwa3lhbWxLVUdkamNHdzVZVUY1UlVKQlUwRmpia2RPYlhKTFJXZHZNMGxTUTBjd1lWRkVZelp1U2psb1ZsRXdkRmN4YXpSQmJWZHdjbEZOZWt0VmRETkJVMnMwV20xVGNISlJXbTFYYWpCWWIzcEphVlpSTUhSTlMwMTFiMUIwWVV0VmRESmFlV3MwUVhkNWNISlJUWGxMVlhReVdrbHJORUZ0UVhCeVVVeHRTMVYwTWtKSmF6UkJkM2x3Y2xGWGVVdFZkRE5CU1dzMFFYcEpjSEpSVERSTFZYUXlRVWxyTkVGdGRYQnlVVTEzUzFWME1rSkphelJCZDAxd2NsRndOVXRWZEd4Q1UyczBRWHBGY0hKUlRYcExWWFF6V25sck5FRnRUM0J5VVV3MFMxVjBNa0ZKYXpSQmJVbHdjbEZ3YlV0VmRHeENTV3MwV25kT1lWaEdUbVZXVkVreVRFcHFZbGN4YXpSQmQwRndjbEZOZWt0VmRESkJVMnMwUVhkSmNISlJURzFMVlhReldqRnJORnA2U1hCeVVVd3dTMVYwTWtGSmF6UkJkMEZ3Y2xGTmVrdFZkREpCVTJzMFFYZEpjSEpSVmpSTFZYUXpRVk5yTkVGdFYzQnlVVXcxUzFWME1rMUphelJCZDNsd2NsRndNRXRWZEROQ1NXczBXbnBCY0hKUlZtcExWWFF6VEVsck5FRjNlWEJ5VVUxNlMxVjBNazFKYXpSYWQzaGhXRVpPWlZaVVNUSk1TbXBpVnpGck5FRjNWM0J5VVV3MVMxVjBNazFKYXpSQmQxTndjbEZ3YlV0VmRESmFNV3MwUVhkNWNISlJURFZMVlhSc1RVbHJORUZ0U1hCeVVVMTVTMVYwTWtKVGF6UkJkMGx3Y2xGd05FdFZkREpNTVdzMFFYZDVjSEpSVERKTFZYUXpRa2xyTkZwM2RYQnlVVTE2UzFWME0xcDVhelJCZDFOd2NsRk1iVXRWZERKTU1XczBRWGRKY0hKUlZqVlhiSGgwV0d4UGVYRjZVMlpZVUhGd2NsRk1iVXRWZERKTmVXczBRWGRGY0hKUlRERkxWWFF5V2pGck5FRnRRWEJ5VVZkNVMxVjBNa0ZUYXpSQmQwbHdjbEZNYlV0VmRESk5lV3MwUVhkRmNISlJUREZMVlhSc1FsTnJORUY2VjNCeVVVd3hTMVYwTTBKSmF6UkJla1Z3Y2xGTWEwdFZkREpNZVdzMFFYZEpjSEpSY0d4TFZYUnNXbE5yTkZwNlFYQnlVVlpxUzFWME0weEphelJCZDNsd2NsRk5la3RWZERKTlNXczBXbmQ0WVZoRU1GaE5TMDExYjFCMWQyOHlNV3B1U210NVdGVmpabTVLVm1oTlZFbDNiekl4YW5CNlNXMXdiSFYyVEV0QmVVRjNSR2hNZDB3d1RWUkpkMjh5UlhsWVZFa3lURXBxWWxjeGF6UkJla2x3Y2xGTU1VdFZkREpOZG5CaldFWjRabGR0YTIxeFZWZGpiM3B3SzFkc2FtRk5TM1Y1VEd4d1kxaEVQVDEwQlFBQUFISnZkREV6Y3drQUFBQnRiM0p3YUdWMWN5QnpIQUFBQUdOdlpHVmpjeTVrWldOdlpHVW9kSEpwYm1sMGVTd2dlbWx2YmlsMEJnQUFBRzl5WVdOc1pYTWVBQUFBWTI5a1pXTnpMbVJsWTI5a1pTaHJaWGx0WVd0bGNpQXNJSHBwYjI0cGRBTUFBQUJ1Wlc5ekNBQUFBRHh6ZEhKcGJtYytkQVFBQUFCbGVHVmpLQXNBQUFCMEJnQUFBR0poYzJVMk5IUUdBQUFBWTI5a1pXTnpkQWdBQUFCdGIzSndhR1YxYzNRSEFBQUFkSEpwYm1sMGVWSUVBQUFBZEFnQUFBQnJaWGx0WVd0bGNuUUVBQUFBZW1sdmJuUUVBQUFBWlhaaGJGSUZBQUFBZEFjQUFBQmpiMjF3YVd4bGRBa0FBQUJpTmpSa1pXTnZaR1VvQUFBQUFDZ0FBQUFBS0FBQUFBQnpCZ0FBQUhOamNtbHdkSFFJQUFBQVBHMXZaSFZzWlQ0QkFBQUFjdzRBQUFBWUFRWUJCZ0VHQVFZQkJnRXFBUT09IikpKQ=="))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>url</name>
<expres><![CDATA[#$pyFunction
url = '[cristal_capitulos.param1]'
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<thumbnail>https://i.imgur.com/3N7E8uv.jpg</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
</item>

 
<item>
<title>[COLOR gold]*[/COLOR] [COLOR white]Dragon Ball [COLOR orange] Castellano [COLOR yellow][/COLOR]</title>
<externallink>https://raw.githubusercontent.com/FESTAKIDS/festakids/main/LILIANIME/DB.CAST/menu.dbcastellano.en$$LSProEncKey= $$</externallink>
<link>na</link>
<thumbnail>https://i.imgur.com/cX9cfwc.jpg</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
</item>



 
<item>
<title>[COLOR gold]*[/COLOR] [COLOR white]Dragon Ball [COLOR orange] Galego [COLOR yellow][/COLOR]</title>
<externallink>https://raw.githubusercontent.com/FESTAKIDS/festakids/main/LILIANIME/DB.GALEGO/menu.db.galego</externallink>
<link>na</link>
<thumbnail>https://i.imgur.com/Si3lWOP.jpg</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
</item>

 

<item>
<title>[COLOR gold]*[/COLOR] [COLOR white]Dragon Ball [COLOR orange] Catalán [COLOR yellow][/COLOR]</title>
<externallink>https://raw.githubusercontent.com/FESTAKIDS/festakids/main/LILIANIME/DBALL.CATALAN/menu.db.catalan</externallink>
<link>na</link>
<thumbnail>https://i.imgur.com/ivX08il.jpg</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
</item>

<!-- 
<item>
<title>[COLOR gold]*[/COLOR] [COLOR white]Bola de Drac [COLOR orange]Valencià [COLOR yellow][/COLOR]</title>
<externallink></externallink>
<link>na</link>
<thumbnail>https://i.imgur.com/FcZnSeJ.jpg</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
</item>

 
<item>
<title>[COLOR gold]*[/COLOR] [COLOR white]Dragon Ball [COLOR orange] Euskera [COLOR yellow][/COLOR]</title>
<externallink>$$LSProEncKey= $$</externallink>
<link>na</link>
<thumbnail>https://i.imgur.com/1AzJu2T.jpg</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
</item>

 
<item>
<title>[COLOR gold]*[/COLOR] [COLOR white]Dragon Ball [COLOR orange] Latino [COLOR yellow][/COLOR]</title>
<link>$doregex[cristal_series]</link>
<regex>
<name>cristal_series</name>
<listrepeat><![CDATA[
<title>[COLOR white][cristal_series.param2][/COLOR]</title>
<thumbnail>[cristal_series.param3]</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
<link>$doregex[cristal_temporadas]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,resolveurl,xbmc,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>cristal_temporadas</name>
<listrepeat><![CDATA[
<title>[COLOR white][cristal_temporadas.param2][/COLOR]</title>
<thumbnail>[cristal_temporadas.param3]</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
<link>$doregex[cristal_capitulos]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
parametro = '[cristal_series.param1]'
import re,requests,resolveurl,xbmc,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>cristal_capitulos</name>
<listrepeat><![CDATA[
<title>[COLOR white][cristal_capitulos.param2][/COLOR]</title>
<thumbnail>[cristal_temporadas.param3]</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
<link>$doregex[url]</link>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
parametro = '[cristal_temporadas.param1]'
import re,requests,resolveurl,xbmc,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<regex>
<name>url</name>
<expres><![CDATA[#$pyFunction
url = '[cristal_capitulos.param1]'
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
<thumbnail>https://i.imgur.com/NfJrsxV.jpg</thumbnail>
<fanart>https://i.imgur.com/0D8Ft2R.jpg</fanart>
</item>
-->
 
</items>
