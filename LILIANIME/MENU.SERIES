<?xml version="1.0" encoding="UTF-8" standalone="yes"?>





<item>
<title>[COLOR orange]BUSCADOR [COLOR white]Series [COLOR gold]NUEVO[/COLOR] </title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param1] [temp.param2][/COLOR]</title>
<info>[COLOR white][makelist2.param3] [temp.param1][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
serie = '[makelist2.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param4] [cap.param3][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
temporada = '[temp.param2]'
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests,xbmc,random,urllib2,xbmcgui,base64
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/YcK18g4.jpg</thumbnail>
<fanart>https://i.imgur.com/SKvCy0e.jpg</fanart>
</item>


--------------------------------------------------------------------------------------------------------------------------------------------
<item>
<title>[COLOR orange]SERIES [COLOR white]Terminadas[/COLOR]</title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param1] [temp.param2][/COLOR]</title>
<info>[COLOR white][makelist2.param3] [temp.param1][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
serie = '[makelist2.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param4] [cap.param3][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
temporada = '[temp.param2]'
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests,xbmc,random,urllib2,xbmcgui,base64
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/yIQuujv.jpg</thumbnail>
<fanart>https://i.imgur.com/SKvCy0e.jpg</fanart>
</item>

--------------------------------------------------------------------------------------------------------------------------------------------
<item>
<title>[COLOR orange]SERIES [COLOR white]Clásicas[/COLOR]</title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param1] [temp.param2][/COLOR]</title>
<info>[COLOR white][makelist2.param3] [temp.param1][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
serie = '[makelist2.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param4] [cap.param3][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
temporada = '[temp.param2]'
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests,xbmc,random,urllib2,xbmcgui,base64
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/50uxJf9.jpg</thumbnail>
<fanart>https://i.imgur.com/SKvCy0e.jpg</fanart>
</item>
-----------------------------------------------------------------------------------------------------------------------------
<item>
<title>[COLOR orange]SERIES [COLOR white]En Emisión[/COLOR]</title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param1] [temp.param2][/COLOR]</title>
<info>[COLOR white][makelist2.param3] [temp.param1][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
serie = '[makelist2.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MHZ4TUFBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFV1RGT2JVMHpUa1JqTWs1NlJYcE5SR040VFhwWmVrNTZXVEpPZWxVeFRYcE5lRTV0VlhwUFZGVTFUWHBCTWxwVVRURk9WR3Q2VFhwWk1FNTZSVE5PUkZFMVRucHJlazVVVFhsTmVtc3lXbXBqTkUxNlFYbFphbHBwVG0xRk1sbDZVWHBPVkdzeVRXcFJlazV0VFRCTmFrMTNUa2RSZWsxcVVYaE9SR2Q2VFZSWk5VMTZaekJhVkUxM1RrUm5NRTlVVW0xT2VtY3dUMVJWZVUxNlNUQlBSR00xVFhwWmVWcHFXVEpPVkdzelQwUlZlVTVYUlROTmVtTTFUVzFaTWsxVVVtMU9iVVV5V21wVmQwMTZWWHBQUkZFeFRtcHJNVTFVVlhkT1JHY3hUbXBaTUUxNlkzbFphbEpyVG5wck1scFVTbTFOZW1jeVRrUmplVTU2WXpGT2VtTXdUbnBuZVZwcVVUUk9SR2Q2VG5wS2FVMTZhekJPUkZKcVRXMVplVmxxVFRST2FtZDVXV3BLYlU1SFRURk5hbFYzVG5wWmVrMVVUWGhOZW10NVdXcEtiVTVxVlRGT2FsbDZUa2RWZWs1NldUSk5lazB5V1ZSTk5VMTZhekpPVkZFd1RtMVZlazlFU20xT1ZFRXpUWHBrYUUxdFNYcFBSRmswVG5wUk1VOUVVVEpPUkdkNVdtcEtiVTE2YXpGWlZGa3lUWHBaZWs5VVl6Qk5lbGw2VDBSUk5FNXFWWHBQVkVwdFRXMVplVmxxVFhsT2Vsa3pUbXBLYlUxNlFUTk9WRmswVFhwbk1VOUVXbXBPZWtFeFRtcE5NVTF0V1hwT1ZHTXdUWHBaTTA1VVdtbE9iVTE2VGtSak0wNXFVWHBPYWxKb1RtcEpNRmxxV1RCTmVrRjZUMFJOZWs1VVp6Sk5hbEV6VG5wck1scHFXbXRPYWtWNlRsUmpNVTVVV1hwT1ZFMDBUbFJaTWxsNldYcE9iVmw2VFZSU2JFNVVZekJaZWswMFRtcE5lazlFWXpWT1ZHc3pXVlJqTTAxdFNYbFphbEpxVG1wbk0wOUVXWGxPZWxVeVRYcFplazVVVFhwTlZGa3lUbnBKTUZwcVRYZE9iVTB6VFhwTk5VNVVaekpPYWswMFRsUlplazE2WkdoT2FtTXpUbXBaTVU1WFJUSk9SRlV6VG0xVk0wNTZaR2hPYWsweVRsUlNhazVFWnpGUFJGVjRUa1JuTWsxcVRYbE9hazB4VG5wWk0wMTZUVEpQVkZVeFRYcE5NMDU2WXpCT2Vra3lXbFJWTTA0eVJUSk9hazE0VG0xUk1GcFVXbXBPZWtsNlRsUk5lazVVVlRGUFJGazFUbXBOTVZsVVdUSk9iVkV5V2tSTmVrNTZTVE5OYWxKc1RsUkpNRnBxV1RCT2JVa3lUWHBrYUUxNldYcE5WRTE0VG0xUk1VNXFXVEZPZWtVeVdYcGplVTVYUlROUFZGa3pUbTFOTTAxVVVteE9lbU16VFhwWk5VNVVVVEpOYWxVMVRtMVZlazU2V1hwT1YwVXdXbFJSTVUxdFdUSk9SR04zVG5wck0wMXFXVEJPZW1NelRVUmFhRTVFVVRGT2FrcHBUbFJqTVZsVVdteE9SMVY2VFZSWk1VNXFhekJhYWxsNFRucE5NMDlVVVROT2VsRXlUbFJaTVU1RVRUTk5hbU14VG5wSk1VNTZZM2RPYWswd1dYcGthRTE2UlRCYVJGSm9UakpGTWsxVVpHaE5la2t5V2tSUk5VMXRXVEpPYWxFMVRrUlZNMDFVVFRKT1IwMTZUMFJSTWsxNlFYcE9hbFUwVFhwTk0wNVVUVFJPVjBVeVdWUlNiVTU2VFRCYVJHUm9UbXBWTUZwcVVtdE9lbEV5VG1wU2FFNTZhekpPUkZrelRtMUpNMDVVVFROT2FsVjZUVlJOTUUxNmF6Tk5hbU41VGtkUk1rNVVZekpPVkZrelRWUlNhazF0V1RGUFJGSnNUbFJCTUZwRVl6Vk9SRVV6VG5wTmVVMTZhM3BPZW1NMFRucG5lazlFVFRCT2VrRXlXbXBXYUUxdFNUQk5WRTB4VFhwbk1VMXFZek5PYWtsNlRsUlZORTVYUlRKT1ZGVjVUa1JGTWsxcVRUSk9lbU13V1hwS2FVNXRVVEpPUkZFd1RrZFpNMDlFV1RST2FtTXlXVlJLYlU1VVJURk9WR1JvVG1wRmVWbHFZelJOZW10NlRtcFpNMDE2V1hwTlJGVXpUbTFSTVUxNll6Qk9SR3N4V1ZSTk1rNUVWVEJQVkdNeFRucHJNazlFVlhkT2FtY3hUMFJaTUU1RVl6Tk5hbEp0VG1wak1GcFVXVEpPYWtVeVdtcFplRTU2U1RCTmVsVXdUbTFWTVUxRVkzZE9SR3N4VFVSYWJFNXRXVEJOYWxVeFRrZFZlazFxVVhsTmJWbDZUbXBWZWs1RVZYcE5lbU16VFhwTk0wNVVVVEZPVjBWNlRtcFZkMDVFU1RGUFJFMHdUbFJSTWxwVVdURk9WR016VDFSTk0wMTZRVE5PZW1NeFRYcG5NbGxxVFRWT2Fsa3hUWHBOZVU1NlNUSlBWRkV5VGtSUmVWbHFWWGhPVkVGNlRtcGthRTVIU1ROUFJHTjZUa2ROTUZwcVZUVk9WRkV6VG1wVmVrMTZUWHBOYWxwcFRsUlpNazU2VlhkT1ZFRXpUV3BWTUU1cVZYcFBSRmt6VG5wSk0wNXFZelJOZWxFeVdXcFJORTU2YXpCYWFtTXdUa1JGTTAxcVkzZE9iVmt6VDFSS2JVNXRWVEpQUkZVd1RsUnJlazFFWTNoTmVsa3lXV3BWZDA1NlRUQk9WRmt4VG1wRk1rNTZUWHBPVkVFeVdXcE5ORTVxWnpCT1JFMDFUbGRGTWs1Nll6Sk9lbXQ2VDBSS2FVNUVTVE5aVkdNelRqSkZNRnBVVlhwTmVtY3lXWHBaTUU1VVNUQk5lbGw2VGtSck1VNUVWWGROZWxGNlRrUk5OVTE2VlROUFZGVXlUa1JWTWxsNldURk9WRVV6VGtSS2FVMTZRWHBPVkZWNFRrUk5NazVVV21oT1ZHTXpUMVJSTVU1VVp6Sk5lbU42VGtScmVrOVVUWGhPYlVVeVdsUldhRTVYUlRGTmFtTjNUbFJuTUZwVVdYcE9WRWw2VFZSTk1VMTZTVEpQUkZWM1RXMVpNRTE2WkdoT1JFa3hUa1JOTkU1VVRUSk9WRnBxVGxSck0xbFVUWGxPUjFGNlRXcGFhMDU2V1RKT1JGa3hUbTFOTWsxVVRUSk9iVkV6VDFSYWJVNUVSWHBPVkdNd1RYcFpNRTU2VFRWT1ZHc3lUVlJLYlUxNlJUSlpWRlYzVGxSbk1rOUVWVEpOZWxVeVRXcFdhRTVxVFRKT1ZFMDFUa2ROTWsxNlVtaE9SMDB3VFZSTk0wNXFVVEJaZW1Nd1RucG5NMDFVVVRGTmVtY3hUMFJOTlU1Nll6Tk5SRTB5VGtSck1rNUVUWHBPYWxFeVdrUkthVTVxUlROT2FscG9Ua1JqTWsxcVkzbE9WRWt3V21wUmVFNVhSVE5PYW1ONFRucFJNRTFxVVRSTmJWa3pUVlJaTTA1cVdUTk5hazB6VFhwQk1VMUVUVEZPUkd0NlRXcFpNazVFYXpCWmVrMTVUa1JqTTAxcVVURk9lbGt4V1ZSUmVrNXRWWHBPYWswMVRsUk5NbGxVV1ROT1JFVjZUMVJqZWs1SFRYbGFhbFV4VG5wRk0wNXFZM2ROZW1zeldWUlNiVTE2YXpKWlZHUm9Ua2RGTVU1RVNtMU5iVWt3VGxSUk5FMTZVWHBPYW1ONFRsUm5NMWxVWTNwT2JWVjZUbXBqTWs1RVl6Tk5lbU13VGtSbmVWbHFVWHBOZW1ONlRucFNhazVFUlROT2FtTXhUa1JKTTAxcVVtcE9SR013VFZSVmQwMTZXVEJOZWxFMVRsUkpNbGw2V21wTmVsa3hUMFJWTVU1RVp6Sk5hazB3VG0xVk1VMVVXVEpPYWxFeVdWUlNhMDVVV1RCYVJFMTVUWHBOZVZscVVURk9WR2Q2VFdwamVFMXRXVE5QVkZKclRrUkpNRTlFVlRWT2FsVXhUV3BaZUUxdFdYcFBSR04zVGxSTk1VOUVVVEpPZWxreldWUlZkMDVVWnpKUFJHTTFUa1JWTUUxVVdUQk9iVVV5VG1wamVFNUVXVEZOUkZab1RtcFpNRTFVVlRCT2Fsa3lUbnBLYVUxNlZUTk5lbFpvVFcxSk1FMTZTbTFPZWxrd1RucEthVTU2U1RCYVJGWm9UWHBGTVUxVVdteE9la2t4VFhwTmVFNVVRVE5aVkZVeVRucEZNazFxVlRKT1IwVXhUbFJqTUU1cVl6SlBWR042VG5wVk1FMVVZekpPYW1ONlRucFZOVTVIVlhwT1ZGVXhUbXBuTUZwcVRUQk9SRVV5VG1wS2FVMTZXVEZaVkZFeFRsUkJNMDlFWTNkT1IxRjZUVVJOZUU1NlZUQmFhazE1VG5wQk0wMUVUWGhOZWtFelRtcFJNVTVFWnpKT1ZGSnFUa1JyTUU1NldUSk9SMFV5VDBSVk1rNTZVVEpOVkZsNlRrZEpNVTFFVVROT1ZGVjVXV3BSTlU1dFVUTk9lbU41VFhwbk1VMVVZelJOZWxFeVRrUlJNRTE2U1RKWmFrcHRUbnByTWsxVVRUVk9hbU15V1ZSak0wNXRXWHBPYWxrMFRYcE5lazlFV21wTmVrRXdUbXBOZUU1WFJUQk9SRkpxVGxSUk1VNUVXVEZPYlZrelRucFJNMDU2YXpKT2VsSnRUVzFaTWxwVVZYZE9SR015VFZSTmQwNTZhekpOZWxWNlRrUlplazE2Vm1oT2FtY3dUMFJSTTA1cVJYcE9SRkpwVG5wVk0wNTZZM2RPZWtrd1dWUmpORTE2V1RKT1JHTXhUa1JKZWsxNlRYbE9SR041V1dwU2FVNXRTWHBOZWxWNFRtcGpNVTlFVFRCT2VrRjVXV3BqTTA1dFZUSlBWRnBzVGtSbk0wMUVUWGxPUkd0NlQwUmFhazVVVFROT2VsSnBUVzFKTVUxcVVteE9hbEV4VFZSak5FNTZVVE5QVkZGNFRXMVplazFFWTNsT1Ixa3dXa1JOTkU1RWF6Sk9ha3B0VGxSck1GcFVUVEpPYlZFelRYcGFhRTVVYXpCYWFrMDBUbFJWTWsxcVkzZE9SR015V1hwYWFFNUVTVEJhYWswMFRrUm5NRnBxVFhkTmVrMHpUV3BSZUU1RVl6QmFWRkV6VG1wbk1FOUVUVE5PUjAweFRsUlpNVTVVVVhwT2FsVjVUbTFGTVU1RVl6Sk9lbXN4VFZSamVVNXRXVEJOVkVwcFRucFJNMDFFVW10T2Fsa3dUMVJaTTA1cVVUSmFha3B0VFhwWk1FMXFUVFJPUkdjelRsUlNhVTVVUlRKTmVsVXlUa2RaTWs1VVRUQk9SMUV4VFVSak0wNVVVWGxhYWxFMVRYcFJNVTVVV214TmVtY3hUbXBOTVU1VVJUQk9WR013VFhwQk1FMTZVVEpPZWxreVdsUmFhMDU2V1RCTlZGbDVUbnBuTWxsNldteE9hbXN3VFdwak1rMTZXVEpPZWswelRsUnJNMDVxV214T2JVa3pUbXBOTkU1dFZURlpWRmt5VFhwWmVWbHFZek5PVkZGNlQwUlpNMDV0UlhsYWFsRTFUa2RWTVUxNlVtaE9hbFV5V21wUk1FNXFXVE5OVkZFelRYcE5NazFVV1RSTmVrMHhXVlJSZVU1VVFUQk9hbFYzVFhwQk1FOVVZekZPZWswelRtcFNhVTVxU1RGT1ZGVXhUbnBaTVUxcVVUQk5lbFV5VDBSWmVVNUVXVEJPYWxWM1RtcHJNRTlVWXpGT1IxRjZUMFJWTVU1cWEzbGFhbGswVG0xRmVrMTZZM2RPYWxWNlQxUlJNRTE2VFRGTmVsVjNUWHBGTVU5RVdURk9SRlY2VG1wS2JVNTZaek5OYWsxNVRrUlJNMDVVVVRGTmVrVXlUWHBOTTA1RVJUQmFWRTAxVFhwRk1rNVVWWGhPUkdjd1drUlZNRTVFWXpCWmFsSnBUbFJKZWs5RVl6Tk9la0V6VFVSU2JVNTZUVEZaVkdNMFRYcFpNRTVxVFhwT2VrRXdUWHBhYkU1RVZUQlpla3BwVGtSck1VNUVUVFJPVkVVeldWUk5OVTVxV1RCUFJFMTRUbnBaTWxscVVUQk9SMWt6VDFSamVVNUVSVEpPVkUwMVRYcFZNRTFxVVRSTmVsVXpUbnBqTWsxNlVUQlphbFYzVGxkRk1sbFVXbXhPYW1Nd1dXcFpNazVxV1RCUFJFcHRUa1JOTVU1NlkzcE9WRTB3V2xSak5FMTZZek5QVkZFd1RXMUplazVFVlRCTmVsVXdUVlJSTkU1WFJYcE5SRkpzVGtkWmVWcHFXWGhPYlZWNlRYcFZNVTVxVlhwUFZGSnRUa1JKTUU5RVRUQk9SR2N4VG5wTk5VNXFVWGxaYWxwc1RXMVpNazFxVFRST01rVXdUa1JWZWs1NldUQmFhbEY1VG5wWk1GcEVWWHBOZWxFelRXcFdhRTV0VVRCUFJGcHJUbFJuZVZwcVdtMU9iVkY1V21wUmVVNXRWWHBOUkZKcFRrUnJNazVVWTNwT1JFVjVXbXBhYWs1cVl6Qk9hazEzVG0xRk0wOUVXbWhPUkdjeFRucGFiRTE2VFRGTlZFcHBUbGRGTTA1RVRURk9WRVY2VDFSVmQwMTZRWHBPYWsxNFRsUlJNMDFxVFRGTmVsRXpUa1JWZDA1VVJUSk9WRlV4VG1wck0wNXFWWGxOZWsxNlRsUmpORTU2VFRCT2VrcHRUa2RGTTA1cVVtdE5la2w2VGtSYWFFNXRTVEJOVkZWM1RtcE5NVTVVWXpKTmJVbDZUbXBSZUUxNlp6SlpWRTAwVG0xTmVrMTZVbWhOYlVrd1dWUlZlazU2WXpCT2VrcHRUa2RSTWs1NldUSk9WRVV5VFdwak5FNXRXWGxhYWsxM1RtMVZlazFFVFhwTmVsVXdUV3BTYlU1VVRUSmFSR015VGpKRk1rNTZUVFZPVkZGNlRYcFNiRTVxYTNwT2FtUm9UbnBKTUUxNldURk9SR3N3V2xSS2JVNXRVWHBQVkZFeFRrZFpNazVFVVRSTmVtY3lUbnBqTWs1cVNURlBWRkV3VG5wWk0wOVVUVEJPZWtGNVdXcFpORTVVUVRKT2VsVjVUbnByTUUxNlVtMU9SR3N6VFVSTk1VNUhUWHBOYWxab1RtMUZNMDlVV21wT2JVVXdUWHBLYVU1SFRYcFBWRlV6VG0xVk1sbFVUVEZPUkdONVdXcFNhMDVVVVhwT1ZFMTRUbFJSTWxwVVVYbE9WRUY2VFdwYWFFMTZWVEpPZWxFd1RucE5NRTVFVm1oT2JVMHlXbFJTYTA1SFJUQmFhazAwVGtkTk0wNVVZelJOZWtFeVdsUlZNVTVFWTNwUFZGcHRUa1JGZWs5VVkzaE9WRlV5VG1wVmVrNTZZekZQUkdONVRtMUpNRmxVVFRST1ZGVjZUMFJrYUUxdFdUTlBSRlY2VGtSWk0wMUVUWGxOZWtreVdYcE5NazE2V1RCT2FscHFUa1JyTTAxNlRURk9SR014VFVSUk5VNTZhekJPUkUxNFRrUlJlazE2VVRWTmJWa3hXVlJOZUU1RVRUSlphbU15VG0xVk1VMTZZelJOZWsweldWUlZkMDE2V1RKUFJFMTZUbTFKZVZwcVZURk9SRkY2VDFSU2FrNUVSVEphVkUwd1RYcFZlazFVWXpST2VsRXlXa1JWTWs1cVZUSlBSRnBvVG5wbk1VMXFZM2xOYlVsNlRXcGpkMDE2YXpGT2FscHFUa2RWZWs5VVl6Tk9iVlV6V1ZSUmVrNUVaekJhYW1NMVRucEpNazlVVFRST01rVjZUVVJqTUU1NlRUTk9lbGswVFhwTk0wNVVWVEZPVkZFeFRrUlJNazU2V1RCYVJFMTZUWHBaTWs5RVdUUk9lbWN4VFVSYWFFMTZTVEpQVkZKb1RYcHJlazFVV1RST1ZGRXlXbXBqTTA1WFJYcE9lbU0xVGtSSmVrMXFVbTFPVkZGNlQwUlZlRTVxV1hwUFZGSnRUbXBOTWs5VVRYaE9SMVV5VGxSTmQwNUVWVEpPYWxWNlRsUmpNbHBxWXpSTmVsRXlXbFJOTWs1NmF6Tk5lbU14VGtSck1sbHFUVFJPVkUweVdYcFZkMDE2YXpKUFZFMHlUbnBaTTAxVVZYZE9SMWt3V2tSVk5VMXRXVEpPZWxKdFRXMUpNazU2VVhsTmVtY3lUWHBLYlUxNlp6QmFSR013VGtkSmVrMXFZM2hPUjFreVRsUmFhRTU2UVRCYVZFMHhUbnBOTUU5RVdYcE9hazB5V1ZSTk0wNVVSVEZOVkUwMVRucE5NVTVVVFRCT2FtY3lUa1JOTWs1cVl6Tk5SR013VG5wRk1FNVVZekpOZW1jd1RsUlZOVTVxVlROT1ZGSnBUVzFKTVU5RVZYaE9iVlY2VG1wWk1FNXRUWHBOUkUxNlRrZFZNRTlFU21sT2VrVjZUbnBOZUU1NlJUSk9WRTE1VGtScmVrMXFZelZPZW1NeFRXcE5lazU2YXpKT2VtTjNUbTFGTUZwRVdUSk9WR3N3VDBSS2JVMTZVVEpaZWxVeFRsUkZlVmxxWkdoTmVsa3hUMVJWTlU1dFdURk5SR00xVG0xWmVWbHFZelJPYlZVeVdWUmpNazU2YXpGTmFsa3dUWHBCTWxwVVdYUy9Fd0FBTVZwdFVqTkJkM0JxUVZGSWJWcHRTREJCZDBReFRFZHhkVnB0VmpKTmQwd3dXbTE0TUZwSFYzWkJlbEl6VEVkYWJFRktVak5NUjFveFFWUkVNRUZIVjNaQlZGWXpXbmRhTTFwdFdqRkNSMGhxV20xNE1GcDNUREpCUjNBeVFYZHdNRnB0VGpOTVIwMTZRVWRJTWtGUlNETkJSM0F5V20xSU1scHRjREZDUjFveFdtMU1NRnAzU0RCYWJVZ3pXa2R3TlVGM1RETkJSMFJzV20xYWJVSkhSREZCVVhRelFVZEliRnB0U0d4TWQzQTFRVzFNTTBKUmNHeEJWRVF6UWxGSmRVRnRjREZhVVZkMlFVZE1Na3hIY0RSQlVWSnRXbTFhYTBGdFZqRmFVVnBzUVhwRU1rSlJSRFJhZWxZeVRFZEZkMEZ0VW0xQmQxcHJRVzFNTTB4SFNHcGFlbFl5UWtkTU0wRlJUR3hNZDB3MFFYZE1NMEZ0UlhkQmQweHRXbmRFYkZwNlZqTmFVVVYzV20xMGJVRkhUWFpCZWtodFdtMUVOVUY2U0RGYVVVMTRRVkY0TWtGSFNEVkJSMHh0UVVkSU1rRlVTREpCVVZwcldtMVNNRUZ0Y0RKQlVVeHNUSGR3YTBGdFZqRkNVVm95UVVkME0wRlJXalJCZWxwdFFrZE1Na0ZVUkRGYVIxb3pRVWRTTTBGM1dqSkJSMW93UWxGWGVrRkhkREZhZDBnd1FUSlNNazEzY0RCQlIzZ3dRVkZhTWtGdGRHMWFiWEYxUVhkMGJVRjNXakpCU2xJd1RWRmFNVnB0VGpGYVVVUXpRWGRFYlVKUldtdGFiVXh0V20xTU1rRlJWak5CUjBSclFWRldNa0YzY0cxQlZGb3hXbEZ3TVVGUmVHMUJSMFJyV20xYU1rMTNTRFZCYlVnd1RWRk1NRUYzVmpGQ1VVMTRRVWRPTWtGSFJEVkJiVWd4UWtkSU1scHRVakJCYlhBeVFXMUlNVnBSVjNaYWJWWXlUVkZKZFZwdGRETmFkMW8wUVZGYU1VSlJUWFZCZDNSc1RYZEVNMEZSY0RKQmQzQnRRWGQwYkV4M1REVmFiVm96UWtkRWExcDZURzFhUjBSdFFYZFNNRXh0Y0RCQmJVNHdUWGRJYkZwdFdqTmFSMDEzUVZSYWJWcFJTRFZhYlhneFFrZFhlbHB0ZEcxQmQzQXlRVEpTTTBKUlJYbGFla3d6VEVkTU1FRjNXbXhOZDAxM1dtMTRNRnAzV20xQmJVZ3lXbmRGZWtGdFdtMUNVWEEwUVhkTU1rMUhTREJCVkV3eVRYZE5kMXA2VmpKTWJWZDZRWGRFTVVGUlYzcEJWRVF3UVcxYU5FRnRkREpOUjNCclFYZHdNazFIVFhkYWVrd3pRVWR3TlVGUmRHMWFkMFYxUVhkRWJVRnRjRFJCZDNRd1FsRk5kbHB0V2pOTVIwZ3hRVlJNYkUxM2NHMUJSMDR6UWtkSU1FRnRlREJCUjBWNlFWRklNRUZ0VERCQmJVNHdRbEZhTVVGM2NERk1SMW8wUVVkTWJVRjNUWFpCZWxvd1drZE1Na0YzZERGQlVVMTVXbTFTTWtGdFNHdEJSM1J0UVcxRWJFRlVTREpOZDBoc1ducFdNMXB0V2pCQlZFUXlXbmRJTUZwNlRESk5kMFYzV20xV01rRjNURzFCVkZKc1RYZEliRUZSUkROTVIwZ3dRWGRFTTFwdGNHdGFlbFl6V20xYU5GcDZWakpNZDFkMlFYcGFNbHB0Y0RSYWJYQnRRbEZFTkVGNlNETkJVVWd5UVcxTWJFMTNWM3BhYlV3elFrZGFORUYzVEcxQmJWZDJRVWQwTTFwM1YzWkJVWEF3VFVkTU0wRnRjREZCYlZveVFWRjRNRXh0V2pGYWJVd3dURWR3YkZwdGNEQkJVWEYxUVZSV01VRlJUREJCVVVodFFVZE5kMXB0Y0RCQlVYRjFRVWRFTVVGUlJEUkJiVWd6V25kRmVVRlJSREphZDB3eVFXMXdNMXBSY0RKQlIzQXpRa2RYZGxwdGRESkJkMFJ0UVhkU01rSkhUWGxCU2xKdFdtMUlORUZIY0RCTVIwd3dRVzFhTUV4dFRERkJSM0J0UVVkd01rRkhWakpDVVVRd1FVZHdiVUpIU0d4QmJWSXpRa2RFTTBGdFRESkJkMFF4UVZSU01FRjNUWFZhYlVnd1FsRklNMEZIVGpKTlIxb3pRVzFTTUV4dFdteEJlbEl5V20xSU5FRkhkREpNUjB3elFVZEVNa0pIUkRCQmQzUXhXbmRGZWxwdFZqRkNSMFY2UVZSTU0xcEhSWGRCVkV3eVdtMU1NVUZIVEcxQmQwbDFXbTFFTWxwSFdqVkJiVll3VEcxRWJFRnRWakJNYlhBeVFYcFNNRTEzY1hWQlVYQXpRVkZOZWtGM1ZqSkJiWEExUVZSSU1rSlJUR3RCZDBSdFFYZEVNVUYzU0RGQmQwZzFXbTFTYlZwSFRETkJkM2h0UWxGTmVscHRXakZhUjBSdFFXMXdiVnB0Y0cxQmQxSnNUSGRJYkVGM1JESmFkMDE2UVZSTU1FMTJjRUZRWVVWc2JrbzFZM0ZWZUhSRFJrNWhTRWhuZG5KNlUzWkVNRnBwU1hsME5XNTVWalJ2U0RWbVdERkZNbkZLUVVWSk1VOUpRVlExV0UxTFNXMUdTMDFOU2xOd1pVaEplV054U25ReGNubHdha2hJVTFseVMwazBSekZGVjBkdFdtMUJTR1l5Y1VnNWFYSlRZak5JTUVGMVFWTldiVVpUVFVGWU1ERllTVkYxVFhCNE9ESndZVVZhY0RCRWFrMHpRVkJ4U2pBeWNtRldOVWhJT0dsTlNuRm9jRWxGZGtkNlVteEhWVmRhYjJ4blltNTRjVlp1U0VsU1IzZEpVWEJ0ZFVSdVVrVmtibTF4V2tReWVXMXdNVk5UU1ZKVFZFUkdPWFZHTUVWWlFXMVdhMEpSZERKTU1tTkVjRE4xTUZwdFRETmFNV04yUVcxTlQwbEhjVEJLUjNGclNIaG5WSEZJU0dWTlNHZENSMGRhTlVoU09ESnhTVUZsV1ROQk1YQXdkVEpIWVVWdFJsUk1NSEJIV20xTk1rRlVXa2xYVmtoNFFUTnVTbXRFY1cxRU5HNUhkV1JNTUhSbGNERmpNVzh6VHpOQmJVMUNTRWhCTkVoMk9YbEJNMEZTY1hveFlVVjVjWGh1ZDBGaVJuZEZRM0I2WTNWRmQwd3lSM1k0TkVwSmRVcE1lWFExUVhsVFZYSkxSVE5hTWtGaFNGSnFaVnAzVjBwSllWWXpiekYxWjBWTFYydGFlbGRoVFRCTlJVRklaM1pIVTBWdFRYZzRhVUY0VTNwSGVqVnRTVXRpYWtRd1FUSkVNbW95V2tsVGJVa3llVFpJVkZJMFJ6TkJOa3d4ZURSdllYQmxTbFZYWTNGVFdqVkVZVUZsY0hkeGJFaElaalJIWVVGSWJsVkZkMDFKU1c1RU0xTk1TV0ZTTTBSaFNWbEZWRTFpU0hsSU5VRlVlV1JIZGpsaFNGRjVZMFZ0ZVdadlIwVkNjR3htYkhCVWVUQkpSMGxGU2xGUGJVSlRRWGh5VWpWSldubE9Na2d3WmpSTk1XTnRTV0Y1VlZwU01URnZTMWQ1Y1hwd2JXNUtWMkpLWVhBeldsUnhVVVpMY1dad2VtZHVSbE41ZVVrd1FXdHVTRm95UWxReFdVMHhlV2h3VkRsb1RVZDVWVzVSUVVGR1NVRnVTVlJYYm5KNFkydHZWSEZvUVROQlprRjRUVzFFZURGSVdHMVhNM0ZKVW1sTmVrbHNTSGxUUmtKTFlqSndWRkpxUmpJMU1rMHhVM1p4YlVRelJqSlROVTFIY1dOTlNuRkJjRlE0YkZwVlRXVkNWR3RRU1cxWFkwZHRlVVpKUzBGQmJsTk5iRzVHWjFSR2QzRmpTa2hUV2xwVFNWRnZVVTE2VFhsT05YSjZPV05IZW10RVFYbDRNSEJUUVdOTk1YVmlSbmw1WW5CNmEwbHdlRWxGVFRCbWJFSklTR2xKU2psbmNVaG5VWEJMWTNaR1NubGxTRk4xVmtKS1oycGFTbWRLUmtwU05YQlVPVTlLUzNWblJESnFhbG93WjAxS1ZFVjVTbmh4WkVFelFXTnVSMDV0Y1cxMVRIQnRTVlp2TVdONGNWVlhNRzVUV21Wd1UwRnRTREkxZVVodGVURklkM1Y1V2twaWJFcFFPVmhLVVZOalRFdHhaRVZJY0dsd1JtZEpURWhGWTAxS1pqTnZla0ZQYmtkV2FVaGhZME5ZTUVGWVRUQk1hVWw1VDBwRU0wNHpUWGRKWWtsSU1XRllNbmxwVEV0aU1GcDVZMVJ4VkZKcFJqSTBNVnBoZURCd1IzRnBRVWxKVTBsSmNVOXZTSGw2U1VkNVpWa3pUMGRhZWxabGIzcHFORWhHWjNod01YRlNUVWxGYVVWNVJVOUlkMDFwV25ZNU1HOVRWMmRLVlZwdFdUSmliSEI2TkRGeE1FeHJja3RqYWtkSVoySlpNM0ZhUm5sMVpVWlJkWGxNYlVWUFJsRjVabHAzZUd0R1ZERmhTSHBUV2tsUlYxWnZTMDF1V2xKTVpVRlZUVVZHYlVWWVRVaHJkVzU0V214TlMxTnBTbFI1WTBkNFdqVmFiWGxMUkcxeGJrMXRUMjVKTVhWWGNEQm5SRWt5TkcxeGRtZHJURWRFTTBaTFRtVnVVVVZhV0RCWGFFeHRWMEZCTUZkcGNIaEVaVWRSU1VwYU0wOTRURWhNTVc5NldqVndVMDFuUWtwQk0wbFRkVlZOVkRCc2IxRlRZMEpJZFZkYWQzbGxjbUZ4VlZwTGVHdHZkM2h0V2xSSldVRlVZbXh3ZUV4cVJqSkZhWEV6Ukdsd1VtdFBSakJYYkZwaFR6Rklla0ZvY25wclQwRjZWMHBDUm1kNFJsVlNiSEV6VTJkSGQwUTFUREpUWkVRelFYcEhTMWRKUVRCNVNWcDRWMmRLZUdzeFFWRlBXbHA2UkcxSFZXTjRRVEpXTUhGSFdtcEhNR1l6Y1cxTmQyOHlkV2xKUzA5WFNVZDVVM0ZIVDJkTk1HTmFSMVZ4UWtneFJHMU5lbE4zYmtnMWRWcEhkRE5OYkRsRFFrZE9hVVpSVERGR01sTnBXbEE0YWxwNlJVdHdTbUpzU0RKVFdrUnRRV1JaTWpsR1NsSjVaVXBoVFVWTWJHZGpSa2RYWVVKVlUySnVNSGxtUVV0VFlVUktPR3BNZW5reVJUSjVka0V4VTFGdWRtWTBUVXBuVTBSSWRXaE1iVTFyUlZWTlltOVVOV0ZJZW5sSmNFZEZXVTFSZVdSTVlVOUJiMHRTYVhCdGNUTkpWREZwYjFOeFYyOHpUWHBhUjBsdFNtRjVibkpWVFRWd2JYRkVjWGRCWTBsTGRVOUhWVTB5Y0ROQmVGcFRVak53TWtGUGJqRlRXVUZTUVhwYWVVMXRia28xZDNKM1JHbE5kMDlzU0VsMWEwMUtNR2xJVkdkSmIxUkZkMFpLUkROSFNFRjZSRzFCTUc1U2VEQk5SMGxoVEdGMFpXOHdZakJhTTFKcFNraFRWVVY2T0RSdVlVVnVTRlJ4VTI1dFRHVlliVmRCYmxKVFdWZ3lZMWh3TWxNelNuZzRiRWgyWm14QlNuVmlXbUZQYUc1TGNWTkNWWEY1V2pKblZuRXlPRFJaTUdkc1drZHdiRTB5UVRGTk1IRlRTREpOTVc5SFdtbHZkMEZwV2tkMGJVeEtOV3hIVlU1dFNGVlBaWEpoUkRWd1lVRktjREo1ZFVVeVkxZEVkM0ZXV1RCTlJVcGhUMXBDVWtsVGNGRkJTVVJLZVRWdllVRjNRV0ZQTUc1VWVXTnVTR2RaYjFKbU5IQnRUelZJVWxONGNFbGpVRXBKWTFodlZXTmxSREExWjNKNk9VRnZTamxuUldGTlVVZFZTVU5DUjBRelJrZEJWMEpVT1VwR1NWZDJUVE40TW5CNmNESk5NSEZJUm5kd00wUmhUalZFZDBsWlNrdFBkVzl0U1RaYWVWcHBTRW94YWtoSlkyNXVNVVZtVFVoRmVFUmhUMDlDU25reFRIbEZURUZIZVdSQlNVRmlTRXBqVmswd1kxQklla3cwYjNZNWRWcFRlWGRhU1ZOcVFXMUJOVmt4U1ZCR2VraHBia2hGTTBsSFRYaEtTV0pwY0V0eFNFSlVTV0Z3TTB3d2NHRmpVVUZIVTJKR1ZFRmxia3BuTmtFelltdEpTWGhwUkRKRlRYRXpjVkJHU0ZkTGNubEpZVmd6VDFsTlNqbFRSVEJCWkhKM2NYbEVNVk5FUlVkU00waFRTVXRHZVVocGNIcG5RbkpVUVdaYVNrMUhTRWg1VVV4dFYxZFlNMWRaYm14blNWZ3dWalJ5VW5WUVdsSnhVWEI1U1RaWU0wOXFTVWhJYVZwSmREQk5Ta2xyV20xNGJHNVNhbTFOVkdkU2NrdE9OVWN6ZVVkYU1Va3liekJGWlc1VGNWcE1NMk5XY0ZGNE5VMVJjVXhHU25sWFNuZFBVa2hVWjFaR1UweHBibmRYVjBoNVlqTnVTMDF1V0RKQlEzQkhjR3BFTTA5VlFsVjRNbkpLVjNkYVUzRmpRVXBNTlhKM1QxWkZSbWQxU1V0NFpVcFZVek51VVVGWmNUQXhNa1o0VmpOQlIwNHlRVXA0TTNFelUxZE1TMEZhYjFWV01HOXRTWGh1VkhsU2J6SmpZMFo0ZFhoeVZVMURibnBNTWtaNmNHVnVWRGxuY25abWJWcDNkVEJJZWxvelJYbEpiVzVLVFdaR01EaHBjRE41YlVaSWNVUktkM1ZWU0VkVGFXOUlRVnBIWVU4elFURmpWVWt5Y1ZwTk1YVTJjVEo1VWtaS1oxbGFlblZXY1ROUFlrRXdlVXBOUjBVMGJ6QlhVRVJMY1hWR1NrMTRTSGxKVjNBd1Z6UkpTamxEUWtwNE5VMVNjVFphVlhnd1JqTlBUVUZLY1VWd01VRnBTVzFFYVVwNGVVOUZZVWxSY0ZCblVVZEhRWGh3ZDFwcWNHMVBiRWxLY1hkTk1Ia3dXREE1ZFc5VGNWWktTRUUwUWt0NGFVaDRRVTl2U0RsUmIzcEpNbkF4VjBsRVNIbFFRVEJOTWtwNk9WcEdNbG8xUVhZNVVFWjZOV3BHTTFOUVdrWTVRVUZUWXpadk0wOVBRVWRXYkV4S1JUTnVlR294U0VoaU5XNUhSVE5JZUZKdFdsRnhOVTEzVW14R2RqbGhSek5pTTB4SmNVbElSM2hxV25wNVUyNUlWMWx2U0dkUFJXRlRZVXBVY1dwWk1YbFhUVWRQVFVoNmVHcEhNVmRpUVVwVGVVeExZMjFOTW5sWVdHMU9ORVpLZUd0eFZVMUhUVkpqUW01SVZqTnlSM2xRY2xSVFpYSktZMFpNTWpWWVducE5Xa3hIUkd4dlUwbFJiMU5GZWtaVlkzbHdNRFJwYjNkTlZFRlNjVkJ2U0RGUWNHRjRORVl4UlV0Wk0wMVZXakZKYmtVeFkzcEpTR2Q2Y0hsUGFrSkxVMFZ5ZURsaFNESkVNMHBUY1Vkd01IRkJURXAxYkVGc09XMUpTREZKVEVkT2JXOXRjV0pFTVVreldEQlhXRUZoY1cxdVNVUnRXa3BFWlZwU1RVMXVTbkZNY1Vsd00wWlVZelpCU25sRVJIaHhUMFZ0VFdsd2QzbEJRWHAxUmtkR09YaEZTRXcxYnpONVJrRXlVMEpKVW5Wc2J6QTRiVWt4U0RSRU0wbFpibmRFYlV4TGRXdEtVWEY1UnpGSmVtOXNPWFZ1TUVsbGNsVlhZVUZVZVdkTWVFRXpSak5OYUVZeWFqUnhTVTFIUVZKNWFtNUhVakJZYlUxM1JWSjRORWhUU0dWTmRtWXlUVkJuYkVjeWVYZEhla2d3U0hvMVptOUhSVXhFTURGQ1JFZEJORm93ZFZwS1lVMUNXVEpGWTBoSVFWbHVVMGx1UmxKRllYSktVMjFHVlZOS1JIZDVSbGd5UkcxdlNqZ3lTREJCVWtaS1JXNUtSM0ZoVFVvNVEzSjRjRE5HTUhCdFFYaFdiVWQ2WW0xYWVHZE1iMGRUZVVwTFUybGFTVUYzY0ZSYWEwRlRURFZLU2pWMldUTldNSEJIZVd0QlNVVnBiMGhUU1VwSFJVVnZZWEYzUVZWRWJHOTVWMGx2ZGpsMWNGSXhTRmt3T1hWeVVqQXhRVEZQU1VkU1ptVnhNMWRGUVcxUE1HOWhjRE5NWVVWa2NHMVBNVVJoUlhkdVZGZG9Ra1p3UVZCNk9XeE1Ta0ZtVFVaT09WWlFjREJhZDFkMlFYZDRNMEpSV210YWVrd3hXbEZJYkVGUmNHeE1kMGd3UVcxYU1rRkhURzFCVVZZeVFYZE1NVUZSY0RCQmJVaHFRWGR3TVZwM1dqQkJVWFF3VFZGTWEwRkhkREpNYlUxNVFXMVdNRTFIU0RSQlVVZ3dXbmRFTWxwdFRESkNSM0F3UVZGSU1GcDNTREJhZWxZeVFXMWFhMXB0VERKQ1VWb3pRVzE0YlVGM1NESmFiVVF3UVZGWGRscHRWakJDUjBnelFXMVdNazFIU0dwYWJVNHdRVWRGZUZwdFJEQkJkMGhxUVVkV00xcFJXak5CVVV3d1RWRklhMEZ0U0RKQlIwMTFRWHBTYlZwM1NETkJWRkl3V25kYWEwRjZUREphUjFvMVFVZDRNRUZIU0RCQmVrZ3pXbTFNYTBGM1VqQkJSMHd5V20xNE1FSlJSWGRCZWt3eVdtMU1NRUZSUkRGQlVVd3dRWHBJTTBGdFJYcGFla3d6UVZGRU0wRnRWakpOZDB3eFdtMTRNa3hIU0RCYWJVZ3dUWGRNTTBGSGVESmFkMW95V20xNE1FSlJXakJCYlZZd1RHMU5ka0YzVEcxYWQzQTFRWGQwTWtGdFRYbGFiVTV0V25kRmVFRjNkTDhUQUFCWk0wOUVXVFJPUkdjd1RYcFNiVTVFWnpKWmFsbDZUWHBCTVU1cVVUVk9SMFV6VDBSUk1VNXFWVEJhUkZKb1RYcEpNbHBVWTNkT1ZGRXpUbnBOTUU1RWF6Sk5WRlUxVG0xSk0wOUVVbXhPVkVFeFRYcFZOVTVVU1RKT1ZHTXdUbFJaTWxsVVVtdE5iVWt3VGxSamVFNTZZekpaVkdONlRtcE5NRTlVVFRWT2Ftc3lXa1JWTUU0eVJUQk5WR042VFhwSmVrMTZVbTFPVkZrd1RsUlNhRTVxU1RKWmVsa3hUa2RSTUZsNlRYcE9SR013VDFSamVrNVVVVEZOUkZVeVRsZEZNazU2VFROT1JFMTZUMFJSTTA1Nll6SlplbEV4VG1wTk1FNXFUVFZPVkVWNlRVUlpORTV0VFhwT2FscHJUWHBuTVU1cVdURk9WRUY2VG1wV2FFNXFSVEJPZWxwdFRsUkJNVTE2VlRWT1JGVXlUbnBOZDA1cVRUQk5WRTE0VGxSTk1GbFVVbXRPVkVVeVRtcGFhRTVVU1RGT1ZGWm9UbFJyTTA5RVZYcE9WRUV3V2tSYWJVNXFUVEpOZWxVelRYcEJNRTE2VVRKT2VrMHpUMVJWZDA1RVZUTk5lazEzVFhwak1FMVVVbXhOYlVrd1dYcFNhazE2UVRCYWFsSnJUWHBqTTA5RVl6Tk9hazB3VGxSUk5VNVVTVE5OYWxrelRYcE5NRTlVV1hoT1ZFVjZUMFJqTTA1cVVUSk9lbGw1VG5wak1scFVVVEZPUjFreFQxUlZNVTE2UVhwUFZFMHhUbXBuTVUxRVdURk9SMVV4VFhwV2FFNXFWVEJOZWxWNVRucE5NVTFxWXpKT2VsVXhUa1JaTWsxNlZUQlpWRlUwVG0xRk0wMVVXbTFPUkVWNlQwUmFhVTVVYXpKTmFsVjNUWHBGTWs1NlRUTk9hbWQ2VFdwWk0wNXRVWGxaYWxKb1RucEplazlVVlRWT1IxVjZUV3BhYUU1VWF6Tk5WRTB3VG5wak1FOVVXVEJOZWtrd1RsUk5OVTVVYXpGUFZGa3lUa2RSZWsxRVl6Rk9SMUY2VG1wak5FMTZWVE5QVkZWNlRucE5NRmxVWTNkT2VrbDZUbXBqTUU1RVdUTk5hbU0wVGtkRk1rNTZUWHBPYWtVeVdYcFpNMDVFVlhsYWFsRjVUa2RKTVU1NlVUVk9SR016VDBSVk1FNUVWVEJaVkZsNFRtcG5lazE2WTNoT1JGa3hUMFJhYUU1SFdUSmFSRkV4VG5wck0xbFVXVFZPZW1zeVdXcFpNVTE2V1RKYWFrMHdUbFJqTWxscVVteE9iVmw2VFdwTmQwNUVhM3BPYWsxNFRrUkZNMDVVV1RSTmVrMHhUa1JWZUU1RVdUSlpWRnBwVGxSck1VMXFUVEpPYWswelQwUlZNazU2VFRCYVZHTXpUVzFKTTAxcVRYaE9WRkV3VGxSVmVFMTZXVE5OYWxsNlRsUkplazE2VFhoT2VsVXdUa1JhYTA1SFZUSlplazE2VGtkUk1GcFVVbWxPZW1jd1RsUlZNMDU2U1RCTmVsSnNUa1JSTTA1NlRYcE9lazB3V1ZSTk0wNVVhekpQVkdNMFRucHJlazE2VlhkT1IxVXdUWHBWZUUxNlVUTk5hbU4zVG0xVk1FNVVWVFZPZWxFelRYcFpNMDE2UlRGTlJGRXlUbXBSTUZwRVRUVk9hbXN3VG1wWmVrNVVUVEZPYWxrMFRucEJlazVVVlhkT2FrMHhUa1JSTkUxNlZUQk5lbU13VGtSSmVrNXFUWGhPVkVreVdWUk5OVTVxVlRCT1ZFMTRUa2RSTWsxNlVtaE9SRmt6VFVSa2FFMTZVVE5OYWxKcFRrUkpNVTFFWXpOT2FtY3hUbFJhYkU1Nll6Sk9lazAxVG0xVk1sbFVXbTFPUjFFeVRWUlJNazV0VlRGUFZFMHdUa1JaTTAxVVdYbE9Na1V3VFhwWk1FMTZZekZOYWswd1RYcGpNVTFFVW1oT2FrMHhXVlJSTkU1cVdUSk5WR015VG1wbmVrNVVaR2hOYlZreVRYcFJNazVVYXpGT1ZGRXpUa2RaTWs1Nll6Uk9hbWN5VFdwTmVrNVVUWGxaYWswd1RucEJNMDVVVW1wT1ZHc3lUbXBTYUU1dFZUSk9lbEV4VG1wTk1rOUVWVEJPUjBsNVdtcFNhazVVVVhwT2FrcHBUa2RSTUU1VVZYaE9lazB6VG1wYWFVNVVUVE5QUkUwMFRsUkJNazFVVVRST2JVVXhXVlJTYUU1NlZUTlBWR042VFhwUk1VNXFZek5PUkZVd1QxUlNhMDVYUlROTmVsRXdUbXBWTUZwRVkzbE9hbWQ1V21wak5VNUhSVEJOZWxVelRucEpNVTVFV1hwT1JFa3dUMFJOTUU1SFJUTlBSR00xVGxSRk1FNVVVbXhOZWxrd1dXcFNhRTV0UlRKUFJGcHFUbFJSTTFsVVRUQk5la1V5V2xSUmVFMTZUWHBPZW1NelRucE5lazlFVW1oT2VrMTZUV3BhYVU1dFdURk5hazE2VGtSck1rMTZZM2RPYWxsNlRYcE5kMDF0U1RCT1ZFMTRUVzFKTWxsNlZYZE9WR3N5VFdwak0wNXFZekpaYWxVMVRsUlZlazE2V21sT2VrMHhUVlJaZVUxNlFUSmFWRnBxVG1wRmVrMTZVVFJPVkdjeVRsUmpkMDU2VVRKUFJGSnFUWHBOTUZsNldUTk9iVlV6VFZSWk1FMTZVVEJaYWtwcFRsUkplazlFVVhwTmVtc3lUMFJqTTA1cVdURk5WRkpxVFhwWk0wMVVVbXhOZW1kNlRXcFZlRTVVU1ROWlZGRXhUbTFGZWs1VVl6Vk5lbEV3VG5wTk5FNXRSWGxhYWxVMVRXMVpNVTlFVFRCT2Ftc3pUbXBTYlU1NlVUQmFWRTAwVGxSRmVrMTZXVFZPUkVWNlQwUlZNRTVIVlRKUFJGcHFUWHBGTUZwRVdYcE9lbU15VDBSUk1rNTZUVEJaVkUwd1RXMUpNbGw2WXpST1JHZDZUWHBXYUU1SFZUQk5lbEV6VFhwck1FOUVVbXhPZWxFeVRXcFplVTVFWXpKYVJFMHpUakpGTUZwRVdtbE9lbGw2VG5wTk1FNVhSWHBPUkdNelRrUnJNMDVVVW0xT1IwVXlUWHBSZWs1Nll6SlBSRkpyVGtkUk1GbHFUWHBPYW1jd1RWUlJNVTE2UVRGUFJGRTFUbFJKZWs5VVVtbE9lbFV3V2tSamVVNXFXVEpaYW1NelRrZFZNMDFVU21sT2JWVjZUWHBaTkU1RVdYcFBSRkpvVGtkSk1VMXFWWGRPYWxVd1dWUmFhazU2WnpCWlZGa3hUbnBaTVU1RVl6Sk9iVTB4VFVSUmVFNUVTWHBPUkUwMFRtMUZNVTVVWTNwT2JWRXpUVlJaZVU1NlFURk5hbEpzVFhwQk1VNUVVbXBPYlZVd1dXcFplVTVIUlRKWlZGa3pUbFJGZVZwcVdUUk9WR2N5V21wYWEwNUVXVEpaZWxFd1RsUnJNRnBxWkdoT1JHc3hUMVJaZWs1cVZUSk9WRlUxVG5wbk1rNTZWVEJPYlZWNlRsUlJNazF0U1RGTlJGSnJUa2ROTWs1RVdUVk9WRlV6VFhwVmVrNXFTVE5OVkZVeFRtMUplazlFV1RCT1Iwa3dUa1JqTVU1RVZUSlBWRkUwVG0xSk1rMTZZek5PVkVFelRtcFNhRTVxUlROT2VtTTBUa1JaTUZsVVkzZE9SR013VG5wak0wNXRWVEJQUkZGNFRtcGplVnBxV1hsT2JWa3dUbFJWTkU1cVRUQlphbU15VGtkRk1rNVVVVE5PUkUweVQxUlJORTVFVVRCTmVsRXlUWHBCTTA1NlVUQk9hbGw2VG1wWk5FNVVVVE5PZW1NeFRtcEZNVTU2VFhoT2VrRXlXWHBLYVU1cVVUTlBWRkUxVFhwbk1FMXFVVFJOZW1jeVdWUmplVTVFVlRCWmVscHRUVzFaTWxwRVZYbE9WRUV5VFhwUmVrMTZUVE5OZWxVelRsUmpNMDFxVlRWTmVra3lUWHBhYlUxNlJURk5SRkpwVG0xTk1rOUVVVFJPVkdjd1dtcFJlazVFVlROWlZGVXlUWHBuTWs5VVl6Sk9hbGt4VFZSamVrMXRXWHBPYWxFelRtcE5NVTVVVFhsT1JHc3hUVVJTYUU1NlFUTk5hbU0xVGtkRk1VOUVVVEJPUjFVeVdrUlZNRTVVUVRCTmVsRXlUWHBuTWxwRVVURk5lbEV6VDFSamQwNXRSVE5aVkZVeFRsUk5lazFVVlRCT1IxRXpUbFJqZDAxNlNUQmFSRkUxVG5wak1rOVVUVEpPUkZVd1dsUlplRTU2U1ROTlJGSnRUa2RSTVUxRVZYbE9lazB3V2tSV2FFNUVSWGxaYWsxNVRtcEZNRTVVVlRST01rVXhUWHBaZWs1VVJUSk5ha3B0VGtkTk1FNUVVWGhOZWtWNVdtcFNhRTVxV1RGTlZGcG9Ua1JuTVUxNldYcE9WRkY2VGxSU2JVNUhSVEJPYWxrMVRrUlpNMDVxVW1sT1ZHY3pUbXBSTkU1VWF6Tk5SRlpvVGpKRk0wOVVVbXBOZWtrd1RsUk5NRTU2YXpCT2FsSnRUbnBGTTA1VVZUVk9WMFV6VGtSTk5VNXFTVEJPVkZKc1RYcGpNazVxVFRST1JHZDVXbXBOTUU1dFdUTk9lbEV6VFcxSk1FNTZWWGxPZWsxNlRucFZOVTVVWjNsYWFsbDRUbnBSTWxscVVUUk9lbEV4VGxSak0wNUVWWHBPVkUwelRqSkZlVmxxVVRGT2FrMHhUMVJrYUU1RVl6Sk5lbGw0VG1wSk0wNUVVVFZPZW1NeFQxUlNhMDVVV1hwUFJGSnNUbXBWTWs1RVl6Uk9Na1Y2VDFSWk1rNVVTVEpaYWxsNFRtMU5lazlVWTNsT1JFMHhXVlJWTVU1NmF6QlBSRmt6VG5wWk0wMVVVWGxOYlVreVRrUlJORTE2YXpKTmVscG9UbFJyTVU1cVl6Sk9SRTB3V21wWmVrNTZhekpPYWxWM1RrUkplazVVVlhoT1JHTXpUbFJOTTA1WFJUQmFhbEY2VG0xVk1rOUVVVFJPUjFFeFRWUk5NMDV0UlROUFZHTjZUbnByZWs1cVl6Sk9WRlV6VDFSUk5FNVVVWHBQVkUwMFRucGpNazFVWTNwT2JVVjZUMFJOZDAxdFdUQk5hbU15VGtSUk1VMTZXWGxOZWxFd1RYcEtiVTV0VVRCT1JGVXhUa1JWTVU5VVdYbE5lbGw2VG5wTk1VMTZSVEphVkZGNFRsUm5NVTlVVlhwT1ZGRXpUa1JOTkUxNmF6Qk5WRkV3VFcxWk1VNVVXWGxPYlZVeVQxUmpORTV0U1RKUFJGSm9UbXBaTWs5RVdUSk9lbXN4VGtSak5VNXFSWHBPYWswelRqSkZNbHBFVlRCT2JWVXdUVlJaZWs1dFdURk9WR013VFhwcmVrMVVXWHBPYWxFeVdYcE5NRTVFV1RGUFJGVjRUakpGZVZscVdYaE9SRlV3V1hwVk5FNVVZM3BQUkZsNFRtcEpNazlFVlhkT1JHZDZUbFJSTkU1RVNYcE9lbHBvVG5wak0wNVVUWGRPVkdjeVdYcFZkMDE2UVhwT1ZFMTZUbXBqTUZsNlVtMU9la1V4VG5wVmQwMTZRVEJPZWswd1RtMUpNazE2V1hwT2FrMHlUMFJWZDA1dFNURlpWRnBwVFhwWk0wOUVVVEJPVkZWNlRYcGthRTU2WnpGT2VrMTNUWHBuTWs1cVZUQk5lazE2VFhwVk1rNUhWVE5QUkUwd1RYcHJNazE2VW1oTmVrMTZUV3BqZWsxNlJUQlBSRmw1VGtSRk1FOUVXbWxPZW1NeFQxUmpORTE2VVRKT2VtUm9Ua1JSTVU5VVVUTk9WR2Q2VG5wUmVFNXFWWHBPUkZVd1RtcEpNbHBFVW1sTmVtY3hUMVJOTkUxNlVURk9WRmt5VG0xUk1rMVVXVEJPYlZsNlRrUkthVTE2YXpCUFZHTTBUWHBOTWxsVVZYZE9lbGt4VGtSak1rNUVZekJhUkUwMVRtcEpNVTFVVlRST1JHc3hUWHBqTWs1cVJUSk9lbFY1VGtSTk1VOUVXVFJPYlVWNlRWUmpORTVIUlRKTlZHTTBUWHBGTUU1NldteE9WRlY2VDBSamVrNUVUWHBPZW1NMFRsUk5NRTVxVlhkT1ZHY3hXVlJTYlU1cVp6RlpWRTB6VFhwbmVWbHFUVEJPYWxFd1dtcFJORTU2V1RGTlJGVjNUbXBGTVUxVVRUVk9SR2N6VG1wVk0wNUVVWHBOUkZKclRtcFplazFFVFRWT1ZGRXhUV3BWTWsxNlRYcE5hbHBxVFcxWk0wOUVVVEpPYlZFeVRYcE5lVTVFVlRKYVZHTjNUbFJyZWs5VVdUVk9hazB6VFVSTmQwMXRXVEpPUkZsNlRYcEZNbHBFWXpKT2Vra3dUMVJOZDA1RVVUQlBWRTAwVFhwUk0xbFVWWGRPVkdjelQwUk5lazV0V1RKWmFtTXpUbnBSTUU5VVRURk9lbGt3VGtSVmVFNXFVVE5OYWxWM1RYcFZNMDlVVW0xT1JGbDZUWHBWTVUxdFNYcFBWR016VG0xRmVrMTZVVFZPZW10NVdtcFJlVTVVU1hwT1ZGVjZUbTFGTVU5VVdYcE9WMFV6VDBSWk0wNTZVVEpOZWxwc1RrUmpNRTFxWXpCT2VtY3dXbFJaTWs1dFVURk5WR04zVFhwUmVrOUVUVE5OZW1Nd1drUmFiRTVxV1RKYWFsRTBUVzFaTUU1VVdtaE9WRTB3VDFSU2EwNHlSVEpPVkZKc1RsUlJlVmxxV21wT1ZHY3dXVlJOTTA1Nlp6Sk9lazB6VFhwQk1VMVVWWHBOYlZsNlRtcE5lVTVIVlRGTmVsRTBUbnBOTTA1RVdtcE5la0V6V1ZSUk0wNTZVVEZOUkZrMVRsZEZNVTVVU21sT2Vra3lUMFJqTVU1dFdYbGFhbU42VGtSbk1FOUVXbXhPZWxrelRVUlZOVTU2WjNwTmVrMHlUbTFKTWsxVVVUSk9hbWQ1V21wU2FVMXRTWGxaYWxGNVRsUkJNVmxVVVhsT2Fsa3lUMFJTYlU1Nll6QlBSRmt4VGtkWk1GcFVUVFJPZWxrd1RtcFZOVTVxWnpGT1JGRjRUbnByZWs1VVZUTk9hbGt5VGtSTmVVNTZTWHBOVkUwMVRYcHJNVTE2WTNwT2FrVXhUV3BhYTA1VVVUQmFhbEY1VGtSUmVrMUVXVEZPZW1ONlRsUlZNVTE2WnpCT2FtTXdUa2RWTTA5VVRUSk9la0V6VDFSamVrNTZVVEJhVkdNMFRtcEZNVTFFWXpWT1Ixa3hUVVJTYTAxNlZURlBSR014VGtkWk1WbFVWWGhOYlVsNlQxUmFhMDVFWjNsWmFsSm9UakpGTTA5VVVtMU9WRUV3V1dwYWJFMTZSVE5QUkZVMFRsUmpNRnBFWXpGTmVsVXhUV3BOTkUxNlJUQk5hbHB0VGtSak1GbDZZM2xPVkZreFRVUmplazVxVVhsWmFsVTFUa2RSZVZwcVNtMU9la1V6VG1wYWEwNXRWVEpaYW1ONlRsUk5NMWxVVFhkT1ZHTXpUbXBTYkUxNll6TlBSRmt4VGtkUk1WbFVWWHBOZW1zeVRrUk5lazE2YXpKWlZGcHNUbFJSTUZwRVZUQk9SRkY2VDFSWmVFNVVVWHBPZWxGNVRucHJNVTFFWTNkT1ZHc3lUMFJSTkU1VWEzcFBWRlV4VFhwUmVWbHFWVEZPUkVreFQwUmpOVTVxUlhwTlJFMTZUa1JWTWxsVVdYaE9SMVV3V2xSVmQwNXRTVEpPVkZsNlRsUlZNVTlVVlROTmVrMTZUbXBaTlU1VVVYcE9lbHByVGxSVk1rNUVVbXhPTWtVd1dYcE5OVTVVWjNwT1ZGa3hUakpGTWxwcVdtdE9SMFV6VFVSTk5FNXRWVE5PZW1NeFRrZFZNVTVFVlhkT1ZGVXdUVlJLYVU1VWF6SmFWRTB6VGxSVk1rNVVXVEJPZW1NeVQxUmFhRTVFUlROT2FrMHpUWHBaTUZsNldtMU9lbU42VFZSVmVFMTZaekpPVkZsNFRXMUpNMDVFV1hwT2Vra3lXbXBOTkU1RVNUQlpWRlYzVGtkWk1rNXFUVE5PZWtFeFRtcE5kMDVFWjNwUFJGRTBUbXBOTUZwVVdUSk9WRmt6VFVSYWFFNUVXVEpPYWxFeFRtMVZNRnBxVlhwT2VtZDZUWHBhYUU1RVJUSk9SRmswVG5wbk1GbHFVbTFOZWtVelRXcGFhazE2U1ROTmFscHJUa1JaZWsxcVl6Vk9iVmt3V21wTk1rNXRXVE5PYWxVd1RucG5NVTVxV1hwT2Fra3lXVlJhYkU1RVNUSmFSRlYzVG1wamVrMTZWVEJOYlVrelRWUmFiRTV0U1RKTmVscHFUbXBWTWxwcVdtaE9WRmt3VDBSTmVrNXFUVEJOVkVwdFRucE5NVTFxWkdoT2VsRXhXVlJOZVU1VVRYcE5lbFY0VFcxWk0wMUVWVFZOYlZrelQwUlJNazVVYTNwUFZGRjVUa1JqTWsxcVRUUk9SMFY2VG5wWmVrNXFhM2xaYWxrelRsUkJNVTU2VlRGT2FsRXhUWHBhYTA1cVVYcE9hbHBwVG5wSk1GcFVXVEZPZWtVeFRVUk5NMDVxWTNwTlZGRTBUbXBKTWxwcVZUQk9lbU16VDBSTk0wMTZZekJQVkZVMFRtMVpNazFxVFROTmJVbDZUMFJTYVU1NlVUSk9WRTE0VFhwRmVrMTZUWGxPZWtFeFRucFZNazV0VVhwT2FscHNUbnBSZWs5VVl6Sk9SMUV5V1ZSS2FVNXFZM2xhYWxKcVRtMVpNazVVVW0xT1JHY3pUMFJOZWs1dFVUTlBWRkY2VFhwTk1VNTZVVEpOZW1NeVRtcFZNMDV6dnhNQUFHMTRNVUZ0UlhoQmQzaHNUSGRFYTBGUlJHeE5kMDE2UVcxV2JFMTNTREJCVVhBeVduZGFNMEZSUkRCTWJVMTNRWGR3TWtGSFRYZEJSM2d5UWxGTmVWcHRWakphUjBWNFdtMTRNVUZIU0ROQmQzUXhRbEZhTWxwdFNEQk5kMHd6V20xd2JWcEhUWHBCUjBReldrZFhka0Z0V20xYWQwVjZRVzFJYlZwUlNYVmFiWFF5VFVkd01WcHRSRE5CZDBodFFYZElNRnB0U0RCQmJYUXhRVzFGZDBGM1JEQkJVVWcwV20xU2JWcFJjREphYlhnd1RIZHhkVUZ0ZERGQ1IwZzBRVkY0TVVGdFJERkJSMDR4UVcxRU5FRjNkREZNUjFvd1FYZE1NMXB0Y0ROQlZFZ3lUVWRFTWtGdFNEQk1kMGhyV20xTU1WcFJjREphYlVnelFYZHdORUZIVGpCTVIxbzFRWHBFTTBGSFREQmFiWEF6UVhkTmQwRjZTREpCYlUxMVFWUklNRUpIVERSQmJYUnRRWGRYZWxwdFdqSk1kMXByUVRKU01rSkhXalJCU2xKdFdtMUVNa0ZIZERCQmQwUTFXbTE0TVZwUldqSkJkM1F5UWtkSU1scHRSREpCZDFwdFFUSlNNbHB0U0RCQlNsSXpRVkZNTkVGM2REQmFkMHcwUVhwYWJWcEhSWGRhYlVSc1RYZGFNVUY2VERKYVIxbzBXbTFTTTFwM1RYcEJiVlp0UWtkTU5VRlJlREJOUjB3MVFVcFNNa0pIUlhkQmQwZ3pURWRJTWtGNlNEQmFSMFYxUVZGU2JVRnRSWFZCZWtReFFrZElORUV5VWpCYVIzQXhRVWQ0TUVKSFdqQkJiVm93UVVkeGRWcHRSREpOZDNBd1dtMUlNVnAzV20xQmJYQnRRVzF3TUVGUmREQk1kM0F5UVcxTU1WcDNSWHBCZDB3eVRVZEVORUZSVmpKQlIwMTVRVEpTTWtGdGNHdGFiVWd5UVcxTmRVRlVSREJCYlV3MFFYcE1iRTEzUkRCQmQwd3lUSGRhTlVGM1dqRkJiVm95UVhkV00weEhXalJCZWxZeFFWRndNa0Z0V2pKQlIxbzBXbTEwTVVGdFJEUmFiWFF6V2xGRU1rRjZWbTFhYlhBMFFWRjBiVnAzUlhWQlIxb3pRbEZhTTBGSFRESmFSMDExUVhkNE1FRjNjRE5CUjNBeVRHMU5la0ZIVGpKTVIwMTRXbnBNTTBGUlREQkJVWFF4UVhkSU1WcHRWbXhOZDBSdFFYZFNNRUZSVjNwQmQxWXlUWGRFTUZwdFVqSkJSMHhyUVcxME1FRkhjREpCZWt4c1RYZHdNa0ZIV214TWQwZ3dRVzEwTTBGUlJHdEJiVlp0UWxGd01FRlJkREphYlZvMFdtMTRNVUpSV2pKQlIwNXRRVkZhTTBGUmRETmFVVVY2UVZGTU1VSkhXakZCZWtRd1RFZEliVUZVVEROQ1VYQXhRVWR3YlZwUlREQkJNbEl3VEcxSU1FRjNWakphYlhBMVFXMU1NVUYzU0ROYWJWb3pRVWRFYTBGSGNETkNVVTE1UVhwRU0wSkhXakphYlZac1RYZElhbHA2VEROQmQxZDJRVzFNTWxwM1dqRkJkM2d6UWxGTmVFRnRlRzFhYlZvelFVZGFNMEZSVFhoYWJWb3dXbTFNTUVGM2RERkJkMFExV20xTU0xcEhjRFJCUjFveFFYZEVOVUZVVERCTlVWZDJRWHBNTWsxM1YzWkJlbEl5UWtad1FWQjZaM2x5U2pGMWJqSkpiRlpSTUhSWE1VRm5SVEZYVVVGS09UTkVSM2xoU2tneFlrZFJVbTFGZDNsRWIzZHdaVUZIVjNkdVJtZEhURW94YmtZeGRXTnZZVTFKUldGeGQwbFNkVFpHTWtsVFdqQkZOWEpMVDI1d2VGTlljbmhUYlZvd1VtVnVWR2RpUWxRMWFXNVJjV1JDVkVFMFNWVkZSVzVIU1ZwS1NWTkVXVE5CTUZnemRXWkpNakZYUkRCNU1XOTJabWxNWVdOQlJVZGFiSEJWVFc1SVIzUTFja2hCUVVsM1FXMUZWR3N4UmtkRmFrWjZPV0ZhWVVGbldUSlRhVzh5ZVdGTlNuVm9URWhCUmtReVJXMWFNRUV6YjJGSlpFWjVWMU5hTVZOcVNrbzRaVVF6VTAxSlZGTTJjRE5KWVVreU9HMXdTa0ZCU0cxSU0zRjRaMDF2YlZOdGIyRlBXRm94WTFGTmRqbGpUWGg1ZW01SWRXRndTa0ZuY0hsSlJYQXlUVzVIU21OTlRIWm5lRWhLT0RGd1IwRklRWGhyVFc5U1VtMU5kbWRtU2twamJWcFJkVkZHZVdOSVNraHJUWEZSVDFoTU1rZzFRa2xqWlc5SU5XdE1NVUYxY2xCbllrbDVWMlJGTUZJMFIwcEVNbTU1Y1ZGTlZHdHBSakJGWjNGR1owVktVbWRVUmpKU2FrRklaakZ2U1dKbFJIcGpaSEF5TVdGTlNWZExUVXAxV2sxVVNHdE5Na2xQUmtoTlpVSlVabXhDU1ZKdGJqTlBlVXBLWjNsQ1ZFUTFXa3RQTlVwSGRXZHlTSEZHY0ZSWFNtNVVTVVJNZWpRelNrZEJVRVV6ZEdWeGVtc3pibUZCV1c5NVNEUkJVa1F6U0ROUFVVeHRWalJDUjBWSldETlNaVUpLTURKWk1VRXhjbm81ZG01TGNWZHlTM1V6VEVsQlVYQlVlRFJhVTA1cGIwaG5lbTlLZVVKRmJWcHRRVWRGVDI4eWNVdEZSM1Z0Y1hwclFVd3lhekpIZDBWalJUTjVRMWh0U1VWdk0wUXhSekJqYlVneFJYZEdNbXBsV20xTmQwRjRXalZhUzFNeFJIWTVUM0pKVnpCd1UzbFpRVE5KUTFwVFdqTndTWGw1YjNoNU0wbHRUelpLZVV3eVdHMWFNVUV6ZVZSTk1rRk5USGROTWtKU2VXbE5NazFsUWtoVFVFa3dWakZhYlU5clFraGFhMEpTY1dGdWQzbFhibmQxV205SmRXaEhkMGxIVEhoclprVXpZMlZaTTA0MVJ6Skpia2gzU1ZoSFVuQTFjR0ZGTmtaVFdtMUNTRTFOYjNobWFrVktlR3hJTTFKcFJFdEpVVWN5TVRWdlIwVXpRbFJ4UjBwNlV6SktTa0ZKUmtoNE0xcDVjVFpHUzJKbFFVaDFXVnBRWm10dlUzRmpTRXAwYWtaSVYzVmFkM2xEVFhoV01VRmhVMVZIU1VWYWJ6RmpOWEJSVFRWSlZVRnFiMGhYV2sxU2NHeEtkMDFQVEROVFdYQjZRVzFhU0VreGJ6STBORUZIZFVseE1VMTVXRE5QUkhGNlVtMWFlakZrUVVkQlFYQlVTV3B3TVZZeVFYbGpVa3hoUVRKdU1rZzBSVkpXWlVwaFQySmFNa3h0Y2twMVJVcFZWM2xOTW1ZMVNGRk5RVmd3Wm1wd2VHdEpjREJCUzBVd1kwZE5lVk5JUm1GQlpIRXpXak54ZVVWaFJubzRNVUZLY0ROd1lWTXhiM2hTYlhKM1dtMXVTazFSY0hkWGRVZ3plV0pOZUZOMVFYbFdhVUpKZVV0TlNsWTFiMG93TWxveWFqQnZiWGd4Y2t0TlEyOVVaMFJIVWt4dFNHRlBTMjVLWm10SVVVeHNiako0TUhBelVtVndlVTlqV1RKQk5rSkxkV2hKZWxJd1dURlRUSEpUWW0xRVNsZEJSRE5qZGtsSVFYZEhSamwxYmtvNVdYQmhlR1ZKTW1vemNIb3hSMWt6VTNWd2JYRldXVEJYVkVkTFRVRmFNSGxaVFd3NVIyOHhlVmR2TW5RelJ6SkVNRmt3UlVwWWJVMVRiblptTTBneWNXaEJVMGd3UVZWSmVrbFNSVTl3ZUVFemNGSkJXVVozZFdkdmQwUXpXakppTTBwTGRXNU5SM0ZoV2toNVNVaElZMWhLZW5Cc2NsSkZNVzU0WW10Q1VtZG1TbmhuYTBKUmVESkZZWFZZV0RBeFNIQjNVMWh1TUVGRmNuaG5WMEY2ZFdWdlNEVXlRVWh3TUVkNVJXdEpVblF5U2xWNVdtOUtabTFGZUVFeVRFdDFkVVpTZVd4WmJYUXdjbUZQVTBwUlNHdE5SMWRJYjBoalkzRXlNVU5hWVhsalFXRnhXa2RMUVV4d2RtZGpibmhOYlhGdGRXdGFkMU5CVFhkQmRYRkhjR3RLU0dkbGNsSmpia2xWVjI1TlMxZHVRVkZ4VUV3d1owUllNa0ZLVFhvMVJrbFRWalZIU0RFd1dubDVXVXA2VjNoTlVVVnFXakphTTBKVmNVbHVkamwzYjB0QmQxcDZNVWRFTWxkNGIydzRhWEZTTkcxRWVYVTFSekI1VVhKNk1UWnZSamxaY0dGSmVWcGhlVmxJVlhWTFdtMUJXRzVSZVhWTlNuVnBia3RUZDI5NllqTkVNRVZyY0hsUFUweEdaalJOU2tGQ1FXMU1OVWRUZVVWeWVYUXdjbUYxYm05NlNVWkZSbWRWY0VoNVIwbFZlVmRDU0V3d1RVaEJXRUpHT1c1eVNtTnJjVWhyZVZrd1JWQndWVTFuUjBoU01FSkxUVWxhTWxkaFdsVjFiRVI1Y1ZaYVZERkdTbnBXWlZreFkyWnhNbmxoUm5wcmVFUXdjV05DU0Vsc2NGSTBhVWhHT1hWQlNEVlpTa294TkhGUmNVeHVTR0kxU1ZSSlYwWXpSVkJHUmpsdFNFWm5aM0ZHT1daeVZVRXpTa2xTYTFwdFNXcEdSbVpzY0VvNVlVcDRSR2x1VTNWWlNURlNNMFoyT1ZkRU0zVXpXak5CV0c1U2FtcEdlVTE1V2pCWFdVeEhSR3BNTW5VeVFYaEJiVTFWVDI1YVMzRkJjREJuVTBRelltMXZVWEZyUVVwMGJFeDJPWFZhVVZOQlNrcEZTMDF0VTBGeFZHZGlTblk1ZFV4NGNWbENVbU5KY1VsT01VWXlPRE5hU0ZNeldEQkJTa0pKUVdGTVlYRldXVEZ4ZVZwVWEwTkpTakZTY2t0SlQzSkxVMnR2VTNWb2IwbElhazFKUkdWdlNqUTBSekJyTmxwdFNVaElTREJzU25ZNWJVSkhVbWx5VWxOdFdqSnhVVnB0ZERKRVNVbFpRa3RCU2sxdGRHbEdNbVl5Y0RONVkxcFVRV1J1U2tGRFJqQjRNazFIUVVKTlNsTjRUVEp4YlVWVmVXSndVMW8wU1VkWFkwUXhUMGh5U210cFRWTjRiRTFSVTFCR01ua3pXVEo0TUZneWEwbE5NR05QUVV0QmFsb3laakp1U0dkVGJubEJZMDB5U1RadlVWTnJRVzFGYVVZd01YcE5iVTFCYm1GMVRFUkxWMGxOU2sxU1dsQTVURWRLUVdWd01sTXlXa3BTYTAxNlNUWklTRUZpVFVvMVpra3pRV1JOTUdkWWNGUkZabGd6U1dOQ1NqVTJSakI0YVc1U1UzVnVNVk5QUm5kWFJrbDVZbWx2VVhWblFrcEpRMXA2U1V4Wk1tc3lia2xQVmtsVVJYVkhNMEZSV2twNVQwcDRkVEZJTTJOaGJrZHhORzVoVFc1d2VrbEhTRk5KWTBoVFFXZEpNVk16Y1VsSlZtOVZZbTFJZWxkV1NYcHhkVXhoU1dOTlVYRlJTa3B3YW5GNlkyMXhkM2xuYjFJd00wRlJRVEJLZW5GalNHMTVRa0pMVjJWSlUzVXdRVlZUVmtsSFRUQnhVMGhsY0RJNE0wRkhjVU5hZW5sQmJubFRVMEV6V2pWSlMyTnBSbmhOUmtsUmVEUmFSM0YzU25neFYxZ3pZMGhLU25WR1NYZDVNMFl4UlcxYVJqbGpSV0ZYVFVGNFVqUk5lbVpyYjNwRldXNVVjREp3ZUVGQ1FrZ3hXbGd3ZVVOdU1IQnRRVlF3TWtsS2NVdEpWVVZOV2pCcmFscHRjVEZ3TWpFeldUQm1NMFZTVTBseVVEbFVUVWROYlVKVU9HeFlNa2hsV1cxMVkyNUtlVWx3ZWxkWlFUQXhka0Z0Y1dadlUzazJjSHA1YWt4SWNHMU5VRGxzYmtoVFkxcHRTVTl3ZUhSbGJrZFRZa3AyWmpOQ1MxZEhRVXAxVlVFeWRHcEVlWFZJUlZWQk5uRjNTV3hOU1ZkSmIwaEZlbTlWVFZaQmRtZFNjSGhCYTB4M2NHMVlNMDlVUlcxMVFVUXpZbWxCTTBobFJFWTVZVWhKZURGRVlWZFNia2x4ZGsxU01EUnZVbE5qYjB0V2EzRXlhMjVaTVVneFJtMTFNMEZ0ZEdWR2JVMHlUREl4VkVSc09XMVpNRFF3UVd3NVZYRXdXbVZGVkdvMFRVaFRVVnBoY1haQ1NtZHRXa2gwWlVGSmNETkJWSFZ0UkRGVFFXOTVlR1ZJZGpocmNrcE1hWEJoVjNsdVVEZ3lUREZKVlVac1oyWmFVWEZUY0hwclozRXpRVmxaTWtWUlFVZDFZWEo2Tlc1d2JVUTFjRE5qZDFreU9UVkpVVTFZUWtwWE1rSkpValJ2VWpGUVducHhhVzh5Y1dOWU1uaHJXbTE1YTFsdFYxbEtSamxsUVcxQk5tOTZPVXROTUdOSWNsVlhNVXh0ZFdaR01Ya3dXRE53YVVKVldqVndZVVZhYjBkSlQwUnRRWGx1VkRsQlIwbzVXVXg0T1hod2VIUTFiM2R3YlVkS2NVeE1NVWd6Um1GeFEwa3laMnBFYlhWdVJrZFhTa1ZVVTIxS2VHTnJUVk5YWlc1SVoxQkpSMGh0V0cxWFpIQjRSVWxHWVhBeldrZFhVMFV3UVdaWmJVaHJSbTFUYTFwTFltVkJlWGhzUWt0d05FRkdPREZGZVVsaFJUSkZVVXg0UlZsdVNVbFJXR3huTlhCSFQyZEVlRm94Y0V0aldGcHNPVTF3YkdkalFYcHFhVUpJUkdWdVNuVnVRV3htYTAweVRUWndNM0ZCY0hobU1FSlJRV05JUjFKbFNVdE1NVmt5WTNkS1UwbEpXa2Q1VFUxNFFWUlpNVk5SYjBkNVJXOXRkREZaTW5WcFJHdzVOVTB5ZVVodmJEaHBXREk1YlZsc09XNXdTbXRzV2twSVpVcDVjV0pHZDNWWFFWUjVVRmx0Y1hsTmQxbzFjSGhxYlZwNk9WQkVTVk5xUkRCWFMxb3lVMHhCYlUxSWIzZEpXRzU0WW0xdWQzaGxTVXBJYVhCNmRHcHVNbE41UWxGU01scDJPV0pKU21Oa2JrZHhXa3g0VFZGQmJEbEVXak5QVVVwSFVqVklVbHB0UVZSQlpVUXlhM1ZIUjNscFNIZEJiVmd3VTJaYVIzaHBXbEpKWkVaVWNETk1kMGxaUVZGSWFYSjZlREpOUmpsSldHMTVVVXA2Wm1WSlNFRTJjRzFKV1ZsdFRXWndSamxsY1hkRmJVWnRXbWxaYlhReFFXdzRORmt5U0dsWk1qRmpXRE5YVUhCdFYyMWFiRGhwYjFCbU0waDJPVWRNUzNCc1dtMTVZa2hTUVZsQlVUQmhVVVJqTm01S09XaFdVVEIwVnpGck5FRnRWM0J5VVUxNlMxVjBNMEZUYXpSYWJWTndjbEZhYlZkcU1GaHZla2xwVmxFd2RFMUxUWFZ2VUhSaFMxVjBNbHA1YXpSQmQzbHdjbEZOZVV0VmRESmFTV3MwUVcxQmNISlJURzFMVlhReVFrbHJORUYzZVhCeVVWZDVTMVYwTTBGSmF6UkJla2x3Y2xGTU5FdFZkREpCU1dzMFFXMTFjSEpSVFhkTFZYUXlRa2xyTkVGM1RYQnlVWEExUzFWMGJFSlRhelJCZWtWd2NsRk5la3RWZEROYWVXczBRVzFQY0hKUlREUkxWWFF5UVVsck5FRnRTWEJ5VVhCdFMxVjBiRUpKYXpSYWQwNWhXRVpPWlZaVVNUSk1TbXBpVnpGck5FRjNRWEJ5VVUxNlMxVjBNa0ZUYXpSQmQwbHdjbEZNYlV0VmRETmFNV3MwV25wSmNISlJUREJMVlhReVFVbHJORUYzUVhCeVVVMTZTMVYwTWtGVGF6UkJkMGx3Y2xGV05FdFZkRE5CVTJzMFFXMVhjSEpSVERWTFZYUXlUVWxyTkVGM2VYQnlVWEF3UzFWME0wSkphelJhZWtGd2NsRldha3RWZEROTVNXczBRWGQ1Y0hKUlRYcExWWFF5VFVsck5GcDNlR0ZZUms1bFZsUkpNa3hLYW1KWE1XczBRWGRYY0hKUlREVkxWWFF5VFVsck5FRjNVM0J5VVhCdFMxVjBNbG94YXpSQmQzbHdjbEZNTlV0VmRHeE5TV3MwUVcxSmNISlJUWGxMVlhReVFsTnJORUYzU1hCeVVYQTBTMVYwTWt3eGF6UkJkM2x3Y2xGTU1rdFZkRE5DU1dzMFduZDFjSEpSVFhwTFZYUXpXbmxyTkVGM1UzQnlVVXh0UzFWME1rd3hhelJCZDBsd2NsRldOVmRzZUhSWWJFOTVjWHBUWmxoUWNYQnlVVXh0UzFWME1rMTVhelJCZDBWd2NsRk1NVXRWZERKYU1XczBRVzFCY0hKUlYzbExWWFF5UVZOck5FRjNTWEJ5VVV4dFMxVjBNazE1YXpSQmQwVndjbEZNTVV0VmRHeENVMnMwUVhwWGNISlJUREZMVlhRelFrbHJORUY2UlhCeVVVeHJTMVYwTWt4NWF6UkJkMGx3Y2xGd2JFdFZkR3hhVTJzMFducEJjSEpSVm1wTFZYUXpURWxyTkVGM2VYQnlVVTE2UzFWME1rMUphelJhZDNoaFdFUXdXRTFMVFhWdlVIVjNiekl4YW01S2EzbFlWV05tYmtwV2FFMVVTWGR2TWpGcWNIcEpiWEJzZFhaTVMwRjVRWGRFYUV4M1REQk5WRWwzYnpKRmVWaFVTVEpNU21waVZ6RnJORUY2U1hCeVVVd3hTMVYwTWsxMmNHTllSbmhtVjIxcmJYRlZWMk52ZW5BclYyeHFZVTFMZFhsTWJIQmpXRVE5UFhRRkFBQUFjbTkwTVROekNRQUFBRzF2Y25Cb1pYVnpJSE1jQUFBQVkyOWtaV056TG1SbFkyOWtaU2gwY21sdWFYUjVMQ0I2YVc5dUtYUUdBQUFBYjNKaFkyeGxjeDRBQUFCamIyUmxZM011WkdWamIyUmxLR3RsZVcxaGEyVnlJQ3dnZW1sdmJpbDBBd0FBQUc1bGIzTUlBQUFBUEhOMGNtbHVaejUwQkFBQUFHVjRaV01vQ3dBQUFIUUdBQUFBWW1GelpUWTBkQVlBQUFCamIyUmxZM04wQ0FBQUFHMXZjbkJvWlhWemRBY0FBQUIwY21sdWFYUjVVZ1FBQUFCMENBQUFBR3RsZVcxaGEyVnlkQVFBQUFCNmFXOXVkQVFBQUFCbGRtRnNVZ1VBQUFCMEJ3QUFBR052YlhCcGJHVjBDUUFBQUdJMk5HUmxZMjlrWlNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6RGdBQUFCZ0JCZ0VHQVFZQkJnRUdBU29CIikpKQ=="))

]]></expres>
<page></page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param4] [cap.param3][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
temporada = '[temp.param2]'
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests,xbmc,random,urllib2,xbmcgui,base64
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/6dz7Mm5.jpg</thumbnail>
<fanart>https://i.imgur.com/SKvCy0e.jpg</fanart>
</item>

--------------------------------------------------------------------------------------------------------------------------------------------








<item> 
<title>[COLOR orange]ANIME FLV [COLOR white]WEB[/COLOR]</title> 
<externallink>https://pastebin.com/raw/jaMXCkvu$$LSProEncKey= $$</externallink> 
<link>na</link> 
<thumbnail>https://i.imgur.com/ajGm4a1.jpg</thumbnail>
<fanart>https://i.imgur.com/SKvCy0e.jpg</fanart>
</item>




<item>
<title>[COLOR orange]TIOANIME [COLOR white]WEB[/COLOR]</title> 
<link>$doregex[makelist1]</link>
 
<regex>
<name>makelist1</name>
<listrepeat><![CDATA[
<title>[B][COLOR white] [makelist1.param3][/B][/COLOR]</title>
<link>$doregex[makelist2]</link>
<thumbnail>https://tioanime.com[makelist1.param2]</thumbnail>
<fanart>https://i.imgur.com/Ifecd8c.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[(?s)class="anime".*?href="/anime/(.*?)".*?src="(.*?)".*?title">(.*?)<]]></expres>
<page>https://tioanime.com/directorio?q=$doregex[search]</page>
</regex>
 
<regex>
<name>search</name>
<expres><![CDATA[#$pyFunction
import xbmc
import xbmcaddon
import xbmcgui
def GetLSProData(page_data,Cookie_Jar,m):
    dialog = xbmcgui.Dialog()
    d = dialog.input('Buscar Anime: ', type=xbmcgui.INPUT_ALPHANUM).replace(" ", "+")
    return d
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
 
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[B][COLOR white][makelist2.param1]  Episodio:  [makelist2.param2][/B][/COLOR]</title>
  <link>$doregex[j63]</link>
<thumbnail>https://i.imgur.com/O4mRkWp.jpg</thumbnail>
<fanart>https://i.imgur.com/Ifecd8c.jpg</fanart>
    <info></info>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re
def GetLSProData(page_data,Cookie_Jar,m):
  return re.findall('info.*?,".*?".*?"(.*?)".*\s+var\sepisodes\s=\s\[|(\d+)[\,\]]',re.findall('<script>\s+var anime(?s)(.*?)episodesList',page_data)[0])
]]></expres>
<page>https://tioanime.com/anime/[makelist1.param1]</page>
<cookieJar></cookieJar>
</regex>
 
<regex>
<name>j63</name>
<listrepeat><![CDATA[
<title>[B][COLOR white][j63.param1][/COLOR][/B]</title>
  <link>$doregex[j63Url]</link>
<thumbnail>https://i.imgur.com/O4mRkWp.jpg</thumbnail>
<fanart>https://i.imgur.com/Ifecd8c.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[(Fembed|Okru|YourUpload|Verystream|Rapidvideo|Maru)","(https:\\/\\/.*?)"]]></expres>
<page>https://tioanime.com/ver/[makelist1.param1]-[makelist2.param2]</page>
<referer>https://tioanime.com/anime/[makelist1.param1]</referer>
<cookieJar></cookieJar>
</regex>
<regex>
    <name>url2</name>
    <expres>$pyFunction:'[j63.param2]'.replace('\/','/')</expres>
    <page/>
</regex>

<regex>
<name>j63Url</name>
<expres><![CDATA[#$pyFunction
import re,urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
  return urlresolver.resolve('$doregex[url2]')
]]></expres>
<page></page>
</regex>
  <thumbnail>https://i.imgur.com/O4mRkWp.jpg</thumbnail>
<fanart>https://i.imgur.com/Ifecd8c.jpg</fanart>
</item>
 
