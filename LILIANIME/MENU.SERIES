<?xml version="1.0" encoding="UTF-8" standalone="yes"?>


<item>
<title>[COLOR orange]TIOANIME [COLOR white]Web[/COLOR]</title> 
<link>$doregex[makelist1]</link>
 
<regex>
<name>makelist1</name>
<listrepeat><![CDATA[
<title>[B][COLOR white] [makelist1.param3][/B][/COLOR]</title>
<link>$doregex[makelist2]</link>
<thumbnail>https://tioanime.com[makelist1.param2]</thumbnail>
<fanart>https://i.imgur.com/Ifecd8c.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[(?s)class="anime".*?href="/anime/(.*?)".*?src="(.*?)".*?title">(.*?)<]]></expres>
<page>https://tioanime.com/directorio?q=$doregex[search]</page>
</regex>
 
<regex>
<name>search</name>
<expres><![CDATA[#$pyFunction
import xbmc
import xbmcaddon
import xbmcgui
def GetLSProData(page_data,Cookie_Jar,m):
    dialog = xbmcgui.Dialog()
    d = dialog.input('Buscar Anime: ', type=xbmcgui.INPUT_ALPHANUM).replace(" ", "+")
    return d
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
 
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[B][COLOR white][makelist2.param1]  Episodio:  [makelist2.param2][/B][/COLOR]</title>
  <link>$doregex[j63]</link>
<thumbnail>https://i.imgur.com/O4mRkWp.jpg</thumbnail>
<fanart>https://i.imgur.com/Ifecd8c.jpg</fanart>
    <info></info>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re
def GetLSProData(page_data,Cookie_Jar,m):
  return re.findall('info.*?,".*?".*?"(.*?)".*\s+var\sepisodes\s=\s\[|(\d+)[\,\]]',re.findall('<script>\s+var anime(?s)(.*?)episodesList',page_data)[0])
]]></expres>
<page>https://tioanime.com/anime/[makelist1.param1]</page>
<cookieJar></cookieJar>
</regex>
 
<regex>
<name>j63</name>
<listrepeat><![CDATA[
<title>[B][COLOR white][j63.param1][/COLOR][/B]</title>
  <link>$doregex[j63Url]</link>
<thumbnail>https://i.imgur.com/O4mRkWp.jpg</thumbnail>
<fanart>https://i.imgur.com/Ifecd8c.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[(Fembed|Okru|YourUpload|Verystream|Rapidvideo|Maru)","(https:\\/\\/.*?)"]]></expres>
<page>https://tioanime.com/ver/[makelist1.param1]-[makelist2.param2]</page>
<referer>https://tioanime.com/anime/[makelist1.param1]</referer>
<cookieJar></cookieJar>
</regex>
<regex>
    <name>url2</name>
    <expres>$pyFunction:'[j63.param2]'.replace('\/','/')</expres>
    <page/>
</regex>

<regex>
<name>j63Url</name>
<expres><![CDATA[#$pyFunction
import re,urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
  return urlresolver.resolve('$doregex[url2]')
]]></expres>
<page></page>
</regex>
  <thumbnail>https://i.imgur.com/O4mRkWp.jpg</thumbnail>
<fanart>https://i.imgur.com/Ifecd8c.jpg</fanart>
</item>
 


<item>
<title>[COLOR orange]BUSCADOR [COLOR white]Series [/COLOR] </title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param1] [temp.param2][/COLOR]</title>
<info>[COLOR white][makelist2.param3] [temp.param1][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
serie = '[makelist2.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MHpSTUFBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFV1RGT2JVMHlXa1JWZDA1NlJYcE5WRmsxVFhwWmVrNVVWVFJPZWxFd1dXcEthVTVVU1hwUFZGVjZUbnBWTWs1NlRUVk9WMFV6VFVSVk1rNTZVVE5OVkZKclRtcFJNazlFWXpST1ZGRjZUVVJaTkU1cVVUQlplbFV6VFhwQk1rNXFVbXRPUkdNeldWUlNhMDU2VVRKT2VsSnRUa1JSTTA1Nll6Tk9ha2t4VG1wWk5VMTZVVEJhVkZwb1RrZFplazVFWXpOT1IxVXdUV3BhYWs1cVRYcE9SRkV6VGtSbmVrNTZUVFZPVkdjeFRucGplazVVVVRKT1ZGVXpUbnBKTVUxVVZUSk9ha1V6VFhwWk1rNVVZek5OVkZwcFRtMUZNRTFxVFROT1JFMHdUMFJaZVU1NlozcE9lbFV6VG0xTmVWcHFTbTFPZW1kNlRXcE5NazVFWnpCWmFsbDVUakpGZWs5RVVtMU9WRUY2VFhwTk1VMTZZM3BPYWsxNlRXMVplazlVVFRGT1ZGRjZUMVJLYVU1dFVUTlBWRmt5VG1wVk0wMXFUVE5OYlZsNlQwUkthVTU2VFROT1ZFMHhUbnBKTUU1NlNtMU5lazB5V1ZSTk5VMXRXVEpPVkUwMVRtMVZlazlFU20xT1ZFRXdUbFJOZWsxdFNYcFBSRmswVG5wUk1VOUVUVEZPUkdkNVdtcEtiVTE2YXpGWlZGa3lUbnByTWs1RVkzaE5iVmt5VG1wUk1FMTZVWGxaYWtwdFRXMVplVnBxV1hsT1ZHZDZUWHBOZWsxNldURlBSRXB0VG1wVk0xbFVUVEpPVkZreVQxUk5NRTF0V1RCYVJFcHBUVzFaZWsxVVVUVk9la2w2VFZSWk0wMTZXVEpaYWxWNlRYcE5NVTFVWTNsT2Vra3hXVlJXYUU1NlVYcE5SRmw0VGtSTk0wOVVXVEZPZWtWNlRtcE5NMDVxV1RKT1JFMHpUa1JSTUZwcVl6Sk9iVmt5V1hwU2JFNXFSVE5aVkZwdFRtcE5NMDE2VlhwT1ZHdDZUWHBqTTAxdFNYbFphbVJvVG5wQk0xbFVXWGxPZWxVeVRsUk5ORTVVV1ROT1ZFMDBUbFJqTWs1VVl6Qk9la2t5VFZSamVFNTZWWGxhYWxVMVRYcEZlVnBxVFRWT2FtY3pUbFJLYVU1NlFUSk9SRmw0VFhwSk0wOUVUVEZOYlVreFRVUlNiRTVFVVROT1JHTjRUWHByZWs5VVRYbE9la2t5V2tSak1rNVVaekpQVkZVelRYcE5lazE2VW14T2Vra3lXa1JaZUU0eVJUSk9hbHBxVFhwbk1VMUVVVEpPVkdjeVdWUmFiVTVxU1RKT1ZFMTRUbTFOTUU1VVNtbE9SMUY2VFZSU2JFNUhWVEZPVkZVd1RrUlJNazE2V21sT2Ftc3lXbFJqTlU1Nll6Rk9SRmt5VG1wcmVrOUVUWGxPYW1NeFRYcGFhMDV0U1ROT1JGazBUWHBaTUUxcVdYcE9SRkV6VFZSTk1rNTZaekJQUkZKcFRrZEZNRnBxVVRCT2FrVXlUa1JSZVU1SFJURlpWRkV6VGtSSmVrOVVWVEZPVjBVeFRucFZlVTVFV1RCYVJFMTRUbFJOTUU1VVVtdE9WRmw2VG1wTmVVNUhSVEZaVkZsNVRucE5NMDU2VFhkT1ZHTXhXVlJaZWsxNlp6QlBWRTEzVFhwRk1VMTZXbXhPUjAweVRYcGpORTU2VFRKTmVrMHhUbFJqTVUxVVRYbE5lbGt5V1dwVmVrNVVZekZPUkdNMFRsUkJNazVFVFROTmVrVXpUMVJOTlU1SFNYcE5WRkpyVG0xSk1rNVVWbWhPUjFrd1dsUktiVTVFVlROT2Fsa3hUWHBCTTA5VVZURk9WRlV4VDFSTk1rNVhSVEJhYWxVMFRsUk5NazE2WTNoTmVrRXhUbXBOTlUxNlNYcFBWRmt3VG5wSk1GcEVWVEZPZWxrelRtcGplRTF0U1RKTmVtUm9UbFJGTVUxcVkzbE9la2t3V1hwVmVVNVVSVEJPVkVwcFRqSkZNbGw2V210T1ZFMTZUWHBqTVU1NlRYcE9lbEpvVG0xSmVrMUVUVEJPUkZVeVRsUk5kMDVIUlRKTmVsSnRUbFJOZVZscVdURk9SRlY1V1dwa2FFNXFXVEZPUkdOM1RsUk5NRnBVVVhsT2FsRjZUWHBXYUU1WFJUQk9SR041VG5wak1scFVUVEpPZWtFeFdWUmFhazVxUlROTlZGcHBUbXByTUZwVVdUSk9WR2Q2VDFSWk0wMXRTVE5OVkZVMFRucG5NazE2V21wT1ZFMTVXbXBTYVU1WFJUTk5SRlV4VG5wak1VMUVXbTFPZWswd1RtcFpNRTVIUlRKTmVsSnJUbGRGZWs5VVRURk9hbXN6VFdwU2FFNTZTVEphUkdONVRsUnJlazVFVVhwT2Vtc3pUWHBWZWs1NmF6QlplbU16VG5wQmVWbHFTbWxPTWtVeFRtcGFiVTE2V1RKTlZGbDRUbFJCZWs1RVVtcE5lbWN6VFVSS2FVNUVUWHBPVkUweVRqSkZNazU2V1RKT2FtTXhUMFJaTVU1dFRYcE9SRnBwVGtSRk1FOUVWVEJOYlZreVRsUmplazVxUlhsYWFsVjNUa1JOTTA1VVl6Tk9SRkV4VFVSVk1rNXRWVEJOZWxreFRucHJNRmxVV21oTmVsVXlUbXBSZWsxNlp6TlBWRTB6VGtSSk0wOVVXWHBPZWxrd1dYcFplVTU2UVROT2VsVXlUbTFKTUUxNldYbE9la2t4VGtSUk5VNTZWWHBOUkZVeVRYcFpNRTVxV20xT1ZHTjZUbXBLYlU1VVFURk5lbFY2VGxSRmVrMUVZekJPZWtsNlRVUlJNMDVFVFRKYVZHTXhUbnBqTUZscVNtMU9la2t5V1dwU2JVMXRXVEJQVkZwclRrUkpNazVFVFhwT1IxRjVXbXBLYVU1SFVUQlpha3BwVGtSTmVrOUVUVEJPUkdjd1dYcE5OVTVxYXpCUFJFMDBUWHBuTUU1VVRYcE5lazB5VDFSWmVrNTZRWHBQVkZWNFRrZE5lazVVVlhoT1ZFbDVXbXBOTUU1VVdURk5WRTB6VGtkWk1GbHFaR2hPYWxVeFRWUk5NazU2WXpGUFZFMTNUbFJOTTAxNlkzbE9Na1V5VDFSYWEwNXFXWHBQUkZWNVRucEZNRTE2VW1wT2FrMHlXWHBSTTAxNlVUSlpha3B0VGxSTk1sbDZUVEJPUkdzelRYcE5NazR5UlROTlZGa3hUWHBSTTFsVVRYZE5lbGt4VGtSak1rNUVTWHBOYWtwdFRucEJNMDlFVFhwTmVrVXpUV3BqTTA1cVNUQlBWRkY0VFhwTk0wOVVXbXBPZW1jeFQxUk5OVTE2VFRCWmVsa3dUbnBOTUUxNlRUUk9lbGt4VGtSTk1FNUVUVE5aVkUxNFRucGpNMDVxU20xT1ZFRjZUbXBqTWs1cWF6Tk9lbFV5VFhwRk0wNVVVVFJPVjBVeVdXcE5NVTVxUlRGT2VsRXpUVzFKTVUxNldtaE9WRWt5V2xSYWEwNUVUVEZQUkdOM1RucGplazU2VFRGT1JGRXlUV3BqTVU1NlRYcE5lbEUwVGtkWk1FMVVVWGxOZWtFeVRWUk5lRTVFVlhsWmFtTjRUWHBqTVU1VVZUUk9ha2t3VG5wWmVrMTZWVEJaVkZwb1RtcE5NMDlVVVhsT1ZHY3lXV3BhYlUxNlZUTk5hbEV4VG1wck1VMUVXWHBOZW1Nd1dWUlJNMDVxV1RKWmFrcHBUWHBSTUUxcVRUUk5iVmt3VGtSUmVrNXFXVEpOYWxFd1RXMVpNVTE2V1RCT1ZGRXlXVlJWTkU1VVVURlBWRmsxVG0xVk0wOVVWVFJPYlVreFRWUk5lRTE2VlRGTlZGcG9UWHBSTTA1VVRUVk9SMDB4VFhwS2FVNTZSVEJOVkZFeVRYcE5NRnBxV21wT2VrVXlUbFJqTUU1RVRUTk5lbEV3VG1wUk1GcHFVVE5PYWxWNlRucFNhazR5UlhwTlJFcHBUa1JKZWs1cVNtMU9lbXN4VG5wWk5VNXFXVEpPVkZFeFRYcHJlazVVV21wTmVtY3pUWHBWZWs1cVRUTk9WRkV6VFhwVmVrMUVVbXBPZWxFeVRsUk5NMDE2WnpCT1ZGRXpUbXBGTVZsVVVtMU9iVTB3VFhwTk1VNTZWVEJOVkZsNVRsUk5NVTVVVlhsT01rVXpUMFJhYTA1VVl6QlBSR014VFhwSk1FMXFXWHBPZWsxNlQxUmpkMDVxVVhwUFZGa3pUa2ROZVZwcVdUSk9SRkV5VFhwTk1FNXRVVEJaYWxKc1RtcFJNRTVVV21oT1ZHc3dUa1JaTWs1Nll6SmFSRlV4VG1wSk1FNUVZekpPYlZVeFRVUlNhVTV0VlRGTlJGVjNUbnBGTWxsNlZYbE5iVmt5V2tSYWFrNUVTVE5PVkZrMVRqSkZNVTFxWTNsT2JVa3dXV3BhYkU1SFJUSk9SRTE2VGxSTk0wNTZUVFZOZWswd1dWUlplVTVFUlRGTlZFMHlUa1JWZVZwcVdYbE9hbEV6VG5wUk5FMTZZekpOZWxwc1RrUk5NRnBxVFhoT2VrMHdXbFJhYTA1SFVUTk9hbHB0VGxSUk0xbFVXbTFPUjFVd1drUlZNazVxWTNwT1ZHTXdUWHBuZWs1RVVUVk9Na1V4VDBSak1FMTZhM3BPVkZVd1RucEZNVmxVVFhoT2JWa3dUbFJaZVUxdFNUTk9SRkV5VFhwTk1VMTZZekpPZW1zeVRucFplVTE2UVRCTlZGVXpUbXBSTTAxcVdUUk9SMDB4VDFSVk1rMTZRVEJaZWswMVRrUkplazE2WkdoT1ZFRXlUWHBLYVU1RVkzcE5lbEV5VFhwck1FMVVWWGRPYWxWNlRrUlNiRTE2WnpCWmFsVjRUbFJCTWxwcVVUTk9iVlV3V1dwUk1FNXFXVE5QUkZVeFRucFZlazVVVVhoTmVrMTZUMVJSTlU1VVNUTk5SRnBwVG5wTk1FMXFZekpOZW1kNlRrUlpORTV0VlhwTlJHTXpUbXBKTVZsVVVYaE9SMDE1V21wVmVrNVhSVEpOVkdNeVRXMUpNazU2WXpKTmVra3hUWHBOZDA1VVdYcE5hazE0VGtkTk1sbHFVWHBPVkdjelRYcFJNazU2V1ROT2FtTTBUbFJaTTA1NlRUQk5lbXQ2VFVSS2FVMTZhek5QVkZVelRqSkZNbGxxVlhsTmVtc3dXVlJWTlU1VVFURlBSRkUxVG5wUmVrNUVWVFZPVkUxNlRrUlJORTE2UVRKWmFsa3hUWHByTVUxVVdUQk5lbU42VFVSYWFFNVVWVEJPZWxreVRqSkZlazU2WTNwT2FtY3pUbXBOTVU1VVFUQk5hbU42VFcxWk1FMVVUWHBOZW1Nd1RXcGpNazF0U1hwT1JGVXhUa1JSTUU1NlVYcE9hbGw2VFVSWmVFMTZhekZOUkZKcVRtcFZNRnBFWTNwT1ZHZDZUbnBaTlU1RVozcE9SRkpyVG5wVk1rNUVVVFZOYlVreFQxUlJlRTVxVVhwT2FsVXdUbXBOTTAxcVl6Sk5lazB5VGtSU2FVMTZWVEphUkZKc1RtMVpNazVxVlhkT1ZGa3lUbXBSTkU1RVp6QlphazE1VGxSQk1VMVVZekZPZWswd1RrUk5OVTVIVVRCYWFrcHBUbnBSTTA5VVRUTk5lbWN5VG5wS2JVNVVVVEZOYWxsNVRucG5NRTE2VFhwT1JFa3pUa1JhYlUxNmEzbGFhbFY2VFhwQk1rNXFZelJPZWtreVQxUk5lVTVxWXpGWlZFMTVUbnBKTVU1cVl6Qk9SMVV4VGtSVmVFNUVXWHBPUkUwMFRucG5lazlVV21wTmVrRjZUV3BqZVUxNlVUSlBSRlV3VFhwbk1rOVVWbWhOYlZrd1QxUlJlVTU2VlRKTlZGa3hUbnBKTTFsVVdtMU9WRUV3V21wU2EwNUhVVEpQUkVwcFRsUlZNRTFVV1RKT2VsRXdUbnBSTkU1RVVUTk5hbFpvVFcxSk1sbDZZelZPZWxFd1RucE5NVTR5UlRKWlZGSnBUa2RSTVZsVVVteE5iVWt3VFhwTmVFNTZVVEphUkVwcFRtcFpNMDlVWTNsT2VsRXdUbFJWZDA1RVZURk5SRmw2VFhwWmVrMXFXVFJPUkdjeVQxUlJNazU2VlRCYVJGRjVUWHBqTUU5VVRYcE5lbGt6VFVSWmVVNTZZekZPYWswelRsUkZlazE2WXpST1JFVXhUVVJWZUU1SFVUSk9lbU15VGtSWk1scHFZelZPZWtreVRucFJNRTVVUVhwTlJGVTFUWHBuTTA1cVdUQk9hbWN5VFZSWk5FNTZTVEZOYWxwb1RucG5NRTVVVW1wT2FrVXdUbnBaZWsxNldUSk5lbU16VGtSbmVrOVVXVE5PYlZWNVdtcFJNRTV0UlhwT1ZGRXhUa2ROZWs1VVZUUk9lbXN5V1ZSU2FrNXRSVEZOUkZVd1RucEpNVTlFVFRWT1JGRXlXWHBWZWs1SFZYcE9hbFYzVG5wWk1rMVVXWHBPZW1jeVdWUmFhVTVVUVROT2FsSnRUbTFaZWs1RVdUTk9hbWN5V2tSVk0wNUVXVEpaZW1OM1RtcE5lazFVVlhkT2JVMHdXbXBOZVU1dFdUQk5hbFUwVFhwQk0wMXFXbWhPVkUxNVdtcE5lRTVFUlRGUFJGcG9Ua1JqTWs1cVl6Vk9SRmt5VFhwVk5FNUhXVEJOVkVwdFRtcFJNRnBVWXpGT1JFMHpUa1JhYlUxNlkzcE9SR041VG1wck1GcHFVWGhOZWtreVdYcFZkMDVxV1hwTlZGcHBUWHBWZWs5RVVUQk5iVmt4VFhwYWJFNXRVVEZOVkUwd1RrUm5lazE2V1hsT2VsVXdUV3BSTTA1cVdUQk9hbFV6VGtSVk1GbHFUVFZOZW1jeFRucE5NazU2VVRCTmFrMDFUbTFaTUZwVVdUSk9hbFV5V1dwUmVrNVVRVEpPUkZKb1RucFpNRTVxVlhkT2Vtc3lUV3BaZWs1dFZURk5WRkpzVG5wbk1FMXFZekpPZW1Nd1RtcFZOVTVFWnpGTlJGSnNUbXBWTUZsVVVUVk9WRWt3VDBSYWJFNXFhekZOUkZKclRsUkpNVTVFV214T2VrMHlXa1JOTUUxNlozcE9SRmw2VG1wUk0wNTZZM2xOZW1ONlRrUlJNRTU2V1RKTmVsSnRUbTFaZWs1NlRUQk9SRkY2VFVSUk1VNXRVWGxaYWxFMVRsUkpNazVxVFRCT1JGRjVXV3BTYTAxNlVURlpWRlY0VGxSQmVWcHFXVE5PVkVGNlRtcFpNMDVxV1hwTmFrMTVUbTFWTTAxNlVtcE9iVkV3VFdwS2FVNXFhekJPUkVwdFRYcEpNbHBFVFRKT2FtTXdXa1JLYlU1dFdYcE9lazB3VG5wRk0wNXFVVEJPYWxWNlRsUmFhRTVFWnpCT2VsSm9UbXBSTVUxRVRYbE9SMUV5VGtSWmVrNXRXWHBQUkZab1RqSkZNRTFxWXpKT2FtTXhUMFJLYlU1cVJUQk5hbGt6VG5wWk1FNVVWVFJOYlVsNlQwUlpNVTVVVFRGUFJGcHNUbFJyTUZwVVl6Rk9WRUV5VDFSWk1rMTZRVEJPVkUwMFRtcGpNRTFxV1RKT1JFMHdXVlJaTVU1VVJYcE9SRmw0VGtkUk1FMTZTbTFPVkVVeVdWUk5NazV0V1hwUFJFMTVUbFJSTVU1RVRUSk9WR3N3VG1wS2JVNUVXVE5PUkUxNVRrUlZNRTFxVlROT2JVVXdXa1JTYkU1NlNUTlBWRnB0VGtSbmVrNXFVbXhPYlZVeFRXcFplazU2UVhsYWFrMTNUWHBqTUU1VVdURk9SMUV6VGtSS2FVNUVWVEJhUkZreFRsUnJNazVFWXpWT1JFbDZUWHBhYVU1cVVURlpWRlY2VG1wWk1scHFVWHBOZW1NeVdrUlJORTVxVlhwTlZGSnFUa2RGTWxscVRYcE9hbXN6VFVSWk5FNUVaM3BOVkZrMVRYcE5lazVxV1hoT1JGa3hUVVJhYTAxNlRUSmFSRlYzVFhwck1rNTZWWHBOZWxrd1RsUlZNazE2YXpOT2VsSm9UWHBOZWsxcVdUSk5lbWN4VFdwS2JVMTZXVEphYW1ONVRYcGpNVTVFV1ROT2Fra3lUVlJWTlU1VVZYcFBSRXB0VGtkUk1FNUVUVEpPUkVVd1dYcE5ORTVVWXpGTlZGSnFUbXBWTVU1RVVteE9WRUV3VDFSVmVVMTZVVE5OZWxFeFRXMUpNMDFVVW14TmJVa3hUMVJOZDAxNlNUQlBSRnBzVFhwTk1FNXFWVE5PYWsweFRXcFZkMDU2WnpCT2VtTXlUbnByTTA1cVRUVk9SMFY2VGxSYWFrMXRXVEZQVkZWNFRYcEJNVTlVV1hwT1YwVXpUbXBrYUU1dFdUSk9SRTB4VG5wak1rNXFWVFZPUkZVeVRsUlJOVTV0UlRKT1ZGSnBUbFJSTUZwVVdUTk5lazE2VG5wTk1rNUVWVEJQUkZKclRYcEZlazVxVW1sT2FrMHpUbFJSTVU1NlZURlBWRXB0VG5wbk1rOUVXVEpPZWtWNlRtcGFhVTVVU1hwUFZGcG9UbXBaTUZsVVVYbE9lbGt5VFZSUk1FNHlSVEZPVkZWNFRrZEZlazU2VlRWT2VrRXpUMVJaTkU1cVdUTk9lazE2VGtkUk1sbFVZelJPUkdkNlQxUlJlRTVxVlRKTmVsazFUVzFaZWs1VVdUSk9SMUV6VDBSVk1FNTZTWGxaZE0wVEFBQjNXbXBCZDNSdFFWRkpkVUV5VW0xYVVVUXhRVzFNYkV4M1NHcEJVVkl5UWtkYU1rRjNjR3hOZDNBMVFXMTRNMXBSVFhkQlIzUnRRa2RNTVZwNlZqRmFiVXd3UVhkd01rSkhXak5CTWxJelFXMXdiRUY2UkRGQmQxbzBRVkZJYlVKUlJYcEJiVVF4UVhkd05WcHRTRE5NUjFvelFVZElNRnAzV2pCQmQzQXhRbEZOZGtGVVREQk5kMFF6UVhkSU1rSlJUWGhhYlU0eVFYZHdNMXB0VERGYVIwMTJXbnBNYlVGdFJYcGFiWGh0V2tkWGVscDZWbTFCYlVReldtMWFNMXB0VFhkQmQxcHRRVkZJYWxwdFVqQmFiVmQ2UVhwU01FSkhUREZhYlVReFRFZE5la0Y2VERKTlIwVjZRVWRhYkUxM1NHeEJlbEl6UWtkTmRrRjNWakJDVVVSdFdtMTBNVnAzU0dwYWJWSXlRbEZJTkVGVVJEQkJVVmQ2UVVkU00wRjNSRFJCZDFveVFYZElNMEZIVEcxQ1VVbDFRVlJTTWxwM1NETmFiWFJ0UVhkYU0wRnRSREJCYlUxNFdtMUVNRUYzVjNaQmJWb3hRa2RYZGtGUldqRkNVVVYyV20xT2JWcHRjREpCYlhneVFWRklNRUZ0ZEROQmJVd3hRVlJNYlZwdFJYaEJkMFJ0UVZGd01FRnRVakpCUjFkMlFVZGFiRTEzVEROQlIzQnNUSGRGZGtGUlZqTkJSMHh0UVZSRWJVSlJUWHBCVVV4c1RIZE5lRUZSVW0xQ1VVUTFRVkYwYlVKUlJYVmFiVVF6V25kYWJFRXlVakpOZDBneVdtMU9NMHhIY0d4QmJYZ3dUVkZGZWtGNlNESmFiVXcxV20xYU0wSlJUREpCYlhnd1FYZE1Na0ZIVERKQmJYQnNXbTFNTWtGUldqUkJSM1F5VFVkSWJWcDZWakpCYlVneVducFdNbHBIU0RGQmJVUXdRa2RFYlZwdGVEQk5VVTEyUVhkRU1GcDNXbTFhYlVnd1dtMUVORUZVUkRKQlVVZzFRWHBJYkUxM1JYVkJiVVJ0V25kSWJFRlJkR3hNZDBocVFYZEVNRnBIV2pOQlVVd3lRVWRJTlVGM1VqQk5kMFYxV20xTU0wSlJjRFJCUjNBd1RFZGFOVUY2VERKQlIwd3dRVlJXTWsxSFRHMUJiVVF6V2tkYU5VRnRlREZDVVV3elFWRkliRXgzU0d4QmJWcHRRWGRNTWtGNlJETkNVVnByV25wTU1WcEhTR3hhYlV3eVRIZEVOVnA2VEcxQlIwaHFRWHBFTUVGM1RHMUJVVll3VEVkYWJFRnRjRE5CYlhBMVFVZDBNMXBSU0cxYWJYQnRRVzF3YTBGUlZqSmFiVXhzUVVkV01VeEhSRFJhYlU0eVFVZGFNRUZ0Y0ROQ1VWcHFRVkZTYkUxM2NEQkJkMUl3VFhkTWJVRnRkREZhVVZwc1FYZDBiVUZIU1hWQlIweHRRVkZ3TkZwdFNERmFVWEYxUVhwV00wSlJUR3hCTWxJd1dtMU1NVUZSZUROQmJWb3pRVzFTYlVKUldteEJVVXd5UVhkRWJVRnRUREZDUjBWNFFWRjBiVnAzUkRSQmQwUXlURzFhYkVGM2RHeE1kMHhzUVhkYU1VSkhTREpCUjNReFFWRmFORUZVU0cxYWJVVjFRVzFJTWtGUmNEQkJSM1J0UVZGSU1GcHRVakpNUjBRelFXMU9NMXBSVERGQlIwd3dRVkZhYkZwdFdqQk5kMXBxUVhwSU1FMTNXbXhCYlhReVRVZHdNVUZIVW0xQlIzQXdRVlJJTWtGM1NEQkJVWEF3UWxGYU5WcDZUR3hOZDFkNlFVZHdNVUpSVFhWYWVrd3pRVWRhTVVGVVRESk5SMWQ2V20xT01FeHRSWFZCVkV3eVRFZHhkVUZSVmpCTWQwaHNRVWRPTTBKUlNEUkJlbHB0V25kd2JVRnRjRzFDVVVsMVFWRjRNRXh0Y0RWQmJYQnRRVWR3YWtGUlRETkJVVXh0UVVkTU1rRjNTREZCZDFZeldsRndNRUZVU0ROYWQzRjFRWGQ0TVVGdFRHeEJSMHd4VEVkYWJFRjNSREpOUjBSdFFXMXdiVnBIY0dwQlIxSXdURWR3TUVGdFRqTkJiVTEyUVcxT01VRnRjREphYlhneVFrZHdORUZ0ZURGYVVWZDZRVkYwTWtGSFRYbEJVWFF5VFZGTU5FRjZWakZNUjBnelFWUk1Na3gzVERKQlVVeHRRVzFJTTBGSFZqTkJSMHcwUVcxRWJVRlJTREZhZWt3eVFYZHdNa0ZSUkcxQlIwd3pRWHBJTVVGdFJETkJkMUl5VFZGd01GcHRkREJCVVZwcVdtMVdNRnAzUlhsQmQxb3dURzFhTTBGVVJEQkJiVWcxUVhkSU0weEhjRE5CYlV3d1RVZE5ka0ZVVEROQlIxbzFRVzFFTVV4SFNETmFiVkp0UWtkSU1rRkhVakpNZDNCc1FXMTRNbHAzUlhwQmJVUnRRbEZFTTFwdFdqSk5SMGd4UVVkMGJWcEhTR3hCZDFKdFFsRndNRUYzVERGQ1VYQTBWMm93V0hGVlYyTnZlbmt3Y2taT09WWlFjR2xOTTA5S2IxTmlha1Z0Y1ZoTmQwUTBSMGRKZUVaS05HdHVVVTlqU0dGQmJVUklSVWRDU0hneGJqQmpSRWhSZFhweFNFMXFjREpYYmxreFJHVnZVMDFwYm1Gd2FVWjNSVTlZTUdOclNESkZNVUZHWjI1d1VVOWljSGxTYVV3eFVtMUJVMEY2U1VZNWVraFNjVmRZTVdOc1IydzVhMW96U1dOS1VWZDFRbE41ZVVWVFNEVndTREY0UldGSmQwaEthMWhHU25WQlJ6Qnhkbko1VTJwQk1VMTNRWGxUUzB4SlYyeEJTa2xzUjBZNWFYRmhSVE5NU21OblJEQTVNMEZUU1dkS1NrVk5Xa3BOYW5CVlUxSkhZVm94U2xWMVJreEtNV05FU1hsU1JUTjRNRXg1WW14TlNqRldiMGw1VVUxSVUwVktSMGxtUlZWU1pVRlNTVlpGVlVSbGNEQkpVVXhMZVZkeWVrbG1TbmQ1U2tSR1oxUk5kbWR0UjFWT00wbExWM2RJUjNsRFJXMUZaMXB0UldseVNIVjFSREZqTTBSTFQyVllNMFJyUWtvNVpuRklPV1ZJTWtGRFFYZEZSMEZzT1ZCSE1WTjRTRXRCTkVRelQwSkdZWGd5YjB0eFZrMUtOR2xJU2sxWldsSm1NVzk2ZFhWQ1MzbExjSGhuVWtaVlUwMWFWRmRGUWtwWFUwbFJWMmx4WVZkVWNGSlRaRmx0UlUxeVlYUnRiM1puZDNGSFRXSmFZVWxuYjNkMU1FaEhlVVZGU2psRVNVbE5hRVZSZVd0SlMwbDFiM2hCTkVwNlYwVnllVTlGVFZKVFdXOVRZMUZKUmpsMVJuZ3hWbkJSVFZKS1IwRXlSM1k1UTFveVkxbHdTbmxXY0cxUE0wRkxlVkJJVkVscmIzZE5Va2RoVjJaSVIxcHBTR0ZCWjB4NGVEUk5lWEJsUVdGSlNWcDNWelJLVkhSdGJqRjVia2hHWjJ4SmJYRkVRVE5qV1UxR1owSnhiVTVwY0hsNVoxcEtSRFJCTUZKclRVbEJWbTlLTVVGTk1GSTFjREZ3Tkc1SGVHMUVNbU5ZU1RCNWEwMVNaMlZhYlhGNVJWVkJSbGd4UlVsRlMxZFhTRWc0TlVsVFNXeEhTRm94V2xGMGEwMTZUWGxNTUhGbFFsUkJlbHBLVFhoRWVIbHJiM3AwTlhKUlZqRndZWFV6V1RBME0wWklZMWx2VkZOS1RYbFRhVWh0ZVd0QlNVODFXbTF4WjBGSll6WnllVUZvV20xRlYwUXllVmRCZWpsQlFWVkVhMW94U1RCQlZVeHNSbEZUZFZwNlNEUk1Na2h0U2twMWRVWXlTVkZ4U0ZkU2NXRjFiVWx0VHpWRU1HTk5UREYxZFVReFlqRnlTR042Uld3NWVrRjNWek5CZWtWQlNVcE5TMFF3VjJ0RllWZG1ia3BJTTB4TFYxaEpTakZ0UVVsNVNraFNZbWx2ZVhGS2IxRlhhRTFKZVVsRU1FbERTVWxYZWt4NFJYVkdNSGhxY2tweFlsZ3ljV2hIU2xkQmNGVk5UMXAzZVRGd2JVOXBiMGhqYlVVeWVXVnlla0UxUlZWUE1uRmhkVmx3U2tSc1FYZFhNa3A0VmpGYWJYVmtUVlZXWlc1TFV6UnlSMFJxY0hZNU1VbDVUV0ZCYlhsTFNFbzFlRVpWWWpGdVNHZFpSR0ZQVFVFeVFVUk5TRWxYUWxKNWJXOUtZMnh1UzJJd1RVdFhZMjlUU1ROWU0wMUJibFZOTUVaSFFVWktVWGhzUVZSRk0wcExVM2xIVVZZeVJrcE5URWRMVTBGd1ZFRkRTa2hCZUUwd1VtbENTR05zU1VsYWJHNVNSR1ZHTWxOc1RURnhhRWg0ZVZCSFMzVkdSVE5OUmtoS05XZHhSMGd4V2xJeGRrbFVNV05JU0ZJMVRIZGFaVzVMUVVoYU0ySTBUVXA1UzB3emRXTkNTMFJzYjFGQmJscHRSVTlOVkZOUGNIbHhNMGd6Y1dKTVNYVmpTVzE1WTBaS1ZqVkJTVVJsY0hkVFIwZFZVMVJLVkhVMFJIZDFNbkpUVFdKeVZYa3pjWGQ0YkVKVlUyUkJNakF5U1ZOSlQwUXdRV3BNTWpWUldrbFNNM0JJWTFsWWJYbDNRbFZpTkV4SGRWaEpVR1pzV2tvME1VWlNkVzFIUjBsalNsUkZZbkJoUVVoeVZEbExXakJhYWtGM1RXVkNVWEZTU2xWalkyOTNWakpGZWpsc1dETmlha3BTWjNoRWJVd3hSMGhKTlVaVlUyNUpWRkpxY0RGWFFraEtZMUZ2U210TVJsRlhiVVozVjFodmQxZHFRVk4xVFc1VlRXUndlbGRXY0hwVGJraHRjVFZNUjBneFJHRlNaVVpLT1c1SFNVbGxSa3BuWTI5NmNWbHhSM1ZUV25kSlYxcElURFJ2VkRGMVFXRk1iVVl6UVRSQlUzUTFibEl4VUc1SFFYaEJTR05vU1RGT2JFVjNkV3B2U2tReGIxUlRlRnBLUkRWdk1ERkxTa2g0TWxwUlYxZENVVll3VFhobWFtOTJabXhDUjBsclRFcHhaRTFKVjJSWk1WZHNSVXBuV0VGSU9HVnlWRUZQUmtwNGJWcEhVelJLZUdZelNFZE1iVWhJZVZCQllWTmxibE5qTmtneGNVcGFTM0JxUmpOSlJFZDVRVEpFZUdOVlRFbFBaa0ZKZVhoQlVubDNia2RGTVVGSU9XTnlSM2sxUVhoamRrVmhWekpOVkZkbWNUSkJkMFY0Y1hsRVIza3hUVzFJYkVKSU1UVnZkMHd6UkRCeFlscFNaekJFU0dkR1IxUjVRMEZLZFdWeVlXTmFTVkY1WWtnd1UyZEZNbmxxY1ZGT01VWmhVMkpJU2pScWJsVnhhSEI0ZEd0QmQzaHJSa2xCYUc1VVUxaEZTWFV5Y1VwU2JGcGhRVVpaYlVnMFdtRklhMjVLUkdsSVNHdGlSMUY1VjNKSVltcEdZVVYxY2xWU2JFaDJPR1ZOZWtReVNVbEZka2RKZERSd1UyTTBSbEpTTW05VFYwZENVWGxrU1cxYU0zSlVOWGxOYlhFMGNraHhUMEpVWTJaeWVEbGhjREpUYkUweWFtbHZkMWRHUjBsamVuQjVlV05FZWxjMldrbzBaVVo0TVVGdU1IbGpSbEpqYlVsVmRVaHVTbWRFUlZKSU5WcEtkVzFNTUhVMldXMU5Xa1l5U0dsSFNGSXpUVEF4ZDBGNGRESktWREZSY0RBNWFWcFJSVEphTUdacGNETk5ZMFpJVERGR2JVOUxXREZGWVVKS1UxZEhkamcxVEdGWE1GcFJTVVpHUzBGU1FYcDFVa1l3Y1RCYVNFRklURWRUVFVwU2VWVmFNVmROUVROVFIzQXlZakJOTTJOcVFYbE9NVm93WWpWQk1scHBjbEpCTTBGSFNXMUdTM0ZNUlZOSmVFcDZNVnB2U0hGVmNETjVNVUZ0VFdWS1NsTXdXbmQ0TkV4SFVtdE1TVmRYUWtsSWFrMUpTWFZ4ZDFac2J6TmphVnA0WjJseGVFRllXbUZCVTBaM1RYWkdNa1JzYmpCRmRVZFNXakJHVkZOdGJtMU1iRnBHWjNWS1ZFRlBSREZKUmtoVFRWTnZTa2cwYmtsUFZGcDVUVmhOTWtscFJHMVhWa1ZoY0RGd1MzVkRUWFpuUjBGVlNYcENVWEV4YjBkYU1FbHNaMWx2YlVsU1ducHFiRnBzWjJKeFIzaHNiM2c1Ykc0eFRXWkVSMVpwYm0xTk5scDNWakpKUm1kMlIxSTVlRXd4ZVhkQ1MyTlNXa2xGU0ZodGRETktla2xQUVdGVFZrSlJTV1ZJU1hCbFJXRlBXRXgzUVZOWU0zRjZSVWhOVWtadFNWbGFVR2RuV0RKSlFrRXhTV1ZIUzJJelJtMVRRWEZWVTBWd01EbFRRVE5YYVc1NmNHdEVZVUZxY2xOUFMweDZaMnB2VW1ZemNrdDVZVTB6WTJoQ1NVOW9jREYxYlVreWVWWndNR0p0UVVneFZVSktjR3BJVW5sV1dqQmpZa3d6UlRCQ1NWTkRSRzFUUjI4eFRWVmFWVVYyY0VobmJVVnRUR2xhTW5GNVRUQm5OWEV5T1VsQlVWTjZRVWxFYTBGU1FXNU1TVTFWY0hablUyOVRlVXBCVkUxa1NsRklNbkpTVTJsdVNubDRTRXRYVUVkMlptcENSbVpwY25oNWRYRlNPWGx3UzBsdGNEQm5URnA1Y1d4eVIwRkhSakl3TVVGNWNYZE5iVlp0Y2tsT1pWaHNaakpFTUZjMmNERkJVbTlTVjBWYVNIUnNXa3QxUkUweVFWSk5iVVY0Y25sMGEwMVNlVmx4WVhWc2IwZDVlRmt5TVdaSVVYVjVXVzE1TkVaVllqVkdVMFZzY2tsVFFWZ3pTVXhKZUd0c1RVdEJTa0V6ZFUxeE0wOXRUVXRCVFZwUmVVTndTVUV6Y0VZNWJVMVJURFJhZWsxTldUQmFNVTE2WjFaSVlYZ3hjRzF3YWtoSGRXWnZlbWRqUkhocldVUjRNVFJHVVVGaVJsUjVaVWQ0ZVdKeFZERnNXVEpOU2tkVlNWbE5lbXMxUVROUFlrRXdkVUZHZWtsSFRIb3hTRzk0WTFoeVNuRldSSGw1TmtReWRWRkdVVTloUVRJMU1rUktkVlZNU1VsWlNVdHhOWEo2WjFGQ1IwRlhRa3RKVTFoc09VcE5lalEwYjFRME1rZEhRWFZ1TWxvemNIb3hTRXhJTldwdWJYVTBXa1puZUUxM1VqUkJTa1EwY0RBNGFWa3plR3hIUzNBelIxVnhiVzlLVW1wWU1qRXhjRXBOU1c1M2RXNUtWVUZSV0RGUFNFbFJRVzFFUjA1cldsVndhVnA2UVdsdU0zbDFXbmhYU2xwM1ZqVkZlVUZhUVcxSmEzRlJVakJZTUhsVlNrcDRiVWRoUldWYVIwRmFjVWhTYkVZd1V6TkdNM0V5UmpCcVpVbDZZMVJ3VVhGTlNubGpaMjVMZERWSVZGZG1jVXRqUkc0eVUycEliRGswY2tsVFVFa3hZME55ZDNFMWNubDBhWEpKZVZsSVMxTnBSSGxhWlVaSFQwbENWR0pzV2tobWFscEtkRE5OTVVReVJ6STVURVl6VTAxWWJVdzFRbE5YVWtWaFUyZE5NSEZ0UmxBNVQxb3hjV2xGZWtsWVRVcEpSazE0V214Q1NsTktSVWh3YVc5SVRWQndWR00wVFhwMWJVVlNjV2hNZWtscVRUSkpaSEF3TkdwSVMwOVhSVEl3TVhBd1FYbElVVmQ2UlhkSlNYQXdkVVpOWVUxVmIxSmFhVXA2UlZKQk1tdEtXREZOVWsxSU9VSmFTVlp0U1hwME1uRmhRVFJGTUZOU1FWSjBhMXA0UVd4S1ZVbGtjbEpuYWtWS2REUndiVTFrU25wMVdrZEhUMk5HVlZkVFJFdFRNVUV3VFhwSFVWTXlSakZqYVVKVlRUTmFNbFpsUWtwMVVIQjVUMHR5ZW5sWlJYbGpOa0ZSZVRWSVVEazJRVEpuV1VSS09VcENVVTFtUkcxVGVHOUxRVVZJU1VVd1JETk5kVVpKY0dWTWVrVjFTREZqV1UxSVdtVnVkMEUyUjBablEwVjNWakJ1Um1kdVFrcHhORWRoVXpKRk1rRjFiMVJKWmtSNmRESndSM1ZEVEhkT2JFRjRTV2hOZVU5bVNsVkJhMFpRY0VGUWVqbHNURXBCWmsxR1RqbFdVSEF3VEhkRWJFRjNTRzFhUjBSc1FVZDBNazEzUkd4QlIzZ3hRa2RNYlVGUlNERkNSMFYzUVVkT01reEhjWFZCUjFvd1drZEVORUZ0VGpGTVIwUnNXbTFFTUZwSFNHcGFiVkl3V2tkWGVrRjNjRE5CVVZveldtMU1NMEpIY0d4QmJWb3lURzFNYTBGdFRqTkNSMGd3UVhkRU0wRkhSRFZCZDB4dFdrZEVNRUZSY0RGQlVVUnJRWGRJTTB4SFJYaEJSMFF5UVZGTU1FRjNXakpOUjNGMVFXMWFNRTEzU1hWQlVVUXpRVkZNTWtGM2RHMWFSM0F6UVVkTWJFMTNUWGxCZDFJeFFYZE1hMXB0VWpKQmJWcHFRWGRNTTBGUmNHeGFiWEF3UWxGSWExcHRjRzFhZDBRelFWUk1NazEzVFhkYWJWSXlUVWRNYTBGM1VqRkNVVVY1UVVkd00xcEhSWGRCVkV3eldtMU1NRnB0Y0RCQ1VVd3hRVzFNTWtKUlJHMUJVWEF4UWxGd05WcHRjREphZDFvelFVZE9NMXAzY0ROQmQwUXlRVkZGZFVGM1JETmFiVXhyUVhwV01rSlJXbXBCVVhnelFrZE1iRUZVVmpKTWJVdzFRWGRFTWtGdGNEVmFiWFRORXdBQWF6Rk9lbVJvVGtSWmVrMXFWVFJPUkdzelRXcGpNRTU2VFRGTlZHTjZUbnByTVZsVVRYZE9WRkV6VDFSYWJFNUhTWHBOUkZWM1RtcGplazVVV1hsT1ZHTjZUVVJSTlU1cVRURlBWR013VGtSTk0wNUVZM2xPYWtVd1dsUlNhazVxVlhwT2VsVjRUbFJqTWs1NlkzaE9WRlY2VGxSTmVVNTZhekphUkUxNVRYcEJNMDFFVFhoT2VsVjZUa1JOZUU1dFZUSk5WRkV4VG5wak0wMUVXVFZPUjBsNVdXcGFiVTVxWjNsYWFsVXpUbXBuTUU5VVl6Vk9iVWt4VG5wU2FrNTZZekJaVkZsNFRsUm5lazVxWXpOT2FtTXdUbXBOTkU1VVFUTk9hazB5VGxSRk0wNVVXVFJPYlZFeFRXcFpNazVxWnpCT1ZGVjRUWHBaTTA1RVdtMU9SMVV4VFhwa2FFNVVaM3BOUkdOM1RrUkZNVTU2VFhsT2Ftc3pUVlJhYWs1RWF6Rk9hbEV4VGtkVk1VNXFWVEZPZW1Nd1QxUmpNRTVxUlRKUFJGazFUbXBuTUU1cVZYbE9SR3Q2VDBSak5FNXFVVEpaYWxWM1RrZFZNVTVVWXpCT2FrVXdXa1JSTWs1VVl6Qk9hbEY2VFhwSk1scHFXVFJPZWtreFRWUk5kMDU2UVRCT1JHTTFUWHBKTWxwVVVUTk9lbU42VFZSU2FrNXFTVEZOVkZrMVRtMUZNbHBFVFRCT2VrRXdUWHBWTWs1dFRYcE5hbGswVGxSQk1WbFVVWGhOZWtWNlRYcFZlazVFVlRKT1ZGSm9UbFJaTTA1VVkzbE9hbEV3VFhwUmVrNVVVVEpaVkZWNVRYcG5NVTVVVW1wT1JFVXhUbXBWTWs1RVl6Tk9lbFV5VFhwQk1VMVVVVFZPVkVreVQxUmFhVTV0UlRGWlZHTTFUbTFaTUZwRVdURk9lbU15V1ZSamVFNUVWVEJhVkZrMVRrZFJNRnBVVlRCT1ZHTXhXVlJqZWs1cVJURk5hbEpzVGtSTk0wMUVWVE5PTWtWNlRsUlJlazVFWnpCT2FscHRUbnByTUU5RVVYaE9WR3N5V21wWmVrNHlSVEZPUkUxNVRrZFpNRTlVVlRCT2FsVXlUMFJhYVU1RWF6Tk5hbFV6VG5wRk1FOVVUWGhOZWtreFRYcFNhazV0VlROUFZGVTFUbXBGTVU5VVdUTk9SR2N5VGtSTmVVNVVZekZPZWxFeFRucEZNRTFVV214T2VtY3hUbFJSZWs1cVNURlBWRmswVFhwVk1WbFVZekZPYW1jd1dWUmplRTV0V1RCT1JFMDFUWHBOTTAxVVVURk5lbFV5VFdwUk0wNVVRVEpPZWxFelRYcFpNazE2VVhoTmVsVXlUVlJWTWsxNmF6Qk5WR1JvVG5wUk1sbDZUVEpOZWxreFRXcFZORTVVWnpGWlZHTXhUbTFKZWsxNlZtaE9WRTB6VFZSTmQwNUVhekpOYWxVelRtMVplazVFV1ROTmJVa3lUbFJOTVU1cVNURk5SRlV4VFhwQk1sbFVVbXBPYlZVeFRYcFNhazVVVFRKWlZFMHhUbFJGTTAxVVl6Rk9SMUV4VG1wYWFFNTZUVEpaZWxKb1RrZE5NVTVFVlRKT2Vra3hUa1JSZVU1dFRUQk5hbU15VFhwWk1rOUVWVEpOZW1NeFRrUlJlRTVxUlRKTlZGRXpUbXBuTWxsNlZURk9SRmt3VGtSWk5FNXRXVEphVkUwd1RtcEZNMDVVWXpGT2FtY3dUMFJOTTA1cVNURk9lbEV5VG5wRk1FOUVVbXBOZWxFd1RsUmpORTE2YXpOTmFsVjRUbXBuTTA1RVkzcE9ha1V4VG1wa2FFNXFSVEJOYWswMVRucE5lVmxxV1RCT2JVVXhUWHBhYUU1NmEzcE5lazEzVGtSTk1FNVVWVEpPZWxGNlRXcFNhazVVYXpGT1JFMHdUbXBqTWsxNldUSk9ha2t3VFhwTmQwNTZRVEJOYWsweVRtMU5NazlFVVhoT2VtTjZUWHBTYkU1SFdUTlBWRlYzVG0xSk1rNTZXVEpPYWxreFRucFZNVTU2VFRCYVJGcHJUbXBGTUU1VVVteE9SMDB6VGtSamQwNTZRVE5OZWxFeVRsUkZNVTlFV21sT1JGRXdXWHBhYWsxNldYcE5hbU42VFhwUk0wNVVUWGhPUkdONlQwUk5NazV0V1RCYVJGVXhUbXBKTUZsNldteE5iVmt5VFhwVk1FMTZVVEpQUkZrMVRXMUpNMDVFVlRKT1JFMHpUbXBOTlU1SFVYbFphbU42VG0xWk1GbFVUWGxPVkUweVRYcFpNMDV0UlhwTlZFcHRUa1JGTVUxcVRUSk9SRWt6VFhwTmQwNTZVVEJaYWxrMFRucFJNazU2VVRKT1JFa3dUWHBWZDA1dFNUQlphazB3VG5wUk1FNXFUWGxPVkVFeVRsUmFhazE2VFROTmFsbDZUWHBGTUZsNlkzaE9iVkY2VFdwU2EwNUhWVEZOVkZwb1RucG5lazlFVlRCT01rVXpUVlJaTUU1RVZYcFBSRTB5VG1wbk1rNXFWWGxPUkVVelRsUlpOVTVFVFRKTmFsSnFUa2ROZWs1NldUTk9WRVY2VDBSak1FNXFWVE5PUkdONVRYcFJNVmxVV21sT1JFMHlUbFJSTVU1dFRUQmFhbGw0VGtSVk1rMXFXVFZOZW1zd1RYcGFhVTVFYXpOT1JFMTZUa2RaTWs5RVdUSk9Na1V4V1ZSWmVVNUhTVEZQUkZGNVRrZFpNMDlVVVRGT1ZFVXhUVlJhYWs1NlVURlBSR013VG5wUk1VMTZVVEZPVkdNeVdsUlJNMDF0U1RKYWFsVjZUa1JaZWs1VVNtbE9SRVV5V2xSTmQwNVVhekJOYWxGNFRrUk5NRTU2VFhoT2VsRXpUWHBTYlU1VVZUQlpWRlV5VGtSak1sbHFXbTFPYlZFeVRrUlJlazVIVlRCUFJHTXhUWHBCTTA1Nll6Rk9iVWt3VFZSS2JVNXFaekJPYWsxM1RrZEZNRmw2VFhkT1ZFa3lUbFJSTVU1dFNUSmFSRnB0VG0xWk1scFVVbWxOZWtFeldWUmpNazE2U1RKT1ZFMTNUa1JyZWsxRVVtcE9WRTB3VG5wamVrMTZZekpOVkZwclRrUkpNMDFxWXpWT1IwVXpUbXBWZVU1VWF6Qk9WRkpvVGtkSk1GbDZXbTFPUkZreVRtcFZOVTVFU1ROUFZGRXlUbnByTUU1RVZUTk9iVTB4VFhwU2FFNXRXVEZOZWxWNlRucHJNVTFVU20xTmVsRXdXVlJOTVU1VVNUQlplbEpwVGtSVk0xbFVZM2xPYlZVeFdWUlJNRTV0VVRCTmVsbDVUVzFKTWxscVdtdE5lbXN3VFdwVk0wNVhSVEJOYWxKb1RtcHJNVTVVVFhwT2Vra3hUbFJhYlUxNlRYcE5hbU0xVFhwUmVrNXFXVE5PUkZreVRtcFJNazVFVlRKYVJGazBUa1JaTTA5VVVUUk9SRlV5VGxSamVVNVVTWHBOUkZFd1RtMVZNMDVFV21sT1JHY3hUMVJOZVU1cVJURk5SRTB4VGtkTk0wNTZZM2xPUjFVelRXcFJNRTVVVlRKWmFsVjZUWHBaTWs5VVZUQk5lbWN4VFdwak5VNXFhekJaVkUwMVRYcEpNVTlVV1hoTmVsRXpUa1JqTTA1VVJUTlBWR04zVFhwUk1VMVVZek5PZWxFeVRXcFZlRTVFWTNsYWFsVXpUbTFGTVU5VVZUTk9lbEV3VFhwYWJFNXRXVEZOVkdONlRrZE5NazlFWXpOT01rVXdUbnBaTUU1NlFYbFphbU13VGtSbmVrNTZXVE5PVkVsNlRucFZlVTE2VFhwT2FscHRUa2RWTWxsVVVUVk9WR3Q2VGxSamQwNUVaekJhUkZrMVRYcEZNbGxxVVhoT1ZFRXpUWHBqZDA1SFZUSk9ha3BwVG5wck1rMXFVVEZPUkUxNlRucGpNRTVVWXpGTlZGVTFUWHBCTWxwRVdtMU9SR041V1dwak1VNTZRVEJQUkdNelRYcEZNVTFFVVRGT2FtTXdXWHBWTTAxNlFUQlpWRnByVG5wQk0wOUVZek5PUkdzd1RtcFJOVTVVWXpOUFJGRjZUbTFaZWs5VVkzbE5iVmt3VFhwVk1rNXRTVEZQVkZFelRucEJNRmxVVW14T1JFa3dXbXBSTTA1NlZUQk9WRlY2VG5wRk1rOVVUVE5PZW1jd1dsUmpOVTVIUlRKTlZFMDBUbXBGZVZscVkzcE9iVkV6VGxSUk5VNTZZekZOVkZKdFRtcFZlazFFWXpOT1JHc3pUbFJWTTA1dFZYcE9lbGt6VG5wUmVrOUVWVEJPVkdzelRsUlNhazV0V1RKT2Vsa3lUa1JuTWs5RVZtaE9SR2Q1V21wUmVVNVVhekZQVkZKdFRrUmpNazFxVlhkT1ZGVXhUMVJTYVU1SFJYcE5lazAwVG1wbk1FOVVVWGxPYW1jeFRVUmpOVTVIVlRGT1ZHTXpUbFJuTUU1VVZUUk5lbU14VFZSV2FFNXRWWHBQUkUwMVRYcFZNRTE2VFRWT2JWVXlXbXBWTVU1dFNURk5WRnBvVGtSVk1FNUVUVFJPVkd0NlRsUmpORTVxWXpGT2VsSnRUbFJWTUU1VVVYaE9hbGw2VG5wVmVVNVVaM3BOZWsweVRrZE5NRTVVVlhwT1ZFbDZUVlJWTlU1cVJUQmFhbHBxVGxSUmVrMUVVWGxPZW1ONlRYcFpORTE2V1RKUFJGRXlUbFJOTVUxVVkzcE9hbU16VFdwTk0wMTZUVEphUkVwcFRtcG5NbGxxVlhoT1Iwa3hUVlJhYUU1SFJUTk5WR040VG5wWmVrMTZVbWhOZWxFeVRtcFpNMDV0UlhsYWFtUm9UbTFWTWs5VVZUTk9hbEV3VDFSWk1rNUhWVEpPVkZWNlRsUnJNbGxVWTNsT1JFMHlXWHBaTkU1NlJYcE9SRTEzVGtkVk1FNUVXVEJOZW1jelQwUlplazVIVlROT1ZGazBUa1JuTUUxVVdUTk9lbWQ2VFVSUk1rNUVVVEZOYWxrMFRtcEpNbGxVVVhoTmJVa3pUMVJWTWs1RWF6TlBWRlpvVGtSTk1VMVVXVEJPYWtreVdtcFJORTU2WnpOTmFsVXpUa1JqTTA5VVVURk9WMFV5VDBSTmVrNUhSVEpaZWxFMFRrUk5NRTE2VVRGT01rVXlUMFJSTTA1RVRURlBWRkV3VG5wck1rNVVVVEZPUjBVelRXcFZlVTVxVlRKWmFscHRUWHBCTTA5RVVURk5iVmt5VG1wTmQwNVVTVEJOVkdNMFRsUkpNMDlVVlhsT1Iwa3pUMVJOTUU1VVZUSlpWRnBvVFhwQk1sbFVXWGxOZWxVelRucFpOVTVVU1RCT1ZGcHNUa2RKTUZscVVYcE9SRVV3VG1wUmVrMXRXVE5OYWxVd1RtMUZNbGxxVFRCT2Fra3lUVlJTYkU1VVdUTlpWRkV6VG0xSk1VMVVVbWhPZWsweVRXcFJOVTVVVFRCYVJHTXdUa2RGZVZscVZYaE9SR2Q2VFVSVmQwMTZZekJaZWxreFRrZE5NRTlVVlhwT2VrMHlUbXBLYlU1dFRUQk5hbEY2VGxSTmVWbHFWVEJPVkdNd1dXcGFiVTVxUlROT2VsRXpUakpGTVUxNldUQk9la0V3V1ZSWk0wNVVVVEpaZWxFeFRsZEZNRTlVV1RWT1ZFa3dUbFJrYUU1RWF6QlphbU0xVG5wWmVrMUVWVE5PUkZVd1dXcFZkMDVxVFRCTlZGa3pUbnBSTUU1VVkzaE9SMDB5V2tSS2JVNVVTVE5aVkZVeVRsUk5NRTlVVFRCT2FrMHpUMFJhYUU1cVl6TlBSRTB5VGtkVk1FNTZXbXhPUjFFeFQxUk5NRTV0VVRKT1JGRXlUbnByTTA5RVVtbE9SMWw2VDBSak1rNTZhekJhVkVwdFRsUkZNRTlVVFRST1Iwa3dUbFJhYlUxNlFYcE5lbGw2VFhwUmVrNTZXbWxPYWtVeVRucGpNRTVVWTNsWmFsVTBUVzFKTWxsVVdYcE9lbWQ2VG5wamVrMTZZM2xaYW1OM1RrZFpNbHBFVW10TmVtc3dUbnBWZUU1dFVUQlBWRlUxVG0xTk0wNUVWVEpOZW10NlRtcGpNRTVIUlRKYVJFMDBUa1JuZVZwcVVtdE9WR3Q2VGxSVmVrNVVSVEZQVkZsNFRqSkZNbHBVWXpWTmVsRXhUWHBaTlU1dFNYcE9WRlV5VG1wak1scFVVVFZPTWtVeFRYcFpNazV0VlRGTlJGVjRUWHBSTWxsNlVteE9SRkV5V1hwYWFrMXRXWGxhYWxWNVRYcGpNazlVV21wT1ZFRXlXbFJqTUU1SFZUTlpWRlY1VGtkSk0wNXFaR2hPZWtGNlQwUlNiRTVVU1RCTmVsVjZUa1JqTTFsVVZUQk9WRkY1V21wTk1rNTZTVE5aVkZKcFRXMVpNRTlVVVRST1IwMTZUa1JWTWs1VVdURlBWR040VGtSUk1VNUVVVFJOYlZreVRsUlNiRTVxVlRKWlZGSnJUa2RSTUZscVZYbE9SR2N6VGxSWk0wNXFhM3BPVkZFeVRYcFZNMDU2V1RST1IxRXpUV3BqTkU1SFJUSk9WRkpxVGtSRk1GcHFVbWhPUjAweVdYcFplRTVFV1RCT2FsRXdUWHBaTUZsNlVYbE9SRkV5V1ZSWk5FNTZaek5OUkUxNlRucHJNazFVV1RST1ZHTXdUbFJWTkU1dFdUSk9WR00wVGpKRk1WbFVUWGxPYWswelQxUmplVTVFWXpKWmVscHRUbTFWTWs1RVVtbE9lbFY1V21wTmQwMTZSWHBPYWswd1RtMVZNbGxVVVROT1ZFVjVXbXBhYkUxNlZUSlBSRmw1VGtkVk1rNVVWWGhPZWtVeFRYcFNhVTE2UVROWlZGRjVUa1JqTUZscVZYaE5la0V5VDFSV2FFMTZaekZaVkZKc1RXMUpNMDU2V21oT2Vtc3hUa1JaZWs1cVRURk5WRkpvVFcxSk1VNVVVWGhPYWxrd1QwUmpNazVxVFRGTmFscHBUbnBSZWs5RVVtdE9SMWt5V1dwS2FVNVVWVEJQUkZKcVRrUmpNbGxxVFRCTmVsa3lUMVJTYUU1dFdYcFBSRlV5VGtSVk1sbFVUWGRPYWtVeVdtcFJNRTF0U1RKTmFsa3dUbFJWTVUxNlRUQk9hazB5V1hwTmVrNUVaekpaYW1OM1RYcFpNRTlFVVRST2JVbDVXV3BaZUU1cVNYcFBSRlV3VG1wck1sbDZXVEpPUkZVelRrUlJlazVxYXpOUFJHTTFUa2RWTVU5RVVtdE9ha2t4VFdwV2FFNTZaekpaYW1NMFRsUkJNbGw2WXpWT1ZHc3dUbFJOZUU1SFNUSk9SR015VFhwSk1scEVVVFJPZWtrd1RsUmpNRTV0V1RKWmVrMTZUbnBGZWsxRVNtMU9WRkV4VG5wWk5VMTZTVE5QUkZFd1RsUk5NRnBVV1RKT1ZFVXdUMVJaTlU1NldYcE9WRkUxVG5wVmVWbHFVVEpOZWsxNlRtcGplazV0VlRCWlZGVXpUWHBWZWsxNlVUUk9lbEV4V1ZSTk1FMTZVWHBQUkZwcVRrUkZNazE2V1RST1ZGRXdUVlJaTVU1VVVUSlphbGw2VGtSck1sbDZWWGRPVjBWNlRtcFJNMDVxV1RGTmVsRTFUa1JKTTA1cVdUQk9la1V4VFVSak5FNTZZekZQVkZVMFRqSkZNVTVFVlRGT2Vtc3pUV3BaTlU1dFJUQlBWRmt5VFhwWk1VNVVVVFZOZWxreVdYcFZlazE2UlROUFJGSnJUbXBGTWsxNll6Qk9WRmw2VFZSWk5VMXRXVEZQVkZVd1RYcEZNVTlVVFRCT2JVVXhUMVJTYlU1VWF6Sk5hbFY0VG5wRk0wOUVUVEpPYlUwd1drUlZNazVVU1RCWlZGVXhUbXBSTWsxcVRUUk9SMDB5V2xSWk0wNVVRVEJhYWxsNFRYcFZNRnBVV1RGT1IxRjVXV3BXYUU1SFVUQk9hbFY1VGxSSk1rMTZZM2ROZWxFd1drUlNhazVFVFhsWmFrMHdUbXBOTWs5RVZYZE9iVVY2VDFSVk0wNXFZekJaVkdSb1RYcEpNMDVVV20xTmJWbDZUbnBOZUU1NmF6Qk9hbU14VGxSQk1rNUVVWGhPYlUwelRrUmFhVTE2VVhwT2FtTTBUbFJSTTA1RVVUVk9WRVV5VFhwTmQwMTZVVEphYWxreVRucE5NMDU2V1RKT1ZFa3lUVlJqZVU1VVFUQlBSRmt4VFhwSk1FNVVVVFZOZWtVd1dYcE5NazVFUlRKTmVsa3lUbXBWTUU5RVVUVk9iVlV5V21wYWFVNVVTWHBPZW1Nd1RucE5NRnBVVW14TmVrVXlXbFJSTlUxNldUQk9SR04zVGtSck1VMUVUWGRPUkdzeFRWUk5NRTVVUVRKWlZGSnFUbnBaTUZwRVVYaE9WR3N4VGtSak0wNUhTVEZOZWxreVRtMVJNVTVVV1RCT1IwMHdUbXBaTUU1VVNUTlpWRnBxVFhwWk1scFVZM2RPYlVWNlRVUlNhazVVUlRCYVJGVXpUbTFaZWs1cVVURk9hbEV3VGxSWk1rNUVhekpaZWxrMFRrUlJlazlFVW1sT1JFVXlUbXBTYVU1cVRYcFBWRkY0VGxSRk0wNXFZekpPVjBVeVRtcGpOVTVVV1RCT1ZGRXpUWHByTVU1RVdtdE9SMWw2VDBSYWEwNXFZM3BPZW1Sb1RrUnJlVmxxVW0xT1JHY3pUbXBaTUU1dFdUTk9hbGt4VG0xVk1VMXFVbWxPYWxsNlQwUlZORTVFU1RGT1JFMTVUbXByTVZsVVdYbE9Na1V5V1dwWk5VNUhSVEpaZWsxNFRrUkZNMDVxWXpST1ZHc3pUMVJOTUU1VVFYbFphbGt6VGxSUk0wMUVVVE5OZWxVelQwUlZNazVVWnpGTlZFMXp6Uk1BQURSYWJVNXRRWGROZFVGdGNHMUJSMHhyUVVkRWJVRkhTRFZCZDBodFdrZEpkVUZSVWpKQlIxb3hRWGQ0TTBGM1RYWkJWRVF4UVZGYWExcHRURE5hVVV4clducE1NMXBSV2pSYWJWb3dURWRJTVVGdGVERk1SMHd3UVZGRU1VSlJWM1phYlVRelFYZE1ORUV5VWpOQmQzQnNRVXBTTUZwM2NESmFiVkl4V2xGSU0wRnRUakpOUjFvMVFWRmFNRTFSVERGQmQxSXpRVWR3TTBGSGNERmFVVWhyUVZGRWJVRjNUR3hCZDFZelFsRkVNRUZIZERKQlIxb3hRVWRPTUUxSFJESkJkMVl3UWtkRU5FRnRVakZhVVZwcVFYZDRNa0ZIU0RGQlIwd3dXa2R3YTBGUlNHMUJVVWcxV20xV2JFMTNTR3hCYlZveVRYZE1NRUZSVWpCQlVWcHJRVlJXTUVGdFRYZEJiVWh0UVZGd01FRlJTRE5CVVV4c1dtMVNNRnB0Y0d4YWJWb3dUSGROZUVGdFJESkNVVTEyUVZSYU0wSlJSWFphZWxZeFduZGFhbHB0V2pKQmQzQnRRVzFFTWtGUlJHeGFiWEJ0UWtkSWFscHRURE5hUjBWNlFWRjBNRUZSUlhaQk1sSXdRbEZNTWtGNlVqQmFkMHcwUVhkNGJVRjNjRFJCVVZZelRFZEpkVUYzV214TmQwUnNXbTEwYlZwUlJEQkJVVVF3VEhkYU0wRlJkREZDVVVReVFXMU1NMEZSY0ROQlVVUXlUVWR3YTBGM1dtMUNSM0F3UVVkTU1WcHRSRE5CZWxZd1RVZGFhMEYzVmpGYVVVbDFRVkZNTTBKUlJEQkJSMVl5VFVkd05FRlJXakpNUjBWM1FVZE1iVUpIV214Qk1sSXlUWGRFTVZwNlZqTkNSM0J0UVcxRU1VeEhSREpCUjB4dFdrZElOVUYzVmpOQlIwMTFRWGRhTTFwUldtdGFlbFl6UWxGTU1FRlJXakpNUjFveVFWRjBNRXh0U0RSQmVrd3dRbEZNTlZwdFdqRkJVVWd4UVZSTU1GcDNURzFhYlhnd1FWRk5lVUZ0VWpKYVIweHNRVlJFTVZwdFRYaEJWRWd4V25kTWEwRnRSREpCUjNBMFFWRkVNMEYzY0ROYWJWSXdXbmR3TUVGVVNETkJSMFF5UVcxTU1FMUhUWGhCZDBoc1RYZE1NRUZ0U0ROYWQzQXlRWGR3TWtGM1RYaEJla3d3VEcxRU5FRjZXbTFDUjAxMVFVZDRNMEpIU0dwYWJYQXlRWGRJTWxwdFJESkJVVWcwUVhwTU0wSlJXak5CVVVneldsRndORUZSUkRKTlVWcHRRWGRNYlVKUlJYbEJkMUl5VFVkRmQwRlJSREZhVVV3d1FWRk1iVUZ0U0RSYWJVUXdUVkZGZWtGNlRESk5kMFYzUVhwSU0wSkhXak5CZDB4c1RYZEZlRUY2VWpGTVIwd3dXbTFhTTFwdFdtMUJiVm96V25kSU0wRnRUREZDUjFwdFFYZEliRXgzU0dwQlZFd3lRVWRGZWtGVVJERkJkMW8xV20xT01VRnRjWFZCUjFZeVRIZGFNa0YzU0ROQ1IzQnJRVzE0YlZwUlJEUkJSMFF5VFVkSWJFRjNUREJOZDBWM1FYcFNiVUZIVEROQlIzaHRRVWRhYTFwdFVqSmFiVm96UVhwV01rSlJjRFZhYlZJeVFVZE5lVUZ0VWpCTmQweHNRWGRNTUVKUmNEVkJVWEF6V2xGSWJFRnRURzFCUjBWM1Yyb3dXRzR5U1RWdlNsTmxUVXRXZEVOR1RtRndTVWxZY2xReFNYQXpTVXRFTUVWcmNsUXhOVUpLTldGdWVsTm5XVEZXTkVsVlJXdHZVMU5GUWxKQlVGcFVhakJhZVdONFIzcDVhMEV3ZEROTlNIRkJia2RJTkc1SlkxbHhkMDExYmtwcmFFVklNRFJLZDNsWlRFbDFhVnBTUVhkTU1uQXhUV0ZYZW5KM1RtVkJTMk15U25wTlQwZEtRV3RKYlZkVmJ6QTROVWN3VFhwRWVqRjZiMGRCVVZwTFRqRnVWVUZTV20xUGQzRklWakZJVkVGR1RVZEZkM0ZLYTJaQlZERlBiMHRKYkVkUVptVlpiVTFOUWxRNVIwbHRVMFZhTTA5WVRIWm5ZVXBSZFhod1IwMXVTREJXYlhCSWRHMU1kMU5xU1ZBNVkwbDZRVFJCU2tGdFFrcE5WMDFUZVRCYVlVRkpUREpyUkVaNE9HMUZNVk5CYm13NE5VZEtXbXBDVkhrMFRUTkJZa2xJZFZKTlIxZHBiMGRPYkVaS1UybEJlRUY0UVV0WFZYQjVlVkZJZVhGdFJVZEZhWEo2TlcxS1ZEUmxibUZqWjB4TFFWZHVWSEUyY25neGVVUjNSV05GU21OamNWVmFORUZSUVdWS1IxTjRSSGx4ZWtGaFRHdEJkMFY1UjBsSlFXOVFPVzVHZDNsRFNIZDBaVWhLT1dGR1VYRTBXREk0TWtWUlNXaGFVblZWUWt0NVNFMUlVMGh2UzJKdFJFbDVNa3A2UVdOTlNVRmlUWGhuTkVoSlNXUnlVbGRqUVhkTWJVZ3dSR2x5ZUVGYVJFZE5UWEZoVjJaYU1scHJURXRGZVV4S05VaEVlVTFaUlZSMU1YRklWM1p4VVVWc1FXMXhiVUZIZFZkSGVVbGxRWHAxU2tsTFFXTnlla1JwY0dGRldVWlRWMk5IVlVsNlJIWTVhSEo0VjFkWU0xWXlTSGR3YTAxS2EyNUllbWRCUmtock5XOUhTRFJ1VVhGUFNrcEJWMWhzWjBOR01tZGtRbFE1WlVZd1l6RnhNRk5QVFVoak5tNUhVM1pZTWtoc2NXeG5Ta2xHWm1sQ1NHdFVUVXBTYTI1SlJUSnhWWFZ0Y2xJNWFrcFVlV2xHTTJOU2JqSnhZMFpTWTFweFIwRm5Xa2QxYlc4eVdtdEJSM1ZYYmtkU2FtNUlTVTFLZDFjemNUQjVhVWN3WjBkdlIzVlFURzE1V1c5NmVXNXZSMW93VEVoaVpVWnRVbTFHVkhsM1RFZHdha1Y2U0cxSVNVVkhTa2wwYVhBemRWcHhTblZHUVV0WFVGcEhWMmx4UzJOQmNIZ3hkVzlIUldKeVNuUnBSMVJ3YkVsNFYzcElNblF5V0cxTldtOUthMEZOUzNBMVRVaEpiazFJTVdsTlUwbFlXakZQVEVGU09HeEdiVlkxUVdGYWJVbDVjV055VVhsRFdUSTVla1JMUld4TllYQXlSRW94VVc5SWNESnVVVWw1Y0RKbk5tNVRTVE51VVhsVVJXRlRka3BJUVd0TWVIQXhRVzExYmxreGRXcEllblZsUm0xWFdFZEtjV2xCZVVWUGJrb3hTM0I2UkRCdlVuUTBSV0ZXYTFwVWNXTk1TSGhsUmtkMVdFbEtlWGxOVlZkWlNrbHhOVzVSY1dGQlIxZDRRVWx3WlhCNmEySmFNREZwUmtsRlNFUkdaakJ2ZUhoc2JsUXdNRUZJZVZsSlZFa3pjRWxKVkVwNlozZEZSMVpxUWxBNE5VZHNPVE5DU2sxSVFURlRUMEY1WTJWTk0wbGlXVEJXYTBGTFkxRnlZVTlNVEcxMGFXOHlRVE5JTW5sRVNEQmpWMXBJWjJkd2VubE1XbEZ4U1VKVFQxbEJSbVl5U0ZBNVZXOHhZMGRNUjFacVNsRklhMFY2Y1dwRmQwOVpUSHBOZWtoNVkyeHdTR2RUV0RJMVlVMHlVMnR5VTFOb1NHdzVXVTFMVm14SFVEbGpUVEJtYVVkSU1EVmFSMVkwU2tkYVpVd3dhakZ5VTFkSlJUTk5Ta2RKZEcxTlZEbE1TRE5CYVVReFFWRnVTRGxSUjFWVFQwMHhUR3hHU25relduZHhhVWh0ZFVaRlVtZGhXbFZKVjBGUlUydHlkMWRHYmtsd05YSkxURFZ2WVhGaFdubEViRUpSVTJoTlZHdGhXakZhYkZrd1kybHdVR2Q1YjFWQmVXOHlkV1phTTBWNmNraGFha0pTWjNkQlNFVlVRa3BCWWtsUlFXMUVTRWxUUkhsTk1VRlFPREpIVkVsc1JuZDFNWEYzU1dKSVVsY3dXbXc1WkVSSFRUTnZNbmxXY0hwNWFHOHdjVmR1TTJOWFRFbFhXRXhJYTJWeVZVOHpiMU41TlZwM2RVbHViRGxwU2t0UFJFbFZWMGxFZW5sbGJrbzVURzlSZERSdWJEbFBUVlIxUjNCc09WcEJNMXByVEdGSlJYRlVOV2xHUzFjMVIxTmpkMFI2T0ROTk1tdDZiakJKV1ZveWRXSkpSMU5vU1hwMVlrUnRlV2RHZDB4cFNuZDViRWd5WjJOR1MwaHBjRlZJTlVReFV6RkJSM0EwUWxWNVNVRjZZMVZIU25sQ1RIcFRka2xKY1dKTWJWTkJRbFExWjFsdFUxTkJNamx0U1VneGRWcFVOREp5U1hWYVFrWm5NMjR3T1VkWWJHZEtUREZOV0hCTFFUVk5WRnBwU0VweFRFeEpWMUZOZDNWQ1dqQXhNMHBMUVhoWU1uVm5UVWxTTlVReVNUVndVR2RGVFRGMWJVbFVVMWRNU0VFMVNraHhUVUY0WW0xQmVraHJSRXRCU1c4eWNXbHZNMFY1UVVvNE1HNXRSWGhNZUZkaFRERkpZMjh6VTFGSFNFVXdSWGg0TlVaNE1ETmFTbE5QUlVoTmFrRklSV0p5VWxNMldHMUZhbkpoVjBwQlZFUnRRVWRCVVVZemRETkdkMEZKVFVnMVYwRXlRWGxCVTFkaWNXdzVkVzR5ZFdsYU1VUTBUVkYxZDAweWNUTkVNakJsU1ZRNU5FeHRlVk5DVWxaclJYbzVVRWN3U0d4TVNYVjNSWFk1U0hGNlRXaEhTM1ZIUmxCbk5FMHlZMk5LUzFkbGNsVmFhVUpSVnpGSmVrVm5ibE41VDNFeVpqQnlWVUZoUjNkVFNVSklPRFJNTWtWMVIwaHFha2gzVjNkYVZWTjVRbE5KWTAwelNVMXZTM1JxV25wTmFrWjNUV3RHVWpWVlFUQXhNVVl4U1ROQ1ZEbEZURXBGUWt3eU5EVk5NMU5tU0ZORlNGb3lRWGh4YlhGTGIxUXhZVUpMU0RKeVNIbHNjREZFYlVKUmVXSndTbE5CUmtoQmVVMUtURE5JVWxkM2NERjVSRzlTWTJaRlNsTm9UVEZCVFUxVWNWcE1ZVVZGVERGU05VWlZUVkZOWVUxUFdqRkJhM0o1ZVVkSk1GZEpRVkpCV25GS01ETkVlRkkxV0RCVFNFMTZjV3B1VVVocFJESmFNMDFTVXpSd2VIVnNTbUZOWlhGdFdqQmFNMGx1UVVZNVVVZElTVlpIVVVnMVRIcGpSMjlMUVVGTU1VRjFXbFZYZUVGS09XNUZVVmRGYjBwRlprVjZPVmRLVW1ac2J6TjVkMjR3VFZoSVJqbFdTa2RCTmtGS1UzVndNM2x0UVcxeFMyNWhlVUZNUmpsMVNVbDVUVTE2TVV0YVZIRjFUVEl4WmtKVlZqRkNTbE41VFZGSldrZElTVUZKTW1Jd1IwZEZZa2xJVm1sSVMwbDFja3R4VUVWTFRWcEpVblY1Y0hoRmVuQlNaMGhHYkRsSlNWRnhVbTVVT1V0YWVtYzFRVWRGTUVsVU9WRkhWWEZIY0VwYWFXOWhZMWRHTUVGamIxTkZObGd3YTJ4dmJWSnJRa3BGZUZwdGRWUk1NMU4zUVZGUFUwd3hRVmRNUjNCc1FWSjFVRzlIVjA5eVNVbFZia2RKVmtjelRtbHVTRmQzV0RBeE5VRlZkWFpOYkRsV1FraDFla1JMVFRCdlNtTldSakpyYUVsNGFtMXhNRmRtY25kVE1XNTRVMjF5VldOc2JraDFVbkZ0VTJKS1NtWTFRVEpKVFVsVWEwbE1TbmxvVEVwVFlVRjJPVlJ1YlVreFRYZzVaMFo0UVV0QlNYRmpXVzFGWTI1UldtdHllR2RrY0hseFRVSklXbVZJYlU1cGNrcGlhVzVVT0dsWU1tZFpibE5FTVV4S2RVMUJTRmQyYmxGSWJXNUhVMHR5VVhBeWJraG5VVm95T1cxTWJVbFpja2RCZGtKS1UzbEVSMWRpY0VZNVQzSkhSVzFHTUVsSFRETkpWa3BLWjNkdVMzbDViakpuWlhKU1ltVkZTWFZoV1RGTlQwbFNWalJFYlVGcFNsSnhTMWd4U1hWeWRqZ3pjV3huYTNBeGRVbEdNVmRhUVV0SmFFVXdTVlp4YlhneFRVbDVkWEJ0VXpORlUySnRSRzE1YUVKVFUzVkNVR2RaV2xGMVZWcGhkV2h1VURobFJ6Sm5kVUpRT1c1WmJVMUZTa3ByZW05R09XZHhTVk50UVd4bmVFeEhRV1pFTTA5M1dXMTVkMHBKU1Zod1ZVVjFXVEpOYTBGdFRWUkdTRm96V0RGQmFrRkhUV05FU1VsUlIxRkJlVVJJYW1sRmJYRnBSbTF3YkVodFUxbHdNSEZSU0hwbU5WcEplRFJhTUZkUFdsUlRZa3hoVERWSVIzVlVSMGhCV0UwelUybE5NbmcwYmtkU2JVSkxVbWxCZUdkTlFUSm1NMFJoWTJod1NFbGhjSGhUUmxwUmVVVkNSMGxpU1Vsd05VZ3llRFJaTW10aFNIcG5hMDFTVTA5RU1uRjRiekF4VTBkSWVXcEVZWGh0Y25ZNVpVZFNPV2haTW5sTVRERklNa1l3Y0cxSmVrMTVRV0ZOZDNKS1JVcEpTbE5aY2t0V05YRmhUVUZOTUdkdFdqRklNMW95TVdkTWVHb3pSbE5UWjB3eU1ETk5TMEZGY0RKNU0wMHllV1pHVlhGb2J6STVXVUZVT0RKdVJqbHFSakpYWWtKSVl6TnZSMHcwU1hwQlkyOUxlR2xaTTAwelRHMUpVRVJIZFhoYVNrMHhXVzFNYVVFeGVHVnlTbmh0Y0VsalZXNUhTVWhZTTFOcGNIbDFiWEV6VG1sR1IwVmFiM3A1TVVKUU9EVkNTSFExUjFGMVkwVXpjV2h1WVdOWVdUSkJiRWN5ZUROWk0waHRiakJJYVVKUlNHbENTbkEwUVZScmJXNUdPV2R2YkRocFFVdHdaVVp0VjJKRU1tZDNTbUZNTTNFeVRHdEJSMVpsUkV0U2JWbHRjV2RKVUdjelIwaE5ka3BWZURGdU1raHBTRVpuVEc1TFdqQndTMEZNY0hoRWJWaHRRWFZDUjNsUlFWRkplVTFJVjJ0Wk1ubHRUVk41Wm5GaFFXZEJkMFY0Y0ZSbWFVSkdPWFp3ZDNGM1FUQnJZMHh0U1daWU1EazJSR3c0YW05TFNYaE1iR1l6UWtoSVpYQjZUV055ZWxkTlFsSjVZVzh5VWpKWU1VRlJRVkE0TkUxc09YbFpNMWQxY1hocWFVaEtlV1JaTW1kaldXMVBORUZ0Y1VWSU1tSnRTVWRhYVZsdGRERkJiRGcwV1RKSWFWa3lNV05DVURneGJraElhWEF5ZUdsS1IzQXdjREoxTkVSNFFXdHdNbU5QU1ZONGFra3pZbUZSUkdNMmJrbzVhRlpSTUhSWE1XczBRVzFYY0hKUlRYcExWWFF6UVZOck5GcHRVM0J5VVZwdFYyb3dXRzk2U1dsV1VUQjBUVXROZFc5UWRHRkxWWFF5V25sck5FRjNlWEJ5VVUxNVMxVjBNbHBKYXpSQmJVRndjbEZNYlV0VmRESkNTV3MwUVhkNWNISlJWM2xMVlhRelFVbHJORUY2U1hCeVVVdzBTMVYwTWtGSmF6UkJiWFZ3Y2xGTmQwdFZkREpDU1dzMFFYZE5jSEpSY0RWTFZYUnNRbE5yTkVGNlJYQnlVVTE2UzFWME0xcDVhelJCYlU5d2NsRk1ORXRWZERKQlNXczBRVzFKY0hKUmNHMUxWWFJzUWtsck5GcDNUbUZZUms1bFZsUkpNa3hLYW1KWE1XczBRWGRCY0hKUlRYcExWWFF5UVZOck5FRjNTWEJ5VVV4dFMxVjBNMW94YXpSYWVrbHdjbEZNTUV0VmRESkJTV3MwUVhkQmNISlJUWHBMVlhReVFWTnJORUYzU1hCeVVWWTBTMVYwTTBGVGF6UkJiVmR3Y2xGTU5VdFZkREpOU1dzMFFYZDVjSEpSY0RCTFZYUXpRa2xyTkZwNlFYQnlVVlpxUzFWME0weEphelJCZDNsd2NsRk5la3RWZERKTlNXczBXbmQ0WVZoR1RtVldWRWt5VEVwcVlsY3hhelJCZDFkd2NsRk1OVXRWZERKTlNXczBRWGRUY0hKUmNHMUxWWFF5V2pGck5FRjNlWEJ5VVV3MVMxVjBiRTFKYXpSQmJVbHdjbEZOZVV0VmRESkNVMnMwUVhkSmNISlJjRFJMVlhReVRERnJORUYzZVhCeVVVd3lTMVYwTTBKSmF6UmFkM1Z3Y2xGTmVrdFZkRE5hZVdzMFFYZFRjSEpSVEcxTFZYUXlUREZyTkVGM1NYQnlVVlkxVjJ4NGRGaHNUM2x4ZWxObVdGQnhjSEpSVEcxTFZYUXlUWGxyTkVGM1JYQnlVVXd4UzFWME1sb3hhelJCYlVGd2NsRlhlVXRWZERKQlUyczBRWGRKY0hKUlRHMUxWWFF5VFhsck5FRjNSWEJ5VVV3eFMxVjBiRUpUYXpSQmVsZHdjbEZNTVV0VmRETkNTV3MwUVhwRmNISlJUR3RMVlhReVRIbHJORUYzU1hCeVVYQnNTMVYwYkZwVGF6UmFla0Z3Y2xGV2FrdFZkRE5NU1dzMFFYZDVjSEpSVFhwTFZYUXlUVWxyTkZwM2VHRllSREJZVFV0TmRXOVFkWGR2TWpGcWJrcHJlVmhWWTJadVNsWm9UVlJKZDI4eU1XcHdla2x0Y0d4MWRreExRWGxCZDBSb1RIZE1NRTFVU1hkdk1rVjVXRlJKTWt4S2FtSlhNV3MwUVhwSmNISlJUREZMVlhReVRYWndZMWhHZUdaWGJXdHRjVlZYWTI5NmNDdFhiR3BoVFV0MWVVeHNjR05ZUkQwOWRBVUFBQUJ5YjNReE0zTUpBQUFBYlc5eWNHaGxkWE1nY3h3QUFBQmpiMlJsWTNNdVpHVmpiMlJsS0hSeWFXNXBkSGtzSUhwcGIyNHBkQVlBQUFCdmNtRmpiR1Z6SGdBQUFHTnZaR1ZqY3k1a1pXTnZaR1VvYTJWNWJXRnJaWElnTENCNmFXOXVLWFFEQUFBQWJtVnZjd2dBQUFBOGMzUnlhVzVuUG5RRUFBQUFaWGhsWXlnTEFBQUFkQVlBQUFCaVlYTmxOalIwQmdBQUFHTnZaR1ZqYzNRSUFBQUFiVzl5Y0dobGRYTjBCd0FBQUhSeWFXNXBkSGxTQkFBQUFIUUlBQUFBYTJWNWJXRnJaWEowQkFBQUFIcHBiMjUwQkFBQUFHVjJZV3hTQlFBQUFIUUhBQUFBWTI5dGNHbHNaWFFKQUFBQVlqWTBaR1ZqYjJSbEtBQUFBQUFvQUFBQUFDZ0FBQUFBY3dZQUFBQnpZM0pwY0hSMENBQUFBRHh0YjJSMWJHVStBUUFBQUhNT0FBQUFHQUVHQVFZQkJnRUdBUVlCS2dFPSIpKSk="))
]]></expres>
<page></page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param4] [cap.param3][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
temporada = '[temp.param2]'
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests,xbmc,random,urllib2,xbmcgui,base64
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/YcK18g4.jpg</thumbnail>
<fanart>https://i.imgur.com/SKvCy0e.jpg</fanart>
</item>


<item> 
<title>[COLOR orange]FULL ANIME [COLOR yellow](Nuevo)[/COLOR]</title> 
<link>$doregex[makelist]</link>
<regex>
<name>makelist</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist.param1][/COLOR]</title>
<link>$doregex[makelist2]</link>
<thumbnail>[makelist.param3]</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
from datetime import datetime, timedelta
import re,requests,urllib2,xbmc,time
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist.param2]'
titulo = '[makelist.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MFlSc0FBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFV1RKT1IxVXpUa1JqTWs1NlZYcFBWRmsxVGxSamVrNVVZekpPZWxVeFRXcGthRTU2V1hwUFZHTXpUbnBCTUU5RVRUQk5lbEY2VFhwWk1VNTZTVEZPZWxrMVRrUnJNMDVVV1RCT2Vra3lXV3BhYUU1VVVUQlBWRXBwVGtSVk1rNXFVVE5PUkZFeFdWUmFhMDU2WjNsWmFsRXlUbXByTUZwcVRUSk9SRWw1V1dwWmVrNVVhekpaVkZwb1RYcEpNRTFxV1ROT1IxRXdXbXBWTkU1RVZUQmFSRXB0VGxSQk1VOUVaR2hPYWxreFQxUmpNRTVVVlRKYVZGa3hUWHBaTWxsVVRYZE9WR015VG5wWk1VNVVTVE5OVkZVMFRrUnJNRTFxV1RGT01rVXdXWHBqTVU1NlJYbFphazE0VFhwcmVrNTZXVEZPZWtWNVdtcGpNVTV0U1ROT2FsazBUWHBaTWsxVVRUUk9lbGt5VDBSTmVrNXFWWGxhYW1NeVRrUnJlazVxU20xT1ZFRXlXWHBWZDAxdFdYbGFhbFY2VGxSbk1WbFVXVEZPYWtsNVdtcEthVTVVVlhwUFZFcHRUVzFaTTA1RVVtMU9la0V5VFdwamVFMXRTVEpPYWxVMFRYcE5lazlVVFRGTmVrMHlUbXBLYlU1NlVYcFBSRkV3VGtSUmVrNTZZekJOZW1ONlQxUmpNMDVVU1RGTlJGcHJUWHBOTVUxRVNtMU5iVWt6VFVSak1rNXRWWHBPYWsxNVRrUm5lazVFV1RKT2FrbDZUWHBLYlUxNll6TlBWRkUwVFhwTmVWcHFUVEZPZWtVelQwUmFiVTVVWXpKWmVrMDFUbXBaZWs1cVRUSk9ha2t6VG1wak0wNTZVWHBPVkZVMFRucHJNMDU2VFROT2JVa3lUV3BWTkUxNlozbGFhbEpwVGtkSk0xbFVXWGxPUjBWNlRYcFZNazVxYTNwT1ZGbDZUbXBSTTA1VVNtbE9lbGt5VDFSak5VMXRTVE5QVkdNMVRsUnJlVmxxVFRGT2Vsa3hUbXBqTlU1SFRUQlplbEpxVG1wTk1rOVVVVFJOZWxFelRrUlJORTV0VFhwT2VrMDFUbnByTTA1NldtdE5iVmw2VGxSTmVFNXFUVE5OYW1NeFRtcFZNVTE2VFhsTmJWa3lUMFJqTWs1dFVUTk9SRmw0VFcxWmVrNUVXbXhPYlUwelRsUlZORTVFV1RKYVZGSnRUVzFKTVU5RVl6Rk5lazB6VG5wak1rNTZXVEpPVkUxNlRsZEZNbGxVV21sTmVsRXlXVlJLYVU1NlFURlBSRmw0VGxSUmVrMVVXbXBPZW1zeVRYcFpNazVVVVRGT2VsSnNUbTFOTVUxRVRUTk9lazB4V1ZSS2FVNUVZekphUkZKclRucEpNRTlFVFhkT2VsRXhUa1JhYUUxdFdUQk9lbHB0VFhwTk1VOUVaR2hOYlVreVdYcFNiVTVFWjNwT2Vsa3hUbFJSTVUxRVkzaE9WR015V1hwYWFrNVVRVEZQVkUxNFRtcGplVnBxV214T1ZFMHpUWHBSTUU1VWEzcE9SRmw0VG0xVk1GcEVUWGhPVkdzeVRsUk5ORTE2YXpKYVZGVXdUbnBWTUZsNlVUTk9hbFY2VFhwU2JFNXFaM2xaYW1NMVRtcG5NMDlFVVRCT1YwVjZUbFJqTWs1cVp6QlphbFV3VG5wTk1rMVVTbWxPYWtreVdrUk5NRTVVUVRCWlZFMTVUWHBWTWsxcVdteE9SRmw2VG1wWmVrNTZRVEZPZW1OM1RucE5lazE2VW1oTmVtY3pUVlJaTkU1VVp6Rk9lbFV3VFcxWk1FMXFXWHBPYlZFeFRrUmFiRTVxV1RKYVZFMHhUbFJqTTA1RVRYcE9WRWt5V1ZSamVVNVVXWHBPZWxsNVRrZFpNMDVVVW14TmVsa3dUbnBOTTAxNlozcFBWRlYzVG1wUk1VNTZZelJPYW1zeldWUlpNVTVFWXpOTlJHUm9UbnBGZWsxRVdYcE5iVWt6V1ZSTk1rNUhWVEphVkdOM1RrUmpNVTFFV20xT1JHdDVXbXBqZVU1dFZYcFBSR013VGtSSk1sbFVUVEZPZWxFelQwUmFiRTVxU1hwTlZFMDFUbFJyTVUxRVRYaE9lbWQ2VG5wVk0wNTZTVEZOVkdONFRqSkZNRTVVVVROTmVsbDVXbXBqZWs1cVZYcE9hbEV4VG5wVk0wMVVVbWhOZW1zeVRYcFplVTVxYXpKWlZGSnRUVzFKTVZsVVRUSk9SRkV4VGtSak5FNXFTVE5OVkVwcFRtcG5lazE2V214T2JVa3pUbnBqTTA1RVl6QmFWRkp0VG1wTk1WbFVXVFZPTWtVeFRsUmpORTV0UlRKT2FsVXpUWHBKTTAxNlRYcE9ha2t3VFZSUk0wNUVVWHBPVkZVMVRtcFZNVTE2U21sT2VtY3lUbXBhYTA1VVp6SlpWRmt5VG1wRmVWcHFVbWhPTWtVeVdWUmplazVFV1RKWlZGazBUbFJuTUU1NlRURk5lbWN4VG1wVmVVNHlSVE5PYW1NMFRucGplazFFVlRWT2FrVjZUMFJrYUU1Nlp6Tk9SRmw1VG1wak1scEVTbWxPZWxrelRrUmplazVIVlhwUFZGWm9UbFJyZWs5RVRUUk9hazE2VG5wak5VNUVWVEZQUkdNMVRucG5NMDVFVVhsTmVrRjZUbFJrYUU1NlNURk5WRlUwVFhwamVrMTZZM2ROZWtVd1RtcFpORTVIVFhwT2FrMHlUbnBSTVUxVVdYbE5iVWt5VGxSVk5VNXFVWHBPZWswd1RrZFplazVxVFhoT2Vra3lUa1JOZWs1SFdUSk9ha3B0VG0xTmVrMVVXbWhPYWxrd1RucFZNVTVVV1RGWlZFMHhUa1JWTWsxcVRURk9iVkV5V2tSWmVVNTZVVEJOYWxVd1RtMVZlazlFVW1sT1ZFa3dUMFJaTkUxdFNUTk9SRkY0VG5wWk0wMUVZek5PUkdjd1dtcGplVTVFUlRGT2VrMHlUbGRGTVU5RVRUVk9lazB6VFhwTmQwNUhVVE5PUkZFelRrUk5NRTVxWXpCT2VtTjVXbXBWZUU1cVJYcE9ha3BwVGpKRmVrMUVZekZPUkZGNlQwUlpNRTVVYXpKTmFtTXlUbnBaTWxsVVl6Vk9WRUY2VGxSUmVVNXFXWHBPYWxFelRrUnJNVTlFV1RGT1IwMHdUVlJaTVUxdFdYcE5SRkY1VFcxWk1sbDZVbXRPYlVVeVdtcGFhRTVxUlRKTlZGSm9UbXBWTWs5VVl6Vk9lbXN3VG5wYWFFNXRXWHBPYWxwb1RYcFpNRmxxV21sT2JWRXlUbXBOTkU1dFNURlpWRTAwVG1wbk0wMXFUWGhPUkdNeVRrUktiVTVVUVRCTmVtTXlUbTFaTWs1NldUSk9WRWt6VFdwamVVNXFSVEphYWxWM1RucEpNMDFxVVRCT1ZFRXlXbXBOTVU1dFZUTk9lbGw2VG1wTk1scHFUVEJPYWtrelRYcFdhRTF0U1RCWmVsa3lUbFJqTTA1VVVteE9hbEY2VG5wUmVrNUVVWHBOYWxwb1RrZFJNMDlFVVRCTmJVa3dXbXBWZDAxNlZUTk9SR040VG0xTmVWcHFVVEJPVkZGNVdtcFJlRTVxVVhsWmFsVjRUbXBqTTA1Nll6Rk9WMFV5VG5wak1rMTZhM3BOVkdNd1RtcGpNRTVxU20xT1ZFbDZUbXBqTUU1Nll6QmFWRmt4VGxSWk0wMUVVVEpPUjFsNlRtcFJNMDF0V1RCUFJGRXpUWHByZWsxRVRUSk9WRWt4VDBSTk1FNVVTVEpPUkUxM1RucG5NRnBVVVhwT2JWVXpUMVJTYkU1dFVUSlBWRkUwVGxkRk1GbFVWVE5PZWtrd1RWUlZNazE2V1ROT1ZGRjZUWHBqZWs1VVRYaE5lazB4VFVSS2FVMTZWVE5OVkZVd1RtcFplazFVWkdoT2Fra3lXV3BSZWs1cVNUTk5lbGt6VGpKRk0wOVVVbWhPVkVFd1QxUk5ORTF0V1ROUFZGcHNUbnBaTTAxcVZYbE9SR3Q1V1dwTmVFNVVSVEpPZWxVelRYcGplazlFWXpGT2VrRXhUbXBWZVU1WFJUQk9WRlV5VGtSWk1GcHFUVEJPVkVFeVRrUlJNRTVIVlRCTmVtTXlUa2RGTWs1VVRUVk9SR2Q2VFVSamVVMTZaekZOYWxreVRtcFZNRTlVVFROTmVtTXdUVlJSTWsxNlNUQk5lbFY1VG5wWk1VMVVVVFZOYlZreFRWUlNhazU2V1RGUFZGSnNUbnBaZWsxcVVUQk9WRUV5V1dwUmVrNTZXVEpaYWxVeVRrZE5NMDVVV1hoT1JGRXlUV3BqZWs1NmF6Tk5hbEpvVFhwTk0wNVVVWGhPYlVWNlRrUmthRTVIV1RCWlZGVjNUVzFaTTA5RVdYaE9SR3N6VFhwTk5VNXRWVEpQVkZwcFRucFpNMDlVVVhsT2JWRXpUMVJOZDA1VVp6TlBSR015VG1wTk1VNXFUWHBPVkVrd1dYcEthVTVVVFRGTlZGVTFUa1JSZVZwcVVtbE9lbEV4VDFSVk1FNXFVVE5OVkZwclRtMU5lVnBxWXpCTmVtY3hUVlJaZUU1NlRUQk9lazAxVGxSbk1FNTZXWGxPUkUwd1RrUlNiVTF0U1RKUFZFMTNUbXBOTWxwcVRURk5lazB5V1ZSTk1VNVVUVE5OYWxWNFRsZEZNMDVxVlRKT2Fra3pUa1JhYWs1dFJUSk9hbGt3VG5wQmVrNTZVbXBOZWsweFRYcFZlVTE2VlRKYVZGRXlUa1JSTVU1NldUSk9SRVY2VDFSTk1rNUhVVEpaZW1OM1RYcFZlVmxxVW0xT1ZGRjZUbXBSTTA1SFVUQk9SRXB0VG0xRk1FOUVTbWxPUkZFd1QxUmFiRTVVU1RGT1JHTjZUa1JSTVUxcVVURk5iVWw2VFZSWk5FNVVXVEJQUkZrMFRtcFpNazVxVW1oT1JFVXlXbFJOZVU1RVJYbGFhbFV6VFhwbk1VMUVXbWhPYWxFeVQwUlNhazE2YXpKUFJGVjNUVzFaTWs5VVl6Sk9WRTE1V21wak1rNUVaekJhVkdNMFRXMVplazFxVFRGT2JWRXdXWHBaTUU1VVVUQk9hbEV4VG5wVk1rNXFVWGhPYWtsNVdtcE5lVTVFU1RKT2FrcHBUbXByTVUxRVRYaE9SMUY1V1dwak1FNVVaekpOVkdOM1RtcFJNMDlFV1RWT2JVa3pUMFJqZVU1RVl6SmFWR04zVGtSSk1VNUVVVEJPUjAweVdrUlZORTE2UVRCTlZGa3dUbTFaZWs5RVdtdE9iVkV6VFdwUk0wMTZaekphYWxKc1RrZFZNRnBFVW1sT2VsbDZUa1JSZUU1cVdYcE9ha3B0VGtSTk1GcEVUWHBPYlUweldWUlNiVTE2VVRKTmFsa3pUakpGZWs1NlRUVk9hazB4VFZSak1VNUhVVEJQVkUwMVRYcEpNRTFVVlhkTmVrVXlUMFJWZDA1VVFUTlBWRmw1VGtkUk1VMVVXVFJOZWtFd1RucFpNRTVFUlRCTmFrMTZUWHByTTA1cVZYaE9SRTE1V1dwVmVrNXRXVEJhYWxWNFRYcGpNMDFxVW1oT1IwMHhUMFJWTlU0eVJURk9SRnBxVG0xVk1rNXFVVFZPUjBsNlQwUmFiVTVVWjNsYWFsRTFUa2RSTVU1VVdYcE9lazE2VGtSYWEwMTZhekJOYW1NeVRXMVpNVmxVV21oT2Vtc3dXV3BTYlUxNlozcE5SR00xVFhwbmVrMUVTbTFPVkdzeVdtcE5ORTV0VlRCTmFsRXhUbFJuTWs1cVVtdE9WRlY2VFZSUk5VNXFVWGxaYWxVMVRYcHJNazU2WkdoTmVtTXlUbnBqZDA0eVJUSmFhazB4VG5wcmVrNTZXbWhPUkZreVRXcE5NVTV0VlRCT2Fsa3hUa1JyTVU1VVdURk9SRkY2VDBSWk1rNUhTVEpPUkdNd1RtcFZNVTlVWTNwT1ZGa3hXVlJrYUUxNldUQk5WRXB0VFhwSk1FNUVWVEpPYW1zd1RXcGpNazU2WnpCTmFtTXhUWHBSTTA5RVdteE9hbFV3V1dwWmVFNXFWWHBPYWxVeFRXMUpNMDU2VlRWTmVtc3dUV3BTYkU1SFdYcE9WRTAxVGtSUk1sbFVXbTFPZW1jeVdWUmpNRTVFVlROT2FsVjRUa1JOTWs1cVRYZE9hbXN3V1ZSYWEwNTZTWHBPYW1NMVRtcEpNbHBFVVRGT2Vsa3hXVlJWTkU1VVZUQk9la3BwVGxSTk0wOVVTbTFPVkVrd1RYcE5NVTU2VlROUFJGSnBUVzFaZWs1RVVUVk5iVWw2VGxSTk1rNUVTVEJQUkUxM1RYcHJlazVFWXpSTmVrMHpUa1JSTkU1RVp6Sk5WRmw1VGpKRk1FOUVZelJPUjBsNVdtcFplRTVFVVRGUFJFMDFUa1JGTUZsNlZYZE9iVkV5V1dwVmQwNXRXWGxhYWxrelRrZEZlazVFV21sT1IxVXdXbXBqTWs1cVp6Qk5WRmt5VGtSak1FMTZXWHBPZWtVelQwUmFhVTVVV1RCWmVrMHpUa2RWTTA1Nll6Qk9SRlV5VGxSWmVrNVVhekJhUkUxNVRrZFpNRmxVV1RSTmVtTXdUVlJSTUUxdFNUSlBSRnBzVG5wUk1sbFVTbTFPYlZrd1RsUlZORTVxU1RCT1JHUm9UbTFSTTA1cVZUVk9SMFV4VDBSWmVrNUhSVEJhYWxab1RsUkJlVnBxV1hoT2FtTjZUbFJqTkU1cVp6SlplazE1VG1wVk1VMXFVbWxOYlVreFRrUlJORTU2VlRCTlZHTjZUVzFKTVU5RVVYaE5iVmw1V1dwUk0wNUhSWHBPYWxrelRsUmplazE2WXpCT2FrVXdUMFJOZWs1RVozcE9SRkpxVGxSQk1scHFUWGRPZWxFeFRVUlpNMDVIVVhsYWFsVjRUa1JSTTAxcVdteE9hbXN6VG1wak5VNVVhekZQVkZwclRsUkJNVTVVWXpWTmVtTXpUbFJhYVU1VVp6QlBSRkV5VGtSWk1FNUVUVFZOZWtVd1RsUlZlVTVxVVhwUFJFMDBUbFJGTWxwRVVUQk9lbGt6VFdwUk5VNXRVWHBOZW1NMVRrZFZlazlVVVROT1ZFRXhUa1JWTWsxNmF6QmFSRkp0VFhwUk1GbFVZelJOYlVreVdXcFJNMDE2VFRCT2VsRjVUbXBSTWs1NldYbE5lbXN5VG5wTmVFMTZZekphUkZwcFRYcE5NMDFxVVRCT1Ixa3dUbnBaTWs1Nlp6Sk9hbFY2VGtSWmVrMXFZelZPVkdjelQxUlJlVTF0V1RGTmVtUm9UbFJOTUUxVVZtaE5la2t3V21wak1FNUVXVEphVkZKcFRrZFJlazVVU20xT2Ftc3dUVlJqTVU1VVRUQmFSRXB0VGxSak1sbFVWVFJOZW1jd1RsUlpNazVFWXpCT1ZGVjNUbnBCZWs5VVNtMU9iVkV3V2xSVk5FMTZSVEJOZWxVMFRYcFJNMWxVVW10T1JFa3lXbFJSZVU1dFJYbFphbGt3VFcxWk1GbFVWWGROZW1NeVdrUlNhRTVIVlRKT2Fsa3pUa2ROZWs1RVdUQk5lbXN4VFZSamVVMTZZM3BQUkZwcFRrUlZNazFxVFROT1ZGa3hUMFJhYVU1VVl6Rk9hbVJvVG1wamVrMTZUVE5PVkUweFRVUmFhMDU2V1ROWlZGSm9UbXBaTUZwcVdUUk9WRUY2VDFSYWFFMTZXVEJaZWtwdFRrZFpNazFVWXpOT2JWbDZUVlJSTWs1cWF6SlplbEp0VG5wbk1GbDZVbTFPYlZVd1dWUlNhazE2VVRKUFJHTjVUbnBOTUZwVVkzZE9hbGt5VFhwWk1VNVVVVEZPUkZFeFRYcGplVnBxU21sT2FtTXdUa1JLYlUxNll6SlBSR016VG1wamVrOVVZM2xPVkVreVRXcGpNVTU2WXpOTmVsVjVUVzFaTTFsVVVYcE9SMWt4VG1wUk5VMXRTVE5aVkZKclRtMU5NbGxVV20xTmVrVXhUa1JOZWs1SFJUSk5hazAwVG5wbk1VNUVZek5PYlVreVRYcFplRTVVUVRCTmVsa3hUbFJCTTA5VVVYcE5iVmt6VDFSYWJFNVVRVEpaZWxFeVRrZFpNazVVVVRST1ZHTXlXWHBOZWs1RVZUSlphazAwVG5wak1sbDZTbTFPUkdNd1dYcGplazVVVVhwTlZGcHNUbXBaTWxwRVVYbE9lbFV6VGtSU2FVNXFWWHBPUkZGNlRrUlJNbHBFV1RCT2JVMHlUWHBSTVUxNlVUQk9SRnBvVFhwVk1rNTZWWGROZWxFelQxUmpkMDE2WnpCTmFtTXlUWHBSTUUxNlZYZE5la0V3VG1wWk1VNTZRWHBOZW1NMVRrUlZlazE2VlhsT1JFa3lXa1JWTlU1SFZUSk9hbU0xVG1wak1scFVUVE5PVkdzeFRVUk5lazVIVVhsWmFrMHdUbTFWTWxsNlVtaE9hbGt3V21wVk1FMTZXVEJOVkZreVRYcFZNbHBxWTNoT1IwVjVXbXBOTUU1NmEzcE5lbU42VGtkWk1sbFVXVEJOYlVsNlQwUmFhRTV0VFhwT1JGRjRUbnBuZWsxcVRYaE5lbFV3VFhwamVFNUVVWGxhYWxwcFRrUlJlVmxxVVRWT1JFa3pUa1JqZVU1cWF6SlBSRlV6VFhwQk1WbFVUWHBOZWtFeFQwUlpNVTE2VFRCWmVtTjNUa1JaTTA5RVRUTk9iVTE2VFhwTk5FNVVRVEJhYWxKcVRrZEZNRTlFV21oT2Vtc3dUa1JqTkU1SFZYbFphazE1VGxkRk1rNVVUWGxPVkZFd1RYcFpNVTVIVVRKT2FsWm9Ua1JSTUZsNldtcE9lbXN3VDBSS2FVNHlSVE5PUkZFd1RrZE5NbGxVVlRKT1JHY3hXVlJWTVU1NldYcFBSR041VGtSak1sbDZWWGRPUjFFeVRtcFZNVTVFWXpKT2FrMHlUa1JyZWs5VVRYZE9WMFV5VGxSV2FFNUVXVE5aVkZreFRrUnJNRnBFVFRST2VtTXpUV3BqZWs1VVJUSmFWRTB6VG5wWk1FMVVZekpPYWxFeFRucFZNazVIVFROTlJGcHNUWHBqTTAxRVVUTk5lbEV5VDFSVk5FMTZRVE5aVkZWM1RtcGpNazlVVFRWT2JVa3pUa1JaZVU1RVkzcE5WRkV5VFhwTk1scFVVbWhPYlZVeVRXcE5NazVIVlhsWmFtTTBUa2ROTWs1cVl6Uk9hbU16V1ZSVk1FNVVaekpaZWxKcFRrUm5NbHBFVlhwTmJVa3hXVlJSTkUxNlNURk5WRlpvVG0xUk1FMTZUVE5OZWswd1drUk5NVTE2UlRGTmVrMTZUbXByTWxsVVRUTk9iVWt6VDBSak5FNXFXWHBQUkZVMVRXMVpNRTE2VlRKT2JWVXpUMFJqZDAxNlFUSk9hbGt4VFhwSk1VMXFUVFZPYWsweFQxUlNhRTE2YXpKTmVsVjNUbnBuTUZwRVZtaE9SRTB5V1ZSTmQwNUhVVE5QVkUwelRtMVZNRnBFU20xT1JFVXpUMFJqTkU1cVdURk9lbEpyVFcxSk1VOVVXbTFOZWtrelQwUk5NMDVVVlRGWlZGcHNUWHBSZVZwcVRYZE9WRVY1V21wWk5VNUhWVEJOVkdONVRYcHJNVTE2VVhwTmVsRXdUbFJWZDAxdFNUTk5SRlUwVGtSbk0wNXFVVEJPVkZVeFRrUlpNVTVxU1RCT1ZGSnRUbnByTTA5RVdUVk5iVmt4VDFSVk1VMXRTVEpaYWxrelRYcE5NVTVVVVRWTmVsa3dXbFJWTTA1NlRURk9hazE2VGpKRk1FNTZTbWxOYlVreFRXcFJNRTVVVFhwTmVrMHhUbTFGTWs1cVdtaE9la2t5VDFSak1VMTZhekJPUkVwdFRrUnJlVmxxV1hwT2FrMHlUa1JSZWs1SFJYbGFhbFY0VGxSRmVrOVVZM2xPZW1zeVRWUmpNVTU2VFRCWmFrMTVUa1JOTWxwVVVtcE9lbGw2VFdwUk1FMTZhekphVkZwclRtMUpNRTlFVlRSTmVrVXdXa1JOTkU1VVkzcE9lbEpwVG5wRmVrMXFZekZPZWtFd1RWUmpORTE2VFRCWmFrMTVUbFJqTUU5VVRUVk9SMFY2VFhwUk5FNVVaek5OUkZreVRXMUpNRTE2VW1wTmJVa3hUV3BWZWsxNlNUQk5lbEUwVGpKRmVrNVVZM2RPVkUwelRXcFdhRTVIVlhsWmFsVjZUWHByTWs1RVl6Rk9WRlV4V1ZSTmVFMTZUVEJaVkZKclRYcG5NMDlVWXpKT2VsRXdUMVJWTVUxNlZUTlBSRTEzVG0xTk1rNVVWVFZPZWtFelRucE5NMDVxYTNsYWFrMHlUbGRGTUU1RVl6Vk9SRmt5V2xSak5FNUVVVE5aVkZFeFRrZEZlVmxxV1RWT1YwVXlUa1JWZVU1RVdYcE5WRkV3VFhwTmVWbHFXVFJPYWxreVRrUlNiRTVVUVRCT2VsVTFUbXBWTUZwcVkzbE9SRlY2VFZSV2FFNVVVWGxaYWxGNlRsUm5lVmxxVlhsT1IwVXpUMVJaZWs1NlJURk9WRkp0VG1wbk1VNXFaR2hPZW1jeVdrUk5lazVFWnpKT1ZGVjVUbnBWTWxwcVRYaE5la1V5VDFSU2JVNVVVVEpPYWxrd1RrZEplazE2VlhoT1JFa3lUbXBhYUU1VVNUQmFSRTEzVFhwWk1GcFVVWGxOZWxsNlRrUlNhazU2V1RKTlZFcHRUbXBqTTA5RVRUTk5lbEV3VFZSWk1VNTZVVEJPYWsweVRtcGplazU2WTNsT1ZFMHpUMVJOTWs1dFJUTk9hbU14VGtSVk1FOUVZM2RPUjFVeVRsUmFiRTU2V1ROTlJGazFUbTFWTUZscVVUTk9WRUV3V1dwVmVrMTZVWHBQUkVwdFRtcFJNVTFxVlRST2VrbDZUa1JWTlU1RVdYcE9WR014VGtkWk1FMVVUVEJPZW1zd1RWUlJNazE2UVhwTlZHTXdUbFJSZVZwcVRUTk5lazB3VGxSamQwNVhSWHBQVkUxM1RtMU5NazVxV1RWT2VsRjZUVlJqZDA1cVRUQlBSRTB5VGtSVk1FOUVVbWxOZWtrelRVUlZNMDE2V1RCTlZFMTZUbXBOTUZwcVdUSk9WRUY2VGxSWk0wNXRWWHBOVkUweFRrUnJNMDVxVW1oT1JGRjVXV3BaZVUxNmF6QlplbEpyVFhwRmVWbHFXWGhPYlUweFdWUlJOVTE2WnpCT1ZGa3hUbFJuTWsxNldtbE9SR2N5V1hwVmQwNXFUVE5PZWsxNFRsUkZNVTlFVW1sT1JGVXlXVlJqTVU1cVJYbGFhbEY0VG0xWmVrOUVXVEZPYWxreFRYcFNhazVVWnpKYVJHTjRUa1JWTUZwRVNtMU9WRmw2VDFSWk5FNUhSVE5aVkdOM1RXMUplazVxWXpST2Fra3dXVlJTYUUxNll6Rk5hbEV3VG5wbk1rOUVXVEpPUkdNeVRWUk5OVTE2V1hsWmFscHRUa1JuZWs1RVZURk5lbWN4VDFSTk1rNVVSWHBOUkdONlRtcFZNRmw2VVRCT2JVVXpUbFJrYUU1RVp6SmFhbFV3VFhwWmVWcHFXbWhPZW1jeVdXcFJNVTE2YTNwT1ZGRXhUbnBaTTA1RVVYaE5lbU16VFVSU2FrMTZUVEJQVkZWNVRtcFpNbGxxVW0xT1ZFRXpUV3BTYWs1RVZYcE5hazE0VGxSRmVrNTZVWGxPYlVWNlRsUlJNMDF0V1hwT2Fsa3pUbTFSTWs1VVVteE9la0V5VGtSTk1FNXFaM2xhYWxFelRrUlJNRnBFWXpWT2JVVjZUbnBSZUU1cVZUQlpWRlUwVFhwbmVrNVVTbTFPVkVVd1RtcE5lRTVFYXpOT1ZGazFUa1JqZVZwcVVUVk5lbFV6VDFSVmQwNTZSVEJOVkdNeFRrUk5NMDVxV20xT1ZFRjZUMVJSZUU1VVNYcE9lbHBzVG0xSk1sbHFXVEJPYWxVd1dWUldhRTE2V1RCTlZFMTZUWHBWTVUxRVNtMU9WRkV3V1ZSWk1VNTZUVEpQUkUweFRrUk5lVnBxVVhwT2FsRjZUMVJWZDA1NldUQlphbFV4VG5wbk1FMVVXVEZPZW1jeVRucE5NRTU2UVhsWmFsazFUVzFaTWxwVVZURk9Na1V4VG1wVmVFNTBZUnNBQUhwSU1WcEhUWFphYlhnelduZElNbHB0ZEcxQlVVUXlRWHBhTTFwdFRYVkJWRWd5VFVkWGRrRnRWakZCVVhCclFVZEliVUYzVEROYWJWb3lXbmRFYkVGSGNESkJiVWhzUVcxd01VeEhTRzFCTWxJeFdsRkVNMEZIV20xQmJVUTBXbTFhTUUxM1RESkJWRVF6UVVkd05FRnRXak5DUjBReFFYcElNa3hIUlhsYWJVZ3pXa2RNTlVGS1VteE5kMHd6UVhwYWJFeDNjREJCZDBneFFWRmFNMEZSVmpOQmQzQXhRVlJXTUV4dFRYcEJVVm93VFZGWGVrRnRXbTFCYlZveFFYcEViRTEzUkcxQmJWSXpRVkZGZGtGSFdtMUJVVXd6UVZSYU1rSkhSRFJhZWt4dFFVZHdhMEZVV214TmQwUXdRWGRNTVVKUlNHdGFiVTV0UVcxWGVrRkhkRE5CVVVRMVFWUklNMHhIU0dwQmJVZ3hRVWRhYlVGdFZqSk1kMHh0V25wTU1VeEhTREJhYlZJelFsRkpkVUY2VEcxYVIwaHFXbnBNTVVGUlJYcEJSM1J0V2xGTU1GcHRjREJhUjBSdFducFdiVnBIY1hWQlVWWXdRVkZYZGtGSFdqTmFVWEEwUVZGME1FSlJSWFZCYlZZeldtMUVNMEYzVERGYWQxb3pRWHBhTWtGM1dteEJVVXd5V20xd05VRnRVakZCZDBRelFVZDRNMEpSV21wQlVYZ3lRVWRhYlVGUmRETkNVVWcwUVhkSU1FeDNTRFJCUjFJelRFZGFNMEY2VERGQmQxb3dRVzE0TWtGM2NHcGFiVWhzVEhkYU1rRjZSREpOUjBReFFWRk1iVUpSVERWQlZFd3lRVkZhYTBGUldqRkNVVm93V20xNE1VRnRUWFpCYlV3elRFZEZlVnB0ZERGYWJVaHNXbnBNTUVGdFREQmFiWGd4V20xTmVWcHRSREJDUjAxMlducFdNRUpIY0d4YWJVUXpRa2RJTkVGNlZqSkJiVm8wUVVwU00wRlJXbXhCVVVodFFXMUlNVnB0VWpOQ1IwUXhXbTFhTTFwUlJETkJkMHh0UVVkRU1rRXlVakpNUjFvMFdtMTRNMEpSU0RSQlIwUXlUVWRFTWtGSFJETk1SMHcwUVhkNGJVRkhjRFJCVkZvd1FVZHdha0Y2VWpOYWQwUXdRWHBFTVZwM1JYbGFiVm93VEhkRU5FRlVUREJhZDBWMlFWRjBNRXgzU0RWYWJYaHRXbEZFYlZwdFRESk1kMHd5UVhwV01WcDNXalJhYlhBd1dtMUlNVUZ0VEROYWJVd3hXbTFJYlZwM2NERkJkMVl5V25kSU1WcHRUREphUjNBelFYcElNa0ZIY0RKQlVVd3hXbEZhTkVGdFNHeE5kMGh0UVZSYWJVRjNUR3hhYlVReVRYZHdOVUZIZEcxYWQwUnRRWGQwYlZwdFRYaEJVVXd3UWtkTWJVRkhVakpNYlZwc1FXMU1NbHBIUkRKYWVrd3lXa2R3TWtGUmNERkJSMWQ2UVhwTU0wRlJXbTFCVkZZelFVZHdNMEZSZERKTlVVVjFXbTE0TWt4M1NHMWFla3d4UVVkRU1rRlVUREpCVVVRMVFYZE1NVXhIUkd0QmJVaHNUSGRFTWxwdFNEQkJVVWcwUVcxT01reHRjREpCUjNRd1dtMUlNMEZ0U0RKQmJVMTNXbTFNTVVKSFNESmFiVkl5V20xYWFrRjNkRzFDVVhBelFWRkVNMEYzU0RGQmVscHRRWGRYZWtGM1NERmFkMW8wUVcxRU1WcEhjWFZhYlU0eVdtMUlNMEZLVW0xQ1IwMTZRVzFJYlVKUlRYbEJiVm95VEhkYU1VRXlVakZhVVV3MVFWUlNNMXAzVjNwQlIxb3dRVkZOZUVGS1VqTkJiVWd3UVVkd01FeDNWM1pCYlhCdFdtMXdha0ZLVW0xQ1VVaHRRVWQwTTBGM1JHMUJkMGd6V2tkTU5WcDZUREJNUjBWNVdtMU1Na0pIU0RCQmJVNHdUWGRhTkVGUlVqQk1SM0F4UVVkRWJFeDNSWHBCUjB3d1RHMUlha0ZIUkRCYWJVd3lXbTFNTWt4SFRYVkJWRkl6UWxGd05FRlVTREpCVVUxNlFWUmFiRXgzU0d0QmQwZ3dRbEZFTVVGNlZteE5kM0F6UVhkV00weEhSREpCZWtReFFXMUZkVnB0ZERGQlVVeHNRVEpTTUVGSGNERmFiVkl4UVhkTU1rRlVSRE5hZDAxNVFXMU1Na0pSUlhWYWVreHNUWGRYZWtGdFZqSk5SMGhxV20xYWJWcEhXalZCZWtneldsRndiRUZIUkcxYVIxbzBRVkZhTUVGUmNESmFlbFl3UWxGRU1VRjNkREpCUjBRMFFYZGFNMEYzVjNwQlVWb3lUVWRFYkZwdFRESkJkMHd4UVVkd01rMTNjREZhYlVRelduZEpkVUZ0ZEcxQmJVZzFRVWRXTVV4SFdtdEJSMGd4UVZGd01FRnRkREZDUjBWNlFWRkViVnB0U0RGQmVrd3pRbEZNYkVGdFdtMUJVVXd6UVhwU01WcFJSRzFCZDBneVRWRkVNVnB0VGpKQmQxb3dRVzFNTTFwSFdteEJkMFJ0V25kd2JFRnRXbTFCUjBnMVdtMVdNRUpIU0RSQlZFUXlRVWRNYkVGUlRESkNSMHd4UVVkME1VRkhUWFpCZDBneFFsRmFNRUYzZURKYVIwZzBRWHBTYlVGM1JYcEJWRkl5VEhkSU0xcHRjRE5CZDNBelFYZDRNMEpSVFhoYWVsWXhRa2RhTVZwdFJEQkNVVTE0UVcxNE0xcDNjR3RCVVZZeFFWRk1ORUZ0Y0cxQmJYQnJXbTFJTVVGM1YzWkJVVWd3UWxGd01GcHRXakJhZDBocVdtMTBNVnAzU0RCQmQxWnNUSGRhTWtGNlZqRkJkMHh0UVhwRU1WcFJURFJCYlVneVdrZEZkbHB0Y0ROQmQzQXhXbTE0TWtGdFNESmFiVXhzVFhkd2JVRnRSRzFCZDBRMVFYcGFNRTFSY0RSYWVreHNUSGR3TlVGNlNEQk5SMHcxV20xU01rMUhTREJCVVhRd1drZHdiVnB0V2pKQmQwUTBRVlJNTTBKSGNERmFiVXd6UVVkWGVrRlVUREpDUjFvelFXMVdNRUZIU0dwYWJWSnRRVkZhYlVGVVJESkNVVWd4V25wV2JVRjNjREJCZWtReVduZE5ka0ZIZUROQmJYRjFRVkZ3TUVGM1dtMUJkMW94UWxGRmVVRlJSRzFDVVVsMVdtMVdNa0Z0V2pWQlZFUXdURWR3TTBGdFNETmFiVTE2UVhkd2JVRlJjRzFCYlhRelFXMUZkVUYzUkRKQmQwMTFRVzFhTUVKUldqTkJkMFF5UVcxSWFscHRjRzFhVVVocVFXMWFNRUpSV214QlIwNXRRa2RNTVZwdFZqTkJVVVEwUVcxTU1rMVJjREJCZDNBeVFYZE1NRUZVVEROYVVVd3dXbTE0YlVKSFdqQkJiVVF6V2tkRmRscHRUREJOZDBRelFWUk1iVUpSVFhWQlIwd3pRbEZ4ZFVGdGRETk1SMW94UVZGd01GcEhTR3hCYlZJeVFWRk1iVUZIZUROQlIxcHJRWGRFYlVKSFdqVkJVVXd3UVZGTWJGcHRTREpDUjFvMFFXMUVNazFSVEd0YWJVUXdXa2RhTlVGNlVqQkNSMHcxUVZSTWJVRjNWM3BhYlhReVRFZElha0YzZEdGUlJHTXdjSHA1YUc1TFJUVldVVEIwVjIxSlowMVVZM1p4TWtRMWNsTk1NVWd3Y1VsQlNtZG5jSHAwTWxwM2RXTkdlV0pyV25walJXNUxZMWh3U21kSmJteG1NMHAzZFZSRU1VMUVjRWQxTVc1SFJWaEVNazFYUjB0Tk1IRnRjVXBJYlhGblJsVjFTRVF5VFVodVNrVlFRVXBqWjI5S1JVeHdkMDFsY0VkeFIxb3dRVWRCYlUxSWNGTklhWEZTUVV4d2RtWXpSMkZGWkc1VVRXVkdNVWxTUmpCNVdVWlVWMFJDU25Wa1JUSjVTRVZTWWpOQlUwOTVXbmhKWTI1NWNXWnhVbEl5Y1ZSV01IRXlTV1Z5Um1kYVdrcHJURzVJUlRCSFIwRjVTVE5UWVVsaFFXNUpkM1EwY1hvNVJHOUhUalJ4VWt3eVRYZHdiVUpTTVVSQmJEbEhXRE5KTVVsSVREQkpNV04yYjBwV01FVlFaakpHVTFKbGNGSnJSRmt4Y1dkYWJVOUtjSHBOUW5CVVNXNUdVa3hsUkV0V2EwcFJUVXhHUzA5TVNVWTVlRWQzUVUxQlZFMHpTVWhCWkV4S1JUUkdSbWRTUm14bmFFaFVaMjFNZVV3MFNYcEJSbkZzWjB4dlZVVkxXREpuVVhCMloyVnhTVWcwUmt0T00wUXdPVkJ1UzA5Q1JIWTVTRWhUUkRSSFNqbFNTa2huYUVoTFQxTnlTM1ZJYm1GWFZrZDJPVnBGTW5WNVIzaGFiVXhJVTJwdlNWTkpRVk5XTTB4SWNWVk5TMFZqUVROUGRVRXpVelpOU2pWRlRUQnJSVXhJUlhwd00wRktXakJGYmxwNVRWVkNTVTFMV2twRlExZ3lkVUpDUzNrMmNsUTFWMGx0ZUROYWVVbEpSak5OWkZodFZtdHdTSFZLUVhoeFVVWjVSVTlKYlhreVdsTk9OVm93UldkeVIxb3diakE1YlVsU1JHeHdNbWMxY1RGMVIwRXlXakJ4VkRnMGJubFRRMEY1Y1ROS1VVMUdRa294VUhKU1p6UmFlbXN3U1VabmQwd3hVMUJ1ZVZvelJubE5WbkF6ZFdkQmVVOWlSVk5GZFVGNFYxRk5NRmREVFVsT2JYSjNRWHBJVVhWWlFWRlRabGd6UldWYVNIRjVjVE5KUzFvd1FVaHdlbkZIUjNoWFQzQkxRVlphYkdkVFJUSm1hVWhVUVhsSmVEZzFUVEk1VTFvemNVaFpNa0ZIV0RBMVdWcHRUMjF1ZW1OcldERmpibkZUVERWSFZERkpUVzFJYVhCSWExSlpNMEUwU0hkYU1FcFNWakJJZDNocVNIWm5SMGxLUkROeE1tTmpRa3RFTTI0eVUyRkhZVUZWUm5kRmVuQXdlWGRFTTBGaVJVdHhZVnBSVFVaWmJHWnJiMGRKU0VSTFUwaEVlbUpxY0hvd05HNVVPV2xhZUVFemIzcGphRzVVZFdaTlNVbEVSREp3YWtaNlJEVnVTR3N6Y0hvMVkzRklaalJLUmpsUVJqSm5la3hoU0cxTU0xSXpUV0ZKTWtGdGRYbEdNWEZUU2xRNVZGcEtjRFZJTVVVeGJ6QlhVVVF5ZVhaTlJqbHRSMHROVVZwSFFXaEZNR05VUVZGNWRVMUxXbXhFZDBsM1NWSm5hVWxIVXpWS1UzbHBibFZ3TWtwS2NXSkdTbWRCY1RGalNHNTZjR3h4ZVVGWlFrcE5TVXd3WjFwdlNWTlZSa3RKYWtaU1kxVk1NbmxuUkRCblpVMTNlVzF5ZURBeGIwdGpTa1o0Y0RWeWVERTJXakJUZG01SlkwdE5NMk5YYjFBNGEyNVRSVnBCTWpFMGJqSkpUVzR6ZVdGTk1WSXdXbnBCYUhKMk9WcGFNREZtVFhoQlIyNTRTVXRhU0UxaFJUQmpWa0ZWUkROTlIwRlhSMGhhTkVSTFkySk5NR2RyV2pKMU5VVklkVEJDUzAxa1duWm5la1ozVXpGeFVrMXNia2huUmtsU2NXUkdTWFZuUlVvMWFVRlNPVTFCVWtScFNrZEpiVVV5WW10R1NrbHRXbTFNYVVFelJUWnZWRWxsV1ROVGVrMVNVbTF3U2xObVNWSlRiRVF4VWpSdmVFVllTbEpYYUc1TGVEQnVTRk40V20xeFJVUkhTVTlhUjFjelRWUlhTMGRTWmpOdlNGSnJUSHBGVW5KU01XaEhiR2RvYjNoTmFISklSWGxCYlU1dFJqSmphRWd4ZVV4Tk0xTkJSREp4YVVwTFFXMU1iWFF6YnpKNWRVVklNWGhZTW5sM2NUTjVXRXBVYTJSRlIzbDViek5GYVZwSmVYWnVTbmxrUmxSeFpVVXdlVnB2U2tWUVFrcGlOSEpoVG0xd2VubFpSWG81UWt4S1kzVkJSMWRqY0VwSlFVZEhRV2xhWVhGUGIzbDRNVWRVU1VGRVNVRlJTVXBtTTNGNWVVcE5WSGt5V25vNE1VcEtOVWRIUjAxbmIzZFRhbHBUWTFkTlVuVnBXREpOVUUxNlRWZEpkMEZpU0VwallrMUtjVFp1VlUxYWIwb3hka1pJVTNkSlNFUnRRWHB4YTNGdFFWZHllRUZxV2twV2JVRjZkWGh4TTBSdGNFaE5XSEI2VTIxSlNqVmljVWQwYTBWM2RHeHZTbE4yU1RGSmRrcElVbXh1VkZOaWJqSTFTRnBJTVRKSFVVNDBUVEJyUjBWVVpqTkJSMHhxV25kRWJWcDNWalZZTWpGRGJraFNhMW95ZFRGd2VIbEZjRlZTWlhCNlNHVnlTbU15V1RJNWJGcDRVbTFhU1hnelJqSkJlVVo2VERSdWVYUXlTVkJuTTBSSWNUWnVlR1pxV2tsalNISjNRVVZKUzFORGJrZ3dNbHBTWTFSQ1NWZEJjVkZCV0VKTFZqTkhVbU0wU1V0NWQwSktkVXhDUzFJd1JURnhiWEZIY1d4SVUwRm9iMjFTTUhBeVNWVklVVk5wUjNseFYwSlZSVk55ZGpsWVRERlBXRUpIY1hkWWJEbFVSVXRYZDNKSWNXaGFNMVpwU25kQlVFaFNRV2hCTUdOamNrdFRkM0o2VjNWd1VsZGxiMjFCTUVZelkyTnlTMFZQU1d4bVpXNVJRV1Z2TVhFMFNVcDRhM0JUUkRKSlVYVTFjSGw1ZVZwUmNXdEJTSEYyYjBoU2JVRnRkVUZGU0hGM1FYcHJXVXg0ZERKRVNIZ3pUVk5YVDI4eVNXMXVkbVkxU0hoVGVsZ3dRWGRKVlhGblJIaGpOa3AzV21sQlZERlpTVzF4YlZveVUwMXZNblF6YmxOVE1VcExRVXhCYlVSbGNFdFNiRnBSVnpaR01sTllSbmR4ZFVwSlYweHhTMU5vU0VwQlMzQkhTWGh3TWtGalRUTnhZMXBWWTB4R1NVbHVTa2hGZUVwUmNURkdVMU5WVERKMWVYRktkVEZOU0dKc2NsRjFka1J0V21wWU1VRjZjREJCYTBGS05XNUdNa2xwYjB0RmVISkhjWFZHTWpreFFUTlRlRzlLT1ZOQlNWZEhUVE5JWlUxSVFVSnhNRXcxV2xKNE1FcEpUVkZ1TUZNeGIyMXhka1l6VjFSQk1uVlNTVlF4TWtsNVkyRllNMU0yY0RGQlprSlNZMGRDVTBsNVFWUTFVVWxUZFZaRU0yTXlSM2w1UzFrelJXcHdSMU5aUmxOSU5YQkdaalJFTTBnMFNFdFBaVzR5UlVGdlNIVkVXblptTVZwUlQycEpTVUZUUVVoU2JVSkhjVFZNU25WM2NIaG5lRzU2UlZodmVqbEZUWGhJYTBwSVVtdEtTWFF6VEVwbWJYQkxSR3hGWVU5bmNHRjFhVzlSZFVod01WTmxXbmhUZDBoSVNXRnhNRUZOU1ROSk0wUkhkWGxOU2tGamNraDFTbHAzY1RKTVNFUnNSWGgwWlc5U01WWkhiRGt4YjFGYWFXOHlXbVZNU0VFMVFURlhibHBJVTBwQk1tZFJjWHB4Ym05dFRVZElWRWd3VFVsRldFSktNV0phVkd0VWIxUnJOa1pVT1hkYVVWSXdXa2Q1WW01NFdtMU1kMHhzUjNkQllVd3pTV1JDVkd0UVJubzFaM0IyT1U5QmVYbG1TVWhGVWtoc1pqRnhVR2RRV25nd1pXOHdjVUZ5ZDFNMlJqSlhUVUV3UVZWeGQzbFFjRW94VUZvelJXMU5TRVJwYnpGVFYxcDNjVTl3U0hGWVJFZDFaMEpUWW1sQlVVMVFTVXA1ZFc1NGVWWk5WRGxYYjNsTlJIQXllR3BIVWtsR2NGSmFNVzV0UlZoSWJEa3pSbmQ0YkhKU1ZtcEZTMGhxV1RCblltNVJlV3BHTTFadFRUQTFSVVpJUldGR1NsSnRjRWRYWWtaSFRXaEdWVk4xV0RGTlNVWXdRVU5ZTWpGYVIzcG5VRzU0ZVROTk1ubHJSbTFOUW05SFRETkdVMDAwVFZWNWVtOWhSWGxCYlhGVlNHMVhRVzVMU1ZCRVMzRkdXVEpJTWtFeVYxbHZTbkJ0UjB0QlRFeHRRV3R1U2xkaldHMTFhM0ZLVFdOSGVGSXdXbm81ZVVGdFFWbE5NblZpY2toMVZVaExlV2hOU25sSmNERkpTRVJLTVRWdmVsTnNSSGcxZFVaSWEwRklZVUZXU1ZGRk0wWXpVM2x3TUdkRVRVaE5TVzlMZFhwR1ZIRlJTbmRXYTBwTFFVUkVlbmxwUmpCQmQweDZXbXhKTUUwelRFbEZUM0ZJT1Zwd2VrbHFjRXBuYTI1S1pqVlpNblZvUjFOMU5uSklZakZHZDFkbVNWRkpkVVIyT1cxeWQzbFBjRWhGTWtaSlFXVndlR00yUmxKTmVVWXdlRFJJWVhCcFRYcFhVVWxIUkdweFMzZ3dibEpFYTBwM2NYWndWWFJyU2xGeFYwa3lORFZHU2tsWGNrdEZNMGRJVjFwQlZFUXlXbE54ZFhCaFRYbHVWVTR3Y0VwRlptNUtPVXRFYlZJd1RYaEpTRnB0ZVdKdVUwaHFTRE5UWjFwNVkwUkJNR3N6YnpGRlZFVklkV1ZGVW5GMVNUSTVOWEZWZFdad1ZHZEJibmhtTUVwNlkyUkJlbXQxY0dGUGJscFNUV1ZIZWprMlRESnhiRWd4ZVdOR01ubG5XRzExVjBVd2F6QnVNVUY2YmxSSmRtOXRTRE55VTBsdGNIcFRSbHBTUkROeGVHWnJTRlJUTmtKVGNHMWFNM2xqVFVwTmJYSkxUelZGZUdkNGNubGpTRnBJZEROYWQwNXRSWHBCVkhFelJYbE5WRk5YVEROMVdWa3hZelpKVkdOM1FrbEliVVY2TVdKeFVVRXhSakkwYWtZeVkycGFVM2hwUkVod1pYQXhVakpZTWpWUmNXMUVhbkV4Y1dWdmVuRXpSbnBKYTFnelNXRk5VVWxZVFV0NVNHNVRRV05CVkdOVGJrZFBZVVo0VTNsSk1sZFRXa2RUTVhBelJWUkZSMDE0U0hZNWFrSkxRWGxNWVhGSGIyRkpWbkJMZVhadk1qQnRSRE5NTTBGSVoweEZNakZNU1RCNWJrbFVjVzVNYlhGNWJsVkVha1JLZFZCeVVuVlpSR0Z4YmxwSFFXSkJTRmRCVERJd05FUjZVMWh4ZW5RelNsSm5UMFo2VnpSQlVWTXpSek53YTBoNVNXdENSM2xOYjFReE5VRXpUMWROUjBsUmNtRkZibHBJVFRWSmVtb3lUVWhyYTBSNk9WZGFiVmMwY0ZWTk5VRkxRVVZLZUhGdVJubEJSa1Y2ZURKQk1HTmpSSHBCVWsxSFVqTkdSbWQ0U1ZOQlJXNHdabVZOZUZOUFJuZEpXVVY2UlZGSVZYRjVjVXROZDBwS1ptdGFNMHhyU0ZSQlMyOHhSR2xHVkZwc1IxUXhURWhoY0RGQlNYUTFRWHAxWlhKNVJYWndNR0kxV2pCRlNtNHlaMkZDUjFvMFNGUjVObkI0WW1sd1JtZFZjSHA1UkVSSVkwVnVWWEZoY2toV00wRjZPV2x2YlZac2JrbzVVMEZ0VGpKdVNqbDVRbE54YmtGTFltdENVM1ZsVFhkVGRVUktXakp1VTBsVFFrdGpVMjl0UVVsd2Vtc3dXakZUWTNKNmNUVktTRGxwVEVwblEwSktTREZ2ZDFOWFNVcHhTVVl5VFVGQk1uQXhjRWRXYlUwd09WVklVVlpxYmt0YU1WcGhTV05GU0dkb1FXMVRhRVV6UlVWS1VsTmlUSGhNTlc1SVFVVmFTMVl4Ukd3NVlrWXpVMU5JTTAxb1NrZFBhbTlLZFZkTlNVbFFTbEE0YTBoS2VYWk5TMEZxVFhkeGJVcFNhakJGU0RGMVNFcElORmd5WTFoTmVVMUlRbFJxTW04eU9EVk5TalZRUlRCSlEwZEthMGRhTUZOTVFXMVNaVVJ0U0RGYWJWTkJTRE5hYlVWTFYzWklNbkZXUWxKalJrZFVRVVJ3UjBGaFJWRk5UVzU1ZVdkTlIwbFFjVkZYUzB4SmNWZE5VbFl5UVVoblVrRjZkRE52VTBsSlNFcHFNMEpTT0cxR00wOWpTVlJCV1VSNlZtMU5lbkZUVEVwMVdWcDZjVXBDUzA1cVNURlhhbTVVVFVKRU1FVnVjbE4xWW05SGVWSnZkMU5wY0ZGQmFVRlVTVkJFTWtsSVIwbGpZMWt3WTNaYU1uRlRjbmRJTTB4SGVEUkZlVVZrUm5ZNVVVaHRVME5NZG1kUlNIbzVSWEI2ZVVKRlZGb3hXa3BOYkVoNGVXNUtlSGxsYjB0WFNFRlJWbXh5U2pGaVRXdzVWbHBIY1hWQmQxTnJXbTFUUm5Fd1owVklTbmxKYm5oSmJFRlNlV05FTTA0eVFsUXhha0ZLY1ZwQlVuZ3lSVkpCYlc1aGRWWkdTMGx0Ym0xWGFGaHRkR3B1VVhGdWNXeG5aMFF3VEd4dlVqRmxiekJuZUhCS05UTkhWWFZUVFZOVFNrMVVaM1Z5ZVhGUVJXRlRXVVJoUVhWTVNERTFjRkZKV2xwTGRXTmFVVk5qY2tkeFFWcDVlVlJ5VkhGTldETkJka2RJVjJ4SVMwbGljbFY1VUVVemNUSkllbE5rUkRKRmQwaFRXalZ3UjNBMGNEQndORUZIUkRWSVNuRldSVEkxZG5CNlRUWkJNbU5yY1hwQlMwcElSV3RZTTFNd1duZDViRUpLZFROeVMzbGhTRE5KWW5CVVUwZHZVWFZrUVVwd00zQkdaalZHVTFkaFFWSTRiSEZ0Y1ZkTlZFbG1XVzF4U2tSTGNYZEhWSEV6VFcxWE5FaElPVVZOU210cFdqSlRVMHBUUldsWk1IbFVXa2g0WlVWSmNXMUpTMHh0UWxGSlNISkxWak5HTUZkWFduaHJWRzlLU0RWSE1IUnJiakpKVUc5SGVHdEhZVUZYU0ROMVdsb3hUak5LUmpscFNGTnhNRzVIUlZad01IQnBTVk40Tkc4eWRVOUZTa2xvU1ZWWFoyOWhVM1pLWVVsWWNWSnhOVzlKZURSTVMzbFdRVEEwYVVKTFJXMXlVMDlyUlRGSlFVVmhlVTl4VWpFelduZ3hha3BIVDFGS1UyTlFjbFIwYVZwNWVXMUlTVTB5YmpOd2JXOUlPVkp3YlVsMWIyMUpWRWRJVTFad2JYVjZTRE5KTlZwU1kweHdkM2xwUWtkWFVGb3lOVmRhU2xONmNERkpWRzR3UkRKQmJVRjVRVWQ1VFhGSGVWTk5lSGhxY0VkQk5rWjRSWGhhTTFvMFJsUnJTMXA2UVdkYVNYUTBRVVpuYTBKS05HVktTa3d5UkhwRlRVZ3dNR1ZDVkRsRGNVaGpiVWt6UldKd1NVeHJUREphTkVsSGNXNUpVMU5YU0ZRNWRrd3dNVFpCTURGaWNVbEJlRUpUVTNWSVNIbGFTRlJqYTBkVFdteHdlWFZJU1ZWWFkwaDZPVmhZTWxORVduWTRaVWx0U1hWSWQwZ3lja294ZFVsNVJWcHhVVTlqUkVoeGJWb3pWMmhOVkZOSVRHMUpkVWQ2Y1doQmVYbDZRVlZqZUVRemVVRklSbWRSVFhsTlNIQjNkV0pDUm5CQlVIbzViRXhLUVdaTlJrNDVWbEJ3TWtGSFRYVkJlbG96V20xTWJGcDZWak5hVVVWM1FXMU1NRUYzVjNaQmQzaHRRVWRNTlVGUlVtMUNVVmQyUVVkRU1WcFJSWFpCVkV3elFrZGFNMEYzY0cxQ1VYQXpRWHBTTTBGSFRHMUJiVXhzVFhkTU5VRkhTRzFhZDFveVFXMU1NRUZIV2pGQmJVeHRXbEZYZWtGNlVtMUJSMFJyUVcxME0xcFJjRFZCZDNReVRIZGFhMEZIVmpOQlIxcHRRVzFhYlVGUldqUkJiWFF4UVhkd01WcHRXakJDUjFwc1FYZDRNMEZIU0cxQmJWb3pRVzFGZDBGVVJEQk1SMW95UVZSRU1GcDNTWFZCVkV3eldsRkZka0V5VWpCQmJVbDFXbTFJYlVKSFRYbEJla2d5VFZGYWJFRnRUakJCYlVocVFXMUliVnBIUkRWQmVsWXlRbEZKZFVGdGVESkNSMHh0UVRKU01VRkhUWFpCVVhSdFFYZGFiVUZIVW0xQlIxb3dXbnBNTWtKSFJYVkJWRll4UVcxTU1VRlJVakpNZDBnelFYZGFiVUZIVFhsQmJVNHlUVWROZGxwdGNEQmFSM0YxV20xTU1rRkhXbXRCUjA1dFFWRndiRUZSZERCQ1VYQXpRVzEwWVJzQUFGbDZUWHBOTTA1NlZUTlBWRTAwVG5wVk1FMXFUVEZOZWsxNlRucFJlazVVWnpOTmFtTTBUa2RaTUZsVVRUUk9WRWt3VDBSVk0wNUhSVEZQUkZVMFRtMU5NbHBVVW1sT1JGa3hXVlJOTkU1dFNYcE5WRmsxVGtSVmVWcHFWVFZPYW1ONlQxUlpNRTU2WnpOT2FsRXdUWHBqTWxwRVVteE9WRVV6VFdwWk5FNUVZekJPYWsweFRtcFpNazE2VlhsTmVsVXlUMFJWTUU1VVkzbFphazB5VG0xTk0wMTZZM2xPYlVrelRsUmFiRTV0U1RKT2VsSnFUa2RKTWxscVVtaE9SR2Q2VDBSYWJFMTZSVEZPVkZreVRrZEZNRTFxVFhsT1JGa3pUWHBaTTA1WFJUSk5lbEUxVG1wWk0wNXFVVEJPVkdzeVRrUmFhRTE2VlRGUFZGcHJUbFJuTUU1VVVtbE5lbEV3V21wWk1FNUhVVEJOZWxVeFRsUmpNazlVVFRGT1ZGVXlXWHBSTTA1RVZUTk9hbGt5VGtSSk1rMTZVVEZPZWtFeVRWUk5NMDVFVFROUFJHTXpUbnBaTUZwRVVUSk9WRkV3V2tSTk1rNTZaek5PVkUweFRYcFZNMDFFV1hsT2Vra3lXa1JOTWs1NmF6TlBWRkY1VGtSak1rMVVWVEJPUjBsNVdtcFJNRTV0U1RGTlZGazBUbXBuTVZsVVRUUk5la1V5V21wVk5VNXFaM3BPUkZKdFRtMVZNbGxVVVRKT2FrMHpUa1JTYlU1cVZUSlphbEY1VFhwTk1WbFVUVEpOZWxVd1dWUmpNazU2WTNwT2FsRXhUbTFOTVU5VVdUUk9WRkV3VGxSYWFFNVVhekpQUkZrd1RtcFpNMDVxVVhoT2JVa3pUbXBOZDA1cVRUSmFSRlV4VG5wQk0wMTZVVFZPZWtFeVRYcGplVTE2VVhwUFJFcHRUbXBOTUZsNlVURk9hbWQ2VDBSUmVVNTZTWHBPVkZFMVRtMUpNMWxVVVRKTmVsbDZUbnBqZUU1NlRUTk9SRkV6VGxSTmVrOVVXbWhPVkVFd1RWUk5NazU2U1hsYWFsRXhUWHBuTVU1NlRUVk9WR3N4V1ZSVmVFNVVWVEpPVkZVelRtMVZNRTFVV21sTmJWa3pUWHBSTVUxNlRUSk9lazB4VG5wak0wMXFWWGRPYlZrd1QwUmthRTV0U1RKT1ZHTXdUbFJuTVU5RVdUUk9SRkY2VFZSTk0wNXFSVEZQUkZFMFRYcFJNRTlFVlRSTmVsa3hUMFJTYVU1NmF6Tk5WRkY1VGtkUk0xbFVVVFJPVkVFd1QxUk5lRTU2WnpGUFJGRjZUbFJaTVUxcVVUSk9iVkV3V1ZSVmVVNTZZekJQVkZVelRrUlpNVTFxVlRST2VrRXpUa1JrYUU1VVp6Rk9hazB5VG5wSk1sbFVZM2RPUkZFd1QwUmthRTU2UVRCYVJHTjVUbXBWTWsxNlVtaE5lbFV5VDBSVk1FNTZXVEJOYWswelRrUm5NRmw2VW14TmVsa3dXa1JaZWs1RVRYcE5hbGt5VGtSVk1rMVVWVEZPYWtWNlRucGpNazU2VFROUFJHUm9UWHBuTUUxNldtMU9WRVV3VDFSS2FVNXFWVE5PYWtwcFRYcFZNMWxVWTNsT2FrMHlXa1JSTWs1dFdUQlplbGt4VGtSWmVrMXFZekJPYWxrelRsUlJlVTVIUlhwT1JGVXpUbTFKZWsxcVl6Tk9ha2w2VFdwTk5FMTZZekphVkZreFRtMVplVnBxVFhwT2VrVXdUWHBOZUU1Nll6SmFWRkV3VFhwbk1sbFVZM2hPUjAweVRsUmpkMDVVYTNwTmFsRjVUbFJaZWs1RVRYcE9hazB4VDBSTmVFNXFWWHBOVkUwMVRucEJNMDFxWXpOT2VrRjZUVlJhYkU1dFJYcE9lbEY1VGtSbk1VMUVUVFJPUkZrd1RWUlpORTVFVVRCT2VtTjNUa1JKZWs5RVVUVk5la2t5VDBSU2EwNTZVWHBPVkUwelRsUkZNazVxVFRWT1JFMHpUbFJrYUU1RWF6Sk9hbFY2VGtSWmVWcHFWVEpOZW1zeVdtcGplazVVUVRKT2VsVXdUa2RaTUU1VVRURk9hbXN4VGtSTmVFMXRTVEZPZWxFeFRrUk5NazVVVlhwT2FrVXlUbXBhYkU1cVl6Rk5lbEV6VFhwWk1FNUVUVFZPVkZVd1QwUk5NazVxU1RCUFJFMTZUbXByTVUxVVVtMU9lbEV5VGtSVk1FNXRVWHBOUkZsNFRtMVJNRmxVVFROTmVtTXdUbXBTYWs1dFJUQk9hbFV6VFhwUk1FMXFUVE5PUkdzelRrUlNiRTVYUlROUFZGVTBUbXBOTWxsVVkzbE9lbFV3VDFSU2FrNHlSWHBOYWxsNlRsZEZNRTFxWXpKT2FtTXhUbFJSTTAxNlZURk5SRlV6VGpKRmVrMXFVWGhOYlVrelRtcFJNMDE2V1RKWmVscG9UbnBqTWs1NlkzZE9lazB3VFhwTk0wNUVWVEJQVkZWNFRYcFplazFFWkdoT2VtTXlXVlJqTkU1NmF6SmFWRlUxVFhwVk0wNXFXVFJPUjAweVdXcFNhRTV0U1ROUFJGRjRUbXBWZWs1VVl6Sk9WR042VFdwTk1rNUVZM2xaYW1NMVRtcFplazU2V21wTmVra3hXVlJhYkU1NlZUQk5lbU16VGtkVk1VOUVWVE5OZWtVd1drUmFiVTVxWnpOTmVsRjZUbFJSTWsxcVZURk9lbU16VDBSamQwNXFXWHBPYWxrMVRtMVZNazVFV1ROT1JGRXhUVlJqTkU1VVl6Tk9SRmw0VG1wVmVrNUVVVFZPUkdjeFRWUlJOVTF0U1RKTmFsVjZUWHBOTTAxNlVYcE5lbXN3VG5wYWJVNUhTVE5PYWxKclRYcE5NMDFxVFhwT1ZFVXpXVlJOTWs1NlNYcFBWRlV4VGxSQmVrMTZVVEpPVkZrd1dtcFpNRTVxYXpCUFJGVTBUbnBKTTAxcVl6Vk5iVWw2VGxSak1rNVVZek5PZWsxNVRrUnJNVTVxVW1oTmJVa3lUV3BSTlU1NlVUQk5WRlYzVGtkWmVrNUVVbXBPZWxWNlRYcGpORTVIVFRKYVZGRjRUbFJaZVZwcVZUVk9WRVV6VG5wU2FVMXRXWHBOYWxFd1RYcG5NRTFxVFhwTmVrMTZUMFJaZVU1RVp6Rk5SRTE0VGtSRmVrNVVVVEJPYlZFd1RucFZlVTVIV1ROT1ZHTTBUa1JqZWs1RVZUVk9WRTB4VFdwamVrNUVSVE5PYWsxNVRrZFJNazE2V21sTmVrRjZUbFJhYkUxNldUQk5WRkpvVGtkTk1rNUVXVEpOZWxVd1drUmFhVTF0U1ROT1ZHTjNUbFJSTWs1VVZUQk9WR2Q2VDFSUk5VNXFWVEpPVkZVd1RYcEZNRnBVV1RGT1JGbDZUbnBqZWs1dFVUQmFWRmt4VG0xSk1GcEVXVEZPZW1zeVRtcEtiVTU2UlRGT1ZGRXhUbXBuTWs5RVZYbE5lbEV5VG5wTk0wNVhSVEJPUkZKdFRrUnJNRnBFWXpOT1JHc3lXa1JWZWs1cVNUQk9WRTE0VG1wSk1FMXFZekpPYlVsNVdXcE5ORTVIUlROTmVrMHdUbTFaTUZsNlRYZE5la2w2VGtSYWFrNUVZM3BOUkUxM1RsUkJNazVFWTNwT1ZFRXpUa1JTYTA1RVRUTk9SR042VGtSRk1rNVVUVEZPYW1jeVQwUlZNazV0V1ROUFZGWm9UWHBqTWsxVVVUUk9SRkV5VFdwWk5VNUVTWHBPUkZVMFRrUkZNRmw2WXpOT1IwVXpXVlJaTlUxNlZYcFBSR00xVG5wWk1sbHFaR2hPZWxFd1RucFpNMDVVWXpOT2FsVXpUbXBWTUU1cVdteE9SMWt5VFZSTk5VNXFSVEJaZWxsNVRsUnJNVmxVVlhwT1ZHTXpUWHBSTVUxNlNUTk9lazB6VG0xWk1VOUVUVFZPVkVVelRVUlJOVTVVU1ROT2FsRjZUa1JqTVZsVVdteE9SRVV3V1dwTk0wNHlSVEJhYWxwcVRrZFpNMDVxWTNwT1IwVjZUa1JSTWsxNlJUQmFWRTE1VG5wak1rNXFXbXRPYWxFelRVUk5NVTR5UlRKYVJHTTFUbnBKZWsxcVZURk9iVVY2VG5wVk1FNVVUVEJQUkdNMVRucEJNRmxxWkdoT1ZHc3dXWHBaTTA1SFVYcE9lbVJvVFhwak1rMXFWWHBPTWtVeVRucFNhVTE2VlhwTmVsSnFUbFJaTWsxNlVtdE5lbXN3V2tSak1VMTZTVEZaVkZsNVRrUlZNVTlFVFROT2FrVXpUVlJOTkU1VVFUTk5WRlV4VG1wUk1sbHFWWGxOZW1NeVRrUmpNMDVxYXpCWmVrMTZUbXBSTWxwRVNtbE9lazB3VFhwWmVFNXFUVEZOZWxFd1RucEpNRnBxVVhoT2VrVXlUbFJqTTA1RVp6Sk5lbEV4VGxSRk1rNVVVbXRPTWtVeFRtcGpkMDVFYXpKT2FtTjVUbTFSTUUxVVVtcE9WR2N3VFhwU2EwNVVTVEJQUkUxNVRsUkJNRTE2VlhkT2FsRXpUVlJWZUU1SFRUSmFhbGt3VG5wTmVrMVVUWGhOZWxVeFRucGplVTVxVlROT1JHTjNUbXBKTVUxRVVtdE9SRlV3V1ZSWmVVNXRSVEZQUkZGNVRYcFJlazU2VVRCT1ZFRXlUMVJXYUUxdFNUSlpWRkpzVGxSVk1FNVVZekJOZW1zd1RsUlpNRTU2UVRKWmVrMDBUa2RGZWs1cVVYaE9hbXN4VFVSWmVFNUVSVEphYWswMFRsUkZNazVxV210T1JFa3lUWHBaTTAxNlkzcE9lbFUwVG1wbk1FOVVXbWxPUjBWNlRrUmpORTVFVFROT1ZGRXhUa2ROTWs5RVVUTk5lbXN6VGxSWk1VMTZSVEZOUkZVelRrUlpNVTVFU21sT1IwVXlXbFJSZUU1NlNYcE9SRlYzVGtSRmVWcHFZekZOZWxrd1RucE5OVTV0UlhwUFZGSnJUWHBuTUZwcVkzcE9SRlV6VFZSTmQwNUVWWGxhYWxsNlRYcFJNRTVVVVRST2VtY3hXVlJOTlU1dFdUSmFWRTAxVGxSRk1FNUVUWGxOZWxreFRrUlpNMDVIVFhwT1JHUm9UbXBaZWs5VVVtMU9lbFV3V2tSTk5FNVhSVEZOUkUwelRsUk5NMWxVWXpWT2VsVXdUWHBSTUU1SFdUTk5lbEY1VG1wVmVrNUVXbXhPVkZFd1RYcGFhazU2WnpKT2VtTXlUbXBKTUUxNldYcE9hbEV3VFZSWk1rNXFXVEpPZWxwcVRrUlJNMDE2VVRWTmVra3dUMFJaTWs1NlRURk9lazB3VFhwUk0wOUVVVFZPYWxWNlRrUmFhRTU2WnpGTlJFcHRUa2RGTUZwRVRYbE9SMUV3V1hwVk0wNXFTVEZPYWxKcFRsZEZNRTFVU21sT2Fra3hUVlJTYUU1Nll6SlpWRTEzVGxkRmVrMVVXVFZPUjFGNlQwUlZlRTVVUVROTmFsRTFUbTFOZWs5RVdUVk9hbGw1V21wWk5VNVVVVE5PZWxwclRYcG5NbHBVWTNsTmVtTXhUMVJTYUUxNlZUTlBSRmw2VFhwSk1scFVTbWxPUkUweFQwUmpNRTVVV1ROTlJGVjRUa1JuZWs1NldYaE9hbU15V1dwS2JVNUVVVEZOUkUwMVRsUk5NbGxxWXpGT1JGRXpUa1JSTWs1cVRURlBWR016VG1wbmVWcHFXVFJPUkUxNlQwUmFhVTVxU1hwT1JHTXlUVzFaTUU1NlRYaE9SR2N5VFZSYWEwNUVUVEZPYWswMFRsUk5NRmxxV1RWT1IwVjZUMVJqTUU1NlRURk5lbU0xVG1wVk1sbHFWWGROZWxVd1RucE5OVTVIU1hsWmFsRTFUbFJCTUUxVVVtMU9WR3N4VG5wYWJFMTZXVE5OVkZWNlRrZE5NRnBFV1hoT2JVbDZUa1JqTTAxNlp6Sk5lbGw0VG1wRmVrOUVXbTFPYWtWNlRVUlJlazU2WnpCT2FscHJUbnBOTWxwRVZYcE9lbFV6VG5wU2FVNUhXWHBOUkZFeFRYcFJNRTVVV1hsT1JGRXdUbnBhYWsxdFdUTlBWRkY0VGxSRk1scEVVbXhPVkUweFRtcEthVTV0UlRGUFZGVjVUbnBKTVUxRVZUSk9WRUV6VFhwVk1VNXFVVE5OUkZKclRucEJNMDVxVlRST1IwVXdUa1JOZVU1RVdUQk9lbFV3VG1wWk1sbFVWWGxPUkZreldWUlpOVTU2VlRCUFZHTXhUakpGZWs1VVVteE9SMDB4VGxSWk5VNVVVVEpPVkUxNFRsUlZNVTFFWXpGT1IxRXdXbFJLYlU1WFJUQmFhbU16VG5wUk0wNVVWWGxPYWxreVRWUkthVTVIU1RKT2FrMDFUbXByTUU1RVl6Qk9WRVY2VGtSVk1FMXRXVEpPYWswMVRucEZNRTVFVFhsT1JFMHhXVlJSTkUxdFNYbFphbGt3VG5wWk0wOVVXWGxPYW1kNVdtcGpkMDU2YTNwTmFtTXlUbnBCZWsxNlRYbE9iVlY1V21wVmVVNXRTVEpPYWxKclRucE5NRmxVWTNkT2JVa3dUa1JaTWs1dFRYcE9lbEV3VGtkSmVWcHFVVEZOZW1Nd1dXcGpkMDV0UlRCWmFscHNUbXBSTWs5VVdUUk9SRVV3VFdwVk5VNTZhM3BOZWxsNVRsUkZNVTFVV1RST01rVXdUbFJhYTAxNll6Qk9SRXBwVGtSWk0wMXFXbXROZW1zelQwUlNhMDVxV1RCYVJGa3dUbnBWTUZwVVVUQk9SR3N3VGxSV2FFNXFSVE5OZWxFMVRsUk5NazlFVW10T2FsRXlUbnBOZUUxNlp6TlBSR041VGtSVk1scFVTbTFPZWtFeFRVUk5OVTVVVVRGWlZGazBUbnBWTUZwRVZYaE9iVVY2VG1wVk1FNUVXVE5PZW1OM1RsUkplazFxVVRKT1ZHTXlXWHBaZVU1dFdUTk5SR00xVG5wSk1VNVVXVEpPVjBVeVdsUkthVTE2YXpCTmVsVTFUakpGTTA5VVdYcE9WR3N3VFZSTmVrMTZVWHBOUkdNd1RsUlJNRTlFVFhoT1ZGVjZUbFJqTlU1cVVYcE9hbEY2VG5wRk1VOVVUWHBOZWtreFRWUlNiRTE2V1RKYWFtTXpUbnBqTUUxcVl6Rk9SRmt3V2xSak1FNXRSVEpaZWxFMVRsUlJNazlFV210T2JVa3pUbXBqZDA1RVVUSk5WRkY0VFhwTk1FNVVVbWhPZWxFd1RXcFpNVTVIVVRGTmFrMDFUa1JKTUZwVVZYaE9WRmt5VDBSUk5FNVVhek5OUkZsNFRYcEJNRTVxWkdoT1IwMHpUbXBaZWs1dFJYbGFhbFV6VGtSbmVrNTZXWGxPVkdzd1RYcFpNVTVVVlRCWmVrcHBUbFJyTWxsNlRUUk9ha1V6VGtSYWJVNUVaekZQVkZVelRucFpNRTU2VVRSTmVtY3dXV3BaZWsxNlRUSk9lbFV3VGxSbk1WbFVUVEpPVkUweVdsUlNhRTVFVlROUFJGSnFUbTFSTUZwVVl6Vk9hbFY2VGtSUk1rNUhUVEJPZWxFelRYcGpNazFVVW14T1JGVXlUV3BXYUU1RVZURk5SR042VFhwQk1FOVVWVE5OZWtVd1QwUlpNazVxU1RCYWFsSnJUbTFaTTAxcVZYcE9iVlY2VFdwS2JVNTZUVEpQUkZWM1RsUnJNMDFxWkdoT1JGVXdXbXBOTkU1SFRUSmFWRkpyVFhwbk1GbFVVWGxPVkZGNlRWUlNhVTVxV1RCYVJGSm9UWHByTWs1NldtaE9WMFV6VFdwTk1rNTZhekpOVkZVMFRYcHJNVmxVVVRWT1JHdDZUbnBqZDA1cVNYcE5hbEUwVG1wSk1VMXFZM2hPUkZFelRrUlNiVTU2VVRGTmFsRXlUWHBSTTA5RVVUQk9SMVV5VGtSamVrNXRUVEZOZW1ONVRtcEZNVTlFVFhsT1JGa3dXbFJaTUU1VVJUQlBSRmt6VG5wRk1FOUVZelZPYWtWNlRrUmplRTVYUlROWlZHTjZUbXBqTTA5RVVYaE9lbXN4VG5wTmVrNTZUVEpaYWxWM1RYcGpNRTU2V1RCT1ZFVXpUa1JhYlU1SFJUSk9ha3B0VGtkSk1VNXFZek5PVkVFd1dXcFZlazF0V1hwT1ZFMHhUVzFKZWsxcVdUVk9iVkV3V1hwak5VNVhSWHBPVkZKclRucEZNVTVxVFRWT2FtTXhUVVJrYUU1dFZYcE9WR1JvVGtkSk1VMTZZekJPYWtVeFRYcFdhRTE2VlRGT2FsSnRUbTFaTTA5RVl6Uk9hbWN5V2xSUk0wNVVUVEpPUkZab1RtcEpNMDFxVVhwT1IxRXdUMVJWZWsxNlVUQk9WRmt4VGxSbmVrMUVXbXROZW1jd1RtcFJNRTE2VVRKYWFsSnNUWHBqTWsxcVVteE9SMUV3VG1wTk1rNTZZM3BOZWxwb1RucEpNRTlFV21sTmVrMTZUMVJSTlU1SFdUTlBSR015VFhwRk1sbHFVVEZOYlZrelRrUldhRTVFU1RCWlZFMTZUa1JOTUZsVVdUSk9SRmt4VGxSak5FNTZWVEpQVkUxNFRrUk5lVnBxWTNoTmVtc3pXVlJaZUU1Nll6SmFWRTE2VG5wSk1VMTZXbTFPVkVsNVdtcEtiVTU2WXpCWmFrcHBUbnBOTTAxRVZYbE9lbWN3VGtSTk0wNUVhek5PYWsxNFRrUlJNazVVWTNwT2Ftc3pUWHBWZUU1VVozcFBWRTB3VFhwcmVWbHFVVEZOZWxVeVRtcFJOVTVIUlRCWmVscHNUbFJSTVZsVVZUUk9iVmt5V1ZSTk5VNTZRWHBPZWxVMVRsUkZlazVVV210T2Vsa3lUVlJSTkU1cVRUSk9hbEV3VFhwTmVrNVVXbXBPVkdjd1dWUlNiVTE2WXpCYVZGcHNUWHBaTVUxNldUQk9hbWN5VFdwUmVrNXRVVE5PZWxFMVRtcEpNbGxVVlRKT1IwMHlUbXBSZWs1VVVYbFphbU40VG5wQk1rNXFWbWhPUjBVelQxUlJNVTVFV1RKUFZGVXlUbXBKTVZsVVRUQk9SRTE2VG1wTk0wNUhTVEpPVkZwcVRsUkJNVTlVV1RST2FrVXhXVlJhYVU1dFNUQk9SRkpwVG5wak1scFVTbTFOZW1Nd1RucGFhVTVFVVRKYVJGVXpUbXBWTWxsNlRYcE9ha2t3V21wWk1VNUVZek5OUkUxNlRrUlZlVnBxV21sT2VtY3pXVlJhYkU1cVp6Rk9SRkUwVG0xRk1sbHFaR2hOYlZrelRXcFJlVTVIV1hwTmVsa3lUbnBuZWs5RVZtaE5lazB6VG5wVmVVNXRVVEZOUkZsNVRucFplazU2V1hoTmVsa3dXa1JLYlUxNmF6QlplbHByVG5wak1FOUVWVFZPUjFVeFdWUk5NRTVIUlRKWlZGVXpUbXBKZWs5VVVtbE9lbGt3V1ZSV2FFMTZaekJhUkUxNVRsUkJNRnBxVFhoT2FtTXdXV3BOTTA1RVRUSmFSR00wVG5wSk1rOVVVVFJOZWtreVRtcFNhRTVYUlhwUFZGSnBUWHBOTVUxNlRUSk9lbEV5VDBSUk1rNUhTVEphVkZWNlRsUlZNMDE2VVRCTmVsRXpXVlJaTWs0eVJYcE9hazE2VG0xUk1FMTZVWGhPYWxreFRsUlpNMDE2YXpGUFZHTXpUbnBKZWs1NlZYaE9SMGt5V2tSTmVFNUVTWHBOUkZwb1RYcFJNazVxV210T1IwVXhUVVJOTWs1dFZUSk9hbU14VGtSTmVrNTZXbWhPUkdONlQxUmpNVTVFVlRCTmFsRXpUbGRGTVU1NlZURk5la1V6VDBSak0wNUVTVEpPVkdONVRucE5NRmxVVlRCTmVtc3lXbFJWTVU1NldYbFphbEpyVGxSVmVWbHFUVEZPYlVsNlRucGpkMDVIV1hwT2FsbDZUbTFaTTAxcVVUUk9iVVV3VDBSVmQwNVVUVEpQUkZwcFRtcEZNazVxVm1oT1JHY3pUbFJSZWs1NlkzcE5lbFpvVGxSQk1rNTZWVFZPZWswd1dWUmpNMDE2UVhwUFJHTXdUbFJaTWxwcVl6Tk5lazB6VFhwU2JVNVVRVEJaVkZKcVRYcEpNbGxxVlhkT2VsRXdUbnBWTWs1cVNYcE5hbHBxVGxSRk1WbFVZM2RPZW1zeFRXcEtiVTVVVFRCUFJHTXhUa1JSTTA1RVVtcE9SRlV4VG1wa2FFNUVWVEJhYWxKclRsUmplazFVWXpOTmJWa3pUVlJOTWs1cVJYcFBSR00xVGtSUk0wNTZXbXROZW1jd1RYcE5OVTVxWnpKT2Fsa3dUbFJyTTA5VVRYZE9hbU42VG5wVk1VNXFhek5PZWsxNFRrZE5NbHBFVFRGT2Fra3lXV3BTYkU1NlRUQlphazB3VFhwQk0wNXFUVEJPYW1jd1drUlNhazVFWTNwTlJGcHJUWHBCTWs5RVRUVk9SMVV5VFhwYWFrNXFTWHBOYW1OM1RucHJNbGxxWXpKT2Vra3lUbFJhYVU0eVJUSk5lbEp0VGxSWmVrOVVXbWhPZWxWNlRXcGpNMDE2WXpCTlZGa3dUbTFGTVUxRVRUQk5lbU13VG1wS2JVNXRVVEJhVkZwb1RrUlJNVTFFVFRGT2FsRXdUbXBOTWs1VVNUSk9WR04zVG0xTk0wNTZVbWxOZWtVelRtcFZlRTE2VVRCWmVrMDFUbnBOTWs1RVl6Uk9lbWQ2VGxSVmQwNXRVVEJaVkUwMVRrUlZNMDE2U20xT1ZHc3pXVlJqTWs1SFRUQk9WRTAxVG1wbk1VOUVWWHBPUjAxNVdtcFZNMDV0V1hwT2FsRTBUWHBKTTAxVVNtMU5la0V5VFZSUmVVNXFUWGxaYWsxNVRtcFpNazVFV1ROTmVtTXdUWHBqTTA1dFJURlBSR1JvVGtSRk1GcHFZekpPZWtrd1RYcFZNMDE2WXpGTlJGcG9UbXBSZVZwcVRYaE9lbU41V21wamQwMTZTVEpOVkdOM1RucFJNazlVU21sT2VtTXpXVlJqZDA1dFJUTk5WRnBwVGxSbk1rMTZUVEpPZWtrelRtcE5lVTVFUlRKTmFsSnJUbXBSTTA1RVRYbE9WR3N5VFdwVk5VNUVUVEZQVkZFMVRXMUplazFxVFhkT2Fra3dUV3BTYlU1VVZYbGFhbEY2VG0xUmVrNVVWVEZPYWxFeVdtcGplRTVVWXpCWmFrMDFUa1JyTVU1NlRUSk9ha2w2VFZSVk1VMTZhekpOZWxVMVRYcEJNMDVVVFROT1JFMHdUbnBTYTAxNlRYcE5hbHByVFhwWk1scEVUVFZPYW1NeVRsUlNiRTVVYXpOT2VtTTBUbTFOTVU1RVVtMU5lbFY1V1dwUk0wMXRXWHBOYW1Nd1RucEJNRmxVVFRWT1JHTjZUVVJWTkUxNll6RlBWRmt5VGtSVk1sbDZXWGxPYWxreFRYcFZNazU2VFRKUFZFMDBUakpGTUU1RVl6Qk9ha1V5V1ZSWmVVNVhSVEJPUkVwcFRucFJNRmxxVFhsT2Ftc3lXbFJOZUU1SFJUSk9WRmt4VG5wak0wNVVXWGxPVkUxNVdtcGplazVVVFhwTmFsRjVUbXBKTVZsVVZUSk9lazE2VFZSTmVVNUVTVEpOYWxrMVRrZE5NVTFxVVhsT1ZFMHdUbXBOZWs1SFNYcFBSRTB3VGxSbk1FMVVUWHBPZWtFeVdWUk5lazVVVlhwUFJFcHBUbnBuZWs1NlkzZE9SRWw2VG1wYWEwNUVVVEZOYWxKclRYcG5NVTVVV1hsT1Ixa3dXVlJOTlU1VVp6Rk9WRlY1VG5wTk1sbDZaR2hOZWtVeVdYcGFiRTVxUlRKYVJFcHBUWHBKTTAxRVpHaE9WR3N5VG1wak5FNXFaekZQUkZFd1RYcFJlazlFVlhoT2Fsa3lUbFJTYUU1NlkzbFphbFY2VFhwcmVrOUVXVEpPZWtGNlRYcFNhMDVIV1RGUFZGVjZUa2RWZVZwcVRYcE9hbFV3VFZSTk1rNXFSVEZOZWsxNlRucFJNMDlFWXpST2Vsa3dXa1JhYUUxNlVUTlBWRkUwVG0xRk1GbHFZekJPZWsweFdWUk5lVTVFU1RKTmFscHRUVzFaTWsxNlZYbE9ha2t5VFdwTk1FNTZSVE5OYWxWNFRtcGplVnBxVFRGT2VrRXpUbXBLYVU1Nlp6RlBSRlV4VGtkTk0wMVVZekJPZWxVd1RtcFNhRTVVWXpKYWFtTXdUWHBWTVUxRVkzZE9WMFY2VG1wTk1VNUVWVEZOUkZsNFRucHJlazVxVlRGT1IxVXlUMFJWZDA1VVdYcE5WRlYzVG5wWmVrNUVXVEZPZWxGellSc0FBRE5DUjBneFFVZHdNMXB0VjNwYWJWWXdURzFhTlVGUlNESk1kMW96UVZGRU1scHRXalJCUjFZd1FsRkViVUYzV214TWQzQTFRVzFNTUUxUlRYZGFiWFJ0V20xRU5WcDZURzFhUjBnd1ducE1iVnBSU0RKYWJYZ3hRa2R3TUVGUlNESk5VVmQ2UVVkNE1rRlJUWGxCVkV3d1FsRmFiVUZIU0RKTWQwd3dRVlJXTWsxSFNEUkJkM2d3VEhkRU0xcHRUak5hYlZwcVFYZHdNbHAzUkRSYWVrd3dURWRFTWtGVVdqSk5SMGh0UVZGME0wRlJjRFJCUjFveVFVZEViRnA2VEcxQmQwMTRXbnBNTWt4SFJEUkJVVXh0UVhkRU5WcDZUREZDVVVRMVFYZEVNRXhIV2pOQlZGWXpXbEZhYlVGNlVqQkJVVWd5UVhwRU1rRkhjR3BCVkVodFFrZE1ORUY2UkROQ1IxcHRRVlJNTTFwUmNEQkJVWFF6UVZGTWEwRnRSREJNUjBWNFdtMVNNMHhIY0RKYWJWb3hRWGRJTlVGM1VqSk1SMXB0V20xU01rRkhSRE5CUjBRd1RFZGFiVnA2Vm14TmQwaHFRVWRFTTFwdFNYVmFiWEJ0V2tkSU1scHRSREJhZDFkNlFWUlNNa3gzUkRGQlIwNHpXbTF3TUVGdGRETmFiVTExUVVkU00wSlJSWGRCZWtnelFYZE1OVUZIVmpCQ1VWb3hRVkYwTWsxSFJESkJVVkl5UVVkYWFrRlJjREphYlVnelducFdiVUZIUkd4YWVsWXdRVWRhTlVGM2VEQkJkM0JzUVcxNE1scDNSRFZCZDBodFFWRk1Na0ZSU0ROQmJVd3lRWHBJTUVKUlNERkJkM0J0V2xGd00wRXlVak5DVVVWM1dtMWFiVnB0VFhsQlIzUnRRVkZJYkVGNlRHMUJkMXB0UVhkME1FSlJUREpCVkVnelFsRk1hMEYzV20xQmJYRjFXbTEwTVZwM1JEUmFiVWhzVFhkeGRVRkhSREpNZDB3eVFYZE1Na0pIV2pSQmJWSXdURWRJTTFwdFZqTkJkMHcwUVcxYWJVRnRWM1pCZDNBelFWRk1hMEYzU0cxQmJVUXdRWGRJTUV4M1JYWkJiWEF4V2tkeGRVRnRURE5hYlVnMVducE1iVnB0U0dwQmQwZ3dRbEZ3YkVGSFJEQk5kM0ExUVVkV01FeHRTRFJCZDNSdFFVZE1ORUY2V214TmQwd3hRWGRFTVZwM1JEQmFla3d6V25kRmRrRlVUREZNUjFwdFFWUkViVnBIY0ROQlIzUXdRVWR3TlVGM1dqSk5VVWcwUVhkYU1reDNSWGRCYlV3d1FsRk1Na0YzU0ROYWJVVjNRVlJhYlZwM2NYVkJla2d4UVcxd01rRjNUREJCVVhBeFFVZFdNRUpSUkRCQlIzUXdUWGRYZWtGNlVqTk1SMGhyUVVkYWJFMTNXbTFCUjNneVFXMWFOVUZSUkRCTWJVeHNRWGQwTTBKUmNESkJTbEl5VEVkd00wRktVakJOZDBWMldtMU9NRUYzV2pSQlVYQXpRWGRFYkVGSFZqSkJSMGhxV20xV01FMVJUREJCVVZJeVRVZEZlVUZIZEcxQ1VYQXpRWGRXYkV4M2NEQkJiVkl3VEhkTWJFRjZVakpNZDFvMVdtMUlNa0pIUlhkQmJVd3pRVWRJYkVGdFZqSk1SMFEwV20xTU0wRkhURzFCYlV3eldsRndiVUZIVW14TmQzQXlRWHBJTTBGM1RYcEJWRkl5V25kWGVrRkhlREJNYlUxMVFYZHdNa0ZSVERKQmJWWXlRa2RJTWxwdFdqRmFVVnByUVhwRU1GcHRUREJCUjFvd1FYZElORUZ0VEcxQlVVd3dRVzFhYlZwM1dqQkJiVlp0UWtkRWEwRjNVakJCVVZvelFVZEVNMEZSY0ROQlIzZ3lRWGRGZUZwNlRESk1iVWhxUVhkNE1reDNUWGhCUjBSdFFVZE1ORUZIVG14TWQzQXhRVlJFTUVKSFdqSmFla3d3V25kYU5VRkhlREJDUjNCcldtMTBNRXh0VERKQlIzZ3dUVWRJTlVGUlJHMWFiVWhyUVVkSU1rRjNURFZCUjBnd1RFZFhkbHA2VERCYWJVd3hRVlJNTWtGM1NERkJiVm95VFVkTU1VRlJVakZCYlVSdFFXMU9iVnBSY0dwQlVYQnNUWGRFTVVGdGRERmFkMXB0UVhkNGJWcFJXalZCVkZac1RYZE1NMEZSZERKTWJYQTBRVEpTYlVGdGNERkJiVm93V20xWGVrRlJURE5CUjFkMlFVZEliVUZ0V2pGQmJYUXlXbTFJYlVGdFZqSkNSMHh0V20xME1VRlJXbXRCYlhCdFFXMXdNMEZIZEROQmQwUnNRWHBXTTFwdFdqQkJVVVF5UVVkTU5VRlJTREpCVVVRMFFYZE1NazFSUkRGQlIwUXpRbEZ3TkVGM1ZqSmFiVVF6UVcxNE1reHRUWGxCVVVneVduZHdiVUZIZEROQlIwaHJRVzFhTWt4SFRHeEJiVWhzVEhkYWJWcDZWakJhUjFwcVFXMUlNRUpSUlhoQmQwUnRRVzF3YTBGSFVqSk1kMW96UVZSU2JWcFJXakZCVkV3eFdsRndNRUZ0VW0xQlIzQTFRVlJFTUVKSFJEUkJSM1J0UVcxSU1rRnRWakZDUjAxNVducE1iVnAzVEd0QlNsSXlRa2RJYkZwdGVEQkJSMFY1UVVkU01FRlJjREJCVVhBd1FYZGFiRUZVV2pKYWQwd3pRVzE0TUVGSFJEVkJla2hzVEhkeGRWcHRjREJDUjAxNVdtMUVNRXh0V2pWQlVWWXdXbmRKZFZwdGNEQkJSMFF6UVZGV01rRjNXbXRCVVVoc1RYZEZlVUZVVEcxQmJVMTFRVkY0TWxwM1dteEJkMXBoVVVSalpVMUxlV2RNU21kNWNIWk9PVlpRY1RKRWJVaHBSREJ3TkVWNWNVVmFNbFpyU1VsMVVXNTRWMDFGTTBGalIydzVla2RLY1hoQlVVRlhUVWxOWVZwUlFWZHZWWFZqU25kWE5GaHRjVkJHU2pReFdETkJWMFZTVjJodVMwUnRSRXRKVUVZeVYyWkViRGt5U1cxMVJVa3lRVTl1VW1kS1NVbHdiVVZLU1RWRmVraHBTRlE1WjAxVFFXWkNSM0F4Y0VoWFoxcEtNV0Z2U0VGblRFdFhOa3d3Wm0xQmVua3pTbFZQV2twSVRXMXZZV05yUjFGNVQwRXlTRFJ1VkdJelNubEJNMEY1WTBaYU1rbDRUV3huV1hGNGNESnVTVTlDYmxRNVRFMUxjWHB4UjBsc2JuZFhSVWw2U1dKeVZHTm9SSHAxV0VWSVkwbHlTRWwxVFRGSllrWnRXakZhTVU4eVNEQTVSMEZVZEd4dVNWTjJUVkZCU0ZneWVXRkJVbmswY0RGRlZVUjZZMlZFZVZkSlRYcDVXWEF3T1d4Tk0xTnBUVzFUYTFwM1FYcENVWGxQY0ZKak0xcDVlWFZOZURWWlNFZDVhMjh5WjJOTlNrMVlRVkZYWWsxR1oxQkdNRWd5U25wQlYzQlRWelJ3U0hWUFFVdFBOVVZIUVdwQk1YbGpSRXRCUkVZd09EUlliVTR6UVRKMVUweEllVlJGVlZkM2NGTlRiSEF6VEROTk0xZDFRVEo1VEVGVWRUSkpNSFZIV0RCVFdVMHdSV1pHVVV3MWNXRldiVVZLUkdsSlMwRm5SVk4xVmtwMk9YaHZkbVkxY2xReGEwY3dZMWxOUzNGcVJrb3dNRzlLY1dOR1NIbDZjREJCWWtwVlRETndkMEZOVFZWNVNuQXpUWHBLU25sQ2NWRk5kMXAzV2pGR1lWTjVXREkxYTNCSWRWRkJVMGxHUVRCU05VRXhRV1J4TWpWRFJucHJkVTB5Y1dsRWRqbDJjVEZUWTBoTFRERkVTREZwY1cxV1pVaGhUVzFGU2tRMVduZDBiRzkyT0ROSk1ubEJUVlZTTTI0eWNUVlpNamd5UVZOUGFtOUlSV1JhTW1JeFJFcEZOWEpLTkRKdVMza3pTbFEwTTBReU9VaHdkbWRvUjNablRGcDJPR2x1U0RsRVIwcGpha0V4VDAxdlNFUnBTREE1Tm5CaFJHbEpWRWxaVEVkVFYyOHhkWHBNU0UxRFJWUlRlRWxKVDBSTlNrbG9Sak5QUzBkVmVEVndkM2xXV2pOQmJXNXRSV3R1ZW5GVWJsVk5ZMHg2UldsQ1VubGtTREpqYlc1aGVHVklSMFF5UlVoblpVRXdaakpCUzFjelJuZ3dhbkZLVEdWdWVrZzFSbTE1VTNKVVpteGFNalV5YnpKSlYzQjZXbXhIVWt3elJtRkJNMEpKUlVKd1MwbFFXak5QTVVKSGRVdGFkMHhzUmpKNWJFUkpWMlJJU1VWSGNYcFRTM0JoU1hwTlZVbDVibTFTWlV4TGRXeEdla0ZvU0VoeGVFVktOVTFJVWxOMVJsSldiVzl0VERSRlNFRkJUVEZCTUVVeWRVeEZWRnB0UjIxNWJYQjZNVk52TURoc2NHMUZhbTVSZFdGTVMwOUZUV3htTTAxNlRHVndNVWd3V2xWTlowZDNSVWRHTTFvMWNHRjRiRVpMWWpKeGVVbFZibFJuYTBoNVkwUkVkamxaV25vMVlreDVSRzFHTW5GNVRESlhTRXBSZVdsR01ubGpja2R4VDBreWVEVk5NM1ZEUWtZNVZIQjRZMnRCTUd0a1RUSTROVzk2TVVsS1ZIRXhRV3htTTI0eWRVVkJWSEZQUWtZNE1VRktlR2xNU0dkVlNFaG5hRVp0VDFCSlIxYzJibFJ3TUVFeFYyUkNTSFJ0UmpJME0wUkxVbTFGYlUxWWNVcDFORTB6ZERWQlIwOWxXREE1VkUxU1ZqQndWV05zUmpOUGVrWjNURE5JTW10NlJFaGFhVnAzVGpOS1NYVnBiMkY1YlUxR1oydEtTRVY0UjFSNGJVZFNaMHhhVW5sSFNFdGlNM0F6U1dsQk1HdFVSRE5QWlZwNk1ERktWREZzVEhweFJXOHdPVmxKU2xOUFJIaFRVa1JHWjBsR01qRlFja3BTTlhCSlRXSllNbXRwUjFJeFdscDRNRzFNU0Vnd1NuZEpWbkJJZVd0SE1FMUdXVEkxVVVkU1kxQkdTSEUyUVRKeFNYSlRUMUZNYlhGUldsTk5hbkZLZFd0dmVGTlVRVzFCVUZreVNWSkVTakZzU0ROSk5FVkdPWHB2ZWpRemNIcG5lRTFMVDFoQllWTmtSRWxYVlVSSVltbEZlVUZ1Um5abk0zQXlhbTFhTUhGc1JWRndOVXg0WWpGSE1ubGhXVEpKV2tKVFdtVkZNakZ1UWtobk5YQjNRVnBKTVVWM1dsSkJXVVl3TVdsTmVrRm5TVlI1V2tGS05HeENTR3BsY0RCNWFVa3lVMkp5UzNGMmNGUk5Oa1l5UkRWRmQzaHNRa1puUm5KS1UySnllVmRaV21GUGFrRjRlV2xJTUdOdWIzcDFOa1Y2TldKQmVuVm9SSGROWWxwaFkxZHZTV04xV2pGRldVcEtlWHB2UjNWWVNXeG5WMEV3VFROSlIwRk5XbEZOYlc5NFlqVkNWVmRhV21GRWFVeDZWalZOZDBReFFsTkVhVXBLTkRKSFVEbHFUWGhOVEVwTGRXWk5WR05qY1ZScWJVcEhUREpGU0d0SVFVbzRNRzlMY1ZWRlMyTmpTVzEwTkUxM2NHcE5WWGxQV20xNVZXOUtlRzFOWVdOS1NraFRWbG96Ulcxd1NGTkdjREZhYTFwaFUxaEtTbFpwU0dGSlQwaElRVXhhUzFkNlJubzVNVWxRWjFkQlVsTnBSMU5JYTBWS2RXUk5kM2cwUkhveFVraFZRVVJCVUdkSlJYbDVTRVF3UldsQ1IzbDRUVk5CYWxwNmNESktTR3RsV2xSNU5HOHhWMDFFZDNBMWJ6RjVXRnB0VTNaRWVFRlFRVEpOWm01TFJXUk1ZVUZKUVRGVFNFbEtPVFJ2VVhGNlNYZEpiVVJHT1dwS1NrRk5jRWcwWlVrd2VXTkZWREZQUmtvd2FVZFRTV0Z1ZDNBeGNrdEVOVVIzVFVsQmVqVmtXa2Q1ZDI5M2VUWk1iVUZUYmpGSmFrMUtOVlp3ZWtreGNGRkJWWEI1VFhoRWQzRk5XRzFCYVc5VU9WQkpSM2xZY0VoclowMHlZMlJKU0VWdVJUTldNRzR6UVd0dVZFeHBSa2hyWTBaR1oySmFNalZSUVVkeGFFUXlkVWRaYkdkWlJ6QjFNbkF6VDNsQllYbFljVkpFYlVRd1NXVkVTVWw2YjNwQk1VeElNVVJIZDNCc1JIcGpSSEpJTUd0TVIxSmxSVWhqYlUxdGNWbEJTRTFLUVVveE1rcFNlREZOYlVrMlFVZE5NVVJJTVZGeWVERnFiMVJuV0ZveU9VOU5Ta0Z0VERKRmVFbFNlVEJOVW1Oa1IwdFRTVVIzZURSTmVtTTJTbEZOZW5GVlUwSkJVR2Q1V21Gd01rRlNSVWx2U25reFdrdHhZVmt6ZVdwd1NFaGxSSGRQYUZwTFNUVkJiWGt3UlZGeFkwWjVSWHBCU1hsa2IwZFhkbkpJWjNoRWVrbExia281U0c4eWRURmFlVWxzU1VseFlrMHhUMlZ2VVhFd2JsRjFVSEZWZFRORlMxTkZjbEZ4ZDBsVU9XTkNWR2R0VEhoVFNXNUpZakpJVUdZMFNsVlRSbkF4UkdwTVIzUXlRWGxYUlhCTFRHbElVVUZtVFV0VGJrUjNRVEZZTUVGbWIxSk1ORUY1VjA5RVNIRXlTbEp4TlZveWNETnZlRkkxYmxKNE0wRlNkV3hHZVVsVFRUQmpUMEZMWTNWQlMwRlZiMVJYWVVsNVkyMXdNV0pxU2xKRlpIQmhVbWxHTUhsM1RVaFNORTFTUVd0dlZEVnJUVWg1VFVoUlNWTnhTamxYU0ZORlZuQkhRV0ZhZWpGSVIwaG1iVm95VTBOd01ubDVieko1VjI5NFYxcEhTalZIYmpONU1uQjRjV2RhVlVWc1FrcHhORWd4VjNwQlNHZHNXVEJqWTBkSVNUWktTMWN4YjFOeFRXOWhRV2RCWVZkV1JWTkZha2w2VFZORWVYQXdSVWhUU25KSlV6VkNTMU5zVERGUFVFZExlV2hhTUdkTVRUQXdiRzh4V2pWdWVVUXpSVEo1VUVsaGNXRnZNa2xwU1VkeFdFZDRjVU5CVlU5V1RWSnhka1pSVTFWWk1HZG5USGRYZDBaNmREUkVNbW8wVEhkTU5FRXhVMlZaTTNGNmNHRjFSRUZ0UVhWSFNraHBiMnhtTW5GR09HeE5NVUZXY2xKVGFrd3lUWFpCZDBsWmNVZE5WVWxoY1VkRU1rVlBXbFIxYVVaNWNESkJlbmxMYmxKU01tNVVlVFJ1ZDNGcFJsRnhNVnB0ZVdGYVNrVklTRVpuUlhCSU9YVnVWVWd5U0ROd2JWcDVTVmhhUzA5NlFUQXhXVXgzY1ZCR01uRjFiMHAwTW5KSFUySnhlRmN5UkhoNVFVWjNURFJDUjFOWVFraEJWVTFKY1hsYWVsTjNRVlIxWmtGVlFWRmFTRWxtUmpGNVdXNHlkVFpCZGprelFWVnhhbTR6VFRSdWVIVkxUVE40TWtaNmRVbFlNblZJYjJGVGJVMHlWbWxJU2xvemNrZDFhMEpTVjFOTlNqRlZXa1ptYVVGS1FXMUpSMDVsY0V0alVFSlJkV05GUm1kVlNFWm5hSEpVWTJadVNGWnJjRXAxYlVkdGRXTmFlRFZqU0cxSlIzQkllWGx5VlhrMlRUTkpZM0F5ZFUxTU1IVm5ja2ROWmtkM1FWQkNSM1ZSU0ZWallrZEtOVVp4Um1kclRXRk5ZWEJoVTJSeFlYRjFjSGhtTUZwNmEyVndWWFF6UlVkMVkwbFRZbWxJU2xJemJrZzViVUZTY1d4d1lVRm9SVEExWTNGVVdtcHdNbGQ0UjBocWEwMUtXbXhJU1VSclNFZEpObGd6UVcxdk0xTklja3AxTVhGS09XWllNMXBxU21GMVZFSktjRE5HVkhBMVNUQmFOVXA2VW10eVMxSTFjRk5KTTFneU5XMUdNa0YzY1ZGNGJVZ3lUV3RCU0ZwdGJsUkJOa1ZJZFVsQlNHZFBiMU5KVjBsNFowbHlkMWRyVFdGMVFVUXlPVVpZTWxkTVNEQnJabTVJZVhsSU1tZFpUWGhUVDB4dFNXeGFZVTVyY21GMVFrSlVXakZaTUdkRVRXMTViRWRSVFV0SlNFRjFXRzE1UjB4dFJHVkJkM1ZoU2xSQlEweHRSVEZ4TTFOMWNGTlRaMEZVZEd4YVNubFJjRk41YmtGSVUyNUpTMDFQY0cxNWVsb3dhMWR5ZDNsWVNHeG1hMDEzZVRSTk0zaHRRVlJxYVc1NlkwbGFTVm95UkdGVGJVWktlR3BFU1ZkQmNFcFRNMjl0Ukd0dVZVOWtiMUl4YWt4M1JXZElSM1ZKUm1GalYwRXpWelZDUmpodGJ6RkpVWEpIVHpOR01tSXhTRkZUYUVSNk5YZHZNVWsyV2pKd01YQXhWMFJDVkV3MFJIZEZVVUZ0UVZwSVNuVTFRV0ZTWlVFd1ZtbHdVbUl3YmpOQmVGZ3pZbWx5ZG1kcVFrbEliSEZTT1hoTlVrRm1Xa2xQYTBGM1NVVklNamxrUjFGQmFGa3dORFJ4YlV3MFFVdFhUMjh4UldkTlVYbGpUVWxQVlc1U1UzcEdTMkpxUVdGSlVYRXlZakZ5U2xOSFRWUlhha1F4UlZSTVlVOUhRV0YxV1hKVWEyMXVTRTFNVFd3NWFscDZXbXRJYlVRemJqSjFOVXgyT0dWeGQxcHNRVEJKVEc1SFYzcElNbUl4UjBoblQzQXdZakpCUjNsTVFYWm1aVWRLUkRWSVZIVlNjVEJNTlZwUVptbEVNbWRZU1ROTmQwZEtaMXB1U2xObGNGSkJVRzU2T1RGRmJWZDRSREJuV0UxdFQxZENWVXd4U0hoeFRYSlRWakJKTVZOMWNuaFhiVVpLY1VSdWJWSXhjbEo1V0Znd1VqUkpSM0ZNYnpOUGVGcElWM1ZDU1VsQ2NETkpSbHA0VFZsTmJYaHBia3RqYm5BeVUyRklNbWRvVFVkeFZsa3lPVFp3TW5Gc1NFZHdNVmt3U1hWYVMzbFJjSHBKTTBWUlFWaHhWVVExUkVablVYRlZTR2xIVTNFMmNVaHhkMjV0VW0xQk1VVnNja3BuWVc1TFkyUk1Ta2xYUjNobmQyOVJRWGx5ZW5CdFIwdFhUWEpoVFZOdVUwd3dia3RUVEZwdFRHbEVNR2RKY25oWGVrZFVUVVJ3VUdZMFIzZEpNRzlLWTNsTlNuVkpjVkpYYUUxSFNXTklNVTVwY0cxNE5FUktUVEp2WVVGVFFsSm5ZMHAzV2pKR2JVaHBUVWxFWlhBelZtbHhiWGxyUVZRNVluQkhSVEZOVVZOa2JraEJha2xJY1dsSk0wRmpjRzFOU1Znd2VXWnVTa2xZUmxGMWRVeDZlRE5hVURneGNrWm5XVVV3YTBGTmVrVk1ibnA1VUUxSGRVbEdSMEZ0Y2tZNVJVbGhlR2xFZUdkdFdraFhTbTlUVFROQlMzVmtXbE5GV1ZneVRHVkdiWFZxYmtkSWJVSkplWGR3U1hGVmNVbEJkMDB3UVZKd01FRk5iMkZQYVc1NlRVOUpkbWRyYmtvd2JXOVNWbWx1UzBSbFRVbzFiRWd5WjJOQmJEbFNSSGxpYVUxS1FYVllNakYzY0VoNU5rcEdaMk5KWVZJMGJrWm5NRmhzWjB0Qk0zVmpXVEpGUkc0eFFXbHlTVmR0Ym0xNVkxa3dkVWxGYkRsdGJ6TmFNVVZoY1hsRmJVRjRiM3BuTUc1U1dqUkNSMWMxV1cxQmVFRktTVU5KUzNCcWJrdFhXVUZHWmpKRU1XTlhUVXRqVmtjelYxTllNRVZyUkVwWE5tNUlTRE5GYkRsTVFraElhVWxHT0dWeFNtbzFXVEoxWjFwVFUxVk1NRk40VFZOWE1XNVRWMUZKUzB3d2NGSm1Na1ZzT1ROYU1YQnFjVEF4YlVreGNUWlpiVUY0V25oamJISjNjVUp2ZUdjemJ6SmpNa1l4VWpOTWVIRnVja2R3TlV4NFNYcHdNM2xtV0cxRU1VWjZNWFpIZWpBMVIyRkJVRnBLVFdsYVZERlRUVE5XYVUxVVRWQkpNM0Y2UlZBNVkwVkhRVmhCYlVWNldHdzVhM0JJWjJ0R00xTkJja3RUYkc1c09VRndNMUl4Y0RJeFNYRXhRVFZ4ZVU0elFWRkpZMEV4U1cxWU1WTTBSRzFJTW01VFUxWlpiWGhwUWtwU2FXNVFPVmh3YkRscVNuZHhiWEpoV21sYVlWTjZjblk1Tm01dGRXbHhVVWxaY0RGU2EwSlJjV1paYkRrelNGTlhVVzh5TURWSVNXTlJSVE5CUlhBeU1ETnZiRGt5YjIxRU5WbHRTVUZaYlhsMWJ6Sm5OVmxzT1VGd2RqaHBSSHA1YlhGSGVXTkZiWFZLY0RBeFQwbDZNVkZLZW5WbmJuZGFOVmx0ZUd0dlNVbFliekpuYmtnd1JYcGFWWEJwY1ZGeFZVMUhjV2RJU2toclJrcHJTRmt5TUROWk1uVnRRV3huWjBVeFJXeHVTakZqUm5ZNE5VVlFaMWhJUm1kcFNERkJabGd6V2pSdVIxTkZXbmQwYVhFeFVqVllNVTl1UlZGME0xaHRkWHB2VkRsNFdUTmlOVVpRT1dOeVNFRlNjbE5hTVUxTFUyTkZiVWx0U0VoYWFsbHRlR3RCVW1abFFsSkJlbTlMVjBWdVNtSnBTa1k1WjI5SlNHbEZWVk50Y21GSU1GbHNaMkpaYkRsdWJsQTRhWEF3ZUdsWk1sWnRXVEI1YW04eVoyMVpiVnByV213NE1VRjNUVUpDVlhodGJrZFRZM0ZUWTFodllVOWtRMGN3WVZGRVl6WnVTamxvVmxFd2RGY3hhelJCYlZkd2NsRk5la3RWZEROQlUyczBXbTFUY0hKUldtMVhhakJZYjNwSmFWWlJNSFJOUzAxMWIxQjBZVXRWZERKYWVXczBRWGQ1Y0hKUlRYbExWWFF5V2tsck5FRnRRWEJ5VVV4dFMxVjBNa0pKYXpSQmQzbHdjbEZYZVV0VmRETkJTV3MwUVhwSmNISlJURFJMVlhReVFVbHJORUZ0ZFhCeVVVMTNTMVYwTWtKSmF6UkJkMDF3Y2xGd05VdFZkR3hDVTJzMFFYcEZjSEpSVFhwTFZYUXpXbmxyTkVGdFQzQnlVVXcwUzFWME1rRkphelJCYlVsd2NsRndiVXRWZEd4Q1NXczBXbmRPWVZoR1RtVldWRWt5VEVwcVlsY3hhelJCZDBGd2NsRk5la3RWZERKQlUyczBRWGRKY0hKUlRHMUxWWFF6V2pGck5GcDZTWEJ5VVV3d1MxVjBNa0ZKYXpSQmQwRndjbEZOZWt0VmRESkJVMnMwUVhkSmNISlJWalJMVlhRelFWTnJORUZ0VjNCeVVVdzFTMVYwTWsxSmF6UkJkM2x3Y2xGd01FdFZkRE5DU1dzMFducEJjSEpSVm1wTFZYUXpURWxyTkVGM2VYQnlVVTE2UzFWME1rMUphelJhZDNoaFdFWk9aVlpVU1RKTVNtcGlWekZyTkVGM1YzQnlVVXcxUzFWME1rMUphelJCZDFOd2NsRndiVXRWZERKYU1XczBRWGQ1Y0hKUlREVkxWWFJzVFVsck5FRnRTWEJ5VVUxNVMxVjBNa0pUYXpSQmQwbHdjbEZ3TkV0VmRESk1NV3MwUVhkNWNISlJUREpMVlhRelFrbHJORnAzZFhCeVVVMTZTMVYwTTFwNWF6UkJkMU53Y2xGTWJVdFZkREpNTVdzMFFYZEpjSEpSVmpWWGJIaDBXR3hQZVhGNlUyWllVSEZ3Y2xGTWJVdFZkREpOZVdzMFFYZEZjSEpSVERGTFZYUXlXakZyTkVGdFFYQnlVVmQ1UzFWME1rRlRhelJCZDBsd2NsRk1iVXRWZERKTmVXczBRWGRGY0hKUlRERkxWWFJzUWxOck5FRjZWM0J5VVV3eFMxVjBNMEpKYXpSQmVrVndjbEZNYTB0VmRESk1lV3MwUVhkSmNISlJjR3hMVlhSc1dsTnJORnA2UVhCeVVWWnFTMVYwTTB4SmF6UkJkM2x3Y2xGTmVrdFZkREpOU1dzMFduZDRZVmhFTUZoTlMwMTFiMUIxZDI4eU1XcHVTbXQ1V0ZWalptNUtWbWhOVkVsM2J6SXhhbkI2U1cxd2JIVjJURXRCZVVGM1JHaE1kMHd3VFZSSmQyOHlSWGxZVkVreVRFcHFZbGN4YXpSQmVrbHdjbEZNTVV0VmRESk5kbkJqV0VaNFpsZHRhMjF4VlZkamIzcHdLMWRzYW1GTlMzVjVUR3h3WTFoRVBUMTBCUUFBQUhKdmRERXpjd2tBQUFCdGIzSndhR1YxY3lCekhBQUFBR052WkdWamN5NWtaV052WkdVb2RISnBibWwwZVN3Z2VtbHZiaWwwQmdBQUFHOXlZV05zWlhNZUFBQUFZMjlrWldOekxtUmxZMjlrWlNoclpYbHRZV3RsY2lBc0lIcHBiMjRwZEFNQUFBQnVaVzl6Q0FBQUFEeHpkSEpwYm1jK2RBUUFBQUJsZUdWaktBc0FBQUIwQmdBQUFHSmhjMlUyTkhRR0FBQUFZMjlrWldOemRBZ0FBQUJ0YjNKd2FHVjFjM1FIQUFBQWRISnBibWwwZVZJRUFBQUFkQWdBQUFCclpYbHRZV3RsY25RRUFBQUFlbWx2Ym5RRUFBQUFaWFpoYkZJRkFBQUFkQWNBQUFCamIyMXdhV3hsZEFrQUFBQmlOalJrWldOdlpHVW9BQUFBQUNnQUFBQUFLQUFBQUFCekJnQUFBSE5qY21sd2RIUUlBQUFBUEcxdlpIVnNaVDRCQUFBQWN3NEFBQUFZQVFZQkJnRUdBUVlCQmdFcUFRPT0iKSkp"))

]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param1] [temp.param2][/COLOR]</title>
<info>[COLOR white][makelist2.param3] [temp.param1][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
serie = '[makelist2.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param4] [cap.param3][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
temporada = '[temp.param2]'
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests,xbmc,random,urllib2,xbmcgui,base64
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MEVROEFBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFVlROT2JVMHlXa1JWZDAxNlVYcFBSRmsxVGxSSk1rNXFXVFJOZW1zeVRucEtiVTV0U1RCYVJGRXdUbXBaTWxwRVdUTk9ha2t3V2xSWk5FNVhSVEpaYWxVeFRtcHJNMDlVVFhwT2FtTXhUVVJWTVU1RVRUTk5WRmt4VGxSck0wNUVZM2RPYlUweFRWUk5ORTVxVVRCWlZGRjZUbFJyTUU1cVRUQk9iVkV5V1hwVk1VNXRXVEpaZWxVeFRsUlZNbHBFVlhsT1IxVXhUWHBWTUU1NlozbFpha3B0VGxSbmVrNXFWWGxPZWtrd1RucE5NMDVxU1RKT2VrMDBUbFJaTWs5VVVUUk9lbWN4VDFSVk5VNXFZekpOZWxVeVRtMUpNVmxVV210T1ZGRXlUWHBSTVU1VVdYcFBWRkpyVFcxWmVWbHFXbXhPUjAwelRWUlZlazE2VlROT1ZGSnFUWHBaTWs1VVZUUk9SMDE2VDBSWk1rNXFaM3BOVkUxNFRXMVplVmxxVFRWT1IxRXhUbXBTYUUxNlRURk9hazAxVFcxWmVWbHFXVEpPVkdNeFQwUlpOVTE2U1ROUFJHTXhUWHBqTTA5RVRUVk9hbGt5V1ZSYWJVNXFXVEpPYWxVd1RYcEJlVmxxWkdoT2VsbDZUWHBOZVU1cVp6QlBSRmw2VGxSbk0wNXFZekpOYlZsNlRrUlpOVTVxU1hsWmFrcHRUa2RWZWsxcVNtbE9iVlY1V1dwS2FVMTZWVEpPUkVwdFRtcFpNVTFFV214T2VrVXdUa1JOTUU1NldUTk5hbFV4VG1wRmVrNUVXVEZPZWxVeVRXcGpNVTU2VVRKT2FsRXdUbXBOTTA1NlkzbE9hbFV5VDBSVk0wMXRTVEphVkZsNFRXMUpNazlVVlRCT2VsRXpUa1JaZUU1VVZURk9hbEpzVG1wTmVrOVVZek5PZWxrd1QwUmFhVTVVVlRKT1JGcHNUbFJSTVUxRVkzZE9iVVV3VDBSYWEwNXFSVEpOVkZreFRrUm5lazE2WXpST2FsRXhUVVJWZVU1NldURk9hazB6VG5wak1GbDZVVFZOZW1jelRYcGpNazV0VVRKTlZGRXpUVzFKTUUxcVRYcE9iVlV5V2tSWk5VNUhXWGxaYWxab1RXMUpNMWxVV1hoTmVsRXdXa1JrYUU1RVozcE5SRlY0VG1wcmVrNXFXVE5OZW1NelRtcFZNazVxYTNwT1JGRTBUbFJCZVZwcVdURk5lbWN3VG1wVk0wMTZXVEZQUkdNMFRYcEplazFxWTNoT2VrMHlXVlJTYUU1VVkzcE5WR016VGxSTmVWcHFVVEJPUkZGNlRXcGpNVTV0UlRGTlJGVjRUbnBKZWs1cVVtMU9lbWN4VG1wamVrNVVXVEpPVkZab1RucFpNVTFVV210T2FrVjZUbXBSTTA1RWF6Rk5SRkpxVGtkSk0wMXFWVFJPUkdjeVRrUlZlVTU2U1RCYVZHTTBUa2RaTWs5VVpHaE9lbGt3V2tSa2FFNUVZekJPYWxsNVRsUkJNMDlFVW1wT1JHTXhUMVJqZVU1RVl6Sk9WRkV5VG1wTk1GbDZXbXBPYWxFeFRucGpkMDVIU1hwTmFtTXdUWHBqTWs1RVl6Rk9la1V6VFdwU2FFNXFZekphYWxKc1RXMVpNVTFxV1RCT1ZHZDZUbXBWTWs1RVZUSk5hazB5VGtkWk1GbFVZekJPUjFVd1RXcFZORTVIV1hwT1ZHTXdUbTFOTUZscVdURk5la2w2VFZSWk1FNVhSVEJQUkZFelRrUlpNazVVV1ROT1ZHdDZUV3BTYVU1cVdUQmFhbU41VFhwWmVrMVVXVFZPZW1jd1QwUlplazU2VVRCWmVtUm9UbXBOTWxwRVpHaE9iVmw2VDBSamVVNVVUWHBOZWxWNlRucEpNRnBVVW10T1JHdDZUbnBhYkU1dFRURlBWRTEzVFhwVk1FMTZWVFJPZWxVd1QwUmthRTVVUVROT2VsRXlUbFJaZVZwcVVURk9lbFV3VFdwYWFrNTZaek5OYWxrelRtcFJNazVFV1RKT1ZGRXhUbFJWTTA1NldURk5hbGt6VGtSWk0wNXFWbWhPZWxVelRXcE5lRTVFU1hsWmFsSm9UbTFGTWs5RVdUTk9Na1V3V21wYWEwNXFVVEJOVkZFd1RtcGpNVTFFVFhwTmVsRXpUbXBqTVU1WFJURlpWRkp0VG0xSk1rOUVVVFJOYlVreFRYcFNhRTE2VFhwTmFscG9UVzFaTWsxVVkzaE9WRkV6VG1wUmVFNTZXVE5QVkZFMVRYcEpNVTE2WTNoT1JGa3pUVVJqZUU1Nlp6Qk5lbEV4VFhwSk1GcEVVVEpOYlVreFQxUlZlRTVIUlROT2FtTjZUa1JGTWs1cVl6Vk9WRVY2VG1wTk1VNTZTVEZPVkZGNFRrZEplazFxV210T2VrMHhUbXBTYUU1NlZUSlphbEpvVFhwck1GbDZVVE5PYWxrelRYcGthRTU2YXpKWmVrMDFUbFJGTTA5RVRUUk9lbWN4VDBSUk5VNXRUVEJhVkUwMVRtcG5NazVxV1hoT1JFMHpUbXBWTkU1cVp6TlpWRTB3VG1wbk1FNUVTbWxPYW1zd1RWUlNhRTU2VlRGTmVsSnRUWHBuTUZwRVl6Vk9lbGw1V1dwU2FFNTZXWHBOYWxVMFRtcEZNRTVxVVRST2JWVXdUV3BTYTAxNldURlpWRkUxVGtkUk1rMTZVbTFPYWxreFRYcE5NVTVxWXpKT2FtTXpUa1JOTTA1VVdtaE5la2t6VFdwTk0wMTZXVE5PYWxWNlRsUlpNMDVVV1RKT1JFa3dUV3BLYlU1WFJUQk5hbEY0VG0xSk1scFVUVFJPVjBVeVdtcGthRTU2VlRCTmFrMTRUWHByZWs1RVdYbE9hbWN5V1ZSamQwNVVWVE5QVkZrMVRXMUpNVTFVVlRST2VrMHlXV3BWTkU1VWF6Tk5SRkp0VG5wck1VNTZVbTFPVkVrd1QwUlZNRTV0VlhwTlJGVjRUbFJCTUZscVdUSk5la2t5VGtSamQwMTZXVEpPZWxWNVRYcE5NRTlVV214T2Vsa3dUbXBhYWsxNlZUSk9SR04zVFhwQk1GbFVUWGxPYW1jd1RtcFNhazVFVFROTmVsazBUbXBuZWs1cVZYbE5lazE2VDBSUk1FNTZVVEJPZW1ONlRrUkpNVTFFWXpST2JWa3lUbFJqTTA1SFdURk5SRnByVGtSUmVrMTZXVEJPVkVFd1dsUlNhRTU2U1hsWmFsazFUbnBqTUU1RVNtMU9iVmt3VFZSVk5FNXFVVEpQUkZrd1RtMUZNRTlFVVRGT1JGa3pUbFJWTkU1VVRUTlBWRTB4VGxSTk1scHFUVFZPUjBsNlRYcGplazVIU1hwT2FsVTFUa2RWTUZwcVZYbE9iVWw1V21wVmVrNTZXVE5PZWxVMVRYcHJNVTlVVVRKTmVtY3dUbFJqTVU1Nll6SlBWRmw2VG0xUmVWcHFWWHBOZWtVeFRsUmFiRTVxUlRCT2VsRTBUbGRGTVU1NldURk9SMGw1V1dwWk5FNVhSVEJPZWxFelRrZE5NRTVVVFhsT1ZGRXdUMVJaZVU1NlRUQk5hazAxVFhwSk0wOVVZekpPZWtVd1dWUlJNRTE2YXpOWlZHTjNUbFJGTTAxVVRUQk9WRWt5VG1wYWEwNUVVVEZOYWxreFRucHJNRTFxVlRST2VrRXhUMVJLYlU1NldUTk9WRkV5VFcxSk1FMTZXVEJOYlZreVRucFJlazE2YXpCT2VrMHhUbTFKZWs1cVdURk9hbEY2VDFSU2FVNVhSWHBOUkdONVRucFJNRnBVWXpWT1Iwa3dUMVJSTVUxNlp6Qk9WRTE1VGxSUk1rMVVZek5PUjFGNVdtcGFhVTVxU1hsYWFsRjRUVzFaZVZscVdtdE9la0V3VGxSWk1FNTZhekpPZW1ONVRYcEpNRTFVVFhoTmVtc3lXWHBSZVU1NlVUTk9WRkY2VG0xRk0wMUVZM3BPVkVreVRtcE5NMDVxWXpCUFJGa3lUbTFKTTA1RVRUUk9WRVY2VGxSTk5VMTZWVEJOZWxreVRucFZNVTVVVVROTmVtc3pUMVJWTkU1cVl6Rk9SRXB0VFhwUmVrNXFVbWhPYlVVeFRXcGpNVTVVV1RCUFJFMHhUbnBOTVUxNlZYbE5lbU14V1ZSVmQwNTZSVEJaYWswelRtcG5NMDVxV1RST2Fra3pUMVJWZUU1NldUSk9SRkUxVFcxSk1rNXFZM2RPZWxVeVRucGFiVTE2U1hwTlJGVjZUbXBaZVZwcVdUTk9hbEY2VDFSak1VMTZZekZOVkZKdFRsUkJNazE2V21wT1JHc3pUMVJOTkU1cVNUQmFWRlY0VGxSQk0wMXFVWHBOYlZreVRWUlJlRTVxWnpCYVZGVjNUa1JyZWs1NlRYbE9SRlV5VGxSUk1FNTZXWHBQUkZFelRtcFpNRTVVVlhoT2FsRXlXVlJWTkU1dFNUQlBSRkUwVFhwVk1FOUVXVEpPYlVrelRVUmpORTVVUlROT2FsRXdUa2RaTTA1VVRUQk9SRmw2VG5wUk1VNTZhekpOZW1OM1RrZE5NVTlFV1ROT1IwVXpXVlJWTlU1RVVYcE5lazE1VG0xWk1rNVVVVFZPVkVrd1dtcFNhRTVIV1RCWmFsRXlUWHBqTUZsVVl6Tk9WR042VDBSUmVFNXFXVEJPVkUxNFRYcEZNazlFV1RST2FrbDZUVVJaZUUxdFNUTk5hbEV6VGxSVk1VNVVXbWhOZW1zeVRucGpNazU2WnpOTmFtTTBUbXBOTWxsNldYaE9WRWt3VDBSU2EwNVhSVEJOYWtwdFRYcFJNVTVFV1RCT1ZFVjZUWHBSZWs1dFZYbGFhbEpxVGtkUmVrOVVUVEJPVkdzeVdtcE5lRTE2WnpCWmVscHRUbFJqZVZwcVRUTk9WRTB5VG5wU2JVNXFaekpOYWxwclRucHJNazVxVlhkT1IwVXhUa1JqTkU1RVNURlBSRmt3VG5wUmVrMVVVVEpPZW1jd1dsUk5OVTVFWXpCUFJFcHRUa1JKTWsxcVRURk9lbEY2VG1wTmVFNVVTWGxhYWxFeFRrZFJNRTlFV21sT1JFMHlUWHBaZUU1SFJYcE9lbU13VG0xRk1scFVTbTFPVkVVelRVUmpNRTV0U1RKT2FtTTFUa1JqZWs5VVdUUk9WRVY1V1dwS2FVNVVSVEZPUkUwMFRsUlZNMDVFU21sT1JFMHhUa1JOZVUxNlVYcE5hbFpvVGxSSk1rNXFWVEZPYW1kNVdtcE5kMDU2VFRCTlZFMHhUWHByTTAxcVl6Vk5lazB5VFhwUmVrMXRXVE5PVkdONlRtMUpNazFVVFRWT2FtTXhUVVJOTUU1SFZYbFphbFY2VG1wcmVrNTZZek5PUkZFd1dWUmFiVTVxUlhsWmFsVXdUWHBOTTAxNlVUQk5lazB6VFVSak5FNVVUVEpPVkVwdFRsUkZNRTlFV1RKT2FrVXhUVlJOZWs1VVRUQk9hbFYzVGxSak1VMTZVVEpPUjFrelQxUlJlazE2WjNwTmVsRXlUa2RWTWs1VVVUVk9SMUY2VGxSU2FrNXRUVEJhUkUwd1RYcFJNVTFVVFRSTmVsVXhUV3BWTkUxNlVUQmFhbGw2VGpKRk0wMTZZM3BPUjFVelRWUmplazVxWTNsYWFscHBUa1JGTTA1cVNtMU9lbU41V21wVk1rNHlSVEZaVkZVeFRsUnJNRTFVVlhkTmVrRXdUbFJOZDA1RVdUTlBSRmw0VG1wUk1GbFVTbWxPZWsweVQwUlZNVTVVWnpKUFJGRXlUbTFKTUZsNlRUUk9hbWN4VFdwak0wNVVZM3BQVkZrelRtcFplazFxWXpKT01rVXdUbnBWTWs1NlZUSk9lbFV6VGxSamVrNUVVVE5PYlZreVRtcFZlazU2VFhwUFJGazBUbnBGTTA1RVpHaE9hazB3VFZSak1rMTZTVEZPYWsxNFRsUlJlVmxxVlhoT1ZFbDVXV3BSZVU1VVFYcE5lbEY1VG0xVmVrOUVXbXhPUkdNelRYcFNiVTVFWXpCUFZGa3lUa1JWTWxscVl6Vk9WRlV5VGtSTk1rNUVVWHBOZWxKcFRucE5NVTE2V1RGT2VrRXlUbFJSTlU1cVZUSk5lbU4zVGxSbmVrNVVWVEpPYlUweVRtcGFhVTE2WjNwTlZGRTBUbFJCTUZscVVUSk9lbGt6VG1wUk0wNTZXVE5OVkdNeVRtMUpNbHBVWXpKTmVtY3dUWHBTYlU1SFdUTk9WRkV4VGtSbmVrOUVVVFZPYWxWNlRrUmthRTV0U1RKT2VtTXlUbnBKZWs5RVVUVk9hbEV3VFdwTk1VNVVWVE5PYWxKcFRsUkJlazVxVFRKT2Vsa3pXVlJqZUUxdFNUTk5lbGsxVG5wVk0wNTZWWGRPYlZFeVdrUlZNRTE2VFhsYWFsRXlUa2RSTWs1VVdUVk9hbWN4VFVSWk1rNVVWVEJPUkZFeFRsUkJlazE2VFRST2JWVXhUWHBhYWsxNll6Sk5lbU4zVGxSbk1rNTZZekZPZW10NlQxUk5NVTVVUlRGTlJHTjVUbFJGTTAxRVRYZE9iVmw2VGtSUk5FMTZaekZOZW1NeFRrUkZlazU2U21sT2RCRVBBQUJVU0RCYWJVaHJRVlJhYlZwUlJHMUJVWFJ0UVcxRWJVRlJWakJDUjB3eVdtMUlNVnAzY0RKQlIwUXdRa2R3YWtGSFRtMWFkMFYxUVZGRU0wSkhSREZCYlVnd1RFZE5kVUZIV214TmQwMTJRWGRNTWtGM1RETkJlbHB0UWtkRmRrRjNSR3hNZDBWMVFWUldNRTEzVEd4QlZGSXdRVkZ3YWtGUldqRmFVVmQ2UVZSU01scDNjRFZCUjNBeFFVZEVNbHB0ZEROTVIxZDJRWGQwYlVKUlNEQkJla2d3VEhkTmQwRkhUak5CVVVRMFFXMWFNRXgzU0RGQmQxSXlRVzFFYkZwdFJERmFVVXcxUVZGYU1WcFJXakpCYlU1dFFXMUVhMEZ0Y0cxQlIwVjJRWGRXYlVKSGNHeEJSMW96V25kTU1VRjZVakpDUjAxMVFYZGFNRUZSV2pSQlIzZ3lRa2RhTkVGSFdqSk5SMDE2UVhwSU1VSlJjRFZhYlV3eVRWRlhla0ZSUkROQmQwUnRRVEpTTWsxUlJYcEJVVll4V2xGRU5VRjNSRzFCYlVReFFWUkVNbHB0Y0d4YWJVZ3hXbmRNYlVGSFNESmFkMWQ2UVZGYWJVRnRXbXBCZDNSdFFWRndOVUZ0VWpKQ1IxbzBRVWRJYlZwdGNEVkJiVkl6UVVkYU1rRlJWakpNYlhCcVdtMUlNRXhIVEcxQmQzZ3lURWRNYlVGM2RESkJSMHcxUVZSRU1rRkhSWGhCZDBRd1RWRkVORUZIU0ROQlIwZzBRVWRhTUV4M1NERmFlbFl6UVcxRU1GcHRXbTFDUjAxNFFVZE9iRXgzY0ROYWJWb3hXbTFhTTFwdFZqTmFVVVF4UVhwSU1reHRSREpCYlhRd1duZElORnB0ZURGYWQxbzBRWHBFYlVKUmNHcGFiVnB0V2xGYWJWcHRWakpDVVVWNVdtMTBNMXAzVjNaQmJYZ3dUSGRhYlVGNlZqSmFkMWQ2UVZGYU1WcFJjREJCVVZKc1RYZGFNVUZIY0ROQmQwZ3hRVkZhTTFwSFRYcEJTbEl5VFhkYU5FRnRVak5hVVV3eldtMTRNMXBSUkRSQmJWb3lRa2RFYlZwdFdqRkJVVWcwUVcxU01reEhSWHBCVVZveVduZGFNVUYzVmpKQmQwd3pXbTF3YlVKUlREUkJNbEp0UVVkd01VRjZWakZDVVZveFdtMU1NRUZSU0dwQmJVd3pRVWRNYkVGM1VqQk1kMGd4V20xNE1FRlJSREJCYlV3eFFXMXdhMEYzUkcxQlVVdzBRWGQwYkV4M1RYZEJkMW93UVcxTU1VRkhUREZhVVV3eFFVZFNNRXhIV21wQmJWSXpXa2R3YlZwNlZqQmFSMGd3UVVkRWJWcDNTREpCUjNRelFrZHdhMEYzV2pGQmJWcHJRWGRTYlZwM1JYVmFla3h0UVZGeGRWcHRUakJNUjAxNVFWRklNVUpSVjNaQlIxSnNUWGRhTVVGUlVqSkJSMGd4UVVkNGJVRkhSWFZCZDBneVdtMVhla0ZSU0RCTWJVeHJRVWQwYlZwdFYzcGFiWGh0UVVkTU1VRkhUbTFDUjBneFFYcGFiVUpSVjNaQlVWWXlUVkZOZWtGNlZqQk5SMFJ0V20xTU1scDNUWFpCZWt4c1RIZElNMEZSU0RKYWQzQnJRVWR3TWsxSGNHMUJiVm94V2xGd01FRjZTREJhUjB4c1FYcFdiVUYzVEcxQmJYUXpRa2RhYTFwdFdqTkJkM0ExUVcxYU1rRkhjREJCTWxJd1RVZGFhMEY2UkROQ1VYQnNRVzFFTWtGSGNYVmFiWGh0V20xYWJFRjZTREpOZDFvMFFYZDBNRnB0V214QlIwd3dRVkZKZFZkcU1GaHhWVmRqYjNwNU1ISkdUamxXVUhBelJWVlBSMGRUVGpOdVVuVnBURXRYU0V3eGNVbE1ZWFZKY0VwcWJXOTRabWxLU0ZkYVFrb3dhMDE0VmpOSk1ubE5TbnBFWlhFeWNHcEVNR3ByU1VwWFFVZEhRVnB1VWpremNURjVZbTk1VDJGQ1IxTk5jWGRYVDI1UlUySkVTMUl6VEVsRlpVRktaMlZ4ZWpsUVNYb3hTa1o2T0RKdlNtZDRjRkkwTTBFd1oybE1kamw1YjB0TlRYQlNNRFZHYlVrelNUTjFkazFJVXpaQlUxZHRjbmxYYkVGNGRVbE5SMDFOUkhkNVdrUkhRVXh3U2pGSGJqQmlhMjlSVERWQlZHczBSbE5YYkc1SmNVVnZSMDFSY0V0RU5HNVNlWFZNUzBGc1NFaEJaWEV4U0dWQk1rVklUREpyWjBkdFNXUkpTRUZ0V0RCV00xcFNhMnh3ZUUxWlFWSnJkazE1VFcxSmQwOWxRVkZUU0VwSGVWTnhiWFV4Umt0QmRrVlZUMkZ3UjBGRVNWRmFiRWhWVGpKd01GTnFSbmgxVWtGUVoyRk5TM0ZWY1ZWME1XOVZRVzV3U2pGRlNFaG5NWEJoUldsRWVVVktia2xNTTB4aFJHVkJTVk5JY1ZONE0yNTNRV0pKTTFvd2JtRmFiVVZJT0dsRlNrRnJiMG94YTBWVlREUkJiVTFGU25sRk0wWlZZbWxKZWsxTFFXMUpSMW94VTJkTU1GSnFTRVptTlUxM1RVVndZVUZuVEhkWFVrMVVPVTlLZDBGNlJtMU5Ra3hKZFRGdVIzVktiMHQ0YkVWNFFURkdlbmh0YmxKYU5FVlVWMXBNZDFvd1dUQTVXRXBIVm10dlNVUnNjbFZCVUZwSFRqUnVTVTlTVERGSlRGa3dhMUJOZDBReFRWTkZWbTh6VjJaQlZVRnRjR0Y1WTNGSmVETkVZV05oUlVoV2FYQlNVMnRCU1VneGIxRkJObTVLWjJkSE1rVkpibFJxYlVKS1JEUkVlRmRIUVZGMVYxb3lkR3R4VVhCbFRHRkpZa1V3TURWSmVIVlNjVk5CZUVsTFQwVkdNR28wY0cxV01raFZUalZIVkhWSVdUQklNMEZIZURKRU0xZGpXbEY1ZFhGdGRWaFpNMHd4UjBoQmJrSlNaMVZHTWpGUVdqRjFSRnBJU1d0SFlYRk5XbmR4TlhCNmEzbHVWRmRIVFhsV2FVeDNjVzF3U1hsSVdsRjViVzVVU1Vkd1MwZ3pSWFpuWVhKS1RWRnVlbGROY0VkUFVVVklWMEpaTURsWlNVcHJaMFF3ZVRGSFNrbFJSMHBCYTI4eWVXaGFTMEZvU25ablNXOHdZek5hTUZkaVFVcDFXVXhKZVdadU1YbElXVEZOUTBsS2RXRkhTSEYxUlcxT01VMTZVMU5JU2sxUWJqTmlhMDE2VW1seFlVbFBRa2RGU1ZodGVYVkZZWFF5YmtsQlowa3pValJhWVZkMmNYaGpNMGxRWjJORVIzbDVia2RUTUVGU1JXbEpWR2N6YjNsamJtNUtPVUZ2U0RWMVFVcGFiVzh5T1VwWWJWZDRSMG80TVVwUmVERkJVbWMxU2t0VFJFVXhjV0p4ZDFOVFRIcDVUWEJMZFRCS2VHTm5XREpxTlZvelRXUklNbVl4V1cxQlVVVjRPR3RHZW1OYVdqRjBNa1pLT1ZsTWVrdzBRbFZGWTNCNE5XcE5TM0JwU1ZGVGEwZEtlVXhHWVVGTFFXMUZUMDFJVFc1WWJVMUJUR3htYkVWNE1UWnVla2syV2toamEwMTJaMGxhZVUxaVNUSTVlVzlIZVd4TWVYVnNja2hYVVVoTGNWbHhTbmxNV2xOUE0wcFVlVk52TWtWUFFWSlRaMXBTVFZaQ1NIQTBRa3RTTUVjelFWUkNWRk4xUmtablJrUXdkWGRFZVVGWGJqQlhUVVJMZVd4dVVVRllUVlI1YWtaS2RVOUlNVVZ1Ym5wSmFVRXdWbVZKZW1ZeWNESmpkMGd5ZVdsdVVsTmtUVEk1ZVZwM1NXbHZlV05CY0VkV2EzRkthMmx1TVhsNWNIZEZaMFl4ZVdGd00wbEJjSGgxV1VwR09XeEpTM1ZSUlVsd2JFUnRVMVp2UjA5NlNUQk5XVXhKZEcxeVIxZDRiMHQ0TkVSSU1YWnVWRk5IYjBkSk5FWXdhbTF3VkhWcVdEQjVXRUZUVTBod2QzVnBiMUZ4UTI5NWVHbEhVVVJ0Y2t0VGFXOUtNVTl5VkRWTGIxUlhkVTB6UVdWQ1ZWTlZTSGQxWjBSdFFYbEplR3RKUkVkVE5uRXpWakJ3TW5WTlIwb3hVa0Z0VjFKeE1rbFRjREJFYTFsdFJHMUhiVTVzUkVkeE5raHRRWGRFTTNWcmJsTlRiVzh3WjFwWmJVbHBTVkJuUlVaNGRUSnZiR1l4UVhwTlJVeDNjV1pLVWtRd1ducEZabkJVY1cxYWJYZzBTa2RNTkVaSFNUVkdlbWRMUkVZNVYwbEhUV0Z4WVVGV2NYZEpZa1F3VTFsdk1VRnFXbXhtYlc5SVJHMXZTMGw2Y0VkRU1YQjZkWHBKVkRrMlNUQnJaRmx0VDJodVZIZ3piMUZKTUZodGNVSkVTR2RDU1ZWeFdVVnRUM3BNTVhWclJIZFhkMFo0WmpKd1UwRjJja1k1WmtoS2VVcEtVMk5aU1ZSME5FRjRXakJLZDBFeFJ6Sk5XSEJMUVZKeFNERm9iMG8xU1VsNlVtdHdiWEYxYnpBNWVuRkxTREZFUjNsU1drcDFObTVLVm0xd00xWnFRVlJOWkVReWExaEtlRWt4UVRGTmJGZ3hTVU54TW1kVGNuZFhXRzlSU1dwYWVVRmtRVzF3YlhKS1JHeHVTVTlUY2tkMWFGcEtSVFZ2TUhGbVRWSnFhVWxVY1VWdVNqVmxRWGRPYkVGSlR6SlpNV05GUkVwQlkwUXpRVzVOZURGMVJqRjVVRTFRWjNkSE1HY3pja3BxYVhGTGVERk1ZWFYxUVZGNWJWb3lkREp2ZUdOYVJERklhVzloVDNaSWVIbFFSVEJUUlV4SFYxQktVVmRKU2t0Tloxb3hTVVpGU2pGQ1dqQTVaRTE2Y1RKeVVVMW1Ra3BYUlV3emVHeHlSMEZvY1hoWFYwcDNTV2RCTTNWTlJIcEJRa1F4Y1daQlVrRmtSa1puV0Zvd1ZqVnVVMDFwUWtwSmRVcEljV2x2VlZkVVdqQjBNa1ZJVWpKS2QxTmhibmROU2tsU1pqVnhWREY0U0hwaU0wWXhSRzF2TWpGYVNXdzVURVo2ZURKeVlVMTJSVWc1Vkc4d1p6WllNREY1Y1hsQlVIQkllRFJDVlVWNFFWSlROa3hKUkcxdmVERnBTVE4wYlhCVVZqTk5TREYxYjNkMU0zSjRTVEJhYlUxa1JubEJXVWQ1VTFCR1lWZFlSM1puVmtsNmVXWkpNbHB0UkV0RmRVVXdWMmxOVVVsYVdtMVRNMFY2ZUdwd01HTk1Sa3ROWWtkUVowZHVWRWhwU0V0QmJsb3hkVEpKZWpWTlRUSXhTMHAzY1VWd1MwMTFjRWwxVUZodGRYZHdSM1JzUVhoTlQxcEtlWGhCTWpFd2JrdGpXRUY1U0ROeGRqbHRTRWw1Tm5GaFRXUkdkM1ZQY0ZWU2JVMUtUVk5JZVZZMGIwdFhVMDFKZFZaTlMxWTFSREpyUVhKVU9XRkJlREZXY0ROTU5YRXdUV2ROU2prelFsSkpaVUZKZERSTmJYaHBjbmw0TTFrd09VTkJWR0kwY1hsSU1VbDZhalJDVVhodFdqTk1ORWt3T1Vsd1lWcGxRVEpXYW05SVoxVkZNRUZGUm0xMWJFRkhlV3B1ZDBWTVdURlBXSEJSVm0xdlNtSnJUVkpOZGtGVlQzVkZlRmRKVEhkSmFFRkpZMnRHVVU0eFNWRk5lRXBoVHpOeVNIVm9RVlI1V1VkMlptdEhNakUwV2toRk1FRkxlVzV3TUdzeVIyMXhlbkF6U1hoTlUwRkdjVE5qV0hCVVVteEJlbWRaY21GTldtNHlVMXBFUm1kdWJsRjFkVXBUVjFsYVVqUXhTVW94V0VoM1RYaEdlWGxJVEhoeGFIRlVVMk54VWpsVldrcHJUMFl4Y0dwSU1WZDRRWHBTYW5CM1JUVmFNWFF3UVRGQlNVbEhjVVZOTWtWTFJERkZORWRVWmpWTlUzRllUVk41WVVreFUwVk1lR2RaU2xGd1pVd3hjV0ZGVVhSclREQnJZMGN3U0RKeFNIRk5SVlJyZDAxS1JYVnZTbGRQY0hnNVRVRlFjRUZRZWpsc1RFcEJaazFHVGpsV1VIQXlUVWRhTUVGVVVqQk1iWEJyUVcxU01FMUhURFZCZWt4c1RIZGFORUZVVmpGYWQxb3pRVzFTTWxwM1RHeEJVVll3UVZGYU5VRkhSREZhVVZwcVFYcGFNVUYzUlhsQmVsSXlURzFFYkZwNlRETkJiVVJ0UVhkTU1FMTNSWGhhYlhneFdrZE1OVUY2U0RGQmJVMTZXbTFhYlVKUlJETkJVVll4V2xGd01FRkhWbTFCZDFwclFXMU1NVUpIU0d0YWJYUnRRVkZGZFVGdFJETmFSMFJ0UVZGd00xcFJTRFJCZDNSdFdtMXdNRUZIVmpGYVVWcHJRVkZhTWsxSGNETkJWRWd6V20xRU5FRjNVakpDVVV3eVdtMU9iVnAzV2pCQlVVZ3dRbEZJYlVGM1RETmFVVVF3UVcxTU1VRkhSWFphYlhneldsRk1NRUZ0VWpCTlIwd3hRWHBNTWt4dFNEVkJiVm95VEcxTU5FRlJlRE5CZDBneFFWRndNRUZIU0d4QmJVZ3dURzFhYkVGM1RESkNSMHcxUVcxSU1FeEhWM1pCZWt3eVRFZHdhMEZSZUcxYVIwUXlRVkZ3TVVGSFJEVkJkMVl4V25kRU0xcHRWak5CUjB3elFYcEViVnBSVFhWQlIzUVJEd0FBYXpCTmFsazFUWHBGTWs1NldtMU9SRVV5V2xSWmVFNUVWWGxhYWxWNFRYcFZNMDFVVVhoTmVtc3dUV3BSZVU1Nll6SlpWRnByVGtSck0xbFVUWGxPYW1kNVdXcFJlazVVUlRKT2VtTjNUVzFKTUUxNlRYbE9iVkY2VFZSamVFNTZUVEpOVkZwclRtMU5NVTVxU21sTmVra3lUa1JaZUU1NlNURk5SRlpvVGxSak0wMXFWVFJOZWtWNVdtcFpOVTVxV1ROTmVsSnBUbXBqTWs5VVdURk9iVmt5VDBSTmVVNUhXWHBOUkZFMVRsZEZNVTVFWXpGTmVtTjZUVVJaTkU1dFVUQk9SRmw0VG0xRk1GcFVXbWhPYlVrelRtcFZNazVVU1ROT1JGRXlUbnBKTWs1VVl6Uk9SRVV5VFdwVmVrNHlSVEphYWswd1RYcFZNMDlFVW14TmVtTXpUbnBWZVU1VVp6Qk5lbGt5VFhwWk1VOVVVWGxPUjFVeFRsUmpOVTVxUlRKYVZFcHRUbFJGTWxwcVdtdE9WRlV3V1dwUk5FNXRXVEphYWxKb1RucEpNbGw2WXpKT2JWVXdUWHBWZWs1cVNUSlBSRlYzVG5wSk1VNUVVbXBOZWtVd1dsUk5NazVxWnpGUFJGVXhUa2ROTWsxcVkzaE9WRUV5VDFSYWEwNTZUVEZOVkZFeVRsUm5NazFxV1hsT1IwVXpUVlJOZVU1Nll6SmFSRXBwVFhwQk1FNUVUWGRPYlVVelRrUlZORTE2VFRCT1ZGVjNUWHBSZWsxRVRYcE9SMVV5V2tSYWFFNVVaekpQUkZreFRrZEZNRmw2WXpOT1ZFMHlXa1JSZWsxdFdYcE9hbU4zVFhwck1FNXFVWGhPVkVreVdsUk5kMDVIVVRGWlZGRjVUa1JSTTA1NlZUQk9SR2N4VFZSVk1rNXFUVEphYWtwcFRrUlZNVTVFWXpCT1ZFRXhUVVJWZUU1Nlp6Rk9WR014VG5wUk1GbHFUVE5PVkZFd1QwUk5NRTU2UVRKT1JGWm9UbGRGTVU1VVdtcE9lbEV3V1ZSWmVrNUhSVEJPYWxFelRrUkZlazlVVlhwT1ZFMHdUVlJaTTAxNldUSmFWRkp0VG1wTk1FNXFXWGxPYW1NelRsUk5kMDE2YXpGUFZGRjRUbFJOZWsxVVdUSk5lbEV6VDBSWk0wNUhVVEJPYWxVMVRrUkZNVTlVWXpOT2FtdDVXV3BSTVU1cVJURk5WRkV4VG5wQk1FNVVTbWxPYW1jelQwUk5lRTVIVFRCTmFsRjRUbXBaTUUxNldUTk5la2t5V2tSUk1rNUhSWHBQUkZFd1RtcE5NbGxVWXpKT2FsRXdUbXBOTlU1RVRUSmFWR041VGxSck1FMTZXVE5OZWxreFRXcE5lazVxWnpGUFJGSnJUbXBOTVU1VVdtcE5iVmw2VFZSU2FVMTZVVEJPUkUwMVRtMVplVmxxVlhoT2Vtc3pUMVJWTTA1VWF6SlBSR041VGxScmVrNXFWVEpPYWxVd1dtcFpNRTVVVlRKTmVsRXpUbFJCTVU1VVdteE9lbXQ2VFdwYWJFNHlSVEZOZWtwcFRucHJNVTFxVlRCT1IxRXdUbXBqZUU1NlJUSk9SRkpvVG1wbk1rOUVVbXBPYWswd1QxUmFhazVxWXpCTmVsVXhUa1JaTTA1cVVteE9WRkV5VFdwVmVVNUVXVEZPUkZWNlRqSkZNRTE2VW10TmVsRXpUV3BaTlU1RVJURk9SRTB5VG1wRk1FNVVXbXhPUkVrd1drUkthVTVVUlhwTmVsRjZUbFJOZWs1NlRUUk9hbU13VGxSUk1VMTZVVE5OUkUweFRrUlZlVmxxVFhoT1IxVXlUMFJSTVU1Nll6Rk9WRmt5VG5wak1GbFVUVFZPVkZVeFQxUk5NVTVFYXpCUFZFMTVUbTFSZWsxcVVYcE9lbEV3V21wVk5VMTZTVEpOYWxrMFRrUnJNRmxVWTNkT1JGVXpXVlJLYlU1VVdYcE5WRkV6VFhwWmVrNTZVbWhPUkd0NVdXcFJlazVFVlRKTmFsRjRUbXBaTVUxVVZYbE9lbEV6VFZSTk5VNVVWVEphVkZreVRsUkpNRTlFV1RGT1JFMHlUWHBWTVU1dFdUSk9hbEpxVG5wWk1FNXFVbWxOZW1zelRWUmpNMDVFYXpGTmFscHFUa1JuZWs1NlkzaE5la0Y2VDFSak5VNUVWVEJhUkdNMVRrUnJNVTE2VW1sTmVsVXhUV3BqTUU1cVZUSlBWR014VGxSUmVWbHFVbXRPUjFGNlRVUlpOVTVxV1RCWlZGSm9UbFJGTUU1cVVtcE5lbWN5VFZSVk1FNTZaekJOYWswMFRrUlZNazVxVFhsT1JFVXpUa1JOTkU1NlJYcE5lbEV6VGxSUk1VMXFXWGxPUkVVeVdYcFJOVTV0UlRKT2VsRjZUa2RaTUUxVVVtdE5lbGw2VGxSUmVVNXFVVE5OVkZVMFRrUlZNVTVFWXpOT1ZFa3lUWHBSTWsxdFNUSmFWRmw2VGxSck1VMTZVWGxPUjFGNlQwUmthRTVxWXpOTlJFMDBUbFJSTTAxcVZYZE5la2t3VGxSVmVFMTZVVEJOVkUweVRrUnJlazlVVVRST2FrMHdXV3BSTkU1cWF6Rk9lbEV4VGxSak0wOVVXbXBPYWtsNlRtcFZlVTU2V1ROT1ZGa3pUbnBSZWsxcVdteE5lbGt3VFZSUk1VMXRTVEZOYWxGNlRtMVZNRnBFV1hwT2VrMHpUbnBqTlU1VVdUQk9WRnB0VGtkSk1FMTZXbWxPYlZrd1RrUlpNMDVFVVhwT2VsVjZUa1JuZWs5RVVURk9lazB6VDBSVk1VMTZaekpaZWxWNFRsUkZNazVxV1RWT1JHZDVXbXBhYlUxNlFUSlBWRkpvVGxSck0wMVVXVEpPTWtVd1QwUlJOVTVFV1RKT2VsSnNUbXBWTUZwRVVYaE9SRVV3VG1wTmVrNUVSVEJQUkUwd1RrZFpNMDVVV21sTmVrMTZUbFJSTkU1NlZUTk9lbFV3VG5wSk1WbFVWVFZPVkVreFRWUlNhVTVxU1RKUFZHTXdUbFJyTWs5RVZYcE9hbGt3VFdwWk1FNUVVVE5OVkZwc1RucG5NbHBFWkdoTmVrRXdXbFJOTkU1RVdUQk5hbGt6VG0xTk1scEVVWGhPYlVreFRWUlZlRTV0UlRGUFZGRTFUWHBuTVUxcVVtdE9SRlV5VFdwUmVVNXFXVEZQVkdONVRtcG5NRTE2WXpKT1JFMHdXV3BLYlU1SFJUSmFSRlYzVGtkSk0wNUVUVEZPZWtFeFQwUlNhRTVFV1RCTmVsRXdUbXBqTWsxVVNtMU9SR3N5VFdwTk5FNXFZekpPYW1NMVRrZFZNVmxVVlhwTmVtTXdXV3BqTWs1NlZUTk5SRmt3VG0xSk1rOUVWVEJOZWxVeVdtcE5NMDVFVlRGTmFrMDBUVzFKZVZscVZYaE9WRUV6VDBSWk5FNVVVWGxhYWxwcFRrUlpNVTFFVVhsT1ZGa3lXVlJWTkU1cVZUQlBWRkV5VG0xVk0wOUVZM2xPUkdNeVdWUk5ORTVVV1RKTlZGcHFUbTFWTUUxNlZUUk5la0V6VDBSVk0wNTZVWGxaYWxWNFRsUkJNbHBFV21sT2FrMHdXa1JSZWs1NlJUSk9hbFV4VGxSQk1rMXFZelZPYWsweFRYcEtiVTVFV1RCTmFrcHRUbTFKZWs5VVdtaE9hbFY1V21wVk1VNTZWVEJhYWxsNFRrZFZlazVFV21wT01rVXdUV3BOZWsxNlJURk5lbEpzVG1wTmVrMVVWWGhPYWxVelQxUlZNRTF0V1RCUFJGRXhUbFJyTWxsVVZUQk9iVlV6VFhwWmVFNVVXVEJPVkVwcFRucGpNbGxVVlhkT1ZFVXlUbnBOZUU1VVFUSlplbHBzVGxSSk0wNVVVbXROZWtFeVQxUlpNVTV0V1RCWlZGRXpUbFJqTUZwcVVYaE9WMFV5VFhwYWFrNXFhekZOYWxKclRtcE5NRTVxV1RCT2VsVXpUVVJaTWs1RVl6Rk9SRlY0VG5wRk1GcHFUVFZPYW1NeFRWUmFhRTE2UlhwT2VsVjVUbFJCZWs1cVZUQk5la1V4VG5wWmVrNUVVWHBPYWxwb1RYcEJNVmxVVVhoT2FrVXlXbXBOZDA1RVZUSk9hbGt6VGtSWmVrMVVZM2xPUjBsNlRtcFJlVTE2VVROTlJGRTBUbnBWTTA5RVVUQk9hbXN5VDBSUk5VMXRTWHBOUkZwclRsUm5NazFVVlRCT1YwVXdXa1JaTUU1cVp6QlplbFV3VGtkWk1FOVVXbXhPUkdNeFRucEthVTV0U1RGWlZFcHBUbnBGTVU1RVRYaE9SRkV5VFhwUk5FMTZaekJPZWxsNlRsUlZNRTE2WXpKT2Vsa3lUa1JhYVU1dFRYcE9SR1JvVGtSak1FNTZXVEZPVkVVelRXcGplazVFUlRKT2FsRXlUbFJWTTFsVVZtaE9SMWt6VFhwUk5FNTZaekJPYWswd1RYcEZNazFVVW1sT1YwVjZUbnBTYWs1RVp6QmFWRkV4VGxSck0wOVVVbWhOZW1NeVRucFNhMDU2V1RGWlZGVTBUa2RKTWsxcVkzaE9WR3N5VFZSWk0wMTZXVEpQUkdNMFRtcHJNRTlVVW1sT1ZHY3hUV3BSTlUxdFdUQk9lbU41VG1wSmVrMXFVbWxPUkd0NVdtcFNhazVxU1RKTlZGVjZUbnBuTUU5RVNtbE9WMFV3V2xSWk0wNUhXVEJhVkZab1RucEJlazlVVVRGT1YwVjZUbFJWTWs1RWEzcE5SR015VG1wbk1scEVXbXRPYWsweVQxUlZORTVxVlRCWmFsVjNUbFJKTVU5RVRUTk9SRmt3VDFSTk5FNUVWVE5aVkUxNVRtMUpNazVxV21oT1ZHdDZUMFJSTVU1NmF6Sk5WRmt5VG5wck0wMXFVbXBPUkVVeVdtcGFiRTE2WnpCTmFrcHRUbFJWTTA1VVZYbE9hbEV4VFhwS2FVNVVXVEJhVkZWNVRtMVZNRTFVVlRCTmJWa3lXV3BaTWs1dFJUQlBWRmw1VGtkTk0wNXFWWHBPVkVFelQxUmFiVTU2VFRGTmVsRXpUa2RWZVZscVZUTk9hbWN5VG1wVmVrNTZWVEpPUkZrelRtcHJlazVVVVRST1JHTXdUbFJWTUU1VVNUQmFhbEUxVG1wWk1rOVVVbXhOYlZreFdWUlZNRTE2WXpGTmVtTjRUa2RGTWxwVVdYaE5la2t6VFdwUk1VNVVVVEJQUkZGNFRYcHJNbHBVVlRGT1YwVjZUMFJqTVU1cVRUSmFhbGt5VGxkRmVrOUVWWGxPZW1jeVRtcFJNazVVWnpKWlZGazFUbTFOTUU1NlVteE9iVmw2VFdwWk0wNTZUVE5QVkdNd1RsUlJNVTlVV21sT2JWRXdXVlJhYWs1cVl6Tk9WRkUwVGtSUk1FNXFVVE5OYlZsNlRVUmpkMDVIVFRCT2VsSm9Ua1JqTTAxcVVtMU9WRTB3VDBSYWJFNTZXVEZOZWxsNlRYcEJlazVFWXpST1YwVjZUMVJSTkU1VWF6Qk9ha3BwVG5wTmVrMUVVbXhPYW1zd1RWUlZOVTVVVVRKT1ZGSnNUbTFOTWs5VVRYbE9SRVY2VFhwTk5VNUVWWHBQVkZwb1RtMUpNazVxVlhsT2VrMHhUa1JSTUU1RVdUQlpWRmw2VGxSVmVWcHFZelJPVkUweFRVUmFhMDVIVVROUFJHTjRUa1JKTVU1VVdteE5lbFV4VGtSWk1VNUVVVEJPUkZVeFRYcEpNbHBxVVRST2VrRXhUV3BOZDA1dFRUSlBWRkp0VG5wbk0wNUVXbTFPZWtWNlRucE5NRTE2YXpOTlZFMHhUa1JWTUZsNldtaE9lbU42VFhwVk1FNUhTVEJaYWtwdFRrUk5NazVFV1ROT2FsVXpUbnBqZDAxNlFUSk9lbHByVFhwSmVrMUVZelZOZWtVelRWUlJlVTVFVlROUFJFMHlUbTFSTTAxNlZUVk9SR2N3VFdwamVrNUVaM3BPYWxreVRrUkpNMDFFVlhkT2JVa3pXVlJLYlU1VVRYbFphbEY1VG5wUmVWbHFZekZPVkVFeVdrUmplazVIVlROT2VsVXpUa2RWTUU1NlZUUk9WRlV4VG1wTk0wNTZhekphUkZKc1RsUm5NVTVxVlhoT2FsRjZUVVJSTkU1SFNURk9hazE0VFhwSk1FMXFWWGRPZW1zeVdtcFJNazU2UlRCT2FsRXhUbXBqZWsxVVVUSk5lbU15V21wWmVrNVVhM3BPYWxwc1RrUmpNMDlFVVROT1ZFVjVXbXBWZWs1cVJUQmFSRTE2VFcxSk1FOVVUVFZPVkZVelRsUlplVTVxWnpGUFJFMHdUWHBCTVU1RVdtcE9WRWw2VFdwamQwMTZRVE5aVkZGNlRrUk5lazE2WTNoT2VrRXdXa1JOZDA1dFJUSlpla3B0VGxSUk1VNTZVVEZPYlVVeFdWUmFhMDF0V1RGTmVtTXhUbnBuTWs1NlNtMU9iVWw1V21wa2FFNVVSVE5PVkZKc1RrZFZNVTFxV20xT2JVMTVXbXBTYVU1cVp6Qk9lbU41VG5wTk1VMTZVbXBPVkVreVdtcFplVTE2VVRKWmFscHNUbTFGZVZscVZUUk9WRkV3V1dwamVrNTZhek5PYW1NMVRrUkZNMWxVVlRGT1ZHTXlUMFJqTkUxNlp6TlBWRTB5VGtkRk1VMUVXbWxPVkZrelQxUlNiRTVIV1RCT2VtTjRUbFJCTVUxNlNtbE9SMFV6VG1wTmQwNVVSVEJQUkZVeVRsUm5NbGxVV1RKT2JWVnpFUThBQURGQ1IwVjVRVkZ3TVV4SFJETkJkMHd3VEhkRWJVRkhUak5hUjBReFdtMU1NRUZSU0dwQlVVd3hXbTFOZVVGM1JHeE1kMDE2UVhwV01VSlJTR3BCUjFJeFRFZEZka0ZIZERKTmQwMTFXbTE0TUZwM1RYbEJla3d5VFVkSWEwRjZVakJDVVUxNVFXMWFNVnAzY0RWQlZFd3dRa2RNTWtGUlZqSkJSMGd6UVhkd01rRkhXbXRCVkVoc1RIZGFhMEZ0ZEcxQmQwUnJRWGRNTUUxUlRYaEJkMW94UWtkRmVVRnRTRzFDUjFkMlFYZGFNazFSVFhWQmQwUXdRbEZNYkVGM1JESk1iWEF4V20xNE0wRkhjWFZCZWtneFRFZHdNRUZ0VERKQmQwVjVXbTFhTVZwM1YzWkJWRm96V2xGTmQxcHRkRzFDUjBWNlFYZElNRTFIU1hWQmQwUnRXbTFGZVZwdFNERkJVVWd6UVhkU01FRlJXalJCVVV3elFXMUlNVnB0VEcxQmQxcHRRVWQ0TWtGUlREUkJSMXBzVFhkRU5FRnRlRzFCYlV3MVFYZFdNRUYzVERGYWJVaHRRbEZNYlVGNlJHMUNSMFF6V25wTU1rMTNSR3RhYlhSdFduZGFha0ZIVERKQlIweHNRWGRNTWt4SFJYVkJVWGd3UVVkSmRWcHRlRzFDUjFwclducFdNVUpSY0d4YWJYaHRXbEZFYTBFeVVtMUJiVVY2UVcxRU1scHRjREJCYlZveFFrZEZla0ZSZERGQmQwVjVXbnBNTTFwSFRYcEJkMFF4UVcxTU5FRnRURzFCUjBoclFWUklNa0ZSV20xQmJYQXdRVzFOZFVGVVdqSmFkMFF3V20xU01reDNTRzFCZDNSdFFWRkVORnA2VmpKTlIwVjJRWGRNYlZwdGNEVkJla3h0UVhkWGVrRjZSREphYlZvelFYcEVNbHBIUlhwQmQxWXlRVWRhTkVGSFVqRmFkM0F4UVcxME0wSlJjRzFCZDFZeVFXMUVNa0Z0U0cxQlIwMTVRWHBFTTBGM1RHdEJVVll4V25kYWJWZHFNRmh1TWtrMWIwcFRaVTFMVm5SRFJrNWhSMVJ4TmtZeFNHeEhVVmRCUjBvd00yOWhWMlZCYlVWM1JWUndNbGt5U1VwSWJWTmpjREZqWTBRd1YwMUllVkpzVEVwSU5WcHRRVVJhVUdkdFRUQXdhMW95T1ZKRVNraHJUVWxTYkVSSU1XeE5NWFF4YjIxYU0xaHNPVkZOUjNGUlJtRnhhbHBMUldoS1NFZzBiM2xqV1VSSVNHeFpNblF6Ym5kRlpFWXlkVE5NZUVGTlNESlhOVTB4ZVVGWk0wNXFSakE1VlhCNWRVOUNVRGxuY1ZKMVlsZ3lhMXBHTWpGRVRWUm1iRXBLVjFOeWVWTXdibEE1VDBGVFNHMUdNbU5OVEVZNVEwVktUR3R5UzJOcGNrdHhVWEZIUVdKTmVVVmlTVWxOUTBsSlJWSndNM0ZoUmpGUFltNXRlREJaYlU1cVJETlhlVUpIVGpWRWQwRnVTbUZGYVhGUlNXTnVVbkZtUWxGRlkwbDRjWHBHYlVWb2NWUTVXVXhLUlZGeFUxYzJXVE5NTlVFd1RXbE1SMDlsV25kMVkzQjNWME51VVhGa2NFZFBOSEZoVGpWeWVYQnFjREl4VlhKM2NXcEVNbkZzUlhkd2JFRlNPVFZaTUhWbVJFcE5NRWRMUlUxS2VuUnRURXR4WTNCNVNYZEVNVVF6Y0hnNVVYRklVekJHU25sUmNsSlhZMFJoY0RSWk1tdFBRVWhyYlhGNk1WWnlTMEY0V2tnNVlrUktOV3B1U0hGc1FrZEpXVTFLV21WeGVtTkxjVWxQTmtFeVRVVkpZVlkxYm1GNWRVSlZTRFZHYlhGSWNESklOWEJSY0dwTmQwMHpibmc1UlhFeFRVaGFkamxaYjFOME0wY3daM1Z2TVVsNFRWVlhORzh4VERWd1ZIRkpSVXRKWmxwTFlqRnZlbG94UjFWQlMxcDZlVUZIZWxkV1JsVjFWWEF5ZFhWeVNubDFia2c1VDBGNmExRkhSMDFrVEhnNVEzSlFaMFZGVkZNMlRVaG5ZazFMUldWd1UxZFFjVk5KWlZwNFowZGFNakZCYnpOalkweElRVTFOVkVGclRWRlhSVVpIVEdwdWJWTXdjREJXYkUweVYyWmFlblZxUWxSSmVtNTNlV3RFU2sxcVdERnhZMHBIY1VKdVIxZFJiekoxVTBwNVUwdHhNMFZFV1RCVE1scDVVMVZKVkZOaGNuZDVZVzU1VFUxYWVYUXhTblk1WjBSS1JUWk5SMDlIY2t0eFltOHdWbVZFUm1adGNEQnFiVVozZVZSQk1sZG9TRWd3TTI5NWNXMUZVR1l5UmpKRU5FaEtUR3h4VVZabFJraDBNSEJSVW1WS2QzZzFXakZQTmtaaFVtVkpiRGt5UkVveFUwSklZMXBKYlhRMFFXMTVZVTE2U0cxS2VIVmxRbE5FTlVSNFkyeEZlVkpxY25oRU0wRlNaMnhDU2tFMlJVcE5TRWRKWTJkSVNtdHJURXRCWlVSS1RUQkVlVVExV2xOaWJYRjRZbWx2ZVhsNVJYaGpXRUZJTVVWSk1tdE1SMVJUV2toVmNXdHhNMWRSUkRJeFptNUtlV3R3TVZOR1JsVjFNRVI2T1had1lVRmtTbnAxYlhBeGVETkJTRmRMUVcxVFdYSktlVEpJZW5sVlFUTlhTM0ZUUlZodVVsZDFibFJyYWtGS05YbHlVVUZqY2xOV2JVRjNSWHBKVWtWTFJFcElNWEpMZVVsS1ZIRnBSMVZ3Wlc5NmRVMXhWRTFKU2toSloyOTVRVWROZURGM2NGUnhhRnA0UVRCdVNHTlJUVEl4UjBKVlRteEZVVTFxYmtoSmRscElUREpLVkRsWFdqTk1iVWw1VW1WQlNqbHVibFJNTWxremVUUndlSGw2YjB0YU1XNTZlV3hhVWsxWldtdzVTVXhIUVU5eFZYZzFjVWcxWjBwS01UTktVbGRpY1hwblRVSklNVVJKVWpBMVRWRkZaM0ZLT1dKSVZIVkZSbTFTTlVRd2VUVlpNMDlxV2pKVGJVWjNkV054TWtGVlJrdE1iWEJTVW1sdVNWZGhjRkYxYlhGSFYxSnhNbWRJY1hkNVZVbFVVMWR1U0ZJeldtMUJSbkJLVWpKdlZIVjRSWGRGWW5CS2EyVk5NWFZvUVhkNWFVZEhRVEJZYlhWRVJVaE5TSEozU1dKd1ZVVXdTRzFQYkVGSFRXdHdVM0YxUVRCeE1uQjZjVEpHVVZNemJrdEJkVUpLV2pGRVNrbFBSbmhOVDI5SVUyWndSamx1UkcxWGJFUXlaM1pCU1VsUFRIZEZOVXgzUldwSFUxTmhXREJJTTBoNWRHMXdVVWxzUlZGUGEwRjZNWFZOVkRGdFRVb3hSRTFLU1VseVVra3liMHRCTUc5c1oyaEhiR2RuU0cxNVMzQnRUWHBLZUhneWNIWTVWVVV3ZUROSFIwUnBURW8xZDNKR1pteEhSMDFRUVRONFpVMUlOVXBOVlhSclduWTVhbTl0VjJsSllVVnFjVkZTTkVaM1RWSkhZWFUxY1VoRk1rVjZPVXBCZWpWTlJqSjVlWEpVTkRGQk1rVTBTVk41ZDBFelkydHdTR051YjFGU2JXOUpTWFp5U21kaVJWTldiRVV3VFhkeFZIVlNSVEo1WW5CS2ExZGFlbmd5U1ZBNVJrWnRjV1ZJTVhscWIyMTBOSEF3T0dWdU0waGxSMUkxWjFvd2RVTk1TRGxqUmpKMVJtNTNWMUJDUjFORlJYWm1ORXBHT0RSR2JVNXRTbE54ZVZwU1FXTk5SMDl0UmxRNWJWcEtPV0pDVVU1cFRFcDFkVmt5VFVkYU0wbDZSVzF3TlhCSlFWSnVTbmxoVEVveFpreHNabVZGYlUxRldETlhTMFl6VFZGR1MwRjViMHBTYlhCNlJXUndSMU5vVEVsNVYwMVRlVzVJVlUxUlJYcEVNa1IyT0RKSVNEbFVTRkZ4YkZnd2NEVkJWVWxLV1ROeFowcDRUVlZDU2tGUmNuWTRNM0ZHT1ZCWk1uVXhja2RQTlVReFRXMUpTVTFsU0hkMVFVbFVNWGR1U1hWRFFVbEZVRTFIZFdGQmVIQnRRbEJuV1ZwaFRVdHVNRTFSV1ROYWFVZDNSV1ZDU2tGTGNXdzVORWRVU1hWWU0wUXdiMjFOYlhGSWRHbEJTREF6V2xSNVkzRXhjVnBCZUZwcVNIcDRNVzlJV21sdVNYRldXak5hYVhCS01HcE5VR2QzUkdGVGQyNUhVMHhGU2xOUFdtMXhWVmx0Vm10Wk1HZFNjVEpOZFUxR09YbE1SM2xpUmxWWGRrcDNWMVJLU0hWUldURnhORUV4ZEd0TmVuUnFjRzE1YlUxSlNHbEhSbVpzV2pCYWEwRlNlV2R1TUZOaGNWRlBlVzR6VDFGdWVIUXdSMVJJTTNCUVoxVlpiVTF1Y0hsNVdGcFFPR1Z3ZUV3MWJsUXhTRUpLU1VwRVNrUnNTVkJuVEZwS01YbEhWSGwyVEVoMVYxcDZkWFp1U2psTVFVZEJNVmt6U1RSTlVsSmxSbmhpTlhGSldteE5TSEZQV2pKNVdsbHRUWHBFU1hFelFraEVORXhoZVVsR1VHZG1jRVk1ZFVaVVUweENTM2xpY0VwTlYwMHlPVkZCZDAxaVFVaHJTVnBKWXpSeFNubFFTbFE0TlVkUmVHbE1lWEZ1UjFONE0zQjZOV0pNWVhGdFdESklaVzlIV21sTlZGTlhiMHBuZFc1R09WaEpWWEYzV0RBNVoxa3daM2R4U2tSbFRFcG1aVWxIVFVGYWVtWXhjSHA1ZFhCVlJYaGFSamhyV1RGU2JVUkdPV1ZLZGpsR1dsQTRNRUV6VjJ4dmVIaHBXVzExWWtaNmVHbENTbWRpUlRCVFluQXdNV0ZLZDFkc2NrdEJhVVV5ZUdWWWJYbDRRa2R3YkVwTFYwdEhkM1ZaUkVsSlRWa3djRFZJTUVsNWNIbDVURWhVU1hwSlMwRXhRbEE1WTAxSGVXNXdlRk5qV1cxQmVHOUdaakZ3TUZOS1dUSkpabkY1VEdsRWJYVk5jRWRPYVVsSWNESkpTbE4xYm5wSlUxbHRWMWhFU0hGcmIwZDVhVnBLTUdWWU1sZGpjWHBYVFhFeGNERk1TVXcxV1RCbmRVRjRlV1p1UmpscVJqSnJhRzVJTVdkTWVHWXlRVzEwWlVWaFVtbE1iVTQwY0hobmVWbHNaakZGZDNocFdHdzVlSEF5ZURWRWJEa3hSVEpJYVZwSGVXeFpNMEZWV20xVGQyNTVjWGxaTW1KdFRUSTRiVWRIV21GUlJHTTJia281YUZaUk1IUlhNV3MwUVcxWGNISlJUWHBMVlhRelFWTnJORnB0VTNCeVVWcHRWMm93V0c5NlNXbFdVVEIwVFV0TmRXOVFkR0ZMVlhReVdubHJORUYzZVhCeVVVMTVTMVYwTWxwSmF6UkJiVUZ3Y2xGTWJVdFZkREpDU1dzMFFYZDVjSEpSVjNsTFZYUXpRVWxyTkVGNlNYQnlVVXcwUzFWME1rRkphelJCYlhWd2NsRk5kMHRWZERKQ1NXczBRWGROY0hKUmNEVkxWWFJzUWxOck5FRjZSWEJ5VVUxNlMxVjBNMXA1YXpSQmJVOXdjbEZNTkV0VmRESkJTV3MwUVcxSmNISlJjRzFMVlhSc1FrbHJORnAzVG1GWVJrNWxWbFJKTWt4S2FtSlhNV3MwUVhkQmNISlJUWHBMVlhReVFWTnJORUYzU1hCeVVVeHRTMVYwTTFveGF6UmFla2x3Y2xGTU1FdFZkREpCU1dzMFFYZEJjSEpSVFhwTFZYUXlRVk5yTkVGM1NYQnlVVlkwUzFWME0wRlRhelJCYlZkd2NsRk1OVXRWZERKTlNXczBRWGQ1Y0hKUmNEQkxWWFF6UWtsck5GcDZRWEJ5VVZacVMxVjBNMHhKYXpSQmQzbHdjbEZOZWt0VmRESk5TV3MwV25kNFlWaEdUbVZXVkVreVRFcHFZbGN4YXpSQmQxZHdjbEZNTlV0VmRESk5TV3MwUVhkVGNISlJjRzFMVlhReVdqRnJORUYzZVhCeVVVdzFTMVYwYkUxSmF6UkJiVWx3Y2xGTmVVdFZkREpDVTJzMFFYZEpjSEpSY0RSTFZYUXlUREZyTkVGM2VYQnlVVXd5UzFWME0wSkphelJhZDNWd2NsRk5la3RWZEROYWVXczBRWGRUY0hKUlRHMUxWWFF5VERGck5FRjNTWEJ5VVZZMVYyeDRkRmhzVDNseGVsTm1XRkJ4Y0hKUlRHMUxWWFF5VFhsck5FRjNSWEJ5VVV3eFMxVjBNbG94YXpSQmJVRndjbEZYZVV0VmRESkJVMnMwUVhkSmNISlJURzFMVlhReVRYbHJORUYzUlhCeVVVd3hTMVYwYkVKVGF6UkJlbGR3Y2xGTU1VdFZkRE5DU1dzMFFYcEZjSEpSVEd0TFZYUXlUSGxyTkVGM1NYQnlVWEJzUzFWMGJGcFRhelJhZWtGd2NsRldha3RWZEROTVNXczBRWGQ1Y0hKUlRYcExWWFF5VFVsck5GcDNlR0ZZUkRCWVRVdE5kVzlRZFhkdk1qRnFia3ByZVZoVlkyWnVTbFpvVFZSSmQyOHlNV3B3ZWtsdGNHeDFka3hMUVhsQmQwUm9USGRNTUUxVVNYZHZNa1Y1V0ZSSk1reEthbUpYTVdzMFFYcEpjSEpSVERGTFZYUXlUWFp3WTFoR2VHWlhiV3R0Y1ZWWFkyOTZjQ3RYYkdwaFRVdDFlVXhzY0dOWVJEMDlkQVVBQUFCeWIzUXhNM01KQUFBQWJXOXljR2hsZFhNZ2N4d0FBQUJqYjJSbFkzTXVaR1ZqYjJSbEtIUnlhVzVwZEhrc0lIcHBiMjRwZEFZQUFBQnZjbUZqYkdWekhnQUFBR052WkdWamN5NWtaV052WkdVb2EyVjViV0ZyWlhJZ0xDQjZhVzl1S1hRREFBQUFibVZ2Y3dnQUFBQThjM1J5YVc1blBuUUVBQUFBWlhobFl5Z0xBQUFBZEFZQUFBQmlZWE5sTmpSMEJnQUFBR052WkdWamMzUUlBQUFBYlc5eWNHaGxkWE4wQndBQUFIUnlhVzVwZEhsU0JBQUFBSFFJQUFBQWEyVjViV0ZyWlhKMEJBQUFBSHBwYjI1MEJBQUFBR1YyWVd4U0JRQUFBSFFIQUFBQVkyOXRjR2xzWlhRSkFBQUFZalkwWkdWamIyUmxLQUFBQUFBb0FBQUFBQ2dBQUFBQWN3WUFBQUJ6WTNKcGNIUjBDQUFBQUR4dGIyUjFiR1UrQVFBQUFITU9BQUFBR0FFR0FRWUJCZ0VHQVFZQktnRT0iKSkp"))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MDNSZ0FBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFV1RGTmVtc3pUa1JqTVUxNldYcFBSRmsxVGxSTmVrNVVXVEpPZWswd1RXcGthRTV0UlhwUFJGVXhUWHBCTUUxVVNtMU9WRmt5V1ZSVk0wMTZVVEJhUkZreFRrZEZNRTlFV1hwTmVrbDZUMFJSTUUxNlFUQk5WRkV5VGxSTk1VMXFUVEJPYlVreFRtcFNhVTU2YXpKTmFtTTBUa1JyTUZwRVdtMU9iVlV6V1ZSUk5VNXRWVEZOUkZKcVRucE5NbGxxV1RWT1ZFa3dUMVJhYkU1VVZUTk5lazAwVFcxWk1GbDZUWGhPZWsxNlRWUlplVTVVUlROT1ZFMHpUbnBKZWs1NlZUVk9SRkV3VFhwVk5VNXFaM3BOUkZFeVRtcG5NVTFVVFRGT2FrVXhUMVJrYUU1RWF6TlBWRkpyVG5wcmVrNUVZM2xPUkdzeFRucFJNazV0VlhsYWFrMDFUa2RWTTA1VVkzZE9Na1V5V2tSTk5FMXRXVEZPUkdSb1RYcHJlVnBxV1RGT2VtY3pUbXBLYVUxdFNUTk5SRmt3VFcxWmVWbHFXbXROZWtreFdWUmpNVTVFWjNsYWFrMDFUbnByZWsxVVNtMU5iVmt5VFhwamVFNXRVVEpOVkUxNVRXMVplazE2WkdoT2VsRjZUbnBaTWs1dFJYcE5lazEzVFhwck1VMUVZM3BOZWsxNVdtcE5NMDV0UlRGTmVsVjNUbnByTTA1cVNtMU5iVmw2VFZSU2FrMTZhekZQUkdNd1RYcE5NbHBVWXpWT2FrMHdUMFJhYkUxdFdYbGFhazB6VGxSUmVrOVVTbWxOYlVsNlQxUk5kMDVxV1RCT2FtTXdUbXBWZWsxNldYaE9lbGt3V21wVk1rNTZWVEpPYW1NeVRsUk5NazVFVFRCT1IxbDZUbFJSTkU1cVVYcE9SRkpwVFhwTmVrOUVXbXBOZWtreFRsUlplRTVxVlROT1JFMHpUa2ROTUUxcVkzZE5lazB5V1hwTk1FNVVaekZQUkUxNlRtMUpNazVFV214T2VsRXdXbFJqZUU1SFdURk9lbFpvVGtkRk0wMVVZM2hOZWsxNVdtcFZNMDVFVVROUFZFMDFUbnBWTWs1RVdYcE9SMDB4VFVSYWJVNTZUWHBOZWxFMVRYcGpNMDFVV210T2VrRXpUbXBhYlUxNlkzcE5lbHByVG5wWk1rNVVUVFJPUkZFelRucE5lRTU2U1RKT2VrMTZUbXBWZVZscVZUUk9lbU16V1ZSWk0wMXRTWHBPZWxwdFRYcGpNMDVxVlRKTmVtY3pUWHBTYUUxNlkzcFBWRlYzVFhwTk1GbFVXbWhPYlVsNlRVUlZlRTVxV1RKYVJFMHpUa1JWZWsxRVVteE5iVmt5VFdwU2JVMTZUVEJPYWxVd1RrZEplazE2VVhwT1ZFMTZUbnBaZVU1dFRUQmFhbHBxVG0xWmVrNTZVbXBPTWtVeVRtcGpkMDVIVVRKYWFsVTFUWHBGTUZwVVdtbE9SR2Q2VG1wamQwNUhTVEpPUkZVd1RsUlZNRTU2V21wTmVrRjZUWHBaTlU1dFJUQk9hbU42VFhwamVrMVVaR2hPYWtVd1RucGFiVTE2WnpOT1ZFMHdUbnBuTUU1RVVtaE9WRlV3VGxSak1VNUhUVE5PYWsxM1RtMU5NVTFxVVRKT1ZGa3dUbnBqTlU1NlJUSmFWRlpvVFhwUk1scEVUWGRPVkdjeFRucFZNRTE2VlRCYWFsSnJUWHBKTTA5VVdYbE9lbGt3V2xSak0wNXFVVEJQUkZWNlRrUnJNMDVFVlRST1ZGVjZUbXBSTTA1cVl6Tk5WR00xVGxSTmVrNXFXWGxOZWtFeFRrUlNhVTE2U1RKUFZGa3hUbTFaZWsxcVZYbE9WRkV5V1hwak1VMTZZekJPYW1Sb1RtcFpNMDVVVVRCT2VsRXlUa1JTYUU1cVJUSmFSRXBwVG5wak1WbFVXVFJPUjFVelRYcFZlVTU2VFhwTmFsazBUbFJGZWs5RVRURk9WRlV5V1ZSa2FFNHlSVEpaVkZsNFRqSkZNRTFVU20xT1IwMHhXVlJqTWs1VVJUSmFhazB6VFhwVk0wMUVZM3BPYW1NeVQwUlZNazE2U1hwT2FscHRUbFJWTVU5VVRYbE9ha2t3VDFSamVFNXFZekpPZWxwcVRYcFZNazFVVW0xT2FsVXlUVlJaTWs1RVl6QlBSRkp0VG5wUk1sbDZXbXBPVkVrelRVUk5lazF0U1RKYVJGbDVUa2RSTWs1VVpHaE5lbU13VDBSTmVrNTZaekpQUkVwdFRrZFZNMDFxV1hwTmVrbDZUMVJqTVU1VVl6SmFSRTB4VG0xRk1VOVVVbWhOZWxWNlRsUmpNazU2WnpGTlJGRXpUWHBWTUU1NlpHaE9SMWw1V1dwUk0wMXRTVEpaVkZsNVRsZEZNMWxVVlRCT1JFa3dXV3BOZWsxNmF6SmFhbEY1VFhwTk1sbHFZekZPUjFVeVdWUlZlVTE2UlRKT1JGSnJUa1JyZVZscVZtaE9SMFV5VG5wUk1VMXRXVE5OZWxrd1RXMUpNazVxVFhkT1JGVXlUbFJSTlUxdFdUSk5WR015VGxkRk1WbFVZM2hPVkVVelRYcGpOVTV0VFRCTmVsVXlUbFJCZWsxcVZYbE9hazE2VFZSTmQwMTZTVEJhVkdSb1RrZFZlazVVWTNkTmVrRXdUV3BWTTAxdFNURlBWRTB4VFhwbk1FNXFUWHBPZWxVeVRtcGpNazE2UlRGT2VrMHpUa1JWZVZwcVdUTk9iVmw2VFZSVmVFNTZXWHBPVkZrMVRsUkpNMWxVV21sTmVrVXpUMFJaTUUxNlp6TlBSRmt5VFhwVk1VOVVXbTFPZW1zd1dYcFZORTVVVVROTmVscHRUa2ROTTA5VVRUTk5lbEV5VFZSVk1VMTZZM3BQVkZwb1RYcG5NbHBVV1RGT2Vsa3lXbFJqTVU1cWF6Tk5SRkY2VGtSUk1rNVVVbXRPYW1NelRVUk5kMDVxYXpGTlJGa3hUbXBSTVU1NldYcE9hbFV5V1hwUk5VNUVXWHBQVkZwcVRsUlpNMDlFWXpKT1ZFa3pUMFJOTWs1RVRURk5lbEV6VG1wWk1scEVZekZPUjFGNlRucE5OVTVIUlRCTmFtTTBUbFJuTVU5VVpHaE5lbXQ1V1dwVmVFNUVaM3BPVkZwdFRsUnJNazVVV20xT2FtY3dXbFJOTWs1Nll6Rk5SRnByVG5wbk1VOUVVbTFPUjFVeVQwUlZORTE2U1RKWmVsSnJUbnBWTTA5VVkzaE9iVlV3VG5wU2EwMTZTVE5PZWxVd1RYcHJNazlFWXpKT1Iwa3lXWHBaZWs1RVJYbFphbGswVGxSck1VMUVUWHBPUjFrd1drUlpNazVYUlhwT1JGSm9UbnBCTVU5VVdUSk5la1V4VFhwUk1rNXRXVE5PVkUweFRucEJNRmw2VFRST2JVVXlUMFJaZUUxNmF6Tk9lazB6VFhwRmVrOUVUVFZPYW1Nd1dYcE5ORTVxWXpCWmVtTXhUWHBSTTAxcVRUVk9SR3N4VG1wS2FVNUVWWGxhYWxreVRtcHJNMDU2VVRSTmJVa3pUMFJWTlU1SFNURk5hazE0VFhwWk0wNVVTbWxPUkdzeFRrUlpNVTE2UVRKYWFrMHhUVzFaZWs1NldUTk9WRWt6VG1wV2FFNXFTVEZQVkZFelRXMUpNMWxVV210T2FrMHlUMFJLYlUxNlZUSlpWRlYzVG5wRk1FMVVWWGRPUjFVd1RrUk5NMDVFVVRKYVZHTjRUbTFKTWxwVVVtcE9SRWt5VFdwWk0wNTZWWGxaYWxFeVRucGplazU2VlRGT1JHY3pUMVJqZWs1dFZYcE5lbU42VGxSRmVrNTZXVEZPYW1kNlRrUk5lRTVFV1RKYVZFMHpUbFJOTWxsNlRUSk9SRWt5VG5wS2FVNUVXWHBPUkUweVRsUlJNbHBVVlRST1YwVXhUMVJSTWsxNlRYcE9SRkY2VG1wVmVrOUVVVEJPVkVFeFRVUmFhRTVxU1hwTmFsRXpUbXBaTVUxRVl6Sk9SRWt6VGxSTk1FNTZXVEZPUkZWNlRtcG5NMDVxVlhwT2JWVXpUbXBSTUUxNlkzcE5SRkpxVFhwUk0wMTZUVFJPUjBsNlQwUk5OVTVIVlROT1JFMTNUbTFGTTA1cVZUTk5la1V3V1hwUk5VNUVXVEpPYWxwb1RYcEpNazVxWXpST2FrbDZUMVJhYUU1VVNUQk9hbFYzVFcxWk1FNVVWWGRPYlUweFRrUlJlVTF0U1RGWlZGVXpUbFJqZWsxcVdUQk9SRVV3VDBSWk1FNVVXVEJaZWxGNFRYcE5NMDlVWXpKTmJVa3hUV3BhYWs1dFRUQk9WRTB6VG5wbmVrMTZXbWxPYW1Nd1dYcE5OVTVxWXpGTlJGcHRUbTFKTUZsNlpHaE9iVWt5VFhwS2JVMXRTVEpOYWxVMVRtcFpNazFxVVRWT1IwMTZUbFJSTUU1SFdYcE9hbEUwVFcxWk0wMUVUWHBPUkUxNlRucGpkMDVxWXpCT1JFMDFUbnBOTUU1RVZUVk9iVWt5VG1wTk1FNUhSVEJhYWswMVRucEZNbGw2U21sT1IxRXpUVlJhYTA1RVRUTk5WRkV5VGxSQk0wNXFVVEpOYlZsNlRsUk5lRTVFVVRKT2FrMDBUbTFOTWxwVVZUVk9SR3N4V1ZSTk1FNXFZekJOYWxreVRtMVZNRmxVVW14T2Vtc3lUMVJTYWsxNll6SlphbGw1VG1wck1FMXFVVFJPZWxFd1QxUlpOVTVFWnpOWlZGbDZUbFJaZWs1VVkzaE9WRlV6VGxSVk5FNUhXVEphYWxrd1RXMVpNazlVVFRGTmJVa3lXa1JTYTAxNlVUSlplbFUwVG5wVk1FMVVVVFJPYWtVelRXcFZlRTVVYXpKTmFtTXpUbFJuTVU1NlRYZE9SMDB4VDFSTmVVMTZZekJPVkZWNFRYcFZNVTFxWXpGT2FtY3hUMFJaTUU1SFJUSmFWRkY1VFhwTk1rOVVWVFJPYlVVeVRucGplVTVIU1RGTlJFMDFUa2RKTUU1NlVteE5iVWt3VFhwUk1FNUVZekJaVkdSb1RYcFZlVmxxV1RSTmVrMTZUMVJhYUU1VVp6SmFWR00xVGxSbk1GcHFVbXRPUkZGNlQwUlplazE2UlRKYVJGVTBUWHBqZWs1RVRUQk9hbWN5VFhwWmVrNUVUVEpPZWxreVRYcEJNRmxxV1RKT2JWVXlUbFJaTkU1RVZURlBWRmt6VGxSWmVWbHFWVFZPYW1zelRtcGFiVTVFVFRKTmFrMHhUbFJSTUZscVVtcE9SR016VFdwU2FVNTZTVEpPZWxreFRYcHJNRTE2V1RSTmJVa3lXWHBqZWs1VVFURk5SRkV6VGxSUk1rMTZWWHBPYWtrelQwUmplVTVVWnpGTmFscHFUbnByTVU1VVdtbE9SMVV3V21wUmVFNXRWVE5QVkZKcFRucFZNMWxVWXpCT1JFa3dUa1JWTWs1RVZUTlpWRTB6VGpKRk1VNTZXVEpPVkdzd1QwUktiVTU2WXpOT2VrMTRUa2RSTVU1RVpHaE9hbXQ2VFhwVk1FNUVZM2xaYWxsNVRsZEZlazFxVlhwT1JHY3pUMFJSZVUxNlRUQk9lbGw2VG1wWk1scFVVbWhPYWsxNVdXcFNhVTU2V1RCWmVsRjRUa1JuZWs1NldUTk9lbGt5V1hwWk1VNTZZM2xhYWxrMVRrUkZlazlVVlRWT1ZHY3pUMFJaTUU1SFVUSmFhbEV5VFhwbk1VOVVaR2hPZWxVeFRWUlpNazE2VVROT1JFMDFUWHBuZWs1VVRUUk9lbU42VDFSWmVFNUhUVEJOZWxwc1RrZEpNazVxWTNwT2Fsa3dXWHBaZWs1NmEzcE9lazB5VG5wak1VOUVXbWhPYWtrd1dtcE5NazVVWnpKT1JHTjZUbXByTUZsVVZUUk5lbXN3VFZSYWJFMTZaekJPZW1NeFRrZEpNVmxVU21sT2FtY3hUVVJWZUU1VVZYcE9lbEUxVGtSSk1VNXFaR2hPUkZFeVRtcGFhRTVFVlRKT2FrMDBUbFJyTUU5VVRUQk9SRVV5V2xSTmVrNVhSVEphYWxwcVRtcFpNRTU2VW1sTmJVa3pUMFJTYTA1cVdUQmFSRkpxVFhwbk1GbDZZekZPUjFGNlQwUlNiRTVIVVRGTmVsa3hUa2RWTWxwVVVUQk9SMVV3V1hwWk5FNUVXWGxhYWsxNlRrZE5lVnBxVVhwT2FrMTVXV3BqZDAxNlp6QlpWRXB0VGtSVk1FMVVVVE5OZWtFd1dsUmpNVTE2VVROT1JGVXhUa2RaZVZwcVdtMU5iVmw2VGtSU2FVNXFSVEJPUkZVMFRtcGpNMDFxWXpCT1JHTXpUbXBSZWs1RVl6Tk9WRTB3VGxSWmVWbHFWVEJPYlZVeFRWUmpNazVFVlRCWlZGVXpUWHBCTUU1cVZYZE9SRVV4V1ZSak1VMTZVVEZOYWxwc1RYcHJNbHBFWXpKT1Ixa3lUWHBaTTA1WFJYcFBSRTB6VGxSck0wMUVZM3BPYlZGNVdXcE5NMDVVVFRCWlZGRTFUWHByTWs5VVZUUk5lbEV4VGtSUk1FNTZWWHBQUkZFeVRYcFZNRmxVWXpKT1JFMHdUV3BqTVU1RWF6Sk5WRTB5VGtSck1WbFVUVEpPVkdNeVdrUmpORTVxYXpKWmFtTXhUa1JaTUZwcVRYaE9SMWt5V2xSWk1FNTZTWHBPUkZwb1RucEpNbGxVVlhkT2FrVXdUWHBLYVU1SFdUSmFSRTE2VFhwak1FOUVXVEZOZW1zd1RXcGFiRTU2WXpKWlZGazBUbTFGTWs1cVVYbE9SMDB5V2xSWk5VNVVUWHBOUkZVelRtMVZNbGw2VVRKT1IxbDVXV3BqZWs1RVRUQmFhbU42VGxSVk0wMUVTbTFPYlZFd1QwUlNhMDE2WnpOTmVsVXpUa2RGTUU1RVRYcE5la0V6VG5wVk1VMTZVWHBOZWxKdFRucHJNazU2U20xT2JVVXhUV3BTYUU1RVRUSk9hazE1VGxSWmVrMXFUVEpPUkdzeFRXcFZlRTV0VFhwUFZHTjNUbnBqTVUxNlNtbE9WR3Q2VGtSTk1FNTZSVEpQUkZrd1RqSkZNVTFVVW1sTmJWa3hUVlJhYUU1NldUTk9lbEpyVG0xVk1rNTZVVEpPYWxreVRWUk5NVTVFUlhsWmFsVTFUa2RWZWs1NlVUUk9SRlV3V1hwak1rNHlSVEpOZWxWNlRucFJNMWxVV214T2JWRXpUWHBWZVU1WFJYcE9SRlV4VFhwcmVrMXFZekJPVkdzeVdYcFZNazF0U1RCUFJGVjVUa1JSTTA5RVVtMU9lbGw1V1dwVmVFMTZUVEJPUkZVd1RucEJNazlVU20xTmVtTXpUWHBSZUU1cVVUTlpWRkV6VGtkWk1GbHFVbXROYlVreFRWUlpORTF0U1ROTlJFcHBUbTFGTVU5RVNtbE9SMUY2VG5wTmVrNTZXWGxhYWxVeFRucGpNRTVVVVRCTmJVa3hUbFJqTkU1RVVYcE5lazE2VGxSUk1GbFVZelZPYlVVeVdsUmFhRTVFVFROT1ZHTXpUbnBaTTA1VVdUVk9SMDE1V1dwUmVrNUhUVE5aVkZrd1RYcG5NMDE2U21sT1JGRXdUMFJqTlU1dFZUQk5WR042VFhwbk1FNTZZelJPUkZVeFRVUmplazVIV1ROT1ZGRXpUVzFaTWs1NlVYaE5lbFY2VFVSWk0wNUhTWHBPUkZwclRucG5NRTVFVFhwT2FrMHpUa1JhYlU1SFJYbFphbHB0VG1wWmVrOUVXbXBPVjBVelRXcE5ORTVYUlhwTmVsVXdUbnBqTVUxRVdYaE9WRWw2VDBSak5FNUVTVEZPZWxVd1RXMUplazlFWXpCT1JGVjZUbFJOTTA1VVJUSk5hazB3VG5wUk0wOVVVVEpPVkVFelQxUlJlRTVVUVRCT1ZGVjZUVzFKTUUxVVl6Vk9Na1V4VFVSak5FMTZTVE5PZWxKcVRucG5NVTlVV1ROT1Ixa3lUbXBaZVU1cVRURk5WRlY1VFhwck1scHFZelZOZW1jeFRYcGpNazE2UlRCTmFsRjVUbTFWTWxsNll6Sk9hbXN5V2xSVmQwMTZXVEZOYWxWNFRrUmplazU2VVhwT1ZFRjZUbnBSZUU1RVp6Tk5hbGw1VGpKRmVrNTZWbWhOYlVrd1drUlplazF0V1RKYWFscHFUbXBOTVUxcVVUSk5la2t5VDBSVk1rMTZVVEphUkdNeVRrUm5NRTVxVW10T2VrMHhUMVJOTkU1SFRUTk9WRlV6VGtSWk0wNXFUVE5PYlZWNlQwUmplVTU2VFRKTlZFcHRUbTFaTVUxNlNtMU9WRWt4VGtSTk0wNUVhekZOUkUwd1RrUmpNRnBxVW1wTmVrMHdUWHBWZDA1cVp6TlBSR00wVG0xTmVrNXFXbTFPYlZWNlRsUlJOVTF0U1ROUFJGVTBUbXByTUUxcVRYcE9iVmt5V1ZSU2FrNUVVVE5PYWxVeFRYcFpNbHBFU20xT1JHdDZUa1JOTVUxNlNUQlBSRTAwVG5wck0wNXFZekZOZWxsNlRsUlJNVTVxU1RGUFZGRjVUWHBOTVZsVVdtcE9ha2t3V2xSU2FrNXFXVEphYWxVeVRsUkJlazVFV1ROT2JVbDZUVlJOTTA1SFdUTk9SRXB0VFhwRk1rNTZVbXRPVkZWNlQwUlNhVTF0V1RKWmVrcHRUbFJOTTFsVVRUVk9SMGt5V2tSUmVVNXFUVEJPYWxab1RucHJNRTVVVW1wTmJWa3hUVlJqZDAxNlNUSlphbFYzVG5wck1VNXFWWHBOZW10NlRucFJNMDVxV1ROT2FsRjRUWHBuZWs1RVVtMU5iVWt4VDFSVmVFMTZWVEpaYWxWNlRrZE5lazVFWXpWT1ZFa3lUMFJWZDA1dFNUQk9SRTAxVG0xSk1VNVVUVFJPYWtreFRYcFZlRTF0V1RCYVJFMTVUWHByTVU1RVRYcE5lbEV6VDBSak1rMTZVVEJOYWxwb1RtMUplazE2V1RWT1YwVjZUbnBaTlU1VVdUTk9SRlpvVGpKRk0wOUVXWGxPZWswd1RWUmFhRTE2VlRCTmFsVjVUbnBWTWsxcVRUVk9hbU15V1hwWk5FNUhVVEZQUkZFMVRsUkpNRnBVVVhsT1JFMTZUMFJqZWs1Nlp6SlBSRmt5VG5wbk1rNTZWVFJPYW1zd1RsUlpNazVIV1hwT1JGRjRUbnBKTTFsVVVYaE9SMWw2VDFSak1FNXRVVE5PZWsxNlRtcHJNbHBVVW0xTmVra3dUa1JaTWsxdFdYcFBWRmsxVG1wTmVWcHFXVEJPYWtsNVdtcGFhRTVVVlhwTmVtTXpUa1JSZWs1RVRURk9SMFV3V1ZSYWFFNXFZekpaYWxWM1RsUmpNRTFVVFRST2VrRXpUMVJaTVUxdFdUSk9hbFV6VGtSak1sbDZVbWxPUkdjeVQwUmpORTE2VFhsYWFsVTFUbFJGTUU5RVkzbE9SRlV3V2xSTmVVNTZRVE5PVkZGNlRrUm5NazVxV1hoT2FrVXlUa1JWTUU1VVFUTk5WRTE2VGxSck1sbFVUVEZPYW1NeVRXcFNhMDVIVlhsWmFtUm9Ua2RKTTA1VVVtbE9hbEV6VFZSVmVVNXFVVEpQVkVwdFRrUkZlazU2VlRSTmVtY3dXa1JaTWs1SFNYbFphbEUxVG1wSk1rNUVWbWhPVkdNeldWUlJORTV0VVRCTmFsa3dUbFJGTTFsVVkzcE9hbXN5VFdwak1VNXRWWHBOZWxrMVRucEJlVmxxWXpOT1JFMTZUV3BWTVU1cVp6QlpWR042VGtkSk1VMUVXWGhPYWtrelRsUlJNVTVxVVRGTmFsRXhUVzFaTWxwcVZYcE5lbWN4VDBSak1VNUVhekphYWswMFRYcG5lazFVVFhoT1JHY3lUbXBSZVU1RVVUTk9hbFV4VFhwUmVrNVVUWGhPYWxGNlQwUlpORTVxV1hwUFJGRXpUa2RaTTAxRVZUQk5la2t5VDBSVmQwMTZXWHBQVkZreVRYcFplazlVVVROT1ZFRXpUWHBqTVUxNldURk5WRmt5VGpKRmVrMUVWVEpOYlVrelRucFZlVTU2V1RCT2VscHBUbFJKTUZsNlRUTk9WRTE2VFZSTmVVNUVUWGxaYWxKc1RYcFpNRTlVU20xTmVrMHdXV3BaTVU1cVRURk5SRnBvVGtkWk1sbFVUWHBPVkVFeVQxUlZNRTE2UVROTmFrMDBUbnBSTTA5RVdtbE9WRUY2VFdwU2FrNXFUVE5OYWtwcFRsZEZNVTVxVFRCT1JFMHhUVVJqZWs0eVJUSk9hbHBzVG1wSk1GcEVXbWhOZWxreVRXcFZNVTVVUlRKTlZHUm9UVzFaTTA1VVVUSk5iVmt3V2tSWk5VNHlSVEpPZWsxNFRrZEZNRnBVVFROT2FtTXhUa1JOZUU1NlZUTk5SRmswVFhwUk1rOVVVVEJPZW1jd1RucFZkMDU2VFROT2VsbDZUbXBGTUZscVpHaE9SMGw1V1dwU2EwNXFZM3BPUkZVd1RucEplazFFVFRWTmVsa3hUbnBWTlU1RVJURk5SR00wVG1wWk1GcFVVbWhPYW1jelRWUlZNVTV0VlhsWmFrcHBUbXBGZWs1NldUSk9iVkV3VFdwWk1rNUVWVEJaZWxrMVRYcGpNMDlFVVRST1ZHY3dUbXBWZVU1RVJURlBSRTAxVGxkRmVrMUVUVEJOZWswd1RsUlNhRTVxVlRCUFZFMHhUbXBOTTA1NlZYZE9la2t3VDBSS2FVNUhTWGxaYWxVMVRrZEZNbHBxV1RST1Ixa3hUVlJqZDAxNlJUSlplbU42VGxSRk1VMUVUVFJPYW1zeFRtcGFhVTE2V1RCTlZGVjVUbFJuTVUxcVdtaE9WR2N5VDBSTmQwNUVWVEpPZWswMVRrZFpNRmxxWkdoT1ZFRXdUbnBTYTA1cVdUQk9WRnB0VG1wbk1scFVVVE5PYlVWNlRsUlNhRTVxV1RKTmFsRTFUbXBaZWs1NlVURk9hbGt6VG5wVk1FMXRXVE5QZE4wWUFBQkhSWGRhZWxadFdsRmFiRnB0ZUROYWJWb3dRVkZhTWt4SGNETkJlbG93UWxGTmQwRjZSREphUjNBelFXMUliRXgzY0ROQlIweHRRVzFhTkVGSFJEQkJkMDEyUVZGMGJWcFJUWHBhYlhRelFXMUVORnA2VmpOYWJVeHRRVWRhTTBKUlRHMWFiWEF3UVcxSWExcHRjRE5CVVV3MFFXMVdNMHhIY0RKYWJVNHdUWGRhTTBGdGNEQk5SMWQyUVcxU01GcDNXalZCZDNneFdrZEVNMEZVUkRKTlVWb3hRVWQ0TWt4M1dtcEJVVll4UVcxRmVWcHRlREZCYlUxNVFXMUlNRTEzUlhsYWJYQXlURWRFTWxwdGVEQkNVVm8wUVZSU01FeHRXbXhCVkZJeVFsRk1iRUZIUkROTVIwMTZRVzFPYkV4M1JHdEJSMDV0V2tkTmVGcHRXbTFhUjB3MVFVZE1NMXB0VFhWYWJVZ3lURWRFTUVGSFJETkJkMFF5UVhkNE0wSkhSRFJhYlZZeldsRmFOVnB0ZURGYVVVd3hRVkY0TUV4SFdqVkJVVWd3UWxGYU5VRkhlREJNYlhGMVFWRldiRTEzY0cxYWJVeHRRVzFNTkZwNlZqTmFiVWd3UVVkV01reHRSRFJhYlhBd1RVZHdNVUZ0VGpCTWQxb3dRVlJFTTFwdFRYaEJVVVJzVEhkTmVFRlVXakJCVVZkNlFWRndNbHBIY1hWQk1sSXlRbEZJYTFwdGVETmFiVm8xV20xTU1WcHRSRE5CZDNReVRHMXdORUY2VWpKTlIwMTNRVWRFTWxwM1RHMUJWRll3UWxGRU1VRkhUak5hUjBReFFYZE1iVUpIVEROQmQzUnNUWGRJTTBGUmNESk1kMGhxUVZGV00wRjNUR3RCZWxKdFdtMU1NMXB0UkRGQlVVMTVXbTFNTUZwSFRESkJkMGd5VEVkTU5WcDZURzFCZDB3MVFYZFdNMXBSV2pWQmJYUXdUWGRNTVVGdGREQk1iVnB0V20xMGJVRnRUWGxCZWxZd1RHMXdiVUY2VmpGQ1VVVjJRWGRNTVZwdFNEUkJSM2d4UVZGWGVscDZWakJNZDBocVFYcGFNRUYzVEcxQlVWWnRRVzF3YkVGUlRHMUJVVVYxUVcxV01GcDNjREphYlZJelFVZHdiVUY2UkcxQ1IwVjZRVlJNYlZwM1REUkJkM2d5UVhkWGVrRnRVakpNYlhBMVdtMVNNMXBSY0cxQmJYQXpXbmRGZVVGdFdqTkNSMDExUVhkYU1reEhWM3BCU2xJeFRFZGFNRUZSVm0xYWJYQXlRVlJNTTBKUlJETmFiWGd4UWtkeGRWcHRjRE5hVVhBMVFXMU1Na3hIUkcxQmVrZ3hRVzFNTkVGM2RETkNVVVY2UVhkRU1FSkhTR3BCYlZvd1duZGFNVnB0ZURKQmJWcHRRVWRJTWxwdFYzcEJSMGd3UVhkd05VRlJkREpCZDBWNFFXMUViVUZSY0ROQmQxSnRRVkZJYkVGNldqSk5VVVJzUVVkMGJWcEhSWGRCUjNRd1FYZHdiVUV5VWpCQ1VYQTBRVkZhTTBGM1RYaEJVVVJ0UWtkSU1FRjZTRE5DUjBReVFWRk1NbHAzVFhsQmVsb3lRVkZJTlVGNlNHMUJVWEF6UVVwU2JVRjNjRFZCTWxJd1FXMWFOVUZIUkRCYWJVd3dRWGRNYkUxM1JHeEJTbEl6V20xSU0xcHRSREJCVVVRd1FXMVdNa3hIVEcxQlVWcHRRbEZhTkVGSFRtMUNVVWhxUVVkd01GcHRXalJCYlU0elFXMU5lVUZ0U0ROQ1IwZzBXbTFPTVV4SFYzWmFiVXd3UWxGTWJVRjNXakJOZDFvMFFXMTBiVnBSVjNwQlVYQXhXbmR4ZFVGNlNERkJkM0JxV20xYU1VSkhXakZCZDNneVFrZGFORUZ0Y0RKTWJVMTRRWGQ0TVVKUmNEUkJWRVF5UVZGeGRWcHRVakpNZDBocVFVZDRNRUYzVjNaQmJVUnRXbEZOZVVGUlVqSkJkMDEyUVZGME1FRkhSR3hCZDB3d1FrZE1iVnB0U0RGQ1VVVjZRVlJXYkUxM1dqVmFla3d6UVZGTU1WcDZUREpCZDBWNVdtMUVNMEYzV2pWQmQwZ3hRWGR4ZFZwdFJEQk1SMFEwUVVkYWJVSkhTREZCTWxJd1RHMUlORUYzU0ROQlVVbDFRWGRFTWtGM1REVkJiWGh0V20xRmVFRjNkREZhUjFvd1FYZE1NMXBSY0d0QlIwd3hRa2RhYkVGdGRETmFkM0F3UVhkU01reHRXakZCZDBReldsRk5lRUZSVEROQlVVMTZRVEpTTTFwSFdqVkJiVTR5VFhkYU1scHRURE5hUjNCcVFXMVdNRnB0V2pOQlIwUXpXbmRNYlVGNlRETk1SMFYzUVVkT01rRjNTREJCYlZvd1FWRk5la0ZIVG0xQlVWcHNRVzEwYlVKSFdqQkJkMUl6V25kRmVrRkhXak5CVVV4clFYcEVNRUYzVERCQmVrd3lUVkZJYWtGM2NHMWFVWEJzUVRKU01FRnRUR3RCUjNBelFVZGFOVUYzU0RGQlIwMTRXbTFXTUVGM1JYaEJla3h0V2tkd01rRjNkREpCUjAxNldtMXdNa0YzUlhoQlZGWnRRbEZhTlVGdGRHeE1kMW8xUVVkNE0wSkhXalZCUjNneldtMU1NRnB0UkRGYVVWb3hRVzFNTVZwM1JYZEJiVXd3UVcxRU1rRjZTREpOUjBRelFVZE1NazFSU0RKYWJYUXlRWGR3TWtGVVJEQmFiVTExV20xMGJWcEhjR3RhYlZJeldsRk5kVUZ0VERKYWQwZ3pXbTFXTTBGdFJYZEJkM2d6V20xd00wRnRUREphYlVWNldtMTBiVnAzUkRWQmQwUXpRa2RhTkZwdFdqQk5VWEJzUVZSRU1FeHRXalJCVVV3eVFVZEpkVnB0VGpOQmQwaHJRVzFTTWtGM1NETkJVVm95UVhkSU1FRlJURE5hUjBRelFWRjBiVUZ0Y1hWYWJWb3hRVzFNTUVGSFVqSmFkMFExUVVwU00wSkhjRFJCZDFveVRFZEVNVUY2U0cxQlVVd3lRWHBhTVZwUlREUkJkMHd5UVhkd05VRXlVbTFDVVVnelFXMTRNRTFIUlhsQlIxb3dRVkZhYlVGdFNEQk5VVWcxV25wV01FSkhSR3hhYlhneVRIZElORUYzVmpOQlIzQTFRVWQwTTBKUlJYaEJiWGd5V2tkd01FRjNVakJDUjFkMlFVZEVNMEYzV2pSQlIwNHlUVWR3YkVGSGVETmFkMW8xUVZSSU1rSlJUR3hhZWt3elFsRk1NVUZIY0RCQmJVUXpWMm93V0hGVlYyTnZlbmt3Y2taT09WWlFjVkZGYlZZMWJsTnhVMEV6ZFd0WU0wVkpSMHAxV2tGNFptMXhWVnBsV1RCclRHOTNkVk5ZTTNWUlNVcG5XVTE0WjIxSmVGZHFSa2hqVVVsSU5XeE1NVTk1Ym5oNE0xcHRWMFZDVURsUmIwbFhVVWg1ZVZsTlZFMVVjSGQxUTBKSFUyUnZSMU13U0VkRU0zSjNRVlZIU0dJeFJubEZhM0JSVERKS1VEbEVjVEk1ZDBFeFNUUmFla2t5YmxKSmQyOHhlV1ZhTVhRd2JubFRZbTVMVFRSWU1uUXhUVEZOWVVsS2VXeHllR05HY0VsQmJFWkdaekZJTW1wc2NWVndNa2xIVDFOSFlVbFJTRkp3Tkc5VlFWSndVWGd6VFV0eGJYRnNPVEpJZUVGQlNYZEJaRVF4VFc1d1NFRjVTR0ZCTTBwU1dtVkVkMEZoU1ZWalUwZFZTR3R4U2tFeGIwcGlNVnA2WTBOeFVubHNUREpYVjBWSU9YbHlWR0pwY2xReGRuSkhSWGhLVVhsMWNXeG5aRWxLZVcxR2VrRjVjbEpGVVZnelJHMWFTM1ZYUm5sallrWXdXbVZITTFOU2IwbzFRMjVKZVVSd01uRkNURzFJTWsweVYyZEJSMGd5Y0RGWFJYQjZhMEZIUzNGRFRVWTVRMEpIVjNkTk1ERjVTbFZYUlc5dFFXVkdNMDh6UlZSalZWaHRUV0Z2TTJNd1JEQjFUVXg2UVZkS2QzZzFTVkZYZGtFelJVSkJNMEZLVFZWVGRrWlVkWHB1ZUdac2JrZE5VMWt3UlZSR2VFRlVXakpCWkc4elYzaEpVRGxrYmtkd01FbEpSVWRNU210M1JEQnFhMW93WjNWR1MxTlJRVEZKWVZneVNVdHhNM1ZuUmxBNE1rZ3hTV05hVW1kcVFrbEZVRUpUZVdKdVVWSXpTSFk1WmtwNVNXMUJWVTlyUjFRNGJVMUxRVTlOTWpocVNuZE1NRTFHT1hsdVZGTnRRbEphYVc4elZqQnZNMEV4UVRKQldIQkxSVlpDU1VScGNrcGpORUpTY1daSWVHb3pjRWhKU1VKS1ZqSkVTV05JY0ZJeE5VeGhUV3R1U0VsNVdraEVOVzR5VWpWTlVrbFBSMHBYVDNCUlVqVkpNSGt4V1d3NVZWcEpVMWxhUzNsVFRVdGpWMEV4Y1U5YWVtTk5RWGR4WjFwVmVXTkpTMEZaY0hoblRISlFPR3R3U1VWSlFWTkZiVWRSVmpKSlNFVlpUVEo1YTBsNk9HVkVTMFJ0UjB0QmFVeHRjRzFLUjFadFRIZzVkbkI1ZUcxWU1uVkZia1puWVVRelRHcEhkamw0U0ZORWJGb3hlVUpCUjFOYWNsUkZhRzVRWjJkdk1VRmtUVWg1YWtSNk9VaHdNMFZSUVVvME1uQlJlVWxCTVdObGIwcEpabTlWZVhwYU0xZExURXBCZFhCSWNWSnlZWFJxY0RCblYwMUtNRFJFZUUxQmJuWTVaM0JoZUdWd1NHTXlXbEZ4WVc5VmVVaGFWSGxuUkRKRlNVRkhTREZhVTBSbFJrcE1iRTFMVEdsSmVVMWxSbnAxUTI4d1JHeGFiVVJyUlcxT01rRkhkVWxHTWt4c1JFZHhlWEI2ZVdKQlZXSnFSVk5TYkVoNk1WQnhlbmsxUkhkVE5VMHlaMGRCTW5GUVRFZFBXSEF5WjJoYU1rMUxXbEZCVWxodFJXTk1la2syV1cxWFRISlVVakpZTWsxQlFsUkZRa3BTVFhWSmJEbHNjRzFUTVZwSVFVbHZiVk5WU2xWeE5uQktUWGxhU1dOSlFVdFRkMGxKWTNsTlVYQnRia2xpYVVsUlNEQkVTbE5SU25wRlIxcHRUMEZFU0VGR1JYcDFiRzh4VTJKRWVtdGhTREkxUTFvd1p6RnhNRmQ1VEhkVGFHNUlOR3hHU0RCdGNESTFZVVo0Y1hWdVNqbGlSblk1VFc5SFFWcEVTakYxU21GQldGcEhSV05HVW1kWVRYbFhNVmd4VFV4Qk1qRjNSVXAwTlVGNGVESkdVVVJ0V20xeGVuRkthekp5VkRGalFWTjRORUZSUlhoQ1NqRkdUVkZUVlZveVJVdGFNRVZ0UVRKNVlVSkxjWGx5ZGpsNlJEQk5kVXA1Y0d0QlVVVldSbTE1U0VaNlNESkdkMGxyVFZKd1pXOTNSVTl5U0UxbFRYcG5ha0pIUVVsTk1YRkpTVkZXTTBSSWVXbE1NMFEwVFVsNGJVZDZkV3ROTUdkSVNVdHhSRzVTVTNWRlZFbFBjSGxYVFVGUmVXVnVNM0ZOYmpCWE0yOHpVMVZJZVZJd1JucDVkMDB6VTNwdVVuQXhRWGd4YVV4aGNUQk5TWFYxYm5wNGFYQlNaMGRHZDNGWGJrZFdORzVLTUdWdmVuVXliak5OZUVSS1NHcEJNSFZqVFVoNVIwWlFPV05LUjBnd2JtMUZNMjh5VTFwRWQzRkZSVWxYVkZnd1YxSktTRUZaY1VwMU5IRXpUR3RDU0VsNmJraHhkbGd5ZVVSdVNHWnRRWGRGUlc4d1NERkllakUwVFROVGVVWlJlR3RJU0RobFRFZElNRWRJWTNwRlZHTnRSa2RYVmtwNGFqRkhTbGRZVFZGUFVYQjNkV3h2UzNGamNIcGpUSEIzZVRGTlNEbERjRWhJYkc1S1UwZEdNamxTUkRKSlowVlVhMWhhTVZONlJVcDVORWxJWm1sTVIzRlBUR0ZGTVhGc1ptcEZTbGQ2U2xSaWFscEpkR3BhVkhWSVNIbDFNVVpLY1cxYWVtTm9TbmwxUlhCSFFXeE5NWFUxY1cxSU5FSlNaMUJaYlhWUGNIbzVhRzVMWXpKSlNtTm1RVWxCYlVRemNVTkNVVUZWV0RCallrWktRVlZHZUUwMWNuaFhhVzU0UVVkeFNsZHJSakZUYVZwNFVtcEJVbkZtVFVocmFtOHdZelpIUjNodFNETlRZbkJTVTJsTk1IbFZiak5CZVVsNE1XRkJNMEUwUWxSbmEyOTVlWGhJVlhBMFdrdEJSRnAzZVdOd1MyTTBTRW94ZUZodGVXdEJTamxrV2tabWFrcFVNV1pOTW10Q1FWUXdNWEJJU1ZodWVFbFRTVkY1YkhFelFYcHllVTltUkRBNVJVSkxWMU5OU210MWIzZE1aVWt6Uldod2VuUTFUR0ZFTWxreFJWaHZNVmRRUVZSRmFuRlVUWGxGWVhrMVFYWm5la0ZVTVdoYVMxY3hSbmROUVUxMk9EUk1Na1Y2Y1ZGYWEzSjRlV3BhZWxJeVdUQlNhbTR6UlZWd2QzaHRiMHRqZVc0eWEzWmFTbE5pYmxWNWJIQXhUalJHTUhobFRUTkViRWd6WTJod1ZFVjRTSHByYlVoU1FUVkJTMEY0UWxKQmRuSjNUMUJ1VURsR2NIcFRNM0ZWUVROYU0wZzFjSGRTTVUxS01XcEJiVk40YjBkSmFXOXRlV0p1VUdkdFJraGplVm94VjJwS2VqQnNRbEZ3TVVaU1UyMUJTbkJyYmt0eFJrWXdSVkZ4VW5sRGNGUTVXVWxIVXpWdWVrMW5XR3htYlVKVlFUVmFVMFEwV1RGTlZISjZlVVZDU0VRd1FUSXhaMEpWVGpKWU1Fa3hSRW8xVVc5NmRYcEpVWFZvUVRKaU5FWjVSWGR1TW5GbGIwZHdNSEZ0VFZoYVNqUnJSVzFYWm04eFQweHdVamd3VEVZNVlVSkdaMnRCTWsxSFNrZzVaMWh0Y1ZKYWRtWTBUVk4xU1VwNVkwOU5lR3BwY0VabllrMVNWMFJ1U2pWTWIxVnhlVWRJWmpCS1NGZHRRVEYxTWtwM2NVeHdTR1psU1VkMWQwa3hVMmxCUjNGQmNVZE5aM0JMUlRaWU1rbHBUVlJXTTNGVFNWZEdTSEZOU1hZNVRFMTRSVUZNU25sTlRFbDFhVXhJTldadmVVd3pSVWRUVTFreU1YWk5VWEZvUkdGQlRFVnRRWFZCVVhreldUQXhNRWhMVG14dWJVRnBjbmc0YlUxTFUwbFpNakJ0Uld3NVJrUmhZM1ZHUmpsaVIxUTVZa3hoY1cxR1UyTTJTVk5YZWtsNmVURmFkM2x0Y1VkSU1sa3lPV2h3VkhGVVNuaGpNbTVIZVZCeVlYbFFSWGQ1YmxreGVYZHZNbmxYV2xCblVVaEhUR2xKVW1veWNGTlBVVVpoZERWQlMxTnBjVWhyVFVWVlVqVkhNR04yYmxWNU5VZ3hjR3BDVlVGMWNrbDVZVTE1WTI1d2VWZHRjRWhqU0VoU1RWWktTRVExY0cxNWJFaHRlVVpGYlU4emJqSm5aVVYzU1ZOQmQxWnFTWHB3YTFwUlJVSnVNMFZUUWtocmFrWjZPVlpGZUhGbFJqQm5ZMjVSUkdWQ1NqbDNRVEpOUVhBeVRWRmFTa3d5UlVkeFprZDVVMHRIVkdOVmNrcEpaRXhJWjFOQk1FRk1USGRQYlZwaFUxRndVbkZHY1ZSTlkyOTJaakJKUjNWM2NtRmpRVnA0ZUdsdk1tdGhTVW81YWtadGRVOXVTRmRIVEVwRlluSjZNV3h5ZUdOaFNIbFBiVVpMVDNadU1FRllSVEY1VmtaS1JVTllNa1Y2Y1RCd2JFRklkRzF2YkRsWFdHMXhNVTFJVjJoRk0zUXdibEpKYmtGUlNHVkhkMFZKU2tsNWEwSkxZMHBIUjNWblIzbzVaMEZJZFdkQlUxTmtSVEl4UTFneGVHMXZlalF5UVRCcldsb3hUVWR3VWpWMVNGUjVla3g0YW10eFMzZzBUVEJNYlVGSFNWWnVTakZwY0VwRmVWb3pUMWR1WVZkNVFsSnJiRzlUVTJoSVVYZzBjRXRqZVVaSFRHMUdTWEZKU0cxSU0yOUhSV05DVTAxSFNrbFhaVVY0ZVdodWQzRkNiMUpxYlhGSVNWVkpTRmRJYjNkQldVbFRjR1ZHUjB3MFJrcDFia2t3TVdWeFNsTlBTRXRFYTFwVFFYWkZNa2xaVFhocldFSlNNREJhZW5GdVJVdE5Za2xWVjIxd2VXTkRSWFpuYUVGdFV6TnVTR2RWVERKeGQwaDZNR2xOTVZJMVRVdE5OVUpKU1cxRWJVbG1TRlJ4YUhCNk9XUkVNMDlzY2xRNE0xcEtWMnRNUzFwcGJucGpla1F3UVdGRVNrRnFTVWwwYVVaUU9VRkdSMDFzY0VoNE5IQjVWMHRCTUVWYWJubzBNMDE2ZVVGTk1FRmpTVXRQUTFneVRUTmFlR2RTY1RKd01FMVNjWGxhU25WUlJuWTVSSEJMWTFadU0wVlVSVXBUVjBwTGNXRnZTakZCVEhwNE1XOVFabXBIZVhCdFdubDRNVVo1VWpSQ1NYZzFSSGxhWlc4eGNVZE1NVWd6UVZKNVVFcDVZMkZZTUhGSGJ6RnhVRVl4UVhoeFIzRkpjSGRJTkc4d1RYWk5NMEY1Um5oV1pVMVVVMnhFZUhWYWNEQXhRMFV4VjFsTk1rMWhiMHBKZGtGS1pqTndVbmhzUjFWUFdHOHhWelpOTVZkUFFUTkJhMGQ2U1dGS1NrZ3pTbE41V0Znd2VXMWFSM2xZY1RKMWRsbHNaalJ1VW10dGJucE5hRzlIZFdGdmJWTm1XbmhuWTBWSGRXSkdSM2xhY0ZKblpVRjZkVFZDVlZkblFWRkJiVzh3ZFd0S2QwRkhRWGQxWTI1VFNYZEdVa0Y0UVRGamJsZ3hZMVZOZURFemJqQkZVVVV5V2pOR1NVVnVXVE4xVTNCMk9XbHVVa0V4UjFWamRVaEdPVVZIVUdjelRYbEpXbTlKUkRKWWJHZDVTRk5JTUVWdFFXUkNVVVJsVFhvNGFWcExlRFJLVVVsRGNXMU5lVVZIVnpaTlZFRnNRVXBCWVVFeFltdGFTMFZIUkdGMVkwMTRZMEZCVTBGRlFVcDVOVVp0UlhWeFZVOXFjRXA1Ulc0eWRVeEhTalY1VFZWNVYwd3pZMnhKZW10clRESklaVzlLT1ZOS1IwbGFjSGg1VlhCNmVXRkhVMWRyVFhkNVlVeDZlVlJCVWxJeldqQkpiVzh3ZFdKWk1qVXpSRWRFYlhKS2RYbEdkMWRqUmpJNVFVY3lPVEZOU0hsaFNVdElNa2xoVEdwS2VtTkpjVWRJWlc5dFVtMU5lbU5FUVZKblJIQlNNVmRDVlZOamIzbDBNRTB3ZFdoQlZHSXlXbFYxWlVoM2NYaHVVM1EwVFcxRlpVRlRUVzFKVlU5bFRVcE5NVTE0Uld4SVIwOWhSRE5NYWsxNmVXeHdNRXh0UVZSblJFMUhVMmxIU2xjemJrZ3hSMjR6Vm10Rk1qbEJSWHAxVkV3eVJYbEtZVWhyYjBsRlZYRkpRWGR4VVVGUWJ6STVXVUpLVjJSSlMxZFBiekpGVEhGVGVHVmFSMDh4UVhobk1YQmhXbTFOTTBGSFRHMVhSa2RHWmpSTWQwNXNUVE5QYTI5VFNHcEZlVWxOY1RCalNFUXhUV05FZW5sclduZFRNa0ZLZUcxRlVqbEtRbEpCWmt4SVpteHZkamxyV25sYU5FbEdaM2xJZDFJMFFYWTVibTh3YW14dmJYbDJURWRUYlVSS2VHMWFla1V3V0RCQmRVd3pSR2x5U2t4c2JrdEpOa2RIY1hoSE1rVnNia2hKZDBGSVkyWkNTM2xwUm5kQlkwSlJjV05NU25ScFdUSk5WVVV6Y0d0dmQxZHRURzFUZFUxNFpqRmFlblZOYjBsaU5XOUtjV05NWVVGSGNWUTBNM0IzY1Zkdk1WTmhia3RCUkc1Nk5XdFlNazE2Y1VkUGJFZFZVMmh4TVhGclFrbFRXVTB5T1Vkd2VtZGljRlJJTTBReFQySk1NRkl6UnpGRlZraEtSV1Z2UjFONWJsRlhlbHAzVTFkSlZGWXhSVzFKVTBkVU1WbEZiR2RhU1hkVFdXNHdaekZhTVdOSVFYZFRXRVF6VTNkS1NGSmxSVWx4V0hKNGNWbEdVblZuYm0xUFUwRjNWMFJDVlV4cFRVbDFaVVV6ZFVWQlNtTjVSbEY1WjAxS1JWUk5NRWxwVFZOamFrRnRVM2RHVWxObmNUTmpka1o2YTJOR1ZFMWtURWhCU0VVeVkyTkhVMHhxUkhkMFpVa3pUMkZHZWpRMVNVbDFUVVIzVEcxSVNuVlVTVXR4TmtWVmVHcEhVWEUxY21GQmVuSkhTVFJNU0dJeWIxVjVkMFV5TVZKQ1VubG5TREo1U25KSFRHVkZlblZpYnpGTlVIRkpjV2R5UjNocGNsSTRhVnBzY0VGUWVqbHNURXBCWmsxR1RqbFdVSEF5VEVkd01VRkhVakJCZDFwc1FVZE9NbHB0V2pWQlVYUXlXa2R3TkVGSFJESk1kMFF5UVZSU2JVSlJURzFhYlZJeVFWRkVOVUZSUkcxQmQxbzBRWGRNTTBGUlRHMUJiWFF5UVhkYWJVRnRkR3hNZDB4c1dtMXdNa0pIVFhoQlIwZ3hRVkZGZWtGM1VqTk1SMHcxV25wTU1rMTNSWGxCZDFZeVRIZGFNVnB0U0RKQmQwMTZRWHBNTUUxUmNHcEJiWEF5UVhkd01VRkhUbXhNZDAxMlFWUk1NVUZIU0RCYWJWSXpXbEZ3TlVGdFdqTmFSMXB0UVhwV2JWcDNUWFpCUjA0eVRYZElORUYzU0cxYWQxcHNRVzFPTUVGUldqVkJSMFJ0V2tkRU0wRjNXbTFDVVVWM1FXMVNNRUZSVFhoQmJYUXlURWR3TlVGUlJESkNSMHd4UVVkV01GcHRXakpCZDNneVFrZE5lbHB0U0RCTlIxb3pRWGR3YlVKUldtdGFiVll4UVcxSWEwRlJXbTFhVVV3eVFWUldNRUZ0Y0RWQmJWWXdRWGRhTWxwdFJESk1kMDE1UVVkYU1reHRSRFZCVkVReVduZEZka0Y2UkRCQlIxcHFRVzFTTUV4dFRERkJSM1RkR0FBQVdUQlplazB5VG5wQk1GbFVXbWhPZWtrd1RtcFJNVTVFVFROTlZGcHBUbFJyTUZwRVkzcE9WRTB4VFdwTmVFNXRVWHBOYWxrelRrUm5lazlVVlhsT1JHc3hUbnBqTTA1SFZUTk5lbFY1VGxSbk1FMTZXbXBPYlZVelRucFZNazV0U1RKYVZFMHpUbnBGTUZwVVl6Qk9SMDB3V1dwV2FFNVVZek5PVkZreFRrZE5NVTlFWXpOT2FrMHpXVlJWZUU1NlZYcE5hbFV4VGtkVk1sbDZXVFZPVjBVeFRucGplazE2V1RKYVZFMTNUbTFWTUZsNlRYaE9lazE2VG5wU2FVNXFSVEZOYWsweVRYcEpNRTFxVFRWT2JVVjZUbXBhYWs1NldUQk9hbGw0VGxSWk0wMUVVVEJPZW1zd1RsUmFhMDU2UlRCT2VrMHpUbFJaTVUxVVdURk9iVVV5VG1wYWFrNXFUVEJQVkUwelRYcEpNRTE2VFRST1ZHTXpUMVJqZDA1NlRURk5SRlV4VFcxWk1VMTZZM2xPZWxFeVRXcGpORTV0U1ROT2FsSnFUbTFGTUUxcVZYaE9SR3N4VG5wak5FMTZVWHBPUkZreFRucEpNVTFFVVRKT2JVa3dUMFJOTlU1VVVUQlpWRlY0VFhwVk1rMXFXbWhOYlZsNlRVUmFhMDVVYXpGTmVtTXdUbnBWTTA5RVl6Uk9ha2t6VDBSU2FrMTZXVE5OYWxGNFRtMU5NRmxVVm1oT1JFa3lXV3BqZVU1SFdURk9hbGw0VFhwSk1FMXFXVEZPZWxFeVdsUmFhazVFYXpKT1ZGWm9UbXBuTWsxcVdtdE5la1V4VFZSU2FrNVVZek5QUkdOM1RucE5NMDlVV1hsT1JFbDZUMVJWTUU1cVNUSlplbEUxVG5wTk1VNVVWVEZPYlUweFRucE5NRTV0VlRGTmVtTXpUbTFSTWs1RVdtaE9iVkV6VGtSVk1FNUVXVEpPZWxreVRrZFJNMDFxWXpWT2JWRXdXbFJaTTAxNlRURlBWRXBwVGtkVmVrNXFUWHBPUkVsNlQwUlNhVTVVVFhwTlJGVXdUbFJWTWxsVVdtbE5lbEV6VGxSamVFNXFVVE5OZWxrMFRtcFJNMDFVV21sT1ZGVXlUbnBSTVU1cWF6Rk5WRnBxVGxSWk1FNVVXbXBOZWxreVdrUlZNazVFVlhsYWFsbDRUbTFKTTA1VVVUVk9WRkV6VDFSVk5VNXFZek5PUkZrMFRsZEZNRTU2WTNwT2VrMHhXVlJSTTA1NlZUSlBWRnByVGtSWk1scHFUWGRPZWsweVQxUlpNazU2VFRKWlZFMHlUWHBOTUZsVVdtbE9SMGw2VFVSVk1VNTZVVEpaVkZVd1RsZEZNazE2V1RWTmVra3lUMFJWZDAxNll6Sk5WRTB3VFhwSk1VMVVZM2xPVkdjelRVUmFiRTVxU1RKWmVsVXpUbFJqTUZwcVkzbE9iVWt5VFZSTmQwNVVVVEpOVkZab1RtMVZNVTlVV1hsT1JHTXdUMFJqTWsxNlZUSmFSR00xVGxkRk1rNXFXWGxPYWsweFRWUlZlazVIVVROT2FrMTNUbFJOTTAxVVdUVk5lbXQ2VG1wUk5VNUhXVEZPVkZVd1RYcG5NbHBxVlROT2JVVXhUbXBSZWs1NmF6Sk5hbEV4VGxSWk1GbFVVbWxOZWxGNlRXcGpNRTVIVlRGT2FsRTFUWHBSZVZscVdtbE9WRkV4VDBSTk0wNVVUVEpOYWsweVRtcG5NazVxVW1wT1JFa3hUa1JaTlU1SFRURlBSRmsxVGtkTk1GbFVVbWhPVkdNelRYcEthVTV0U1RGTlZGSnBUbFJSTUU1cVVYaE9WR2N6VG1wYWFVNXFZM3BPZWxWNlRucEZlazU2VW1sT2JWVXdUbXBqTUU1SFRUQk9hbHBxVFhwTmVrMXFZek5OZWtVeVRYcE5lazF0V1ROT2VsRjZUWHBaTTA5VVZUUk9WR013V2xSU2FVNVVUVEZaVkUwMFRucFJNMDVVV210T2VtTXlXVlJhYWs1dFdUQk5WRnBxVGtSWk1VMVVWVEpPZWtFeldWUmplazV0UlRKT1JGbDVUbFJqTUU1cVdURk5la2t6VDFSamVFNVhSWHBOYWxFMVRsUlpNMDVxV1ROT2Fra3dXWHBOZUU1cVNUTk9WR041VGxSSk0wOVVUWGxPYWtreFdWUmFhMDU2YTNwT1JGVTFUWHBCTUU5RVdYaE9iVlV3VFdwWk0wNTZVVEZOZWxKc1RucFJNRnBFV1hoTmVrRXlXVlJaTUU1cWF6QlplbEpxVGxSak0wOUVWWHBPYWtreVQwUlplVTE2WnpCWmVrMTVUbFJaTUZsNldUVk5lbGw2VFhwVmVVNXRSWHBPUkZwc1RrUk5NMDU2VlRCT2VtY3pUWHBhYVU1cVVUSmFSRnBwVGxkRk0wNUVXbWhPYWtVd1QxUk5lRTVVVlRKWmVsRXlUa2RKZWsxRVdUUk9hbEV6VFVSVmQwNVVZekJQVkZVMFRsUmpNRTVVV1RKT1ZFbDZUbnBSTVU1VVp6TlBWRTAxVGtSTk1VNUVWVFZOZWsweFRYcEthVTVxWnpKYVZGRXlUWHBGZVZscVVUQk9WRUY2VFVSamQwNTZRVEphVkZKdFRYcE5NMDU2VlRGT1ZFMHlXbFJhYUU1NmF6QmFWRTB4VG1wWk0wNUVZekpPUjFrelQxUmpOVTVxVFRGT1ZGSnRUWHBKTWsxNlVtbE9WRmw2VFZSak1rNTZRVEJPVkZVelRtMVpNazFxVlhwTmVra3pUVVJWTlUxNlNUSmFhbU14VGtkSmVWbHFVbWxOZW1jeFRsUlZlVTVIU1RKUFZGazFUWHBKTWxscVdteE9lbWQ1V21wWk5VNHlSWHBQVkZFMVRXMUpNRTVxVFhsT2Vra3pUbXBSTlU1NlRYbGFhbU4zVG0xTmVrNXFWWGRPUkZsNlRWUmpNazVVVlRKT2VtTjVUbFJuTUU1NlRYbE9hbGw2VG1wVk1VNTZVVEZOZWxVMVRtMVpNazlVU20xTmJWa3hXVlJqTWsxdFNUSk9lbU15VG1wck1VMTZUVEpPYW1jeFQwUmpOVTVFV1RCYWFtTXpUbnBuTVU1VVZYbE5lbXN5V1hwUk0wNTZhek5PUkZwcVRtcFZNRmxVVlRST1ZFMHhUa1JOTTA1SFJUSk5WRlUwVGtkWmVrOVVXWHBPUjBrd1dXcFZOVTVIU1ROTlJGVXdUbFJKTTA5VVdUQk9WRWt5VFZSVk1VMTZRVEJaVkUweFRrUk5NMDFxVlRST1ZHTXlUWHBaTUUxNlNUQmFSRTAwVGxSVk1rMTZZM2hPYlZVeVdsUk5NVTVxWXpOTlJFMHhUbXBuTVUxRVpHaE9WRTB5VFdwS2JVNTZRVEZPVkUweVRtMUpNazlFVlRCT2JWa3hUMFJqTlU1cWEzcE5SRlY1VFhwTmVrOVVVVFZPYlVrd1RrUlpORTVIUlRGTmVsRXlUbFJyTTAxcVZURk9iVTB5VDFSVk5VNVVWWGxhYWswd1RtcGplazVFWTNwT2VsRXdXbXBqZDA1dFRURk9SR014VG5wck1rOUVXWGxOZW1jeFRrUlNhVTV0U1RGTlZGSm9UbnBuTWsxNll6Uk5la2w2VGxSTk1VNXRWVEZPVkUxNVRucE5NRTFVVlROT2VsbDZUbnBWZUU1dFdUTk5SRlV5VGxSamVrOVVVVEZOYlZsNlQxUlZlRTVFVlhwTmFsVXlUbXBuTUUxNlVtaE5lbGt3V2tSVmVFNXRTVEphUkZWNVRtcHJNMDVFVW1sT2JWVXdXbFJqZUU1cVVUQk9hbGw0VG0xWk0wOVVWVFZPVkVVeVdrUmplRTVIUlRGTlJHTjZUbTFOZWs1RVdtdE9WRVV3V21wUk5FMTZTVEJPZWxKcFRtcFJNVTVFVFRGT1ZFMHhUa1JqTkU1SFJUSk9SRkpvVG5wRk1sbHFUVEJPUjBVeFRtcFZlRTVVUVhwT2VsRXpUWHBCTUZsNldUUk5lbGt5V1dwU2FrNVVTVEpaYWxVd1RtcEZNMDU2VFhsT1ZGRXpUVVJhYVU1dFVUTlBWRTB5VG1wWk0wMVVVbTFPUkVVd1dWUk5lRTE2VFROTmFsVjVUa1JGZWsxcVdtbE5lbXN6VDBSU2EwMTZhekJPVkdONVRtcEpNRTE2V21wT2VrVXhUMVJWZVU1NlJURk9hbHB0VGxSWk1VMVVUWHBPUjAwelRXcE5NRTVxWnpKUFZFMTVUbnBSTVUxVVVUVk5la1V4VDBSUmVVNXRXVEZOZWxGNlRucFJlazlFVFRST1ZGRjVXbXBWTWs1RVZURk5hbGt6VFcxWk1rOVVUVFJPUkZrd1dWUmpkMDE2VVRKTlZGa3pUa1JaTWxsVVZUUk9lbGt6VFVSVmVVNUVhekZOZWsxNFRucFpNazFxV1hoT1Iwa3dUWHBOZVU1cVZUTk5WRlV3VFcxSk1VOVVUWGRPUjBVeFRVUmpOVTU2YXpGT1JGa3hUbTFSTUZsNlVtcE9SMDE2VFVSTmVrNXFZekJPUkdNMFRsUm5NbGxVV21oT1IxVXhUVlJrYUU1VWEzcE9SRkp0VG5wUmVrMVVZelJOZWswelQwUlpNRTU2UlRCTmFrMDFUa2RWZWs1cVZYaE9hbXN6VDBSWmVFNVVhM3BPZWswMFRsUmpNMDVxVVhsT1IxRjZUVlJOTUU1cVVUTk5lbEUxVG0xSk1scFVZM2RPUjFreFRYcEthVTE2VVhwTmFsazFUa1JWTUU5RVRUTk9SRWt4VG1wak5VNXFXVEpQUkZWM1RucFZNRmxVVFRST2FsRjZUbnBWTVU1cVZUSk5lazE0VGtSak1VNTZXWHBPVkZVd1RXcGFhRTU2YXpOUFZGVTBUbTFKTWxwVVNtMU9SRWt4VG1wU2FVNXRSVEJaZWxrelRtcG5NVTVxWXpOT2VsRXlXa1JhYVUxdFdYcE5hbU4zVGxSUmVWbHFVWGxPYW1NeVdXcGplVTVIU1RGT2FsVXdUbTFGZVZwcVkzcE9SRWt4VG1wS2JVNVVhek5QUkdONFRYcEZNRTE2WXpKT2VsRjZUMVJWZDA1cVZUQk5lazB3VGxSVk0wMTZWWHBOZW1ONlRXcFpORTVxUlhwUFJGRXdUVzFaTTA5RVdtcE5iVmt6VDBSUmVFNUVaek5aVkdNeFRXMUpNVTVxVlhkT2VrVXlXbXBhYUU1VVZUSk9lbGw1VGxSSk0wNVVVbWhPZW1NelRWUlJORTV0VFRCTmVrMTVUbnBCTWxsNll6Uk9SMFY2VGtSWk5VNVVRWHBOUkZsNVRucEJNRTFVVFROT1ZHc3hUVlJaTlUxNlVYcE5WR016VG1wRk0wNUVXVEpOZWtVd1RtcFNiRTVFVFRKYVZGRXpUa1JWTTAxcVRYaE9SMVV3VG5wUk1rNTZZekpQUkZsNVRYcG5NRTVVWTNoT2VrVXdXV3BOTkU1cVVURk9hbEpxVG5wRmVrMTZXbTFPYlVrelRrUlZNazVFV1hsWmFsVTBUbnByZWsxNldUUk9SRmt4VFZSU2JFNVVUWHBOYWxWM1RsUkZNVmxVU21sT2FtTjZUa1JqZDA1VVFUSk9hbEV4VG5wWmVrNXFXbWxPUjFVelRucFZlVTE2UlROTmFsRTFUWHBKTUZsVVdYcE9WRTB6VGxSV2FFNTZaek5PYW1NMVRucE5lazVFVlRST2VrVXlXV3BaTVU1SFJYbGFha3BwVFhwWmVWbHFZM2hPVkZFd1RrUlNiVTVVUlRKTmFrMDFUbTFWTWs5VVRUVk9hazB5V2xSUk1rNVVVVE5QVkZwc1RYcE5lazlFV1RST1ZGa3dUbXBOTkU1NlFUQk9la3BwVFhwbk0wMXFUWGhPUkZFd1RtcFNhazVYUlROT2VsRTBUbnBSTWsxcVZUTk9lbEY2VG1wYWFFNVVWVEJPYWxwcVRrUk5NVTVxV1RKT1JFa3pUVlJSTUU1SFdUQmFSRmt4VG5wVk1FMTZXbWhOZWtreFRsUlNhVTVVVFRKT2FsSnNUbXBOTWxsNlNtMU9SMDB6VFZSYWFrNTZVWHBPYW1ONFRsUnJNRTVVVlhkT2VsVXhUbnBOTkU1VVl6SmFSRkV4VGtkSk1VNUVZM2xPUjAweFRtcFZlazF0U1ROTmFsSnBUbGRGTWxsNll6Vk9WRWt6VFZSak1FNTZVVEJhVkZsNlRsUk5NbHBFWXpCT2FrVjZUMFJXYUU1RVZUTk5WRkpyVG5wVk1VNXFVVEpPUjFrd1RrUlZORTV0VFROTlJGVjZUa2RWTTA5RVVtaE9la2t5VG5wak1FNVVRVEpaVkZab1RsUkpNbHBFVlhsT2JWRXpUMVJOTVU1cVp6Rk9WRlV5VG0xVk1VMTZWbWhPZWtVd1RsUmthRTV0U1RCYVZFMTRUWHBWTVZsVVVURk9SMVV6VDBSak5VNUVVVEJPZWxwcVRrUkpNRmxVVFRST2VtTXhUa1JWZDA0eVJYcFBSRnByVGtkSk1scEVZelZOZWxreVQwUmpkMDVIVlRCWlZGa3lUa1JKTUZscVl6Sk9hbXN5VGtSak1VNUhXVE5PZWxsNVRtcHJNazFxWTNsT2JWRjZUbXBqTTA1VVNURk5WRTE2VFhwVk1FMXFVWGxOZW1zeFRYcGpNazVFVlhwUFZFMHhUa2RGTVU1RVRUUk9SMDB5V2xSWmVVNVVhekZPYW1NMVRtMVpNazU2VFRGT1ZFVjZUVlJqZVU1cVkzcE5lazB6VG0xRk1GcHFXVEpPVjBVeFRVUk5NazVFYXpOUFZGVTBUa1JKTVUxRVVtcE9hbXN5VFdwamVFNUVUWHBPYWxsNVRsUlpNRTU2VW10TmVrRjZUbFJaZVU1VVdUTk5SRmw1VG0xTk1GbHFXWHBPZWsxNlRrUmFhVTE2V1RCT1JFMTZUbnBaZWsxVVl6Vk5lbEY1V1dwUk5VNUVWWHBOYWxKc1RrUnJlVnBxVVROT1JGVjVXV3BqZUU1RVNURk5WR04zVGxSbk1rMVVVVEZPUjFFeFRYcFJNRTV0VVRCT1ZGa3pUbTFaTTA1cVVURk9hbGt5VFdwYWEwNXFSVEJhUkdSb1RrZEZNMDVVV1RKT1JHZDZUV3BqZUU1SFZYcE5SRmsxVFhwRk1VOVVUVFZOZW1zelRsUmplRTV0VlhwUFZGVXdUa1JyTUU5VVdYbE9iVWw2VDBSTmQwNTZTVEpQVkZVMVRsUlJlazU2V21wT2FrbDVXV3BqZUU1VVVYcFBWRlY0VGxSTk0wNXFZek5PZWtFd1RXcFJlazVFYXpKWmFsVXlUa1JSTWs5VVdtbE9hbFV5V21wUmVrMXRTVE5OVkZGNFRtcFJNVTlVVVRWT2FtY3dUbXBSZWsxdFNUTk9hazE2VGtkTk1FMTZZekZPUkdzd1dXcFZNVTVxWnpKYVJGRTFUWHBaZWs5RVVtaE9ha2t5VFZSUk5FMXRXVEJQVkZKcVRtMUZNMDFFVVRST2JWa3lXWHBSTkU1NlNYcFBSR04zVGtkWmVrOVVZM2hPUkZFeVdYcFJNRTVVVFROT2FsVXlUa2RSTWxwRVZUSk9SRkV5V1hwUk5VMTZXVEJPYWxsNFRYcHJNRTVVVVhwT2FsVjZUVlJSTUU1RVRUSmFSRkpyVGxSVk1rMVVXVE5PYlVVelRXcFpOVTE2WXpOWlZGVXhUbFJCZWsxNlVtMU5lazB3V1ZSak1FNVVUVEJPUkdNMFRrUkZNRnBxWXpKT2FtTXdUWHBaTlU1SFJUQmFhazB6VG0xUk0wNVVVVFZPUjFVeFRWUlpOVTU2U1ROUFJGbDVUa1JKTTA1cVl6Rk9SMGt3VDBSa2FFNUVZekpPYWxKclRrUk5lazlFVlhsT2VrVjZUVVJqTVU1VVRUTk9lbFV4VG5wbk1VNXFVbTFOYlVrd1RsUlNhVTVxVFRCUFZGa3dUWHBOTUZscVdUSk9hazB5V1ZSVk1rNUVUWHBQUkZFeFRYcEZNbGxxWXpST1ZFMHpUbXBSTlU1NlJYcE9lbFpvVG5wWk1GcFVVVFZPYlUweVRsUlJlazE2YXpGUFJGSm9UbnByTWsxcVkzaE9SRWt4VFVSVk5VNXRUVEZaVkZrelRtMUpNRTVxVlhwT2JWVXpUMFJhYUUxNlRUSk9lbU14VG5wbk1rNXFXbXBPVkdzd1dWUlpNRTVVVlROT2VsSnBUbnBCTWsxVVVtbE9lbEV3VG5wU2FVMTZaekpQUkUxNFRucG5NVTE2VFRWT2VrRXpUWHBqTTAxNlRUQk5lbGt5VGtkUk0wMXFUVFJPTWtVd1dXcGpNazE2VVRCT1ZGRjZUbFJqTVUxNll6Sk9SMGt5V1dwU2FrNXRUVEpOZWxVMVRsUkpNMDVVVlRWT2FtY3pUbFJWTUU1SFRURk5hbGt5VFhwbk0wNUVXbXhPYlVrd1QxUlNhazVxVlROUFZGRjVUbFJWTTA1cVRURk9iVVV3V2xSVmVrMTZVVEpPYWxVd1RucFplazVxVlhoT2Vra3dUMVJWZVU1dFZUQlBWRkV5VG5wSmVrNVVZM2hPYlVreFRsUk5NMDE2UlRCT2Vsa3lUWHBOTWs1VVVUSk9hbU16VGxSS2JVNXRUVEJOZWxwdFRrUm5NazU2VVROT1Iwa3lXV3BqTTA1VVZUTk9WRTAwVGxSTk0wNTZTbTFOZWtreVdXcFJNRTE2YXpOTmFsSnFUbTFSTTAxVVdUTk9la0Y2VGtSU2FFNHlSVEZPVkZKclRtcFJNRnBVVlRKT1JFa3hUVVJaTlU1VVFUQmFWRlV4VFhwVk1VOUVUWGhPUkZVeVdWUlNhRTV0U1RCYWFtTjNUWHBOTWs1RVVtdE9SRmw2VFhwTmVVNUVUVEJPVkZVd1RsUm5NRnBxV1hsT1ZGa3dUWHBTYVU1RVdUSmFSRkV3VGtkTk1sbHFXWGhPVkdzd1dWUlJlRTVVVFROTlJGSnJUWHBKTUU5VVdYcE5lbU16VDBSak5VNTZZekJPZW1ONlRsUlJNazE2WTNwT1ZGa3lUMVJhYWs1SFNUTk5lbEpyVGxSVmVrOUVUVEJPYWxrd1dWUmplVTU2UVRGTmFtTjVUbTFKTVUxcVVtdE9lbGw2VDBSamVrNVVXVEJhYW1NeFRsUnJNMDVFVFRGT1JFMHhUVVJSZVU1RVl6QlphbEV6VG1wTk1GcHFUVFZPUkdNelRXcE5lRTVFVVRGT2FsSnBUbTFSZVZscVkzZE9WRVY2VFZSamQwNVVZek5OZWxFeVRYcHJNVTFVVFhkTmVtTjZUVVJaTkU1cVRURk9WRTAxVFhwck1VOUVUVFJPYlVreVQxUmpORTE2WXpOTlZGWm9UWHBaTWsxcVZUQk9Na1Y1V21wWk5VNTZXWGxaYWxKb1RrUkZNbGxVVFhsT1ZFVXdUbFJaTkU1VVNUTk5WRnByVGtSSk1VMVVXbXBOZWxrelQxUmthRTVFWTNwTlZGVjRUbXBWTTA1cVdtaE9SRVV5V2tSWk1FNUhSWGxhYWswd1RsUmpNbGxxV1RST2JWa3lUMVJTYkU1cVVUSk9SR015VGtkRk1GcFVUVE5PYlZreFRXcE5ORTU2YXpCWmVrMTRUa1JKTUZwcVl6Sk9SRkV6VFhwUmVrNTZWVEZOVkdONFRYcE5NVTFxVFROTmVtTjZUbnBhYWs1RVNUQk5lazB4VG0xVk1rMTZXbTFPVkdNeVQxUk5NVTVFV1RGT1ZGVXpUbTFWTWs1cVZUUk5lbXN4VFdwUk5VNUVZek5aVkdSb1RtcG5NRnBxU20xT2JWVjZUbXBaTkU1SFNUSmFSRTE2VGtSak1sbDZZM2hPUkVreVRrUlJNRTU2U1ROTmVsazFUa2RWTTA1VVRUQk9iVkV5VDFSV2FFNUVXWHBOUkUxM1RucG5NVTE2VW0xT2Fsa3dUWHBOTUUxNldURk5lbEV4VG5wQk1rNUVUWGhPVkVreVRrUkthVTU2VFRKWmFrMTZUbXBuTVU1cVpHaE9lbWN5VGtSS2JVNXRUVE5QVkdONlRrZEZNVTFVV1ROTmVrMHlXa1JaTkU1dFRUTk9lbEV5VG0xSk1rNVVZM3BPYW1zd1QwUlNhRTVVUVRCWmFscHFUbFJGZWsxNlZUTk5la1V4VDBSUk5VNUVXVEpQVkZVeVRtcFJNbHBFVW1oT1JHdDVXbXBTYWs1SFdUSlBSRkpwVGxSQk0wMVVWVEpPZW1jd1RtcFNhRTVFYTNwT1ZGVjNUWHBGTUUxNll6Sk9iVWt6VFdwU2FVNUVSVEZQUkUwd1RucEpNRnBFV210T2JVMHdUWHBOTWs1NldYcE9lbEV5VGxSUk0wMUVUVFZOZW1zeFRucGFhRTE2WjNwTlJGVjZUWHBWTVU1cVl6Sk9WRVV5VG1wVk1VNTZWVEZPZWsweFRsUlZNRmxxWXpKT2FrMHdUV3BLYVU1SFJUSk9lbFY1VG5wSk0wMUVVbXhOZW1jd1RrUmplRTVVU1RCWmFtTTBUVzFaTTFsVVl6Vk9WR3Q2VGxSak5VNTZVVEZQVkdSb1RYcEpNRnBVVFRST1ZFa3pUbXBaTTA1SFNUQmFWRTB3VGtSbmVWcHFVbXBPUkVVeldWUlpOVTE2VlROT2VscHFUWHBGTWs1RVkzaE9SRTB6VFhwWk1VNVVhekpOZWxKb1RsUm5NMDlFVVRST2FtTXpUV3BOZUU1SFdYcE5WRTE1VG1wWk1FMTZWWHBPYWxreVRYcGFhVTVFVVROTlZGSnBUa1JqTUUxVVl6Uk5lbFV6VFVSVmVrMTZXVEphUkZreVRucEZNbGw2VVRSTmJVa3lXVlJOZUU1NlNUQk5lbEV5VFhwamVrNVVUVEJOZWxVeFRsUlJlVTVxWjNsYWFsVXpUbFJaTUZscVdYbE5lbWN4VG1wak1rNUhTVE5OYWxGNlRXMVpNRmxVV1RKT2Vra3dUbFJOTkUxNll6QlBWRlV5VGxSVk1rMXFXVFZPZWtFeFRYcFdhRTVVVlRCWlZHTXhUbnBaTUUxcVdUVk9iVlV4VDBSWk5VNVVVVE5OVkUweFRtMVpNazlVWTNkTmVsRXdUbFJqZDAxNldUSk5WRTB5VFhwck0wMUVZM3BPZW1zd1dWUmFhazVVV1RCWmFtTjRUbTFOTWs5VVl6Rk9hbXN3VGtSUmVrNTZWVE5OUkZwclRucFJlazVFV1ROT2JVVXpUbXBaZUU1cVp6Qk5hbGt4VG1wcmVrNVVUWGRPYlZFeVRtcFplazU2UVRGT2FtTnozUmdBQURWQmJVZ3pXa2RFTlVGNlRERkJkM0YxUVVkYU1reHRXbTFCZWtReFFWRlhka0ZIUkd4TWQwMTNXbnBNTWt4dFJEUmFiWFJ0UVhkTU5FRnRkREZhYlZkNldtMTBNa0pIY0d4QmJYUXlRVkZFTTBGM1JEQk5kMGd5UVcxMGJVRkhTRFZCVVZadFFXMUVOVUZ0U0ROTVIwVjZRWGQ0TVVKUmNEUkJiVXd5V2tkSU5FRnRURzFDUjBRd1FVZDBNRXgzV2pSQlIzZ3hXbEZhTUVGNlZqSkNSMDE2V20xNE1GcDNTR3RCZWtnelFrZHdNa0ZSZUcxYVVVZ3lRVlJFTWtGM2NEVkJkMFF3VFhkTU1VRktVakJCUjAxNFFYZE1NMEZ0U0RCYWJVaHRRVWRFTWtGUlJERkNVVVYxUVhkRU0wRnRjREpCUjB3eFFVZE5lVUYzZURKTWQweHRRVWQwTUV4SFJYZEJkM1F3UVZGRmRrRnRXakJCYlVWMldtMXdNRUZIY0RSQlIxWXpRWGRNTkVGVVVqSk5SM0F3UVZGTU0wSlJUR3RCZWtSdFduZEZlRUZSVmpGQlVVMTRRWGRFTTFwSGNHMUJkMHd4VEVkRU0wRjZSREpCVVZwc1FXMUVNMHhIVEcxQlIwaHNUSGRJYkZwdFRESmFiVTE1UVhkRU1rRjNjREZCVVhBeVRWRklhbHB0V20xQlIwUTFRVzFJTUVGSGNEVmFiWFF6UWxGYU1FRktVak5hUjFveldtMUVNVnBSY0d4QmVsWXdXa2RhTkVGNlRHMWFVWEF3UVRKU2JFeDNSR3hCUjB3d1FYZHdhMXB0U0cxQlIxbzFRVzFhTVV4SFNYVkJla2h0V2tkd05VRkhkRE5hZDBnelFYZE1NRnB0Ukd0QmQxSnRXa2RGZVZwdFJERkNSMXBxV20xTWJWcDNXbXRCZWxKc1RYZHdOVUYzVmpGQmJVaHNRVkY0YlZwM2NHcGFiVVF5UVZGTU5GcDZUREJNUjBoclFYZGFNa3h0U1hWYWJWWXhXbmRJTkVGdFNETmFkMGwxUVhwTWJVRlJjREJCYlZvd1RWRk5la0ZIVGpCQmQwaHFRVWRNTWt4M1JHdEJiVWd6V25kd2FrRlJUR3hOZDB3MFFYZE1Na3h0U0RWQlZGb3lXbTFOZGtGSFNESkJVWEYxV25wTU1WcDNjR3hCZDFveVRIZEVORUY2Vm0xYVIzQXlRVWRhTTFwdFJEVkJiVTR5UVhkRU5FRkhUREphYlUxNFdtMWFNa0ZIY0RGQmJYZ3pURWRJTWtGdFZqQk1SMHd4UVcxSU1FMUhUREJCUjBnd1RYZEVORUZSY0cxYVVVZ3pRVlJNTTBGUlJYWkJSM1F5VEVkRU1VRlVXakJNUjNBMVdtMUlNMEZIUlhoQmQxSnRXa2RFTkVFeVVqSk5kMW96UVRKU01WcEhXbXBhYlhBelFVZE5kMEZ0ZEROQmJVZ3dRVWRPTTFwUlJYaGFiWGd3VFhkSWJVRlVWakphYlZwcVFVZDRNVUZ0UlhkQmJVd3dRWGR3YWtGM1JERmFkMFF6V20xd00xcFJSREphZWt3eVFYZEVNVUZ0U0RGYWJVUXpRWGRNTWxwdFJESkJSMW95VFZGYU5FRlJjRE5NUjBSdFFYcEViVUYzV2pKQmJVd3lUWGR3TUVGM1JETkJkM0YxUVhwV2JVRlJXakJCYlVReVFsRkVORUYzVEROQlIxb3lRVWQ0TWtGdFJESkJNbEl6UWxGd05FRkhSRzFCUjFvd1FXMUlNRUpSUkRKQmVsSXhRa2RNTlVGUlZtMWFkMHd6UVVkU2JVSlJjRFJCZWxJelRFZGFOVUY2U0RCQlVVZ3pRVkZNTWtGSGNHdEJWRkp0V2xGTU1VRjZSREZDVVVRMFFWUldNMXAzVERGYWJWWXdUVkZJYkVGdFVqTkJVVm93UVZSV2JWcDNTRE5CUjA0elFXMXdOVUZSUkcxQ1IwUnRXbnBNYlVKSFRYaEJSMHd4UWxGRmVVRjZSREphUjBnMFFWRk1NVUZ0V210QlVVd3lUSGRhTUVGSFJHMUJkMWQ2UVZGRU0wRjNSWHBCUjBReVRVZEVNRUZVU0RKYWQwMTRRVzF3TWtKSGNHeGFiVTR3VFZGd2JFRlVTREpCZDFwclducFdNRnB0U0d4YWJWb3pRVWROZWtGM1NHeE1kMFYxUVcxU2JVRlJTREphZWxadFFrZE1iRUZVVWpKYWQwd3dRVWR3TUVGdFNHcGFiWEJ0UWxGRU1scHRkREZCUjAxNFFXMUViVUpIY0dwYWJYaHNUWGRGZDBGUlJESkJVVVEwUVZGME1FRkhXak5CZWxKdFFWRkZla0ZIZEcxQlIwVjJRVzEwTTFwdFRESkJlbEp0UWtkd2EwRjNWakpNUjFwdFdtMU1NMEYzU1hWYWVrd3lXbmRJTkVGdFNHMUNSMW94V20xV01rSlJXalJCYlhnd1RFZE1ORnB0ZURCTWJVZzBRVEpTTTFwSGNEQkJlbG94UWxGWGRscHRSRzFDVVV3d1Yyb3dXRzR5U1RWdlNsTmxUVXRXZEVOR1RtRlpNbmxZY25oQlIwaEhlVkpDU0hscldrbzVlRUZoVGpCeE0wdzFjVkE1YVVsVldtdHdlWFV3U0ZSNVpscDRaM2hDVWtGQlNGUkpha1F5WjJWYU1VVkxSakJ4YWtKS2RHdHhWVmR0VFVsU01VSkhTVWxHU0V4c1JXMVBlVzlIVTFkTlZFVlVRVWR3YkVZeFUwVk5NVWxvV25sWGQxbHRWbXhGU1VsTGIyMUJWMFl3Y1V0QlUwUnBTa3RQYlhGSVJWbHhNblF6V0d4bWJVUjRRWGhNYlhocmJsQm5ZM0JJY1ZSeVZFVXhURE5qWjNCVVZteHZiWFZHY1VwTU5Gb3hVbXB5UjBRMVNESjVhM0ZTWTBoRlMySnBja2hUZDBkSGRXcGFSMVkwU1hsMVJYSlRWak51TTJKcFdtMUJWMGRLZUdsS2VXTkJSREpKVkc1NE5HMWFTbFpsV2pGNGFrMTVUR2x2ZW5CdFFVZE5WM0F5TVRGSlZIUnRTbmxGYlhCNlUyeENTMGwyY1ROQmFIRXlSWGx1U0RsWVdqSTRiRVJMVnpOdk1WbzBjREo1UlVkUmVEUnVTMGxCV1RCalIxcEtPVU5NWVhodGJrdEJhM0pIVFhaQk1tZHJjbUYwTkV4NmNYZHVkMFZoVEhwSU5VcDVUMmx5UjBGWGJtRlhTVXBUVTBwdk0xWTBiMGwxTTBsSFNXZE1kM0ZqVFhkVFlVZFJWMmhCZW1OdFRUSk1NRVpLVjNoQmQweHFXakZCVlVWSVoydEJNMU5yV20xRlRGZ3llVXBDVWtGbFdETmphVVYzY0dwdmVIRmpSakpxYkc5M1JUTkJkMEZZYm14bU0yNHlOVTFDVUdka2IxUXhabGd4VWpSRU1YRXlUVlJyTW5FelJHbEpTbkZyU1ZGTlRISjZVMWRHVkZONlFsSXhhbTl0VFd0SWVuQmxTREJCYVVwVlRUVmFNSEEwY25ablpVWXdUR3hhU21NMmIxUkVNa2xKZUcxTmJVOXJTSHBTWlZneFlqUkdTVmMxUVhkWFkwVXhVMnR3WVdKcldUQjFObTh4VjNaQmJYVkRjRWw1VFVWM1NXaEJVRGxEUlV0SU5YSlVUVlJDUjNCcmNVaG5hMWd5TldsTWVuRkdia3R4WjBWM1YybEtkM2d3UVZKblRVRjNVMkpHZW1wdFNFbE5XWEJUVTB4dWQxTnNiMHBNTUhGaFYwMXZTamhzVFV0NWRrUXpWMkphUjFkVldubEZiRTFMUVZOTmVuVlBjVkJuU1VFeFkxbHlTbW94UkVsd2EwVXhSV1Z1WVZka1JqRldNMjkzVFZGSlNGZFZia2RYVkVoNVJXMUpiWGw2Y0VsNWRVRlNhMWRHVTBsMWNESnJNRzlKU1dOdU1WZDVjRXA1UWtaaFUyWnhNbVl4UnpKQloxZ3ljVmxaTUdkUmNucG5TbGt4VDFwYWQzUXpSbE5QWWtaSlNVbEpiRGxQYmpJeE1FWlVZbWxJZUhBMVNIaFhhVUZWVFU5TlUzbFRSbmQxVkUxdFRqRk5NMkl5Y0VvNVdFSktjR3RFWVZOWVNXMXhabHBMVGpOdlZFbFJTa2RTWlhKS2FqSmFNblZJY2t0SllVRnRkV1JJUzFOb1JETlBhRUpWY0RSeGJWcHNUVkZYWVVGSGNVUkdTMWMyUlVnNVlsa3dPR3BhZW1NeVNWUm5NSEZWVFdOR2QzVlZXbTFCVEVRd1kxbHlVM2d3UVRCMWJXNXRlV0Z2TWxKcmNIcDFRVmt5VTJ4RWVGTlBUVkE1VjBSSlUyVktWVmRpUWxRMVdrMXRlV2hKVVU5WlJIcHhkVXd6Y0RWRmVIQnRibFE0YlVkVlFWcE5la2xoVFROVFlVUXlhMlJDU1hSclNGUkVORmt5ZURWYU0wMWhXbFI1WVVoTFZqUkhkbWRDU1ZOSlprWjZUVmhCUzA5dFJqQk5OVnBMVGpOSlNIVlRXREZGUm05dGVHdEdlVVF3V2pCVGVVMVRTRzFGVWtsblJERkpaVVV3VW1sd1VYRkhXbUZXWlZwVlYybFpNRUUxU0hvMVdHNHplV1JDUzFkMlRESTVUSEV3YTJwQllXTlhRa3AxUTAxSU9UVkNTR05vUVZScmJVeElVbXBhZVdOUGNFcElNRUY1ZFVORWVqazFXVE5QTWtoUlYyaHlTMEZWV2xBNVVFZEllVmxOU1hocWNEQmpkVzVIVDJkYU1HZG1URWw1TVVaSlNVaHdkMDFzY2t0alkweEpUV3hCTWpWalNuZFhWa2gzU1hsSlNuRk1RVEo0TVVKTGVXeHlTakZ0UmxORmRtNVVWMkZ1TWpWTFRYaFRNRmd6Vm1wR2JYVklSVEp4UTBsNFUySkpSM2xqUmtoQmEyOVFaMDFOU21ObVJrdDRhbTlLT0d0d1NqbENRVEkxUjI1SVozbHZSMGxqUmtkTk5tOUtabVZhU2sxdGNGUjVRMXA1U1U5SGVrMVFURzFQV0hCU1ltcGFlVmRpUmtvME1VWlNNWHB1YlU5SlJIcGlNazB6Y1dOYU1WTkRjSGw1YkVSdGRWcEJiVmRNY1hkWFJVeDVUbXhITWsxM1JqSTVlRWN3WnpOdlIwNWxXbTFCVTBaNmNXSndlbXRyUldGSWFrZFZRVFZOVVU5WVRFZEZSVWxTTVZOS2QzUTFRVXRqV0VaMk9VVmFTV05LY1ZKWFIxcDNlRFJJTVVVMWNraG5iRWQyT1ZORlNGb3djSGRPYVVwS1NXSmFlbWRQUWtveFluQlNSWFZKZDFJemJrcG1ORzk0YWpWSFNrbHRibTF4VWt4c09ETkdkM0ZzVFhsaVpVbFZRVkJKVTBsWmJsSjVSM0I2UVdWYVIxWTFjbFJJTTBrd1JVRndlbXRSUld4bWJYSmhjR3h2VlZKdGIzbHhXRUV3UVVkWmJYbFpSa2hKUVV4M2NVOXdTVWw0V2tkT2JFVXllVTF2U1V4bGJraHhhRWN6VmpOQlIwUnRUWGRGWm05S2NXeHZSMU5qY0VsNE5VWkhkV053U0hsMVJsVkJaMjR5ZVROeVZEbDViakJxTTBoU1UzcHlTblY2VFhsamJFWkllRE54U0hsaVdsUk1hMGx0VXpSRWQxWnRTbFJ3WlZwR09HVnZNa2xoY0VnNE0xcExZME5hZUdkalNWUjVibkpTVFU5Rk1HZFdUWHB3YTNCdGNWWlpNRmRxUjB0d01scHNaMnRhYlZObmNERjRhMFF3Y1d4eGVtZFlia3BCVVVGS01YbHZlRlpzUWtwRlluRktTVmxOU0VGVlFYcHJVRWhVZFZoWk1HZFJXbm8xZDI0elFWZEZTR05yUjNwd1pXOHdNRE5hZGpsaFdtMVRkVTB5ZVVSYU0zbFpUSGRKYlVKS1UydGFVMDVsV2tkMVprZ3hlVEZ4TW1KclFWVmpkMEpIY1VadVNIbFJSakk1V0ZwNVNEQkhiVnBwU2xGUE1reExRV1JNZUZOdGIzaEJiRVY0TURKSFZWWnNiekppYTBkdFJXSllNamxvY25kQmFrWktjVUZ4YlVGcFJsUjVNbTlTT0dWQ1IwUnBXRzFUYUc1S05UUkJTazF1U0ZKblNuRlZUWGRFYlVsSldHMUJaVUZVT0RCdllVUmxUWGxhTVVGVlFXRnViWGxoUmpCRWJVSkhVMlZ1VlZjelJtMWFiRzlUWTFkd1ZIRlhUVzFOZW5GaFFXNWFiVk5aVEV0NVdtNUxUakJZTWtGR1JUQXhZVXg0TldsdWJYRnNXa2RKZUZneU5YWmFiWGxMUjFWSlUwVjZRWFZIUjBscFIwZDFUVnA2U1U5R2VrbHNUVWRCUmxneVNYbHdkM2xKV25oeFprbDNkREpOUzFabFJqQkJSbHBLUVd4Tk1GWnNXVEYxYVVZelUwOWFTMVl5YnpKSmVWcElhbXRhTUVGdFNFaEJRazFHT1doSlNFd3lia2hYWmtoVFlqSnVlbE5aYjNwRlpFRXlOV1p4TVhrMlFVbEpNMFl3YTJodlNqUnBTVEkxZUVKVWREQlliVWx1Y1ZGNVVHOWhTRE5LVkhGNWNFaEZZMjU2YTNkSU0xZEtXVE5QWlUxNlRXTkpZVmRIY0RCQlIyOTVlRzFaTWxjelRXeG5hbkpLVjBoTVNYZ3dTa2Q1VVVReWNESnVTbkY1UmpOU05VVlZTVzFOYlU5YWIwcDVZMFY2TkRGR1ZWSTFTVE5YTlVSdFRXWklVa0V6UkhobmRtOHdWbWxHUzFadFFWUTFNMjk0Wm14YU1EVjJSM2RXWlVSc09WRmFSbWRwYnpCTVpYQlVRVXR4ZWtreFNrWTVhMGw2ZFdaR1VWZDJSbEZKV0VremVESkJNR050UVhveGJVaElUVk5hTW5GMlNVcE5TRzk2VjBKeFNtTmlTR0Y1TTI1VVREQkpTblJ0Y2tabldsa3lOV3hLVVUxNlJraGlNRzVWVTJGSU0zbDZjRXBYWW5KMlp6RkpTazF0UVcxTmFrWjZXalJKU2pGSFdURjFURnA2Vm1sR1NEbExXREJuVWxreFNUUnZNVlpyY0ZSVFUxb3pUWFpaTUhVMFdESk5RMXAzY1ZsSFJqaHFSR0ZYV2tSaGNEVkZTalF3Y1VwamEwMUxkR2xOZUVsaVIzbHhZVVJIVW1sRWJVRjRXa2ROTVVsM2NHVk5VbmxoU0VsU05Wa3dkV3RhTUdjMVRFaG5aVWhLZFdadlNERlJURXB3TVhBeVNWVkdTVmRFVERGVE5rRXpVMGhLZWpsc1FUSXhVVVV4WW1sS1NtTktSREpKV0c4eU5XaEdTazFRVFRJME1uQXlPVWhKVkhCc1RWSkpVVWhLY0d4SFIwaHNSak5KZGtkSFRVSnZVamwxUkRCWFQyNUhkVEZJZVVocmNEQndaVVpVWm10SlVqRTJSREpYWWtZd1pqVk1lR05zVFVkSk1rbHRRVlpCZVhsMVNETkJaVVJJVTJwSGVFMWxTSFpuUVhKaFRqSkpTRUZWUVcxeFRXNUxlV0p3VlUxM2NESXdiSEJHT1RWSFZWZDJjRzFGWjI4eWEyZEtlRmRuY0ROamVrMVNSREZHTW1ZMVFrdGFhMDE2Y1hWQ1IzbFpTbnBJYWsxNVVqVkdlRVZrYm5sUGJuQXdURE51VTNRMFIwbzRhWEJKUVdOSWJVVm9ia3BuVVVkMloxaEViVTR6VFVwV01FMUxVMmRNYlhGcFRWQm1iWEpIVTJ0dlNEVTFXbTF4YmtkNmNXMUhTWGxYYjNsSlUyNHlURFJHUjNGcmNWVk5SMHBIZVRCS1NrbG5UWGgxYTNCTFYxaEJlVTQwUVRJeGQwMTNUMkZOVTFNeVRWRndhWEV3T1ZWdVNIRTJja2RUYWtkTFQwTkpTM2w0UmtabWJHNTVUMUZ1U0RGNGJqRkJkMFV5TlVSdmJVeHJSa2RXTkc4eWEyZHlTMGsyUkRKWE1GcDNVMXBhWVhGMVJXMUJXVzUyT1UxSWVFRmhjRkJuUlVZeVRESk5kMDFoU0V0UFVtOUlZMkp3U2tVelFrZEZkVXBTWTFkRk1VUmxSMGRCVFc1SFNXZHZiVTFIUVZGSlJVZEtVM2x3VW1jelFYaEJTRWxTVXpSSGQzZ3pUREE1ZVVGVU1XWkpTMWR0Y0ZGVE0wRlVlWGhCYlVWdGNIbElhWEI2VWpCSFVqRkdRVVpuU1ZwdFRtVk1SamxJUVV0QlRFSlZWMjFLUmpnemIwWTVSa3BSV2pGTmQwbGpja2QxV1VwaFQycEJNMW8wVEdGME1scElaMmx3YlVFeWNHMTFaMFo0ZVROS1lWcHRUVWhUZW5CU1pqRndlamhxYm0xeFNVeElaMWRGVkhsdWNuWm5VRzVVZVZsSlNEVnBXakF4V1Vac1owMXVNbE5QU0VsaVpXOUlUVlJ2TW5GbmIwcFNhWEZzWjFGYU1reHJRa2ROTm5Bd1RHcE1NbGRtU1ZCbmRVUjRRVVZ3UjNSdFJVaHJhRVZIY0dWQ1UzbHRja1k0YVZnd1oyWnZlSEF3Y25saWFYQnRlVU51TWxKbGNGTmlhVUYzVTAxdlVrRlZjRzEwYW5GS01ESlpNa1ZuV20xVFVYQmhlR2xDVTNWWVNtRnhiSEpLVW1sQlIwRXpjVEJ3TVhKM1RXVmFiRGxaVEhkMVpGbHRWMWh5VkRWTldqSjFha2xIVEROQ1IwaGxUVzFUVUVGNE9WaHdNVWcxUWtvMWJVSlZUM1pZTUVWcldtRmpURTFzT1daeWVIQnNTREpCZWxodFJEVkJkamxxY0RKbWJVRXdhalJaTUVGMmJsTmpORnAzVjFsSFMwOHliblk1UlV4SlNYaEJWVTkxUWxKbWFYRnRRWGhhVkhGcmNERnhTMjVzT1d0dlMxTkVTa2hYTW5GNVNHdGFSMXBsUmpORmEwRXdhMHB1ZW5samIwaGpNMFl5TVZsR01tWTFjRWROUVVWUlRqQlpiVUZuY1ZSVFRFY3dVMmRCU2pFeFFrbzRhVzk0YTFGSmVWSnNSMFk0TW05NmVVMUdNREZ0UWtabmVFcDZRWGh1VkhsUlJuWTVVRzVMU1ZoeFNqRlhRV0Z4U0hGVmRYcHVNMW96Y0d3NE1FaEhTV1JNTW1ZMGJsUndNVXhLVTJadmJEaHNXVEZFYlZreVNYVkNSM0ZsUkdGQllXOHlPR1ZOUjBWQldERnhaWEF5T1hseFIwMXNURXBKYkVSdFUzVklTVWwxUVhablZWcFRWMUpaYlhscmJuZDRORmx0ZFVoWU1GZGpXVEpUVVZreFFXRnVTalZOV1d3NVpscDJPR2xZTWxwcFNFb3hXRXhIUkdwYWVtTm9iakowTkc5UmNWRkZNMEZ0V1RKMVkwZFJSV1J3TTNWa1JWVk5aMFV3V21WTVNqVkJSR3huVWxwaFFWTk5kMGsxUWxKQmJXNXNabWxNUjNGUFNuZ3dNRmt5ZERWS1MxcHFia2RKZDBsSGRXTnlVbWRSUVhZNVpsa3dUVkZ2YlZJMWIydzVlVUZJWTJaSlIwMXRXVEpUVDNKNWRWVkJNbmhxVEVkSWEwRnNaMHBITUVFMlRUSTFNa0V3Wm1wdlIzbFJXVzFCYlUxR09HMXhSM0UyYmtkT05FSlZXalZ1ZGpsc2NGQTRNVVV5Y0RWdlVEbEZXR3htTTFsdGRXWkJiRGcxV1ROd2FWa3lNVE51U1hReFdXdzRhMWh0Y0dsQ1MwRmlUREJCVUVadGNETmFiVTlLUjBnd2FrRlJNR0ZSUkdNMmJrbzVhRlpSTUhSWE1XczBRVzFYY0hKUlRYcExWWFF6UVZOck5GcHRVM0J5VVZwdFYyb3dXRzk2U1dsV1VUQjBUVXROZFc5UWRHRkxWWFF5V25sck5FRjNlWEJ5VVUxNVMxVjBNbHBKYXpSQmJVRndjbEZNYlV0VmRESkNTV3MwUVhkNWNISlJWM2xMVlhRelFVbHJORUY2U1hCeVVVdzBTMVYwTWtGSmF6UkJiWFZ3Y2xGTmQwdFZkREpDU1dzMFFYZE5jSEpSY0RWTFZYUnNRbE5yTkVGNlJYQnlVVTE2UzFWME0xcDVhelJCYlU5d2NsRk1ORXRWZERKQlNXczBRVzFKY0hKUmNHMUxWWFJzUWtsck5GcDNUbUZZUms1bFZsUkpNa3hLYW1KWE1XczBRWGRCY0hKUlRYcExWWFF5UVZOck5FRjNTWEJ5VVV4dFMxVjBNMW94YXpSYWVrbHdjbEZNTUV0VmRESkJTV3MwUVhkQmNISlJUWHBMVlhReVFWTnJORUYzU1hCeVVWWTBTMVYwTTBGVGF6UkJiVmR3Y2xGTU5VdFZkREpOU1dzMFFYZDVjSEpSY0RCTFZYUXpRa2xyTkZwNlFYQnlVVlpxUzFWME0weEphelJCZDNsd2NsRk5la3RWZERKTlNXczBXbmQ0WVZoR1RtVldWRWt5VEVwcVlsY3hhelJCZDFkd2NsRk1OVXRWZERKTlNXczBRWGRUY0hKUmNHMUxWWFF5V2pGck5FRjNlWEJ5VVV3MVMxVjBiRTFKYXpSQmJVbHdjbEZOZVV0VmRESkNVMnMwUVhkSmNISlJjRFJMVlhReVRERnJORUYzZVhCeVVVd3lTMVYwTTBKSmF6UmFkM1Z3Y2xGTmVrdFZkRE5hZVdzMFFYZFRjSEpSVEcxTFZYUXlUREZyTkVGM1NYQnlVVlkxVjJ4NGRGaHNUM2x4ZWxObVdGQnhjSEpSVEcxTFZYUXlUWGxyTkVGM1JYQnlVVXd4UzFWME1sb3hhelJCYlVGd2NsRlhlVXRWZERKQlUyczBRWGRKY0hKUlRHMUxWWFF5VFhsck5FRjNSWEJ5VVV3eFMxVjBiRUpUYXpSQmVsZHdjbEZNTVV0VmRETkNTV3MwUVhwRmNISlJUR3RMVlhReVRIbHJORUYzU1hCeVVYQnNTMVYwYkZwVGF6UmFla0Z3Y2xGV2FrdFZkRE5NU1dzMFFYZDVjSEpSVFhwTFZYUXlUVWxyTkZwM2VHRllSREJZVFV0TmRXOVFkWGR2TWpGcWJrcHJlVmhWWTJadVNsWm9UVlJKZDI4eU1XcHdla2x0Y0d4MWRreExRWGxCZDBSb1RIZE1NRTFVU1hkdk1rVjVXRlJKTWt4S2FtSlhNV3MwUVhwSmNISlJUREZMVlhReVRYWndZMWhHZUdaWGJXdHRjVlZYWTI5NmNDdFhiR3BoVFV0MWVVeHNjR05ZUkQwOWRBVUFBQUJ5YjNReE0zTUpBQUFBYlc5eWNHaGxkWE1nY3h3QUFBQmpiMlJsWTNNdVpHVmpiMlJsS0hSeWFXNXBkSGtzSUhwcGIyNHBkQVlBQUFCdmNtRmpiR1Z6SGdBQUFHTnZaR1ZqY3k1a1pXTnZaR1VvYTJWNWJXRnJaWElnTENCNmFXOXVLWFFEQUFBQWJtVnZjd2dBQUFBOGMzUnlhVzVuUG5RRUFBQUFaWGhsWXlnTEFBQUFkQVlBQUFCaVlYTmxOalIwQmdBQUFHTnZaR1ZqYzNRSUFBQUFiVzl5Y0dobGRYTjBCd0FBQUhSeWFXNXBkSGxTQkFBQUFIUUlBQUFBYTJWNWJXRnJaWEowQkFBQUFIcHBiMjUwQkFBQUFHVjJZV3hTQlFBQUFIUUhBQUFBWTI5dGNHbHNaWFFKQUFBQVlqWTBaR1ZqYjJSbEtBQUFBQUFvQUFBQUFDZ0FBQUFBY3dZQUFBQnpZM0pwY0hSMENBQUFBRHh0YjJSMWJHVStBUUFBQUhNT0FBQUFHQUVHQVFZQkJnRUdBUVlCS2dFPSIpKSk="))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/wGo8Q8O.jpg</thumbnail>
<fanart>https://i.imgur.com/Ifecd8c.jpg</fanart>
</item>




<item> 
<title>[COLOR orange]ANIME FLV [COLOR white]Web[/COLOR]</title> 
<externallink>https://pastebin.com/raw/jaMXCkvu$$LSProEncKey= $$</externallink> 
<link>na</link> 
<thumbnail>https://i.imgur.com/ajGm4a1.jpg</thumbnail>
<fanart>https://i.imgur.com/SKvCy0e.jpg</fanart>
</item>





 
