<?xml version="1.0" encoding="UTF-8" standalone="yes"?>





<item>
<title>[COLOR orange]BUSCADOR [COLOR white]Series [COLOR gold]NUEVO[/COLOR] </title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param1] [temp.param2][/COLOR]</title>
<info>[COLOR white][makelist2.param3] [temp.param1][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
serie = '[makelist2.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param4] [cap.param3][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
temporada = '[temp.param2]'
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests,xbmc,random,urllib2,xbmcgui,base64
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/YcK18g4.jpg</thumbnail>
<fanart>https://i.imgur.com/SKvCy0e.jpg</fanart>
</item>


<item> 
<title>[COLOR orange]Full Anime [COLOR white](Nuevo)[/COLOR]</title> 
<link>$doregex[makelist]</link>
<regex>
<name>makelist</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist.param1][/COLOR]</title>
<link>$doregex[makelist2]</link>
<thumbnail>[makelist.param3]</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
from datetime import datetime, timedelta
import re,requests,urllib2,xbmc,time
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist.param2]'
titulo = '[makelist.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MGx4VUFBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFV1RGTmVrVXlXa1JWZDA1NlJYcE5WRmsxVFhwWmVrNVVWVFJPZWxFd1dXcEthVTVVU1hwUFZGVjZUbnBWTWs1NlRUVk9WMFV6VFVSVk1rNTZVVE5OVkZKclRtcFJNazlFWXpST2JVVjZUbXBWTTA1NlZUSlplbHBzVGtSTk1FMTZWVFZPVkdNd1dsUmpNazVIV1ROUFJGazBUbnBOTUU1RVVtbE9iVmt4VDBSUmVVMTZaekpPYWxrMFRrZFJNRTFxV1ROT1IxRXhUbFJaTVU1RVdUSk9la3BwVGxSQk1VNXFUWHBPZWtreFRsUk5lVTVxVFRGT1ZFMHdUa2RaTTA1VVZUTk9lbGw2VFhwVmVFNVVUVEphYWxVeVRYcG5NRnBFVVRST2VsbDZUa1JOTVU1dFVUQk9hazAxVGpKRk0wNXFTbTFOZWxGNlRucFZNazR5UlRKYVZFMDFUVzFKZVZwcVdteE5lbU42VG5wS2FVMTZhekJPUkZKcVRXMVplVmxxVFRST2FtZDVXV3BLYlU1NlNURk9lbEpxVFhwTmVrMVVUWGhOZW10NVdXcEtiVTVxVlRGT2FsbDRUa2RWTWs1cVdUSk5lazB5V1ZSTk5VMTZhekpPVkZVd1RtMVZlazlFU20xT1ZFRjZUMFJOZWsxdFNYcFBSRmswVG5wUk1VOUVUVEZPUkdkNVdtcEtiVTE2YXpGWlZGa3lUbnBGZVZwcVl6Qk5lbGw2VDBSYWJFNVVTWHBQVkVwdFRXMVplVmxxVFhsT2Vsa3pUbXBLYlUxNlFUTk9WRmswVG5wVk1VOUVZekJPZWtFeVRrUmpkMDF0U1RGWlZHTXhUWHBaTWs5RVVUSk9SMGw2VGtSS2JVNTZVWHBPUkZKc1RYcGpNRTlVVm1oT2VtY3pUWHBSTkUxNlRUSk5hbGw0VFhwSk1rNTZUVEpPYWtWNlRsUmpNVTVVWTNwT1JFcHRUa2RSTTFsVVkzbE5lbEV3V1ZSU2FFNVVZek5OVkdSb1RrUmpNRmw2VlRGTmVrbDZUWHBrYUU1NlozbGFhbEpxVG5wQk0wOUVXWGxOZWtVeVRrUk5ORTVVV1RKYVJFMDBUa1JqTUZwcVVURk9lbEV3V2xSWk1VNVVaekpPYW1ONlRtcEZlazlVVFRGT2VtTXlUbXBqTWs1VVZUTk9WRkV3VGxSbk1VOVVUVFJOYlZrd1RtcFpOVTF0U1ROT1JFMTZUa2RGTVUxRVdURk9iVVY2VGxSVk5VNUVUWHBOZWxFeFRrUm5lazU2V210T2VtY3lXVlJaZWs1SFdYcE5lazB6VGxSWk1rOVVXWGhPVkdONlRYcGpNRTU2V1RKTmFtTXhUbFJCTVU1VVl6Vk9SMWt6VDBSTk5VNUhSWHBQUkZreVRrUkZNbGw2VVROT1IxRjZUbXBOZWs1Nlp6Sk5WRkp0VG5wTk1VMTZUWHBOZWtreVdtcE5NazU2YXpCT1ZGSnBUbFJqZWsxcVNtMU9iVWt6VFZSU2JVNXRUVEZaVkZVeVRtcGpNMDVxWXpSTmVrMHdXWHBaZWs1RVdUSmFSR040VGtkVk1rNTZWVFJOZWswd1RucFpNRTU2UVRGTmFsRXpUa1JqTWxwcVdUSk9WRmt5VGtSamVrNHlSVEJhVkZwc1RsUk5lazE2VFhoT2Vra3hUWHBOZUU1RVp6Rk9lbFV6VGxSRk1FNXFUWHBPYlZFd1dsUlpNazVxVlRCYVZFMTZUbXBGZWsxcVVUQk5iVmt5VDFSU2FrNXRSVEpPYWxVeVRsZEZNRmxVWXpST01rVXlXbFJqTlUxNlZUSlpWRTE1VGxSamVrOVVZekJPYlZVd1RXcFJNVTVFWnpCTmFtTjZUWHBqTVU1RVdUQk9lbFV6VFVSWmVrNTZhek5PZWxGNFRtcFpNazE2VFRKT01rVXhUMFJaTVU1cVVUSk5hbFV6VGtSWk1rNVVVbXRPUjFsNlQxUlJNMDU2WnpKT1JGbDRUbXBOTWxwcVVYcE9hbGt6VDBSVk5FNTZRVEJOZWswMFRtcEpNMDVFVFRKT1JHc3dUa1JWTTA1NldUQmFWR015VG1wRk0wMVVXWGxOZWxFelRrUlNhRTVIVVhwT2Vsa3dUbTFGZWs5VVkzcE5lbEV3V1dwTk0wNXFUWHBOYWsweVRtcE5lazFVWXpOT1ZHZDZUbXBSZWs1VVNUQk9hazAxVGtSTk1scEVUVEJPYWxsNlRWUlplazV0UlRKUFJGa3lUbnBqTUUxNldYbE9iVmt3V2tSUmVVMTZUVEZOZWxWNlRtMUZlazVFWXpGTmJVa3pUWHBOZWs1RVdUTk9hbHBxVGxkRk0wMVVUVE5PUjFrd1RtcFpNazE2WnpKTmFsVjRUbnBaZVZwcVVYcE9iVVV6VFZSak0wNVVVVE5PUkUxNVRrUm5NazVVVFRST1ZFRXlUV3BTYkU1NlNUSk5WRTEzVG0xVk1rNVVVbWxPYWtreVRtcFNhVTVVWnpKWlZGSnNUbTFWTUU5RVl6Tk9lbGt3V1ZSS2JVNXRSWGxaYWsxNFRrUmpNMDFVU20xTmVrRXdUV3BTYWs1cVl6Sk9WRXB0VG1wUk1sbDZVbTFOZW1jd1QwUmpOVTVFUlRCUFJGVjNUVzFKTTA5RVdteE5lbEV6VG5wTmVrMTZZekZOVkZFeVRtMU5lVnBxWXpOT1ZGRXlUVlJqZDA1Nlp6TlpWRlY2VFhwWk1VNTZVVFJPYWxWNlRtcFJlVTVxU1RGTlJGbDRUakpGTWsxcVdURk9WR013VFZSWk5FMTZUWHBOYWtwdFRrZE5NazE2V20xT2FtY3dXV3BOZWs0eVJUQlBWRnBvVG1wUmVWbHFXbXhPUjFGNlQxUlJOVTV0UlRKTmFsVXdUbTFOTVU1RVdYcE9la2t5VG1wUmVVMTZZek5QVkZrMVRtcG5NRTVxVFhsT2JVa3lXbXBLYVU1dFdUTk9SRlV4VFhwQk1VMVVZekJOYlVrd1dsUlNiVTVxWnpCWmVsazBUakpGTTFsVVVUTk9ha2t4VFdwVk0wNUhVVEJhUkdNd1RYcGpNMDFxV21wT1JGRjZUMVJhYWs1RVVUSmFWRnBzVG5wbmVrMTZUWHBPVkVFeFRWUlplVTE2V1RGTmVsSnBUa1JaTWs1NlVUSk5lbFV5VG5wWk1VMTZhekZOYWxFelRrUlJNMDE2VFROT1IwVXpXVlJOZVU1VVZUTk9hazB3VGxkRmVrOVVTbWxPUkdjeVRtcFplRTVVVlhwT1JGa3dUbXBKTUZwcVRYcE9lbGt5VFdwak5FNTZRVEJOZWxVMFRrUlJNVTlFV21wT1ZHTXlUbFJOTkU1dFJYbGFhazAwVGtSRk1VOVVUVEZPYWtVeVRWUlZlVTVIVFRKWlZGcHNUbnBOTTA1RVVtcE9WRTB3VGtSUk1FMTZaekZPVkZKb1RtcEZNVTE2VVhoT2FsbDZUV3BXYUU1cVVURk9lazE1VGtSVk1sbFVXVFJPYWtsNlRYcFZlRTF0U1hwT2FsbDZUa1JuZWs1RVdtcE9lbU13VFZSWk1rMTZRVEZPZW1NelRsUk5NVTFVVFROTmVrVjZUbnBXYUU1cVp6Qk5hbVJvVGtSSk1VNXFUWGhPUkdjeVQxUk5lazV0UlhwTmVtTXlUbnBCTVZsVVRURk9lbU13VDBSS2FVMTZVVEJQUkZFMFRYcFpNVTFVVlRSTmJVa3lXbXBaTUU1cVZURlBWRkUwVGtkWmVrMUVVVFZPYWxrd1RWUlJNRTVxVlRGT1ZGRXdUWHBKTUU1RVkzaE9WRlY2VG1wYWFVNUVWWHBPYW1ONlRtMVZlazFxVFhwT2FsRXlUbnBSTkU1NlJUSk9hbFUxVFhwUmVrMXFXVEZPYlVreVdYcE5NRTVFVVhwT2VrMTVUWHBOTUZscVZYaE9WR015VDFSV2FFMXRXVEZaVkUxNFRYcEpNazFVVW1sT1ZFa3dUbXBWZDA1dFVUQk5WRmt3VGpKRk0wMVVVWHBOZW1zeFRsUlpORTF0V1RKT2VsWm9UbXBGTVUxVVVteE9WRVV6VFdwTk1rMTZTVE5QUkZFd1RucEJNRmxVV214T1ZFMHpUVlJOTTA1dFNUQlpWRkY0VGtSUmVrNTZZM3BPYWxsNlRYcFpNMDV0VlRGUFZGSnNUa1JqTWs1NlZUUk9lazB3VFZSVmQwNVhSVEpPYWxrelRsZEZlazVFV1RWT2JWRXdXbFJWZDAxdFNUSk9SRnBzVGtSbk1FMVVZekpPVjBVd1RrUmpNazVVWnpKUFZGVjNUVzFaTWxscVVYaE5lazB5V21wYWFVNXFWVEJOVkZwb1RtcGpNRTVxVFRCT2JWa3lUa1JLYVU1dFJURk9hbU4zVGxSTk0wOUVZek5PTWtVeVdtcFpOVTE2WXpCTmVtTjZUbTFGTUU1RVdYcE9SR013VFdwUk5FNXRTVEJaYWxVelRYcGpNRnBVVFRGT1ZFVXlUa1JqTkU1SFJURlBWR014VGxSSmVrOUVZM2hPVkZsNlQxUk5NRTVVUVhsYWFsRjRUbnBaZWs1VVdUVk9SRWw2VG5wUmVrNXFTVEZOUkZrd1RtcEpNRTFxVlRKT2VrRXhUbFJaTUU1Nll6Qk9hazAxVG1wck0wOVVVbWhPUkdkNVdXcGpkMDF0U1RKWlZGRTBUa2RSZWsxcVdUVk9SRTB4VFVSVmVFMTZXWHBOUkZKclRXMUpNazU2VVRCT1YwVjVXV3BaTVUxNlFUQmFWRXB0VGtSTk1VOUVWWGhPZWtWNlRucFZNVTVFV1RKT2FrMTVUa1JWTWs1cVVUQk9iVVV4VGxSVmVrMTZXWGxhYWxVelRrUlpNVTlFWXpKT2FrVXdUa1JqTVUxNldUQk9SRlUwVGxSWk1rMVVUWGRPVkUweVRtcFpORTVxU1RCTlZGVjVUVzFKTTFsVVdYcE9WR3Q2VGtSU2JFMTZTVE5QVkUwelRucHJNRnBxV1RKT2JWVXdUV3BqTVU1VVVURk5SRmw2VG1wbmVrMTZZekpOZWtsNlRWUlJlVTVxV1ROTmVsRTFUa2ROTTA5RVdUUk9SRkY2VDFSTk1VMXRXVEpPYWswMVRucFpNazFVVFhoT1JFMHpUa1JqZWs1RVRYbGFhbFUxVGtSak1VMUVXbWxPYW1NelRXcGthRTV0VFRKT2Fsa3lUbnBqZWsxNlRURk9WRTB4VGtSWk1rNXRUWHBOZWxGNFRsUm5lazlVWXpOT1JHc3hUV3BaTUU1dFRUSk5WR00xVG5wQk1rNVVUVFJPUkVreFRVUmpOVTV0V1hwUFZFMDBUa1JaTTA1RVVtcE9SMUV3V21wWk1VNXRXVEZPUkZKclRtcFZNRTFVU20xTmVsRXpUVVJqZDAxNlRUQk9lbEpvVG1wWmVrMVVUWGhPUkVVd1RrUk5lRTVVYXpCTmFrMHpUWHBOTUUxNlRYcE5lbU15VG1wYWFVNXFZek5aVkZVMVRsUnJNVTVVVFRKTmJVa3lXWHBhYlU1VVl6QlplbEV4VGxSTk1FOUVTbWxPVkd0NlRucFJlRTE2YTNwTlJGRXpUbnBKTVUxcVZUUk9hbGt6VFhwTk5VMTZVVEpPZWxVMFRrZFJlazFVVFhsT2VrMHhUbnBTYlU1cVVUTk9WRnB0VG5wck1VNXFZM2hPYW1kNlRrUlZlVTVIVFhwTmVtTjVUbnBSTUUxVVNtMU5lbEV3VG1wWmVrMTZXVEJPYWxVd1RsUkpNVTFxVFROTmVtY3lUbnBqTUU1WFJUTk5SRXB0VGxSRk1WbFVVbXROZWxGNlRYcFNhRTVIVlhsWmFsSm9Ua2RWTWxscVZYcE9SMWt5VGxSVk0wNXFWVEJOVkVwdFRtcGpNMWxVU20xT1JGRXpUV3BLYVU1SFdYcFBSRmswVFhwVk0wNTZVVE5OZW1Nd1RrUlpNVTE2VFRGT2FsbDRUbnBKZWs5RVdtdE5iVmt5VFZSTmVFNVVWWGxhYWswd1RtMVJNRTU2VVRWT2FsRXdXV3BOZVU1VVFUTk9hbHBwVGxSWk0wNTZWVFJPZWtFd1RYcE5lazU2U1RCT2VtTXhUbFJOTTA5VVZUTk9SMUY2VG5wTk1rNXFXWHBPZWxWM1RucEZNazlVVFROT1JFVXlUbXBLYVU1NlFUSk5WR013VFhwUk1GcEVVVEpPUjAweVRsUk5OVTVFVVROT2FscHRUbXBqZWsxNldtMU9iVmt3V1hwamVFNUhXVEJaYWxVMFRYcFJNazU2U20xT1JHTXlUbXBqTkU1RVdYbFphbGt4VFhwSk1VOVVUWGRPZW1kNlRrUlNiRTVYUlRGUFZFcHBUWHBSTUU1cVRYbE9hbGt3V21wak1FNTZXVEZOVkZwc1RYcFpNMDFFV214TmVsa3lUMFJSTWsxNlZUTk5SR014VFhwRk1sbDZVbXRPZWxVeFdWUlpNVTVVVlRGT1ZFMHpUWHByTVU1cVdYcE9WRWt3V1hwak5FNUVSVEphVkZsNFRtcEZNRTlVV214TmVsRXpUbnBrYUU1NlRUQk9hbEp0VG1wUk1rNVVXbTFPUjAweVRrUmpNRTVYUlROWlZGcHNUbnBuTTA5VVl6Uk9hbGt6VFdwVk1FNXFZekpPYWsxNVRrUlpNRTFxWXpGTmVtZDZUa1JWZUU0eVJYcE9hbGsxVGxSbk1VMTZWWGxPYWtsNlRrUlZNVTE2VFhwT2VsRjZUa1JqTUUxVVZUQk5lbU15VGtSVmVVNXRVVE5OYW1ONlRucGpNRmxVWXpST1JFVXpUbFJqTUU1Nlp6Rk5SRXBwVG5wbk1VNVVTbWxPVkVVelRXcGFhRTVxYXpCUFZHTjNUa2ROTTA1RVVYaE9lbGt6VGxSUmVrNHlSVEZPUkZFelRrZFZNMDE2V21oT2FrVXhUbFJWZDA1Nll6SlBSRmt5VG5wRk0wNXFUVFJPVkVVd1QwUk5kMDVVV1ROUFZGcHFUWHBuTWs1NlZUUk5iVmt3VFZSVk1VNVVaM2xaYWxwb1RYcE5NbGxVVVROTmJVa3lUbnBSTkUxdFdUSk9SRlV3VGtkTmVrNXFVbXhOYlZsNlRsUldhRTV0VlhwTlJGVTFUWHBuTWxwcVkzbE9WRlY1V21wWmVFNVVTVEZQVkZwb1RYcEZNazlVVVROT1ZHY3pUbnBTYVUxdFNUTlpWRlV3VFhwWk1WbFVWVEJPZWtFelQxUlJORTE2U1ROT2VsRjVUVzFaTUZscVdUUk5lbWN4VFZSamVVMXRTVEphVkUxNlRYcEJNRTVVVlhkTmVrRXdUWHBqTWs1NlVUQk5hazE2VGtSck0wMTZZekZPVkdNeVRtcFNiVTU2VlRCTmVrMHhUWHBWTTAxcVkzaE5lazE2VDBSTk1VNUVWWHBOZWxFeVRYcG5NazlVV210T1Ixa3lXVlJOTWs1VVJURlBSRTAwVG1wbmVrMVVWVEpPUjAweVdtcFJNazVxVFRGT1ZFMDFUbTFGTUU5RVdtcE9SRVV5VGxSVk1VNVVaek5OVkZGNVRtMVZlazVxWTNwTmJVa3lUMFJqTWs1dFZUQk9WRmt4VFcxWk1VMVVVVEpOZWtreFRsUlpNMDV0UlRGUFZGSnNUVzFaZWsxNlkzZE9iVmt6VFZSak1FMTZVVEJOYWxGNVRYcEZNRTlVVVRKT2FrbDZUMVJWTVU1NldUQk5hbU0xVGxSVk1rNXFUVFZPVkVFelRtcFNhVTF0V1RKYWFsSnNUakpGZVZscVVtdE5lbFY2VGtSUmVVMXRTWHBOYWxwc1RrUkpNVTlFV1ROT1YwVjZUbFJWTUU1dFNUSk9la3B0VGtSak1VMVVZekpPUjFrelRYcGplRTVFWjNwT1JFMTVUbXBqTVU5VVRUQk9WRWw2VDFSUk5VNXRXWHBQUkZwdFRrZFpNVTlVVFRGT1ZHc3pUMFJLYlU1cVkzcE9SRTB4VG5wQk1VMVVXbWhOZW1zd1drUmplRTE2WnpGTlZHTXdUWHBGTUUxcVZUQk9lbGt4VFdwUk1FNXRWVEpPZW1NeVRsZEZNRnBFVlhsTmJVa3hUV3BSTkUxNmF6Qk5lbEV5VGxSak1GcEVVVEJOZWtVeFRsUmpORTU2YXpCTmFrcHRUa1JSTVU1RVNtbE5lbEV5VGtSTk1rMTZWVE5QVkZwb1RrZFpNMDlFV1RWT2VsRXdXbXBOZDA1VVZYcFBSRlUxVGtSWmVrNTZVWGhOZW1jeFQxUk5NVTR5UlRGUFJGcHFUbFJaZWs1RVl6Vk9SMDB3V2tSWk1rNVVUVEJaYWxVMFRrZEpNbGxVWTNwT1ZFVXdXbXBWTWs1dFJUSk9hbEV4VFcxWk1WbFVXWHBPYlUxNlRWUlplazVxUlROTlZGVjVUbFJCZWs1VVZURk9la2t3VG5wamVVNUVhek5OUkUweFRsUlZNRnBFVlRGT01rVXdUMVJOZUU1VVFYcE9WRkV4VG1wSk0wMVVZek5PYlUweVRYcE5NMDU2UVROTmFrMHpUWHBOTTA5VVVUVk9hazB4VDFSS2FVMXRTVEpPZWtwdFRucEJNazU2VFROT2VtY3hUbFJLYlU1dFNURk9WRkp0VG0xTk0xbFVZek5PYWxsNlRsUk5OVTVFVlRKT2FscHRUa1JOZVZwcVVUVk9SMFV4VFhwVk1VNXFVVEpaYWxGNFRrUm5lazFVVVhwT2JVVjZUVVJWTVUxNlVURlpWRlV5VFhwVk1FNUVZekpPUjBreVRYcFNhMDVVVlhwT2FscHNUWHByTUZsNll6Rk9WRWt4VFVSamVrNTZaekZOUkZGNVRXMVpNMWxVV21oT1ZHY3pUa1JOTVU1RVVUTk9WRmw2VGxSbmVrMUVWWHBOYlVreFdWUmFiVTV0VFRGUFZGbDZUWHBGTTA5RVdtaE9hbEV3V1ZSS2FVMTZVVEpaVkZrMFRsUlpNMWxVVVRSTmVsVXhXVlJOTWs1Nlp6Sk9lbEV3VGtSSk1rMVVXbWxPYWxsNlRWUlJlVTU2YXpOTlJFcHRUVzFKTWs5RVVUQk9lbEV5V2xSVmVrNXFTVE5QUkZFelRYcE5NMDE2VlhoTmVtdDVXV3BSTUU1SFZUSmFSR04zVFcxSk1FOUVUVFZPUkVrd1QwUmpNazVVYXpGWlZFcHRUWHBOTVU1RVVUTk9SMVV5VGxSa2FFNUVaekJaVkVwcFRrZFplazE2U21sT1ZFRXpUVlJhYVU1NldUSk5WRlV3VFhwQk1FMVVUVFJPVkUweFRrUlZlazVVU1RKTmFtTjNUbTFSTUU1cVVtaE5iVWt6VFhwUk1FNTZXVEJaYWxrMVRtcEpNbGxxVVhwT2FrMHlXV3BWTUU1cVZUSlBSRXB0VFhwVk1FMVVUVE5OZWxFeFQwUkthVTU2UVRCWlZGSnJUbnBWZWsxVVVYcE9WRlY2VG1wTk1FNTZZM3BPVkZwdFRsUnJNVTFFVFRKT2JWRjVXbXBaTUU1RVJURk5SRmw2VG1wRmVWcHFUVEpPZWtFd1RrUk5NazVVYTNwUFZFMHpUbFJWTTAxRVVtcE5la0V3V21wS2FVMTZhekJQUkVwdFRucGpNRTFVWTNsT2Vsa3pUV3BhYWs1WFJYcE5lbFYwbHhVQUFEVkJiWGd3VEhkd2JVRjZVbTFDUjBoclFVZElNVXhIVEROQmJVeHRRWGRJTVZwdGRESmFiVWhxUVZGd01FRnRjREJCUjFZd1RFZE5kVUZSVWpOQlVVeHNXbTFJTWtKSFJEUkJla1F5V25kYU5WcHRjREpOUjBSdFFXMUlNVUZIVFhWQlZFd3dRVzFNTUVGSFVteE1kMGwxUVhkSU0wSkhSWFpCZDFJd1duZFhla0ZSVERGQ1VWbzBRWGR3TWtKUldqVkJlbEl5UWxGSWFrRjNXak5NUjAxMVdtMTRNRnB0U0dwQmVrUXpURWRhYTBGUmREQkJkMFExV25wV01scDNTWFZCVVhBeFdsRk1hMEZVU0cxQmJWZDJRWHBFTWsxSFJYWkJiVTV0UVZGd05GcDZURE5DVVV4dFFYcGFiVUZ0Y0d0QlIwNXNUSGRGZDBGUlNERmFVVm94UVZGNE1rRlJTWFZCVVZKc1RYZHdNVUZLVWpGQlIweHNXbTFTTUZwSFRESkJWRXd5UVVkRU5VRjNlRzFCZDFveFFWRndNbHB0VEcxQmQwZ3hXbTF3YTFwNlREQkNSMGhzV25wV01WcHRSREphYlZZeFdrZE5lVnB0VWpKQ1IzQnJRVWRFYkV4M1dqRkJSM1J0UWtkRU1VRlJlRE5CZDBWMlFYZDBiVUpIU0d4QlVYUXpXbmRJYkVGVVdtMWFkMFY0UVhwRU1FMTNSWGxCZDFveFFWRkVOVUZVVERCTlVVUnJRWGRTTUV4SFNEVkJkMHd5V20xd2JVRnRUakJNYlZveFFYcGFNa0YzU0RSQlIxSXhRWGRFYlVGM1RERmFSMFEwUVcxNGJWcHRUWHBCVkV3eFFXMUlNVnA2VmpKTlIxZDJRVkY0TWxwM1RHdEJSM2d5UVcxTmVVRlVURE5CVVVoclducFdNMEpIVERSQlVVd3pRbEZFTVVGM1RHMUJiVVYyUVhkRU1rRkhUR3RCZWxZd1duZFhka0Y2VERCTVIxZDJRVzFXTUUxSGNHcEJlbFl6UWtkSU5FRjNlREJDUjBocVFVZEVNRUZIVFhoQmJWb3pRWGRGZWtGSGNEQk1SMHh0UVcxME1VRlJjRzFhZWxadFFVZElORUZ0VmpCTWJVMTRRVWRJYlZwdFdqTkJWRWhzVEhkWGVrRjNUREpCYlUxMldtMWFNVnB0Y0RSQmVrZ3pXa2RFYkVGM1REQkNSMFEwV20xRU0xcDNjREphZWxZeVdtMU1NRUV5VWpCYWQwVjVRVkZhYlVGSFNYVkJWRVF6V2xGSU5FRnRSREJCVVV3eFFWUldNRUZIU0dwQlVVZ3hURWRYZGtGdGNEQkJVVmQ2UVcxNE1VRjNjWFZCZWxJd1RIZE5la0Y2V2pKTlVVUnRRVzFJTUV4dFREQkJWRll3V25kTU1rRjNWakJOZDBWNFFYZE1Na0ZIVFhwQlNsSnRRbEZGZFVGNlNHeE1kMHd5V20xTU0xcDNSREpCUjFadFdrZElORUZ0U0RKTWQwUTBXbnBNYlVGUlRETkJVVll6V2xGSU0wRkhkREZDUjFvMVFWUmFNRUpSVERCYWJVd3pRa2RJTUVGVVVqSk5SMDE0UVZGU01VRlJjREJCZDFJelRFZElNVUV5VWpOQ1VVUTBRVkYwTVZwSGNHeGFiVWd3UWtkYU1GcDZWakpNYlhGMVFWUkliVnAzV2pCQmVraHRXbTFFTTBGSFRteE1kMGcxUVcxV2JVRjNTR3hCYlV4dFFYZHdha0ZSY0RCTWQwd3hRWGQwTWt4dGNEUmFla3hzVEhkRmVWcHRlREpOVVVWM1FVZE9NMXBIV21wQmVraHNUWGRhYWtGNlRHeE1kM0F5UVhkYU0xcDNTWFZCZWxJd1duZHdNa0ZVUkcxYWJYQXpRVWQwTTB4SFJETkJiVWh0UVVkSU1FRjNXakZCVVVWM1dtMTRiRTEzVERCQmQwUXlRWGRJYWtGdFJHMUJkM0F5V20xNE1rRjNTREpCZWxJeFFrZEViVUZVVERKQ1VVbDFRVXBTTVVGM1NEUkJSM0F3UWxGYU1VRjZUREphZDBWMlFXMVNNMXB0Y0RCQlZFd3dUSGRFTUVGSGVERkNVVWd4UVhkV2JWcFJjRE5CYlU0eldtMWFhbHB0VEROYVIxbzBRWHBFTWtGUlNESmFiVWd5UVVkTmQwRkhlREpNYlUxNVdtMUlNbHBIV2pOYWJWSXlXa2RhYlVGVVRHMUJSMDExUVVkT01VRnRjREJCYlhCdFFrZHdiRnB0ZURCQlIzQTFXbnBXTTFwdFdteEJWRkl5V25kd01FRnRlRE5hVVZvelFYZFdNMXB0U0ROQlNsSXlUVWRNTTBGSGRESkJSM0YxUVVkNE1rMTNXbTFCU2xJelFVZE1iRUYzZUROYWJWZDZRVzFXTUZwSFRERkJlbEl5VEcxSU5VRkhUREphUjFvMVFVcFNNVnBIU0RWQlZFd3pURWROZUVGNlJETmFkM0JxV20xV01rSkhTRFJCVkV3elduZHdiRUZSZURCYVIwd3hXbTFTTTBKSFdqTkJiWEF6UVhkTU1FRjZXakJOUjAxNFdtMUVNRTFSVjNwQlZFZ3pRVWRhYWxwdFdqQmFSMWQ2UVZGRU0xcEhjR3BCYlhCc1RIZHdhMEZ0ZEROYVIweHRRVzFNYlVKSFJETkJiVVJ0UWxGTWEwRlJWakZNUjB4c1FYcFNNbHBIV20xQmQzQXlRbEZFTUVGNlNETkJiWEJzUVhkV01rSkhURE5hYlhBeVRHMWFha0ZLVWpGQ1IxZDZXbTFTYlZwM1JETkJkMGd4UWxGSU0wRktVakZDVVV3MFFYZGFiVUZSU0dwYWJYQmhVVVJqTUhCNmVXaHVTMFUxVmxFd2RGY3hVelZ4WVVGb1JraHJWMEZoZVdoRlVVVlhRVEJFYTFwNVJHbEJWVVZSV2xJNVduQlRkV3RKTTFjd1drZDFNRUYzU0RWRU1VNXNSa3BUV1hKSmRVVktSMWROY1hkRlVHOUhUVUpaTTJObVNWUjBha2R0UVZaQlUxcGxSREJuVDI0d1oyRndTSFUyUlhwNVFrZEhUVUZ5U1hsaVFVZFBTa2RWVHpCSGQzaHNiek5pWlc1aFRtcEpVa0V6Y0RCYU0zRkhRVWhNZWpGMmIwcHJXSEZWUVc1SGQxb3piMHA1VDAxNlUwOXVlakUyUVZJMGFVcElVM2h5U0RscGJsUkZWVXhMUkcxS1Vtc3dXa2RKVDBGVlNESk5lRFZYV25oRlEwVjVlVEJNTW5GalNucGpSVmt5VjBKS1IwNDBUR3huU2t4R1owSkZNMU5ZUm5oamFVRlRSV0pKVlZOcWIyRmphRm93T0dWdmVWZE5jSGxpYVVkNE9WbEZNR013U1hkRmJuQlVWMVp3YlVGMlNtRjFRa0pKVFVsWU1rRm9TbEZCUTI5SGVEQkpSMEV6U1ZGUGRrWkxUMHh1VlVWbGNsTndORUZTT0dsSk1rMUVUV0ZGUVhCNlJXcEVlbGRSUWxKWGJFMVJjVVJCZWpWbFRWUkZabHBIU1VWdVMwOUhSSGc1YlhBeWEyUkhNbW95VEVwSmVFZDNRV1Z1VkhGQ1dtMUphbTh6UVZKTVMxTk1SREZ4ZVhKU1dqUnlTSEJzUmxWalZrbFJjVzVJVVU4elNUQTVaa2N6VERWdmJVOUxRa2hKU1VFd1JXTklTMEZzU0ZKd05YRktPV3RGVWpsclNFaGpWVWRVTkRGdVVsWTFURW8xTUV4SlkwTmFTVkpyVFZKeFJrWXlTVU5FWVZOVlJEQTFXVXBKU1dORlUwaHFTREJUTTBkVVVtVk1TWFZwY1VoamExcFNPV3hZTURWbFdUQkZSa0ZIZVhkTlIzbERjVEZ4VTBKUmRUVnZTVTFIUkROWFZGb3dlVTlDUjBGRmNIZEZTMjk0YTA5dlIwMUNja2ROUTNGR09WSklkamxVUnpOV2JFaDVVM3BJTVVsS1IyMUJhVXBSZEd4dlNVMDBSVEpYUmtadFRERk5NWEZLUmtkWGFVUXpVMHR3TTBnMFNVZHhXVnAzVTFsRlNtdHNXbmQ1VEc1UlNVMU5Ta0ZKY2xGTmVVUjZPVzFHU1VWSFJraFRiVUZWZVhsRk1qRmtRVEJqZDBGS1UzbE1NRm94VEcxUGFuRjNlV0phVW5ocGNtRjVORWRVT0RGdVIwRkVjWHBqVVc4eVRWUkJkbWRIUlRKblVGcFZlVWh2UjBsaWNrdEpRMEZ0VjJWd01Gb3pXbmx3TUVneVRXNUVlSFZxYjNkTk1tOHdkRFJhU2pWSFJucHhNMEZLVEd0d1MxTmljbmQ1WTNGNmREVllNR2RqVFd3NWRYRjVkRzFCUjA5UWNUTk5lVWRSVFVsR1NFaHRUWGhCZDFwM1JXTndWWGxWY25kNVZIRklaMWR4TWtneVNUTkZhRzVTYTA5YU1ubHNSRW81UVVWSU1VbE1NbXRuUm5kRU5FZFNOVE5DUjBsNmJ6TkZZVVZJWTJ4dVIzVmFjRE5QVkZreldqTnhNMDlUV1RJeFYwUjZSWFp1TTNWRVRVZEJWWEpJWm14R1ZIQnBTVkp4TmxveVZtVkhWVTgyY2toYVpXOTRRVnBJVVhWMlRWSlhNMFo2TlVkTk0wRkhUVlZOTlVGVlQycEtTMWRTYmt0V01VZFZSREZLZDA5WVRFdDVka2RWZEd0YU1HZHNia3BpTTNFd2VVaE5VR2QxUlZWSk1rUjNlVXhJWVhWcFdXMXhSM0I2ZFdGdk1IZ3pUSGhJTVVSc1ptMUtVWGxrY1d4bmVIQjRaMHRLZWxjeFJtRnhXVWg2VnpSd2VGSTFRa2xYYmtrd1FVeHlTa1ZWYmxOQllVZ3djV2ROVWtsMmNHRlNNMjlMUVZsdk1GTXlRa2hOVFVKSlkwaEJNVUZOUVcxNGJVUjZaM2RCTTB4dGNXMVhZa0V3WTNkdU0xTnBURE5UVjBKVlUyRkdlRFZ0U1cxV00xcEplREpNZDFveFJYbDFVa1ZLTVhkYWQzZ3hiM3ByUkVkSlJUQk5VR2RyV2xGVFIwMUlkV3BKUjBscFJWVjFZa1F3U1dsS2QzRkVja3RYYWtaNFFXRk1lalUxV2pCNGJFRmhSR3RHTVhGUlRUTjVia2t3VFd4Qk1rbGtUWGRFTTBGS1JXSkNSMWN4U0VwMVVuQnRlVlZCTTBGWWJuZ3dNRWxVU1ZsQlNtY3hibEpYVlVZelRWcEVZVmRqU1VsNWRtNUplR3RHUjBGTlNVZFROa1l5ZFVwYVIwRmlTa3RqVjNKNVJXeHVlVTQwVFRCVFdVMHlZakJ1VlhGNGNIaG5NMFoyWmpWR1NIRkZUVE41YlZodFJEVk1Ta1ZOUWxWVFNFUjRVMEZ2VTNscWJsSlRUVTB6UVRKd1NYRXhiekpKTTNGUlYyMXhTbmxYY0RCaU1IQXljVzFLVlhnMWNsUkpVMEY0UVdoTk0wMXFia3BKWm5KTFJXcE5kMDlIY0hkTlprRjRNV0Z2VTNCdFRYZEJNVzR3VjJaS1VsZG1UVzFJTWtZeWVYWndiVWxZUjB0UFowbFJVbWxLVWxZeGNVcElOVnBKU1ZwRk1qVlNUR0ZUVkVoNmVXSk5TVUZtY0RJNGFtOUhSR3BGVTNFMmNVZEZlbkJTTVdOd1lVbFJURXQ1V1VVemVYbElTVmRSUjBoSmFGcFVWak5HU0ZvMVNIZ3hlVzlKZVhwSFZFVmhSMGRGVkVwaFUyUkZNa1ZoYmpOUFFVa3pjV3hhYlhCdFNrZE5XRzlIV20xYVNqVmpjRkoxWkVsdFRWVlpNVVZNYmpCck5sb3lkWFZLVTNGWlNWRkpXRTFVZVd0QllWWnNTSGRNTlZveVltbE5VVTVyUWtwMWFVZ3dkVFpCUjNsUWNHMUpTWEJ0UlhweFNrMXRiekJOZWsxNVUwRnVNMHd5Y0hZNWJIRkhXalJFYlhWS1RIbGpUMEpVVjNWYVIwbGlRV0Z4WW5GSlYyMUVTbXRyVFhobVpVRnRUVFJLU2pSbGNESk1iVWhWVTNWSE1VbGlRWHBCUlZrd1RXZEdNbXRwUVRKbk1YQjRVbWxLU2xveGNGTk5RVVI0VTB4Q1VVaHRTbmQxTlVjeVl6RkNWR05KVFVoU2EweDZabTFOZUhneWJqQlhWRVozVDFGdVNERmFiM2QwTTNKVU9USkdTMDk1UlRGMVZVMHhlRE5CU2psdVJURnhOVm95TURKQ1NuVm5TbFJOWlVGaFREUnViVWxzV2xKVGFFa3lVM2hGZUVGUWNIbFBNa2xWVm1wTk0ySXdSbFZUTVVoR09XbEdSMDFsUVhsYWEwWjNWMDlHUzFOcVdHMUJWa0pVT0ROdmJYRlJURWR4VDBKSVUwaHVSMWRHYmtwMVNFaDRaM1paTUUxbVFsUXdNMHg1U1dSSmVqVnJiMUowWlZwSVYzVk1NMWRaUVd3NGFuSktOVlJKYlVsclJWTmpRMFF3VFdoeWVVRlJTbE5FTlhCVmNXbFlNSFZKY1VoamJrbExjVU5JU25sVFRERjFRVzh4VTFoS1VtZDVSMVIxWmtSTFNVRmFZVTR6U1hkTWJVbFZXakpHTW5GVFFVZEVaVWN6WW0xd1ZWTjZTbmQwTTI1Mk9VbEpNamxUYmt0NVZXNUlZalJOYkdkWlRFZ3hVRUpUVnpOdlMxTmtUR0ZGTTFsdFNETnlTMDFvUVcxd00xZ3hUMkZNU0ZacFJWSTVRVTB6U1dORWVrbDNRa3BCYVhCaFR6UnhlVk0yY0RJNVFXOUlVMWhhYkdkbFRYcE5hVXg1WW10dVNubFpURW94WTBwNmNWTnhNR0kxUm1GVFYyOUtTR1Z1WVVsUWNVZEJZWEpVVTNoWk0xcHNjVVpuZWtKTGRYWllNM2sxUVRJeGFFVlFPV0p2VW1OWGJsRlhXVWhoVjBOdmQxTjJXakp4WkZrd1FUWnZNMkkxV2t0U00wbElRVXhhTTNWM2IwZDFVRUY0VFhodWVsTk1Sa2RCZUc4eFUxQnZTWGxWY2xWMVdISlVOWFp5ZURWV1JIaHJRVnBLZFhkdVNFbEdSMGd3TTBWSVREQk1lamxSV0RCSllVbHRSWFpOZW5WR2JuaGlhVTFTUVdaYWVrVnFiMkZQUzBsS1owVnVNVUZFY0VsMWJrMXNaelpKVVZOS1RWUnhibGd4ZVV0eVZHdFFjWGhUYTBwVVVtMUJVa1Z0V2twcldtOTNSV0p2YlVsNlRVaFhTVUZJVTFSSmQzbDFTbEpCZFVaNlYxZHZSMDkyUkcxMWRYQkhkV0pCZW1wclFsUkpVMGRLZVd4TWJWZFJRVXByTVV4SFFXZHlTWEZXUmxWamEzRkxRVTF4TW1kTlREQm5XRWhTV210TlNXSTBTVEIwYVUxNlJXeEJlalZyY25kQmJtOTVRVkJ1UjFZeWNERkZWVzkzU0d0Sk0xZDNSa2Q1V0VsSFRWcGFlSEZZUm1GalNFaFJTREpKTURGdGNFaFRSa2x0ZEdWd1lVOVZjVEk1VjBZd1JWWnVTM0V5VFRCclkxcEthMDlhVWtsU1JVZEZUM0JHWm1WYVZIRlliblpuWkZwdFQyeEZZVmRzV25wSk0xb3lNWGh1VVVScGNGSkJOa1ozV21WdVlVMXBTVWxTYlVKS09XSnhTRUZGUlcxVE5uQkplWGhCTUZNd1dESXdOWEJUUkRSQ1IzRm9TVkZCWWxremRVTk5ZWGxuYnpCeE1FUXdhMnB1WVZJeFJHRnhaMW95T1ZaRlUwaHRjRzE0YlhCS1kxZHhNbG96UkVsSlNFcDNSV2x3TWpGWmNuaHJaMXBMVjJ0YWVYRmhRVWgxYlc1S09WTnVWVmRLUkVwTldYQlVUVnB5VkZONlRFcFhNVTFTVjB0TmVGTlBXREJtTWtwUU9YaHhNVkl4VERJd2EwMUpUV0ZGVlZKdFJuZDVTMHg2WjJOQlIzRjZia2RGYWxwNmNWaEhVWFZ0UjBkYU5FMHlNVVJLZW1wdGNURjRiRTFVUlZGd2VsTmhiakpqU25CVFFWbHVTSGxrUkRKaVpVZExkV2RCTVhBMVdUSlRVbHBSVmpCTllVNDBjbmxFTVZvemNHeEJNRGwxU1RKWFlVcExlVFZCVW5sQ1draHJiVVV4U1VGTlNHZGFiekZKWlV4NGRETk5ZVVF6Y1cxeFJFcEpWMEpJWVhGbmNERmFNa3hMWXpGRVNEQnNTRWxKUkV4TFVqVnZSMEYyUVhvMVVXOHlkV1Z1VWpGclRVaDBNMFJJVTFsSVNqUXlia3RUZGtKSWRYcFlNWFZMUWxSRldVWlVTV2R3VkRWMmNFZDVaWEozZVRGQlZXTnNXbFJ4VFZvemVXaHViVTFEU0hoeFRVMUpVMmRHZDFkNlFWVlhhMDB3TUdwd1ZGcHBUVXRQVWtsc09VRnlkM0ZVUWtkU01IQXplWFZ1VWtRMVNuZFRkMFl5T1dOeFNrbHFUWGxQVUhCNFJYbENSbWR1UjB0WE1VWlJUMWh5VTBGUVRWUmpNVXBIU1dsdVZVOURSVXBKZUZwNlowbEJSbWRCUVZWTlpFbExRVmR2ZW5CclFVaFRaRVJLWjA5RlNtTnFRVWhqWlc1VFZ6QkdiRGhyUVRKVGVFbFZZMGx5U0hGU1JtRjVkbG94ZFhkSWJWTkpjRko1ZGtGS1VtbEdTbE5hYjBkWFVYRjNlV05KVkhCclFXRjVaazFoZFU5dllVbFJSbFZGTWtSdFQyVndTbGRIUkVoalFVbFVVMGh3U1ZkcFJVaEJXazFVZFdsSFVubE1iMUpKYkV4SVFVVkpWVTB4Y1ZBNWFrbEhVM2hJYlZOQmNGRlRVbkZIZVc1SVIweHJXbEpyWVhGVWNXWkVNVVUwYjJGTlQzSlRWMkZ4VW5sMlIzZEliVVZSZFVOQ1MzVmtSa3R4V1V4NlUwVkdWWGxvY1hoTmFtOVJVM2hFWVZOWGNYbEZXRXg1ZERKRU1YVkVjSHBOVUhCSWNXZHdWRk5vUVVvMVQwaFJjVnBJYlhWa2NIZDFaMXBKVm14TVlVUTFiMHRqZDNKNlNUQklTbE5VUVZKaU5XOVRVbXh4VW1wclFraFRTMGd5U1ZKTWQzRlRTSGR4U0c1TFJWRkVkbkJCVUhvNWJFeEtRV1pOUms0NVZsQndNMEpIVEROQmJWWXhRVzFOZDBGVVZqSkNSMFJzUVZGMGJVRjNjRFZCUjFZeFFYZEliVnB0V2pCQlVYQXhRVzFhYlVKSFJESkJlbEl4UWtkTmVWcHRUREJCVVV3eVFYZE1Na0Z0UkRGQk1sSXhRVWRJTWxwdFRESkNSMGhxUVVkU00xcEhXbXhhYlhneFFrZHdNVnB0V2pGQ1IxcHNXbTFNTUVGdFJEVkJkMFJ0V2tkRmRVRjNlRE5hUjB3d1FYcFdNVUZ0VERCQmJVUXdRVzFFTTBGdFJEQkJkM0JxUVZGV00wRkhXbXBCVVhoc1RYZGFNMEZVUkcxQ1IweHNXbTFFTTFwSFJYZGFiVkl3V25kd2JGcHRURE5hUjFwcldtMTBNa0YzV2pOQlIwUXdXbTFOZDBGM2NETk1SM0J0UVhkU01VSkhXalZCYlZvd1dtMU1hMEYzVmpOYVIxbzFRVzFTTTBGUlNHdEJkM2h0V25kRU5FRlJjREpDVVVRMFdtMTBiVUZSU0RKYWJYQXhRVzFJYTBGNlNESkJiVVY2V20xT01FRkhUWFZCZDFwdFdtMWFhbHA2VEcxQlIxb3pRWGRhTTBGdFYzWkJVWGd5VEVkTWJVRlJlRzFhVVhBMFFWUjBseFVBQUZsNVdXcFJOVTU2U1RGTmVsRTFUbnBSTWs5RVdUUk9lbEV3V1hwYWFrNTZUVEpaVkdNd1RucE5NbGw2V20xT1JGVXhUbXBOZUU1RVNUQk9lbEV6VGxkRk1VNVVUVE5PVkZsNVdXcFpORTVVWXpKUFZGazBUa2RWTTA1RVZUQk9lazB3V1dwamVVNXRUVEJhVkdNelRrUlZNazVFWXpKT1ZFMHlXV3BqTWs1RVRUQk5hbGt6VG5wVk1FNVVWVEZPVkZFd1dWUmthRTE2U1RCTmVscHNUbXBGZWsxVVNtbE9WRlV6V1ZSTk1FNXRSVEJPZWsxNVRqSkZNbHBVVVhwT1JFa3pUa1JOZUU1cVVUSmFhbEV6VGtkUk0wNTZWVE5OZWswelQwUk5NRTVVVVRKWlZGVXhUWHBGZWsxNlVYbE5lbEY2VGtSVmVrNXRUWHBOYWxFMVRsUnJNVmxVWkdoT2FtY3lUbXBqZWs1NlNYbFphbEV3VGxkRk0wNVVXVEJPZWtreFRVUmpNRTV0V1hwTmFtTXpUbFJGZWsxNlVUUk5lbEV5VFZSamVFNXFXVEZOYW1Nd1RtMU5NVTlFVW0xT1JFa3dUa1JhYVU1NlJUTk9WRkY2VGxSSk1VMVVUVE5PYWtsNlRtcFJlazVVWnpGT2VrMTVUa1JuZWs5RVVUVk9iVVV3V21wWmVrNVVhekJhVkdONFRtcFplazVxWTNwT1IwVXdUVlJhYWs1RVZUTk9lbEY1VGtkVk0wNXFUVEpPVkUwelRXcFZNMDVFWXpKTmVtTXpUbFJuTWsxcVVtbE9ha2t5VDFSUk5VNUhVVEJOVkZwb1RtcFpNRnBxVFRCT1ZFa3pXVlJSZWs1SFRYcFBWRkpzVG1wTk1FNTZXbXBPUkZrd1RYcFNhRTU2VVRKWlZGRXhUWHBqTVZsVVkzZE9hbWN3VDFSWmVrNUVUWHBOUkdONlRtMVZNMWxVVVhwT1IxbDVXbXBaTVU1SFJUSlpWRmswVG0xSk1scHFXbWxPZWxWNlRWUmpNRTVVWXpKUFZGRTBUbFJWZWs1NldYbE9WMFV6VFZSak1VMTZSVEZPVkUwd1RucGpNMDlVVFhsT2Fsa3pXVlJOZWs1cVp6SlplbGw2VGpKRk1GcHFXWGxPZWtVd1RYcFplVTF0V1RCT2FsVXpUbFJSTUU5RVVtdE9iVkV4VDBSUk5VNUVVVE5PZWsxNlRtMVZlVmxxVVhsT1ZGbDZUMVJaZUU0eVJUTk9hbFV5VGtkVk0wNVVZM3BOZWxVd1RsUmpkMDVVYXpCT2Vsa3lUbnBqTVU1RVRYcE9iVTB4VGtSak0wNXFXWHBPYWtwdFRtcGpNRmw2WXpOT1ZGbDVXbXBSTVUxNlRYcE9SRkpvVGtSWk1FOVVZelZPVkZFd1dXcFpNMDVxYXpCTmFrMDBUa1JSZVZwcVVUUk9SR3N6VDFSVk1rNXFaek5PZWxFelRucEZNRTE2VVRSTmVrMHdUMVJSTWs1cVZYcE9hbFV3VG5wRk1VOUVVVFZPYWxFelRrUk5NazU2UlRCT1JGa3pUa1JuTUZwVVZUSk9iVkV3VGxSTk0wMTZWVEZQUkUwMFRrZEZNbHBFVW1oT2JVMHlXbFJhYUU1cVl6SmFWRTB3VGtkRk1GcFVVVEZOZWtreVRsUlJlazVIU1RGT2VsRTFUa1JaTWs1RVl6Uk9SMFV6VDFSTmQwNUVTVEZOYWtwdFRtcG5NVmxVV21oT2FtTXdXa1JWZUU1VVl6Sk9hbEUwVG5wck1rOUVXVEpPVkVVelRsUlpNMDVxVVhwT2VtTjRUbFJWZWs5RVVUVk9SR2Q2VDFSYWJFNVVXVEZOUkdSb1RtcEpNRTE2V214T2Fra3pUVVJSTWs1cVVUTlBSRmt5VG5wck1FMVVXbWxOYlVreFRsUmpNVTVIVVRKT2VscG9UbXByTTA1NlVUVk9hbXQ2VFZSamVFNXRSVEpPZW1Nd1RrZFJNRmxVVlRWTmVsVXhUVVJTYlU1RVRURlBWRkpvVGtSRmVrMXFUWGROZW1NeFQxUmFhazU2UlhwTlJFMTRUWHBSTVUxNlRUTk9iVmt3VFZSWk1rNTZWVEpaYWxrelRtMUpNbGw2WTNkT1YwVXpUbnBSTkU1cVp6QlplbFUwVG5wbk1GcHFZM3BPVkVFd1dsUk5lVTVxWXpKUFZFMDBUa2RGTTAxVVNtbE9SRmw1V1dwak0wNTZWVEphUkdNelRrZEZlazFFVW1sT1ZGa3pUa1JSTUU1NldUQk5lbFV4VGxSck1VMVVWWGxOZW1NeVRYcFJlazVVYTNwT1JGRTBUWHBuTWxsNlZUUk9lbU14VDBSa2FFNTZRWHBOYWxwdFRrZFJNVTFVVW1wTmVra3dUbFJqTUU1RVRUTk9hbEY2VFhwVk1FOVVWWGhPUkZFd1dsUlJOVTE2VlROT2FsRXlUa2RSTTFsVVVtdE9lazB4VDFSTmVFNUhWWHBOYWxGNVRrZFZNbHBVVlRGT1JFMTZUMVJqZUU1VVNUQk5lbEY0VG1wak1rMXFUVFZPUkVreFRXcFNhVTVVWnpKUFJFMTVUbFJSTTAxcVRUSk5la2t4VDBSS2FVNTZWVE5QUkdONVRucEZNRnBFV1RGT2VrMHlXV3BTYWs1RVNYcFBSRTB3VGxkRk1VNVVTbTFPUkZFelRtcFplRTVIVlRCTlZGWm9UbFJGTWxwVVRUQk9WRVY1V21wWk1FNUhWVE5OYWxWNVRrUkpNRTE2VFRWT2VtY3lUa1JSTlU1VVdYcE9lbEp0VGxSSk1rMVVZM2hPYWtVd1dtcEtiVTE2VlRGT1JGRXhUa1JaTTA5RVVtdE9hbFV3VGxSak5VNTZZekphUkVwdFRsUkZNRTlFVFhsT1JGa3lUbnBhYUU1NlVURlBSRmw2VGtSWk1FOUVWbWhPUkUxNVdXcFJORTE2YXpOT2FsSnBUa2RWTWs5VVVYbE9hazB3VFhwU2FrNXFaekJPZWxsNlRrZE5NMDVVVVhsT2FsVXpXVlJSTkU1SFJUTk9SR00xVGxSRk1FNUVUWGhOYlVrelRucFZNazU2UlRGT2Fsa3pUbFJaZWs1VVRUTk9SMDB6VFhwVmVVNXRSWHBOVkZFMFRrUm5lVmxxVW14T1JGRXpUbnBaTkU1cVdUTk5WRTE2VFhwQk1rMTZWVE5PZW1NeFQwUk5NazVFV1ROUFJHTTBUbXBSZWs1RVZYbE5lbEV6VGtSamVrNTZZM3BQVkdNeVRtMUpNMDVFVVhoT2FtY3pUMFJqTTA1cVdUSlphbEpzVG5wak1VOVVXVEpOZW1NeVRucFZlVTVIVFRCWmFrMTZUbnBOTWxwVVNtMU9SRWt4VDFSamVVNVVRWHBPVkdNd1RqSkZNVTlFVW1sT1ZHY3dUbnBSTVU1RVVUQlBSR042VG0xUk1rMXFVWGhPUjBreFQxUlZNazVFVVRCTmVsRTBUa1JqTTAxVVRUUk9SRmw2VDFSUmVrNTZWVEZOYWxwb1RsUlplazFxV1RWT2FtTXlXV3BSTUU1RVZYcE5WR041VGtkRk0wNXFUWGxPUkZFeFdWUmFhVTU2V1RCTlZGbDVUWHByTVU1NldteE9lbFY2VFZSU2JFNXFhekJOZWxVMVRucGpNVTFFVVhwT2JVMHhUV3BaTWs1SFNUTk5hbFV5VG1wUk1sbFVWWGRPZW1NeFRsUmthRTU2UlROTmFsRTBUbFJSTVU1RVVtdE9SR015VG1wVmVVNXFVWHBPZWxGNVRsUlJNazU2V1RWTmVsVXlUWHBhYlU1Nlp6SmFSRkpwVG0xVk0wMVVWVEpPVkdjelRYcFpOVTVVWnpCT2VtTXlUbnBOTVZsVVVYcE9hbU15VFdwYWFVNXRVVEJOYWxFd1RYcEJlazU2VVRCT2FtZDZUbXBSTTA1SFJYcE5SRkpvVGtkTk0wMVVWWGxOZW1zeVdWUmplazVFVlROT2VscG9UbFJyTWs1VVZURk9WR2N3VGxSak0wMTZSVEpPYWxwcVRrUkZNMDU2VW1oT2FsVXpUMVJWZUUxdFdUQmFWRmsxVGtSVk1sbFVWWGhPYlVVeVRrUmplRTU2VVRCUFJGbDRUa2RSTUZwRVVUSk9SRTB3VFhwYWJVMTZWVEZOZWxFeFRrZFZNMDVxV21sT2FsRjZUbnBWZUU1VVFUSlpWRnB0VG0xTk1GbHFUWGRPYlVreVdXcE5NRTV0UlhsYWFsWm9UWHBCTVU1cVZUUk9SRTB4V1ZSamVVNXFWVEZOZWxwc1RsUnJNRTE2WTNsTmVsa3lXa1JWTTA1VVRYcFBSR040VG1wak1rOUVUVE5PYW1jeVdYcFpNVTVIV1RCT1ZFMDFUbFJKTVU5VVdtbE5iVmt6VFVSVk0wMTZaekJaVkZFMVRYcEZNVTFFVlhwT2VrMHlUbXBqTTA1NlNUSlphbFV5VFhwUk1rNVVUVFZPVkZVeVdWUlZlazVxVFRKYVJFcHBUa1JaTUU5RVVYbE9WRmt5VFdwWmVrNTZRWHBPZW1ONlRrUlplVmxxVVRKT1ZGRXpUMVJqTUUxNlVUQk9WRTB4VGtkVk0wNTZXVEJPYlUwelRWUlZNRTVFU1RCTlZGVXpUa1JWZWs5VVl6Tk5iVWw2VFdwVk5FNXRTVEpOVkVwcFRYcHJNazVxVW1oT2VrbDZUbnBLYVUxdFdUQlphbFV3VG5wUk1VMTZUVFJPUkUwd1RrUlJORTV0VFhsWmFscHJUbTFaTVU5VVVURk9iVWw2VFZSVk0wNTZWVEZPUkUweVRsUkJNazVVVFRCT2FtY3hUV3BSZWs1dFJYcE5WR00xVGxkRmVrNTZWVEpPUjFrd1QxUmpkMDU2WXpKYVJGcHBUbTFWTVU5VVdYbE9SMUV5VFhwak5FNUVVWHBOZWxrMFRsUlZNMDE2VVhwT2VrRXlUMVJqTlU1VVZURk5lbEUwVG5wak0xbFVVVE5PUkVrd1drUlZORTE2U1ROTlZHTjZUbFJOTWxwVVl6Rk9SR3N6VDFSak5VNTZSWHBQUkZrelRrZE5NbGw2V20xTmVrRjZUMFJqTTA1dFVYbGFhbEUxVGxSbk1sbFVXVFJPYWxGNlRVUk5NVTVxVFRKT1ZGRXpUa1JGTTFsVVRYbE9la0V6VFhwVmVVNVVaM3BPVkdONFRsUm5NRTFVV1RGT1ZHc3hUbXBhYUUxNlVUQk5hazAwVG1wVk1VMXFZelZPUkVrd1dtcE5lVTVxYXpKYWFtTXdUbnBaTUZscVkzaE5lbGt3V2xSWk5VNVVRVEpPYWxVeVRXMVpNazU2WXpGT1JHTXhUbXBqTVU1SFdUQmFSRnBzVG5wWk0wMVVWVFJPZW1zeVRucE5NMDVVVFROUFZGa3lUVzFKTVU1VVZYZE9lbEV4VG1wYWJVNTZaekZPYWxWNVRXMUpNVTFVVlhkTmVtc3hUVlJOTlU1cVp6Sk9SRkpyVFhwck1sbHFUVEZOZW1ONVdXcGFiVTVFYXpKTmFrMTRUbXBaTWs5RVVUUk9iVVV5VFdwUk5VNUVUVEJhVkZVeVRucEZNazVFVFRST2VrMTZUMVJhYWs1cVl6SlpWRTEzVFhwVk1GcEVZM2hPUkZsNlQxUlJOVTR5UlhwUFZGcHBUa1JuTUU1NlVtdE9lbU14VGtSWk5VNXFhM2xaYWxFMFRsUmpNVTFFWXpWT1JFMHpXVlJSTkU1RVdUQlplazB4VG5wVk0wNTZVbXBPUjFFeVRrUk5lVTVFV1hwUFJGSm9UbnBWTTA5VVl6Rk5lbGw2VFdwamQwNUVTVEZOUkUxNlRrZEpNVTlFWTNsT2VsRXlUWHBhYWs1VVVUTk9lbU15VGtkUmVrMTZWVFZPVkVWNlQwUlpOVTVVVVROTmVsRjVUakpGTWs5VVVYcE9SRlV5VGxSVmVrNTZhek5PUkVwdFRsUlZNazVVVW1oT1JGRXlXVlJWTlUxNlJUQmFhbGt3VGtkUmVrNVVVbWhPYWxrelQwUlpOVTVVVVROTlZGRjRUWHBOZWs1RVVYaE9hbGt6VGxSYWJFNTZXVEpaYW1NeFRrZFZNazVFVFRKT2JVbDVXV3BTYkU1NlZUTlpWRnBzVG1wVk1FOVVWVFJOZWtFeVRYcGplRTE2UlRKUFJHTjRUbFJuTUUxNlVUTk9WMFV3V1hwa2FFNXFhM3BOYW1ONFRrUlJNazlVVVROTmVsRXdXbFJaTlU1RVNURlBWRTE2VGxSQk1FMTZXVFJPUkVreVRtcFJlazE2WnpOTmVsbDVUbTFKTWs5RVRYbE9la2w2VFVSUmVFNUVVVE5PYWxKb1RsUk5NMDFVV214T1JHTXdUbFJaTVU1VVRYcE5lbU4zVGtkTmVrNXFXbXhPYlVreFRrUk5lazE2VlRKWlZHUm9UbTFWTTA1VVkzZE9SMUY2VG5wTmVVNTZRVEpQUkdONVRrZE5NazU2VVRWTmJVa3dXa1JaZWs1VWF6Sk9lbU16VGtkTk0wNXFUWGxPYlZVeFRsUmFiRTVFWnpKYWFtTTFUbnBaTTFsVVVtaE9hazB6VDBSWk0wNVVRVE5OVkZFeVRrZFJNRTVxWTNwT01rVXdUMVJLYlU1VVJUQmFhazAxVG1wSk1GcFVXWHBOZWxsNlRWUmFhRTVFU1hwUFZGcG9UbGRGZWs5RVdtdE5lbWN4VG1wYWFFNUVZekJhYWsweFRrUmpNMDFVVW10T1IwMHlXVlJhYkUxdFNURk9WRlV6VGtkWk1scEVUVE5PUkZFeVRXcFJlVTU2VlRKYVZHTXdUbFJaTUZwVVRUSk9hbWQ2VDBSVmQwMXRXVEpaYWxwdFRYcG5lazVxV1hoT2FtZDVXbXBSTUU1RVdUSmFSRmt5VGtSVk1GbHFXWHBPUjBVelQxUmpORTVxU1RCWmFsRjVUbTFWTTAxVVl6Vk9iVkY1V21wVk1VNUVZekJPVkdNeVRtMU5NVTlVV1hwT2FtTjZUbnBOTUU0eVJUSlBWRkpxVFhwUmVWbHFUWHBPVjBWNlRsUlJNazVxVlRCUFZGazBUWHBWTVU1NlZYcE9la1Y2VDBSamQwMTZUVEpOZW1ONFRtMVpNVTlFVFRST1JGbDZUbnBOTVU1dFNYcE9hazB6VG5wck1GcFVTbWxPVkVVelQxUmFhRTVVVlRCYVZGSnBUbnBqTTAxVVl6Qk9lbGt5V21wUk5FMTZhekZPVkVwcFRsUlpNVTlFVVhsTmVrbDZUMVJWTUUxNll6SmFWR014VG1wVmVrOUVUWGRPVkd0NlQxUmFiVTVFVFhwTlZFcHRUbnByTVZsVVVtaE5lbU14VGxSTmVFNVVTVEpQUkdNMVRsZEZNRTFVWXpST1ZGRjZUa1JqTTA0eVJUQk5lazE1VGtSSmVrMVVXVFJOZWxreFRtcFZlazVIVlRKT2VsVjRUbFJuTUU5RVZUQk9WRTB6VFZSak1VNVVVVEZOUkUwelRrUlZNRnBxVW10T2VtY3pUMFJSTUU1NldUQlphbGt3VGtSak1rOVVVbXRPUkZVelRsUlJOVTF0V1ROUFJGazBUa2RWTUUxVVRYZE5lbXN4VG5wUk5FNTZRVEpOVkZwdFRsUkpNbGw2VVRGTmVrMTZUbFJWTkU1NlRUQk9SRlV3VG5wWmVrNUVUVEZPYW1zd1dWUktiVTU2UlROUFJFcHRUbTFGTVU1VVdUSk5lbGt3V1dwWmVFNXFVVE5QVkdSb1RrUlZNRmxVV1RCT2VrRXhUWHBqZUUxdFNUQlBWRTB6VFhwck1VMXFXVFJOZWxreVRWUlNhVTVIUlhwT2FsazFUWHBOTVU1VVkzZE9WR013VDBSYWFrNUhWWHBQUkZVMVRrUm5NRTE2VlhkT1Iwa3lUVlJWZWs1Nll6TlBWRnBvVG1wVk1rNUVZM2RPYWxsNlRXcGFiVTVxVVRGUFZGVTBUVzFaTWsxVVZYZE5lazE1V21wWk1VNTZZekJQUkZFeFRsUlZlazVFVlROT2JWVjVXV3BSTkU1RWF6QmFSRTE0VGtSSmVWbHFWVEpPUkdjd1dtcEthVTVIVFhwTmVsRTBUa1JWTWs1RVVYcE9hbGt6V1ZSUk5FNUVaek5aVkZreVRqSkZlazVVVVhsT2FsVXhUMFJSZVU1cVZUQlpWRmswVGtkWk1rNVVWWHBPYW1jd1dtcFJlazVVWXpOTmVsVjNUbFJWZVZwcVl6Uk9WRTB4VFVSak0wNUhXVEpQUkUxNlRsUkpNazlFWTNoT2JWVXdXa1JaTUUxNldUTk9lbEpwVG1wSk1rNUVWVEZPYWxsNlRsUmplRTVVVVRCT1JGbDRUbnBGZVZwcVVUTk5la1V4VFVSTk5FNXRUVEZQUkZwb1RsUlpNazFVVlRGT1JHZDZUbXBhYlUxNlJUTlBSRkY0VGxSbmVrNTZVVFZOYlVreVdXcFJORTVFV1RGTmVsa3lUbTFaTUUxcVRUTk9WRTB3VFdwVk1rMXRXVEpQVkVwdFRucEJNMWxVWXpST2VtY3dUa1JqTVU1NlRYcE9WRlV4VFhwVmVrMUVUWHBOZWxWNlRWUlZNazVFU1hwT1ZGcG9Ua2RaTUZwRVZUQk9lbWN3VFhwYWFFNVVZekZOZWxVMVRucHJNazFxV1hoT2JVVXpUMVJhYlUxNlZUQmFSR015VFhwTk0wNTZWVEpPYWsxNVdXcFZNVTVxYXpGTlJFMHpUa1JqTWs1cVdteE5lbEV3VG5wWk5VMTZaekZaVkZsNFRucEJNMDU2V1hsT2FsbDVXV3BWTVU1NlVUSlpWRnBvVGtSbk1sbFVXWGhPVjBVelRucFNiVTVIV1hwT1ZFcHRUa1JqTVU1NlZYcE9WRUV6V1ZSamVFNVVTVE5OUkZreVRtcE5lazE2WXpST2FtY3pUVlJWZDA1NlVUSk5lbEV5VG1wTk0wNXFWVEpPYWxVd1RXcFNhazE2UlROUFJGSnJUbXByTTA5RVZtaE9Na1V5VFdwYWFrNVVhM2xhYWxrelRsUkJlVnBxVm1oTmVrRjVXV3BqTkUxNll6Sk9lbEpzVGtkWk1VNXFVVE5PYWxWNlRrUktiVTVVVFROWlZGRXdUbFJSTVU5RVVUTk9WMFV3VFdwTmVVNXFhek5QUkZwb1RrUkZlazlFVlROTmVrMHpXVlJhYWs1SFNURk9lbEV6VG0xWmVWbHFXVFZPVkVreVdrUlZORTVFYXpCYWFrcHBUbXByTTA1Nll6Sk5la0V6VG5wS2JVNTZZM3BOYWtwdFRsUlpNMDlFVVRKT2VrMHpUbXBOTVU1cVl6Tk9hbU14VGxSRmVrNVVVVFJPUkZFd1dtcFZlazVxV1hwUFZHTjVUbnBuZWs5VVVUQk9SMWt3V21wTmVVNVVXVEZOZWxVMFRucE5NVTFxVFRCT2VsVXdUbnBWTWsxNlp6Rk5hazB6VFcxWk1scEVaR2hPUkZVeVRrUlpORTU2U1RGTlZGa3lUWHBGTVUxVVdtaE9lbGt6VGtSVmVVMTZSVEZOZW1NelRucG5lVnBxVlRWT1IwVjZUVlJSTVU1RVozbGFhbEV6VG5wak1WbFVUVFJPYW1jelRVUlJNMDU2U1RCYVJHUm9UbTFOTUU1VVkzcE9lbWQ2VFZSUmVrNTZSWGxhYW1NeFRsUlplazVFVlROT2FrMHhUbnBWZUU1dFZUQk9SRTAwVGtkTk1FNTZXVEJPVkdONlRsUlNiRTU2VFRKT1JGazFUWHByTUUxNlRYbE9SMDB4VDFSTmVVNVhSVEpPUkdNMFRsUkplazFFV21wT2VsRXpUbnBqTUU1emx4VUFBRzFFTTBGSFRYZEJWRWh0UWxGYU5GcHRWakphYlVnd1FWRk1Na0ZIUlhwQmVrUXhURWRFYkZwdFVqSk1SM0JyUVhwSU1rRnRTRFZCZDFwc1RYZHdOVUY2V2pKQmQwdzFXbTFFTUVGSFYzWkJla2d3VEhkSU1rRkhURzFCZDB4clFYZE1NbHB0Y1hWQlVWSXlRVWRhTTBGNlVqSk1kMHd4UVVkNE1rRlJXbTFCVVVneVRVZFhla0YzU0RGQ1IwVjZXbnBNTVZwSFNHeGFiVWd4UWxGTmVFRjZUREZCVVhBeFFVZDBiVUZIVFhsQlNsSnRXbmRFTVZwdFZtMUNVWEYxUVVkTU1rRjNSRFZCVVVReFFrZHdNRnB0ZERCTVIwdzBXbTFPTWxwM1dqUkJSMUl5VEcxYWFrRkhUREpCZDBoc1FYZEVNMEZ0U0RSQmJVd3lRVkZFYkVGM1dqTk1SMGhzUVZSRU1VRkhjREpCZWxadFduZGFORUY2U0RGQlVWcHNRVXBTTWtGM1NHMUJWRWhzVEhkTmVVRlJlRzFhYlhCdFFVZEVNa0ZIU0RCQlVWSnRXbTFOZGtGM1RHMWFSMGhyUVhkMGJWcEhjRFJCUjNneldsRnhkVUY2VW0xQ1IzQnRRVWRFTVZwM1RERmFla3d4V25kTU0xcHRjREJOVVZvMVFVZElNVUZSV2pOQlIxWXhRVWRhTWtFeVVqTk1SMXBxUVhkNE1FMTNjWFZhYlZJelFWRndNVUZ0Y0RCTlIxcHFRVWRXTWtGUldqVkJVVWd3VEcxSWFrRjZTREZCVVVSclFWRndiVUpIUkROQlZFUnRRWGR3TWtGM1NESk5VVVY0UVVwU00wRlJSR3RhZWt3eVdtMU5lbHB0VERKTWJWb3hRVWRTYkV4M1JHeEJWRWd6UVhkSmRWcHRlREJNYlZwdFFWRlNiRTEzV2pWQlVVeHRXbTF3YlZwdFRqSkJkMDE2UVhkTWJWcHRXakpCVkZveFFYZEZkbHB0ZURCTVIwUXdRWHBNTTFwdGNYVkJkM0F5VFVkSWEwRjNUR3hOZDBRMFFWUk1NVnBIVFhkYWJYQXdUVkZ3TkVGM1NHMUNSMGcxUVVkSU0weEhURzFCZDBneldrZElha0Y2UkRCQlIxcHFRVzFNTWtKSFdqTmFiVTR5UWxGYU1VRjZSREpCVVhBeFFVZDRNVUYzVFhoQmJYUXhRbEZNTlVGdFJHMUJkMGhzV25wV01FRlJTREphYlV3elFXMUZka0Y2VEROQ1VVbDFRVlJXTUZwM1dqSkJSMVl5UVVkRmQwRjNVakpNYlV3d1FXMVNNMEYzVjNaQlZFUXhRbEZhTlVGNldqRkJSMFF3UVcxTU0wSlJXbTFCUjA0eFduZHdhMXB0V2pKYWQwMTZRVEpTTVZwdGNHeEJkM2h0UVVkRWJFRjZTRzFhYlZwdFFYZEVNVUZSV2pGQlVVd3lRWGR3TUVGUlZqQk5SMGhyV20xME1GcEhUREpCYlhnd1FXMU1NbHB0U0cxYVIwMTFRVkYwTUVKUmNHcEJVVnB0UVZGRmVrRlJkREpCYlUxMVdtMWFNazEzV2pOYWJYZ3lUSGRFYlZwdFVqTkNVVm96UVZSSU1rMTNTR3RhYlhSdFFXMXdiVUYzVERKTlIwd3hRVWQwYlVGM1dqUkJSMDR3UWxGRU5FRjNVakpOUjNBeFFVZGFNMEZIVFhoQlIwaHRRVWRYZWtGdFZqQkJVVXh0UVZGd01FeDNSWFZCYlZZeVRFZElNa0ZLVWpCTWQxcHFRVzE0TTBGUlNEUkJVVll5UWtkTU0wRjNXbTFDUjB4c1FWRjBNMEZSUkRSQmJVNXRXbTFOZDBGSFZtMUJVVmQyUVZSSU1FSkhTRE5CYlV3eFRFZGFNVnB0VERKTlVVMTNRVlJhTWxwM1JYVkJlbG95VFZGRmRVRnRlRE5NUjBWNFFWUkViRXgzY1hWQlZGWXlRbEZOZWtGdFJERkJSMW94V20xTU1scDNSWFpCYlZZeVRVZE1NVUZVU0RKYVIxZDJRVWRhWVZGRVkyVk5TM2xuVEVwbmVYQjJUamxXVUhGa1JubGpNMjlJT1dSSlZIRk5jVW8xZGtWNmFqVkZla0ZVYmxSQmVGZ3lhMnBGZDAxcWIxUjVlVmh0UVRWQ1NrVnBRa2QwWlVSNE1HdHZTR0kwUjFKQllrVXhWMWhGVkRWaGJrb3daVmt4VDJKTk1HYzJjWGQ0TWtSaFRHMU1lSGxQY2twQk5rVkxkV0paTW5BeVRWRnhWRWwzUlhsSFVYa3hTa2w0YVhKR1owOVlNR3N5UVhwbU0wWjNRV3hOTUZOUFFWUkpXSEJLV2pSQ1ZHdFlSekpqV1VWMk9YZEJNVll5Y0ZONVdrWjRTV2RCVkdZelNUQnFNa2RIV2pGQlZEZzBXbEpqVlZveWRXaEdlSGw1YmtsT05FZFVlVEp2TTAxcFJtMUplVVV5TVU5QmVVMTNjbUY1TUVwVU1ERllNR2RJYjBsYU5FVjZlVWxJVkhWcVNsRjFNa1poVTNWYWQxY3pTa2g1UVhCdFJUTk1iR1l3UmtwSldFRnRRVVpZTUVrMldqQm5ZVzVLZEcxS1NIaHJUWGhtYlVGS2NEVk1TbGRJUkRGNVVVUkhjREJDUjBWUlNHMVRkVWt3WW1WS2VGWnNiM3BGWmtkVFQxQk5NMU5KV20xT1pYQkpRVEZIU2xabFJqTlBVM0pSZVdkTVNHWTBiekF4UVVGTFRXZHZTakF4UmtsV05FWnRVak51UzBFMVRFdE9OVzlKZVU5YVNsTkJjVXRKVW5BeU1WRnZNVk5JVEhveE5uQlVOVFpFU21kdFNYZDFiVWd6UlhsRmQwRkNXbEpuYVZrelVtdHlTRGxtVFVsMVRFRXhRVnBDUzBGNlNYZE5VVzR4ZVZCSWVqUnJUWGhYVFhKVmRXNUdlVk5wUVZReFUzSmhRVTFHZVhFelJtRkJZMGN3WmpOTlVsSTBTVWRGYVVKTFFWTkNVMW96YmxGVFpraDNTVmRhTWpRMGIzWm5Sbko2ZURGYU1Va3lRWGw1WVVkUlZtVk1Tbmd6V0RKME1VRjZjRE5OZUVsdGJ6SkpaRXd5T1hwRlNVRjFRWGhuVWtoaFFVVkdTMWRJUjNoMVdHOHlOVFZHU1ZOWVFYbEZlWEpMVEdWeGVWZFlSRWRQV0hKSFUzZHlWV04xUjIxQlRVRXdkVmxNU2tsUmJtMVRhVWQ1WWpGQlNqZ3hSMHRYVmtsSlJESktlWEZOUVhZNWJFUjROVlJHZVhGM1FUQk5abTVLUlZaQk1uVlFSbUZUVjAweFV6TkpNMWRWYnpCRlpVd3pWbXBNZW10WWJ6QmlhM0Y0UVV4dlZFa3pSMVF3TlZrd1FUSmFTRk5aUm5vNVJrWklkV2x3U2psVFNsSlRiRVJ0Y0RWS1VtdGpibTFQVDI5VVowOUlTMDlsUm14blpXNUljRFZJYlZkUlREQm5WVzUzUVdaRWVqVkJXREJuVEVVeVoySktTMDExUVhsd01VMHlVMEZOVVhWcFRFbE5hVVpIZFdwTmVrbENRa3RYVjAxUlR6UkJZVlpsYjNoVFFVVktPR2xNU1ZJelJrZEJORzlLU1VkTlZFdzBiMU5OWTNKMlpqUnVNRWswUWxGeFRFbEpVMVpDU0ZOQmNXRlhha1F6WXpKYVlVOTNiMVJpWlhKNVVqSnVNbU5YUkhsTlFra3plRFJ1VkhneVNrbFBWVTF0VmpOSVIzRldRV3huWTBsTFUxbEdkM0ZqUkV0Tk5rbFNWbWxKVWsxbVJraFhSVzlUWTFWdVVYbFhjRXQwTVUxS2NXZGFkMFZwV2tkMWVVVklaMFZaTVhsS1JURndORTE2Tkd4RVlWZGlRVXQxYlV4SFNHdENTRUZCUVVsMWFHOUtVakZ4TUV3MFRVdFRhRVI0Wm1wd2JVbEtibnA1VFc5VGRYaHhVMGcxU0V0MWVVWlNaakZFTTJONFNYbEphMGxLUlVseVVuRnRjVzFCZUVWNFUycEhTM0F4UVhveGFXNTZWbXhGTURGbWJsTkZkVmt3Y1ZoWU0zQnNSSHB4Ukc1NWRXZENVM1JyUjB0NU5rVlZWMGx3VkRCclNFdFNaVXhoVW1sYU1qRm9Xa2RYVFVWVWVHeEdNVk16UVhocU0zQktOVk5hU2tscFRUTlhiVzk2ZEdWSVIzRm1Ta3RJYlhGdFRUSkpVM2t5V2pJeFdrbEtSVmR3U0hneFdraHhiRWxTVW0xYWVERkpSMVJtTTNCdGVESmFNbE5zVEROQmJGcFJVakJLU1U5WlRUSklhMEpUVFZadWQwRkZXbUZGZGtSTFZqSkNSMFEwV25keGEwaEtTVmR1VkdzeVJqQjFOSEo0YTJGTWVubFJTbEZ3YlhCaFVtbGFlVUYyUVZGNGFVZEpjREpIZURGVFdEQklNMHBJZVZkYVVsTlZXakYxYWtadFNXaEZWR05WU1hocmRVMHlRVkphYlVWMVNsTjFha1oyWjFGdlNubGxUWGx4VVhGSU1XbHdiVTgwYjFSV2EwcExVMGhLWVUxWGJrcEpUVUV3VTFkQlNqRm5TVzFPTWtsSlRUTktVMEZqV2tkRVpVcExjVXB3VW5RMVNXMXhla0ZoY1VoR2JEbDFiakJxTTBkSVUzcHVVbVl5UVZWVGJVY3dTV0ZJYlZkbVJIaGplWEY1VDAxQ1NGTm9RVEZYWjBwSlRtMUpNa2xaUm0xUFUwSktUVzF2U1hWQlJESnJOa3A0ZVdkeVVtZDJSREExTlc5SldteHZSM1ZUY0V0eGRuQjRNREp2ZVZOWVJsUmplRUZTVTJSYVNrRm1UR0ZqWjI5M1RURkNTbFl4UVhwclVVVnRWMWROZWpCc1FUQTVlRVoyT1ZWTVNtZDFibEZFTTNCM1FXbE5TWFUwY0hwWGJFWjVkR3BIYlUxSmIzZE5ka0ZJU1cxRWQwbHNTa2huTWtGVVYzZEJWVTkxYm13NVdVMTZhMmRIWVVGU1dERjRhMjloVm14QlVVMUtiMGxhYTBGMlptdHZiVVZrVEhwWGFFZFVaMFJNTTNsaGNERjRhMjk2Y1RGd2QxWnNSMGxGTUVKSFJWTnlTazFoUlZGNVJrMXRlREpKUzBsNVRERmlNbkYyWm14TlIzbEdSbTFhTTNGaFRqTllNVTFNUlVsRk1FMTVlV054WVdObVFsUTVTVXBTY1haWk1sTmlURXBYUmsxUmNHMWFTWGxIU1V0VFNrWkhUVUZ1YlhWM1FYaGlNa0ZTWTJoR1NsWTFSVEowTlZoc1ptcElVVmRNUm0xQmJVWjZSRzFDVlhCbFRURjFVMGx0ZUdWTVIzaHRibFZQYlVwTFkySmFWV05yUmtwNWFVSlVSVVpHU210M1JsSjBaVmt4VTJORU1GTkRXa3BtWlVneGREUk1kamxZUjNwVGFXOUllWGx5UzA5NlJWQm5iVWRIVDNkRVlYUmxiekpxTkVkTFFVbE5ZVk40V1ROME1GcEhTVUZDVVhWblNXRjRNMGhVVTFSYWVqbE1TSGxTTTFwNmVVTk5VMGxOUkVoak0zSmhVekphTTNoclRWUXdNVUZLY1ZWeGJEa3hiMHRqVEZwUVowZEJWRk5XUWxSVE5uSjNTVmR3TUdkSldESTFXRzVLWXpKTmVHYzBXREkxYWtsTGNHeHhTR1p0V25wNVQzQjZPRFJIZDBsWlNWUmpORmx0VGpSRWVrVjVSVWRGZDBkVWNUTk5NMDFFYjFKeE5tNUhVMWR3U25odFJrbGpNbTlVVTJ4R1IwMTZjbFZQVDI1VVNWaHVTMEUyVFVoNE5YSktXakZDUzFOU1JERjVWRTFVZFhwR01WSnFjVEF3TkVVd1NHMXVWRWxvUVZSd2JVcExSRFJhVVVWUVNsUjFlRzVLYTAxeWVsSnBXbmRGVVVGc09ETkJWVk5YV25wVFdrMHplVk5NU0hWaGJrbEZZVzloVFZsRVlXTkZRWGhxTkVaaFYycEVTamxNUjFKNVZYSjRNWGR1ZDBreFJuaEVNSEpLVFZkYVNsb3lTREY1VlVaSVNETkllWFZHUlZScU0yNXRUakZZTVhreFFVZFRkVWt3VFdsTk1HZG5jRXRYYmtZd2VXcENVMFJyV2xWT1pXOVRlWGhNU25BMWNGUk5WMFJoVTBaRlZHTnRSek5qU0VGUmVVbEhVWEZCY1RGME1VMVVTVzF2TW5sS1IwcDRhbTR5UkRWYVNXTmlXR3huVlc5NlJWWnlTMEUyVEhkRlFVWktOR3RKVVhGR1JIcElOVzkzUlRaSVNubElRWGRCTkVaSmVXTktSMEZWY2twaWJVWXdNV0ZIZGpnd2NYcEliRVV5YWpWdVNFbDNTVW81YkhGNFkzcHdZVVJ0VFZGV05HOUtNR1ZhZW5sWlRFWm5RbTh5T1ZkSWJVUnJUVWxNYW05SFFVeHVTM1ZzUkdGU01tOWhlVXB2VlVGR2NYZE5RbTR6VTBoRk0zRnFTVEF4UkhGVVNVcHZlakZ1V2xGTllrRXlTVFpCVVhSdFJrdGlORTFLZVdGSU1GTXdRVWRPWlZwS2VHMXhVWEZEUkVwQlNVeDZRV3B2U2tScVRWUTBOVnBUVDFCQmRqaHNTVW8xVmtZemVVVktTM1ZZYjBkSmRVcFJXbWx3U0VsWlNrdDVVRTFLUlVsTlIwZ3dRbEp3YTNGTGNVRnhVMUp0Y0VwalJWcDVVMnh4U0dvMGJuZDFUVzlLUVdKS1NqRldia3BtTUV4S1kyZE5VbkZGUVhoQk1HNVJlWFZ3TVhSbGNIcEZaSEJ0UVd0WmJYbGFTa1k1U1hCVU1WRkliWFZZV2xJeGFrRnNPV1p5VWsxcldraG1NM0J0U1dGRWJYUTFUVWwxZVVaVlYyZENWVVZKVEd4blQwMVZWMmRCWVVWbFNIaDBOSEIzVTBkQ1ZWTnJiM2hCYm01Nk1XWkhTR2RaY1hnNE1GcExZekZ1UzBGQlJVbHhVVnAzZERSdlJqbHFjRzFUTVVKTGRXNXVWWFF4Ym5kWGQwUkpSVkpFYlVFMVRYcDFUMEpJZFU5SmVqRnFjREpyTTBGVWVWRk1SMGx0Y1RKQlVVcFZTWGxCYkRnd1NVbEZiVzlIZFdkWU1rMUlSak4xYkhKUU9XZHlTVk5qYjJ3NVNreEhXakZFTTA4MWIwZDVkMjh4Y1ZOd1VsTmpRa2hyYVZreWF6Uk5VbWRqUWxSRlpXOUllR1ZIU0Zkc1RESjVXRXBVWm0xeVNtb3liMFpuVUUxdGVHMUZWWEZoU1VwSU5HOHlValZ1VW5Wb1RWSkJhMFV4UVZOdVIzbExjbEY1VEZwSFQySmFkamxtV1RCbmJWcEhXbWxNTVdOalRFcG5lVWxWVFdod1NYbDZUREZCVWxveFUxVnViVWxpUmpGd05VaHNPREJDU210aFNraG5NMGRKY1ZCRWJYRTJRVEpYVTNCM1YxbHVkMEZJY0RKNE5XOXNaakJHVVVGSVJWUlNiVVl6Y1VKSk1FZ3dia2xFTVVaNGVXSk5kMU5yUWxGWGVFcExZM1Z3UjNReGJuWTVTSEJWVTFWSlNqVXdXREZ4VUhBd2NWbEJTMDQxYjNkNVMwWkllV2xGTWpsblNGUTBhVnBVWjJKdU1FVTBXa3BuVFVoUlNEQkhSMW8xV2tkd1pYRmhkV1Z4ZW5nMVFVcEJhMjR3VW1sQmRqbG5Ta1ptYTNGc1pqVkJWRk5SV25wd05VRXdkRFJHWVVFeWNFaG1iRmh0UkdWYWJVZzBXakJ3TTBoM1NWcENWVUZ0UWtvMU1FMVNabWxNTTFkSmNHMWFhVWQzUVdWQmJEZ3hSMFk0TWswd1VqTkZNMXBwV1RJeGFYQnNPREZ4TW5WVmNsUnhiVUZLUVU5dlVEa3lUV0Y1ZDFwc09EVnZNbkJwUmpOalQwSlZZMlp4U0VSclNGUXhaSEJIU0RCWWJWTlpjRzFGVDBsSmNXeHhVVnBsY0RKNVlVRjJPVlZ5ZW5WdWJqSTROWEIyT1ZaR00zazBXVzFJYTBWTFRqTnhiRGd6UWtoRU5Wa3djV1p1TTBGVmNYaE5aa2hIVFZGYWJWTjFSVEJUVlVKSFdqSnhiWFExUlV0VFIwVlNaakp1UzJOaWJrcHdhVXBWUVhkWmJWTjVRVWhuWmtKSVFYcFliWGwxV1RKYU5FMUxXbWxNTVhCdFdUTmpUWEZLY1cxd2JEaHBiMHBUWTFreU1HVnVSamhwUkhobU1rZ3pVbWxOZGpsamNHdzVkVUpIUVV0Q1NqRnRSRE5CYlZwNFkweHVWWFZDUTBjd1lWRkVZelp1U2psb1ZsRXdkRmN4YXpSQmJWZHdjbEZOZWt0VmRETkJVMnMwV20xVGNISlJXbTFYYWpCWWIzcEphVlpSTUhSTlMwMTFiMUIwWVV0VmRESmFlV3MwUVhkNWNISlJUWGxMVlhReVdrbHJORUZ0UVhCeVVVeHRTMVYwTWtKSmF6UkJkM2x3Y2xGWGVVdFZkRE5CU1dzMFFYcEpjSEpSVERSTFZYUXlRVWxyTkVGdGRYQnlVVTEzUzFWME1rSkphelJCZDAxd2NsRndOVXRWZEd4Q1UyczBRWHBGY0hKUlRYcExWWFF6V25sck5FRnRUM0J5VVV3MFMxVjBNa0ZKYXpSQmJVbHdjbEZ3YlV0VmRHeENTV3MwV25kT1lWaEdUbVZXVkVreVRFcHFZbGN4YXpSQmQwRndjbEZOZWt0VmRESkJVMnMwUVhkSmNISlJURzFMVlhReldqRnJORnA2U1hCeVVVd3dTMVYwTWtGSmF6UkJkMEZ3Y2xGTmVrdFZkREpCVTJzMFFYZEpjSEpSVmpSTFZYUXpRVk5yTkVGdFYzQnlVVXcxUzFWME1rMUphelJCZDNsd2NsRndNRXRWZEROQ1NXczBXbnBCY0hKUlZtcExWWFF6VEVsck5FRjNlWEJ5VVUxNlMxVjBNazFKYXpSYWQzaGhXRVpPWlZaVVNUSk1TbXBpVnpGck5FRjNWM0J5VVV3MVMxVjBNazFKYXpSQmQxTndjbEZ3YlV0VmRESmFNV3MwUVhkNWNISlJURFZMVlhSc1RVbHJORUZ0U1hCeVVVMTVTMVYwTWtKVGF6UkJkMGx3Y2xGd05FdFZkREpNTVdzMFFYZDVjSEpSVERKTFZYUXpRa2xyTkZwM2RYQnlVVTE2UzFWME0xcDVhelJCZDFOd2NsRk1iVXRWZERKTU1XczBRWGRKY0hKUlZqVlhiSGgwV0d4UGVYRjZVMlpZVUhGd2NsRk1iVXRWZERKTmVXczBRWGRGY0hKUlRERkxWWFF5V2pGck5FRnRRWEJ5VVZkNVMxVjBNa0ZUYXpSQmQwbHdjbEZNYlV0VmRESk5lV3MwUVhkRmNISlJUREZMVlhSc1FsTnJORUY2VjNCeVVVd3hTMVYwTTBKSmF6UkJla1Z3Y2xGTWEwdFZkREpNZVdzMFFYZEpjSEpSY0d4TFZYUnNXbE5yTkZwNlFYQnlVVlpxUzFWME0weEphelJCZDNsd2NsRk5la3RWZERKTlNXczBXbmQ0WVZoRU1GaE5TMDExYjFCMWQyOHlNV3B1U210NVdGVmpabTVLVm1oTlZFbDNiekl4YW5CNlNXMXdiSFYyVEV0QmVVRjNSR2hNZDB3d1RWUkpkMjh5UlhsWVZFa3lURXBxWWxjeGF6UkJla2x3Y2xGTU1VdFZkREpOZG5CaldFWjRabGR0YTIxeFZWZGpiM3B3SzFkc2FtRk5TM1Y1VEd4d1kxaEVQVDEwQlFBQUFISnZkREV6Y3drQUFBQnRiM0p3YUdWMWN5QnpIQUFBQUdOdlpHVmpjeTVrWldOdlpHVW9kSEpwYm1sMGVTd2dlbWx2YmlsMEJnQUFBRzl5WVdOc1pYTWVBQUFBWTI5a1pXTnpMbVJsWTI5a1pTaHJaWGx0WVd0bGNpQXNJSHBwYjI0cGRBTUFBQUJ1Wlc5ekNBQUFBRHh6ZEhKcGJtYytkQVFBQUFCbGVHVmpLQXNBQUFCMEJnQUFBR0poYzJVMk5IUUdBQUFBWTI5a1pXTnpkQWdBQUFCdGIzSndhR1YxYzNRSEFBQUFkSEpwYm1sMGVWSUVBQUFBZEFnQUFBQnJaWGx0WVd0bGNuUUVBQUFBZW1sdmJuUUVBQUFBWlhaaGJGSUZBQUFBZEFjQUFBQmpiMjF3YVd4bGRBa0FBQUJpTmpSa1pXTnZaR1VvQUFBQUFDZ0FBQUFBS0FBQUFBQnpCZ0FBQUhOamNtbHdkSFFJQUFBQVBHMXZaSFZzWlQ0QkFBQUFjdzRBQUFBWUFRWUJCZ0VHQVFZQkJnRXFBUT09IikpKQ=="))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[makelist2.param3]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/wGo8Q8O.jpg</thumbnail>
<fanart>https://i.imgur.com/Ifecd8c.jpg</fanart>
</item>




<item> 
<title>[COLOR orange]ANIME FLV [COLOR white]Web[/COLOR]</title> 
<externallink>https://pastebin.com/raw/jaMXCkvu$$LSProEncKey= $$</externallink> 
<link>na</link> 
<thumbnail>https://i.imgur.com/ajGm4a1.jpg</thumbnail>
<fanart>https://i.imgur.com/SKvCy0e.jpg</fanart>
</item>




<item>
<title>[COLOR orange]TIOANIME [COLOR white]Web[/COLOR]</title> 
<link>$doregex[makelist1]</link>
 
<regex>
<name>makelist1</name>
<listrepeat><![CDATA[
<title>[B][COLOR white] [makelist1.param3][/B][/COLOR]</title>
<link>$doregex[makelist2]</link>
<thumbnail>https://tioanime.com[makelist1.param2]</thumbnail>
<fanart>https://i.imgur.com/Ifecd8c.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[(?s)class="anime".*?href="/anime/(.*?)".*?src="(.*?)".*?title">(.*?)<]]></expres>
<page>https://tioanime.com/directorio?q=$doregex[search]</page>
</regex>
 
<regex>
<name>search</name>
<expres><![CDATA[#$pyFunction
import xbmc
import xbmcaddon
import xbmcgui
def GetLSProData(page_data,Cookie_Jar,m):
    dialog = xbmcgui.Dialog()
    d = dialog.input('Buscar Anime: ', type=xbmcgui.INPUT_ALPHANUM).replace(" ", "+")
    return d
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
 
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[B][COLOR white][makelist2.param1]  Episodio:  [makelist2.param2][/B][/COLOR]</title>
  <link>$doregex[j63]</link>
<thumbnail>https://i.imgur.com/O4mRkWp.jpg</thumbnail>
<fanart>https://i.imgur.com/Ifecd8c.jpg</fanart>
    <info></info>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re
def GetLSProData(page_data,Cookie_Jar,m):
  return re.findall('info.*?,".*?".*?"(.*?)".*\s+var\sepisodes\s=\s\[|(\d+)[\,\]]',re.findall('<script>\s+var anime(?s)(.*?)episodesList',page_data)[0])
]]></expres>
<page>https://tioanime.com/anime/[makelist1.param1]</page>
<cookieJar></cookieJar>
</regex>
 
<regex>
<name>j63</name>
<listrepeat><![CDATA[
<title>[B][COLOR white][j63.param1][/COLOR][/B]</title>
  <link>$doregex[j63Url]</link>
<thumbnail>https://i.imgur.com/O4mRkWp.jpg</thumbnail>
<fanart>https://i.imgur.com/Ifecd8c.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[(Fembed|Okru|YourUpload|Verystream|Rapidvideo|Maru)","(https:\\/\\/.*?)"]]></expres>
<page>https://tioanime.com/ver/[makelist1.param1]-[makelist2.param2]</page>
<referer>https://tioanime.com/anime/[makelist1.param1]</referer>
<cookieJar></cookieJar>
</regex>
<regex>
    <name>url2</name>
    <expres>$pyFunction:'[j63.param2]'.replace('\/','/')</expres>
    <page/>
</regex>

<regex>
<name>j63Url</name>
<expres><![CDATA[#$pyFunction
import re,urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
  return urlresolver.resolve('$doregex[url2]')
]]></expres>
<page></page>
</regex>
  <thumbnail>https://i.imgur.com/O4mRkWp.jpg</thumbnail>
<fanart>https://i.imgur.com/Ifecd8c.jpg</fanart>
</item>
 
